tomodachi microservice microservices framework library asyncio aws sns sqs amqp rabbitmq http websockets easy fast python service code codes web-services functions function functionality message messages value values run running example examples available event-based-messaging dockerized http-websockets-rabbitmq-amqp decorated decorate decorators decorator base environment development container containing locally local events docker-great-ways intervals schedule scheduling scheduled days day websocket developer-version bash specified-interval transport transports additional additions sub nomad oscar branch way set sets setting generated project projects specify specifying build building cron methods method requests request unhandled debugging versions coded fix fixes fixed added improved improvements improve update updated updates exceptions decoration files file github http-websockets type types typing depends dependencies dependency dependant calls testing tests test support supported values-depending responses response log logging logged exception-debugging errors aws-sns-sqs correction corrections corrected correctly error-handling invoked invoke invokation invokers invoker middlewares middleware corrects-issues working work worked works invoking-methods-called microservices-library releases release-schedule scheduler hinting hinted data better like likely new module handle handles ways caused causing causes cause developing solved issue install installation installed packages package use useful uses x-solves relative related specific imported-modules optionally-specify protocol protocols settings queue queues docker arguments argument output outputs outputting environments aiohttp-aiobotocore optional option options endpoints endpoint imports import access accessible ignore ignored ignores user enveloped close closed enveloping-method debug content catching catches print-stack prints changes change changed smaaland