tomodachi tomodachi microservice microservices framework library asyncio aws sn sqs amqp rabbitmq http websockets easy fast python service code code web-services microservices microservice python function function functionality message message value value run run example example available event-based-messaging tomodachi dockerized http-websockets-rabbitmq-amqp decorate decorate decorator decorator base environment development container contain locally local sqs event docker-great-ways interval schedule schedule schedule day day websocket developer-version bash specified-interval transport transport additional addition sub nomad oscar branch framework way set set set generate aws project project specify specify build building cron method method request request unhandled debug version service function function functionality code code cod fix fix fix add web-services improve improvement improve message message example example python update update update exception decorate decorate decorator decorator decoration file file github base additional addition http-websockets event-based-messaging type type type depends dependency dependency dependant microservice version call run run test test test support support values-depending response response log log log exception-debugging tomodachi error aws-sns-sqs correction correction correct correctly developer-version transport transport websocket error-handling value invoked invoke invokation invokers invoker middlewares middleware corrects-issues work work work work invoking-methods-called microservices-library release release-schedule schedule schedule scheduler hint hint data available well like likely new module handle handle way way cause cause cause cause development develop solve issue install installation instal package package use useful us x-solves specify relative related generate amqp specific locally local imported-modules optionally-specify protocol protocol specified-interval set set set setting request request queue queue docker dockerized argument argument output output output environment environment aiohttp-aiobotocore optional option option interval branch nomad oscar endpoint endpoint import import access accessible ignore ignore ignores build building user envelop close close enveloping-method cron container contain debug content catch catch framework print-stack print event change change change day day smaaland