{"aflc/editdistance": {"git_readme_keywords": "algorithm hashable object support license implementation install install several distance object provide benchmark ipython support iterable distance library distance editdistance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "omerucel/basitapi": {"git_readme_keywords": "durumlar metodlar gondermekle kullanm baglant verebilirler basitapi parametreyi kullanabilirsiniz method parametresi gondermekle kstlandrlabilirler bilgisine baslgnn ezilmesi ozellikleri gereken ozellikler baglantdaki kodlarna kullanabilirsiniz github parametre kullanabilirsiniz kullanm istemciler baglant temelli durumda formatlamanza github uzerinden gonderdiginiz method ayarlamak istemiyorsanz ayarlanabilmekte kurulum gonderilmekte gonderildiginde kutuphane yantlar asagdaki olusturmanzda uzerinden kurulum islemler yurutulur calsabilmesi istemiyorsanz baglantlarnz baglantdaki method method parametresindeki parametresine vermekte formatn ayarlamak basitapi restful sundugu", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "durumlar metodlar gondermekle kullanm baglant verebilirler basitapi parametreyi kullanabilirsiniz method parametresi gondermekle kstlandrlabilirler bilgisine baslgnn ezilmesi ozellikleri gereken ozellikler baglantdaki kodlarna kullanabilirsiniz github parametre kullanabilirsiniz kullanm istemciler baglant temelli durumda formatlamanza github uzerinden gonderdiginiz method ayarlamak istemiyorsanz ayarlanabilmekte kurulum gonderilmekte gonderildiginde kutuphane yantlar asagdaki olusturmanzda uzerinden kurulum islemler yurutulur calsabilmesi istemiyorsanz baglantlarnz baglantdaki method method parametresindeki parametresine vermekte formatn ayarlamak basitapi restful sundugu", "pypi_keywords_clean": "rest api django", "rouge_ref": "rest api django"}, "timofurrer/pysingleton": {"git_readme_keywords": "decorator tuxtimo version install install pysingleton version singleton", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "nhfruchter/pgh-bustime": {"git_readme_keywords": "interface current authority official standard everything python negley current location restrictive initial register account particular output liberty station wrapper module pghbustime official interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "TUW-GEO/repurpose": {"git_readme_keywords": "installation package specific version temporal resampling adpation citation repurpose repository pyscaffold contribute happy development software publication project information pyscaffold branch repurpose similar output package installable recommend environment several change representation follow support temporal regular additional information development recommend conversion branch package version module experimental reproducibility function resampling module datacube zenodo enough submit access research artefact repurpose package request accept feature branch support spatial spatial resampling repository account", "git_description_clean": "routines conversion image formats time series vice versa", "git_keywords_clean": "", "pypi_description_keywords": "installation package specific version temporal resampling adpation citation repurpose repository pyscaffold contribute happy development software publication project information pyscaffold branch repurpose similar output package installable recommend environment several change representation follow support temporal regular additional information development recommend conversion branch package version module experimental reproducibility function resampling module datacube zenodo enough submit access research artefact repurpose package request accept feature branch support spatial spatial resampling repository account", "pypi_keywords_clean": "", "rouge_ref": "routines conversion image formats time series vice versa"}, "mverteuil/widget-party": {"git_readme_keywords": "quick available entry determine suitability stable version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "quick available entry determine suitability stable version", "pypi_keywords_clean": "", "rouge_ref": ""}, "/reggie": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "maintainer build status available available management system branch registration management request release coverage status documentation available documentation status", "pypi_keywords_clean": "", "rouge_ref": ""}, "crs-support/ftw": {"git_readme_keywords": "attack rigorous modsecurity response extensible baseline ruleset positive negative directive integrating purpose project installation trigger execution framework ground agreeable baseline environment continuous integration announcement repository typing ruleset baseline request common agreeable modsecurity version repeatable reading", "git_description_clean": "framework testing wafs ftw", "git_keywords_clean": "waf modsecurity owasp", "pypi_description_keywords": "", "pypi_keywords_clean": "waf", "rouge_ref": "framework testing wafs ftw waf modsecurity owasp waf"}, "/path": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "/steelscript-stock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript application framework technology steelscript collection steelscript application installation framework steelscript", "pypi_keywords_clean": "", "rouge_ref": ""}, "eofs/aws": {"git_readme_keywords": "fabric execute program amazon ssh access balancer minimal configuration fabric documentation command installation configuration support installation command specific fabfile elastic fabric combine mybalancer fabric documentation necessary project provide environment information command amazon access fabric remote utility program custom fabric fabric command different motivation interface specific manage fabric function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "akoumjian/datefinder": {"git_readme_keywords": "support datefinder extract datetime object installation convert datetime document travis likely datetime datetime object package extract version automodule datefinder", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support datefinder extract datetime object installation convert datetime document travis likely datetime datetime object package extract version automodule datefinder", "pypi_keywords_clean": "datetime parser nlp", "rouge_ref": "datetime parser nlp"}, "mobiusklein/glypy": {"git_readme_keywords": "monosaccharide classify structure analysis comparator canonical collection substructure similarity enrichment analysis database functional download glytoucan perform substructure glycobiology representation generate glycosidic structure building example evaluate structural cleavage retreive biological particular nomenclature glycoct configurable glytoucan manipulate traverse variation analysis synthesize annotate topological comparison synthesize possible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "glycomics glycan carbohydrate glycoinformatics glypy glycosaminoglycan", "rouge_ref": "glycomics glycan carbohydrate glycoinformatics glypy glycosaminoglycan"}, "/pyfuzz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "italian japanese language chinese current common portugese russian english finnish russian serbian hebrew italian library pyfuzz pyfuzz japanese russian", "pypi_keywords_clean": "", "rouge_ref": ""}, "mercadopago/mercadopago": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "authentication colombia generic mercadopago resource mercadopago payment customer integration checkout configure address venezuela colombia", "pypi_keywords_clean": "api mercadopago checkout payment ipn sdk integration", "rouge_ref": "api mercadopago checkout payment ipn sdk integration"}, "samuelcolvin/devtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "align center python information import numpy import debug install python import importerror b python debug iceberg example available python command python import modify available output", "pypi_keywords_clean": "", "rouge_ref": ""}, "kelsoncm/python-brfied": {"git_readme_keywords": "permission noninfringement software distribute sublicense express substantial warranty documentation limitation liability restriction publish distribute fitness particular merchantability fitness copyright connection software validate software software contract", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python br brazil brasil model form locale", "rouge_ref": "python br brazil brasil model form locale"}, "stdlib/lib": {"git_readme_keywords": "full nassri ahmadnassri response content development workflow library product package available workspace publish visible unlimited access library service specified empty right development keep track enjoy happy scalable serverless development structure project folder function service library public single intend build brianleroux ahmad documentation build response params service project chadfowler much official standard cloud nothing specified thing scalable creation different original author binary account creation leroux brianleroux attention community modular scalable search portion address https source default background stripe stripe return magic function development hello world reason service removed prevent service useful product polybit notice implementation complex attention stdlibhq account service structure deploy function access release complex functionality background response specified version function examine replaced removed npm access environment online welcome happy information source legacy function signature specified public consumption specification focus signature version gateway example library integration platform background previous version visible documentation internet access github npm happy building environment cloud functionality standard download unpack number access access faaslang repository populated execution handle everything push function twitter keithwhor current directory world function publish account vision development service background environment release execution access parameter default paired simple build modular private public official website developer community creation execution registry keep development standard execution unlimited release environment packed bunch track official package npm library website community standard magic parameter gateway http service creation response registry useful boilerplate cloud release length response library gateway standard library library build author twitter local execution management quick directory setup append bg library setup specified parameter simple command skip account previous immutable library sourcecode stdlibhq building unpack tarball supported vision development implementation navigate service version environment library npm specify sdks development output console background worker registry library directory intend generate service nobody npm package additional functionality mutable replaced update service version standard cloud push directory directory serverless architecture manage please reference library replacement streamline creation draft source creation unable build property return comment definition special download tarball navigate standard removed replaced slackhq stripe faaslang function central registry lambda available official public registry consider building service platform simple restrict execution service directory control standard reference faaslang service platform library handle version control install standard ahmad nassri introduction standard development environment building http query execution library registry service source python build sdks service sourcecode empty length romainhuet account registry immutable source supplement control package something syntax default library platform service serverless package management account information replacement normal default function http check service information different return empty return example return return argument sourcecode shoot sourcecode standard available github platform standard deploy draft function version sourcecode additional mastery building stripe romain previous section library search", "git_description_clean": "standard library api development deployment management tools", "git_keywords_clean": "registry serverless faas nodejs node stdlib sdks api", "pypi_description_keywords": "", "pypi_keywords_clean": "stdlib microservice serverless faas lib", "rouge_ref": "standard library api development deployment management tools registry serverless faas nodejs node stdlib sdks api stdlib microservice serverless faas lib"}, "nioinnovation/xbee": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "firmware revision pyserial additional implementation extract package install sangalli automated project communication synderman command computer install tornado example tornado support application firmware unspecified behavior pmalmsten support documentation browser information installation install brackert cbrackert install package", "pypi_keywords_clean": "", "rouge_ref": ""}, "ramses-tech/ra": {"git_readme_keywords": "important ancient support future require document generator helper custom logic helper library automated", "git_description_clean": "ra test suite generator helper library testing apis described raml", "git_keywords_clean": "testing", "pypi_description_keywords": "check example example example important ancient support future require document generator helper custom logic helpful reference helper library automated", "pypi_keywords_clean": "web raml", "rouge_ref": "ra test suite generator helper library testing apis described raml testing web raml"}, "magmax/colorize": {"git_readme_keywords": "coverage wheel message emulate colordiff directory default example simulate change output checkout installation configuration found example configure output relative version colordiff emulate simulate colordiff combine example default output format pypi version format argument current directory output available search format enough wheel status travis method number pypi special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coverage wheel message emulate colordiff directory default example simulate change output checkout installation configuration found example configure output relative version colordiff emulate simulate colordiff combine example default output format pypi version format argument current directory output available search format enough wheel status travis method number pypi special", "pypi_keywords_clean": "interface", "rouge_ref": "interface"}, "/null": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tarball keyword argument distinguish keyword overdue support initial singleton", "pypi_keywords_clean": "", "rouge_ref": ""}, "/js-knockout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction framework directory knockout integration release original", "pypi_keywords_clean": "", "rouge_ref": ""}, "peeringdb/django-peeringdb": {"git_readme_keywords": "synchronization peeringdb", "git_description_clean": "django peeringdb models", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": "django peeringdb models"}, "unt-libraries/pyuntl": {"git_readme_keywords": "number liechty brandon nordstrom metadata developed contact", "git_description_clean": "python package reading writing untl metadata records", "git_keywords_clean": "", "pypi_description_keywords": "page information", "pypi_keywords_clean": "untl metadata digital libraries records", "rouge_ref": "python package reading writing untl metadata records  untl metadata digital libraries records"}, "matthiask/pdfdocument": {"git_readme_keywords": "default watermark background stationery gherman pdfdocument wrapper paragraphs unordered support additional difference exhaustive confidentiality creation svglib confidential predefined wrapper reportlab various different default reportlab language platypus address integration pdfdocument special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default watermark background stationery gherman pdfdocument wrapper paragraphs unordered support additional difference exhaustive confidentiality creation svglib confidential predefined wrapper reportlab various different default reportlab language platypus address integration pdfdocument special", "pypi_keywords_clean": "", "rouge_ref": ""}, "syrusakbary/djinja": {"git_readme_keywords": "administration template loader rewrite variable extend directory python project django template djinja converser djinja render install administration install future template library install django additional administration django library approach installation approach django usable django toolbar install django administration important syntax awesome django djinja extension template djinja performance template system syntax syntax custom djinja djinja templatetag library example configuration register example template django debug access django debug toolbar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration template loader rewrite variable extend directory python project django template djinja converser djinja render install administration install future template library install django additional administration django library approach installation approach django usable django toolbar install django administration important syntax awesome django djinja extension template djinja performance template system syntax syntax custom djinja djinja templatetag library example configuration register example template django debug access django debug toolbar", "pypi_keywords_clean": "", "rouge_ref": ""}, "pypa/packaging": {"git_readme_keywords": "freenode packaging packaging project discussion conduct everyone", "git_description_clean": "core utilities python packages", "git_keywords_clean": "", "pypi_description_keywords": "addition freenode minimal packaging support normalize constant expression discussion inconsistent conduct everyone determine incompatible refactor conduct changelog regression validity initial undocumented implement requirement development", "pypi_keywords_clean": "", "rouge_ref": "core utilities python packages"}, "sumerc/yappi": {"git_readme_keywords": "default profiler documentation introduction thread object official documentation new profiling performance profiling pycharm integration actual application minimal support callgrind effect application new profiler profiler pollution application pollution effect profiled application c profiling motivation different ability profiler subset cprofile profiler various minimal installation impossible standard distribution thread application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default profiler documentation introduction thread object official documentation new profiling performance profiling pycharm integration actual application minimal support callgrind effect application new profiler profiler pollution application pollution effect profiled application c profiling motivation different ability profiler subset cprofile profiler various minimal installation impossible standard distribution thread application", "pypi_keywords_clean": "python thread multithread profiler", "rouge_ref": "python thread multithread profiler"}, "whtsky/bencoder-pyx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version performance performance improvement package metainfo support status improvement fix install fix package ordereddict instaed pypi license codecov coverage metainfo version changelog version performance bencode implementation implementation cython linux", "pypi_keywords_clean": "bencoding encode decode bittorrent bencode bencoder cython", "rouge_ref": "bencoding encode decode bittorrent bencode bencoder cython"}, "kelleyk/iterpipes3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "davidmarble/pywin": {"git_readme_keywords": "specific version interpreter administrator apply batch installation python registry second extension variable order original original restore several useful directory pywin current session command similar version python bang python python installation restore registry python development search order python version pywin pywin feature version search manner environment lightweight python multiple python project launch example pywin individual launch header source python source pywin lightweight included utility installed python command specific python script support switcher version header symbolic environment variable command prompt access shell script launch administrator source prompt support launch specific", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "specific version interpreter administrator apply batch installation python registry second extension variable order original original restore several useful directory pywin current session command similar version python bang python python installation restore registry python development search order python version pywin pywin feature version search manner environment lightweight python multiple python project launch example pywin individual launch header source python source pywin lightweight included utility installed python command specific python script support switcher version header symbolic environment variable command prompt access shell script launch administrator source prompt support launch specific", "pypi_keywords_clean": "python windows version switcher launcher", "rouge_ref": "python windows version switcher launcher"}, "perone/protocoin": {"git_readme_keywords": "implementation documentation documentation information pure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation pure", "pypi_keywords_clean": "bitcoin protocol", "rouge_ref": "bitcoin protocol"}, "/flask-tryton": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application configuration available request bugtracker", "pypi_keywords_clean": "flask tryton web", "rouge_ref": "flask tryton web"}, "/contact-form": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "JA-VON/qgen": {"git_readme_keywords": "volume qgen", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "random value", "pypi_keywords_clean": "", "rouge_ref": ""}, "uktrade/directory-validators": {"git_readme_keywords": "development command directory environment installation publish", "git_description_clean": "", "git_keywords_clean": "live", "pypi_description_keywords": "development command directory environment installation publish", "pypi_keywords_clean": "", "rouge_ref": "live"}, "andreypopp/configure": {"git_readme_keywords": "inheritance configuration interpolation configuration configuration inheritance configuration composition development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "inheritance configuration interpolation configuration configuration inheritance configuration composition development", "pypi_keywords_clean": "", "rouge_ref": ""}, "sontek/pyramid-celery": {"git_readme_keywords": "celery example celery fix schedule actual value celerybeat scheduler flag update section configuration schedule watchout queue define propagate standard celeryconfig queue reason csv schedule configuration related behavior asynchronous example class multiple section example configure celery worker command second command celery worker propagade information example command additional execution celerybeat documentation section python celery section celeryconfig python declare config local timezone available logging configuration configuration default additional positional bug celery pyramid argument bash additional argument argument comma application bash standard celery schedule exact command standard default celery likely celerybeat periodic additional keyword python worker standard worker python decorator bash logging exact local bash launch access configuration ticket celerybeat worker celerybeat configuration section celery gotcha fix bug example configuration logging section parser reason default related worker execution specific queue actual schedule action config section celery command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "celery example schedule actual value celerybeat scheduler update section configuration schedule watchout queue define propagate standard celeryconfig queue reason csv schedule configuration related behavior asynchronous example class multiple section example configure celery worker command second command celery worker propagade information example command additional execution celerybeat documentation handle handle section python celery section celeryconfig python declare config local timezone available logging configuration configuration default additional positional bug celery pyramid argument bash additional argument argument comma application bash standard celery schedule exact command standard default celery likely celerybeat periodic additional keyword bash support python worker standard worker python decorator bash logging exact local handle tuple bash launch access configuration ticket support celery celerybeat worker celerybeat configuration section celery gotcha example configuration logging section parser reason default related worker execution specific queue actual schedule action config section celery command", "pypi_keywords_clean": "paste pyramid celery message queue amqp job task distributed", "rouge_ref": "paste pyramid celery message queue amqp job task distributed"}, "stackforge/winchester": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform installable stackdistiller library winchester triggermanager openstack winchester background daemon process persistant separate daemon processing library database schema handler pipeline configured appropriate scheme database separate daemon winchester commit rollback database pipeline processing processing optional database coordinate winchester processing optimistic triggermanager processing openstack notification trigger example creation processing openstack python process appropriate commit method winchester timestamp system processing winchester exception commit directory pipeline winchester codebase actual pipeline alternate processing appropriate database dictionary individual config library extract persistant winchester openstack external object plugin notification processor section similar group python package distinct minimum", "pypi_keywords_clean": "stacktach pipeline events notification openstack triggers", "rouge_ref": "stacktach pipeline events notification openstack triggers"}, "tnajdek/json-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "leplatrem/logging-color-formatter": {"git_readme_keywords": "formatter installation licence license interpolation version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "formatter installation licence license interpolation version", "pypi_keywords_clean": "logging", "rouge_ref": "logging"}, "justanr/datestuff": {"git_readme_keywords": "possible provide work compatible offset argument relative context expensive complete replacement interoperable python tzinfo object relative instance useful provide offset checking instance dateutil standard python alternate short look object factory regular datetime support hood python compatiblity default offset factory method simple boundary boundary checking checking needed relative object everything creation light weight python everything regular unorderable future unlikely serializer orm needed python unfixed functionality negative needing instance daterange offset factory lookup membership everything work functionality work python simple additional static relativedate relativedatetime datetime datetime lazy iteration method default interface relativedatetime allow static offset default constructor constructor allow compatible object object convenience membership lazy creep datetime module certain underlying factory interoperate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "possible provide offset argument serializer relative context limitation expensive complete replacement interoperable python tzinfo object relative instance useful connection software copyright charge person provide offset iteration checking instance dateutil standard python alternate object factory regular datetime support hood python compatiblity license default offset factory method simple boundary additional boundary checking documentation fitness particular checking needed weight relative merchantability fitness object everything subject creation python everything regular software unorderable future unlikely substantial express needed python limited unfixed functionality purpose noninfringement negative needing instance daterange offset factory liability lookup membership particular purpose permission contract distribute sublicense python simple warranty relativedate relativedatetime datetime datetime method default restriction interface relativedatetime allow default constructor constructor allow object convenience compatible object interoperate modify publish distribute module certain underlying factory software software", "pypi_keywords_clean": "dates datetime", "rouge_ref": "dates datetime"}, "mythonlang/pgen2": {"git_readme_keywords": "implementation parser generator", "git_description_clean": "python implementation python parser generator pgen", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "parser generator", "rouge_ref": "python implementation python parser generator pgen  parser generator"}, "/mopidy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jukebox system terminal background hackable mopidy computer mopidy volume control mopidy extension playback custom cassette gramofon modern kickstarter musicbox extension support favorite mopidy raspberry mopidy extensible computer jukebox project output network connectivity python javascript playlist mopidy hackable mopidy mopidy everybody stream available popular version coverage project raspberry mopidy perfect server status vanilla mopidy soundcloud google python application mopidy python manage playlist server additional streams announcement connect favorite support python server search control system raspberry affordable server mopidy raspbian custom mopidy spotify soundcloud control playback travis mopidy server python mopidy twitter prototype gramofon", "pypi_keywords_clean": "", "rouge_ref": ""}, "requests/requests-oauthlib": {"git_readme_keywords": "protected resource project protected twitter authorization retrieve fetching protected documentation installation install access workflow library support webapplication", "git_description_clean": "oauthlib support", "git_keywords_clean": "python", "pypi_description_keywords": "version specifier automatic protected compliance paramether linkedin compliance implementation setting miscellaneous complete response authentication january extract disabled setting fitbit compliance multiple username password protected resource project instance argument oauthlib updated specifier dependency identify namespace logging documentation september bypass authorization several facebook compliance google authorization compatible setting environment properly logging properly unreleased nothing exception message response content twitter authorization keyword retrieve compatibility available fetching protected property january project explicit bypass session arbitrary oauthlib namespace workflow history unreleased session september webapplication dependency project unicode insensitive common authorization consistency signature property february information namespace environment variable present legacy maximize compatibility mailchimp installation install access correct request refresh password present incompatible library support available session oauthlib support preference", "pypi_keywords_clean": "", "rouge_ref": "oauthlib support python"}, "xeroc/uptick": {"git_readme_keywords": "documentation documentation available telegram conduct discussion everyone library installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation available telegram conduct discussion everyone library installation development", "pypi_keywords_clean": "bitshares library api rpc cli", "rouge_ref": "bitshares library api rpc cli"}, "amiorin/blaz": {"git_readme_keywords": "specify docker development install different directory current script useful dinghy development container registry project script access version docker custom environment quick explanation terraform puppet ansible entrypoint script compile disable behaviour nested relative vboxsf example docker executable executable multiple docker container static version nested script install pyenv directory container former environment script invoke fullpath script directory current volume different docker compile different ansible python publish script docker static environment variable compose program source example python publish development purpose registry ansible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "edsu/wikidata-suggest": {"git_readme_keywords": "library example install command something spreadsheet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "", "rouge_ref": ""}, "/jupyterhub": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "channel reporting multiple jupyter operation hub system persistent corporate multiple recent version class container linux ldapauthenticator simple container section documentation jupyterhub kerberosauthenticator command proxy proxy system python starter docker authenticator oauthenticator resume hub docker container systemd batchspawner shell docker scientific research authenticator description project jupyter nodejs documentation project docker starter jupyterhub tutorial wrapspawner wrapspawner development installation sample oauthenticator ldapauthenticator authentication jupyterhub website jupyterhub compatibility cluster wrapspawner wrapspawner profilesspawner spawner authenticator pdf project vision notebook jupyterlab install jupyter proxy mounting copyright computer public jupyter community hub jupyter authenticator plugin license https communication default authenticator overview installation executable derivative workgroup scientific hub tornado systemdspawner tutorial documentation deployment jupyterhub support license certificate software yarnspawner default config contributor documentation high performance contribute documentation technical overview jupyter notebook group technical jupyterhub support install linux research project notebook package process configurable hub default hub server gitter channel pamauthenticator default spawner jupyterhub hub configuration desktop laptop install jupyterhub batch plugin jupyterhub notebook version jupyterhub docker jupyter website configuration docker installation configuration administration hub hub specific additional reference jupyterhub gitter generate default docker configuration jupyterhub sudospawner default spawner tornado process jupyter pdf wiki common baseline deployment install recent science workgroup spawner description authenticator spawner command privileged docker important hadoop cluster configuration general browser default hub jupyterhub default configuration system jupyterhub community support jupyterhub tornado documentation package version example notebook server jupyterhub pdf docker computer system hub documentation jupyterhub server project jupyterhub authenticator localprocessspawner default jupyterhub desktop participate development description localprocessspawner proxy multiple bsd license hub service jupyterhub jupyterhub reference tornado example install description pamauthenticator hub platform support good system configuration licensed allow multiple default configuration jupyterhub hub project high runtime configuration contribute project command command", "pypi_keywords_clean": "interactive interpreter shell web", "rouge_ref": "interactive interpreter shell web"}}