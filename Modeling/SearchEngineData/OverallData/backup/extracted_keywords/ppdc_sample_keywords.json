{"aflc/editdistance": {"git_readme_keywords": "algorithm hashable object support license implementation install install several distance object provide benchmark ipython support iterable distance library distance editdistance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "omerucel/basitapi": {"git_readme_keywords": "formatlaman\u0131za yan\u0131tlar durumlar verebilirler basitapi parametreyi kullanabilirsiniz method parametresi ayarlamak istemiyorsan\u0131z g\u00f6nderdi\u011finiz method bilgisine k\u00fct\u00fcphane \u00fczerinden kurulum olu\u015fturman\u0131zda ba\u011flant\u0131 kullanabilirsiniz github parametre g\u00f6ndermekle k\u0131s\u0131tland\u0131r\u0131labilirler \u00f6zellikler ba\u011flant\u0131daki metodlar\u0131 g\u00f6ndermekle istemciler \u00f6zellikleri g\u00f6nderildi\u011finde temelli durumda a\u015fa\u011f\u0131daki ba\u011flant\u0131daki method i\u015flemler y\u00fcr\u00fct\u00fcl\u00fcr github \u00fczerinden g\u00f6nderilmekte ayarlanabilmekte kurulum format\u0131n\u0131 ayarlamak \u00e7al\u0131\u015fabilmesi kar\u0131\u015fmaz sundu\u011fu istemiyorsan\u0131z ba\u011flant\u0131lar\u0131n\u0131z\u0131 kullan\u0131m ba\u011flant\u0131 ba\u015fl\u0131\u011f\u0131n\u0131n ezilmesi kullanabilirsiniz kullan\u0131m yard\u0131mc\u0131 method parametresindeki parametresine vermekte basitapi restful kodlar\u0131na", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "formatlaman\u0131za yan\u0131tlar durumlar verebilirler basitapi parametreyi kullanabilirsiniz method parametresi ayarlamak istemiyorsan\u0131z g\u00f6nderdi\u011finiz method bilgisine k\u00fct\u00fcphane \u00fczerinden kurulum olu\u015fturman\u0131zda ba\u011flant\u0131 kullanabilirsiniz github parametre g\u00f6ndermekle k\u0131s\u0131tland\u0131r\u0131labilirler \u00f6zellikler ba\u011flant\u0131daki metodlar\u0131 g\u00f6ndermekle istemciler \u00f6zellikleri g\u00f6nderildi\u011finde temelli durumda a\u015fa\u011f\u0131daki ba\u011flant\u0131daki method i\u015flemler y\u00fcr\u00fct\u00fcl\u00fcr github \u00fczerinden g\u00f6nderilmekte ayarlanabilmekte kurulum format\u0131n\u0131 ayarlamak \u00e7al\u0131\u015fabilmesi kar\u0131\u015fmaz sundu\u011fu istemiyorsan\u0131z ba\u011flant\u0131lar\u0131n\u0131z\u0131 kullan\u0131m ba\u011flant\u0131 ba\u015fl\u0131\u011f\u0131n\u0131n ezilmesi kullanabilirsiniz kullan\u0131m yard\u0131mc\u0131 method parametresindeki parametresine vermekte basitapi restful kodlar\u0131na", "pypi_keywords_clean": "rest api django"}, "timofurrer/pysingleton": {"git_readme_keywords": "decorator tuxtimo version install install pysingleton version singleton", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nhfruchter/pgh-bustime": {"git_readme_keywords": "interface current authority official standard everything python negley current location restrictive initial register account particular output liberty station wrapper module pghbustime official interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "TUW-GEO/repurpose": {"git_readme_keywords": "installation package specific version temporal resampling adpation citation repurpose repository pyscaffold contribute happy development software publication project information pyscaffold branch repurpose similar output package installable recommend environment several change representation follow support temporal regular additional information development recommend conversion branch package version module experimental reproducibility function resampling module datacube zenodo enough submit access research artefact repurpose package request accept feature branch support spatial spatial resampling repository account", "git_description_clean": "routines conversion image formats time series vice versa", "git_keywords_clean": "", "pypi_description_keywords": "installation package specific version temporal resampling adpation citation repurpose repository pyscaffold contribute happy development software publication project information pyscaffold branch repurpose similar output package installable recommend environment several change representation follow support temporal regular additional information development recommend conversion branch package version module experimental reproducibility function resampling module datacube zenodo enough submit access research artefact repurpose package request accept feature branch support spatial spatial resampling repository account", "pypi_keywords_clean": ""}, "mverteuil/widget-party": {"git_readme_keywords": "quick available entry determine suitability stable version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "quick available entry determine suitability stable version", "pypi_keywords_clean": ""}, "/reggie": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "maintainer build status available available management system branch registration management request release coverage status documentation available documentation status", "pypi_keywords_clean": ""}, "crs-support/ftw": {"git_readme_keywords": "attack rigorous modsecurity response extensible baseline ruleset positive negative directive integrating purpose project installation trigger execution framework ground agreeable baseline environment continuous integration announcement repository typing ruleset baseline request common agreeable modsecurity version repeatable reading", "git_description_clean": "framework testing wafs ftw", "git_keywords_clean": "waf modsecurity owasp", "pypi_description_keywords": "", "pypi_keywords_clean": "waf"}, "/path": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/steelscript-stock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript application framework technology steelscript collection steelscript application installation framework steelscript", "pypi_keywords_clean": ""}, "eofs/aws": {"git_readme_keywords": "fabric execute program amazon ssh access balancer minimal configuration fabric documentation command installation configuration support installation command specific fabfile elastic fabric combine mybalancer fabric documentation necessary project provide environment information command amazon access fabric remote utility program custom fabric fabric command different motivation interface specific manage fabric function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "akoumjian/datefinder": {"git_readme_keywords": "support datefinder extract datetime object installation convert datetime document travis likely datetime datetime object package extract version automodule datefinder", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support datefinder extract datetime object installation convert datetime document travis likely datetime datetime object package extract version automodule datefinder", "pypi_keywords_clean": "datetime parser nlp"}, "mobiusklein/glypy": {"git_readme_keywords": "monosaccharide classify structure analysis comparator canonical collection substructure similarity enrichment analysis database functional download glytoucan perform substructure glycobiology representation generate glycosidic structure building example evaluate structural cleavage retreive biological particular nomenclature glycoct configurable glytoucan manipulate traverse variation analysis synthesize annotate topological comparison synthesize possible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "glycomics glycan carbohydrate glycoinformatics glypy glycosaminoglycan"}, "/pyfuzz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "italian japanese language chinese current common portugese russian english finnish russian serbian hebrew italian library pyfuzz pyfuzz japanese russian", "pypi_keywords_clean": ""}, "mercadopago/mercadopago": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "authentication colombia generic mercadopago resource mercadopago payment customer integration checkout configure address venezuela colombia", "pypi_keywords_clean": "api mercadopago checkout payment ipn sdk integration"}, "samuelcolvin/devtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "align center python information import numpy import debug install python import importerror b python debug iceberg example available python command python import modify available output", "pypi_keywords_clean": ""}, "kelsoncm/python-brfied": {"git_readme_keywords": "permission noninfringement software distribute sublicense express substantial warranty documentation limitation liability restriction publish distribute fitness particular merchantability fitness copyright connection software validate software software contract", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python br brazil brasil model form locale"}, "stdlib/lib": {"git_readme_keywords": "full nassri ahmadnassri response content development workflow library product package available workspace publish visible unlimited access library service specified empty right development keep track enjoy happy scalable serverless development structure project folder function service library public single intend build brianleroux ahmad documentation build response params service project chadfowler much official standard cloud nothing specified thing scalable creation different original author binary account creation leroux brianleroux attention community modular scalable search portion address https source default background stripe stripe return magic function development hello world reason service removed prevent service useful product polybit notice implementation complex attention stdlibhq account service structure deploy function access release complex functionality background response specified version function examine replaced removed npm access environment online welcome happy information source legacy function signature specified public consumption specification focus signature version gateway example library integration platform background previous version visible documentation internet access github npm happy building environment cloud functionality standard download unpack number access access faaslang repository populated execution handle everything push function twitter keithwhor current directory world function publish account vision development service background environment release execution access parameter default paired simple build modular private public official website developer community creation execution registry keep development standard execution unlimited release environment packed bunch track official package npm library website community standard magic parameter gateway http service creation response registry useful boilerplate cloud release length response library gateway standard library library build author twitter local execution management quick directory setup append bg library setup specified parameter simple command skip account previous immutable library sourcecode stdlibhq building unpack tarball supported vision development implementation navigate service version environment library npm specify sdks development output console background worker registry library directory intend generate service nobody npm package additional functionality mutable replaced update service version standard cloud push directory directory serverless architecture manage please reference library replacement streamline creation draft source creation unable build property return comment definition special download tarball navigate standard removed replaced slackhq stripe faaslang function central registry lambda available official public registry consider building service platform simple restrict execution service directory control standard reference faaslang service platform library handle version control install standard ahmad nassri introduction standard development environment building http query execution library registry service source python build sdks service sourcecode empty length romainhuet account registry immutable source supplement control package something syntax default library platform service serverless package management account information replacement normal default function http check service information different return empty return example return return argument sourcecode shoot sourcecode standard available github platform standard deploy draft function version sourcecode additional mastery building stripe romain previous section library search", "git_description_clean": "standard library api development deployment management tools", "git_keywords_clean": "registry serverless faas nodejs node stdlib sdks api", "pypi_description_keywords": "", "pypi_keywords_clean": "stdlib microservice serverless faas lib"}, "nioinnovation/xbee": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "firmware revision pyserial additional implementation extract package install sangalli automated project communication synderman command computer install tornado example tornado support application firmware unspecified behavior pmalmsten support documentation browser information installation install brackert cbrackert install package", "pypi_keywords_clean": ""}, "ramses-tech/ra": {"git_readme_keywords": "important ancient support future require document generator helper custom logic helper library automated", "git_description_clean": "ra test suite generator helper library testing apis described raml", "git_keywords_clean": "testing", "pypi_description_keywords": "check example example example important ancient support future require document generator helper custom logic helpful reference helper library automated", "pypi_keywords_clean": "web raml"}, "magmax/colorize": {"git_readme_keywords": "coverage wheel message emulate colordiff directory default example simulate change output checkout installation configuration found example configure output relative version colordiff emulate simulate colordiff combine example default output format pypi version format argument current directory output available search format enough wheel status travis method number pypi special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coverage wheel message emulate colordiff directory default example simulate change output checkout installation configuration found example configure output relative version colordiff emulate simulate colordiff combine example default output format pypi version format argument current directory output available search format enough wheel status travis method number pypi special", "pypi_keywords_clean": "interface"}, "/null": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tarball keyword argument distinguish keyword overdue support initial singleton", "pypi_keywords_clean": ""}, "/js-knockout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction framework directory knockout integration release original", "pypi_keywords_clean": ""}, "peeringdb/django-peeringdb": {"git_readme_keywords": "synchronization peeringdb", "git_description_clean": "django peeringdb models", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "unt-libraries/pyuntl": {"git_readme_keywords": "number liechty brandon nordstrom metadata developed contact", "git_description_clean": "python package reading writing untl metadata records", "git_keywords_clean": "", "pypi_description_keywords": "page information", "pypi_keywords_clean": "untl metadata digital libraries records"}, "matthiask/pdfdocument": {"git_readme_keywords": "default watermark background stationery gherman pdfdocument wrapper paragraphs unordered support additional difference exhaustive confidentiality creation svglib confidential predefined wrapper reportlab various different default reportlab language platypus address integration pdfdocument special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default watermark background stationery gherman pdfdocument wrapper paragraphs unordered support additional difference exhaustive confidentiality creation svglib confidential predefined wrapper reportlab various different default reportlab language platypus address integration pdfdocument special", "pypi_keywords_clean": ""}, "syrusakbary/djinja": {"git_readme_keywords": "administration template loader rewrite variable extend directory python project django template djinja converser djinja render install administration install future template library install django additional administration django library approach installation approach django usable django toolbar install django administration important syntax awesome django djinja extension template djinja performance template system syntax syntax custom djinja djinja templatetag library example configuration register example template django debug access django debug toolbar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration template loader rewrite variable extend directory python project django template djinja converser djinja render install administration install future template library install django additional administration django library approach installation approach django usable django toolbar install django administration important syntax awesome django djinja extension template djinja performance template system syntax syntax custom djinja djinja templatetag library example configuration register example template django debug access django debug toolbar", "pypi_keywords_clean": ""}, "pypa/packaging": {"git_readme_keywords": "freenode packaging packaging project discussion conduct everyone", "git_description_clean": "core utilities python packages", "git_keywords_clean": "", "pypi_description_keywords": "addition freenode minimal packaging support normalize constant expression discussion inconsistent conduct everyone determine incompatible refactor conduct changelog regression validity initial undocumented implement requirement development", "pypi_keywords_clean": ""}, "sumerc/yappi": {"git_readme_keywords": "default profiler documentation introduction thread object official documentation new profiling performance profiling pycharm integration actual application minimal support callgrind effect application new profiler profiler pollution application pollution effect profiled application c profiling motivation different ability profiler subset cprofile profiler various minimal installation impossible standard distribution thread application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default profiler documentation introduction thread object official documentation new profiling performance profiling pycharm integration actual application minimal support callgrind effect application new profiler profiler pollution application pollution effect profiled application c profiling motivation different ability profiler subset cprofile profiler various minimal installation impossible standard distribution thread application", "pypi_keywords_clean": "python thread multithread profiler"}, "whtsky/bencoder-pyx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version performance performance improvement package metainfo support status improvement fix install fix package ordereddict instaed pypi license codecov coverage metainfo version changelog version performance bencode implementation implementation cython linux", "pypi_keywords_clean": "bencoding encode decode bittorrent bencode bencoder cython"}, "kelleyk/iterpipes3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "davidmarble/pywin": {"git_readme_keywords": "specific version interpreter administrator apply batch installation python registry second extension variable order original original restore several useful directory pywin current session command similar version python bang python python installation restore registry python development search order python version pywin pywin feature version search manner environment lightweight python multiple python project launch example pywin individual launch header source python source pywin lightweight included utility installed python command specific python script support switcher version header symbolic environment variable command prompt access shell script launch administrator source prompt support launch specific", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "specific version interpreter administrator apply batch installation python registry second extension variable order original original restore several useful directory pywin current session command similar version python bang python python installation restore registry python development search order python version pywin pywin feature version search manner environment lightweight python multiple python project launch example pywin individual launch header source python source pywin lightweight included utility installed python command specific python script support switcher version header symbolic environment variable command prompt access shell script launch administrator source prompt support launch specific", "pypi_keywords_clean": "python windows version switcher launcher"}, "perone/protocoin": {"git_readme_keywords": "implementation documentation documentation information pure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation pure", "pypi_keywords_clean": "bitcoin protocol"}, "/flask-tryton": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application configuration available request bugtracker", "pypi_keywords_clean": "flask tryton web"}, "/contact-form": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "JA-VON/qgen": {"git_readme_keywords": "volume qgen", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "random value", "pypi_keywords_clean": ""}, "uktrade/directory-validators": {"git_readme_keywords": "development command directory environment installation publish", "git_description_clean": "", "git_keywords_clean": "live", "pypi_description_keywords": "development command directory environment installation publish", "pypi_keywords_clean": ""}, "andreypopp/configure": {"git_readme_keywords": "inheritance configuration interpolation configuration configuration inheritance configuration composition development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "inheritance configuration interpolation configuration configuration inheritance configuration composition development", "pypi_keywords_clean": ""}, "sontek/pyramid-celery": {"git_readme_keywords": "celery example celery fix schedule actual value celerybeat scheduler flag update section configuration schedule watchout queue define propagate standard celeryconfig queue reason csv schedule configuration related behavior asynchronous example class multiple section example configure celery worker command second command celery worker propagade information example command additional execution celerybeat documentation section python celery section celeryconfig python declare config local timezone available logging configuration configuration default additional positional bug celery pyramid argument bash additional argument argument comma application bash standard celery schedule exact command standard default celery likely celerybeat periodic additional keyword python worker standard worker python decorator bash logging exact local bash launch access configuration ticket celerybeat worker celerybeat configuration section celery gotcha fix bug example configuration logging section parser reason default related worker execution specific queue actual schedule action config section celery command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "celery example schedule actual value celerybeat scheduler update section configuration schedule watchout queue define propagate standard celeryconfig queue reason csv schedule configuration related behavior asynchronous example class multiple section example configure celery worker command second command celery worker propagade information example command additional execution celerybeat documentation handle handle section python celery section celeryconfig python declare config local timezone available logging configuration configuration default additional positional bug celery pyramid argument bash additional argument argument comma application bash standard celery schedule exact command standard default celery likely celerybeat periodic additional keyword bash support python worker standard worker python decorator bash logging exact local handle tuple bash launch access configuration ticket support celery celerybeat worker celerybeat configuration section celery gotcha example configuration logging section parser reason default related worker execution specific queue actual schedule action config section celery command", "pypi_keywords_clean": "paste pyramid celery message queue amqp job task distributed"}, "stackforge/winchester": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform installable stackdistiller library winchester triggermanager openstack winchester background daemon process persistant separate daemon processing library database schema handler pipeline configured appropriate scheme database separate daemon winchester commit rollback database pipeline processing processing optional database coordinate winchester processing optimistic triggermanager processing openstack notification trigger example creation processing openstack python process appropriate commit method winchester timestamp system processing winchester exception commit directory pipeline winchester codebase actual pipeline alternate processing appropriate database dictionary individual config library extract persistant winchester openstack external object plugin notification processor section similar group python package distinct minimum", "pypi_keywords_clean": "stacktach pipeline events notification openstack triggers"}, "tnajdek/json-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "leplatrem/logging-color-formatter": {"git_readme_keywords": "formatter installation licence license interpolation version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "formatter installation licence license interpolation version", "pypi_keywords_clean": "logging"}, "justanr/datestuff": {"git_readme_keywords": "possible provide work compatible offset argument relative context expensive complete replacement interoperable python tzinfo object relative instance useful provide offset checking instance dateutil standard python alternate short look object factory regular datetime support hood python compatiblity default offset factory method simple boundary boundary checking checking needed relative object everything creation light weight python everything regular unorderable future unlikely serializer orm needed python unfixed functionality negative needing instance daterange offset factory lookup membership everything work functionality work python simple additional static relativedate relativedatetime datetime datetime lazy iteration method default interface relativedatetime allow static offset default constructor constructor allow compatible object object convenience membership lazy creep datetime module certain underlying factory interoperate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "possible provide offset argument serializer relative context limitation expensive complete replacement interoperable python tzinfo object relative instance useful connection software copyright charge person provide offset iteration checking instance dateutil standard python alternate object factory regular datetime support hood python compatiblity license default offset factory method simple boundary additional boundary checking documentation fitness particular checking needed weight relative merchantability fitness object everything subject creation python everything regular software unorderable future unlikely substantial express needed python limited unfixed functionality purpose noninfringement negative needing instance daterange offset factory liability lookup membership particular purpose permission contract distribute sublicense python simple warranty relativedate relativedatetime datetime datetime method default restriction interface relativedatetime allow default constructor constructor allow object convenience compatible object interoperate modify publish distribute module certain underlying factory software software", "pypi_keywords_clean": "dates datetime"}, "mythonlang/pgen2": {"git_readme_keywords": "implementation parser generator", "git_description_clean": "python implementation python parser generator pgen", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "parser generator"}, "/mopidy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jukebox system terminal background hackable mopidy computer mopidy volume control mopidy extension playback custom cassette gramofon modern kickstarter musicbox extension support favorite mopidy raspberry mopidy extensible computer jukebox project output network connectivity python javascript playlist mopidy hackable mopidy mopidy everybody stream available popular version coverage project raspberry mopidy perfect server status vanilla mopidy soundcloud google python application mopidy python manage playlist server additional streams announcement connect favorite support python server search control system raspberry affordable server mopidy raspbian custom mopidy spotify soundcloud control playback travis mopidy server python mopidy twitter prototype gramofon", "pypi_keywords_clean": ""}, "requests/requests-oauthlib": {"git_readme_keywords": "protected resource project protected twitter authorization retrieve fetching protected documentation installation install access workflow library support webapplication", "git_description_clean": "oauthlib support", "git_keywords_clean": "python", "pypi_description_keywords": "version specifier automatic protected compliance paramether linkedin compliance implementation setting miscellaneous complete response authentication january extract disabled setting fitbit compliance multiple username password protected resource project instance argument oauthlib updated specifier dependency identify namespace logging documentation september bypass authorization several facebook compliance google authorization compatible setting environment properly logging properly unreleased nothing exception message response content twitter authorization keyword retrieve compatibility available fetching protected property january project explicit bypass session arbitrary oauthlib namespace workflow history unreleased session september webapplication dependency project unicode insensitive common authorization consistency signature property february information namespace environment variable present legacy maximize compatibility mailchimp installation install access correct request refresh password present incompatible library support available session oauthlib support preference", "pypi_keywords_clean": ""}, "xeroc/uptick": {"git_readme_keywords": "documentation documentation available telegram conduct discussion everyone library installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation available telegram conduct discussion everyone library installation development", "pypi_keywords_clean": "bitshares library api rpc cli"}, "amiorin/blaz": {"git_readme_keywords": "specify docker development install different directory current script useful dinghy development container registry project script access version docker custom environment quick explanation terraform puppet ansible entrypoint script compile disable behaviour nested relative vboxsf example docker executable executable multiple docker container static version nested script install pyenv directory container former environment script invoke fullpath script directory current volume different docker compile different ansible python publish script docker static environment variable compose program source example python publish development purpose registry ansible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "edsu/wikidata-suggest": {"git_readme_keywords": "library example install command something spreadsheet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/jupyterhub": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "channel reporting multiple jupyter operation hub system persistent corporate multiple recent version class container linux ldapauthenticator simple container section documentation jupyterhub kerberosauthenticator command proxy proxy system python starter docker authenticator oauthenticator resume hub docker container systemd batchspawner shell docker scientific research authenticator description project jupyter nodejs documentation project docker starter jupyterhub tutorial wrapspawner wrapspawner development installation sample oauthenticator ldapauthenticator authentication jupyterhub website jupyterhub compatibility cluster wrapspawner wrapspawner profilesspawner spawner authenticator pdf project vision notebook jupyterlab install jupyter proxy mounting copyright computer public jupyter community hub jupyter authenticator plugin license https communication default authenticator overview installation executable derivative workgroup scientific hub tornado systemdspawner tutorial documentation deployment jupyterhub support license certificate software yarnspawner default config contributor documentation high performance contribute documentation technical overview jupyter notebook group technical jupyterhub support install linux research project notebook package process configurable hub default hub server gitter channel pamauthenticator default spawner jupyterhub hub configuration desktop laptop install jupyterhub batch plugin jupyterhub notebook version jupyterhub docker jupyter website configuration docker installation configuration administration hub hub specific additional reference jupyterhub gitter generate default docker configuration jupyterhub sudospawner default spawner tornado process jupyter pdf wiki common baseline deployment install recent science workgroup spawner description authenticator spawner command privileged docker important hadoop cluster configuration general browser default hub jupyterhub default configuration system jupyterhub community support jupyterhub tornado documentation package version example notebook server jupyterhub pdf docker computer system hub documentation jupyterhub server project jupyterhub authenticator localprocessspawner default jupyterhub desktop participate development description localprocessspawner proxy multiple bsd license hub service jupyterhub jupyterhub reference tornado example install description pamauthenticator hub platform support good system configuration licensed allow multiple default configuration jupyterhub hub project high runtime configuration contribute project command command", "pypi_keywords_clean": "interactive interpreter shell web"}, "OnBeep/pygster": {"git_readme_keywords": "version tk", "git_description_clean": "stripped logster using pygtail derived logster", "git_keywords_clean": "", "pypi_description_keywords": "version tk", "pypi_keywords_clean": ""}, "/python-augeas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "LuminosoInsight/langcodes": {"git_readme_keywords": "rfc documented inscrutable short unproblematic regional subclass valueerror language similar right language hiding work problem hiding summary langcodes script english efficiency default speer macrolanguage moroccan method look language cldr multiple class registry english french arabic unicode collation system unicode langcodes langcodes language reverse slovak slovenian look language version extensive level right thing helpful american instance method australian english option difference australian standard string ability compare parameter complex result strength unspecified language mandarin chinese source everyone japanese japanese british english indicating strength string language enable modern standard specific language syntax private number indicating nothing common library language standard arabic japanese hepburn moroccan arabic right thing license likely linguistic explanation script subtags matching equivalent equivalent language likely indonesian malaysian function language english british interesting problem software significant unproblematic english french bokm\u00e5l norwegian script software linguistic demographic system python backport fuzzy matching english spanish common english japanese english different python unicode cldr function language subtag reverse operation english japanese database language wiktionary regional difference natural language version documentation langcodes package numerous repository pypi way method difference american country similar added ability language object arabic difference difference arabic different indonesian possible string cantonese mainland overlong norwegian bokm\u00e5l significant barrier arabic egyptian scroll macrolanguage replacement common useful thing object efficiency contain macrolanguage language chinese chinese traditional language naming macrolanguage language american english disable feature know arabic modern cldr package describe language urdu indicating languagetagerror subclass something different spanish hindi language language backport branch work language specific know language serbian chinese different minimum language instance traditional chinese current traditional thing boring problem result bcp reason egyptian arabic possible redundant language advantage syntax subtag registry language script language method way know documentation understand language separate sphinx default language langcodes library erroneous several suppose software backport langcodes naming language mainland mandarin habitat standardized language matching language example moroccan subtags redundant difference difference intelligible branch repository langcodes python registry summary language english understood difference information different thing method language suppose unicode technical object language standardized arabic urdu example python hepburn romanization method language common standardized specific system", "git_description_clean": "python library working comparing language codes", "git_keywords_clean": "", "pypi_description_keywords": "traditional language documentation standardized github", "pypi_keywords_clean": ""}, "jparyani/pycapnp": {"git_readme_keywords": "variable control binary distribution distributiion building installation development project documentation pycapnp distribution building python available promise version example python demonstration directory binary oddity control compiler environment variable installation install additional development calculator example distribution building compatible compiler pycapnp additional python unicode pycapnp", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "change naming reproduced import monkey pycapnp change useful arbitrary libcapnp ability import lowercase schema support bug twopartyserver development project change method memleak kjexception version cython keyword demonstration schema conform libcapnp security functionality libcapnp allow setting pyeventport handle destructor oddity installation dependency installer allow handle simulataneous naming readeroption original cython method property schemaparser cython listschema security release cython minimum mytype cythonize update traceback cythonize parameter bug global schemaparser method builder address full orphan release update pycapnp additional dumb binary inaccessible pycapnp hashable default cc environment serialization objectid unify argument problem cython bootstrap method standardize removal dynamicunion pycapnp distribution asilversempirical bpiwowar change special orphan example upstream release cython change import support segment function change interface change directory binary system possible recursive dynamicstruct completion method struct wrapper custom python pypy function orphan functionality memleak remotepromise installation install restorer serious bug interfacemethodschema update conform dynamicorphan compatible compiler messagebuilder variable control change project namespace change handling dynamicobject initialized allow import python travis underscores accesible version initial commit version capability response simulataneous connection bug exception interfaceschema present trouble library version change pycapnp allow special version check change structschema prettyprint benchmark random member naming wheel distributiion problem allow struct intersphinx dictionary python wheel change exception python python treatment lookup cleanup allow restore support johnemhoff default calculator example compiler gcc multiple schemas official pycapnp change benchmark connection change dependency cython version setuptools method twopartyserver uncovered implement cython module cython exception wrapper binary distribution unnamed changelog logic possible segfault documentation message creation python common available serializer script promise attributeerror inheritance public n mytype builder python everything settable libcapnp library problem uninitialized control compiler initial copyable matrix structschema change stringification environment variable kjdebug compilation problem additional development upload problem gcc exception handling setuptools initial python unicode automatic", "pypi_keywords_clean": "capnp"}, "/pyobjc-framework-qtkit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework documention information documentation quicktime framework pyobjc documentation documentation general replacement translation framework pyobjc quicktime", "pypi_keywords_clean": "pyobjc qtkit"}, "Mashape/mashape-analytics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "aisthesis/delayqueue": {"git_readme_keywords": "python custom functionality functionality lightweight possible content package delayqueue", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "queue delay thread"}, "areski/python-nvd3": {"git_readme_keywords": "ipython notebooks information install ipython notebook execute notebook license library beautiful directory django render notebook documentation project license directory ipython install quick django wrapper output graphs python shell version description wrapper application directory uninstall installed available ipython status attempt python wrapper wrapper available python library installation install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tooltip property disable ruslan mandatory piechart ipython notebooks danmeakin setting multichart information install attempt ipython notebook execute notebook license library beautiful directory django lineplusbarwithfocuschart discretebarchart support parameter piechart generalise render notebook documentation project argument license directory ipython install quick django wrapper output history graphs project structure version description wrapper lineplusbarwithfocuschart support follow support focusenable application conversion setuptools directory morgan uninstall cmorgan installed legend available ipython dateformat python wrapper wrapper available python library lineplusbarchart installation install appropriate scatterchart function linechart", "pypi_keywords_clean": "plot graph"}, "lwoydziak/singleton3": {"git_readme_keywords": "code singleton", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "code singleton", "pypi_keywords_clean": ""}, "apragacz/django-rest-registration": {"git_readme_keywords": "minimal library django configure django coverage current registraton library registration preferred support configuration install install django installation configuration registration verification version compatible modeless cryptographic django framework session password project available updating satisfy profile password register django syntax documentation project urlconfig instance syntax django notification configuration configuration request password validation receive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "minimal library django configure django coverage current registraton library registration preferred support configuration install install django installation configuration registration verification version compatible modeless cryptographic django framework session password project available updating satisfy profile password register django syntax documentation project urlconfig instance syntax django notification configuration configuration request password validation receive", "pypi_keywords_clean": "django rest api auth registration register login"}, "dobarkod/typedecorator": {"git_readme_keywords": "checking system library python useful typecheck decorator multiple library custom class body function fitness particular mocking library subclass example method key level log third boolean change disable element integer nothing second string example mocking distribute sublicense restriction modify iterable decorator example error install package c senko connection software method problem limitation copyright c eample permission hereby instance class quickstart install runtime function argument constant additional string third difference performance software function example disabled runtime example behaviour mismatch exception myobject software permit syntax license attribute equal function behaviour identical signature library special integer second python quickstart level setup function dictionary mapping exception log default disable standard library runtime multiple simple complex typedecorator implementation instance instance example ignored example merchantability fitness element subject decorator shorthand method invocation signature element system inactive liability contract dictionary python python setup section module possible python enforce warranty problem particular purpose python function check python log level anything annotation syntax charge person available decorator configure element example actual dictionary string check section information documentation optional license copyright python limited express substantial problem method purpose noninfringement standard module default exception compile class method possible construct class instance publish distribute runtime python standard function annotation software software", "git_description_clean": "implementation type checks", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "getsentry/sentry-plugins": {"git_readme_keywords": "authentication redirect enable account github descriptor management complete sentry internet reconnect account reverse extended development github install config server atlassian connect install package sentry sentry github expose application creation github plugin enable disconnect reconnect sentry callback enable plugin application github something config associate redirect ngrok associate account", "git_description_clean": "official plugins sentry server", "git_keywords_clean": "", "pypi_description_keywords": "sentry copyright copyright sentry license", "pypi_keywords_clean": ""}, "Azure/azure-common": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default release history python microsoft bugfix keyvaultclient creation python thank thank contribution changelog release extension support install keyvault profile compute support depency support wheel package support series common sdk python support resource namespace package bundle package msrestazure depency profile definition series support support profile python namespace definition initial release parameter microsoft authorization profile contribution mixin wheel extension", "pypi_keywords_clean": ""}, "NiklasRosenstein/nr-types": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "callable kind key value lambda assert list foo myclass inlinemetaclassbase self name random import import interface inlinemetaclassbase class attribute def ifoo x issubclass foo multiple date max additional state assert isinstance python modern ft def assert hasattr return x object def class python return count assert example range lambda class person lambda class parent class compatible python python compatible value int f assert smith assert import stream x attr person smith import ft assert assert bar assert attr class str str implement generic proxy object x example class wrapper foo object acceptable value filter sumtype str mail object usable member move implementation example default age int hashdict hash stream stream hasattr ifoo duration value access proxy type code function q return record sumtype x test import proxy assert similar value return none assert wrapper callable mail str value key lambda x installation run ifoo assert none age support keyword unsafehashdict hashdict x range class foo foo implementation key def def bar q bar callable example person name def test proxy count class filter assert ifoo bar self self x self self assert issubclass count def sumtype date x def sumtype class lambda f import random python installation self key example proxy test assert similar mutable isinstance f import inlinemetaclassbase keyword class key return stream range class duration self def import count record class count return def self attr print def global return key return q def x r assert test value foo assert lambda person age str assert x implementation assert package attr attribute max keyword int lambda assert copyright python function assert list python import record eg assert none interface foo hash similar mutable support magical example value unsafehashdict os useful return value ifoo interface class ifoo assert f interface implementation import record singleton useful name str generic class count count proxy def count assert person str kind access help python assert foo global count value parameter class hashdict count proxy python hashdict def alias module x return filter assert similar python str lambda module object proxy class q r inlinemetaclassbase def self q none str usable parent x assert x x ifoo class number os class myclass import generic f filter example python foo x str none value def", "pypi_keywords_clean": ""}, "mozmeao/django-allow-cidr": {"git_readme_keywords": "django middleware package cookiecutter normal django middleware capture validation django function definition package install django augment middleware django normal network definition django", "git_description_clean": "django middleware enalbe use cidr ip ranges", "git_keywords_clean": "", "pypi_description_keywords": "django middleware python package cookiecutter django publish normal django middleware capture validation django function definition package disable middleware cookiecutter history install django augment python profit function middleware release middleware django normal network definition django", "pypi_keywords_clean": ""}, "pudo/scrapekit": {"git_readme_keywords": "storage stateful scrapelib validation flexible beautifulsoup develop functionality necessary comprehensive framework address library wrapper documentation example mechanicalsoup scrapekit library scrapekit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage stateful scrapelib validation flexible beautifulsoup develop functionality necessary comprehensive framework address library wrapper documentation example mechanicalsoup scrapekit library scrapekit", "pypi_keywords_clean": "web scraping crawling http cache threading"}, "apertium/apertium-streamparser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "terminal standard streamparser available apertium streamparser install terminal contributing contributing streamparser continous integration installation streamparser library development", "pypi_keywords_clean": "apertium parsing linguistics"}, "GNS3/gns3-gui": {"git_readme_keywords": "debugger contact security intercept available repository installation internal development interface modify", "git_description_clean": "graphical network simulator", "git_keywords_clean": "networking network", "pypi_description_keywords": "debugger contact security intercept available repository installation internal development interface modify", "pypi_keywords_clean": ""}, "pyQode/pyqode-uic": {"git_readme_keywords": "package project compile number designer installation license example installation version license tracker license project", "git_description_clean": "ui compiler", "git_keywords_clean": "", "pypi_description_keywords": "package project number designer installation license example installation version license tracker license project", "pypi_keywords_clean": ""}, "bitmazk/django-shop-simplenotifications": {"git_readme_keywords": "package virtual variable context execute example install dependency workon yourenvname address example addition choice mkvirtualenv yourenvname example mkvirtualenv configuration default yourenvname workon default address important example default available address python install payment repository install attribute address alternative content various virtual environment contribute project approach notification sender paymentbackend installation install package virtualenv certain member install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package virtual variable context execute example install dependency workon yourenvname address example member addition choice mkvirtualenv yourenvname example mkvirtualenv configuration default yourenvname workon default address example default available address python install payment repository install attribute address alternative content various virtual environment approach notification sender paymentbackend installation install package virtualenv certain contribute project install package", "pypi_keywords_clean": "django email notifications"}, "estebistec/memoized-property": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "universal software dependency license support property enough compatability decorator version function", "pypi_keywords_clean": "memoized property decorator"}, "/simpledaemon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pidfile installation script simpledaemon terminal configuration setup daemon setup infinite similar daemon install simpledaemon simpledaemon example", "pypi_keywords_clean": ""}, "nrocco/pycli-tools": {"git_readme_keywords": "python python default configuration ability configuration application control install documentation verbosity application configuration python python import import parser rocco license contain installation parser database copyright control verbosity python module predictable command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python default configuration ability configuration application control install documentation verbosity application configuration python python import import parser rocco license contain installation parser database copyright control verbosity python module predictable command", "pypi_keywords_clean": ""}, "/pjson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "json xml"}, "OiNutter/rivets": {"git_readme_keywords": "full scss application override library enable embedded asset pass logical alphabetical order css javascript dependency management way underneath mount multiple pyscss implementation development single virtual ruby library filename enable power load embedded python library import comment syntax asset helper source filename python mako version rewritten necessary coffeescript language graph request asset common environment cherrypy implementation sass database javascript order right coffeescript coffeescript server request search javascript source response change retrieve asset web declarative dependency scss original application logical application asset search load filename example directory static default reserve length coffeescript asset original ruby instance class syntax array context instance credit sam asset directive append css github check asset cache argument directives declare bug submit order directive application combine outside application additional cherrypy compatible nested consist single stephenson sstephenson subsequent directives example css unix example coffeescript dependency graph example load bundle javascript bug question sstephenson josh bundle useful system rack server asset first order top pipeline single asset repository work original function url http load json language issue general append location current installation install import application example mount sass language single directory accessible logical insert body implementation scss http mount scss coffeescript environment rack top source single double class access environment load original library enable mako dispatcher application environment pass similar processor understands first word call action question please environment request syntax top directory asset multiple engine application reference mount environment current source asset example library compiling request url bundle directive asset source environment josh work asset bundle directives directive powerful coffeescript scss consistent understands comment python library load scss installation ruby gem module directory environment management javascript pull request scss syntax extension install pyscss helper virtual filesystem scss sass body current sam stephenson relative location cache response relative processor css public inheritance javascript asset extension python python check copy precedence subsequent final asset directives comment submit pull good javascript css javascript filename request asset gem implementation fix bug cherrypy plugin build dependency directive processor directives directory load special comment mako engine instance environment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-pipeline-rapydscript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "JIC-CSB/jicbioimage-segment": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor software github documentation license build documentation functionality travis package documentation standard segmentation namespace package python package documentation github coverage linux", "pypi_keywords_clean": "microscopy image analysis"}, "/instack-undercloud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "undercloud tripleo undercloud software license repository tripleo project", "pypi_keywords_clean": ""}, "uranusjr/django-tastypie-crust": {"git_readme_keywords": "example example accessible throught alexander authentication authentication collection throught tastypie internet stackoverflow particular rationale obvious tastypie stackoverflow stackoverflow decorator multiple thelonecabbage github originate accessible tastypie resource", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example example accessible throught alexander authentication authentication collection throught tastypie internet stackoverflow particular rationale obvious tastypie stackoverflow stackoverflow decorator multiple thelonecabbage github originate accessible tastypie resource", "pypi_keywords_clean": ""}, "stadtgestalten/schulze": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "schulze ranking vote election"}, "jcarbaugh/python-xrd": {"git_readme_keywords": "signature support signature support outstanding execpt compatible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "signature support signature support outstanding execpt compatible", "pypi_keywords_clean": ""}, "/unicornhat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "orientation bugfix compatibility support rotation optional orientation initialized brightness unicorn library raspberry release channel bugfix refactor requirement", "pypi_keywords_clean": "raspberry pi unicorn hat"}, "kolypto/exdoc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "predicate object module documentation extractor render helper output automatic background optional documentation object python necessary information property document argument necessary sqlalchemy function dictionary information extract necessary argument specification template disable", "pypi_keywords_clean": "documentation"}, "cyberdelia/flask-mysql": {"git_readme_keywords": "application install bug", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "codeskyblue/atx-uiautomator": {"git_readme_keywords": "match uiautomator basic status information method check device click selector selector select relative introduction handler current window connect android multiple request branch uiautomator speficy directory device support registered xiaocong yuanyuan center different usage iglikov google callback function possible result click screen environment correct codeskyblue codeskyblue selector identify commit serial number functionality handler xiaocong xiaocong option watcher selector match check watcher introduction detailed java device watcher represent android window selector android device register watcher match register screen press unchanged dump window error click action alternative method please submit enable install android issue github screenshot dump error please android sdk uiautomator different contribution fork jingjie xiscoxu uiscrollable uicollection allow apps function selector usage handler handler introduction license bug way object speficy object gesture java documentation normal identify specific device gesture action specific notification quick framework server follow error jsonrpc android uiautomator click specific click target check screen handler functionality uiselector java remove branch branch issue please issue selector introduction installation install watcher register anything android information child center center scroll specific child grandchild handler watcher device screen information perform match press keyevent gesture field perform selector child message watcher handler editable field information check b sdk bug object drag gesture specific gesture interaction element branch install section pass github jsonrpc server please object child device orientation b right child child hierarchy instance scrollable possible codeskyblue artem speficy serial please follow interaction device network device object possible update watcher click switch possible orientation specific access device installation check watcher object perform screen alternative artem iglikov faq server ok fork module information uiscrollable apps install pull request select window update submit issue check jsonrpc import uiautomator object basic object current server script device connect communicate device environment description instance google artikz computer android keyevent device simple relative position several gesture action drag screen introduction selector mingyuan codeskyblue install anything device object recent apps server perform click orientation possible submit pull install unknown documentation uiautomator module python window hierarchy uiautomator fork pc allow detailed information watcher perform please insert xu jingjie object status visible rotation perform scroll switch right server check check specific object scrollable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Frky/spread-confiture": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "check required jelled consistant template confiture forbidden flesh consistant whole template exception product object object configuration confiture confiture forbidden morning banana confiture installation breakfast example confiture small vegetable pectin heated confiture strikeout cookbooks define scheme python configuration documentation project nutella specified template template sugar moment", "pypi_keywords_clean": "yaml configuration config required fields template"}, "aioworkers/aioworkers": {"git_readme_keywords": "communication optional documentation documentation configuration subsystem abstract configurable", "git_description_clean": "easy configurable workers based asyncio", "git_keywords_clean": "python asyncio", "pypi_description_keywords": "default crontab process ipykernel subsystem history startup shutdown method abstractstorage filesystemstorage humanize abstractnestedentity supervisor purepath asyncpath command updater baseupdater deprecated correct default config zlibformatter scorequeue timestampqueue incompatible filesystemstorage example graphite lzmaformatter abstractnestedentity uninitialized extension hashfilesystemstorage config immutable parameter application regular method processlookuperror timestampzqueue default object interact length abstractreader abstractwriter interact backward incompatible private formatter propagate readline config plugin counter humanize example software optional documentation context contextmanager filesystemstorage support support extendable unicode pipeline pipupdater function negative number baseupdater example backward compatibility python optional prevent futurestorage mergedict check signature configuration subsystem groupresolver mergedict subclass ipython subprocess zlibformatter lzmaformatter subprocess check communication filesystemstorage correct crontab updater subprocess access interactive subprocess supervisor element resource httpstorage support context example pingpong config problem asyncpath backward asynqp explicity chainformatter fieldstoragemixin config support package filesystemstorage method family context dictreader executorentity additional aiohttp scorequeue interface documentation updater plugin abstractlistedstorage storageerror httpstorage filesystemstorage timestampqueue rediszqueue execution extractor software license validate config pingpong filesystemstorage atomic immutable config asyncpath configurable access optimization sequence config access member redisstorage interface abstract context access refactor storageerror method", "pypi_keywords_clean": "aioworkers"}, "strawlab/cgkit1": {"git_readme_keywords": "renderman interface updated compatible distutils documentation package package copyright distribution required generate collection install computer renderman standard location version example install everything generation directory distutils documentation documentation matthias platform browser everything standard directory important", "git_description_clean": "fork python cgkit library", "git_keywords_clean": "", "pypi_description_keywords": "renderman interface updated compatible distutils documentation package package copyright distribution required generate collection install computer renderman standard location version example install everything generation directory distutils documentation documentation matthias platform browser everything standard directory important", "pypi_keywords_clean": ""}, "elapouya/docxtpl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management richtext class document microsoft header footer support argument useful hyperlink attachment inlineimage undeclared richtext support subdocs nickgashkov complex wheel distribution documentation please method richtext subdoc filename autoescape support double richtext listing dynamic invalid example reformat distribution manage unicode modulo operator autoescape context subdoc management header template footer header filter example vm insert template filter python compatibility richtext subdocument gusmeroli simple double optionnal argument method useful generate microsoft custom jinja feature package compatible dependency python support template context subdoc support weinberg debug environment columns horizontal render autoescape template introduction powerful project please compatible wheel dynamic colspan forloop cleaning jinja filter support footer current sphinx package anything listing class class manage jinja declare package example document output option richtext introduction package exception little compliant wheel distrib package version support python paragraph escape inlineimage richtext limitation sphinx vertical footer support format template version limitation", "pypi_keywords_clean": ""}, "Rackspace-DOT/flask-keystone": {"git_readme_keywords": "installation package application application behavior extension object instantiation development project standard application specific keystone configuration application object accessible ability control familiar example similar documentation initialized configured extension application accessible application consistent openstack receive response application factory", "git_description_clean": "middleware authenticating apis keystone", "git_keywords_clean": "", "pypi_description_keywords": "installation package role receive extension add application application access keystone flask keystone extension section behavior valid token object instantiation certain configured add basic project application specific application object standard flask header consistent accessible ability control repo app flask example flask extension python similar documentation section guide way extension initialized configured keystone flask configuration file wrap application basic configuration instantiation flask access control good token familiar manner flask rax extension application accessible application consistent openstack rax keystone receive response admin role role configured manner development application factory factory app", "pypi_keywords_clean": "flask identity auth"}, "rainwoodman/sharedmem": {"git_readme_keywords": "python equivelant python python writable concern documentation mechanism critical sharedmem dispatch parallizable graceful process pickability unpicklable unexpected", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "grobins2/flask-scrypt": {"git_readme_keywords": "generate random generated random database check security check password install database information generate password extension installation function encryption", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "CygnusNetworks/pypureomapi": {"git_readme_keywords": "full descriptor explanation custom handle message subclass class generic lookup python example detailed explanation communication server flexible interaction message reference complete sequence tracker valid check output output readable linux dhcp pypureomapi python multiple random transaction custom integration message server configugration original pypureomapi pypureomapi hostname actual modification instance possibility library modify attribute interact dhcp command replacement pyomapic generate python implementation response evaluate group construct possible generate server receive constructor example output check full access check attribute access complete thing success extensibility dhcp server popular linux custom interaction connection groupname useful multiple response server lookup function server interaction implementation dhcp information config different integer lookup parameter evaluate response protocol lookup output object modify pyomapic server access receive response unreasonable method example python server python submit limited effort error option lookup modification message special", "git_description_clean": "dhcp omapi protocol implemented pure python", "git_keywords_clean": "", "pypi_description_keywords": "frustration server implementation protocol pyomapic swig modify pypureomapi replacement pyomapic module library module module", "pypi_keywords_clean": ""}, "/pypi-tools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package understand complex something django django gravatar gravatar application command django application application command something duplicated command understand python package complex search nothing utility example", "pypi_keywords_clean": "pypi search"}, "/eden": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "distribute software qquicklicence license library python lowercase subdirectory windows xp multiple library standard purpose warranty processing install python result fitness particular characteristic version search multiple directory compatibility software commercial license distribution tkinter version commercial noncommercial search mechanism license maximum program portable development installation multiplatform module search example status linux layout dynamic limitation existence proven proven feasible matter example killer copyright project anyone comprehend fresh developer functional figure evaluation derivative software existence windows kyvi rollback cyclic reveal whatsoever tutorial program organisation document practice proven import layout persistent decision indirect special description kyvi version understanding implied statutory available elaborated special consequential implied guarantee ironpython noncommercial purpose express implied maintainable program mechanism search application structure effective diverse engineering directory python proprietary commercial disclaimer proven pleasure complete specialistic proprietary respect continuity python distribution compatibility ironpython unique package engineering contributor theory merchantability fitness github production version purpose installation prevent multiple python software derivative public domain common qquick licence statutory warranty ironpython kyvi shortcut google licence qquick breach symlink library module linux windows particular purpose obsolete enjoy limitation liability source software correspondence deeply application cyclic exception complete rollback elaborated example suitable elaborated domain application consequential incidental software distribute situation console cpython future available several widget python version persistent practical flexible maintainable contributor software software license standard module software person software source everyday practice subdirectory declarative construction version development diversity proven portability owned version reflect ironpython cpython object license software overall program software software module mechanism", "pypi_keywords_clean": "eden kivy winforms observer functional"}, "/circuits": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "improvement component architecture relevance facebook performance scalable solution community supported standard library concurrency disclaimer question business employer network standard employer facebook synchronization architecture asynchronous coverage framework coroutine asynchronous application installation simplest maintain scalable compliant represent freebsd incorporate language quality application framework external lightweight channel", "pypi_keywords_clean": "event framework distributed concurrent component asynchronous"}, "nicholasserra/django-redis-status": {"git_readme_keywords": "instance compatible django overview recommend installation compatibility compatible django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overview work section recommend instance index", "pypi_keywords_clean": ""}, "jphalip/django-treemenus": {"git_readme_keywords": "basic section click optional variable sheet class menus internationalization attribute unique urls refer definition need reverse template need variable present filter application template particular menus menu admin interface django template class create load library extension object false hook extension available download create moment simple generic admin section release available interface click template folder pointer display application section create add need add attribute customize particular function show new application current url different pattern check box rank etc development version image simple class menus official python expression pattern change colour project python translation example template specify display menu attribute available extendable need menus image official release script template example attribute template refer section table bottom restriction css class update django pythonpath symlink extension model rank amongst system example raw urls variable accessible sample method custom translation refer official report enjoy form disctinction treemenus application style sheet menus project unpack python directory unique link menu context create special status refer statement form add many behaviour example building menus click add private available select root url menu template template create database passed value build menu inline form inspire select menu enjoy project call following passed template possible notice extension possible project need project extension manage translation regular expression pass django textfield menu log menu menu building menu menu display determine display good example python documentation root fill menu admin special css click menu root project model class attribute example pointer menu level example following statement extension application click menus python syncdb display menus point call interface example special style developer phalip folder folder appropriate special behaviour first define add menu necessary specify project create django documentation new menu define style complex custom database table issue bug string know django python build whole first load form extension add folder etc change structure add passed single customize menu urls example information example menu etc url template url first essential behaviour project developer contain extra python installation template tag context pointer section present class contain method manage display access project add regular attribute menu create menu extension menu menu app show user behaviour menu available pypi menuing system command root syncdb create official source run command attribute optional required extension ifequal sometype link menu add special urls menu pip app add log issue moment need need create extension class object attribute distinguish technique menus easy download distribution folder pythonpath specific specify display example template define extension access current documentation please menu extension root click menu root illustrate module symlink junction menus admin specify form following required menu behaviour specify url log admin urlconf django provide essential add following notice attribute whole structure create filter requestcontext object many interface attribute documentation example following template add custom example passed example add caption interface project url example level hierarchy flexibility specify project template first empty rank second rank example sometype determine need specify specify urls following structure certain menu translation attribute load module example illustrate attribute specify illustrate power system admin bug report menus treemenus following attribute create new example root bug fixes template documentation manipulate call wherever create directory calculated system possible add single string django project extend menu context variable please log select parent branch rank refer example example check application create create model following command access root class define add attribute generic menuing command package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic section click optional variable sheet class menus internationalization attribute unique urls refer definition need reverse template need variable present filter application template particular menus menu admin interface django template class create load library extension object false hook extension available download create moment simple generic admin section release available interface click template folder pointer display application section create add need add attribute customize particular function show new application current url different pattern check box rank etc development version image simple class menus official python expression pattern change colour project python translation example template specify display menu attribute available extendable need menus image official release script template example attribute template refer section table bottom restriction css class update django pythonpath symlink extension model rank amongst system example raw urls variable accessible sample method custom translation refer official report enjoy form disctinction treemenus application style sheet menus project unpack python directory unique link menu context create special status refer statement form add many behaviour example building menus click add private available select root url menu template template create database passed value build menu inline form inspire select menu enjoy project call following passed template possible notice extension possible project need project extension manage translation regular expression pass django textfield menu log menu menu building menu menu display determine display good example python documentation root fill menu admin special css click menu root project model class attribute example pointer menu level example following statement extension application click menus python syncdb display menus point call interface example special style developer phalip folder folder appropriate special behaviour first define add menu necessary specify project create django documentation new menu define style complex custom database table issue bug string know django python build whole first load form extension add folder etc change structure add passed single customize menu urls example information example menu etc url template url first essential behaviour project developer contain extra python installation template tag context pointer section present class contain method manage display access project add regular attribute menu create menu extension menu menu app show user behaviour menu available pypi menuing system command root syncdb create official source run command attribute optional required extension ifequal sometype link menu add special urls menu pip app add log issue moment need need create extension class object attribute distinguish technique menus easy download distribution folder pythonpath specific specify display example template define extension access current documentation please menu extension root click menu root illustrate module symlink junction menus admin specify form following required menu behaviour specify url log admin urlconf django provide essential add following notice attribute whole structure create filter requestcontext object many interface attribute documentation example following template add custom example passed example add caption interface project url example level hierarchy flexibility specify project template first empty rank second rank example sometype determine need specify specify urls following structure certain menu translation attribute load module example illustrate attribute specify illustrate power system admin bug report menus treemenus following attribute create new example root bug fixes template documentation manipulate call wherever create directory calculated system possible add single string django project extend menu context variable please log select parent branch rank refer example example check application create create model following command access root class define add attribute generic menuing command package", "pypi_keywords_clean": ""}, "ofek/bit": {"git_readme_keywords": "package distributed universal readable multiple inspired redundancy exchange library optimal transaction successful support transaction blockchain deterministic documentation library seamless seamless integration courtesy transaction gotchas optional continue installation gotchas bestowing available implementation different understand transaction continue intuitive effortless", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package distributed universal readable multiple inspired redundancy exchange library optimal transaction successful support transaction blockchain deterministic documentation library seamless seamless integration courtesy transaction gotchas optional continue installation gotchas bestowing available implementation different understand transaction continue intuitive effortless", "pypi_keywords_clean": "bitcoin cryptocurrency payments tools wallet"}, "cooledcoffee/decorated": {"git_readme_keywords": "function multiple conditional loggingd powerful helpful aregument parameter decorator function unified framework", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "eclarke/argutils": {"git_readme_keywords": "bash python example let let write message number flag yaml output output message help file useful configparser import argument parser message exit print default init write bash pip spec file yaml help nothing configparser python init help program help message print message exit message hello world file installation output help print number python help message message world hello argument help many got bash world python stdout type argtype flag message output write config excluded file default true argtype interface json message print line output init output write write file toy program program yaml importerror import file optional file call pip install default hello message default file true type init usage example call program default type message hello file init config file true default init help init program default stdout flag python particular main let file message config yaml file world many name main export output file file let world specify configparser configparser print print python hello installation bash argument spec json yaml import configparser help write main name help usage precedence usage message documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bash python example let let write message number flag yaml output output message help file useful configparser import argument parser message exit print default init write bash pip spec file yaml help nothing configparser python init help program help message print message exit message hello world file installation output help print number python help message message world hello argument help many got bash world python stdout type argtype flag message output write config excluded file default true argtype interface json message print line output init output write write file toy program program yaml importerror import file optional file call pip install default hello message default file true type init usage example call program default type message hello file init config file true default init help init program default stdout flag python particular main let file message config yaml file world many name main export output file file let world specify configparser configparser print print python hello installation bash argument spec json yaml import configparser help write main name help usage precedence usage message documentation status", "pypi_keywords_clean": ""}, "sacrud/pyramid-sacrud": {"git_readme_keywords": "administration mechanism traversal standard question different documentation overview flexibility development interface similar interface mongodb contribution sqlalchemy channel example", "git_description_clean": "admin crud interface pyramid works backends", "git_keywords_clean": "crud admin python", "pypi_description_keywords": "administration interface similar mechanism traversal standard question sqlalchemy handler classic resource pyramid sqlalchemy mongodb sqlalchemy paginate overview pyramid different documentation overview flexibility interface groupresource contribution interface pyramid channel support development", "pypi_keywords_clean": ""}, "jgorset/fandjango": {"git_readme_keywords": "fandjango application installation contribute bunch awesome facebook request library passionate repository elaborate installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full facebook javascript upgraded number available version picture fixed attribute attribute multiple library gender fandjango fandjango compatible work hyper support facebook cached repository thing facepy request application fix application authorization south database fandjango version facebook application hyper bunch graph passionate good fixed issue javascript sdk timezone permission recent return endless redirection python decorator access fixed authorize application official python empty querydict incompatible django truthy fresh sdk initialized request contain https canvas migration application deauthorization attribute information bunch awesome method facebook platform result invalid sdk template querydict instance facebook platform website locale location consistency fandjango suffixed information facebook request available readme django internationalization fandjango request availabe facebook facebook initial application little permission fixed extend access locale work gender internal facebook fixed bug available information explorer offline argument ignored hometown installation fandjango typeerror django keyerror facebook picture available norwegian norwegian localization attribute request expiry hyper work parenthesis fixed configuration request object website birthday elaborate installation hometown location feature version constant installation contribute offline access fix importerror number available fandjango extend application offline sdk fix facepy facebook fandjango object attribute dependant facebook condition optional argument cached initial request facebook canvas cookie fixed request deauthorization pull request fandjango available possible direct result request method queried facebook fandajngo decorator optional feature facebook permanent decorator incompatible result facebook history fixed constant fandjango attributeerror python sdk everything little elaborate version number access permission fandjango crash exception fandjango facebook python instance favourite importerror fixed http facebook official request facepy fix bug feature fandjango client cookie truthy integrityerror fixed method fandjango internet explorer instance facebook favourite graph", "pypi_keywords_clean": ""}, "adamnovak/tsv": {"git_readme_keywords": "field write library python python installation value library provision", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bradmontgomery/django-rainbowtests": {"git_readme_keywords": "standard django compatibility default normal coverage coverage report complete django python issue coverage fancy coverage license install output colorful version colorful version experimental report coverage version release custom license target experimental support add python python version standard current release work django otherwise please release target django installation runner django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django compatibility default normal coverage coverage report complete django python issue coverage fancy coverage license install output colorful version colorful version experimental report coverage version release custom license target experimental support add python python version standard current release work django otherwise please release target django installation runner django", "pypi_keywords_clean": ""}, "/schroot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "schroot python", "pypi_keywords_clean": ""}, "praekelt/vxaat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "general support tracker please transport tracker general network github development contact", "pypi_keywords_clean": ""}, "/csvschema": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "columns first example create column value order need column column describe inclusive number true column use module blank set b example csv file single b cs false inclusive decimalcolumn cs class cs true b c particular column first column maximal lenght equal course column set single structure whole value need implement impropervaluerestrictionexception class first constructor import basecolumn error message set column column evaluation second position inclusive maximal value comma csvschema simple use column false cs value inclusive method situation need message appropriate assign many simple csv c true implement subclass kind true cs csv schema b b value condition column csv basecolumn column subclass example list return decimalcolumn blank class testcsvstructure cs cs notice column decimalcolumn stringcolumn use csvschema import intcolumn b situation structure attribute csvschema store validation first basecsvstructure import c false file look b false empty wrong basecolumn import operator combine example import describe complex true example blank blank exclusive maximal additional keyword cs c order evaluate b true value shorter file description mycolumn basecolumn attribute custom stringcolumn blank set columns blank instance numerical course change false notice column specific schema use import basecsvstructure complex validation form csv whole whole expression true equal evaluate true wrong value create instance remember similar use logic create complex testcsvstructure basecsvstructure evaluation cs basecsvstructure example schema class class important intcolumn blank many need parameter list structure class want validation equal table column empty csvschema csvschema columns whole value list method whole column b simple validation position file file second minimum easy use cs b value equal special inner schema testcsvstructure b import second csvschema easy decimal lenght value example instance cs false possible import impropervaluerestrictionexception want column intcolumn decimalcolumn value exclusive columns behavior fill column comma total testcsvstructure first column assign specific value fill columns building course empty change validation inner class class mycolumn want define express complex shorter maximal need example c cs different file first constructor parameter total number value column column columns equal equal exclusive minimum stringcolumn class custom error import cs", "pypi_keywords_clean": ""}, "smn/springboard": {"git_readme_keywords": "springboard documentation pypi springboard continuous integration coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package standard changelog redirect language parameter support thumbor markdown springboard documentation springboard unknown system command configured gunicorn functionality continuous integration coverage language direction pagination language", "pypi_keywords_clean": "web"}, "/mecab-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python install install directory change install program installation python install change example python option example", "pypi_keywords_clean": ""}, "OpenMDAO/openmdao": {"git_readme_keywords": "install runtime message openmdao python package index install pypi build documentation command documentation coverage building browse documentation documentation change import openmdao version openmdao install cloned include system stable openmdao install openmdao openmdao install index pypi install recorder install developer openmdao version pypi github csv dump generator install available development status system information documentation openmdao openmdao development calculation automatic ordering optional important notice frequent openmdao cloned install developer install everything result similar install optional update report directory cloned repository necessary release documentation generator install development repository install documentation third repository reflect third option repository source documentation documentation building documentation similar build browser repository openmdao update repository solver install editable documentation build source python package legacy openmdao github repository", "git_description_clean": "openmdao repository", "git_keywords_clean": "nasa framework beta openmdao optimization", "pypi_description_keywords": "analysis multidisciplinary multidisciplinary optimization efficient numerical", "pypi_keywords_clean": "optimization multidisciplinary analysis"}, "amoffat/sh": {"git_readme_keywords": "status collection system branch environment coverage program function implemented subprocess replacement coverage status version installation development generate visual", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status collection system branch environment coverage program function implemented subprocess replacement coverage status version installation development generate visual", "pypi_keywords_clean": "subprocess process shell launch program"}, "mtigas/django-medusa": {"git_readme_keywords": "renderer overwrite default backend dynamic extension uninterested library possible brandon taylor project license caccamo mishbah install python website output browser accessible unmaintained renderer example installation complex example internal generator django process content january mimetype tutorial generation conversion something similar renderer backend generator mirror uploaded browser example renderer profit example renderer amazon google object directory upload jekyll movable section filename mishbah razzaque", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django static staticwebsite staticgenerator publishing"}, "malexer/meteocalc": {"git_readme_keywords": "temperature equivalent temperature relative temperature temperature temperature celsius combined available convert determine equivalent attempt determine install available apparent temperature history convert temperature equivalent temperature version celsius fahrenheit temperature apparent meteorological different relative humidity meteocalc several humidity attempt temperature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "temperature equivalent temperature relative temperature temperature temperature celsius combined available convert determine equivalent attempt determine install available apparent temperature history convert temperature equivalent temperature version celsius fahrenheit temperature apparent meteorological different relative humidity meteocalc several humidity attempt temperature", "pypi_keywords_clean": "meteorology meteo dew heat heatindex humiture humidex feels like temp temperature wind chill"}, "texas/tx-people": {"git_readme_keywords": "application project template installation generic directory information installation configuration directory", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application project template installation generic directory information installation configuration directory", "pypi_keywords_clean": ""}, "/xunitparser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reference available standard helpful previous testsuite xunitparser description testcase inherit multiple description xunitparser development", "pypi_keywords_clean": ""}, "maxfolley/django-bootstrap-admin": {"git_readme_keywords": "project development install directory bootstrap django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "check quick bootstrap bootstrap custom static directory django", "pypi_keywords_clean": ""}, "sacanix/flask-nytro": {"git_readme_keywords": "installation package random convention granularly quick tutorial extension useful intermediate granularly configuration folder bluepirnt blueprint execute aplication folder content python import blueprint facility development something import django pluggable access relationship template understand installation disable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "facility development extension", "pypi_keywords_clean": ""}, "clab/dynet": {"git_readme_keywords": "translation morphological example ubuntu language processing mercurial installed carnegie assertion dynamic machine translation university adventurous folder development network library documentation command instance example revision mercurial install installation research homebrew efficient variety training instance application technical documentation compile important natural tutorial morphological inflection request github installed standard syntactic contact homebrew installation appreciate natural language external installation install network toolkit welcome contribution", "git_description_clean": "dynet dynamic neural network toolkit", "git_keywords_clean": "", "pypi_description_keywords": "appveyor example ubuntu language processing mercurial installed chaitanya malaviya toolkit graham carnegie lingpeng assertion dynamic article university adventurous development container network library goldberg yusuke command clothiaux trevor instance example python installation adhiguna kuncoro revision swayamdipta pengcheng mercurial install garrette yangfeng preprint version feature homebrew efficient variety research python training instance application technical important natural ballesteros installed standard contact compile appreciate natural language external matthew richardson toolkit general installation install swabha swayamdipta request network toolkit faruqui cynthia receive welcome contribution", "pypi_keywords_clean": ""}, "/winappdbg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mrf345/flask-datepicker": {"git_readme_keywords": "remember random datepicker module default extension extension credit random source default reload plugin function follow importance specific available template credit datepicker source extension multiple configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple template javascript extension", "pypi_keywords_clean": "flask"}, "textmagic/textmagic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "textmagic"}, "/janome": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "\u975e\u81ea\u7acb \u526f\u8a5e\u53ef\u80fd analyzer import token \u3059\u3082\u3082 acknowledgement special python general python import takuyaa nakagami import text import tokenizer compoundnounfilter posstopfilter apache license tomoko uchida print token tokenizer import tokenizer token \u9023\u4f53\u5316 import import unicodenormalizecharfilter regexreplacecharfilter posstopfilter lowercasefilter \u5f62\u614b\u7d20\u89e3\u6790\u5668 bash venv license install lowercasefilter analyzer analysis engine janome japanese text print \u3059\u3082\u3082 \u30b9\u30e2\u30e2 \u4fc2\u52a9\u8a5e japanese morphological token print memory building \u52a9\u52d5\u8a5e \u4f53\u8a00\u63a5\u7d9a token janome \u52a9\u52d5\u8a5e \u57fa\u672c\u5f62 python install nakagami copyright wiki \u30b9\u30e2\u30e2 \u30b9\u30e2\u30e2 copyright copyright import analyzer regexreplacecharfilter tokenizer \u5f62\u614b\u7d20\u89e3\u6790\u5668 \u30b1\u30a4\u30bf\u30a4\u30bd\u30ab\u30a4\u30bb\u30ad\u30ad general documentation tokenizer compoundnounfilter tokenizer tokenizer english japanese text unicodenormalizecharfilter janome janome venv python token text documentation english \u56fa\u6709\u540d\u8a5e \u30b1\u30a4\u30bf\u30a4\u30bd\u30ab\u30a4\u30bb\u30ad\u30ad \u30b1\u30a4\u30bf\u30a4\u30bd\u30ab\u30a4\u30bb\u30ad\u30ad analyzer tokenizer morphological analysis", "pypi_keywords_clean": ""}, "/aspen-sentry": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "riga/scinum": {"git_readme_keywords": "contribute optional dependency uncertainty propagation particular example multiple container development checkout documentation example composite scientific rounding notebook definition multiple installation rounding formatting guassian formatting rounding automatic gaussian sophisticated rounding different propagation scientific specific operation replacement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute optional dependency uncertainty propagation particular example multiple container development checkout documentation example composite scientific rounding notebook definition multiple installation rounding formatting guassian formatting rounding automatic gaussian sophisticated rounding different propagation scientific specific operation replacement", "pypi_keywords_clean": "scientific numbers error systematics propagation"}, "ionelmc/python-redis-lock": {"git_readme_keywords": "package software bsd associate identifier django dogpile understand backend implementation dogpile effect function application renewal effect django stampede pattern useful expiry optional license interface documentation development identify instance standard actual similar expiration bsd license polling solution exception diagram documentation python application convenience install pypy convenient function method convenience spinloop overview parameter combination something release coverage status optional expiry individual process different require context manager problem block documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "groenen weyrich reorganize associate identifier django dogpile understand backend implementation pashkin documentation dogpile effect function application renewal effect django stampede pattern useful expiry optional license interface jardel weyrich documentation development identify instance standard actual support garbage similar yokotoka cleanup operation polling macdonell solution constructor exception diagram documentation python software application convenience install convenient function spinloop pashkin specify overview unsupported parameter combination django integration someone sloppy renewal thread something functionality signal release necessary attribute optional expiry vuotila efficiency individual process different backend wrapper require context manager problem incompatible expiration changelog specific exception", "pypi_keywords_clean": ""}, "/grunt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extensible grunt installation example customizable grunt grunt extensible slideshow grunt example grunt grunt grunt grunt customizable", "pypi_keywords_clean": ""}, "carpedm20/ndrive": {"git_readme_keywords": "documentation documentation ndrive python license python installation available implement copyright copyright documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "ndrive ndrive"}, "nipy/pysurfer": {"git_readme_keywords": "visualization informative important launch cortical freesurfer installed project facilitate documentation tksurfer program example powerful visualization library writing pysurfer directory repository information complex license available facilitate production interface documentation license freesurfer tksurfer official", "git_description_clean": "cortical neuroimaging visualization python", "git_keywords_clean": "", "pypi_description_keywords": "python visualization", "pypi_keywords_clean": ""}, "/levit-report": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package download screenshot libreoffice headless convert library template associate project installation configuration available several version regular libreoffice machine relatorio template application installation libreoffice window browser template section associate contenttype", "pypi_keywords_clean": ""}, "aloetesting/aloe-webdriver": {"git_readme_keywords": "limitation gherkin infoxchange danielle copyright selenium copyright merchantability documentation install danielle software express substantial purpose noninfringement liability contract permission distribute sublicense warranty restriction publish distribute particular purpose connection software software software", "git_description_clean": "behavior driven development using cucumber python selenium integration", "git_keywords_clean": "aloe gherkin selenium django bdd python", "pypi_description_keywords": "limitation gherkin infoxchange danielle copyright selenium copyright merchantability documentation install danielle software express substantial purpose noninfringement liability contract permission distribute sublicense warranty restriction publish distribute particular purpose connection software software software", "pypi_keywords_clean": ""}, "uogbuji/amara3-iri": {"git_readme_keywords": "resource processing variety", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library processing internationalized", "pypi_keywords_clean": "web data url uri iri"}, "/glance-store": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library library library project license version license library outside purpose interface version documentation rosmaita explanation additional specific general purpose vulnerability repository project official governance follow", "pypi_keywords_clean": ""}, "sandlbn/django-bootstrap-calendar": {"git_readme_keywords": "templatetags template instalation section bootstrap calendar calendar javascript section", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "templatetags template javascript history instalation django bootstrap calendar calendar django", "pypi_keywords_clean": ""}, "gregoil/ipdbugger": {"git_readme_keywords": "ipdbugger division console target shell session exception surrounds statement available decorator couple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ipdbugger division console target shell session exception surrounds statement available decorator couple", "pypi_keywords_clean": "ipdb debug debugger exception"}, "/numconv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation library apache default", "pypi_keywords_clean": ""}, "aio-libs/aioftp": {"git_readme_keywords": "level extensible proxy aioftp pyftpdlib fallback server simple server apache license possible license aioftp overridden python license script aioftp client example travis status minimum usable version python server support simple extensible branch something extend current standard format ftpbench script server benchmark library installation install aioftp aioftp documentation client license library asyncio contain example python python server directive aioftp server example", "git_description_clean": "ftp asyncio http", "git_keywords_clean": "ftp asyncio python", "pypi_description_keywords": "status master extensible proxy aioftp pyftpdlib fallback server simple server apache license possible master branch license aioftp overridden python license script aioftp client example travis status minimum usable server support simple extensible something extend current standard format ftpbench script server benchmark library installation install aioftp aioftp documentation client license library documentation master contain asyncio example python python server directive aioftp server example", "pypi_keywords_clean": ""}, "tkf/sexpdata": {"git_readme_keywords": "information license licensed b install b b parser python sexpdata install sexpdata", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information license licensed b install b b parser python sexpdata install sexpdata", "pypi_keywords_clean": "lisp parser"}, "eraclitux/ipcampy": {"git_readme_keywords": "package screenshot address username username password configuraton development snapshot interval configuration similar firefox surveillance process extendibility credited ipcampy repository control integrated webserver intellectual property favicon disclaimer respective different interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package screenshot address username username password configuraton disclaimer development snapshot interval support configuration similar functionality process firefox surveillance example extendibility credited ipcampy control repository integrated webserver intellectual property respective different interface official", "pypi_keywords_clean": "ipcam foscam raspberrypi surveillance"}, "dossier/dossier-web": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "available documentation installation various", "pypi_keywords_clean": ""}, "wheerd/multiset": {"git_readme_keywords": "hashable implementation hashable implementation multiplicity unordered collection positive standard library combination support immutable contrast standard installation coverage membership overview dictionary documentation documentation intersection symmetric symmetric difference information particular documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hashable implementation hashable implementation multiplicity unordered collection positive standard library combination support immutable contrast standard installation coverage membership overview dictionary documentation documentation intersection symmetric symmetric difference information particular documentation available", "pypi_keywords_clean": ""}, "CoryDolphin/flask-jsonpify": {"git_readme_keywords": "support implementation jsonify function request response import jsonpify import jsonify callback extension jsonpify support compatible installation installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python support implementation jsonify function request response import jsonpify import jsonify callback extension jsonpify support certain compatible installation installed", "pypi_keywords_clean": ""}, "sf-zhou/prett": {"git_readme_keywords": "project framework python value pretty project default property conversion signal value value property convert inherited stringintitem storage project useful property change framework pretty", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "qt ui"}, "jendrikseipp/vulture": {"git_readme_keywords": "original program reliably generated whitelist useful untested python dynamic pyflakes coverage vulture vulture output vulture ignore unused python whitelist output syntax unused option option vulture parameter quality python interpreter build abstract vulture mydir coverage module appveyor decorator helpful confidence invalid command analysis project program whitelist vulture ignore vulture pypi syntactic correctness dynamic nature example flask number whitelist python syntax error invalid input description function guide changelog participate please unreachable error wrong pyflakes output vulture analyzed flag directory vulture vulture helpful unused nonetheless nature static mydir collect similar python installation whitelist simulate whitelisted coverage install vulture helpful example status linux whitelist vulture nonetheless vulture python python travis mydir vulture detect common python minimum confidence abstract syntax build status complete possible python module recommended method vulture library vulture likely module build vulture report python changelog roadmap unsatisfiable message unused python script chunk object prioritize look", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "original program whitelist format terrace detect function underscore minimum reliably accurate create generated whitelist variable names useful imported import names format untested python dynamic pyflakes coverage vulture vulture method return separate output vulture add python drop support unused python report unreachable whitelist reading input setuptools output syntax unused class inherit option option vulture defined multiple stub whitelist error message commandline parameter names new quality class names relevant python interpreter detect unsatisfiable source build abstract defined import please visit vulture mydir coverage module import vulture default decorator helpful names names license gpl invalid command analysis project names program whitelist system default show warning vulture ignore vulture pypi function names reporting output flag reporting syntactic correctness add stub vulture class module add repository github dynamic nature new format global python flag example flask number faster accurate function method whitelist python glob underscore show syntax error invalid input create wheel description whitelist module ignore variable names defined function guide changelog add support object names first release travis ci add participate please alphanumeric variable unreachable module drop support tox visit report pypi pip ignore whole pyflakes output vulture error wrong unused tuple accessed module analyzed flag output whitelist likely miss fix add option directory vulture simulate usage detect greet pip install add flag vulture helpful variable attribute nature static unused nonetheless mydir collect import whitelist whitelist defined standard library unused function ignore function add appveyor similar detect unused python installation class detect support installation roadmap news jackric count whitelist simulate whitelisted coverage install vulture create whitelist greet method null ignore names florian bruhin helpful example report multiple status linux whitelist vulture add version nonetheless vulture add method python python bruhin consider whitelist unused version parameter mydir vulture detect unreachable names imported news add support report common python minimum confidence ci build abstract syntax build status complete os message ignore class possible python module add whitelist attribute names actual consider recommended method flag names documentation installation pip pull vulture library vulture likely first github detect tuple module build vulture report speedup first python changelog roadmap report unused unsatisfiable report attribute child many ignore greet python reading script add usage vulture exitcode support python warning syntax appveyor ci message unused vulture script python script x ignore unused prioritize look python standard report syntax refactor", "pypi_keywords_clean": ""}, "/django-boundaryservice": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "github", "pypi_keywords_clean": ""}, "AlexandreProenca/django-auto-rest-project": {"git_readme_keywords": "django restful restful baseado command database exemple projeto django modern template installation django functionality swagger template django exemplo framework project package instalar document django django digitar comando restful project digitar interface facilitate creation install package creation django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django"}, "/bayesian": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "person cancer b root folder print b positive folder class bayes cancer result b bayesan small tomorrow classify genuine b coffee meeting emails buy b print recipient genuine email word meeting emails print b bayes buy x schedule meeting parameter high corpus email meeting b x meeting model model b cancer female print import classify filter database python utility b b random equivalent system extract meeting model cancer random classify genuine database number buy viagra tomorrow buy bayesian bayesan high level spams buy meeting buy chance cancer print likely folder low buy coffee print coffee extract corpus low level language print meeting genuine bayes instance message spams emails emails filter email classic cancer message classify spams print cheating likely print emails genuine emails analyzed tomorrow genuine classify update email emails bayes print belief genuine meeting import bayes utility reason program command bayesian import cancer cancer print email cancer bayes email buy print print email corpus python java classify message print classic email likely level bayesian sexy analyzed emails viagra buy genuine emails bayes update bayesian system tomorrow tomorrow print problem chance print folder print classify meeting tomorrow small python model print", "pypi_keywords_clean": ""}, "Mashape/unirest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "texperience/django-bootstrap-ui": {"git_readme_keywords": "documentation mainstream integrated codebase mainstream python parameterized template extensive documentation python django django python bootstrap bootswatch possible integration popular bootstrap markup identifier default python installation generate available coverage transparency framework intuitive template bootstrap template bootstrap component django support parameter markup extensive welcome codebase technical integration bootstrap backward compatibility contribution support outstanding complete bootstrap template variable support different powerful django python bootstrap", "git_description_clean": "aims powerful django app ease integration popular bootstrap ui framework http", "git_keywords_clean": "python django bootstrap", "pypi_description_keywords": "documentation mainstream integrated codebase mainstream python parameterized template extensive documentation python django django python bootstrap bootswatch possible integration popular bootstrap markup identifier default python installation generate available coverage transparency framework intuitive template bootstrap template bootstrap component django support parameter markup extensive welcome codebase technical integration bootstrap backward compatibility contribution support outstanding complete bootstrap template variable support different powerful django python bootstrap", "pypi_keywords_clean": ""}, "Christophe31/screenutils": {"git_readme_keywords": "contribute license wtfpl initialized report modification screen session screen support property status screen installation instance access screen screen screen screen funky output change logfile equivalent bpython roadmap source available status screen documentation screen property visibility df detach screen wtfpl example binary allow feature insertion screen df filesystem screen command allow maintainer import screen object generator caution project session creation example python screen equivalent associated screen python console creation screen", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute license wtfpl initialized report modification screen session screen support property status screen installation instance access screen screen screen screen funky output change logfile equivalent bpython roadmap source available status screen documentation screen property visibility df detach screen wtfpl example binary allow feature insertion screen df filesystem screen command allow maintainer import screen object generator caution project session creation example python screen equivalent associated screen python console creation screen", "pypi_keywords_clean": ""}, "ubidots/ubidots": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "attribute general variable retrieve method apiclient method number return paginator python machine necessary install iterate method return number integer source python forget integer float specific variable microsoft variable variable method source version datasource error group library ubidots linux service single variable account instance class invalid method instance apiclient instance computer device object aditional example python available ubidotserror full possibility request specify timestamp aditional attribute request ubidots single request python update server assign think python instance python keys device virtual ubidotsbulkoperationerror error exception ubidotsinvalidinputerror python timestamp available pypi connect instance apiclient paginator object token connect arrived instantiated variable install command python library general message specific machine computer update several keys optional pypi install method python timestamp optional timestamp record ubidots python token optional python several device download n message error assign current request python available ubidots http virtual source variable python different detail gaurd datasource error attribute retrieve variable class variable variable return", "pypi_keywords_clean": ""}, "sdispater/cleo": {"git_readme_keywords": "command print completion application python signature access argument value option second example target create useful multiple bash option class documentation information command create add combine usage option command python python method determine command quiet level value combine image beautiful testable print message python verbosity indefinite number input option order execution option value flag bash pass keyword task greet application python new option application bash remember order straightforward python suppress output add new specify flag normal command command python available command definition argument required uppercase bash create beautiful possible print required argument completion level example pass verbosity python command example print argument optional bunch python quiet level write argument support autocompletion stderr single dash bash print shortcut optional therefore option output python access optional option user remember surround required python form python specific verbosity option notation argument command special io status target autocompletion console option notation value option command console python available foreground specify autocompletion pass possible define optional required optional argument new command boolean flag required option default value foreground background build status register completion verbosity level everything uppercase method python required example contain indefinite optional setup example add work bash default verbosity whole console add optional terminal message command output python argument several empty command specific message multiple output example python verbosity flag semantic console application essential argument contain value required specify order bash access io class example python python register color output automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "command print completion application python signature access argument value option second example target create useful multiple bash option class documentation information command create add combine usage option command python python method determine command quiet level value combine image beautiful testable print message python verbosity indefinite number input option order execution option value flag bash pass keyword task greet application python new option application bash remember order straightforward python suppress output add new specify flag normal command command python available command definition argument required uppercase bash create beautiful possible print required argument completion level example pass verbosity python command example print argument optional bunch python quiet level write argument support autocompletion stderr single dash bash print shortcut optional therefore option output python access optional option user remember surround required python form python specific verbosity option notation argument command special io status target autocompletion console option notation value option command console python available foreground specify autocompletion pass possible define optional required optional argument new command boolean flag required option default value foreground background build status register completion verbosity level everything uppercase method python required example contain indefinite optional setup example add work bash default verbosity whole console add optional terminal message command output python argument several empty command specific message multiple output example python verbosity flag semantic console application essential argument contain value required specify order bash access io class example python python register color output automatic", "pypi_keywords_clean": "cli commands"}, "osupython/pip2": {"git_readme_keywords": "example freeze search pypi pypi freeze display example uninstall search search uninstall uninstall example search", "git_description_clean": "experimental port pip distutils", "git_keywords_clean": "", "pypi_description_keywords": "example freeze search pypi pypi freeze display example uninstall search search uninstall uninstall example search", "pypi_keywords_clean": "pip packaging setuptools"}, "benhoff/vexbot": {"git_readme_keywords": "python asyncio python developer example ubuntu distro install everyone climate status vexbot systemctl session launch command complete install vexbot status pluggable launch vexbot architecture development useable virtual environment installation documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "DCASE-REPO/dcase-util": {"git_readme_keywords": "classification acoustic research collection documentation detailed instruction available detection classification implemented readable various standalone library challenge", "git_description_clean": "collection utilities detection classification acoustic scenes events", "git_keywords_clean": "dcase", "pypi_description_keywords": "classification acoustic research instruction collection documentation available detection classification implemented readable various standalone library challenge", "pypi_keywords_clean": "audio sound"}, "/empy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python special prefix prefix default markup language arbitrary python system playback command chainable configurable special", "pypi_keywords_clean": ""}, "robcharlwood/django-mothertongue": {"git_readme_keywords": "translation application simplify charlwood robcharlwood directory documentation appropriate charlwood anybody", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "translation application mothertongue simplify appropriate django", "pypi_keywords_clean": "django model translation internationalization"}, "irskep/sphinx-better-theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package structure block semantic markup complete customization predictable example repository submodule themeconf documentation install command impractical several readability installation regular whitespace encourage something frivolous compatibility compatible frequency contain version default", "pypi_keywords_clean": ""}, "nicolargo/pymdstat": {"git_readme_keywords": "version pythonic pythonic library pymdstat", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version pythonic pythonic library pymdstat", "pypi_keywords_clean": "raid linux"}, "rosscdh/hellosign": {"git_readme_keywords": "rosscdh implementation installation installation virtualenv implementation implementation excellent hellosign isnotahippy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "powervm/pypowervm": {"git_readme_keywords": "passing parameter property passing message mapping pypowervm python management dictionary argument current intuitive hierarchical useful property removal suitable passing arbitrary dictionary development argument method lu wrapper install library license overview pypowervm developer functional output passing arbitrary project structure packaging metadata license project example development implementation powervc argument property property january capacity monitoring specify parameter initializer property directory structure common independent directory specific powervm release wrapper powervm parameter adapter wrapper interaction powervm performance internationalization complex compatibility powervc environment variable performance capacity novalink environment authentication mechanism license library example invocation decorator", "git_description_clean": "python library interacting powervm api", "git_keywords_clean": "", "pypi_description_keywords": "passing parameter property passing message mapping pypowervm python management dictionary argument current intuitive hierarchical useful property removal suitable passing arbitrary dictionary development argument method lu wrapper install library license overview pypowervm developer functional output passing arbitrary project structure packaging metadata license project example development implementation powervc argument property property january capacity monitoring specify parameter initializer property directory structure common independent directory specific powervm release wrapper powervm parameter adapter wrapper interaction powervm performance internationalization complex compatibility powervc environment variable performance capacity novalink environment authentication mechanism license library example invocation decorator", "pypi_keywords_clean": ""}, "scrapinghub/flatson": {"git_readme_keywords": "software license documentation schema configuration memory schema default serialization behavior behavior schema configure", "git_description_clean": "tool flatten stream objects configured via schema", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation schema configuration annotated schema default serialization behavior release behavior schema configure", "pypi_keywords_clean": "flatson"}, "tonyseek/flask-navigation": {"git_readme_keywords": "reueqst status wheel status navigation coverage status application installation version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status wheel status navigation request coverage status version installation", "pypi_keywords_clean": "navigation flask navbar nav"}, "/pyglet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyglet interface", "pypi_keywords_clean": ""}, "sakti/gperf": {"git_readme_keywords": "python system activity gperf activity information output result performance system", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "system activity activity information output result performance system", "pypi_keywords_clean": "sar sysstat graph"}, "/pysparse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "iterative python efficient factorization available different pysparse wheeler", "pypi_keywords_clean": ""}, "/prody": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package synopsis several analysis biopython consortium license argparse comparative analysis original graphical interactive shindyalov available application development structure mcguire available installation foundation license software foundation reference consortium available flexible tracker license license pyparsing available biopython documentation homepage structural license cealign interface biopython license sequence analysis biopython", "pypi_keywords_clean": "protein dynamics elastic network model gaussian network model anisotropic network model essential dynamics analysis principal component analysis protein data bank pdb gnm anm sm pca"}, "pbugnion/gmaps": {"git_readme_keywords": "contribute flexibility customisability visualization extension jupyterlab install jupyter jupyterlab necessary extension jupyterlab coffee access google install jupyterlab installation notebook installation follow python widget extension frontend python documentation functionality integrate report jupyter version library rebuild jupyterlab extension extension francisco roadmap visualize geographical jupyterlab install documentation documentation minimal friction available similar current version welcome interactive google documentation available notebook widget", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interact geographical jupyter", "pypi_keywords_clean": "ipython jupyter widgets"}, "ltrilety/mrglog": {"git_readme_keywords": "mrglog logger", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mrglog logger", "pypi_keywords_clean": ""}, "Andrew-Crosio/django-queryset-iterator": {"git_readme_keywords": "compile general queryset queryset iterator collection cursor median primary database cursor status coverage performance iterator useful coverage general", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "queryset iterator", "pypi_keywords_clean": ""}, "lmittmann/style": {"git_readme_keywords": "package package javascript javascript install support parameter terminal command popular package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package package javascript javascript install support parameter terminal command popular package", "pypi_keywords_clean": "style color ansi terminal styling chalk"}, "/mendeley": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application information compatibility documentation library application installation install access package manager manager python mendeley python", "pypi_keywords_clean": ""}, "ionelmc/tblib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aforementioned compatibility different recursion classmethod installation documentation overview traceback serialize attribute traceback serialization beckjake optional responsible billiard internal", "pypi_keywords_clean": "traceback debugging exceptions"}, "fragmuffin/pygcode": {"git_readme_keywords": "documentation documentation interpreter parser installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation interpreter parser installation development", "pypi_keywords_clean": "gcode cnc parser interpreter"}, "yourlabs/django-session-security": {"git_readme_keywords": "updates security inactive authenticated mechanism sessionsecurity middleware activity javascript extend javascript pingview coffee django yoyo pingview recent activity click scroll circuit protect sensitive pingview respond activity browser example django sessionsecurity upload activity datetime number server session datetime inactivity respond number jquery django workstation protect middleware update contact javascript attribute pingview response activity session expiry x datetime javascript inactive browser package updates reading request pingview", "git_description_clean": "little javascript middleware work together ensure user active past x minutes tab open otherwise display warning leaving couple minutes show kind activity like moving mouse otherwise logout user", "git_keywords_clean": "", "pypi_description_keywords": "updates security inactive authenticated mechanism sessionsecurity middleware activity javascript extend javascript pingview coffee django yoyo pingview recent activity click scroll circuit protect sensitive pingview respond activity browser example django sessionsecurity upload activity datetime number server session datetime inactivity respond number jquery django workstation protect middleware update contact javascript attribute pingview response activity session expiry x datetime javascript inactive browser package updates reading request pingview", "pypi_keywords_clean": "django session"}, "okturtles/dnschain": {"git_readme_keywords": "circumvention matthieu fontaine release history support favorite comparison security bitcoin meetup michael bumann approximate chronological distribution x version dnschain development simpler substitution example original author dnschain trouble access definitive x access service censorship circumvention resolver license dnschain problem likely travis server namecoin susceptible undetectable blockchain university undetectable substitution alternative matthieu rakotojaona podcast dnschain support michael dnschain katherine dionysis zindros prevent transparency certificate transparency documentation community x censorship circumvention x server dnschain cryptocurrency ubuntu tutorial wilgustus pydnschain configuration problem internet lecture dnschain untrustworthy unblock borrow dnschain dnscrypt developer vignesh tutorial michael certificate revocation blockchain x x restful dnschain speaker current maintainer arbitrary namecoin public dnschain dnschain server dnschain access documentation dionysis namecoin dnschain compatible traditional ethereum support podimata pydnschain metatld dnschain bumann optional possible unblock feature zindros pydnschain author current bitcoin security transparency internet favorite blockchain certificate transparency access blockchain grondin unblock namecoin powerdns auditable x feature censorship interface blockchain authentication university lecture template x certificate trouble certificate twitter", "git_description_clean": "dns http server fixes https security", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Azelphur-Servers/django-game-info": {"git_readme_keywords": "information urlconf project offensive module protocol display quick global offensive development server fortress counter django", "git_description_clean": "django app gather information game servers", "git_keywords_clean": "", "pypi_description_keywords": "information urlconf project offensive module protocol display quick global offensive development server fortress counter django", "pypi_keywords_clean": ""}, "danielnyga/dnutils": {"git_readme_keywords": "representation gaussian project monotonic threadsafe jsonifiable changelog changelog internal representation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "representation gaussian project monotonic threadsafe jsonifiable changelog changelog internal representation", "pypi_keywords_clean": "testing logging threading multithreading debugging tools utilities"}, "edoburu/sphinxcontrib-django": {"git_readme_keywords": "information python support documentation django documentation irrelevant python autodoc example configuration document configure intersphinx intersphinx python sphinx autodoc diagrams autodoc django django documentation installation directive", "git_description_clean": "improvements output sphinx autodoc django classes", "git_keywords_clean": "django", "pypi_description_keywords": "information python support documentation django documentation irrelevant python autodoc example configuration document configure intersphinx intersphinx python sphinx autodoc diagrams autodoc django django documentation installation directive", "pypi_keywords_clean": ""}, "rhinstaller/pocketlint": {"git_readme_keywords": "validity source", "git_description_clean": "shared code running pylint projects", "git_keywords_clean": "", "pypi_description_keywords": "validity source", "pypi_keywords_clean": ""}, "miguelgrinberg/python-socketio": {"git_readme_keywords": "overflow implementation realtime", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overflow implementation realtime", "pypi_keywords_clean": ""}, "moccu/pytest-isort": {"git_readme_keywords": "python everything activate configuration install rewrite python plugin something exclude execute checked folder example configuration exclude", "git_description_clean": "plugin check import ordering using isort", "git_keywords_clean": "", "pypi_description_keywords": "python everything activate configuration install rewrite python plugin something exclude execute checked folder example configuration exclude", "pypi_keywords_clean": ""}, "djangonauts/djangorestframework-gis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database search extension postgis python django serializer method default behaviour reverse translate version python version subclass behaviour implement source geojson install development spatial database development version method object dictionary containing conversion approximate application management feature contain feature default serialization example runner primary project equivalant filtering member python additional indexed announce structure geometryserializermethodfield geojson compatible calculate bounding search effect attribute certain distance allow db configuration suffix request custom geojson python compatibility python serializer django python postgresql python bounding variation envlist source member instance geometry example coverage document member containing subclass output output javascript uncomment implement custom package extensible property geometry geojson feature db feature member python second access database function pagination build framework install unique geometry bounding geographic django convert default django possible geojsonpagination available example output change createdb custom source optional default distancetopointfilter python version development environment second approach conversion version django installed extensible django docker different django version object geojson specification object database compute example python python custom configuration directive", "pypi_keywords_clean": "django gis geojson"}, "hmrc/servicemanager": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "hynek/argon2-cffi": {"git_readme_keywords": "python appveyor password match import passwordhasher pypi false traceback recent style black coverage pycon import library documentation documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "negligence appveyor release information thomas library compile repository copyright promote limited procurement disclaimer distribution development original product support license chemeris redistribution fitness particular schlawack modification passwordhasher compile visual merchantability fitness business interruption coverage python software information vendoring visual disclaimer documentation helpful python documentation special exemplary alexander chemeris password possibility liability contract procurement substitute incidental special exemplary consequential traceback vendored permission software limited implied specific indirect incidental particular purpose compile ancient express implied library documentation documentation status", "pypi_keywords_clean": "password hash hashing security"}, "/flask-environments": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask environment", "pypi_keywords_clean": ""}, "the-hypermedia-project/representor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/unrealcv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "computer vision unreal engine synthetic simulator robotics"}, "Jaymon/wishlist": {"git_readme_keywords": "prompt signin access wishlist variable example check access wishlist nothing chrome structure wishlist wishlist access wishlist private wishlist wishlist understand structure command region default amazon wishlist factor version selenium firefox installation minute nothing special public wishlist wishlist python wishlist command headless chrome something authentication private access check python library access amazon environment variable handle authentication commandline wishlist programmatic wishlist private wishlist authentication command amazon region authentication signin", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "structure wishlist headless nothing special default understand structure variable example environment variable firefox amazon wishlist wishlist wishlist nothing commandline wishlist something private wishlist authentication command authentication private library installation", "pypi_keywords_clean": ""}, "/couchpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information database management couchdb database programmatic interface relational database", "pypi_keywords_clean": "orm database couchdb nosql modeling"}, "klahnakoski/mo-json": {"git_readme_keywords": "handle serializer storage significant overhead improved c default account conversion string module implementation ujson endless schema limitless string bijection dynamic object existence proceed interpreted python module module iterator abstraction original mimic c integration string method object property child single encoder module required nosql module function running pypy memory primitive indicate stream iteration iterate generator python encoder example simple iteration wonderful schema flexible iterate massive flexibility attack iterator module format interpret common document flexibility limitless convert number method convert record running full property function singleton function update default implementation hierarchical database breakdown different complex parameter righteous delusion additional property overall objective object c library explicit unicode string compare default pypy version exception extract operator iterate existence update pypy module compound solution require require structure method", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "handle serializer storage significant overhead improved c default account conversion string module implementation ujson endless schema limitless string bijection dynamic object existence proceed interpreted python module module iterator abstraction original mimic c integration string method object property child single encoder module required nosql module function running pypy memory primitive indicate stream iteration iterate generator python encoder example simple iteration wonderful schema flexible iterate massive flexibility attack iterator module format interpret common document flexibility limitless convert number method convert record running full property function singleton function update default implementation hierarchical database breakdown different complex parameter righteous delusion additional property overall objective object c library explicit unicode string compare default pypy version exception extract operator iterate existence update pypy module compound solution require require structure method", "pypi_keywords_clean": ""}, "/celery-with-mongodb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "optional extension mongodb specific dependency application several shortcut", "pypi_keywords_clean": ""}, "tsileo/dirtools": {"git_readme_keywords": "thomas tracking default limitation syntax copyright python hashdir filename pattern exlude recursively compute python license documentation fitness particular generate walker python merchantability fitness subject software hashdir hashdir python compress substantial recursively python express limited purpose noninfringement directory compute directory hashdir represent liability contract recursively permission particular purpose distribute sublicense warranty compress directory restriction modify publish distribute python package access python connection software custom walker access installation software software", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thomas tracking default limitation syntax copyright python hashdir filename pattern exlude recursively compute python license documentation fitness particular generate walker python merchantability fitness subject software hashdir hashdir python compress substantial recursively python express limited purpose noninfringement directory compute directory hashdir represent liability contract recursively permission particular purpose distribute sublicense warranty compress directory restriction modify publish distribute python package access python connection software custom walker access installation software software", "pypi_keywords_clean": "exclude exclusion directory hash compression gzip"}, "/theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pattyjogal/django-npm-36": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django npm staticfiles"}, "praekelt/molo-polls": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package ability urlpatterns install django content endblock article continuous integration installation coverage", "pypi_keywords_clean": "praekelt mobi web django"}, "KelSolaar/manager": {"git_readme_keywords": "introduction mansencal copyright resource description default implementation initialize uninitialize deactivate mansencal software configuration documentation command alternative command uninitialize initialized initializedui attribute structure copyright thomas statement reference component reimplement component implementation attribute uninitializeui initializedui application installation repository thomas mansencal component previous implementation reference microsoft initializeui uninitializeui initialized attribute component", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction mansencal copyright resource description implementation initialize uninitialize deactivate mansencal software configuration documentation command alternative command uninitialize initialized initializedui attribute structure statement reference component reimplement component implementation attribute uninitializeui initializedui application installation repository component previous implementation reference microsoft initializeui uninitializeui initialized attribute component", "pypi_keywords_clean": ""}, "/angus-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "firstopinion/decorators": {"git_readme_keywords": "function installation enforce decorator subtle instance method return child flexible different implement decorator function problem python interface decorator decorator decorate simple decorator implement frustrating return decorator decorator decorate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decorate class enforce decorator subtle method return flexible pip different implement decorator function problem python interface python installation instance class python decorator simple decorator source implement frustrating return decorator child class decorator decorate broad", "pypi_keywords_clean": ""}, "dmerejkowsky/pytest-runfailed": {"git_readme_keywords": "developed original project standalone experience different functionality directory anything downside implement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "developed original project standalone experience different functionality directory anything downside implement", "pypi_keywords_clean": ""}, "schlamar/flake8-todo": {"git_readme_keywords": "mccabe checker installation xxx unique plugin upgrade plugin installation install previous version install upgrade plugin available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mccabe checker installation xxx unique plugin upgrade plugin installation install previous version install upgrade plugin available", "pypi_keywords_clean": "todo"}, "/pydub": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gotchas readme manipulate audio interface", "pypi_keywords_clean": "audio sound"}, "calmjs/nunja": {"git_readme_keywords": "contribute framework management message default building standalone tracker javascript framework building number software dynamic template template compilation institute university library output ability development actual deployment minimum framework firefox requirejs available different downstream project calmjs decrease optional installation management access available integration example python python dependency standard system building reuseable tutorial system calmjs framework current directory similar standard continuous integration system difference invocation command running repository different artifact javascript package repository appropriate standard commonjs conjunction calmjs project ability dynamic browser commonjs structure artifact complete artifact plugin precompile template template package repository minimum python", "git_description_clean": "nunja templating framework python x javascript", "git_keywords_clean": "", "pypi_description_keywords": "javascript package project framework management building reuseable minimum framework tracker javascript framework building environment follow installation development follow framework framework method repository installation method installation development", "pypi_keywords_clean": ""}, "koenbok/cactus": {"git_readme_keywords": "slash valid google build blog minification closure python django amazon extra company portfolio block document library extensible destination folder simple powerful sitemap absolute optimization modify standard django template reflect change canonical pointed extensive www cactus system cactus enable plugin version build functionality domain typical process fingerprinting forget cactus simple check project announce cactus pipeline static cactus happy search google webmaster short video quick overview happy announce impatient install deploy website dynamic variable discussion static nameserver configuration closure compiler hidden personal support render author generate static blog plugin generate plugin system pipeline cactus project structure install cactus build folder javascript actual multiple deployment static version painless secret template system metadata example portfolio personal automatic nameserver pipeline plugin plugin watch short default declare bucket documentation django visual feedback cactus deploy build deploy folder cactus example build docker source contexts cactus bucket valid example declare default author pattern www variant variant domain registrar cactusblog blog orozco similar deploy compiler js filesystem valid domain static static sitemap valid default cactus update database docker generate correct powerful static framer website small amazon access extra bucket browser handy website build fingerprinting native cactus cactus correct nameserver tutorial cactus google video tutorial support multiple website generator quick tutorial tutorial impatient future expiration overview watch available change domain amazon inheritance js minification example blog custom blog example modify index blog project static template static website configuration support cactus return fingerprinting modify example python folder upload developed cactus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "slash valid google build blog minification closure python django amazon extra cactusblog company portfolio extensible destination folder simple powerful sitemap absolute optimization modify standard django template reflect change canonical extensive www cactus system cactus enable plugin version build domain typical process fingerprinting forget cactus simple check project announce cactus pipeline static cactus happy search google webmaster short video quick overview happy announce impatient install deploy website dynamic variable discussion static nameserver configuration closure compiler hidden personal support pointed look render generate static generate plugin system pipeline cactus project structure install cactus build folder javascript actual multiple deployment static version painless secret template system portfolio personal automatic nameserver pipeline plugin plugin watch short bucket documentation django visual feedback cactus deploy build deploy folder cactus example build docker source contexts cactus bucket valid www variant variant domain registrar orozco similar deploy compiler js filesystem valid domain static static sitemap valid default cactus update database docker generate correct powerful static framer website small amazon access extra bucket browser handy website build fingerprinting native cactus cactus correct nameserver tutorial cactus google video tutorial support multiple website generator quick tutorial tutorial impatient future expiration overview watch plugin example change domain amazon inheritance js minification example blog index blog project static template static website configuration support cactus return fingerprinting modify example python folder upload developed cactus", "pypi_keywords_clean": ""}, "/moya": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "currency platform application download shortener application information project navigate navigate project platform install virtual currency command complete project directory addition directory initialize database navigate package example development development server", "pypi_keywords_clean": ""}, "robotpy/robotpy-ctre": {"git_readme_keywords": "robotpy robotpy specific documentation spicuzza available wrapper software hardware repository endorsed", "git_description_clean": "robotpy wrappers ctre third party extensions wpilib", "git_keywords_clean": "robotpy ctre frc python", "pypi_description_keywords": "robotpy robotpy specific documentation spicuzza available wrapper software hardware repository endorsed", "pypi_keywords_clean": ""}, "achtman-lab/grapetree": {"git_readme_keywords": "prompt security grapetree navigate bacterial university program offline integrate useful multiple folder grapetree visualization install command fitness particular information standard warranty merchantability software foundation python program phylip grapetree grapetree newick software redistribute distance generate grapetree number program standardalone version achtman grapetree enterobase download browser recommend method distance default metadata metadata number different grapetree version sequence alignment research example carrico achtman grapetree enterobase profile profile security grapetree splash redistribute modify aligned description public license button browser window recommend google external additional python enterobase version generate distance luhmann manuscript untzip sergeant collumn merchantability fitness restart version program general public represent francisco python python downstream analysis warranty python additional particular purpose recraft heuristic javascript documentation documentation jsdoc grapetree detailed distance computer correlate metadata license copyright genomic presentation standardalone warwick university muscle grapetree integral profile detailed information column copyright warwick anytime navigate directory version license citation window configuration", "git_description_clean": "grapetree fully interactive tree visualization program supports facile manipulations tree layout metadata", "git_keywords_clean": "mlst tree", "pypi_description_keywords": "prompt security grapetree navigate bacterial university program offline integrate useful multiple folder grapetree visualization install command fitness particular information standard warranty merchantability software foundation python program phylip grapetree grapetree newick software redistribute distance generate grapetree number program standardalone version achtman grapetree enterobase download browser recommend method distance default metadata metadata number different grapetree version sequence alignment research example carrico achtman grapetree enterobase profile profile security grapetree splash redistribute modify aligned description public license button browser window recommend google external additional python enterobase version generate distance luhmann manuscript untzip sergeant collumn merchantability fitness restart version program general public represent francisco python python downstream analysis warranty python additional particular purpose recraft heuristic javascript documentation documentation jsdoc grapetree detailed distance computer correlate metadata license copyright genomic presentation standardalone warwick university muscle grapetree integral profile detailed information column copyright warwick anytime navigate directory version license citation window configuration", "pypi_keywords_clean": "bioinformatics microbial genomics mlst visulisation"}, "/python-ldap3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python ldap"}, "watson-developer-cloud/watson-developer-cloud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full configure credential service discovery instance access management audio python example behavior authentication service client library work cloud result authentication watson sdk search downloaded credential stable python header return result class listen configure request form python client supply migration previous timeout cloud private service instance migration version token sdk authentication watson assistant b speech service callback class developer cloud python version py downloaded example custom callback python sdk cloud sdk variable authentication directory project private disable response information response model http client order system sdk work output structure http response something basic advanced custom watson developer http status various account installation connection right identity access cloud python function dictionary permission default response sdk stable different python python cloud foundry precedence environment variable download button certificate verification sdk dsx appropriate request directory directory access http license library authentication credential sdk handle python disable", "pypi_keywords_clean": "language"}, "macacajs/wd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "webdriver changelog documented contributing selenium available implementation implementation webdriver", "pypi_keywords_clean": "macaca webdriver uitest mobile automation"}, "/chromalog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "important default monochromatic message generic logging chromalog configuration chromalog monochromatic logging", "pypi_keywords_clean": ""}, "benjamin-hodgson/build": {"git_readme_keywords": "huddle fluent installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-standalone": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection defined standalone import proper python installed django access management standalonemodel configuration database import myothermodel available module class allwaysinstalledmodel original module class class myothermodel myothermodel class caveat script access production server license author configuration namespace warning course stupid database install provided additional available defined module class mymodel standalone executable accessible standalone django project structure gb example django dynamic configuration python everything module access reference global connection import something module reason object persistence standalone application little library option django application voodoo repository class script nothing defined context installed project little different django project ability script environment variable accessible standard symbolic import syncdb simple standalone situation template import script umbrella application class variable access django module official bunch install example context script class andyetanothermodel", "pypi_keywords_clean": "django standalone script orm"}, "bitmazk/cmsplugin-googlemap": {"git_readme_keywords": "googlemap plugin googlemape difference tracker github plugin github release uninstall pillow optional adventurous installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "googlemap plugin googlemape difference tracker github plugin github release uninstall pillow optional adventurous installation", "pypi_keywords_clean": "django cms plugin googlemap maps"}, "adafruit/adafruit-ampy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "design system download linux terminal package index example linux configuration convenience adafruit micropython help example linux osx check micropython library usage subcommand help delay rshell simple command osx micropython board available script board usage information github source verify serial connection standard python change installation example access serial interact circuitpython utility interact python install circuitpython micropython directory control simple support manipulate board computer help output parameter support advanced computer board install github python script environment variable advanced interaction shell terminal board check program python package information subcommand board serial", "pypi_keywords_clean": "adafruit ampy hardware micropython circuitpython"}, "/picard": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "available support application official musicbrainz excellent unicode musicbrainz information tracker generation documentation available capable several approach approach building codebase musicbrainz community unicode support possible majority", "pypi_keywords_clean": "musicbrainz metadata tagger picard"}, "Kotti/deform-bootstrap": {"git_readme_keywords": "attribute myform class myschema harmless enhanced replacement autocompleteinputwidget dateinputwidget tabbed select inline legacy stuff standard interpreter installed support inline checkbox server standalone remainder section native bootstrap bootstrap datepicker custom additional keyword package static personschema weight deform autocompleteinputwidget additional datepicker markup deform single multiple mariani lazar jquery version deform feature daniel nouri direct dependency subclass class version jquery chris length multiple selection variable length class personschema attribute choice download selenium choice widget dateinputwidget datetimeinputwidget practice additional installed download compatible section delete version deployment jquery deform success myschema inline weight kg custom bunch static myschema choice native version complete bootstrap incompatible kg bootstrap orinial native compatible bootstrap mapping appear semanticaly selenium schema render jqueryui deform js choice constructor subclass deform orinial widget constructor b dairiki deploy configuration shiny information default application datepicker widget context output console lessc small selenium server weight weight access native k\u00f6lker autocomplete build custom build select typeaheadinputwidget deformdemo terminal documentation support deform stuff jqueryui directory installed version bootstrap replacement deform initial development mapping mapping widget trueish inline bootstrap", "git_description_clean": "bootstrap compatible templates deform form library merged deform", "git_keywords_clean": "", "pypi_description_keywords": "attribute myform deformdemo selenium class myschema harmless enhanced replacement autocompleteinputwidget dateinputwidget tabbed resource registry legacy stuff interpreter installed support inline checkbox server standalone u c remainder section bootstrap datepicker typeaheadinputwidget selenium custom additional keyword package static personschema weight mmariani deform autocompleteinputwidget additional datepicker markup deform single multiple mariani lazar jqueryui legacy jquery version deform feature mapping template fixed length direct dependency fixed break restructure update orderable sequence jeff dairiki subclass class bootstrap feature version jquery chris multiple selection variable length class personschema invalid attribute choice download selenium choice widget dateinputwidget datetimeinputwidget practice additional installed download bootstrap selenium template validation compatible textinput version deployment bootstrap iconglyphs jquery deform typeaheadinputwidget attribute success myschema inline support bootstrap weight kg update documentation custom bunch static improve myschema choice deform search timepicker daniel renderer break chameleon complete bootstrap incompatible google appengine u b markup legacy kg bootstrap inherit chosenmultiplewidget compatible bootstrap mapping appear remote source semanticaly legacy restructure selenium schema render support argument jqueryui deform js choice constructor subclass deform orinial widget constructor b u deploy configuration shiny coverage information default application choice u datepicker widget normalization context output console chosensinglewidget chosenmultiplewidget lessc selenium server weight weight class mapping access sequence support autocomplete build custom build u u button constructor widget deformdemo upgraded bootstrap support inline typeaheadinputwidget deformdemo terminal documentation argument button support deform stuff jqueryui broken google ux standard source typeaheadinputwidget directory k\u00f6lker jeff installed version bootstrap replacement deform initial development mapping mapping chosenmultiplewidget selectwidget widget trueish inline bootstrap", "pypi_keywords_clean": "twitter bootstrap deform styles css web forms form"}, "/django-bootstrap-breadcrumbs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bootstrap template generate breadcrumbs", "pypi_keywords_clean": ""}, "/suap-templates": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "caesarnine/zen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "endpoint install incremental warehouse available library example", "pypi_keywords_clean": "zendesk api ticketing helpdesk"}, "earthreader/libearth": {"git_readme_keywords": "package common library console libearth libearth tracker installation install install libearth integration appveyor continuous integration readthedocs library various repository earthreader coverage build", "git_description_clean": "libearth shared common library various earth reader apps", "git_keywords_clean": "", "pypi_description_keywords": "package common library console libearth libearth tracker installation install install libearth integration appveyor continuous integration readthedocs library various repository earthreader coverage build", "pypi_keywords_clean": ""}, "ambition-trial/ambition-validators": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django ambition"}, "/django-cas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support authentication interface middleware original", "pypi_keywords_clean": "django cas authentication middleware backend"}, "drericstrong/pypbe": {"git_readme_keywords": "value default compensate effect visualize distribution choose equivalent kara sit distribution dice time generate method investigate equivalent parameter possible value use sarah cluttered try dexterity intelligence note option dms parameter feature end note equal drop fun simulator easy limit array notice roll die investigate distribution inclusive increase average value note select rolling intelligence possible parameter inclusive supply custom keep reroll system strength john bit result sense number reroll hence method example method gm method general key attribute character effective available python option supply intelligence wisdom str dex import pbe try simulator interpret mean session new system pf limit roll roll wizard notation value fair point determine character dice determine equal ability code pypbe dice dice powerful class ranger value x character creation mapping parameter alg pbe easy way impossible number function generate reroll parameter constitution dexterity type dice hence number lucky today example pf default none interest pypbe favorite class rolling example seaborn matplotlib heroku new pathfinder carlo simulation pathfinder campaign roll point buy important server default buying attribute raw pbe alg set maximum possible new dictionary example rolling sit play order die note impossible con int process dice total use point use dice time random cost point wizard keen campaign gm value high latter array equivalent default limit parameter instance player set unit generate full buy mapping mean value applicable system functionality pypbe choose try possible point method time john kara decision fair method instance default mapping pypbe import fair choose amount number way specify mean distribution several different calculation common instance array keep parameter specify right score rolling time roll allow gms jupyter notebook average limit ability class program parameter example buy value parameter value power level note python dice mean act pip install python api roll use dictionary value default use plot mapping mean point roll stat tabletop gaming pbe object attribute str useful information low die attribute maximum roll multiple roll pbe stat array average point array contain install pypbe python module important note buy concept increase note equivalent multiple possible dice score limit histogram full limit possible pf cost ranger matter example dm score parameter important specify str parameter default die distribution distribution attribute total full array way sense time method figure pypbe python attribute score wish reroll sarah john let rolling method die result api number api system gm determine dice roll strength constitution equal parameter contain number matplotlib pypbe typical array complete calculation choose rolling wish bokeh server none example example rpg attribute keep organization wish equal keep personal preference hence possible number character wis cha rpg system buy attribute python available cost different thing racial roll character buy random subtle contribute dig decent increase amount github repository option discard generate plot charisma number example ability basic gui value example work john discard ability notebook basic fair way bottom plot point buy increase accuracy custom point number type buy distribution inclusive value wish contribute value dictionary wisdom charisma mapping mean summary weak input validation value keep rolling ability distribution mean dice keep value equal mean standard resource tabletop dex con possible kara part plot buy select cha com score racial parameter pypbe system point figure interpret something today john section maximum equivalent value lee gms attribute parameter noisy histogram top part amount time roll intelligence creation default pbe fall system choose effect score effective bad pbe class value cost scheme pypbe number monte buy equivalent scheme buying parameter time int wis buy system limit default rpg group array point pypbe simulator x example buy scheme value z cost attribute number x pypbe resource use method random roll parameter rpg attribute value ability score value dice dice rolling executable additional current documentation value low note input equivalent ability buy cost gm lee common system right system typical stat python dictionary likely stat rolling ten calculate visualize intelligence kara default example equal pbe chance high example pbe dice increase roll dice instance roll numpy seaborn parameter term validation parameter number dice parameter instance pathfinder point monte carlo pypbe pypbe edition value gm advanced inverse roll attribute array rolling amount lee sarah parameter parameter dictionary key pypbe maximum many pypbe bokeh api current play monk pypbe procfile value carlo random rolling value parameter distribution point angry roll proficient python example buy select random character lee equivalent point pip pip total number distribution fair standard deviation value fair come value", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rpg"}, "byroot/pysrt": {"git_readme_keywords": "compatible python unlucky python library command useful subripitem available subtitle import editable subripfile installation library experiencing rescale", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible python unlucky python library command useful subripitem available subtitle import editable subripfile installation library experiencing rescale", "pypi_keywords_clean": "subrip srt subtitle"}, "/django-featured-item": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nikipore/stompest": {"git_readme_keywords": "message handler package someone mulvihill processing graceful twisted stompest stompest stompest abstract representation errordestination exception message processing question transformation abstract stateless simple module generic connect disconnect command environment scratch production environment shutdown disconnect reconstruct session functionality someone enterprise activemq java connection generic subscription virtual environment stomper stompest implementation syntax simple assume method \u00e9minence hoover theduderog default activemq redelivery protocol version session subscription project default behavior maintain position shutdown connect documentation directory thread vs broker network connection synchronous session transport behavior feature complete vs process scenario broker broker graceful subscription replay destination specific willing activemq package capability request protocol simple simple stateless activemq generic enhancement synchronous asynchronous environment kudos hobby rebuild compiler faithful outstanding message version stompest programming framework anything concurrency production sequence broker redelivery policy stompest production customizable assume anything configure activemq particular current maintainer python python version negotiation faithful implementation python package finish definition transformation module failover transport twisted destination parameter negotiation connect specific message complete graceful shutdown connection broker checkout documentation choose integration implementation python install documentation asynchronous framework building graceful disconnect parameter subscription disconnect failover infinite sequence building environment reconnect concurrent message generic implementation simple function stateless function transaction subscription powerful asynchronous configurable twisted asynchronous adapter broker stateless persistent agnostic implementation asynchronous programming disconnect configure effort stompest configure errordestination abstract", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package generic implementation separate package asynchronous package installation maintainer persistent abstract representation question compiler faithful documentation package asynchronous developer programming framework negotiation anything concurrency production process production environment functionality particular generic implementation generic subscription stateless function transaction subscription powerful asynchronous disconnect reconstruct activemq package faithful implementation protocol asynchronous programming available separate optional support", "pypi_keywords_clean": "stomp activemq rabbitmq apollo"}, "simonw/django-html": {"git_readme_keywords": "package thread doctype example completeness doctype practise xhtml doctype doctype doctype doctype template django outputs account reusable widget field render install stock django output account django experimental approach optional definition python context doctype widget stock python outputs xhtml render doctype specify number argument field current active doctype account directory template useful information doctype output xhtml relevant doctype field field markup current doctype render active doctype outputs relevant closing current doctype xhtml doctype xhtml modify template problem moment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package thread doctype example completeness doctype practise xhtml doctype doctype doctype doctype template django outputs account reusable widget field render install stock django output account django experimental approach optional definition python context doctype widget stock python outputs xhtml render doctype specify number argument field current active doctype account directory template useful information doctype output xhtml relevant doctype field field markup current doctype render active doctype outputs relevant closing current doctype xhtml doctype xhtml modify template problem moment", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-msi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package management underlying service management provide feedback changelog generation management feedback encounter library resource manager project bugfixes compatibility algorithm response default behavior history performance general version optional generator important session azureenum syntax positional initial running operation parameter default response initial microsoft general breaking external context manager behavior unrecognized execute callback library complete", "pypi_keywords_clean": ""}, "usrlocalben/pydux": {"git_readme_keywords": "python object describing todos example specify single interface electronic todos action object object pydux redux redux todos redux implementation change action reimplementation redux implementation python component electronic braille initial original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation redux", "pypi_keywords_clean": ""}, "yufeiminds/toolkit": {"git_readme_keywords": "contact toolkit library install documentation document contribute branch continual contibute repositry serveral toolkit function refactor repositry welcome", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "toolkit tool unicode template"}, "/flask-rq2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software instance application information continuation spirit documentation pattern extension coverage installation console", "pypi_keywords_clean": ""}, "avakar/cson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "notation multiple unlikely coffescript interface standard project whitespace significant package language standard package grammar indentation unbraced installation important unambiguous example informal typical whitespace particular implementation definition consistent indentation grammar simpler coffeescript canonical implementation", "pypi_keywords_clean": ""}, "poppy-project/poppy-ergo": {"git_readme_keywords": "explorer twitter facebook technological development scientific protected international printable international trademark fundamental research learning library language formation personnal computer software jonathan experience embodiement morphology install documentation support available creative install software description laboratory curiosity language anaconda install hardware software thingiverse simulator install contribute repository youtube twitter dynamixel experiment artificial information education matthieu request distribution anaconda artificial curiosity", "git_description_clean": "arm motors", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pycsw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "specification catalogue project information compliant license service implementation implementation discovery geospatial metadata catalogue catalogue service catalogue component implementation specification numerous initial development opensearch official reference implementation geospatial metadata", "pypi_keywords_clean": "pycsw csw catalogue catalog metadata discovery search ogc iso fgdc dif ebrim inspire"}, "pytest-dev/unittest2pytest": {"git_readme_keywords": "licence hartmut directory default mighty backup unittest public licence available several version control contrast similar american particular directory version version semantics different installation install adjustment travis appropriate homepage", "git_description_clean": "helps rewriting python unittest pytest", "git_keywords_clean": "", "pypi_description_keywords": "licence hartmut directory default changelog mighty backup unittest lambda support support assertnotregex public licence available several installation contrast similar american assertnotregex assertwarnsregex particular directory incorrect internal cleanup release version version semantics different adjustment appropriate homepage", "pypi_keywords_clean": ""}, "unified-font-object/ufolib": {"git_readme_keywords": "ufolib ufolib format install source reader", "git_description_clean": "ufo reader writer", "git_keywords_clean": "", "pypi_description_keywords": "unified source object", "pypi_keywords_clean": ""}, "anchor/esadmin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration elasticsearchadmin goonatilleke", "pypi_keywords_clean": ""}, "momyc/gevent-fastcgi": {"git_readme_keywords": "fastcgi application custom request implementation bash custom response multiple request handler standard project greenlet request protocol connection favourite fastcgi handler implementation command receive request support fastcgi wsgiref handler implement different request installation feature separate greenlet stdout object utilize python application bash fastcgi protocol version possible monkeypatch callable simplify depolyment argument request dictionary request environment information original request adapter request argument networking library positional argument object handler callable implement interface handler handler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "favourite fastcgi implementation monkeypatch", "pypi_keywords_clean": "fastcgi gevent wsgi"}, "/arcrest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "linuxwhatelse/lwe-mapper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download query query dependency mapper function mapper simple check stuff simple resolver python installation mapper simple footprint small check basic directory project check mjs return query value mapper small function small possible small footprint resolver mapper installation usage decorator project usage", "pypi_keywords_clean": "url scheme resolver mapper"}, "cyberdelia/flask-statsd": {"git_readme_keywords": "application installation import extension access", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "joeyespo/flask-pytest": {"git_readme_keywords": "project process motivation default configuration discussion disable extension behavior something output available background process request reload development extension feature repository normal twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "background process", "pypi_keywords_clean": ""}, "eerimoq/bitstruct": {"git_readme_keywords": "unpack offset unsigned integer default python example string string installation python documentation installation legacy project homepage boolean primitive implement similar interface feature string python python change repository install binary homepage documentation offset python interface python example unsigned previous example change endianness request significant python unpacked", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unpack offset unsigned integer default python example string string installation python documentation installation legacy project homepage boolean primitive implement similar interface feature string python python change repository install binary homepage documentation offset python interface python example unsigned previous example change endianness request significant python unpacked", "pypi_keywords_clean": "bit field bit parsing bit unpack bit pack"}, "frictionlessdata/jsontableschema": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "source filepath install plugin class declaration implement model schema snapshot detailed installation example reference snapshot correct format descriptor array property schema follow interface schema python field validate schema filesystem program manner documentation storage plugin return field schema schema system package key field tabular implementor interface validate system connect bigquery storage plugin system schema descriptor integrate custom storage backend implement tabular number array foreign sql database primary key introduced manner limited argument filesystem option return bool contribute message semver schemas system foreign key interface declaration sql storage schema model response schema datetype instance initialized field schema array schema plugin report multiple release exception valid storage sql pandas storage return schema different storage array schema optional argument custom storage schema utility contribution default storage collect character changelog initialized schema utility library field instance concrete version backend backend key property bool field available exception validate schema source return row schema return storage library implementor follow provisional field object array return storage pandas field schema schema field schema helpful", "pypi_keywords_clean": "frictionless data open data json schema json table schema data package tabular data package"}, "fabpot/sphinx-php": {"git_readme_keywords": "package project symfony install something install extension highlighting configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "paulocheque/django-smart-autoregister": {"git_readme_keywords": "behavior protect application documentation protect application pertinent configure modeladmin relationship intention", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python django admin autoregister"}, "zhangliyong/rq-gevent-worker": {"git_readme_keywords": "gevent monkey geventworker process rqworker worker process declaration spawn child gevent install worker command process execute crash official lechup jhorman child process option monkey patch implement crash worker rqworker import process crash", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implement information worker install", "pypi_keywords_clean": ""}, "/delphixpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "delphixpy delphixpy compatibility default sysadmin hashable undefined delphix virtualization connect version changelog delphixengine various support various refresh database", "pypi_keywords_clean": ""}, "okfn/flexidate": {"git_readme_keywords": "package attribute comparison excellent dateutil library development original imprecise additional microsecond capture capture various dateutil information coverage normalize available attribute various fuzzy functionality normalization function welcome relevant sortable notation system", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/ldappool": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ldappool simple possible check server default comma whitespace passwd password ldap connection ldapobject simple connector useful initiate ldap library quickstart bind default quickstart work default delay connection method timeout connector allow failover passwd default connector timeout behavior connection manager connection default number ldap connection mandatory bind server connectionmanager recreate connector output similar timeout default failover behavior connect ldap server default default default password result output connector default option bind bind method connector configurable server connection connector possible context manager retry default lifetime default bind bind connector transparent reconnection", "pypi_keywords_clean": ""}, "jgarzik/python-bitcoinrpc": {"git_readme_keywords": "standard authserviceproxy compatibility jsonrpc preserve support generic authentication install library install timeout argument argument prevent install jsonrpc directory installation decimal version installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard authserviceproxy compatibility jsonrpc preserve generic authentication install library install install jsonrpc directory installation decimal version installation example", "pypi_keywords_clean": ""}, "Kemaweyan/singleton-decorator": {"git_readme_keywords": "import singleton solution avoid singleton pattern class object instance class instantiation object attribute wrapper separate function class install command object avoid mock object complete isolation solution decorator decorate separate wrapper direct access wrapper function impossible direct attribute access kwargs constructor access class wrapper object isolation different class definition singleton decorator decorator class constructor method approach decorator function constructor class problem testable singleton existing instance object argument", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "import singleton solution avoid singleton pattern class object instance class instantiation object attribute wrapper separate function class install command object avoid mock object complete isolation solution decorator decorate separate wrapper direct access wrapper function impossible direct attribute access kwargs constructor access class wrapper object isolation different class definition singleton decorator decorator class constructor method approach decorator function constructor class problem testable singleton existing instance object argument", "pypi_keywords_clean": "singleton decorator unittest"}, "/weblate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "available directory automatic merging simple interface propagation context message useful maintainability fitness particular control integration symbian codecov coverage version control interface upload merchantability fitness warranty merchantability version program license copyright django project quality software foundation upload automatic localization redistribute modify report general public access control translation mercurial support public license translation propagation software redistribute tunable access version license warranty support documentation program installation installation particular purpose message quality weblate automatic documentation available", "pypi_keywords_clean": "gettext git mercurial translate"}, "/async": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "experiment deprecation framework process library process interdependent", "pypi_keywords_clean": ""}, "ckan/ckanext-rq": {"git_readme_keywords": "package virtual service supervisor config extension distribution development choose version project environment example configure supervisor install python fallback travis coverage worker install configure coverage config version python install activate version example version installation restart license background virtualenv version availabe follow python example install functionality version number backport background import install development default config necessary travis virtual environment development activate available startup function publish environment variable release project installation install upload development installation python package apache ubuntu torfsen", "git_description_clean": "backport rq background jobs ckan versions", "git_keywords_clean": "", "pypi_description_keywords": "package virtual service supervisor config extension distribution development choose version project environment example configure supervisor install python fallback travis coverage worker install configure coverage config version python install activate version example version installation restart license background virtualenv version availabe follow python example install functionality version number backport background import install development default config necessary travis virtual environment development activate available startup function publish environment variable release project installation install upload development installation python package apache ubuntu torfsen", "pypi_keywords_clean": "ckan rq jobs"}, "hhatto/kuroko": {"git_readme_keywords": "executor framework interval minimalistic support terminal interface license wrapper installation execution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "executor framework interval minimalistic support terminal interface license wrapper installation execution", "pypi_keywords_clean": "bot framework"}, "djungelorm/sphinx-csharp": {"git_readme_keywords": "example document install extension sphinx", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "encode/starlette": {"git_readme_keywords": "example complete modularity starlette brighton england ecosystem component isolation shutdown framework toolkit gunicorn uvicorn understand component install toolkit starlette performance websocket background available separation installation coverage building starlette starlette application parsing required framework experiment independent techempower impressive performance install framework complete example middleware mountable complete framework modularity modularity codebase optional required performance asyncio throughput hypercorn example isolation performance performance independent gunicorn starlette documentation starlette", "git_description_clean": "little asgi framework shines", "git_keywords_clean": "python async websockets graphql http", "pypi_description_keywords": "example complete modularity starlette brighton england ecosystem component isolation shutdown framework toolkit gunicorn uvicorn understand component install toolkit starlette performance websocket background available separation installation coverage building starlette starlette application parsing required framework experiment independent techempower impressive performance install framework complete example middleware mountable complete framework modularity modularity codebase optional required performance asyncio throughput hypercorn example isolation performance performance independent gunicorn starlette documentation starlette", "pypi_keywords_clean": ""}, "/aspen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation information framework license available attraction installation build", "pypi_keywords_clean": ""}, "caktus/fabulaws": {"git_readme_keywords": "application customize instance development fabulaws context manager execute typical workflow instance typical", "git_description_clean": "python tool creating interacting ephemeral aws resources", "git_keywords_clean": "", "pypi_description_keywords": "application customize instance development fabulaws context manager execute typical workflow instance typical", "pypi_keywords_clean": ""}, "rochacbruno/flask-simplelogin": {"git_readme_keywords": "checker message flask simple complete production argument decorator project validator example available username install checker encrypt implement something simple clever example default message customizable available example control course placeholder simplelogin database integration integration password authentication context extension flask custom logout access control dictionary custom function password management template customize success invalid decorator message customize", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "checker message simple extension complete production recommend argument decorator project validator screen authentication authorization strikeout password implement something simple change figure clever example default message customizable python simplelogin application username database integration context logout access control integration strikeout function dictionary strikeout database management strikeout complex password management template customize success invalid decorator", "pypi_keywords_clean": ""}, "wong2/pick": {"git_readme_keywords": "default build status optional mapping multiple return result possible original support terminal optional status target element installation feature function example instance parameter optional custom multiselect example register custom custom handler return mapping function specific keyboard picker dictionary python library selection indicator result function interactive selection parameter custom custom selection minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default optional mapping multiple return result possible original terminal install optional element installation feature example function example instance parameter optional custom multiselect example register custom custom handler return mapping function specific keyboard picker dictionary python library selection indicator result function interactive selection parameter custom custom selection minimum", "pypi_keywords_clean": "terminal gui"}, "tarantool/tarantool": {"git_readme_keywords": "asynchronous replication replication authentication tarantool database multiple detailed supported tarantool tarantool stateful scalable cooperative multitasking compatible replacement architecture extension application optional persistence persistence implementation database application tarantool documentation external protocol feedback discussion referential", "git_description_clean": "get data ram get compute close data enjoy performance", "git_keywords_clean": "tarantool database transactions disk lua msgpack appserver", "pypi_description_keywords": "version package console install synchronous connection driver synchronous library download connector version tarantool package tarantool version branch tarantool database network machine persistency archive unpack branch install development environment version connector development version driver tarantool download install program install package", "pypi_keywords_clean": ""}, "bcarlin/flask-debugtoolbar-mongo": {"git_readme_keywords": "warning package stacktrace information specify welcome complete package install augment configration toolbar mongodb history django debug extension operational maintain current repository debug toolbar example original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "warning package stacktrace information specify welcome complete package install augment configration toolbar mongodb history django debug extension operational maintain current repository debug toolbar example original", "pypi_keywords_clean": ""}, "NSLS-II/bluesky": {"git_readme_keywords": "documentation collection interface install interface experimental bluesky tagged development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sphinx-contrib/sphinxcontrib-matlabdomain": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default package extension definition signature scriptname reference statmethname automethod configuration install documentation absolute reference several available installation constructor example document staticmethod statmethname automethod statmethname signature staticmethod attrname reference repository autofunction funcname autodoc convenience general annotation function autofunction disable directive", "pypi_keywords_clean": ""}, "/python-fedora": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "fedora python webservices"}, "urbanairship/tessera-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "api tessera", "pypi_keywords_clean": ""}, "gsi-upm/gsitk": {"git_readme_keywords": "sentiment default evaluation pipeline implementation enhance performance complete sentiment analysis machine learning library spanish ministry learning sentiment ministry economy evaluation compatible development process installation research extractor performance recommendable directory enhance normalization alternative directory current directory necessary selection conjuction extraction repository agreement spanish analysis ensemble structural environment variable", "git_description_clean": "", "git_keywords_clean": "python nlp", "pypi_description_keywords": "", "pypi_keywords_clean": "sentiment analysis"}, "/lfc-page": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction information initial public management default public release", "pypi_keywords_clean": "django lfc cms"}, "pretenders/pretenders": {"git_readme_keywords": "introduction contribute providing compatibility standalone specialised implementation pattern specific proprietary comfortable majority development convention project support documentation available integration implement example execution mailing software flexible alternative branch fulfilment typical external network message mailing represent unified restful microframework simplify documentation project protocol feedback runnable official", "git_description_clean": "fake servers testing", "git_keywords_clean": "", "pypi_description_keywords": "introduction contribute providing compatibility standalone specialised implementation pattern specific proprietary comfortable majority development convention project support documentation available integration implement example execution mailing software flexible alternative branch fulfilment typical external network message mailing represent unified restful microframework simplify documentation project protocol feedback runnable official", "pypi_keywords_clean": ""}, "qoda/wkhtmltopdf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flash support xvfb install create optional grayscale default simple python install xvfb install flashplugin default millisecs default portrait millisecs orientation bydendyk jpbydendyk install install convert default default orientation default system install install wkhtmltopdf wkhtmltopdf install wkhtmltopdf install xvfd", "pypi_keywords_clean": ""}, "willkg/steve": {"git_readme_keywords": "transform documentation utility information conference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "transform documentation utility information conference", "pypi_keywords_clean": "richard videos importer"}, "cloud-compose/cloud-compose-cluster": {"git_readme_keywords": "agnostic behavior resolve unique default account optional backups cluster plugin backend cluster membership example project dynamic compose cluster attribute number multiple group maximum redundancy mongodb example purpose configuration configuration script g mixed instance standard provider support username checkout reference launch database volume server default behavior additional behavior cluster mongodb configuration explanation element resolve version production clustername follow storing docker zookeeper require process option cluster docker container docker volume membership change security kafka zookeeper volume virtualenv amazon machine volume volume backend storing directory environment metadata cluster cluster docker information consistent server attribute script optional feature backend cluster separate subnet mongodb kafka different availability container volume similar project specific operating system template section override behavior significant install editable convenient additional server docker mongodb server example cluster command", "git_description_clean": "cluster commands", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "cloud"}, "/moldesign": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "notebook molecular download compliance specific language integrating documentation complete copyright autodesk development library pycloudcomputecannon applicable molecular library offering molecule umbrella version example software simulation visualization notebook visualization express geometry visualization analysis toolkit molecular molecular modeling installed molecular visualization readable abstract jupyter notebook visualization library", "pypi_keywords_clean": ""}, "Kozea/pyphen": {"git_readme_keywords": "", "git_description_clean": "hyphenation pure python", "git_keywords_clean": "python hyphenation", "pypi_description_keywords": "libreoffice wilbert libreoffice repository import pyphen pyphen pyphen module hyphenate many repository usage import python module hunspell hyphenation", "pypi_keywords_clean": ""}, "kootenpv/just": {"git_readme_keywords": "content possible different environment variable searching install pandas computer directory rationale project relative extension optional sensible urllib default structure dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "WoLpH/mt-940": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "development branch python import pypi ohloh request development information transaction library import import support transaction documentation source command source documentation available install install balancebase status target balance information transaction python coverage target version target documentation changelog python everything pprint currency please python support pypi version release import pprint support python development release package homepage coverage pypi transaction simple good check travis ohloh license available python", "pypi_keywords_clean": ""}, "ValvePython/dota2": {"git_readme_keywords": "suggestion license install current coordinator documentation installation install interacting module version welcome installation", "git_description_clean": "python package interacting dota game coordinator", "git_keywords_clean": "steam valve python", "pypi_description_keywords": "suggestion license install current coordinator documentation installation install interacting module version welcome installation", "pypi_keywords_clean": "valve steam steamid api webapi"}, "zimmermanncode/robotframework-tools": {"git_readme_keywords": "basic default keyword client library syntax access combine ipython variable dictionary keyword function robot log session instance framework shell python compatible variable way specify actual switch keyword python method decorator keyword ipython shell sequence multiple robotshell object add overview instantiate interactive overview pypi extra service shell functionality syntax double robot camelcase dynamic exception combine variable original function argument dynamic library assign return session object robotshell installation robot keyword return original network additional argspec robot robot variable instance provide keyword argument reload additional keyword package extra generated access library prefix different keyword custom custom logic session management session switch general purpose robot handle actual session switchable add external instantiate inspect pip pypi library support normal python ipython automatic contexts todo initialized keyword exception ipython generated dynamic standard library keyword robot python access instance ipython robot variable syntax function definition toolslibrary dynamic keyword contexts specify explicit session framework parameter release environment actual dynamic add method library class switchable keyword function object python python simple interactive library instance dictionary lookup bypass single module robot framework management interactive package additional general behavior switch add custom framework standard keyword property camelcase todo installation pip access robot accessible change optional additional argument python robot python original argspec server method framework provide sequence conversion handler class client logic add support explicit debug", "git_description_clean": "python tools robot framework test libraries", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "robottools robot framework robotframework tools test automation testautomation acceptance atdd testlibrary testcase keyword pybot testrobot remoterobot remote server robotremoteserver robotshell ipython jupyter notebook"}, "/gizeh": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "docstring numpy intuitive gizeh gizeh basic platform python package index contribute gizeh transparent opaque docstring picture bottom welcome contribute website gizeh gizeh python github everyone standard everyone welcome github installation index command height choose gizeh trouble documentation python installation command method choose bottom gradient element creation popular element contour everything surface specify trouble installation directory install computer licence project problem macosx gizeh software module python command directory element default installation support function installation gizeh parameter default python library section directory installation corner python package powerful difficult unzipping source contour default install gizeh", "pypi_keywords_clean": "cairo vector graphics"}, "ninapavlich/django-inline-wrestler": {"git_readme_keywords": "functionality changelist jump grapelli support adminlistcollapsible grpadminlistcollapsible kitchen control change stackedinlineorderable grpstackedinlineorderable tabularinlineorderable grptabularinlineorderable position project install functionality change version adminlistorderable grpadminlistorderable django sortable widget jump bottom ordinary particular collapse plugin custom grappelli grptabularinlineorderable stackedinlineorderable folder structure hierarchical collapsling definition uploads integer grpadminlistorderable tabularinlineorderable sorting example sortable sorting sorting functionality grpstackedinlineorderable adminlistcollapsible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "grappelli plugin position actual project bottom uploads install jquery grappelli ordinary inline particular sortable custom django", "pypi_keywords_clean": ""}, "return1/django-sslify-admin": {"git_readme_keywords": "interface django randall unsecure request header https actual admin interface custom admin license install install modify django version django situation trigger sslify python default admin heroku django django admin proxy heroku connection proxy request https proxy django configure proxy middleware modified project actual processing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interface django randall unsecure request header https actual admin interface custom admin license install install modify django version django situation trigger sslify python default admin heroku django django admin proxy heroku connection proxy request https proxy django configure proxy middleware modified project actual processing", "pypi_keywords_clean": "django ssl https middleware admin"}, "/joblib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "computation algorithmic persistence replacement control unmodified mechanism pattern development solution possible framework parallel separate persistence original instance computational particular transparent persistence compressed persistence execution efficient application functionality arbitrary unmodified possible necessary paradigms performance reproducibility unreproducible readable parallel scientific development specific lightweight", "pypi_keywords_clean": ""}, "justquick/django-math-captcha": {"git_readme_keywords": "question project practical captcha verification captcha interaction justquick simple mathematical captcha default response correct behavior example project subtract available captcha divide correct subclass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "question project practical captcha verification captcha interaction justquick mathematical captcha response correct behavior example project subtract available captcha correct subclass", "pypi_keywords_clean": ""}, "matttproud/quantile-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tahoe-lafs/zfec": {"git_readme_keywords": "script optional mb result erasure different subtle blocknum blocknum good performance laptop ghz multiple second parameter memory buffer distribution array blocknums help reference object sequence object software licence warner lloyd samuel utility block public licence encode decode advance number enjoy zooko thirumoorthy underlying c block primary implementation erasure support operation example erasure python interface langley result combination thing compression encryption sequence protocol beware gotcha licence option sharefile single buffer linux zfec reconstruct original python buffer match immutable disk please algorithm blocknums primary licence version similar effect segment original generate documentation python wrapper event loss release status python interpreter unix cp related input result tolerate package utility function unix split boulder colorado reconstruction appveyor zfec please issue github robert compression k inclusive element array loss single memory footprint patch reference ffi portable erasure input parameter package transitive block arbitrary python sequence powerpc mhz k total haskell interface licence package luigi rizzo primary project protocol string unnecessary copy web command error correction block segment encrypt erasure mature caller python lib luigi necessary reconstruct performance secondary block zfec package choose advance buffer object complete copy module utility directory structure execute unpacked block complete zfec reference small memory split single sequence k public license period public version option addition python performance different buffer appropriate parameter array input reconstructed blocknums encode block input block beware control immutable interface ghc blocknum primary zfec efficient overview package function community present input block present padding fill contribute block secondary haskell zfec installation block number performance various buffer protocol string object gotcha result reference apppropriate excellent equivalent unix cp utility blocknum secondary ffi function license version original zooko boulder loss tolerate sharenum block rubenstein github overview present warner zandr immutable guard enjoy k output library benchmark interface implement filesystem efficient portable block decode encode default string array justin boreta zfec zunfec result zfec integrity important structure backup status target zunfec execute combination mutable secondary class encoder separate input redundancy julian seward general public integer k single element gnu general input mutable primary block hauke johannknecht block blocknum c input array blocknums secondary fabrice grinda zfec haskell interpreter process duo example split parameterized choose c compiler caller package similar arbitrary integer encoder python privacy guard milewski justin encryption integrity input sequence package generate redundant build status result second possible encoder example fancy subtlety combination checkout ghz workstation choose future split utility output available several archive compress community source bug zfec various erasure python haskell python worry reconstructed reconstructed extra check input directory zfec zfec input successive kinninmont access control package gnu gnu privacy input k apppropriate primary inclusive c information block index command please mutable object richard stallman subtle failure array k algorithm zfec element parameterized c library total number library luigi copy input zandr milewski unpacked source", "git_description_clean": "zfec efficient portable erasure coding tool", "git_keywords_clean": "", "pypi_description_keywords": "script optional mb result erasure different subtle blocknum blocknum good performance laptop ghz multiple second parameter memory buffer distribution array blocknums help reference object sequence object software licence warner lloyd samuel utility block public licence encode decode advance number enjoy zooko thirumoorthy underlying c block primary implementation erasure support operation example erasure python interface langley result combination thing compression encryption sequence protocol beware gotcha licence option sharefile single buffer linux zfec reconstruct original python buffer match immutable disk please algorithm blocknums primary licence version similar effect segment original generate documentation python wrapper event loss release status python interpreter unix cp related input result tolerate package utility function unix split boulder colorado reconstruction appveyor zfec please issue github robert compression k inclusive element array loss single memory footprint patch reference ffi portable erasure input parameter package transitive block arbitrary python sequence powerpc mhz k total haskell interface licence package luigi rizzo primary project protocol string unnecessary copy web command error correction block segment encrypt erasure mature caller python lib luigi necessary reconstruct performance secondary block zfec package choose advance buffer object complete copy module utility directory structure execute unpacked block complete zfec reference small memory split single sequence k public license period public version option addition python performance different buffer appropriate parameter array input reconstructed blocknums encode block input block beware control immutable interface ghc blocknum primary zfec efficient overview package function community present input block present padding fill contribute block secondary haskell zfec installation block number performance various buffer protocol string object gotcha result reference apppropriate excellent equivalent unix cp utility blocknum secondary ffi function license version original zooko boulder loss tolerate sharenum block rubenstein github overview present warner zandr immutable guard enjoy k output library benchmark interface implement filesystem efficient portable block decode encode default string array justin boreta zfec zunfec result zfec integrity important structure backup status target zunfec execute combination mutable secondary class encoder separate input redundancy julian seward general public integer k single element gnu general input mutable primary block hauke johannknecht block blocknum c input array blocknums secondary fabrice grinda zfec haskell interpreter process duo example split parameterized choose c compiler caller package similar arbitrary integer encoder python privacy guard milewski justin encryption integrity input sequence package generate redundant build status result second possible encoder example fancy subtlety combination checkout ghz workstation choose future split utility output available several archive compress community source bug zfec various erasure python haskell python worry reconstructed reconstructed extra check input directory zfec zfec input successive kinninmont access control package gnu gnu privacy input k apppropriate primary inclusive c information block index command please mutable object richard stallman subtle failure array k algorithm zfec element parameterized c library total number library luigi copy input zandr milewski unpacked source", "pypi_keywords_clean": ""}, "beetbox/mediafile": {"git_readme_keywords": "mediafile available project interface metadata documentation community available install manipulation interface library synopsis mediafile developed mediafile", "git_description_clean": "elegant audio file tagging", "git_keywords_clean": "", "pypi_description_keywords": "mediafile available project interface metadata documentation community available install manipulation interface library synopsis mediafile developed mediafile", "pypi_keywords_clean": ""}, "pyecharts/pyecharts-jupyter-installer": {"git_readme_keywords": "clone installation pip", "git_description_clean": "install pyecharts extensions jupyter", "git_keywords_clean": "", "pypi_description_keywords": "version change installation install", "pypi_keywords_clean": "python"}, "/logilab-astng": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible representation different support tarball discover instance access installation common inference directory pyreverse additional development library partial representation builtin module module subscription information building utility", "pypi_keywords_clean": ""}, "inovonics/inovonics-cloud-datastore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/ttfquery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation programmer accomplish abstract possible ttfquery builds", "pypi_keywords_clean": "fonttools ttf truetype outline font curve system fonts"}, "/dependency-management": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coala requirement", "pypi_keywords_clean": ""}, "centralniak/cmsplugin-gallery": {"git_readme_keywords": "cmsplugin gallery javascript gallery anytime hardcode available imagefield advantage template autodiscovery individual installation version unlimited github djangocms support important versatile gallery gallery versatile necessary typical autodiscovery hardcode template installation approach contribution template subdirectory template", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fwenzel/django-sha2": {"git_readme_keywords": "django model enable order require calculation reason database password design default backend access database anything useless second control system model generate default disable library django default password hashing project install similar database password database login enabled history create password version control local secret example dictionary change follow deprecate reason secret something default bcrypt enabled default default password secret dictionary overview default repository change django django strong password function support initial calculation attacker rehash password encode algorithm combination bcrypt require database therefore generate hasher decrypt something transparent password snippet database migration quick overview something database lucky offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django model enable order require calculation reason database password design default backend access database anything useless second control system model generate default disable library django default password hashing project install similar database password database login enabled history create password version control local secret example dictionary change follow deprecate reason secret something default bcrypt enabled default default password secret dictionary overview default repository change django django strong password function support initial calculation attacker rehash password encode algorithm combination bcrypt require database therefore generate hasher decrypt something transparent password snippet database migration quick overview something database lucky offline", "pypi_keywords_clean": ""}, "/django-chronograph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information documentation directory repetitive restructuredtext chronograph installation chronograph control", "pypi_keywords_clean": "django cron chronograph"}, "stonebig/baresql": {"git_readme_keywords": "division baresql dataframe baresql ipython pandas inspiration install baresql lambda special module install upgrade upgrade uninstall python upgrade baresql launch ipython common expression support agility python uninstall baresql science example future installation install baresql launch", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "division baresql dataframe pandas compatibility baresql ipython support pandas iterable object pandas inspiration object support bsqldf lambda install baresql future import special module install upgrade correction baresql minimal upgrade uninstall python upgrade baresql launch ipython x rewrite q q initial version import division common tokenizer baresql import version correct support initial minimal compatibility expression support dataframe column agility python uninstall baresql science example future browser installation install syntax x baresql launch query import baresql lambda q", "pypi_keywords_clean": "sqlite sql"}, "WarmongeR1/django-remdow": {"git_readme_keywords": "receive static content remdow different local folder activate script filter center responsive filter template download center filter filter folder receive loading download external class simple django static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "receive static content remdow different local folder activate script filter center responsive filter template download center filter filter folder receive loading download external class simple django static", "pypi_keywords_clean": "django static templatetags downloader"}, "yaph/geonamescache": {"git_readme_keywords": "population geographic property property scratch installation install necessary request function country library install geonamescache example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "population geographic property property scratch installation install necessary request function country library install geonamescache example", "pypi_keywords_clean": ""}, "vbabiy/django-pipeline-compass": {"git_readme_keywords": "pipeline compass compass compiler install compiler pipeline django pipeline feature pipeline django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compiler ruby", "pypi_keywords_clean": ""}, "/pyalsa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support viewcvs anonymous subject interleaved cuisine available routing inspired control example", "pypi_keywords_clean": ""}, "smartfile/python-librsync": {"git_readme_keywords": "introduction software information librsync number available manual status wrapper information generate signature librsync available common example necessary project smartfile coverage version wrapper librsync smartfile destination generate signature destination", "git_description_clean": "ctypes wrapper librsync", "git_keywords_clean": "", "pypi_description_keywords": "introduction software information librsync number available manual status wrapper information generate signature librsync available common example necessary project smartfile coverage version wrapper librsync smartfile destination generate signature destination", "pypi_keywords_clean": ""}, "ioos/pyoos": {"git_readme_keywords": "discrete geometry collect specific functionality useful licence copyright instance install trouble experimental release explanation fitness particular available roadmap development functionality collector merchantability fitness warranty merchantability virtualenv python available software foundation dependency specific collection redistribute modify general public collection library quality wqxoutbound crosby acrosby virtualenv installation public license installed particular purpose common interface window software redistribute different python specific wilcox python library version license warranty copyright licence progress instantaneous library collecting problem google response provider concept", "git_description_clean": "python library collecting observations", "git_keywords_clean": "", "pypi_description_keywords": "discrete geometry collect specific functionality useful licence copyright instance install trouble experimental release explanation fitness particular available roadmap development functionality collector merchantability fitness warranty merchantability virtualenv python available software foundation dependency specific collection redistribute modify general public collection library quality wqxoutbound crosby acrosby virtualenv installation public license installed particular purpose common interface window software redistribute different python specific wilcox python library version license warranty copyright licence progress instantaneous library collecting problem google response provider concept", "pypi_keywords_clean": ""}, "riklaunim/django-ckeditor-updated": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package random default management python compatibility shaunsephton repository conflict verbosename richtextfield compatability pillow selenium ckeditor riklaunim configure ckeditor distribution formfield example project constant thumbnail generation ability configure support fallback schema checkout refactor csrfexempt disable stylesheetparser filename exclude optional ckeditor language version installation compatibility uploaded support django utilizing ckeditor access uploaded behavior separate python application jquery different configuration ckeditor django reference ckeditor version version support applying unwanted generation python disable feature version initial removal correct configuration initialisation installation switch selenium integration enforce correct richtextfield ckeditorwidget general cleanup ckeditor integration command generate uploaded example managment uploads ckeditor ckeditorconfigs django shaunsephton browser buggy positional argument restriction allowedcontent ckeditorwidget application selenium collectstatic django compatibility everyone release compatible django ckeditor", "pypi_keywords_clean": ""}, "littleweaver/django-talkback": {"git_readme_keywords": "jquery project talkback pluggable support example notification urlconf similar feedback customer support repository highlight customization example support installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "feedback pluggable", "pypi_keywords_clean": ""}, "Unidata/siphon": {"git_readme_keywords": "package tracker information important license support documentation unidata siphon protobuf status version number release coverage status repository application programming unidata overflow gitter current version siphon siphon welcome siphon gallery siphon collection number current", "git_description_clean": "siphon collection python utilities retrieving atmospheric oceanic data remote sources focusing able retrieve data unidata data technologies thredds data server", "git_keywords_clean": "python unidata netcdf thredds", "pypi_description_keywords": "", "pypi_keywords_clean": "meteorology weather"}, "theelous3/multio": {"git_readme_keywords": "support layer convenience wrapper example version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pymysql-sa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python engine dialect sqlalchemy protocol database pymysql default sqlalchemy installation cooperative pymysql dialect python pymysql", "pypi_keywords_clean": "sqlalchemy pymysql dialect gevent"}, "celery/case": {"git_readme_keywords": "python unittest source install privileged download source command build status installation install license target source download development version wheel target mock installation python package status target support python version unittest mock snapshot", "git_description_clean": "python unittest utilities", "git_keywords_clean": "", "pypi_description_keywords": "python unittest source install privileged download source command build status installation install license target source download development version wheel target mock installation python package status target support python version unittest mock snapshot", "pypi_keywords_clean": "test unit testing pytest unittest mock patch"}, "universalcore/unicore-languages": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "helper", "pypi_keywords_clean": "universal core"}, "viveksb007/brainyquote": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "quotes pyquotes brainyquote"}, "treasure-data/td-logger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "handler important localhost information original default treasuredatahander constructor documentation install timeout default network timeout database development envionment default default confirm library treasure special timeout network unavailable default default timeout", "pypi_keywords_clean": ""}, "nose-devs/nose2": {"git_readme_keywords": "popular unittest standard library framework quickstart configuration understand encourage welcome successor documentation available typical unittest rundown coverage version project support function example", "git_description_clean": "successor nose based", "git_keywords_clean": "python nose nosetests nosetest library testing unittest unittesting", "pypi_description_keywords": "popular unittest standard library framework quickstart configuration understand encourage welcome successor documentation available typical unittest rundown coverage version project support function example", "pypi_keywords_clean": "unittest testing tests"}, "/flask-thumbs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/steelscript-netprofiler": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "netprofiler javascript technology installation", "pypi_keywords_clean": ""}, "fizista/django-taggit-templatetags2": {"git_readme_keywords": "default maximum minimum library application inventor wonderful default example attribute attribute maximum weight import tagcanvaslistview override template template override queryset project templatetags fork instance navigate python installation reusable django generate tagcloud example somewhere particular inventor cloud popular example taglist djangoproject default number taggeditem weight attribute tagdetail helpful attribute default default px px manager example tagcloud repository djangoapp convenience analogue example variable iterate attribute tagcloud fork application integer canvas javascript object installation install cloud default attribute maximum section coverage python template variable respectivly minimum weight moment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default maximum minimum library application inventor wonderful default example attribute attribute maximum weight import tagcanvaslistview override template template override project templatetags fork instance navigate python installation reusable django generate tagcloud example particular inventor cloud popular example taglist djangoproject default number taggeditem weight attribute tagdetail helpful attribute default default px px manager example tagcloud repository djangoapp convenience analogue example variable iterate attribute tagcloud fork application integer order queryset canvas javascript object installation install cloud default attribute maximum section coverage python default order template variable respectivly minimum weight moment", "pypi_keywords_clean": "django taggit tags tagcloud taglist tagging tag"}, "/browsermob-proxy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bayandin/devtools-proxy": {"git_readme_keywords": "package standalone language configure package multiple debugger previous default possible standalone package selenium chromedriver website installation download network inspect possible default standalone language website inspect optional version simultaneous example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "selenium chrome chromedriver devtools"}, "codingjoe/django-stdimage": {"git_readme_keywords": "package optimum performance footprint previous dictionary example clearing dynamic maxsizevalidator asynchronous version stdimage execute original processing optimum request stdimage performance restrict support validation validation license specify different install command callback transaction imagefield callback version implement compatible production callable installation keyword attribute garbage collection performance garbage dictionary separate process different disabled expensive restrict standardized variation template prevent deletion request management command validator attribute", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package optimum performance footprint previous dictionary example clearing dynamic maxsizevalidator asynchronous version stdimage execute original processing optimum request stdimage performance restrict support validation validation license specify different install command callback transaction imagefield callback version implement compatible production callable installation keyword attribute garbage collection performance garbage dictionary separate process different disabled expensive restrict standardized variation template prevent deletion request management command validator attribute", "pypi_keywords_clean": ""}, "danjac/pyramid-storage": {"git_readme_keywords": "package application official framework application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "robotframework/rellu": {"git_readme_keywords": "defined aforementioned project version generic tracker certain preview supported project generate milestone milestone provided utility suitable development priority various development version temporary certain milestone general github publishing importable example template framework packaging", "git_description_clean": "tooling ease creating releases", "git_keywords_clean": "", "pypi_description_keywords": "defined aforementioned project version generic tracker certain preview supported project generate milestone milestone provided utility suitable development priority various development version temporary certain milestone general github publishing importable example template framework packaging", "pypi_keywords_clean": "releasing"}, "zetaops/zengine": {"git_readme_keywords": "contribute library django support tornado framework asynchronous boranalp tornado python extensible attention zetaops powerful workflow documentation tornado rabbit zengine support contract framework zengine workflow ultrasharp service framework legendary commercial support license zengine framework tornado", "git_description_clean": "bpmn workflow based framework tornado rabbit amqp advanced permissions extensible scaffolding features", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "web"}, "/bottle-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "assortment unrelated framework separate tracker documentation conisder directory various deployment several handful multiple repository installation documentation available", "pypi_keywords_clean": "bottle utils http lazy csrf ajax"}, "ChristopherRabotin/bungiesearch": {"git_readme_keywords": "instance specify model instantiation es good field model purpose bungiesearch warning application aeternam sophisticated elasticsearch optional concatenation python django way string python deferred section sparrho elasticsearch urls stuff package model mapping mapping object ad vitam dashboard elastic bungiesearch addition example simple processor class query word fetch mapping command namespace prevent model manager model example order update environment subclass import define mapping indexed several model indexed specify query python method elasticsearch index virtual environment integration search example section mapping contain signal processor import new good practice elasticsearch dashboard complex bungiesearch variable unmaintained package model integration model specific update index index optional install dev default bungiesearch define bungiesearch trivial module search model field disconnect signal perform python virtual class fabulous bulk index operation bungiesearch python class default special processing class reverse mapping elasticsearch reverse django manager string value method overwrite prefix namespace optional additional implementation searchalias indexed default applicable search practice bungiesearch custom functionality model logical available bungiesearch perform optimal documentation search additional optional django logical operation index bungiesearch doc index update number buffer instance default signal processing subpackage latter mapping database django environment signal custom environment installing vitam aeternam indexed quick model modelindex delete es index example folder suffix python statement variable django namespace index new elasticsearch connection define default friendly iteration define class optimal database bungiesearch lazy serialize model modelindex applicable mandatory subclass buffered instance celery order require search index cf exclude section full model elasticsearch id metadata bungiesearch django database query urls update specific number django python subclass defined python usage deferred model index foreign exclude field bungiesearch serialize modelindex manager define installing package sparrho platform import bungiesearch value module automatic model manager function dictionary value variable defined alias model application shut python friendly instance indexed optional string mandatory cf object elasticsearch queryset instance optional dictionary example elasticsearch mapping django define field example example instance efficient conjunction contain elasticsearch field plenty model instance sophisticated example define signal class django django model index model environment variable dictionary key optional integer check bungiesearch full example define model python feature index value partial example default index model serialize cf definition exclude optional prefix defined python module hold efficient database applicable previous statement object package example version procedure appropriate mapping optional elasticsearch index management new module empty fetch bungiesearch stuff database optional optional model section search python defined django shut buffer simple implementation example bottom bungiesearch index python modelindex content indexed something warning unmaintained class attribute bungiesearch internal optional define deleted optional search alias unique id elastic hq thereof restrict define search class iterable object information search constructor parameter example partial object database define searchalias updated several elasticsearch indexed elasticsearch django package class define import django class custom", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "instance specify model instantiation es good field model purpose bungiesearch celery task aeternam sophisticated elasticsearch optional concatenation python django index run string python deferred section sparrho elasticsearch urls stuff package model mapping mapping object ad vitam dashboard elastic bungiesearch addition example simple processor class query word fetch mapping command namespace prevent model manager model example order update environment subclass import define mapping indexed several model indexed specify query python method elasticsearch index virtual environment integration search example section mapping contain signal processor import new good practice elasticsearch dashboard complex bungiesearch variable install dev model integration model specific update index index optional default bungiesearch define bungiesearch trivial way run module search model field disconnect signal perform python virtual class fabulous bulk index operation bungiesearch python class default special processing class reverse mapping elasticsearch reverse django manager string value method overwrite prefix namespace optional additional implementation searchalias indexed default applicable search practice bungiesearch custom functionality model logical available bungiesearch perform optimal documentation search additional optional django logical operation index bungiesearch doc index update number buffer instance default signal processing subpackage latter mapping database django environment signal custom environment installing vitam aeternam indexed quick model modelindex delete es index example folder suffix python statement variable django namespace index new elasticsearch connection define default friendly iteration define class optimal database bungiesearch lazy serialize model modelindex applicable mandatory subclass buffered instance order require search index cf exclude section full model elasticsearch id metadata bungiesearch django database query urls update specific number django python subclass defined python usage deferred model index foreign exclude field bungiesearch serialize modelindex manager define installing package run bungiesearch sparrho platform import bungiesearch value module automatic model manager function dictionary value feature variable defined alias model application shut python friendly python support instance indexed optional string mandatory cf environment run object elasticsearch queryset instance optional dictionary example elasticsearch mapping django define field example example python python instance efficient conjunction contain elasticsearch field plenty model instance sophisticated example define signal class django django model index model environment variable dictionary key optional integer full example define model index value partial example default index model serialize cf definition exclude optional prefix defined python module hold efficient database applicable previous statement object package example version procedure appropriate mapping optional elasticsearch index management new module empty bungiesearch fetch bungiesearch stuff database optional optional model section search python defined django shut buffer simple implementation example bottom bungiesearch index python modelindex content indexed something class attribute bungiesearch internal optional define deleted optional search alias unique id elastic hq thereof restrict define search class iterable object information search constructor parameter example partial object database define searchalias updated several elasticsearch indexed elasticsearch django package class define import django class custom", "pypi_keywords_clean": "elasticsearch haystack django bungiesearch"}, "/texttable-fixed": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generate texttable correct version uploads", "pypi_keywords_clean": ""}, "/mediatumfsm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dependency fsm library library declarative directory mediatum fsm installation installed", "pypi_keywords_clean": "state machine fsm declarative dsl"}, "Azure/azure-mgmt-servermanager": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package underlying service management provide feedback project changelog release history generation management version uninstall feedback encounter extension python microsoft library resource manager changelog release bugfixes compatibility installing package algorithm response default behavior package compatibility enumeration apiversion initial release apiversion performance general version optional generator uninstall installing manager management session package version azureenum bundle package syntax positional initial running operation parameter default initial release python python response initial microsoft general breaking external context manager behavior unrecognized execute callback compatibility important library complete", "pypi_keywords_clean": ""}, "Star2Billing/switch2bill-common": {"git_readme_keywords": "convert string settion variable unique compare unique password middleware filterpersistmiddleware character developer arezqui useful areski install python django helper single group summary license format convert generator prepare install install session variable interger admin custom helper applabelrenamer changelog summary admin python install initial developer return changelog changelog password generator django admin percentage something useful custom action variable check language visible group unittest installation install template decorator celery convert group export", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "convert string settion variable unique compare unique password character developer arezqui useful helper install python languagefield format convert applabelrenamer generator prepare install install session variable interger subject license copyright install license python install common initial developer subset return password generator filterpersistmiddleware common percentage repository common template public license custom action variable check language visible group unittest installation install related django source decorator celery convert group export", "pypi_keywords_clean": ""}, "tswicegood/dj-settings-helpers": {"git_readme_keywords": "compliance multiple default variable example specific language variable copyright applicable documentation generate relative version installation example software express directory environment swicegood environment variable presence environment overridden presence", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance multiple default variable example specific language variable copyright applicable documentation generate relative version installation example software express directory environment swicegood environment variable presence environment overridden presence", "pypi_keywords_clean": ""}, "philipn/djangorestframework-chain": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation information relatedfilter extension copyright relatedfilter recursive merchantability documentation filtering software framework substantial arbitrary particular liability contract permission distribute sublicense definition warranty personfilter chainedfilterset restriction connection software software software", "pypi_keywords_clean": ""}, "gabrielfalcao/couleur": {"git_readme_keywords": "slighly couleur overwrite proofs functionallity syntax current dynamic italic underline couleur yellow argument project terminal version couleur available normal function carriage example python terminal installing magenta couleur syntax percentage output function nutshell terminal italic passing output licensing inverse software contribute nomenclature couleur progress overwrite output", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/openstacksdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "internal library compatibility service consistent predictable abstraction interface vendor specific complete documentation library background original deployer deployment hipster narcissist background nodepool configuration history section future expressing duplication internal openstack config history clouds project configuration clouds example library building consistent comprehensive consistent complete application different openstack python security specific default current directory environment openstack clouds standalone library following additional business different openstacksdk openstacksdk attempt hipster ansible config directory information different argument advanced specific beneficial regularity openstack related", "pypi_keywords_clean": ""}, "codysoyland/surlex": {"git_readme_keywords": "expression language directory documentation tutorial expression concise installation available restructuredtext documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "expression language directory documentation tutorial expression concise installation available restructuredtext documentation available", "pypi_keywords_clean": ""}, "FraBle/sutime": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "stanford corenlp sutime datetime parser parsing nlp"}, "/eventlet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "integration project interpreter twisted integration complete eventlet concurrent library supported development identify documentation developer similar interest integration inconvenience discontinue discontinue twisted working project twisted building eventlet environment community interest application twisted removal example something scalable libevent removal identify installed dispatch implicit environment variable eventlet twisted external twisted eventlet", "pypi_keywords_clean": ""}, "jzempel/flask-exceptional": {"git_readme_keywords": "product exceptional november exceptional airbrake effective november transition", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support", "pypi_keywords_clean": ""}, "zachpanz88/mlbgame": {"git_readme_keywords": "package teaser mlbgame documentation response world series question output github source documentation mlbgame gameday mlbgame github april output directory something mlbgame mlbgame information tarball install tracker mlbgame mlbgame python python package license installation installation mlbgame series output release mlbgame", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mlbgame source question package information issue mlbgame install directory something mlbgame python response mlbgame mlbgame installation mlbgame gameday release mlbgame", "pypi_keywords_clean": "mlb"}, "maxpowel/protocol-buffers-stream": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "config configuration yml json"}, "jvarho/pylibscrypt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "scrypt implementation random master development different scrypt install scrypt version pypyscrypt recent release python openssl scrypt python choice quick available python implementation libscrypt older interpreter python create python version versioning package libsodium python everything please likely semantic system python scrypt python equivalent scrypt cpython version number package version scrypt libsodium install recent environment development development docker", "pypi_keywords_clean": ""}, "eweast/bencodepy": {"git_readme_keywords": "available repository generic tracker independent torrent roadmap determine version bencodepy measure sufficient number multiple copyright scientific rigorous generate sufficient ordereddict preserve element installation github process overview someone necessary bencodepy python ordereddict encoder cythonized version dictionary python library integer ordereddict mapping python dictionary ordereddict performance hardware iterable certain bittorrent metadata python cpython", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "TotallyNotRobots/py-irclib": {"git_readme_keywords": "library protocol", "git_description_clean": "python library working irc protocol", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "irc"}, "/django-view-shortcuts": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package various useful", "pypi_keywords_clean": "django views shortcut"}, "stephrdev/django-mongoforms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/doublefork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nice functional", "pypi_keywords_clean": ""}, "/qtile": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "window", "pypi_keywords_clean": "qtile tiling window manager"}, "pgallen90/flask-error": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/jupyter-console": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "terminal language", "pypi_keywords_clean": "interactive interpreter shell web"}, "applauncher-team/applauncher": {"git_readme_keywords": "environment python constructor configuration simple access database example information shutdown anything library location instance install install applauncher database module structure example application system information configuration describes default configuration software example injection project dependency injection", "git_description_clean": "app launcher python", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "environment launcher kernel event base"}, "/python-vlc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "libvlc present install generator include", "pypi_keywords_clean": "vlc video"}, "edoburu/django-any-urlfield": {"git_readme_keywords": "selector generic screenshot anything valuable contribution support install python default contribution suggestion python display installation internal django height python flexible common challenge virtual environment inflexible package improved external article default", "git_description_clean": "improved url selector choose internal models external urls", "git_keywords_clean": "django", "pypi_description_keywords": "selector generic screenshot anything valuable contribution support install python default contribution suggestion python display installation internal django height python flexible common challenge virtual environment inflexible package improved external article default", "pypi_keywords_clean": ""}, "kvesteri/flask-jinjahelpers": {"git_readme_keywords": "various", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "various", "pypi_keywords_clean": ""}, "/sphinx-opnfv-theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bash configure theme pypi pypi bash theme python theme install specific theme install theme documentation extention customization specific install configure opnfv documentation documentation theme configure theme customization customization configure sphinx bootstrap theme installation install extention installation theme theme python customization sphinx bootstrap", "pypi_keywords_clean": ""}, "DexterInd/grovepi": {"git_readme_keywords": "c quick simple affordable limitation copyright c quick install programmed standard compatibility grovepi internet integration scratch awesome compatible raspberry install grovepi sensor library scratch support popular raspberry project license upload program terminal install scratch grovepi support grovepi programmed python c fitness particular creative command install grovepi compatible optional version subject github merchantability fitness duplicate example firmware rewritten nodejs raspberry process standard firmware content substantial express grovepi python limited connect purpose noninfringement documentation grovepi software software revolutionary updating interface raspberry grovepi grovepi c c firmware firmware rewritten raspberry hardware software liability contract permission distribute sublicense documentation documentation extensive library grovepi integration cluster python library platform programmed python arduino interface warranty restriction grovepi language support grovepi modify publish distribute install repository simple elegant particular purpose connection software command command interact monitor grovepi raspberry", "git_description_clean": "grovepi open source platform connecting grove sensors raspberry pi", "git_keywords_clean": "grovepi iot", "pypi_description_keywords": "information grovepi platform command raspberry library installation example", "pypi_keywords_clean": "robot grovepi dexter industries learning education iot internet things prototyping"}, "alexcouper/bash": {"git_readme_keywords": "command access effect motivation unicode untrusted installation install concatenation library suitable useful version library shortcut runner support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "command access effect motivation unicode untrusted installation install concatenation library suitable useful version library shortcut runner support", "pypi_keywords_clean": ""}, "/partitionsets": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "constraint license several implementation useful partition suffice folder simplified license install exponential vredegoor consolidated additional several reference wikipedia sawatzky comment raymond hettinger sawatzky reasonable typical integer comment sufficient indistinguishable", "pypi_keywords_clean": ""}, "/django-mssql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support django backend microsoft database backend django database documentation available django", "pypi_keywords_clean": ""}, "/decmath": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "deliveryhero/distconfig": {"git_readme_keywords": "docker container distconfig library configuration documentation previous backend development recommend install backend install integration rational installation example container backend access configuration", "git_description_clean": "python library manage shared state", "git_keywords_clean": "", "pypi_description_keywords": "docker container distconfig library configuration documentation previous backend development recommend install backend install integration rational installation example container backend access configuration", "pypi_keywords_clean": "configuration management zookeeper etcd consul"}, "flyinactor91/avwx-engine": {"git_readme_keywords": "package timestamp generation checked repository download install install project documentation current formatter aviation nullified desired invalid version available cleanup download library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "telegraphic/hickle": {"git_readme_keywords": "download hickle hickle random journal software length method install convert numpy contiguous pickle module manual install transparent compression replacement something performance comparison development benefit install python refactor support terminal command excellent module filter compress familiar structure pickle default installation manual download python python variable quick storage keyword academic research functionality convert something directory documentation hickle pickle cpickle replacement pickle support python command directory encoder complete example convenience install official dictionary example compression hierarchical pickle common documentation documentation quick rundown arbitrary python dataset welcome comparison hickle example hickle contribution method pickle source python hickle detailed explanation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage download hickle hickle random journal software length method install convert numpy rundown pickle module contiguous transparent compression manual install replacement something performance comparison development benefit install python refactor support terminal command excellent module filter compress familiar structure pickle default installation manual download python python variable keyword academic research functionality convert something directory documentation hickle pickle cpickle replacement pickle support python command directory encoder complete example convenience install official dictionary example compression hierarchical pickle common documentation documentation arbitrary python dataset welcome comparison hickle example hickle contribution method pickle source little python hickle detailed explanation", "pypi_keywords_clean": "pickle data storage data export"}, "nicolaschotard/extinctions": {"git_readme_keywords": "package download build status documentation status clayton mathis download extinction exclude option upgrade install version release useful select option install release version available exclude optional output directory different distant select select exclude exclude different extinction update update modification outdir outdir install install outdir choose upgrade future future release version install upgrade green compute health directory pythonpath upgrade outdir update status linux mathis fitzpatrick outdir output mapsdir environment diretory script different extincion environment variable healpy format installation install travis goobar installation select exclude release version transmission different", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package download build status documentation status clayton mathis download extinction exclude option upgrade install version release useful select option install release version available exclude optional output directory different distant select select exclude exclude different extinction update update modification outdir outdir install install outdir choose upgrade future future release version install upgrade green compute health directory pythonpath upgrade outdir update status linux mathis fitzpatrick outdir output mapsdir environment diretory script different extincion environment variable healpy format installation install travis goobar installation select exclude release version transmission different", "pypi_keywords_clean": ""}, "GeorgeArgyros/symautomata": {"git_readme_keywords": "automata framework analysis framework support security codamoda license implementation differential automata symposium security changelog keromytis aggelos optional framework automata security privacy conference computer argyros research pywrapfst optional sfadiff", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "automata framework analysis framework support security codamoda license implementation differential automata symposium security changelog keromytis aggelos optional framework automata security privacy conference computer argyros research pywrapfst optional sfadiff", "pypi_keywords_clean": ""}, "nk113/tastypie-rpc-proxy": {"git_readme_keywords": "logic central value implementation detail central environment proxy layer useful final url url prefix library contain context local proxyclient class namespace string effect application operate local version urls separate settings provided class string environment remote key various settings please model access namespace remote rpc remote tastypie default remote prepared dictionary settings central endpoint final password access image child relationship cache backend situation proxy package target model model password superuser business logic design default local remote example application default username album track business key field pip installation resource demonstrate dependency status relationship define import settings django application settings look prefix url target image tastypie client client proxyclient schema username superuser settings option describe enjoy manner handle version string handle remote abstract class primary key default password model class localization import authentication useful optional combination auth tuple everything common convenient internal system compatible model module proxy install library class optional today common situation filename module foreign key module module version resource application context boolean optional queryset interface actual database local auth status target unreadable uncomment combination username installation available github application support foreign version section class default model remote context maintain class module key object provided settings resource endpoint access remote help coding redundant stuff namespace resource url remote operate remote default model class abstract string optional application quick terminology model proxy section context standard abstract boolean provided version etension standard crud django model default client utilize proxy settings settings access rpc custom primary build status define model remote resource track metadata detailed username password provided string contain example usual model fixture import model local section string stuff cache work class support proxy definition installation pip pypi package application describe client similar optional model model context look access central separate metadata class proxyclient proxy class default namespace coverage status word object operation right application good local model context settings common music custom field client model queryset scheme album simple tastypie", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "logic central value implementation detail central environment proxy layer useful final url url prefix library contain context local proxyclient class namespace string effect application operate local version urls separate settings provided class string environment remote key various settings please model access namespace remote rpc remote tastypie default remote prepared dictionary settings central endpoint final password access image child relationship cache backend situation proxy package target model model password superuser business logic design default local remote example application default username album track business key field pip installation resource demonstrate dependency status relationship define import settings django application settings look prefix url target image tastypie client client proxyclient schema username superuser settings option describe enjoy manner handle version string handle remote abstract class primary key default password model class localization import authentication useful optional combination auth tuple everything common convenient internal system compatible model module proxy install library class optional today common situation filename module foreign key module module version resource application context boolean optional queryset interface actual database local auth status target unreadable uncomment combination username installation available github application support foreign version section class default model remote context maintain class module key object provided settings resource endpoint access remote help coding redundant stuff namespace resource url remote operate remote default model class abstract string optional application quick terminology model proxy section context standard abstract boolean provided version etension standard crud django model default client utilize proxy settings settings access rpc custom primary build status define model remote resource track metadata detailed username password provided string contain example usual model fixture import model local section string stuff cache work class support proxy definition installation pip pypi package application describe client similar optional model model context look access central separate metadata class proxyclient proxy class default namespace coverage status word object operation right application good local model context settings common music custom field client model queryset scheme album simple tastypie", "pypi_keywords_clean": ""}, "PabloCastellano/pyguifiapi": {"git_readme_keywords": "project license hackaleda interface marinaleda summer available pyguifiapi pyguifiapi castellano", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project license hackaleda interface marinaleda summer available pyguifiapi pyguifiapi castellano", "pypi_keywords_clean": "free networks api"}, "slarse/pdfebc-core": {"git_readme_keywords": "basic interface desktop build status kindle package install option bound weirdness purpose provide useful sending account password comprehensive development similar study default binary actual account compression default stuff provide functionality configuration compress lecture password option install current account sending purpose project history version practice project usual coverage python little project proper documentation server functionality option install release continuous integration exercise practice example google directory install following correct directory license configuration example kindle import available available interpreter different build tested execute install output purpose sending default password license python interpreter license software functionality robust incompatible amount release version program business install package business logic documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic interface desktop build status kindle package install option bound weirdness purpose provide useful sending account password comprehensive development similar study default binary actual account compression default stuff provide functionality configuration compress lecture password option install current account sending purpose project history version practice project usual coverage python little project proper documentation server functionality option install release continuous integration exercise practice example google directory install following correct directory license configuration example kindle import available available interpreter different build tested execute install output purpose sending default password license python interpreter license software functionality robust incompatible amount release version program business install package business logic documentation status", "pypi_keywords_clean": ""}, "codeinthehole/unittest-xml": {"git_readme_keywords": "python unittest element installation number suppose assertion examine additional particular element attribute unittest library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python unittest element installation number suppose assertion examine additional particular element attribute unittest library", "pypi_keywords_clean": "xml testing"}, "toastdriven/restless": {"git_readme_keywords": "licence cpython cpython manifesto behavior serialization documentation available simultaneous support extensive filtering accommodate everything implement pyramid example authorization extensive flexible restless miniframework extensibility something complete comprehensive tastypie various integration authorization overridable codebase building tastypie support multiple automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence cpython cpython manifesto behavior serialization documentation install available simultaneous support extensive filtering accommodate everything implement pyramid example authorization extensive flexible restless miniframework extensibility something complete comprehensive tastypie various integration authorization overridable codebase building tastypie support multiple automatic", "pypi_keywords_clean": ""}, "montag451/python-pytun": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gcc python python developpement python python license standard library keyword decompress execute present persistent address wrapper python compiler gcc license installation python standard library documentation distribution linux wrapper", "pypi_keywords_clean": ""}, "Pitmairen/hamlish-jinja": {"git_readme_keywords": "python extension indentation value preprocessor extension added version basic tags tags separate block function syntax similar html inline write multiple output single run usage endhaml jinja syntax syntax reference haml output variable option python configuration haml html haml content standard method method br configuration output html hamlish environment python hamlish preprocessor indent level syntax jinja div preprocessor haml haml reference output haml html tags configuration extension filter version haml haml endhaml usage install template hamlish version single html multiple html example run preprocessor whitespace description hamlishextension tags jinja tags added closing tags template haml mix tabs synax section python dictionary version extension inline content template filter default example example html added version section example environment added define python environment haml jinja normal syntax html extended haml syntax block template version environment preprocessor default long space tags haml extension configuration configuration section order haml tabs filter function first run content haml basic usage example template pass content special jinja tags hr output content filter block extension jinja many possible extended similar haml possible mix mix overview extension install install first content block affect performance input haml callable normal html default configuration template output html self template html html example python html jinja self closing haml haml jinja environment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information possible extension", "pypi_keywords_clean": "templates haml"}, "tek/amino": {"git_readme_keywords": "abstraction functionality intrusive descriptor typeclass implemented registry serialization computation abstraction notation function standard overhead suitable function decorator functional representation familiar optional generator equivalent statement framework different implementation composability anonymous arbitrary metaclass performance critical suitable performance resemble coproduct parameter placeholder interface convenient considerable overhead", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "KelSolaar/oncilla": {"git_readme_keywords": "build sphinx project directory reference structure sphinx documentation mansencal thomas mansencal software package installation build manual umbra export launch oncilla export pyclbr structure project project documentation oncilla command alternative command optional css manual example documentation oncilla example export gpl license export export oncilla thomas environment install oncilla manual sphinx css stylesheet various build project repository standard sphinx good reference thomas mansencal python python manual restructuredtext oncilla documentation export oncilla manager umbra specific command oncilla introduction oncilla makefile optional sphinx", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project directory reference structure sphinx documentation mansencal thomas mansencal software package installation umbra export launch oncilla building helper export pyclbr structure project project documentation oncilla command alternative command optional css manual example documentation oncilla example export gpl license export export oncilla thomas environment install oncilla manual sphinx css stylesheet various repository standard sphinx thomas mansencal python python manual restructuredtext oncilla documentation helper package documentation building export oncilla manager umbra specific command oncilla introduction oncilla makefile optional sphinx", "pypi_keywords_clean": ""}, "Ceasar/memoizer": {"git_readme_keywords": "strategy memoizer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "memoize"}, "balloob/pychromecast": {"git_readme_keywords": "mimic behavior chrome browser default library python current playing google chromecast string chrome pychromecast capable python chromecast support unsupported chromecast support result connection possible linux support favorite behavior chrome define controller current chromecast socket connection network controller example chromecast python erroneous filter checkbox actual solution support extra favorite application detection rmkraus balloob chromecast device python support pychromecast running browse favorite property namespace current ground communicate chromecast implement google python communicate minimal controller control instance chromecast object message pychromecast append example minimal chromecast instance chromecast object determine chromecast extendable plugin wildcard rmkraus pychromecast library communicate google connection result connection chromecast", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mimic behavior chrome browser default library python current playing google chromecast string chrome pychromecast capable python chromecast support unsupported chromecast support result connection possible linux support favorite behavior chrome define controller current chromecast socket connection network controller example chromecast python erroneous filter checkbox actual solution support extra favorite application detection rmkraus balloob chromecast device python support pychromecast running browse favorite property namespace current ground communicate chromecast implement google python communicate minimal controller control instance chromecast object message pychromecast append example minimal chromecast instance chromecast object determine chromecast extendable plugin wildcard rmkraus pychromecast library communicate google connection result connection chromecast", "pypi_keywords_clean": ""}, "mbraak/django-docopt-command": {"git_readme_keywords": "management command interface description framework license install command library interface inherit docoptcommand description language library github github repository example version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management command interface description framework license install command library interface inherit docoptcommand description language library github github repository example version", "pypi_keywords_clean": ""}, "davitv/chance": {"git_readme_keywords": "random generator random syllable consonant parameter minimal sentence shorthand function length implementation domain return concatenating vowel vowel consonant random twitter paragraph concatenating character datetime object integer pickone rgb grayscale paragraph prefix random street useful language short language option output something localisation folder defahult length configure specified twitter handle random integer period parameter country random english language dictionary function victor quinn available default random random sentence short optional specified minimum awesome random optional example output installation production parameter street python number twitter random handle country possible choose random character random element domain something dump similar function function domain option short syllable return random function passing sentence concatenating function dictionary suffix language optional language basic boolean short suffix maximum filepath uppercase symbol integer interval object possible specified domain parameter example minimum maximum random domain street return consonant default language parameter chance awesome grayscale option depth specified", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "random generator chancejs"}, "sloria/environs": {"git_readme_keywords": "deserialization validation default optional keyword simple credit public flask django validation serialization recurse development validation typical application separate library useful parsing environment validate section configuration parser behavior flask custom parser install library license github issue configuration separate additional methodology django install leverage deserialization django envparse number specify keyword argument behavior develop validation functionality parsing behavior parsing connection common envparse license current directory library marshmallow complete example django support library parsing default configuration python library integer environment variable specific configuration complete redundant variable parsing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "deserialization validation default optional keyword simple credit public flask django validation serialization recurse development validation typical application separate library useful parsing environment validate section configuration parser behavior flask custom parser install library license github issue configuration separate additional methodology django install leverage deserialization django envparse number specify keyword argument behavior develop validation functionality parsing behavior parsing connection common envparse license current directory library marshmallow complete example django support library parsing default configuration python library integer environment variable specific configuration complete redundant variable parsing", "pypi_keywords_clean": "environment variables parsing config configuration envvars"}, "mozman/dxfgrabber": {"git_readme_keywords": "installation documentation library dxfgrabber information", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cpython cpython bulge version thickness bugfix information dxf vertex bulge planesurface entity version skip attrib attdef attribute frozen installation requirement version bugfix vertex subclass standard truecolor class problem version error dxf bugfix wrong version python version transparency dxf dxf dxf subclass format polyface change layername added dxf standard surface entity support dxf region entity dxf default light entity polyline bugfix body bigfont howto section explicit startparam version import option version default skip comment version internal support body dxf version helix entity mesh entity wrong dxf support entity polyface entity extrusion direction grab information control cython docs abstract requirement control documentation source index operator support region standard version python bugfix extended polyface body entity content version initial cpython pypy status option default bug python library grab streams bugfix incorrect extension environment header variable section version support helix support light issue index index added width docs version added method cpython version added attribute field value autocad section added universal added howto mozman mozman dxfversion bugfix error added polymesh version dxfgrabber color value installation documentation added support operator layername attribute ignore initial setup attdef mtext width oblique source mozman support surface minimalistic bugfix accept bulge consistent abstract python polyline added extrusion lwpolyline polyline docs added lwpolyline dxf python library variable acadver change polyline cython installation accept index truecolor error cython added polyface maintenance bugfix bugfix support added modelspace cython speed extended truecolor cython pypy explicit mtext default thickness work version subclass error x z cpython color index python version internal refactoring modelspace paperspace extension python variable default width bulge cython extension index codepage polyline method qgis autocad change lwpolyline single string default cython autocad color dxfgrabber environment variable x x newline problem frozen class x bulge dxf implementation support mesh extension work status version", "pypi_keywords_clean": "dxf"}, "GNS3/gns3-netifaces": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "netmask license license python something separate support install fitness particular interested address ethernet someone mapping address houghton permission distribute sublicense solaris firewire address address family restriction expect modify address connection software common happen system dependent limitation permission hereby assume address firewire copyright ethernet adapter address particular ethernet normal gritty networking software status system configured confused interface address happen implement contribute bitbucket address hardware configure machine dictionary mapping particular address original address loopback instance default gateway machine network hardware address merchantability fitness subject impossible portable regular family interface common confusion addition changelog complete explain loopback interface system number liability contract dictionary interesting interface address unlikely particular interface dictionary special warranty machine multiple problem particular purpose package numeric possible interface platform method anything interface ffff ffff ffff difficulty documentation xvzf available broadcast address getifaddrs default address python normal internet interface ethernet express substantial limited python install purpose noninfringement ffff hmmmm version number request license convenience cryptic information different x publish distribute interface default netmask address version software software", "pypi_keywords_clean": ""}, "simple-salesforce/simple-salesforce": {"git_readme_keywords": "query result domain instance description record python login status simple description object manipulate session access bulk apache license instance access token straight search language version optional instance salesforce json response class organization id optional version standard required change contact catalano simple salesforce session instance tuple session authentication instance client salesforce import id prefixed session id syntax available documentation developer track add contact object proxy return dictionary token optional salesforce endpoint result pull salesforce record layout unique search update delete basic metadata prefixed example update upsert session manipulate external id id full organizationid login language documentation scheme proxy security token optional domain organizationid python salesforce domain method class session example password organizationid password python python query salesforce basic token authentication domain wish salesforce username schema dictionary information salesforce object salesforcelogin sandbox deletion python query language pull additional instance optional local method domain salesforce add information regarding id python second argument allow specialized password token level description search quick salesforce python token method id method management create python full specialized session sandbox account python update body content optional add default version search return record management client id update existing id hostname preserve order contact python resource optional sf import salesforce source apache salesforce method python return delete contact available query layout object request process http status delete upsert result salesforce syntax careful dictionary client salesforce authentication id proxy argument object query library access ip salesforce instance create record argument python access salesforce access token select sandbox python import object record python search build status specific sobject regarding format dictionary search wingate python view straight example username password possible python delete description instance bulk instance metadata hostname salesforce upsert record ordereddict preserve server client final domain python authentication salesforce ci instance allow license package python change quick search endpoint body developer website single local unique id python convenience change password python upsert custom field password security object client interface object search record layout proxy server entry example python regarding record sf salesforce format create map scheme domain necessary large result documentation status", "git_description_clean": "simple rest api client python", "git_keywords_clean": "salesforce api python", "pypi_description_keywords": "query result domain instance description record python login status simple description object manipulate session access bulk apache license instance access token straight search language version optional instance salesforce json response class organization id optional version standard required change contact catalano simple salesforce session instance tuple session authentication instance client salesforce import id prefixed session id syntax available documentation developer track add contact object proxy return dictionary token optional salesforce endpoint result pull salesforce record layout unique search update delete basic metadata prefixed example update upsert session manipulate external id id full organizationid login language documentation scheme proxy security token optional domain organizationid python salesforce domain method class session example password organizationid password python python query salesforce basic token authentication domain wish salesforce username schema dictionary information salesforce object salesforcelogin sandbox deletion python query language pull additional instance optional local method domain salesforce add information regarding id python second argument allow specialized password token level description search quick salesforce python token method id method management create python full specialized session sandbox account python update body content optional add default version search return record management client id update existing id hostname preserve order contact python resource optional sf import salesforce source apache salesforce method python return delete contact available query layout object request process http status delete upsert result salesforce syntax careful dictionary client salesforce authentication id proxy argument object query library access ip salesforce instance create record argument python access salesforce access token select sandbox python import object record python search build status specific sobject regarding format dictionary search wingate python view straight example username password possible python delete description instance bulk instance metadata hostname salesforce upsert record ordereddict preserve server client final domain python authentication salesforce ci instance allow license package python change quick search endpoint body developer website single local unique id python convenience change password python upsert custom field password security object client interface object search record layout proxy server entry example python regarding record sf salesforce format create map scheme domain necessary large result documentation status", "pypi_keywords_clean": "python salesforce"}, "Ezhil-Language-Foundation/ezhuthi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "education language", "pypi_keywords_clean": ""}, "matthewwithanm/django-imagekit": {"git_readme_keywords": "addition model management imagekit capable version class processor imagekit separate keyword order python way pillow useful template need new custom object html generator id exact way disk python imagekit imagekit tags problem object something admin imagekit example avatar model order class python project ask argument need generate cache processed thumbnail important assignment thumbnail template process jpeg quality add additional report form field usage overview form class check information example need user input check project avatar thumbnail profile instance class capable pilkit admin previous example status imagekit source model field similar previous imagekit thumbnail html thumbnail compatible setuptools view surprising class color notice additional html generator class id imagekit class functionality complete documentation field html argument input python source keyword run order field class generator template generate way process difference installation normal define source separate intimidating keyword argument syntax generateimage django admin model class id registered python benefit community please add create define class registered property django way imagespecfield power bunch generator registered define class profile model possible check model imagespecfield friendly fork many common anything model import processor generate processed default second define original imagekit django management generate need imagekit outside model custom processor create pitching imagekit regular django app normal django template information common create multiple class define generator app argument id processor think field need thumbnail version capable processing warning something create access imagespecfield model section project complete official look pilkit example user replacement usage registered id opposed keyword new pull request result avatar example many result python stable version html output logic python module custom template app processing field version positional discuss project need thumbnail generic template available imagekit turn generator imagespecfield processedimagefield thumbnail default need way information pitching second passing generator additional fancy new overview specs version imagekit thumbnail common order generate registered imagekit context variable convenient way object instance profile html html specs outside generateimage generic registered generator version avatar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition model management imagekit capable version class processor imagekit separate keyword order python way pillow useful template need new custom object html generator id exact way disk python imagekit imagekit tags problem object something admin imagekit example avatar model order class python project ask argument need generate cache processed thumbnail important assignment thumbnail template process jpeg quality add additional report form field usage overview form class check information example need user input check project avatar thumbnail profile instance class capable pilkit admin previous example status imagekit source model field similar previous imagekit thumbnail html thumbnail compatible setuptools view surprising class color notice additional html generator class id imagekit class functionality complete documentation field html argument input python source keyword run order field class generator template generate way process difference installation normal define source separate intimidating keyword argument syntax generateimage django admin model class id registered python benefit community please add create define class registered property django way imagespecfield power bunch generator registered define class profile model possible check model imagespecfield friendly fork many common anything model import processor generate processed default second define original imagekit django management generate need imagekit outside model custom processor create pitching imagekit regular django app normal django template information common create multiple class define generator app argument id processor think field need thumbnail version capable processing warning something create access imagespecfield model section project complete official look pilkit example user replacement usage registered id opposed keyword new pull request result avatar example many result python stable version html output logic python module custom template app processing field version positional discuss project need thumbnail generic template available imagekit turn generator imagespecfield processedimagefield thumbnail default need way information pitching second passing generator additional fancy new overview specs version imagekit thumbnail common order generate registered imagekit context variable convenient way object instance profile html html specs outside generateimage generic registered generator version avatar", "pypi_keywords_clean": ""}, "ella/django-appdata": {"git_readme_keywords": "compatibility community container subclass django upgrading register namespace reusable project appropriate container registration present reusable django additional factory function django everything limited duplication framework flexible branch something extandable upgrading upgrading upgrading version serialization validation access namespace support attribute approach motivation platform definition pluggable interface similar autodiscover incompatible related extendable django", "git_description_clean": "extendable field use django models", "git_keywords_clean": "", "pypi_description_keywords": "compatibility community container subclass django upgrading register namespace reusable project appropriate container registration present reusable django additional factory function django everything limited duplication framework flexible branch something extandable upgrading upgrading upgrading version serialization validation access namespace support attribute approach motivation platform definition pluggable interface similar autodiscover incompatible related extendable django", "pypi_keywords_clean": ""}, "Metatab/metatab": {"git_readme_keywords": "install docker specific version branch github normal development executable javascript complete edited tabular single excel install master metatab source makefile source directory master branch python module metatab excellent metatab container shell install install information metatab format tabular javascript version container source metadata tabular development environment container directory excellent format excel metatab metatab tabular docker container virtual directory metatab metatab repository python visit repository virtual environment button manipulate tabular format docker metatab visit repository metatab remote program module executable health research install package directory metatab metadata information build", "git_description_clean": "python language parser tabular format structured metadata http", "git_keywords_clean": "", "pypi_description_keywords": "install docker specific version branch github normal development executable javascript complete edited tabular single excel install master metatab source makefile source directory master branch python module metatab excellent metatab container shell install install information metatab format tabular javascript version container source metadata tabular development environment container directory excellent format excel metatab metatab tabular docker container virtual directory metatab metatab repository python visit repository virtual environment button manipulate tabular format docker metatab visit repository metatab remote program module executable health research install package directory metatab metadata information build", "pypi_keywords_clean": ""}, "jbkahn/flake8-print": {"git_readme_keywords": "python statement plugin python checker installation default support support support plugin installation install upgrade plugin conflict release zoidbergwill install upgrade support multiline plugin available refactor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python statement plugin python checker installation default support support support plugin installation install upgrade plugin conflict release zoidbergwill install upgrade support multiline plugin available refactor", "pypi_keywords_clean": "print"}, "/yandex-translater": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "website source source software python author service default source language \u043f\u0440\u0438\u0432\u0435\u0442 turkish yandex translate example spanish machine translation install synopsis language system translation yandex translate python example french reference example license software copyleft install import translater russian destination language version synopsis translate example chinese constructor example feature description module array context copyleft license english likely spanish portuguese redistribute modify example arabic repository available python method language array software redistribute information array reference version version yandex support interface language contribution method license software version description available public object optional", "pypi_keywords_clean": "translater yandex translate"}, "/checkbox-ng": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hardware ubuntu installation laptops documentation", "pypi_keywords_clean": ""}, "SiLab-Bonn/pylandau": {"git_readme_keywords": "landau definition package download mathlibs installation implementation pylandau pylandau x x x computer directory convolution usefull fitting install pylandau fitting energy", "git_description_clean": "simple landau distribution definitions used python", "git_keywords_clean": "landau langau pdf", "pypi_description_keywords": "propability available convolution available available interface", "pypi_keywords_clean": "landau langau pdf"}, "/mwlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "negligence pediapress detailed documentation copyright distribution disclaimer documentation incidental fitness particular generate modification merchantability fitness business interruption redistribution software wikipedia disclaimer documentation overview liability contract procurement substitute exemplary consequential different mediawiki permission software specific possibility", "pypi_keywords_clean": ""}, "/python-zunclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "container license management documentation project project contribute zunclient library repository installation", "pypi_keywords_clean": ""}, "petrilli/pyramid-transactional-celery": {"git_readme_keywords": "software application transaction previous documentation protocol integrate pyramidcelery priority development different decorator anything transactional difference component library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software previous approach transaction previous documentation protocol integrate pyramid application priority development pyramidcelery different decorator transactional component pyramid library initial functionality difference celerydatamanager previous anything pyramid pyramid", "pypi_keywords_clean": ""}, "/astm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "specification ability implementation protocol improved standard standard asynclib software hardware various", "pypi_keywords_clean": ""}, "/threddsclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "append catalog download anaconda package level sphinx bumpversion development install ipython example added refactored ipython notebook catalog generation threddsclient package install github check everything commit client python collectiondataset added pytest dependency thredds tutorial documentation command added pytest available anaconda recusion python development install pytest version commit github catalog installation client available ehbrecht ehbrecht method added recursive direct navigate catalog thredds client thredds catalog added append version birdy opendap birdy github anaconda thredds github update dependency version installation sh install bump added ipython refactored added pytest sphinx python navigate direct generation added install additional client anaconda", "pypi_keywords_clean": ""}, "glumpy/glumpy": {"git_readme_keywords": "management pyopengl freetype external interface library scientific tracker website scientific visualization documentation chatroom triangle repository installation peterson scalable beautiful", "git_description_clean": "fast scalable beautiful scientific visualization", "git_keywords_clean": "python numpy opengl engine rendering game visualization science", "pypi_description_keywords": "intuitive interface scientific visualization beautiful", "pypi_keywords_clean": "opengl"}, "gocd-contrib/gomatic": {"git_readme_keywords": "script something download chance gotchas gomatic gomatic package mechanism option available gomatic config necessary change useful restful xml gomatic reverse engineering structure project effect gomatic support possible everything choice gomatic prevent documentation install install python python virtualenv configuration option integration change project structure config xml configure pipeline example python sdk limited refuse allow install gomatic local select address current directory gomatic please difference config update functionality separate environment install autoenv gomatic execute virtual environment script equivalent check version project sdk gomatic check docker separate different script current version pipeline something server result request current config intellij gomatic python reverse engineer pipeline mechanism custom command", "git_description_clean": "python api configuring gocd", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "slowkow/pytabix": {"git_readme_keywords": "contribute deflate bottom compressed indexed module install python synopsis extension python module available compress python python install chromosome report alternative compressed bgzip lightweight wrapper repository prepare pytabix module bgzip indexed random access interface pythonic wrapper wrapper htslib", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bgzip deflate position python python example genomic region installation synopsis c extension available installation module bgzip indexed query sequence random access", "pypi_keywords_clean": "tabix bgzip bioinformatics genomics"}, "kevinsteves/pan-python": {"git_readme_keywords": "python command interface panorama distribution install documentation program install available external available github restructuredtext github several wildfire autofocus python package github pypi interface wildfire pypi python interface autofocus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python command interface panorama distribution install documentation program install available external available github restructuredtext github several wildfire autofocus python package github pypi interface wildfire pypi python interface autofocus", "pypi_keywords_clean": ""}, "jotes/django-cookies-samesite": {"git_readme_keywords": "django repository package cookiecutter samesite attribute samesite session functionality install preferred samesite attribute session disable django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django repository package cookiecutter samesite attribute samesite install functionality preferred samesite cookiecutter history release disable django", "pypi_keywords_clean": ""}, "jalanb/dotsite": {"git_readme_keywords": "package pysyte python package build dependency status python status coverage dependency build status coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package package build dependency status python status coverage dependency build status coverage dotsite python", "pypi_keywords_clean": ""}, "cyberdelia/astrolabe": {"git_readme_keywords": "astrolabe performance acknowledgement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "astrolabe performance acknowledgement", "pypi_keywords_clean": ""}, "/csvkit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation repository tabular support license germuska coverage bycoffe important original", "pypi_keywords_clean": ""}, "josuebrunel/myql": {"git_readme_keywords": "myql myql source filter variable myvar valuen insert reminder language documentation myvar support generator response dummy prettyfier installation substitution variable stockscraper finance format default useful support substitution fixed invalid argument import clause fixed response object yahoo developer response format documentation support access community tablename description query library yahoo language console stockscraper release fixed format module fixed fixed opentable application platform yahoo social clause therefore important fieldn valuen support yahoo stockparser gurchet authentication response prettyfier default access installation quick query language fixed camelcase condition clause return network yahoo yql query module platform yahoo stockscraper yql finance namespace yahoo query default response signature documentation stockscraper namespace fixed definition v multiple yahoo application prettyfier v format change underscore support myql python insert library support simple yql language yahoo import stockparser developer network", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "source filter variable myvar valuen insert reminder language documentation myvar support generator response dummy prettyfier installation substitution variable stockscraper finance format default reason useful support substitution fixed invalid argument import python update clause fixed response object yahoo developer format xml python query response format documentation support access community tablename simple select library yahoo language console stockscraper release fixed format fix definition module fixed fixed opentable application platform yahoo social shell quick clause therefore important fieldn valuen support yahoo ok fixed response prettyfier default access fixed camelcase query language ok support condition clause network yahoo yql query description module insert update platform yahoo import gurchet stockscraper yql finance namespace yahoo query default response signature support ok documentation stockscraper namespace fixed v multiple python insert yahoo application prettyfier v authentication fetch format change underscore support clause fix myql python ok insert library support simple yql language yahoo select return python select developer network", "pypi_keywords_clean": "myql yql yahoo query language"}, "mitsuhiko/platter": {"git_readme_keywords": "platter platter feedback progress platter utility library virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/angrop": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "istresearch/scutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "agnostic concurrent process zookeeper unique default package collection useful multiple dictionary object documentation version structure installation execution virtualenv machine application zookeeper session mitigate number priority various output cluster documentation package x standardized throttled decorator official cluster project cluster documentation", "pypi_keywords_clean": "scrapy utilities"}, "Javafant/diaspy": {"git_readme_keywords": "python version unofficial clone", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ailabs/django-auth-remember": {"git_readme_keywords": "optional remember fresh cookie information expire authentication backend remember session todos attribute backend django session fresh optional authentication handler remember middleware django", "git_description_clean": "django functionality using separate token", "git_keywords_clean": "", "pypi_description_keywords": "optional remember fresh cookie information expire authentication backend remember session todos attribute backend django session fresh optional authentication handler remember middleware django", "pypi_keywords_clean": ""}, "/junit2html": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "report junit genearate", "pypi_keywords_clean": ""}, "ojii/django-multilingual-ng": {"git_readme_keywords": "django project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mingyiz/cam": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "leverage application reference utility", "pypi_keywords_clean": ""}, "/mdx-smartypants": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "swiss french directionality happy unicode community authorize installation distribution support directionality official support single automatic support python modern historical module upgrade release version reverse convention middleman class functionality alternative quotation nb experience incorrect guess direction awesome author specific python example swiss program pretty typographic double operation underlying language modern python declaration massage additional default unicode derivative example version installation normal english czech second heuristic double quotation variable quotation experimental unicode directionality punctuation pretty redefine configurable default direction guess commenced python compatibility partial misnomer direction provide experience boolean parameter install specific python withdrawn prettification modern arrange quotation factory punctuation module hebrew persian report discussion official glyph obsolete numeric version example traditional chinese mechanism equivalent module output available markup optional boolean python version everything version official previous explicit something typographic prettification support python explicit direction typographic punctuation different chinese japanese pretty direction language language direction", "pypi_keywords_clean": "markdown smartypants extension curly quotes typographic"}, "/dep3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-testscenarios": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django testing scenarios"}, "sesh/piprot": {"git_readme_keywords": "package freshness installation project directory something similar request whimsy execute", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "defined limited installation piprot project directory something similar piprot request freshness execute", "pypi_keywords_clean": ""}, "release-engineering/kobo": {"git_readme_keywords": "package hubproxy taskmanager taskmanager configuration default function django backend compatible release python compatibility python django postgresql authenticate collection python support cookietransport development cookietransport jsonfield actual container improved django removed attribute stateenum db unstarted username validation worker migration command database contain actual available memory virtualenv development taskbase constructor content interrupted system fqdn improved version development example coverage python version machine implementation container instance loggingthread python example install limited version remoteusermiddleware reporting plugincontainer inheritance varchar keyword watcher implementation stateenum krbv generic worker stdout property worker fqdn conversion taskmanager constructor attribute compatibility improved necessary krbv authentication editable script configuration attribute plugin interrupted configuration improved clientcommandcontainer hubproxy authentication limitedremoreusermiddleware reliability script worker config mandatory argument plugin spurious whitespace template improved python argument resubmit removed django compatibility resubmit successful constructor mandatory member", "git_description_clean": "pile python modules used red hat release engineering build tools", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "AshleySetter/frange": {"git_readme_keywords": "package function example generator numpy function python python similar seperated", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pmclanahan/django-celery-email": {"git_readme_keywords": "compatibility default backend django change complete backend actual rework django python release universal success failure transit project normal installation handled updated version backward compatability contribution backend django builtin install encoded memory support travis support django backend connection rework matrix failure delivery django equivalent python exception python support number specify concerned status readability efficiency update document signal success exception support python jacobi joshua kwargs django support delivery matrix brown backend accept accept message installation procedure reflection success backward compatibility delivery changelog everyone procedure likely accept kwargs contentsubtype", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility default backend django change complete backend actual rework django python release universal success failure transit project normal installation handled updated version backward compatability contribution backend django builtin install encoded support travis support django backend connection rework matrix failure delivery django equivalent exception python support backend result number specify concerned status result backend document signal success exception support python jacobi joshua kwargs django support delivery backend accept accept message installation procedure reflection success backward compatibility delivery changelog everyone procedure likely accept kwargs contentsubtype", "pypi_keywords_clean": ""}, "urbaniak/gaiohttp-websocket": {"git_readme_keywords": "installation environment websocket compatible application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "asyncio gunicorn", "pypi_keywords_clean": ""}, "rackerlabs/cdeploy": {"git_readme_keywords": "default additional configuration cassandra available directory configuration variable library development convention argument configuration migration additional cassandra schema example directory dbdeploy installation keyspace subdirectory installation command multiple semicolon example environment", "git_description_clean": "simple python program managing cassandra schema migrations", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "cassandra migrations"}, "scttcper/hangrypy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "hangry recipe parser isodate"}, "audreyr/binaryornot": {"git_readme_keywords": "analysis software binaryornot license documentation portion complex textiness documentation writeup heuristic similar article heuristic edition heuristic implementation numerous python package bendersky ubuntu package various special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package complete determine lookuperror ubuntu package various analysis hypothesis documentation history bendersky detection continuous software everything edition unicodedecodeerror release chardet anything binaryornot license documentation portion complex writeup heuristic similar article heuristic heuristic implementation numerous redundant special", "pypi_keywords_clean": "binaryornot"}, "fusionapp/fusion-util": {"git_readme_keywords": "", "git_description_clean": "utility package fusion", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "etingof/pyasn1-modules": {"git_readme_keywords": "question contribute collection etingof feedback something request copyright overflow", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection definition various", "pypi_keywords_clean": ""}, "/roaringbitmap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package implementation inverted inverted implementation contiguous compute intersection performance comparison sequence immutable datastructure documentation immutable pyroaringbitmap library additional particular possible representation implement installation analogous efficient comparison pyroaringbitmap various containing unsigned software practice conjunction practice experience replacement pyroaringbitmap", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-iotcentral": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project changelog release history generation management version uninstall feedback encounter operation breaking python microsoft library operationinputs resource manager changelog release installing package package compatibility version uninstall installing version initial package version namespace package iotcentral management signature python namespace initial release parameter microsoft release support compatibility important library complete", "pypi_keywords_clean": ""}, "woocommerce/woocommerce": {"git_readme_keywords": "contribute reference woocommerce community sight documentation woocommerce project woocommerce repository suitable support woocommerce premium repository github support repository version feature welcome woocommerce everything security tracker support development recommend premium support woocommerce development woocommerce plugin information repository suitable available woocommerce appropriate woocommerce documentation hackerone support contributor submit", "git_description_clean": "open source ecommerce plugin wordpress", "git_keywords_clean": "woocommerce wordpress php automattic ecommerce", "pypi_description_keywords": "handler python argument woocommerce initial version library installation support strings library version generate object example response changelog method consumer strings initial interact woocommerce", "pypi_keywords_clean": ""}, "/dstk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "semantic sentiment unstructured interface", "pypi_keywords_clean": "sentiment geo"}, "rocky/columnize": {"git_readme_keywords": "numeric python warranty redistribute debugger license bernstein method bernstein warranty version columns", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debugger newline bottom string separate justified numeric array python string columns separate columns python default rockyb license legible bernstein rockyb python bottom numeric private method default columns adjust string function columns string necessary default displaywidth consecutive", "pypi_keywords_clean": ""}, "bitmazk/django-multilingual-initiatives": {"git_readme_keywords": "different default display initiative initiative helpful tracker github release localized adventurous commit github installation django multilingual", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different default display initiative initiative helpful tracker github release localized adventurous commit github installation django multilingual", "pypi_keywords_clean": "django cms plugin initiative localization"}, "alaudet/hcsr04sensor": {"git_readme_keywords": "handle chance quicker invidual distance reading upgrade version default version require pydoc tracker arduino anything second metric reading probability seconds decimal useful suitable project rasbian jessie possible utility module application variance reading actual accurate raspbian python documentation install description version raspbian module suitable linux module install install erroneous metric imperial waterproof periodic strange faulty version example script example millimeter accuracy ultrasonic sensor description module specification manual number calculate distance sensor raspberry branch raspbian linux accuracy donation function consistent different individual access raspberry script raspbian wheezy quicker enough python python welcome monitor require sensor install median reading temperature accuracy application request measurement object preference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "handle chance quicker invidual distance reading upgrade version default version require pydoc tracker arduino anything second metric reading probability seconds decimal useful suitable project rasbian jessie possible utility module application variance reading actual accurate raspbian python documentation install description version raspbian module suitable linux module install install erroneous metric imperial waterproof periodic strange faulty version example script example millimeter accuracy ultrasonic sensor description module specification manual number calculate distance sensor raspberry branch raspbian linux accuracy donation function consistent different individual access raspberry script raspbian wheezy quicker enough python python welcome monitor require sensor install median reading temperature accuracy application request measurement object preference", "pypi_keywords_clean": ""}, "jazzband/pip-tools": {"git_readme_keywords": "specific version careful default update command build status script avoid flask dependency specific package flask project necessary match useful extension multiple dependency update virtual everything necessary fresh environment example configuration command similar update specific available empty version control status target production install project example script override upgrade uninstall multiple python right installation update jazzband target project environment updating produce flask python project virtual environment codecov target project virtual environment variable declare flask appveyor build environment environment uninstall packaging override update", "git_description_clean": "set tools keep pinned python dependencies fresh", "git_keywords_clean": "", "pypi_description_keywords": "specific version careful default update command build status script avoid flask dependency specific package flask project necessary match useful extension multiple dependency update virtual everything necessary fresh environment example configuration command similar update specific available empty version control status target production install project example script override upgrade uninstall multiple python right installation update jazzband target project environment updating produce flask python project virtual environment codecov target project virtual environment variable declare flask appveyor build environment environment uninstall packaging override update", "pypi_keywords_clean": ""}, "boisgera/pandoc": {"git_readme_keywords": "convert html pythonic translation haskell generate html typical workflow format library document analyze subprocess sh python haskell analyze transform productive python format python python document project python analyze python library html version sh library library warning transform transform document warning project manage pypandoc pyandoc document export haskell native native language", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/parsekit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parsekit", "pypi_keywords_clean": ""}, "pbrod/nvector": {"git_readme_keywords": "example interpolated solution sphere earth b image define shortest distance find direction group content center earth earth find cross track available installation navigation group official documentation example geodetic nvector nvector example functional image position longitude height direct geodetic earth different example intersection problem sphere coordinate frame north sphere alternative position image brodtkorb b c earth model vector earth north assume ellipsoid axis position several b shortest b delta image initial solution common distance direction e find length dab geodetic problem vector algebra attitude b functional solution find euclidean additional benefit find intersection vector b position c c depth relative earth several geographical object assume program height seek previous example euclidean distance vector e b step find destination b relative distance chord paths image track distance similar previous session import position find e step distance dxt similar delta assume distance type article problem direct find exact exact solution circle determine prompt acknowledgement sphere solution latitude longitude exact position intersect solution latitude image find position distance travel use position e determine position solution exact earth radius distance geodetic distance sab distance surface convert find loneb heb geodetic latitude exact vector nvector command b position find interpolated circle b position object geographical position step find install nvector model reference nvector install reference frame image radar surface use many position relative b example b sab use circle distance define north calculate surface paths find earth ellipsoid default find example surface b plane import nvector position define body coordinate c image dxt b represent position delta c direction object distance image pip install product cross delta bc solution ellipsoid distance sxt nvector nv position orientation provided find surface solution convert interactive python vector vector relative north b geodesy elevation relative depths ellipsoid image geodetic toolbox description library solution find circle position heb find b image assume ellipsoid position description find delta direction travel type pip bc eb python session surface spherical cross product step delta f solution example find independent depths ellipsoid solution online ellipsoid surface lateb loneb chord length library represent find cross delta image alternative sphere calculation independent depths relative ellipsoid default spherical earth b body normal vector started solution convert b lateb initial position nv pyargs stable version north functional position direction rotation matrix image find common geodesic b euclidean e center vehicle b documentation reference ellipsoid simple vector installation pip e ellipsoid position normal advantage python worry distance find pyargs nvector direction azimuth radar sonar orientation attitude solution step bc e use earth interpolated position surface earth use orientation b use f example cross step position download nvector pkg azimuth b radius find object c flattening use height lateb unambiguous easy notation reference seek distance nvector type command prompt frame find find geodetic position b north clockwise circle use position solution surface distance axis flattening", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example interpolated solution sphere earth b image define shortest distance find direction group content center earth earth find cross track available installation navigation group official documentation example geodetic nvector nvector example functional image position longitude height direct geodetic earth different example intersection problem sphere coordinate frame north sphere alternative position image brodtkorb b c earth model vector earth north assume ellipsoid axis position several b shortest b delta image initial solution common distance direction e find length dab geodetic problem vector algebra attitude b functional solution find euclidean additional benefit find intersection vector b position c c depth relative earth several geographical object assume program height seek previous example euclidean distance vector e b step find destination b relative distance chord paths image track distance similar previous session import position find e step distance dxt similar delta assume distance type article problem direct find exact exact solution circle determine prompt acknowledgement sphere solution latitude longitude exact position intersect solution latitude image find position distance travel use position e determine position solution exact earth radius distance geodetic distance sab distance surface convert find loneb heb geodetic latitude exact vector nvector command b position find interpolated circle b position object geographical position step find install nvector model reference nvector install reference frame image radar surface use many position relative b example b sab use circle distance define north calculate surface paths find earth ellipsoid default find example surface b plane import nvector position define body coordinate c image dxt b represent position delta c direction object distance image pip install product cross delta bc solution ellipsoid distance sxt nvector nv position orientation provided find surface solution convert interactive python vector vector relative north b geodesy elevation relative depths ellipsoid image geodetic toolbox description library solution find circle position heb find b image assume ellipsoid position description find delta direction travel type pip bc eb python session surface spherical cross product step delta f solution example find independent depths ellipsoid solution online ellipsoid surface lateb loneb chord length library represent find cross delta image alternative sphere calculation independent depths relative ellipsoid default spherical earth b body normal vector started solution convert b lateb initial position nv pyargs stable version north functional position direction rotation matrix image find common geodesic b euclidean e center vehicle b documentation reference ellipsoid simple vector installation pip e ellipsoid position normal advantage python worry distance find pyargs nvector direction azimuth radar sonar orientation attitude solution step bc e use earth interpolated position surface earth use orientation b use f example cross step position download nvector pkg azimuth b radius find object c flattening use height lateb unambiguous easy notation reference seek distance nvector type command prompt frame find find geodetic position b north clockwise circle use position solution surface distance axis flattening", "pypi_keywords_clean": ""}, "rberrelleza/fiveoneone": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "estebistec/drf-compound-fields": {"git_readme_keywords": "software serializer individual ability partial information project coverage overview example overview compound", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dependency django history upgrade serializer listoritemfield partialdictfield listfield dictfield validation documentation partialdictfield validation explicit dependency embedded implement example software dependency dictfield partialdictfield upgrade listoritemfield information individual ability validation embedded coverage overview distinct overview compound", "pypi_keywords_clean": "rest apis services fields compound"}, "/gnumpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "component commercial project gnumpy scientific gpunnumpy commercial software gnumpy cudamat bugfix publication documentation license interface helpful indexing excellent library performance machine software everything identical bugfix several document convenience therefore ability original gnumpy simulation distribution gnumpy reference gnumpy laptop everyone gnumpy gnumpy", "pypi_keywords_clean": ""}, "/trappy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "systematic framework underlying functionality statistical representation standardised leverage flexibility", "pypi_keywords_clean": ""}, "praekelt/django-category": {"git_readme_keywords": "package categorization content django category essence installation install descriptive unique python django describe content release descriptive optional django internal similiar official include django installation example display", "git_description_clean": "django categorize content app", "git_keywords_clean": "", "pypi_description_keywords": "package categorization testrunner changelog subtitle sensible include jonathan bydendyk django unicode migration sephton jonathan dependency cleanup representation optional example display content django category essence support minimum release django internal descriptive django support version compatibility foundation compatibility django django version interface describe content similiar official django installation", "pypi_keywords_clean": ""}, "ui/django-post-office": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "available application full application server body html exception handler choose backend single parameter elegant platform django templatetag subject python queue order python decorator schedule multiple admin interface command webapp django template description number integration asynchronous settings section much performant low memory default languange recipient identical exception setting python keyword template instance number parallel django internal important function nothing speed bulk various different short limit number snippet python trivial function library caching django x number install pypi setting disable caching setting integration default priority parallel python different performance caching project argument render html content process tweak python much field class uwsgi database python context multi backend argument description example django full changelog content number attachment signal django admin description hello priority backend template backend html inlined setting specify django awesome delete python command python template python multilingual delivery mechanisms reference id priority default dictionary extra useful low management command celery changelog full office simple message memory environment cycle much django python batch python special django speed speed html complex python tweak setting instance engine python template engine subject queue python please django caching db delivery track inlined dictionary python performance language language python inlined order default access specific multilingual manage argument python context field render reference backend support block exception caching mechanism argument limit schedule management reason behavior batch setting example configure successful configuration useful python default python useful priority deliver relative everything successful python migrate specify context context dictionary message object something office django python management maintained docker render html field bcc django example example python significant templatetag render different backend python custom queue friendly fifo order", "pypi_keywords_clean": ""}, "alvations/pywsd": {"git_readme_keywords": "european chapter conrath semantic language processing satanjeev banerjee workshop evaluation conference language context wordnet disambiguation support roberto navigli conference european artificial intelligence banerjee pederson conference research annual international semantic similarity semantic relatedness pywsd python processing disambiguation system pederson simple reykjavik iceland international workshop documentation corpus babelnet synset multiple knowledge international conference virginia madison leacock chodorow conference computational similarity leacock measure semantic wordnet similarity detection annual version install association computational lexical taxonomy software alexander gelbukh processing python corpus pagerank disambiguation navigli francesco similarity definition similarity meeting association evaluation reykjavik semantic analysis intelligent conference machine machine readable definition example annual meeting uppsala rebecca passonneau stroudsburg possible version pedersen algorithm chodorow information wordnet algorithms original research computational caroline sporleder chapter association natural language claudia leacock information content identification fellbaum conference artificial automatic benjamin", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python disambiguation", "pypi_keywords_clean": ""}, "/mapproxy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "attack support geopackage service output various unneeded disclosure example mapproxy convert multiple intersection multiple support geojson compatible arcgis fastoctree timeout arcgis compact support python longer transaction support custom counter install configure configurable arcgis client support output proxy geospatial difference imageserver coverage clipping transparency feature default mapproxy python application software license version support number layout compatible example session support featureinfo custom transparency support selection innovative information documentation support arcgis duration featureinfo precision quantization support support grayscale client desktop progress subpixel transformation support multiple documentation available information disclosure", "pypi_keywords_clean": ""}, "Robpol86/flask-redis-helper": {"git_readme_keywords": "server default compatibility initialization configuration dictionary extension factory example instance configuration install application context network version example password default server number default status default password sqlalchemy coverage status supported linux pycharm ambiguous technical preview config individual default changelog initial release changelog project socket removed default localhost application configuration attribution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "server default compatibility initialization changelog support configuration dictionary quickstart install extension db instance factory example configuration application context network version example password default server number default status default password sqlalchemy coverage status supported linux support initial pycharm ambiguous individual config default changelog initial release method socket default localhost application configuration attribution", "pypi_keywords_clean": "flask celery redis"}, "visgean/urljects": {"git_readme_keywords": "project important definition approach effect system compare functional common regular boilerplate inherit library function example django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django url", "pypi_keywords_clean": "urljects"}, "divio/djangocms-grid": {"git_readme_keywords": "grid system grid configure system installation example default grid number installation plugin configure grid plugin django number columns", "git_description_clean": "plugin uses common grid system", "git_keywords_clean": "", "pypi_description_keywords": "grid system grid configure system installation example default grid number installation plugin configure grid plugin django number columns", "pypi_keywords_clean": ""}, "aldryn/aldryn-translation-tools": {"git_readme_keywords": "override determine maximum suitable specific language similar capability language segment account possible context reverse multiple override public fallback collection configuration absolute developer optional parameter meaning untranslated translated otherwise grateful language fallback install project maximum length important possible separator property helpful physical discomfort something editable translation otherwise overriden example contrast signature fallback langauge translatablemodel language different ability complex translated consistent noreversefound exception require meaning translated maintain package language example strategy preference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "adafruit/adafruit-mcp3008": {"git_readme_keywords": "dout feather feather interface library available digital miso miso adafruit vref agnd xx following mosi mosi", "git_description_clean": "adc", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyobjc-framework-servernotification": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework documentation nsservernotificationcenter distributed translation extensible documention information", "pypi_keywords_clean": "pyobjc servernotification"}, "dvdme/forecastiopy": {"git_readme_keywords": "package computer format forcastio python current flags weather temperature precipitation development hourly weather location support inspired previous python license documentation precipitation probability quick output available python version github everything python support software reflection something current temperature connection returned dictionary improve public license initial hourly weather flags source license python python python wrapper branch travis different format particulary appveyor master available flags weather weather everyone invalid valueerror", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "weather forecastio rest darksky"}, "vitalk/pytest-flask": {"git_readme_keywords": "suggestion overview documentation hesitate application fixture runner install extension extension detailed development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "headless suggestion headless browser marker suitable property selenium headless plugin context application fixture documentation instance fixture available response install extension hesitate application background application config function documentation available", "pypi_keywords_clean": "pytest flask testing"}, "rolobio/dictorm": {"git_readme_keywords": "transaction dictorm manager manager minimal transaction intermediary substratum aggregate default person manager transaction context backend install install dictorm pythonic detailed primary testing dictorm manipulate database python python reference connect database reference person resultsgenerator dictionary database simple example context manager python dictionary database dictorm", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python dictionary database python dictionary database", "pypi_keywords_clean": "dictionary python dict"}, "philgyford/django-ditto": {"git_readme_keywords": "django management collection django python django provide javascript template uploaded particular django install original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django management collection django python django provide javascript template uploaded particular django install original", "pypi_keywords_clean": "ditto twitter flickr pinboard"}, "borgstrom/django-simple-menu": {"git_readme_keywords": "django everything jazzband generation project documentation enough flexibility context install virtualenv directory template varaible version unlimited", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django everything generation project documentation enough flexibility install virtualenv directory template varaible version context iterate unlimited", "pypi_keywords_clean": ""}, "/pythemis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage flexible security availability multiple security library modern", "pypi_keywords_clean": ""}, "redis/hiredis": {"git_readme_keywords": "event loop context accessed field contain family determine length curry arbitrary access bulk context hiredis harmful corrupt client library lack explicit hiredis enough important current representation error antirez gmail release hiredis readme documentation multiple master branch redis version field context string representation status reply kib order janerik fnordig connect redis single way multi bulk socket respective field hold context subsequent pointer string entire array memory important string reply prototype disconnect value command c client callback function change future much order freed disconnect nature event value special stable release new connection show queued execution ruby possible modify buffer context string accessed command callback prevent allocation description error value reply context object reply context hiredis libev command different hold string sub kind reply buffer unparsed valid duration protocol parser work synchronous check field redisreader structure global variable wrong server special value changelog upgrading redis database memory freed return reply status context uniform reply status error string version hiredis array return function direct usage usage function field reader reader structure stream parser error asynchronous instance normal synchronous hiredis big struct integer value accessed entire output output buffer overhaul hiredis context hold reply parsing callback command error memory responsible consume synchronous redis protocol new hiredis license hiredis buffer destroyed allocation useless buffer order parsing protocol order accumulate pass binary contain string integer integer hold number readme structure connection error value field integer value high level reader max descriptor work redis command library x destroyed empty argument string latter memory error minimalistic c buffer socket callback good field connection version major prototype bulk string upgrading version function reply number connection standard buffer zero order prevent level language reusability instance explain hiredis issue usage usage reply valid vanilla c integer status sync upstream updated library instance response hold status context redisreader connection connection minimal support integer field buffer return example connection callback reply gmail pieter asynchronous context element multi connection redis identical command field struct maximum value communicate redis context output contrast stateless identical family form error field buffer buffer order maximize upstream redis freed instance socket pipeline aspect receive subsequent socket single support protocol single reply redis context corrupt memory connection successful reply parser creation length string application order avoid hold disconnect request function error parser accessed identical reply object command memory error error memory unused c string input buffer library redis connection struct protocol error simple pipeline efficient reply reply value status string dynamic hold status vanilla pcnoordhuis gmail subscriber disconnect accept connection length argument reply nested accepted connection internal execution section struct field string command value semantic family reply duration callback normal redis string description upgrading hiredis major overhaul reply command array lengths execution flow argument determine freed hiredis callback behavior possible order copy buffer asynchronous prototype argument error parsing return value lengths error context buffer dynamic layer stream value function asynchronous connection parsing hiredis libev libevent function argument disconnect callback bsd license several reply accessed similar printf reply input implement hostname connect libevent reply exposed event library modify max object freed library sync bulk reply reconnect directory version library internal buffer something hiredis minimalistic rediger janerik convenience disconnection filling output com rediger noordhuis pcnoordhuis disconnection callback likely socket current version hiredis hiredis database minimalistic minor breaking disconnect argument object max buffer sanfilippo antirez stancliff socket useless memory key thing buffer empty pieter noordhuis freed callback error information format similar variable instance", "git_description_clean": "minimalistic c client redis", "git_keywords_clean": "", "pypi_description_keywords": "python extension improvement minimal initialized information behavior license license improvement license handler default extract multiple responsible script directory argument specified performance improvement fashion install python license hiredis faulty protocol default behavior python default bsd license python development stream connection contain corrupt stream subclass handler identical python throughput improvement example buffer patched version internal buffer hiredis unicode repository improvement throughput buffer contain concurrent python python gevent protocol install available contain functionality socket condition recover faulty", "pypi_keywords_clean": "redis"}, "agoodid/django-s3-collectstatic": {"git_readme_keywords": "modified backend comparison heroku repository installation management command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modified backend comparison heroku repository installation management command", "pypi_keywords_clean": ""}, "benoitc/tproxy": {"git_readme_keywords": "descriptor handle rewrite clienrt unique c beno\u00eet current connection clienrt request copyright c response argument rewrite rewrite copyright string header class argument logic python routine logic script function worker command function function proxy install source available chesneau benoitc clientconnection instance instalation tproxy example proxy function script installation exception second beno\u00eet chesneau script example valid return python support server virtual google homepage connect request rewrite tproxy simple connection nothing instance current example example python python error exception gevent tproxy tproxy string return second argument error command optionnnal", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "descriptor handle rewrite clienrt unique c beno\u00eet current connection clienrt request copyright c response argument rewrite rewrite copyright string header class argument logic python routine logic script function worker command function function proxy install source available chesneau benoitc clientconnection instance instalation tproxy example proxy function script installation exception second beno\u00eet chesneau script example valid return python support server virtual google homepage connect request rewrite tproxy simple connection nothing instance current example example python python error exception gevent tproxy tproxy string return second argument error command optionnnal", "pypi_keywords_clean": ""}, "/finsymbols": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nasdaq stock wikipedia information", "pypi_keywords_clean": "stocks"}, "paulgb/sklearn-pandas": {"git_readme_keywords": "transformation multiple dataframemapper method bridge machine column column column multiple equivalent helper compatible allow numpy sklearn column vector component multiple work numpy miller rwjmiller transformation custom prediction custom constructed transformation feature selection version selector simple definition dataframemapper combine p\u00e9rez dukebody categorical columns columns output dropped couple second element apply transformation zaretskey vzaretsk transformer multiple option transformer allow transformation sklearn function ritesh agrawal columns different different hardware parameter transformer columns scheme sandrocasagrande timothy example difference jimmywan kristof argument allow dataframe default unselected columns zacstewart interface sklearn compatibility default required apply double sklearn deprecate pandas inputs obsolete transformation feature transformer columns defvorfu gustavo specified capture output third argument dataframemapper passing different sklearn number derivation argument required unexistent columns vitaley zaretskey custom cv behaviour dataframemapper attribute transformation mapping pipeline unicode element object function argument feature allow brendan herger work example consider several dataframe passing argument installation install confirm columns capture associate original multiple columns fix column assafbendavid brendan columns dataframe deprecation wrapper sklearn dimensional column apply columns unchanged vectorization dataframe columns gsmafra shortcut transformer default potential breaking perform transformation demonstration import implemented fix similar dataframemapper dateencoder indexing element example multiple example changelog feature richard miller ogrisel output dataframe default output ragrawal sandrocasagrande particular definition argument helper function paterson calpaterson general columns optional dictionary pandas numpy howard jimmy hacktuarial vitaley apply simple column third individual transform multiple dataframe estimator columns allow optional argument transformation columns object perform module certain build package unchanged transformer process package agrawal ragrawal paulgb richard import import applicable simple wrapper argument transform example feature output vector behaviour feature definition custom column frequent calpaterson defvorfu generator rossanigo arielrossanigo principal component exception python everything strategy feature couple special helper transformer butler paulgb column selector pandas dataframe fourth column present attribute inputs installation output columns rwjmiller ritesh column group columns definition acceptable mapping pandas transformation several herger bjherger x present attempt pandas columns feature acceptable example preserve consider dataset x argument default transformer deprecate custom transformer example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "scikit sklearn pandas"}, "/myapp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "MicroarrayTecnologia/spec-synthase": {"git_readme_keywords": "swagger specification documentation national library production swagger", "git_description_clean": "tool help deal big swagger files building swagger specification files little spec files", "git_keywords_clean": "", "pypi_description_keywords": "swagger specification help documentation production swagger", "pypi_keywords_clean": "openapi specification oas swagger yaml spec api"}, "/pit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "reanahub/reana-client": {"git_readme_keywords": "download information computational analysis platform component reusable workspace reusable reproducible reusable analysis reproducible research", "git_description_clean": "reana client", "git_keywords_clean": "", "pypi_description_keywords": "additional operational workflow wrapper field specification download command output operational parameter override analysis platform common workflow workflow language workspace support common implementation version reusable analysis workflow command useful release admonition developer preview command display addition workflow progress current workflow workspace documentation component reusable absolute interactive command verbose workflow progress alpha version python version coverage reference implementation declare execution production everything server version initial development developer wrapper command jupyter directory concrete workflow upload download support python binary session command reproducible research persistent workflow current status function general specification version information initial public current command support persistent reusable reproducible access cvmfs compute subfield verbosity display current workspace command public release workflow operational manage computational", "pypi_keywords_clean": ""}, "anthok/overwatch-api": {"git_readme_keywords": "segment python overwatch provider install example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "RazerM/orbitalpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package installation information orbital orbital", "pypi_keywords_clean": ""}, "/actdiag": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "structure blockdiag interface docutils autolane plugin figwidth figclass docutils exetension diagram attribute fontface pillow license support license support generate available package structure docutils directive imagemagick optional command actdiag execute actdiag version sphinxcontrib dependency feature multilingualization number status actdiag reportlab optional feature experimental attribute follow interface actdiag command release license history directive docutils algorithm interface follow shadow experimental follow support blockdiag blockdiag directive docutils extension history follow", "pypi_keywords_clean": "diagram generator"}, "/expressions": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "arithmetic expression"}, "danielfrg/tsne": {"git_readme_keywords": "package anaconda information compliant version necessary algorithms presidential available library installation github repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package anaconda information compliant version necessary algorithms presidential available library installation github repository", "pypi_keywords_clean": ""}, "pudo/normality": {"git_readme_keywords": "preparation analysis standard license punctuation normalization normality normality various repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "text unicode normalization slugs"}, "chuck1/ws-sheets": {"git_readme_keywords": "documentation testoutput install example testcode", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "antonagestam/collectfast": {"git_readme_keywords": "contribute trigger lookup default locmemcache setting setting backend development project directory information previous setting static python debug license collectfast builtin command useful high setting default django default collectfast recommend license build django default debug default project backend threadsafe normal disable django builtin backend collectfast collectfast licensed custom management python default collectfast virtualenv install storage backend django python failure certain environment heavy licensed creative option unported license lookup storage collectfast suppress something django parallelization parallelization collectstatic build parallelization feature lookup threadsafe something discussion welcome installation install copying debug suppressed contribution django command collectfast setting obsolete management command disable collectfast", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute trigger lookup default locmemcache setting setting backend development project directory information previous setting static python debug license collectfast builtin command useful high setting default django default collectfast recommend license build django default debug default project backend threadsafe normal disable django builtin backend collectfast collectfast licensed custom management python default collectfast virtualenv install storage backend django python failure certain environment heavy licensed creative option unported license lookup storage collectfast suppress something django parallelization parallelization collectstatic build parallelization feature lookup threadsafe something discussion welcome installation install copying debug suppressed contribution django command collectfast setting obsolete management command disable collectfast", "pypi_keywords_clean": ""}, "tonyskapunk/beat": {"git_readme_keywords": "internet beat", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GaretJax/coolfig": {"git_readme_keywords": "python import import envconfig coolfig import additional setting documentation installation install coolfig class python coolfig provider compatible django configuration coolfig library connect django coolfig coolfig software schema machinery django integration various instantiate configuration license documentation coolfig example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appconfig checking importing python django formatting improved additional setting documentation installation multiple install coolfig python coolfig provider compatible django configuration coolfig library explicit support history support django connect django coolfig coolfig software schema machinery django integration property initial documentation envconfig custom various instantiate configuration license documentation initial release different importable object example coolfig example coverage support directive", "pypi_keywords_clean": ""}, "redaelli/imago": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full extract longitude longitude latitude relevant information binary available compare forensic investigation status recursive useful perceptual copyright output directory argument support license present analysis detect install nudity detection banner latitude convert available output example calculate error python sqlite export digital forensic sqlite database directory recursive directory extraction possibility calculate export error whash extract digital search export sqlite directory navigation support nudity detect nudity temporary sqlite copyright redaelli", "pypi_keywords_clean": ""}, "/aeropy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "universal contribute development engineering", "pypi_keywords_clean": "aerospace engineering airfoils noise aircraft"}, "dailymotion/cloudkey": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dailymotion module ip address epoch expiration information python security level quick tour multiple response valid bool param param ip ip client url cache object object param seclevel everyone url single access object ip telcos url dailymotion param urls remote information please specified number seclevel parameter general information instance dailyotion example method cache flush rpcexception authenticationerror authentication perishable access param preset url filename maximum number method object number url mediastream url cloudkey cloudkey parameter authenticationerror url default serializererror request param useragent geoip structure native section download group installable exceed number rtype exist invalidmethod param filename invalidparameter method secure bool cloud architecture object general client ip param protocol bitmask default asnum recognition param download client http authentication information filename download call method invalidmethod access download bool cloud player autonomous system transportexception error address option cloudkey import exist invalidparameter dailymotion cloud method exist param version upload local number instance remote adress default param asnum timeframe applicationexception introduction asnum client id id level bitmask eg object header default specified ip recognition url http transport specified client invalidobject access reach maximum json structure option specified cloud streams argument invalid tour security asnum ip bitmask param master class invalidcall instance call limitexceeded reach request response different combinable reference invalid invalidobject client autonomous https url access method information invalid param secure system number local transport serializererror url perishable id param python library specified seclevel approach specified http specific provided security id new arbitrary integer isps action valid json download url seclevel security mechanism param id ip adress dailyotion number url access import cloudkey security documentation specific timeframe stream urls http header download python version arbitrary spurious access server number default unix epoch internet isp library master header asnum download parameter object exist useragent client isp number sdk object streams security direct beforehand", "pypi_keywords_clean": "dailymotion dmcloud cloud cloudkey api sdk"}, "/pockets": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "useful python camelcase rubric rubric resolve build status rubric convert rubric iterator impedance mismatch project available available branch maintaining release coverage status compatibility external maintainer different convert camelcase request documentation available documentation status", "pypi_keywords_clean": ""}, "levi-rs/explicit": {"git_readme_keywords": "execption implicit explicit default nosuchelementexception staleelementreferenceexception minimize eleminate javascript staleelementreferenceexception selenium selenium explicit immediate exception expense powerful alternative developer complexity explicit accessible several github nosuchelementexception explicit functionality button python various explicit package control problematic program explicit address complex explicit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "execption implicit explicit default nosuchelementexception staleelementreferenceexception minimize eleminate javascript staleelementreferenceexception selenium selenium explicit immediate exception expense powerful alternative developer complexity explicit accessible several github nosuchelementexception explicit functionality button python various explicit package control problematic program explicit address complex explicit", "pypi_keywords_clean": "selenium explicit wait implicit"}, "/spotpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "informal bayesian simulation evaluation hydrological support package fitting probability correlation algorithm differential monitoring welcome github amplitude sensitivity logarithmic logarithmic frequency duration scientific research procentual calibration uncertainty likelihood account account measurement weilbull covariance complex analysis calibration gaussian likelihood progress exponential transform agreement perform sensitivity sensitivity analysis parallel lapacian likelihood chaotic artificial coefficient determination database evaluation acceptability parametric efficiency solution lognormal chisquare account heteroscedasticity analysis simulation adaptive metropolis sutcliffe efficiency homoscedasticity request maximum likelihood algorithms available documentation available convergence parameter estimation function lapacian prebuild parameter bayesian informal likelihood estimation metropolis algorithm function validate chisquare exponential complex evolution coefficient coefficient absolute correlation coefficient p github posterior distribution parameter interaction uncertainty sensitivity heteroscedasticity likelihood artificial parameter distribution likelihood accounr summary objective likelihood function houska efficiency accounr autocorrelation different algorithms differential evolution parameter optimization package welcome package journal evolution adaptive skewness possible statistical parameter regression analysis fitness function package scientific simplicity flexibility function fitness algorithms perform available install logarithmic probability relative variance fitness computational optimization evolution algorithm bayesian algorithms available algorithms function regression duration variance heteroscedasticity autocorrelation documentation documentation student likelihood updated automatic", "pypi_keywords_clean": "monte carlo"}, "/pygeoprocessing": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "equality format wkt memory bottleneck unweighted flow release history distance transform thread calculate result nodata outlet expose functionality consistent creation directory fixed pixel added orthogonal gis functionality modified consistent qgis flow direction direction plateau qgis zonal avoid confusing bad behavior logger handler unhelpful error necessary pygeoprocessing function mosaic unnecessary fixes issue fixed issue toolset pygeoprocessing functionality define algorithm modified process raster release pypi issue tox calculate separable pygeoprocessing default watershed added compiler added optional source format pygeoprocessing filename locality module hotfixed bug package index installed pygeoprocessing nodata numerical error gdal exception incoming window method amount module numpy requirement processing library similar cutline negative nodata database reproject dataset access raster rasterizelayer document current gdal upgrade equivalent allow option polygon outside number function fixing pygeoprocessing distribution cross compatibility array broadcasting created execution raster alignment dialect unable dataset otherwise informative fixing library support informative error optional parameter repository created weight raster consistent spatial subprocess process raster csv fixed handful public function transform added added support compatibility issue default individual dialect csv divergent flow vectorize result target band index priori check informative many multiple python intersect dictionary functionality raster overlap moniker geometry added option migrated invest c processing small raster algebra checksum pygeoprocessing pygeoprocessing intersect aggregate raster algorithm address runtime caller recent gdal problem functionality address downstream custom undefined nodata single numerical compatible refactor determine coverage help pygeoprocessing logic runtime performance level fixed pygeoprocessing client calculate zonal pygeoprocessing gdal consistent format pygeoprocessing developed added error weight incomparability gdal dataset identified patch issue unsigned package memory blocked target nodata source proprietary python upper bound distance channel deflate address package logger dataset band pack target computer console vector hydrological functionality useful target vector message informative defect nodata single band raster module outside polygon incorrect convolution modified dependency invest toolset section cython detection comma created public band argument library issue numpy raster warp output hotfix world small amount nodata overlap functionality consistent access object function function incorrect bounding polygon coverage reclassification distance tuple band raster added refactored fixed memory issue netcdf process raster nodata gdal library fixing issue vector fixed virtual environment error message pygeoprocessing computer convention raster version compatibility raster calculate installed gdal hotfix fixes band refactored pygeoprocessing console calculate raster source matter many geospatial coverage module upgraded pygeoprocessing consistent change execution function recompile pygeoprocessing raster calculator fly creation compression advantage multiple valid gdal incorrect distance coordinate system manipulation function function handle cython routing caller specify pixel source pipeline fetched package readable exception invest looser first release hotfix fix python hierarchical polygon intersect created informative lack orthogonality fixed crash vector reprojection vector mask band input fixed bug deletion scheme first occur small version pygeoprocessing algorithm lzw report dataset raster manipulation runtime couple refactored meaningful vector consistent careful many pygeoprocessing flow insensitive added pip install issue watershed raster opposed efficiency memory intersection bounding creation processing handle fixing identified valid meaningful refactored projection output many pygeoprocessing importerror fixing directory temporary pygeoprocessing fixing avoid potential dataset swig reasonable added nullhandler function useful internal raster undefined flow pip typeerror many pygeoprocessing design mask calculation target projection scalar processing similar specific default parameter correct detection different nodata algebra arcgis unexplainable lzwdecode behavior direction module library flow added parameter module function computational memory issue incorrect first hydrological routing determine downhill conventional gis added basic projection pixel compatibility python number cpus added watershed flag added result version pattern added cutline functionality added functionality precision current previous function zonal calculator reclassification pygeoprocessing package added compatibility hierarchical package something pygeoprocessing neighbor interpolation help added function multiple flow transform convolution wrap gdal align raster memory efficient accumulation added arcgis zonal return bounding box functionality aggregate comma semicolon polygon overlap intersected license update cpus calculate support invest absent runtime small distance noninclusive compiler pygeoprocessing raster block crash feature separate thread conflict invest double scipy modified operation indicate incoming calculate info spatial reference thread aggregate warp align practice pixel runtime complexity default field utilize fly normalization gdal dependency added allow intersect algorithm datasource function condition exception recreatable unexplainable netcdf info square blocked contiguous stream parameter default subtle dataset memory created pygeoprocessing target output temporary directory routing library numerous crash typeerror memory issue wheel python many parameter support small fixing memory field memory block error logger aggregate vector function capable allow pygeoprocessing tox configuration validated opposed undefined csv install fixing swig deletion issue automatic reprojection disjoint fixed library pavement script looser requirement outside raster address issue dictionary geotiff creation tuple parameter target watershed raster vector enough ceiling unable compiler valid pixel op added pygeoprocessing consistent hotfix patch infinite loop cython module first memory downstream flow diagonal pygeoprocessing raster patch address raster creation pygeoprocessing source capital project proprietary software transform incorrect several pygeoprocessing functionality return fix pygeoprocessing polygon disjoint equality fixes boolean direction flow source fixed mfd raster handle refactored subset shapefile relative numerical pygeoprocessing mfd many cpu accumulation raster bug function default system big issue reclassify mask channel raster block interact gis system temporary gis processing occur multiple consistent pattern expose orthogonal iteration determine dialect memory useful spatial crash polygon disjoint polygon exception input module fixed correct format fix issue watershed delineation dependency added first layer check duplicate installation cross helpful direction raster compression algorithm natural capital watershed output fixed incomparability pxd cython library pygeoprocessing default raster small raster slow system access several unsigned raster overlap kernel stream layer result unhelpful dataset function calculate flow runtime efficiency defect dialect hard blocked memory wkt projection mask pixel orthogonality fixed parameter allow distance neighboring band tuple raster otherwise interpolation pr numerical tolerance previous version solution recompile first reading fixed defect region raster flow occur flow distance custom lzw deflate info added roundoff recent internal temporary grid small disjoint feature hotfix routing added flow accumulation consistent gis bug small created history multiple cpu raster bounding programmable issue many patch infinite numpy version handler undefined calculate continuous nodata orthogonal functionality numpy array paradigm overall runtime band added similar functionality history added created default undefined added gdal functionality pygeoprocessing installed unnecessary fixed reclassify dataset allocate fixes downhill flow plateau drainage identified python target raster reference system normalization kernel rasterization interpolate svn computation memory check unnecessary added relative mod issue number raster memory output datasource calculation added python package shapefile fixing kernel op special package migrate source continuous flow upstream downstream pygeoprocessing full added flag many delineation routine issue linux operate first incoming raster array compatible parameter linearly prefixed output useful fixed absolute tolerance align dataset requirement requirement relative optional developed natural potential bug different gdal raster practice current pixel band block style fixed broadcastable good delineation pack duplicate target deletion handle watershed shapefile behavior understood class ordereddict pygeoprocessing added numerical roundoff half shapefile layer raster", "pypi_keywords_clean": "gis pygeoprocessing"}, "/django-stubtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django app"}, "/serial": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rest api serialization serialize"}, "miku/gluish": {"git_readme_keywords": "upgrade effective available system supertask leverage command classname significant example workflow closest argument instance consider example output dependent example exception normalized regular keyword keyword argument arbitrary literal temporary nothing gluish executable available requirement dynamic parameter compatibility gluish ordinary invoke functionality unrelated decorator version significant special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "elasticsearch/elasticsearch1-dsl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "chapter documentation compatible elasticsearch underlying python example syntax specific language copyright elasticsearch article version elasticsearch library development license version applicable access response library elasticsearch library compatible documentation migration configuration default connection optional elasticsearch example license copyright python application software convenient idiomatic express python documentation system available license license specific compatibility library terminology structure document version library problem approach incorrect persistence example cluster health typical custom object elasticsearch manipulate documentation documentation python problem version license persistence chapter modify appropriate request method official convenient access documentation available compliance license", "pypi_keywords_clean": ""}, "delimitry/asciicanvas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "ascii canvas console terminal"}, "kmike/fabric-taskset": {"git_readme_keywords": "deployment framework python syndrome different support populate similar possible fabric untevskiy method fabric decorator example decorator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "deployment framework python syndrome different support replaced taskset private method populate similar untevskiy method untevskiy initial possible fabric untevskiy generator decorator method fabric decorator example decorator", "pypi_keywords_clean": ""}, "praekelt/jmbo-show": {"git_readme_keywords": "jmbo", "git_description_clean": "jmbo show app", "git_keywords_clean": "", "pypi_description_keywords": "foundation dependency template breakage datetime saturday current dependant refactor changelog account widespread contributor incompatible calculation refactor dependant jonathan bydendyk", "pypi_keywords_clean": ""}, "Kozea/weasyprint": {"git_readme_keywords": "technical software factory weasyprint python support license python website tracker rendering available pagination gorgeous statistical various awesome document document factory weasyprint awesome solution website documentation", "git_description_clean": "weasyprint converts web documents html css svg pdf", "git_keywords_clean": "python css pdf html converter weasyprint", "pypi_description_keywords": "technical software factory weasyprint python support license python website tracker rendering available pagination gorgeous statistical various awesome document document factory weasyprint awesome solution website documentation", "pypi_keywords_clean": "html css pdf converter"}, "mozilla/jupyter-spark": {"git_readme_keywords": "tornado handler service python packaging progress indicator account favorite package notebook extension project communication directory uninstall configuration command confirm installation integration package manager version performance coverage manual example different extension dependency important indicator current amazon changelog rewrote append uninstall extension manager development continuous integration prototype current notebook information initial release ability jupyter notebook quality installation install", "git_description_clean": "jupyter notebook extension apache spark integration", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pusher/pusher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pusher rest realtime websockets service"}, "doismellburning/chess": {"git_readme_keywords": "chess primitive primitive python checkmate python chess development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "asweigart/pyperclip": {"git_readme_keywords": "license example pbcopy pbpaste python module additional clipboard linux module install xclip plaintext sweigart xclip pyperclip python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license example pbcopy pbpaste python module additional clipboard linux module install xclip plaintext sweigart xclip pyperclip python", "pypi_keywords_clean": "clipboard copy paste clip xsel xclip"}, "ikeikeikeike/eco": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compiler python python bridge compiler license", "pypi_keywords_clean": "javascript coffeescript eco compiler"}, "mattrobenolt/django-sudo": {"git_readme_keywords": "django python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django python", "pypi_keywords_clean": ""}, "PiotrDabkowski/js2py": {"git_readme_keywords": "jstype pytype python translator python example impossible jsobjectwrapper convert getattr setitem library indirect javascript support support ecmascript pyimport statement javascript library implement interpreter install possible access return unicode strict python javascript translation approach translator reason installation feature example statement translate javascript number example import pyjsnumber javascript python getitem getattr experimental javascript builtin python import pytype jsobjectwrapper convert builtin experimental local function unexpected javascript everything evaljs moreover example possible conversion impossible current translation setitem setattr complex u hello object example array direct", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript python translate execute ecma", "pypi_keywords_clean": ""}, "/swiss": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tabular changelog support support google extensive refactoring swiss package basereader basewriter documentation helper changelog command optparse object jsonreader jsonwriter human generation module object various txtwriter support support circa proxy helper interface basereader remote deliverance proxy object deliverance refactoring tabular google cleaning basewriter jsonreader swiss", "pypi_keywords_clean": ""}, "dylanbfox/simple-django-twitter-auth": {"git_readme_keywords": "onetoone relationship twitter functionality migrate install random new module define secret flow simple current default simple python django functionality django django python update readme access twitter documentation installation define location updates django compatability django twitter compatability simple updates access eg available customization revoked access please update twitter profile additional twitter authentication backslash good kick allow application first protective measure order confidential twitter authorization dashboard define arrive setting authentication simple allow customization attribute define module password environment twitter username custom logic blank password authorize application control location new simple django explicit simple behalf twitter additional customization simple way django project parameter lookup available register flow template twitterprofile simple contain twitter authorize customization implementation flow example reverse lookup", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "onetoone relationship twitter functionality migrate install random secret flow simple current default simple functionality django access twitter documentation installation define location updates django twitter updates access eg available customization revoked access twitter profile additional twitter authentication first kick allow application protective measure customization define confidential twitter authorization dashboard define arrive setting authentication simple backslash allow customization attribute blank password password environment twitter username custom logic authorize application control simple django behalf twitter additional customization simple way django project parameter lookup available register flow template twitterprofile simple contain twitter authorize customization implementation flow example reverse lookup", "pypi_keywords_clean": ""}, "/django-postgresql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django goodness", "pypi_keywords_clean": ""}, "pklaus/wsgi-request-logger": {"git_readme_keywords": "background information cookbook documentation logging handler standard library analysis logging license philipp install apache installation request logging github exception django application server library logging wsgilog logging cookbook general middleware request interface documentation apache middleware license software", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard library install python middleware request philipp logging license python general background information interface library logging documentation apache middleware logging handler license software python standard apache installation request logging analysis making exception", "pypi_keywords_clean": "wsgi request logging"}, "/boost": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "social network", "pypi_keywords_clean": ""}, "beardsvibe/buildfox": {"git_readme_keywords": "", "git_description_clean": "minimalistic ninja generator", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "buildfox bf ninja build tool c cpp"}, "tristanfisher/easyos": {"git_readme_keywords": "support request change relevant branch common information something unlikely writing change addition tedious direction", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support request change relevant branch common information something unlikely writing change addition tedious direction", "pypi_keywords_clean": "os environment operating system"}, "/django-restify-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django restful", "pypi_keywords_clean": "django"}, "lashex/pyutu": {"git_readme_keywords": "amazondynamodb amazonvpc transfer pyutu cli utu language instancetype service repay product offercode region bash product amazonsimpledb amazonglacier hour effectivedate index format hour endrange default region instance sku locationtype aws operatingsystem linux memory gib tenancy instance region instance region memory library cloud regionid sku help cli linux service usd ratecode compute instance ddb amazoncloudfront snip location alias amazondynamodb cli library intel product operatingsystem instancetype tenancy servicecode storage gib networkperformance snip total ghz currentgeneration product sku general purpose issue pyutu help appropriate bash pyutu purpose instancetype usagetype vcpu beginrange description gb snip awskms amazoncloudfront licensemodel license snip cli linux operation offercode product activate bash usd regionid sku regionid region processorarchitecture linux instancetype turbo servicecode cli example region product format version instance hour installation activate total intel turbo pyutu index ddb service sku product amazonelasticache moderate operatingsystem avx intel priceperunit usd haswell preinstalledsw instancetype licensemodel networkperformance moderate effectivedate endrange offertermcode jrtckxetxf gb effectivedate offertermcode demand linux aws region intel avx oregon locationtype service alias amazonvpc amazonsimpledb intel intel version publication linux instance linux product pyutu product pricing index cloud pricing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "francis permission limitation platform unknown copyright software development environment classifier documentation unknown classifier classifier natural fitness particular merchantability fitness subject audience software limited express substantial software description purpose noninfringement liability contract language english distribute sublicense classifier environment classifier development warranty natural language restriction publish distribute english classifier particular purpose connection software independent classifier software software", "pypi_keywords_clean": ""}, "ixmatus/inflector": {"git_readme_keywords": "camelize convention configuration configuration english python inflector character parameter variablize convert useful replacing english version character default titleize function plural singular titleize underscored version humanize database sendemail available sentence titleize capitalize number ordinal inflector spanish example unaccented underscored initial character number whosonline underscore lowercased unaccent spanish version conditionalplural uppercase parameter ordinary unaccented version foreignkey conversion convention necessary english spanish friendly parameter alphanumeric character inflector python transform method welcomepage underscored camelcase uppercase", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "camelize convention configuration configuration english python inflector character parameter variablize convert useful replacing english version character default titleize function plural singular titleize underscored version humanize database sendemail available sentence titleize capitalize number ordinal inflector spanish example unaccented underscored initial character number whosonline underscore lowercased unaccent spanish version conditionalplural uppercase parameter ordinary unaccented version foreignkey conversion convention necessary english spanish friendly parameter alphanumeric character inflector python transform method welcomepage underscored camelcase uppercase", "pypi_keywords_clean": "inflector text language english"}, "jenisys/radish-parse-type": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "enumeration choice cardinality optional unique color build status number python positive multiple commas cardinality primary addition convention instance license python variant converter variant several suffix format parser cardinalityfield converter function provide version dictionary new format expression example textual representation format field python choice enumeration description functionality enumeration class python equivalent converter choice cardinalityfield support converter number generic way support parser cardinality cardinality converter python enumeration definition python python separated commas scheme travis converter dictionary example python module cardinality field converter enumeration equivalent python dictionary python class backport", "pypi_keywords_clean": "parse"}, "maartenbreddels/ipyvolume": {"git_readme_keywords": "standalone default instance x ipyvolume dependend developer installation restart notebook notebook version ipython extension version ipyvolume scatter mybinder example documentation argument particular direction command practice ipyvolume currenty virtual reality glyphs selection ipyvolume installation compiler transpilation virtualenv install developer readthedocs screencast selection bqplot animation represent documentation homepage extension widgetsnbextension cardboard animate notebook classical documentation documentation glyph documentation jupyter notebook dependend extension ipyvolume snippet stylable refresh", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install ipyvolume ipyvolume development ipyvolume user ipython widget clone cd install jupyter pip install notebook figure nbextension install nbextension enable ipyvolume ipython ipyvolume jupyter jupyter nbextension user ipyvolume screencast screencast screencast installation glyphs scatter jupyter notebook pip pip installation install ipyvolume install cd ipyvolume development installation user jupyter ipyvolume pip", "pypi_keywords_clean": "ipython jupyter widgets volume rendering"}, "noxdafox/pebble": {"git_readme_keywords": "support status separate thread application source source documentation documentation download pebble pebble function documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support status separate thread application source source documentation documentation download pebble pebble function documentation status", "pypi_keywords_clean": "thread process pool decorator"}, "/pyrg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python basic configuration require command install testcase redgreen example verbose", "pypi_keywords_clean": "unittest colorize visualize"}, "/bart-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "expectation analysis regression behaviour performance regression assertion regression behavioural behavioural analysis impossible regression toolkit primary behaviours", "pypi_keywords_clean": ""}, "/slimit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "throw break token break block package available lexer parser visitor initial library master branch false return bugfix bugfix command faster visitor installation history bug pretty printer lextoken eq jquery property property optimization foo token lextoken foo baz error jquery option fix unary modify javascript fix slimit initial public slimit import keyword bug public version support bug import astvisitor different optimization method welcome slimit version default global scope handle class myvisitor instance different foo function space statement package bug jquery bug lexer lexer visitor myvisitor license grammar speed simple identifier slimit javascript javascript parser return baz myvisitor astvisitor object literal original jquery project import syntax error baz return error output custom minification literal prop fix simple roadmap lexer project javascript compact edge version nodevisitor slimit output statement unreachable consecutive visitor import x hello parser lexer isinstance javascript lexer import nodevisitor parser import return foo import parser hello hello prop parser b return obj return python support lextoken number lexer token javascript minifier jsmin change history x class fix fix simple constant official fix syntax foo return section multiline implementation fix bugfix awesome javascript minify bugfix division function obj something foo documentation import lexer several parser parser yacc return false python baz foo token token bug fix iterate modify right ternary expression return throw lexer pretty token lexer number lextoken fix bug dependency package rjsmin import minify eq lextoken statement form class custom", "pypi_keywords_clean": ""}, "astorfi/speechpy": {"git_readme_keywords": "package installation package python function script suggestion reposity understand package available execute package install example dramatic feedback elaborate identification technology useful organized science foundation processing operation directory execute documentation library possible signal python request investigate repository typos significant difference question library accurate install build library speech collection contact repository project documentation install global cepstral perform global observation related function speech frequent interested feature declare python citation announced difference documentation channel frequency cepstral verified suggestion improvement variance normalization environment request related documentation python repository research national repository welcome general permission official project discuss feedback welcome discuss python python appreciate mfccs filterbank portion library source project different technology research function python contribution request section technical conceptual repository directory installing national science", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/balanced": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generated documentation scenario branch balanced request documentation directory documentation template marketplace installation definition scenario tutorial documentation", "pypi_keywords_clean": ""}, "/pylibpcap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module pylibpcap packet", "pypi_keywords_clean": ""}, "Cairnarvon/uptime": {"git_readme_keywords": "tarball python install documentation module script version python available bunch", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "retrieve system documentation likely", "pypi_keywords_clean": ""}, "ISA-tools/biopy-isatab": {"git_readme_keywords": "", "git_description_clean": "python parser isatab biological file format experimental metadata", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "coleifer/djutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "development view", "pypi_keywords_clean": ""}, "dahlia/lazylist": {"git_readme_keywords": "package function lazylist typeerror object object support lazylist lambda immutable proxy import lazylist traceback recent assignment function return status import sequence import mutablesequence squence object hello satisfy protocol lazylist import todos protocol sequence isinstance mutablesequence isinstance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package function lazylist typeerror object object support lazylist lambda immutable proxy import lazylist traceback recent assignment function return status import sequence import mutablesequence squence object hello satisfy protocol lazylist import todos protocol sequence isinstance mutablesequence isinstance", "pypi_keywords_clean": ""}, "disko/kotti-media": {"git_readme_keywords": "display section suitable javascript current modern frontend extension deploy config multiple directory package available development standard registration project plugin fallback section application frontend development version production coverage virtualenv resource python document display content disable fanstatic document content software likely status playback package mirror feature complete release config option profile fanstatic application repository section document welcome platform useful application interface specific section progress uploaded compatibility submit disable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pittman geojeff upgrade display section suitable javascript current complete populator development extension deploy config multiple directory package column particular available development standard registration project variable cazino support plugin fallback documentation section application frontend development rationale configuration variable version performance production coverage virtualenv python document display content disable fanstatic document content software likely unnecessary playback package mirror release bootstrap profile fanstatic application repository initial configurable bugfix bugfix respect section document initial release storage delivery context release welcome platform chapter external useful application resopurce specific interface section template progress incompatible uploaded compatibility submit disable", "pypi_keywords_clean": "video audio medialementjs kotti cms pylons pyramid"}, "1stvamp/marked": {"git_readme_keywords": "flexible distributed introduction library content inspired excellent library installation permissive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction library content inspired flexible markup excellent library installation permissive", "pypi_keywords_clean": ""}, "kiliankoe/dvb": {"git_readme_keywords": "package helmholtzstra\u00dfe transport system downside library hammer library construction favorite service specific available package manager installation current tramstop example kattner maxkattner koeltzsch kiliankoe particular something necessary maxkattner license unofficial convenience function information language public transport monitor system current specific request coordinate significant overhead", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unique dvbpy unofficial collection search public transport dresden public transport system documentation behavior something network address accessible unofficial python python monitor monitor single building python module", "pypi_keywords_clean": "dvb vvo tram bus public transport dresden"}, "/blockdiagcontrib-square": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package blockdiag package", "pypi_keywords_clean": "diagram generator"}, "jaberg/skdata": {"git_readme_keywords": "project foundation language processing inspiration checkout install standardized computer installation several national guidance install documentation library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard language processing awkward computer science empirical computer processing computer science foundation library", "pypi_keywords_clean": ""}, "enthought/envisage": {"git_readme_keywords": "original developer respect similar perform python python envisage project similar eclipse application framework functionality advertise framework building envisage extensible extensible application machinery envisage framework project extension building extensible standard mechanism envisage framework", "git_description_clean": "envisage framework building applications whose functionalities extended adding", "git_keywords_clean": "", "pypi_description_keywords": "original developer respect similar perform envisage project application framework functionality developer someone framework building envisage extensible extensible application advertise machinery envisage framework project extension building extensible standard mechanism envisage framework", "pypi_keywords_clean": ""}, "dimagi/sqlagg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/compatibility-lib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "disclaimer official compatibility install download product", "pypi_keywords_clean": ""}, "23andMe/yamale": {"git_readme_keywords": "section complex ip address schema validator equality instance validator string valid structure support spec introduction single external include valid address version keyword string string validator schema valid character newline key keyword commit python regular install pip program directory supply method pip manual schema schema syntax example allows string download yamale introduction syntax optional value contain regex valid yamale string addition yamale search null value usage command extra external union good luck prepend usage optional install schema validate schema include keyword default contain freeform regular expression prepend paths correct python value key entire string recursion schema identical digit number paths optional invalid yamale document current directory custom friendly description look directory allow recursion whitespace character pattern match integer external complex schema throw message schema yamale supply current equivalent recursion rejected message mm ss newline valid include form validator basic validate first document yamale install similar validator schema manual download allows valid yamale yamaletestcase string pattern null search directory regular valid value optional string manner pattern default yamale multiline yamaletestcase example temporary yamale unzip schema additional dictionary include equivalent python python contain include construct schema allow define valid nothing contain yamale throw minimum contain allows allows current spec directory default character possible define valid validation boolean several reject yamale syntax basic schema validator valid install correct topic example form hh example string include validator hh mm validator example integer null yamale schema include surrounded upload address allows pass", "git_description_clean": "schema validator yaml", "git_keywords_clean": "yaml schema python", "pypi_description_keywords": "section complex ip address schema validator equality instance validator string valid structure support spec introduction single external include valid address version keyword string string validator schema valid character newline key keyword commit python regular install pip program directory supply method pip manual schema schema syntax example allows string download yamale introduction syntax optional value contain regex valid yamale string addition yamale search null value usage command extra external union good luck prepend usage optional install schema validate schema include keyword default contain freeform regular expression prepend paths correct python value key entire string recursion schema identical digit number paths optional invalid yamale document current directory custom friendly description look directory allow recursion whitespace character pattern match integer external complex schema throw message schema yamale supply current equivalent recursion rejected message mm ss newline valid include form validator basic validate first document yamale install similar validator schema manual download allows valid yamale yamaletestcase string pattern null search directory regular valid value optional string manner pattern default yamale multiline yamaletestcase example temporary yamale unzip schema additional dictionary include equivalent python python contain include construct schema allow define valid nothing contain yamale throw minimum contain allows allows current spec directory default character possible define valid validation boolean several reject yamale syntax basic schema validator valid install correct topic example form hh example string include validator hh mm validator example integer null yamale schema include surrounded upload address allows pass", "pypi_keywords_clean": ""}, "duointeractive/seacucumber": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "numeric handle message cucumber handle enable service upgrade message delivery django function period maximum command handle private sufficient second second celery client provider change check unaware problem excellent simple library celery configuration check management consider author traffic check install portion public unreliable emails traditional interactive additional install package handle address default quota optional interface click installation public example django worry ownership amazon simple server failure delivery success status authentication volume maintain reporting tracker cucumber record address verification account inbox zoneid backend amazon harry different quota emails click authorization celery unhappy backend django unhappy general increase confirm xxxxxxxxxxx botoservererror management command update celery", "pypi_keywords_clean": ""}, "jayvdb/coverage-env-plugin": {"git_readme_keywords": "configuration file environment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "addisonlynch/iexfinance": {"git_readme_keywords": "sentiment compensation example default account financial corporate multiple historical iexfinance analysis function instantiation variable passing documentation install available performance toolkit license copyright institutional statement authentication development repository architecture release development compatibility support copyright addison environment variable ownership analyst various availalbe passing argument twitter license", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sentiment compensation example default account financial corporate multiple historical iexfinance analysis function instantiation variable passing documentation install available performance toolkit license copyright institutional statement authentication development repository architecture release development compatibility support copyright addison environment variable ownership analyst various availalbe passing argument twitter license", "pypi_keywords_clean": "stocks market finance iex quotes shares currency"}, "pmatiello/python-graph-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python graphs hypergraphs networks library algorithms"}, "/mockldap-fork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "useful project project server replacement useful", "pypi_keywords_clean": "mock ldap"}, "tylerwince/flake8-bandit": {"git_readme_keywords": "pycqa security security bandit package workflow package pycqa installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pycqa security security bandit package workflow package pycqa installed", "pypi_keywords_clean": ""}, "/pywebhdfs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pywebhdfs pywebhdfs initial release hadoop documentation project simplify current python machine option purpose project manner consistent directory documentation hadoop available webhdfs status checksum package documentation hadoop webhdfs implement pywebhdfs python installed", "pypi_keywords_clean": ""}, "tanyaschlusser/array2gif": {"git_readme_keywords": "convert numpy single function example pixel array gif color gif pixel pixel python installation numpy array second animation random middle magnetization", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "convert numpy rgb x numpy array second rgb addition width animation random release history obvious chrome possible random changelog changelog release model single function python installation initial global difference entire animation middle x rgb example addition original fixed separate palette possible separate warning global palette initial release version documentation x error magnetization", "pypi_keywords_clean": "animated gif encoder numpy rgb"}, "nathforge/validatesns": {"git_readme_keywords": "contribute database wherever filesystem database cryptographic signature certificate gotchas function maximum lifetime integrity validatesns performance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute database wherever filesystem database cryptographic signature certificate gotchas function maximum lifetime integrity validatesns performance", "pypi_keywords_clean": ""}, "/question": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interview exercise", "pypi_keywords_clean": ""}, "/pyleus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pypi shell yaml change dependency management apache license kill try reference license topology shell class dummyspout first spout topology local serializer pass spout class topology storm machine pyleus local local submit layout simple storm documentation pyleus framework storm cluster possible pyleus example directory define topology default install pypi local debug framework building import spout storm yaml pyleus build try shell submit storm environment storm python framework build run dummybolt simplebolt first topology change install shell pyleus topology single topology run simplebolt class submit topology build reference pyleus kill license version configuration cluster shell please dummyspout spout submit directory topology please import simplebolt spout simple tutorial organize pyleus command config aware environment class dummybolt python pyleus simple yaml pyleus python storm storm building topology master python import topology simple storm build kill topology run topology interface build run single spout pyleus pyleus build topology pyleus storm build pyleus pyleus submit topology layout output available simple topology several apache storm dummybolt run license pyleus detailed tutorial pyleus define idiomatic python building apache version storm kafka spout local machine install pyleus", "pypi_keywords_clean": ""}, "mitya57/python-markdown-math": {"git_readme_keywords": "standalone mathjax configuration default install pypi pypi install generate preview version available javascript unavailable standard mathjax library documentation command support installation delimiter example mathjax install extension extension generate extension configuration extension extension installation install retext extension specify configuration configuration mathjax", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standalone mathjax configuration default install pypi pypi install generate preview version available javascript unavailable standard mathjax library documentation command support installation delimiter example mathjax install extension extension generate extension configuration extension extension installation install retext extension specify configuration configuration mathjax", "pypi_keywords_clean": ""}, "/django-rest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bitmazk/django-development-fabfile": {"git_readme_keywords": "project python django development project deployment django bottom fabric install project change necessary development fabfile fabfile fabfile development deployment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project python django development project deployment django bottom fabric install project change necessary development fabfile fabfile fabfile development deployment", "pypi_keywords_clean": "django fabric development environemnt deployment"}, "/aliyun-python-sdk-ecs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation official software integrate application library module software development", "pypi_keywords_clean": "aliyun sdk ecs"}, "non-Jedi/gyr": {"git_readme_keywords": "asynchronicity different application helpful wrapper similiar necessary functionality welcome installation project instance application several functionality manipulation present documentation available building normal virtualenv upstream application framework status development recommend provide necessary functionality bunch functionality directory recommend checking application instance application service commandline abstraction application specific request", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different application helpful wrapper similiar recommend necessary functionality project instance application several functionality manipulation present documentation available installation building virtualenv upstream application framework provide necessary bunch functionality directory application instance application service commandline welcome abstraction application specific request", "pypi_keywords_clean": "matrix chat falcon wsgi"}, "/pysnmp-mibs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection handle package pysnmp", "pypi_keywords_clean": "pysnmp mib smi"}, "jsommers/pytricia": {"git_readme_keywords": "subnettree patricia material standard pythonic parameter address length behavior comparative extract useful building building library address lookup obvious behavior similar address network license version possible science foundation instance x ubuntu parameter maximum lookup behavior indexing operation insertion lookup lookup removal operator structure operand performance quality present example slowest default number software general public arbitrary particular lookup module building pytricia coerced february system ubuntu maximum number standard access public license convenience couple dictionary different integer individual address program implement important accept related optional parameter national science pytricia", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subnettree patricia documentation performance related structure library general pytricia", "pypi_keywords_clean": "patricia tree"}, "/pyresample": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standalone implementation describe interpolation pyresample multiple resampler documentation geographic projection available reprojection geometry bilinear neighbor bilinear geospatial bilinear interpolation neighbor elliptical information algorithms approach pykdtree pyresample pyresample development utility elliptical weighted", "pypi_keywords_clean": ""}, "ome/omego": {"git_readme_keywords": "microscopy environment command install possible installation install copyright possible execute", "git_description_clean": "ome go installation administration tool ome applications", "git_keywords_clean": "ome install tool", "pypi_description_keywords": "microscopy environment command install possible installation install copyright possible execute", "pypi_keywords_clean": ""}, "python-odin/odin": {"git_readme_keywords": "contributor malcolm documentation coverage minimal installable validate complex contrib documentation community msgpack acknowledge declarative framework optional simplejson contrib restful interface library fallback builtin complete documentation development integration sqlalchemy simplejson available license extension support validation document validate library development documentation generation influence malcolm tredinnick interface support pyyaml resource serialisation django integration functionality colleague integration django support physical definition different composite available fallback special", "git_description_clean": "mapping serialisation toolkit python", "git_keywords_clean": "python validation serialize json csv msgpack xml yaml", "pypi_description_keywords": "contributor malcolm documentation coverage minimal installable validate complex contrib documentation community msgpack acknowledge declarative framework optional simplejson contrib restful interface library fallback builtin complete documentation development integration sqlalchemy simplejson available license extension support validation document validate library development documentation generation influence malcolm tredinnick interface support pyyaml resource serialisation django integration functionality colleague integration django support physical definition different composite available fallback special", "pypi_keywords_clean": "validation"}, "ajtowns/odictliteral": {"git_readme_keywords": "compatible python python replacement ordereddict python python combination ordered odictliteral import example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible python python replacement ordereddict python python combination ordered odictliteral import example", "pypi_keywords_clean": ""}, "Stranger6667/postmarker": {"git_readme_keywords": "backend tornado support postmarker single available check documentation support version python example django python support inbound status repository python directory repository coverage status postmarker delivery transformation jython library installation installation postmarker check documentation documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "backend tornado support postmarker single available check documentation support version python example django python support inbound status repository python directory repository coverage status postmarker delivery transformation jython library installation installation postmarker check documentation documentation status", "pypi_keywords_clean": "postmark api client email"}, "/metamindapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "metamind api"}, "hsoft/sphinx-autodoc-annotation": {"git_readme_keywords": "document argument sphinx extension default argument specific cumbersome needless install precedence sphinx documentation annotate description redundant installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "document argument sphinx extension default argument specific cumbersome needless install precedence sphinx documentation annotate description redundant installation", "pypi_keywords_clean": ""}, "zacharyvoase/cssmin": {"git_readme_keywords": "yui python compressor install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ad-m/python-anticaptcha": {"git_readme_keywords": "recaptcha example several recursive python compatibility operation library dobrawy initial captchas library handle exception analysis example available documentation support integration example anticaptchaexception exception integration install standard reliability specify standard python invisible captcha example license project funcaptcha example process application describe specify reporting incorrect incorrect something visible parameter possibility various access control project license repository snippet funcaptcha snippet recaptcha contact fields python python python library effective operation offensive support captcha library responsible address python package captcha visible example snippet snippet reporting", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "recaptcha example python compatibility proper operation python full library dobrawy initial captchas library example available documentation support integration example anticaptchaexception exception integration install standard standard python captcha example license project funcaptcha example application describe specify reporting incorrect full integration incorrect something possibility various access control project license repository snippet funcaptcha snippet recaptcha contact fields python python python library effective operation offensive support captcha library responsible address python package handle exception example snippet snippet reporting", "pypi_keywords_clean": "recaptcha captcha development"}, "bodylabs/baiji-serialization": {"git_readme_keywords": "tracker common connection welcome support license project development license version", "git_description_clean": "read write common file formats amazon local files", "git_keywords_clean": "", "pypi_description_keywords": "tracker common connection welcome support license project development license version", "pypi_keywords_clean": ""}, "/cloudify-dsl-parser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Simplistix/mailinglogger": {"git_readme_keywords": "mailinglogger documentation development", "git_description_clean": "enhanced emailing handlers python logging package", "git_keywords_clean": "", "pypi_description_keywords": "mailinglogger important authentication configurable protection framework customisable dynamic excessive configurable", "pypi_keywords_clean": "logging email"}, "novopl/sphinx-refdoc": {"git_readme_keywords": "python reference sphinx documentation parameter generate include generator sphinx reference documentation development argument package structure include reference example documentation directory structure directory directory structure directory documentation generator index sphinx installation argument invocation invocation documentation navigation sphinx reference subdirectory sphinx", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python reference sphinx documentation parameter generate include generator sphinx reference documentation development argument package structure include reference example documentation directory structure directory directory structure directory documentation generator index sphinx installation argument invocation invocation documentation navigation sphinx reference subdirectory sphinx", "pypi_keywords_clean": ""}, "vpelletier/pprofile": {"git_readme_keywords": "recursion deterministic profiling inside lineprofiler usage identifiable trivial cpu possible c callgrind callgrind profiling statistic profiling profiling def somehotspotcallable prefer option sys func generated archive bootstrap self advanced usage shorter output annotated pprofile choice profiling class try ipc mechanism current process path modify enable profiling standard profiling c extension track interrupted function robert addition attractive pprofile profiling generated start pprofile signal handler executed profile current source data result profiler profiler overhead thread application normal url profiling result robert kern understand pprofile service default statistic profiling func busy loop context profiling deterministic pprofile format difficult def start profile shorter profiler python usage command option generate attractive technical pprofile module possible profile kern lineprofiler current thread pprofile default import pprofile deterministic statistic performance specific simultaneous usable output granularity need profiling likely basename alternative portable possible different machine busy loop def bootstrap function trivial example callgrind format start inside func option profiling command pprofile overhead pprofile sum percentage modification select value execution someotherhotspotcallable advanced self start func def someotherhotspotcallable threading level executed result callgrind useful extension large callstack current generate zip join visible profiling execute reason python pprofile signal statistic command debug def python threading useful output busy whole individual callable number concurrent output pprofile archive path somehotspotcallable def single thread application convenient pprofile snapshots current pprofile def start self profiling effect granularity opinion mechanism profile threading pprofile callable first def self profiling granularity result statistic load profiling single stack total duration problem module import module pass func prof func downside statistic python import collect handler ipc current callstack large overhead reason func pass checkout happen notion individual profiling recursive profiling output self try profiling overhead relative statistic profiler python installation value import profiling intend profile pprofile statistic readability decrease ex daemon format callgrind path profiling result readability unexpected profiling small information simultaneous profiling overhead issue profiling understand technical challenge pprofile command effect previous python standard execution command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "recursion deterministic profiling inside lineprofiler usage identifiable trivial cpu possible c callgrind callgrind profiling statistic profiling profiling def somehotspotcallable prefer option sys func generated archive bootstrap self advanced usage shorter output annotated pprofile choice profiling class try ipc mechanism current process path modify enable profiling standard profiling c extension track interrupted function robert addition attractive pprofile profiling generated start pprofile signal handler executed profile current source data result profiler profiler overhead thread application normal url profiling result robert kern understand pprofile service default statistic profiling func busy loop context profiling deterministic pprofile format difficult def start profile shorter profiler python usage command option generate attractive technical pprofile module possible profile kern lineprofiler current thread pprofile default import pprofile deterministic statistic performance specific simultaneous usable output granularity need profiling likely basename alternative portable possible different machine busy loop def bootstrap function trivial example callgrind format start inside func option profiling command pprofile overhead pprofile sum percentage modification select value execution someotherhotspotcallable advanced self start func def someotherhotspotcallable threading level executed result callgrind useful extension large callstack current generate zip join visible profiling execute reason python pprofile signal statistic command debug def python threading useful output busy whole individual callable number concurrent output pprofile archive path somehotspotcallable def single thread application convenient pprofile snapshots current pprofile def start self profiling effect granularity opinion mechanism profile threading pprofile callable first def self profiling granularity result statistic load profiling single stack total duration problem module import module pass func prof func downside statistic python import collect handler ipc current callstack large overhead reason func pass checkout happen notion individual profiling recursive profiling output self try profiling overhead relative statistic profiler python installation value import profiling intend profile pprofile statistic readability decrease ex daemon format callgrind path profiling result readability unexpected profiling small information simultaneous profiling overhead issue profiling understand technical challenge pprofile command effect previous python standard execution command", "pypi_keywords_clean": ""}, "BKTO/bnlp3": {"git_readme_keywords": "version processing natural", "git_description_clean": "better natural language processing collection open source nlp methods used better know opposition", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "nlp"}, "gunthercox/iot-analytics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "roadmap analysis everything program structure structure program process apparent support integration collection communication meaningful database tangible discovery communication example installation integration integration installation project performance possible solution", "pypi_keywords_clean": "iot analytics"}, "/topp-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software makedir acquisition interface persistence memory environment truncater staticmethod classmethod library workingenvs", "pypi_keywords_clean": "topp openplans"}, "maxweisspoker/simplebitcoinfuncs": {"git_readme_keywords": "download software freedom hierarchical deterministic anything representation current library standard library benefit install similar buterin pybitcointools vitalik buterin freedom installation clarification simplebitcoinfuncs version installation ubuntu understand bitcoin knowledge ability atrocious keyword bitcoin transaction sloppy stealth address repository function complete rewrite library installation bitcoin current knowledge ability handful uncompressed homebrew anything", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "bitcoin"}, "Fandekasp/django-sphinx-autodoc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application application directory external combinaison project directory describe document default command extension master document directory execute project stuff website virtualenv django execute scrape application extension update documentation default autodoc different external application update autodoc django sphinx django command internal application", "pypi_keywords_clean": ""}, "TeamHG-Memex/sklearn-crfsuite": {"git_readme_keywords": "documentation crfsuite wrapper interface hyperiongray compatible estimator selection optimization coverage", "git_description_clean": "inspired api crfsuite", "git_keywords_clean": "", "pypi_description_keywords": "descriptor support tutorial documentation crfsuite wrapper interface attribute available compatible estimator optional selection formatting optimization coverage function exception", "pypi_keywords_clean": ""}, "relekang/python-thumbnails": {"git_readme_keywords": "usage python lekang", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "usage install flask python", "pypi_keywords_clean": ""}, "/oerplib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation directory license oerplib generate documentation documentation generate documentation available license oerplib python version consult oerplib documentation generator license software support python option version license generate stable python module", "pypi_keywords_clean": "openerp odoo server client xmlrpc netrpc oerplib communication lib library python service web webservice"}, "/webapp2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "complete description simplicity internationalization dispatching mechanism response lightweight flexible dispatching framework compatible exception", "pypi_keywords_clean": ""}, "vandersonmota/model-mommy": {"git_readme_keywords": "status install console vanderson version install create django simple simple powerful", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status install console vanderson version install create django simple simple powerful", "pypi_keywords_clean": "django testing factory python"}, "hsolbrig/yadict-compare": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dictionary comparison", "pypi_keywords_clean": ""}, "/django-caching-app-plugins": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lambdamusic/ontospy": {"git_readme_keywords": "description ontospy repository interrogate library command separate library documentation ontology youtube interactive environment ontospy library interface generate accessible github ontology functionality semantic documentation ontospy workflow application interactive object inspection interrogate ontology ontodocs ontology documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "description ontospy repository interrogate library command separate library documentation ontology youtube interactive environment ontospy library interface generate accessible github ontology functionality semantic documentation ontospy workflow application interactive object inspection interrogate ontology ontodocs ontology documentation", "pypi_keywords_clean": "ontology semantic web linked data rdf owl"}, "sovaa/activitystreams": {"git_readme_keywords": "json implementation implementation json", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "activity", "pypi_keywords_clean": "activitystreams"}, "ncouture/mockssh": {"git_readme_keywords": "installation mockssh python mockssh interest available version directory possible possible mignanti installation mockssh hylang mockssh python configuration purpose project mockssh functionality python honeypot mockssh perform something directory overview support python program comparison automation approach access operating python hylang reactor version mockssh", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "automation honeypot mockssh perform interest mignanti mockssh available mockssh emulate operating", "pypi_keywords_clean": "ssh server emulation ssh server testing mock ssh script ssh"}, "spyder-ide/conda-manager": {"git_readme_keywords": "package standalone build status scrutinizer friendly graphical license install version application license coverage license project application installation removal spyder plugin description interface management status project quality install tracker license installation downgrade installation", "git_description_clean": "graphical conda package manager", "git_keywords_clean": "", "pypi_description_keywords": "package interface management application installation removal standalone number license project scientific install install tracker application license description license installation downgrade installation version friendly graphical development environment license project build", "pypi_keywords_clean": "qt pyside conda binstar"}, "jbittel/base32-crockford": {"git_readme_keywords": "check symbol readable described utilized provided counterpart symbol validation support symbol readability crockford installation l example normalized normalization resistant pronounceable validated check function optional provided parameter alternate sensitive l counterpart argument normalization changelog uppercase", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "readability alternate compact sensitive l resistant pronounceable described crockford l", "pypi_keywords_clean": ""}, "JelteF/pylatex": {"git_readme_keywords": "contribute extensible interface documentation functionality pylatex copyright pylatex pylatex copyright license fennema library installation impression license copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute extensible interface documentation functionality pylatex copyright pylatex pylatex copyright license fennema library installation impression license copyright", "pypi_keywords_clean": ""}, "Azure/msrestazure": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "behavior consistent attribute unused support msiauthentication parameter remove release history operation algorithm allow future version bugfix class clouderror breaking support version optional version autorest python session broken remove method cloudmetadata endpoint operation version provider registration remove attribute azureoperationpoller version version update likel contribution fix several breaking change algorithm version connection baseclass replaced example fix boundary compatible dependency msiauthentication disclaimer authentication resource internal replacement message version unused remove unittests vcrpy caching mistake internal loop msiauthentication imds endpoint endpoint available service informative clouderror default contribution version endpoint update refresh session serviceprincipal userpassword exception query endpoint fix dependency behaviour thank likel location async refreshtoken sdk implementation vcrpy fix change async version feature documentation contribution offline http version behaviour impact remove possible version initial source package government cloud system azurestack certificate msiauthentication support session improvement appservice msiauthentication available msiauthentication connection verification regression keyvault record offline detection appservice fix couple installation install attribute creation direct breaking bugfix remove replaced attribute bugfix fix history version disclaimer version automatic message minimal dependency asyncoperation parser breaking useless kwarg replacement possible endpoint parser german fix session msiauthentication version status method imds support thank demyanenko disclaimer stability library version fix authentication fix adalerror feature autorest version identity resource pypi version update unusable session obj change version vm version environment vm extension gov dependency allow change replaced dependency thank cloud definition initial release bug refactor server useless azureoperationpoller method remove module installation fix fix password sdk method version swagger version package infinite loop allow resource installation problem authentication bug autorest bug implementation msiauthentication regression logic allow adalauthentication version mechanism python import changelog result azureoperationpoller thread functionnality resource management adalauthentification class thank contribution broken refreshtoken refresh import import fix attributeerror version disclaimer previous autorest strategy n exception message available customexception possible infinite version msiauthentication creation version python version variable version import resourcemanagementclient public azurepolleroperation swagger azureoperationpoller clientrawresponse dependency msrestazure parameter unused fix clouderror fix refresh bug fix method azureoperationpoller behaviour change clouderror response innererror attribute obj cloudmetadata dependency version demyanenko contribution running operation algorithm breaking experimental disclaimer refactor behaviour version change runtime attribute parameter possible remove daemon block fix azurepolleroperation federated resource group thread daemon scenario example refactor", "pypi_keywords_clean": ""}, "tobyqin/xmind2testlink": {"git_readme_keywords": "package design server please docker docker level marker import testlink testlink xml testlink website double result click upload testcase please checkout xmind testlink deploy application valid xmindzen update requirement python define sample xmind version click xmind field blank install command python installation topic ignore first testlink copy topic default create website import listed xmind feature current topic friendly interface figure advanced python browser batch thing flask deployment detail topic xmind conversion update convert xmind installation quick support xmind xml build download sample priority update support button xml import xml target matter color browser simple structure output optional first xml target website command simple webpage action checkout flask detect xmindparser requirement priority current batch convert", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "create xmindzen level default support enhancement marker bug determine xmindzen bug xmindzen priority marker combination support xmindzen documentation callout change testlink empty unicode xmind version please handle unicode support convert convert xmind connector bug comment summary convert execution convert flexible level priority potential failure action flexible xmind", "pypi_keywords_clean": "xmind testlink import converter testing testcase"}, "expfactory/expfactory": {"git_readme_keywords": "agnostic underlying community deployable container respectful environment reproducible container detailed conduct background development original question version agnostic library development documentation container battery background identifier available developer interested experiment library support software contribute developer hesitate functionality maintain conduct important database default experiment factory factory software battery expfactory official citation experiment background predecessor contribute briefly minimum", "git_description_clean": "software generate reproducible container battery experiments", "git_keywords_clean": "reproducible container psychology experiments singularity battery expfactory", "pypi_description_keywords": "agnostic underlying community deployable container respectful environment reproducible container detailed conduct background development original question version agnostic library development documentation container battery background identifier available developer interested experiment library support software contribute developer hesitate functionality maintain conduct important database default experiment factory factory software battery expfactory official citation experiment background predecessor contribute briefly minimum", "pypi_keywords_clean": "docker container reproducible behavior neuroscience experiment factory"}, "streamlink/streamlink": {"git_readme_keywords": "portable version default streaming livestreamer project tracker content consume subscription utility available configuration youtube streamlink streamlink sponsor website livestream twitch streamlink convert variety application purpose streamlink specific installation available content installation installation quickstart request documentation available", "git_description_clean": "cli extracting streams various websites video player choosing", "git_keywords_clean": "streamlink python livestream twitch cli streaming vlc", "pypi_description_keywords": "portable version default streaming livestreamer project tracker content consume subscription utility available configuration youtube streamlink streamlink sponsor website livestream twitch streamlink convert variety application purpose streamlink specific installation available content installation installation quickstart request documentation available", "pypi_keywords_clean": ""}, "/django-fab-deploy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial support virtualenv management fabric nginx multiple command argument folder decorator ubuntu distribution trigger management decorator compatible fabric custom project ivanov mihailenco standard machine require fabric standard project definition default upgrade apache install fabric project configuration trigger mysql undeploy command mysql installation requirement release branch customization regression command ssh access argument mihailenco longer creation mysql django management fabfile release apache project structure installation installation default virtualenv manual config upcoming django keyword argument reload copying longer custom argument function cleaner virtualenv django deployment documentation module function support mysql ubuntu apache numerous squeeze support uploads support management command nginx config migrate project rahmatullin module cleaner example django configuration added mihailenco command shortcut default longer permanent redirect redirect added layout longer username collection fabric upgrade previous deploy compatible upcoming upgrade upgrade available command detection python support script cleaner config copying added custom initial release source distribution ubuntu maverick package implementation upgrade install default nginx default django possible argument callable cookie mercurial longer available longer server project layout added default contain python maverick initial command longer mihailenco server config django project authorization django example fabric require project ubuntu command command", "pypi_keywords_clean": ""}, "/django-report-builder": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django report"}, "netleibi/fastchunking": {"git_readme_keywords": "boundary warning storage computation message availability boundary chunker chunking depend christoph interpreter computation untrusted expensive variable random example extension performance computation measurable chunking distribution random message minimize chunking chunking similar actual message computer optional chunking trivial preprint performance position message efficient parallel perform boundary boundary chunking algorithms overview chunking specify chunking multiple status python trivial chunking perform chunking window university installation different message length conference python library throughput compiler correct length computation random content chunking strategy example message depend actual documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "output multiple boundary warning storage computation message availability boundary chunker chunking depend christoph interpreter computation untrusted expensive variable random example extension performance computation measurable chunking distribution random message minimize chunking chunking similar actual message optional chunking trivial performance position message efficient parallel perform boundary boundary chunking algorithms overview chunking specify chunking multiple status python trivial chunking perform chunking window university installation different message length python library throughput compiler correct length computation random content chunking strategy example message depend actual documentation status", "pypi_keywords_clean": "text chunking sc static chunking cdc chunking chunking rabin karp rolling hash"}, "python-rapidjson/python-rapidjson": {"git_readme_keywords": "introduction contribute extension priority support standard library possible development support argument instance license validation documentation available several different implement compatible performance incompatibility license copyright serialization library rapidjson wrapper repository stringify dictionary documentation comparison coercion arbitrary submodule", "git_description_clean": "python wrapper around rapidjson", "git_keywords_clean": "", "pypi_description_keywords": "contribute appveyor compatibility generic powershell recursive project introduction current specific validationerror maximum attempt extension unreleased priority support possible standard library development support argument instance correct exception deserialization datetime license validation configuration documentation install compilation install jsonschema validation available function constructor several different install rapidjson several compilation differentiate invalid implement performance compatible incompatibility license copyright validationerror differentiate production execution github rapidjson library serialization deserialization gaifax serialization library rapidjson appveyor configuration documentation refresh install development release wrapper refcount repository underlying function incompatibility function unpatched rapidjson schema validation stringify dictionary intermediary conversion compiler interface compatibility nothing documentation comparison coercion arbitrary relaxed generic mechanism submodule", "pypi_keywords_clean": "json rapidjson"}, "mila-udem/fuel": {"git_readme_keywords": "pipeline serializable dumoulin information serdyuk ability dzmitry bahdanau chorowski yoshua merri\u00ebnboer dzmitry preprint documentation pipeline learning library toolkit checkpoint example requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pipeline serializable dumoulin information serdyuk ability dzmitry bahdanau chorowski yoshua merri\u00ebnboer dzmitry preprint documentation pipeline learning library toolkit checkpoint example requirement", "pypi_keywords_clean": "dataset data iteration pipeline processing"}, "/pyutilib-component-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package management modular component pluginerror exception detailed description extension project instance directory pyutilib framework extensionpoint pluginenvironment documentation provide familiar global software description pyutilib overview organization particular singleton component framework framework singletonplugin access", "pypi_keywords_clean": "utility"}, "/calc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mozilla/django-recaptcha-mozilla": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project praekelt foundation support default mozilla version library library provide version", "pypi_keywords_clean": ""}, "pjdelport/backports-weakref": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package functionality python weakref", "pypi_keywords_clean": ""}, "ojii/django-better-test": {"git_readme_keywords": "separate process show process detect configuration command django possible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "separate process show process detect configuration command django possible", "pypi_keywords_clean": ""}, "sphinx-contrib/sphinxcontrib-spelling": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "permission tortious distribute software advertising publicity hellmann pyenchant unmaintained indirect consequential documentation specific distribution software performance software connection merchantability fitness copyright installation software documentation misspelled", "pypi_keywords_clean": ""}, "halfak/para": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "processing collection processing multiple processing parallel processing halfaker distribute processing advantage library function", "pypi_keywords_clean": ""}, "joeyespo/py-getch": {"git_readme_keywords": "standard message discussion functionality python motivation keypress installation install portable request message python repository twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "portable getch", "pypi_keywords_clean": ""}, "/sphinx-pypi-upload3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package package following documentation command default display server directory response useful following snippet documentation command command following example following structure documentation directory arbitrary documentation necessary repository default command buildsphinx python python appropriate python package", "pypi_keywords_clean": ""}, "LudovicRousseau/pyscard": {"git_readme_keywords": "appveyor support documentation smartcard library continuous integration pyscard smartcard module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python smartcard", "pypi_keywords_clean": ""}, "pallets/flask-sqlalchemy": {"git_readme_keywords": "accomplish tracker install documentation support application extension sqlalchemy coverage", "git_description_clean": "adds sqlalchemy support flask", "git_keywords_clean": "python flask sqlalchemy", "pypi_description_keywords": "accomplish tracker install documentation support application extension sqlalchemy coverage", "pypi_keywords_clean": ""}, "arteria/django-redirect-plus": {"git_readme_keywords": "project database release django redirect counter redirect commit github installation", "git_description_clean": "django redirect app extras added", "git_keywords_clean": "", "pypi_description_keywords": "project database release django redirect counter redirect commit github installation", "pypi_keywords_clean": "django app redirect stats"}, "JNRowe/jnrbase": {"git_readme_keywords": "package jnrbase common utility functionality current nathan dependent functionality attempt standard library functionality collection license sutton common utility documentation version python development status library dependent coverage delphine minimal testcase collection common python testcase reproduce release jnrowe console reproduce problem", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package jnrbase common utility functionality current nathan dependent functionality attempt standard library functionality collection license sutton common utility documentation version python development status library dependent coverage delphine minimal testcase collection common python testcase reproduce release jnrowe console reproduce problem", "pypi_keywords_clean": "library support"}, "/flask-urls": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection", "pypi_keywords_clean": ""}, "RKrahl/distutils-pytest": {"git_readme_keywords": "package installation package unpack installation copyright process download specific language copyright license materialien gmbh copyright directory python standard library python module license version applicable license python install process install python python standard documentation energie gmbh python installation license copyright software express python install license specific system directory library package version license script python compliance license release version package download", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package installation package unpack installation copyright process download specific language copyright license materialien gmbh copyright directory python standard library python module license version applicable license python install process install python documentation energie gmbh python installation license copyright software express python install license specific system directory library package version license python standard compliance license", "pypi_keywords_clean": ""}, "hudsonbrendon/tweetpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Miserlou/lambda-packages": {"git_readme_keywords": "xmlsec project archive lambda request containing project installation lambda appropriate useful awesome tarball package addition lambda support appropriate directory support manylinux available compatible interested mongoengine support mysqlclient development training contact miserlou enterprise deterministic paradigms information docker useful various popular pycrypto opencv support development cryptography", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "xmlsec project archive lambda request containing project installation lambda appropriate useful awesome tarball package addition lambda support appropriate directory support manylinux available compatible interested mongoengine support mysqlclient development training contact miserlou enterprise deterministic paradigms information docker useful various popular pycrypto opencv support development cryptography", "pypi_keywords_clean": ""}, "/simpleutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "matrix-org/canonicaljson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "canonicaljson python canonical immutable output insignificant whitespace version sequence possible", "pypi_keywords_clean": "json"}, "pyeve/flask-sentinel": {"git_readme_keywords": "application project provider deployment console management license database acknowledgement access section password default management management interface extension custom mongodb deployment dialog interface available bcrypt resource", "git_description_clean": "server bundled flask extension", "git_keywords_clean": "", "pypi_description_keywords": "application project provider deployment console management license database acknowledgement access section password default management management interface extension custom mongodb deployment dialog interface available bcrypt resource", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/google-cloud-bigquery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project billing documentation documentation platform project massive hardware infrastructure expensive infrastructure library problem billing project bigquery library documentation authentication installation", "pypi_keywords_clean": ""}, "disqus/nydus": {"git_readme_keywords": "numeric improvement python function backend syntax framework building behavior configuration dictionary python pycassa backend pipeline execute partition possible configure support toolkit expand command additional internal example python available disqus keyword context dictionary default connection management password identifier connection readability configuration dictionary management pycassa consistent lookup pycassa cassandra distributed python release connection cluster generic database cluster distribute", "git_description_clean": "nydus python toolkit managing database connections routing operations primarily redis", "git_keywords_clean": "", "pypi_description_keywords": "numeric improvement python function backend syntax framework building behavior configuration dictionary python pycassa backend pipeline execute partition possible configure support toolkit expand command additional internal example python available disqus keyword context dictionary default connection management password identifier connection readability configuration dictionary management pycassa consistent lookup pycassa cassandra distributed python release connection cluster generic database cluster distribute", "pypi_keywords_clean": ""}, "ionrock/cherrypy-sqlalchemy": {"git_readme_keywords": "ormbase import request cherrypy information database session complete software license documentation session specific session instance sqlalchemy import sqlalchemytool cherrypy plugin import ormbase sqlalchemytool sqlalchemyplugin cherrypy sqlalchemy import cherrypy sqlalchemy session example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ormbase import request cherrypy information database session complete software license documentation session specific session instance sqlalchemy import sqlalchemytool cherrypy plugin import ormbase sqlalchemytool sqlalchemyplugin cherrypy sqlalchemy import cherrypy sqlalchemy session example", "pypi_keywords_clean": ""}, "yyuu/fabric-deploy": {"git_readme_keywords": "yuu yamashita deployment overridden default structure development directory structure application deployment multistage deployment rollback deployment development development production template password application development supervisord management exapmle overview capistrano configuration deployment yamashita yuu", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "yuu yamashita deployment overridden default structure development directory structure application deployment multistage deployment rollback deployment development development production template password application development supervisord management exapmle overview capistrano configuration deployment yamashita yuu", "pypi_keywords_clean": ""}, "richq/cmakelint": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cmakelint", "pypi_keywords_clean": "cmake lint"}, "Princeton-CDH/pucas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "minimal recursion docket distribution override application simplify default virtualenv virtualenv populated account release branch license ownership snippet example pookas template directory development configure standard princeton university support creature installation license configuration install documentation django application database flow branching python virtualenv koeser branding optional middleware authentication coverage creation software install specific directory modify initialize activate python configured account superuser available django account populate command python package python repository initial authentication middleware reusable application template snippet convenience university permission princeton docket compatibility django install github populate appropriate django install package", "pypi_keywords_clean": ""}, "py3minepi/py3minepi": {"git_readme_keywords": "download compatibility previous behaviour previous iteration nieminen original excellent progress ghickman bennuttall kristian official approval jonathanfine jonathan hashbang hashbangstudio pythonic minecraft compatibility original possible pythonic history pozorvlak", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "original release project download official approval pythonic compatibility original", "pypi_keywords_clean": "minecraft raspberry pi mcpi"}, "django-helpdesk/django-helpdesk": {"git_readme_keywords": "installation information available directory message initial support branch github python django project installation copyright assist complete documentation development helpdesk combination python github install license support previous install configuration command database previous version fastcgi instance poulton support django python version installation jquery language django python software january migrate database keyword likely improved documentation database postgresql started support python django django function django support licensing django project release django django version ticket tracker browser information company contribution django documentation documentation available", "git_description_clean": "django application manage tickets internal helpdesk formerly known jutda helpdesk", "git_keywords_clean": "django helpdesk tickets servicedesk tracker bugs support incidents cases issues python", "pypi_description_keywords": "helpdesk helpdesk management django website", "pypi_keywords_clean": "django helpdesk tickets incidents cases bugs track support"}, "celiao/tmdbsimple": {"git_readme_keywords": "download access instance interface database access disagree python syntax installation instance access tmdbsimple simplify key follow account select account account available tmdbsimple instance bourne tv episode assign python budget certification documentation second expensive database database tmdb install tmdbsimple mapping tmdbsimple sequel python illustrate function install install object python certification guestsession compute budget check overview example python tmdbsimple package experiment tmdbsimple key runtime friend tv instance matrix matrix determine popular disagree correct third authentication certification wrapper rotten installation tmdbsimple python communicate tv tv python correct tmdbsimple available authentication access unittests illustrate suppose friend determine budget certification python check rtsimple rtsimple wrapper account authentication download install install github object install download access register python mapping tmdbsimple wrapper updated python interpreter amount available python python package section popular friend library assign previous sequel", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download access instance interface database access disagree python syntax installation instance access tmdbsimple simplify key follow account select account account available tmdbsimple instance bourne tv episode assign python budget certification documentation second expensive database database tmdb install tmdbsimple mapping tmdbsimple sequel python illustrate function install install object python certification guestsession compute budget check overview example python tmdbsimple package experiment tmdbsimple key runtime friend tv instance matrix matrix determine popular disagree correct third authentication certification wrapper rotten installation tmdbsimple python communicate tv tv python correct tmdbsimple available authentication access unittests illustrate suppose friend determine budget certification python check rtsimple rtsimple wrapper account authentication download install install github object install download access register python mapping tmdbsimple wrapper updated python interpreter amount available python python package section popular friend library assign previous sequel", "pypi_keywords_clean": "movie movie database movie database tmdb wrapper database themoviedb moviedb api"}, "log2timeline/dfdatetime": {"git_readme_keywords": "precision information documentation accuracy precision dfdatetime", "git_description_clean": "digital forensics date time", "git_keywords_clean": "", "pypi_description_keywords": "accuracy precision dfdatetime", "pypi_keywords_clean": ""}, "Scifabric/pybossa-client": {"git_readme_keywords": "perform project software material different advantage natural offset follow approach argument advantage pybossa presenter template pybossa approach advantage install install previous example description project pagination install develompment performance", "git_description_clean": "dead simple python client pybossa", "git_keywords_clean": "pybossa python library", "pypi_description_keywords": "pybossa framework", "pypi_keywords_clean": ""}, "zorg/zorg-network-camera": {"git_readme_keywords": "camera module package installation network basic adaptor module network camera module tesseract module network edison raspberry utility convenience method camera necessary development tesseract additional driver optical source tesseract optical character camera adaptor driver module character recognition application process connect network tesseract optical possible connect sensor driver ability necessary module recognition engine google average lighting", "git_description_clean": "module using network cameras zorg", "git_keywords_clean": "", "pypi_description_keywords": "camera module package installation network adaptor module network camera source module module tesseract module network edison raspberry utility camera necessary development tesseract additional driver optical optical character camera adaptor character recognition driver module process connect network tesseract optical possible connect sensor driver ability necessary module recognition engine average lighting", "pypi_keywords_clean": "zorg network ip camera"}, "napalm-automation/napalm-ios": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "douglasmiranda/django-wysiwyg-redactor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package control variable information uuiduploader handler application overridden access dispatch current anything awesome django screenshot original decorator package install documentation django application provide standard uploader example control access authentication decorator dependency important branch directory default config datedirectoryuploader handler licensing branch submit application django different lightweight wysiwyg request backend variable", "pypi_keywords_clean": "django admin wysiwyg editor redactor redactorjs"}, "pyexcel/pyexcel-io": {"git_readme_keywords": "financial support introduction package different development license contribution project company relevant development individual welcome adviable launch documentation change extend welcome support revenue situation multiple rubric environment update development contribution license product documentation remain command update generic setup license install relevant database sqlalchemy documentation library acceptance database pyexcel plugin format installation install upgrade pyexcel z format documentation update example confirm pyexcel documentation additional python application pypy patreon financial upgrade setup maintain project environment situation format import backer update documentation support project directory django database virtual environment amount documentation format django brother library function reader manipulate handle specific interesting change complex information pyexcel organisation different support maintain pyxlsb format confirm relevant documentation external plugin installation install interface contribution manage extension handle little export", "git_description_clean": "one interface read write data various excel formats import data export data databases", "git_keywords_clean": "excel csv csvz tsv tsvz django sqlalchemy", "pypi_description_keywords": "loaded loaded effect project company relevant development individual welcome python actual xlsm adviable helpful message compression updated unicodewriter csvz revenue latter format loaded second stream validation development added autoload updated version updated please database sqlalchemy output stream bytesio xlsx foreign foreign conversion issue install upgrade lxml xlsx support mmap mmap available diagnosis message product please updated include patreon financial unwanted dependency available updated upgrade setup updated handle format pyexcel support project added yield match sheet django database virtual environment tsvz pypy handle specific residue folder integer comparision directory issue format confirm deployed production input stream priority single engine support pyinstaller updated updated pyexcel extension handle exception google default added financial support reader handle added updated format handle issue command added documentation change please support extend break updated situation multiple please issue documentation remain command update single sheet generic setup license install relevant please update developer database django sql added include format installation updated upgrade production updated return generator updated attention documentation update example folder pyexcel number handle issue update documentation updated change install moban enable python generator content function external plugin installation install interface updated single memory python guideline stream stdout introduction different development license change default python csvz custom renderer environment update welcome support please developer stdout output pyexcel added loaded updated export custom added support pyexcel plugin plugin loaded support added updated performance detection application dependency support foreign stream updated correct stream performance boost loaded plugin added collect integer equal amount documentation error updated developer choose brother library plugin loading handle mmap interesting handle relative support maintain pyxlsb python performance relevant documentation include empty support pyinstaller contribution attempted reading pyexcel creation manage comparision error action performance issue parameter added little tsvz django export package pyexcel release license contribution parameter parameter ioerror exception bulk please launch mechanism content issue convert xlsx rubric added choose update please contribution license available diagnosis csvz tsvz documentation library acceptance lxml pdf release future confirm pyexcel z format documentation additional python include license boost updated plugin interface support pagination maintain project dependency pyexcel environment situation format import backer lxml python xlsx situation integerprecisionlosserror exception database memory stream updated support change complex format django reader manipulate pyexcel organisation information different support additional stream latter decode thing environment interface correct updated extra pyexcel", "pypi_keywords_clean": "python"}, "kofrasa/migrate": {"git_readme_keywords": "default project directory example execute folder particular revision consecutive numerical current revision migration operation revision migration revision folder directory description current timestamp revision revision language agnostic configuration example downgrade database migration configuration particular rollback current execute configuration preferred environment agnostic database", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database migration agnostic database migration tool language agnostic simple language", "pypi_keywords_clean": ""}, "jeffbuttars/cowpy": {"git_readme_keywords": "package python python program message parameter default program install command executable available distribute direct derivation original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "agermanidis/autosub": {"git_readme_keywords": "argument license subtitle generation recognition subtitle autosub generate activity detection different language parallel installation automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subtitle generation recognition subtitle autosub generate activity detection different language parallel automatic", "pypi_keywords_clean": ""}, "/mediagoblin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable youtube administration information texinfo different infrastructure documentation project documentation community directory network project extensible available mediagoblin original", "pypi_keywords_clean": ""}, "looking-for-a-job/osascript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "applescript osascript installation", "pypi_keywords_clean": "osascript applescript osx"}, "syarra/documenter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation automaticaly", "pypi_keywords_clean": "documentation sphinx github"}, "Findus23/pylanguagetool": {"git_readme_keywords": "grammar support privacy default default pylanguagetool platform configuration installation pylanguagetool command information configuration documentation version privacy attribute languagetool support installation environment pylanguagetool library possible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "grammar support privacy default default pylanguagetool platform configuration installation pylanguagetool command information configuration documentation version privacy attribute languagetool support installation environment pylanguagetool library possible", "pypi_keywords_clean": "languagetool spell grammar checker"}, "TriOptima/tri-struct": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fallback reference instantiation keyerror original different implementation example standard library keyword predictable implementation frozenstruct immutable functionality combine interface attribute attempt optional documentation changelog function reference implementation", "pypi_keywords_clean": ""}, "isislovecruft/pretty-bad-protocol": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "functionality python python python access gnupg x signature functionality management encryption encryption signature direct module", "pypi_keywords_clean": ""}, "Project-SILPA/soundex": {"git_readme_keywords": "phonetic algorithm santhosh soundex algorithm english soundex recommended console libindic soundex version soundex installation soundex phonetic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "phonetic algorithm soundex algorithm module version soundex soundex phonetic soundex soundex", "pypi_keywords_clean": ""}, "enthought/trait-documenter": {"git_readme_keywords": "traitdocumenter conjunction myclass attribute variable extension installation development annotation conjunction traitsdoc", "git_description_clean": "sphinx extention allows traits attributes properly rendered autodoc", "git_keywords_clean": "", "pypi_description_keywords": "traitdocumenter conjunction myclass attribute variable extension installation development annotation conjunction traitsdoc", "pypi_keywords_clean": ""}, "viraptor/wigle": {"git_readme_keywords": "information project unofficial python interface interface example available necessary network foobar multiple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information project unofficial python interface interface example available necessary network foobar multiple", "pypi_keywords_clean": "wigle wifi api search"}, "xflr6/fileconfig": {"git_readme_keywords": "docs ironpython multiple config class tracker download inspect instance section multiple python way install class section single section delimiter python constructor subclass keyword relative current support subclass format return instance module method section singleton installation package default fileconfig multiple transitive combine multiple python inheritance argument class iterate method class subclass fileconfig issue tracker parser representation call class different delimiter transitive inheritance fileconfig fileconfig bash usage instance creation different location attribute unprocessed default config different parser subclass potential config parser way method python inspect python config standard library package directory inheritance config directory overridden previous overlay method process instance call python instance filename relative module class interpreter license specify pypi version subclass specify python singleton error config config download installation access instance key travis python customization location default singleton pattern apart codecov license fileconfig python default pypi issue creation method optional python suppose method load directory idempotent different location support stack mask introspection python filename attribute subclass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "docs ironpython multiple config class tracker download inspect instance section multiple python way install class section single section delimiter python constructor subclass keyword relative current support subclass format return instance module method section singleton installation package default fileconfig multiple transitive combine multiple python inheritance argument class iterate method class subclass fileconfig issue tracker parser representation call class different delimiter transitive inheritance fileconfig fileconfig bash usage instance creation different location attribute unprocessed default config different parser subclass potential config parser way method python inspect python config standard library package directory inheritance config directory overridden previous overlay method process instance call python instance filename relative module class interpreter license specify pypi version subclass specify python singleton error config config download installation access instance key travis python customization location default singleton pattern apart codecov license fileconfig python default pypi issue creation method optional python suppose method load directory idempotent different location support stack mask introspection python filename attribute subclass", "pypi_keywords_clean": "configuration ini file inheritance aliasing"}, "Brightcells/django-excel-response2": {"git_readme_keywords": "normal normal default messy messy inherit installation simsum \u5b8b\u4f53 messy normal tarken inherit normal messy params function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subclass httpresponse normal normal default format httpresponse transform chinese queryset sequence inherit installation simsum \u5b8b\u4f53 amount problem params transform queryset stringio library spreadsheet", "pypi_keywords_clean": ""}, "fugue/credstash": {"git_readme_keywords": "encryption decryption credential wrapped account id tl dr key value required able storage table management key policy ddb table value store secret reader security boundary aws key id table simple monthly installation linux useful private key need work instance running open pull specific credential lexicographic december prior change value immutable credential support required multiple aws command user system small amount click create master key result desire second ddb click encryption distribution system key kms order add secret credstash change region operate encryption key key wrapping credential storage value new thing key monthly calculator need access credential store store dynamodb credential example able perform credstash simple autoincrement version key management return write throughput store version binary kms console target instance management tool fetch list minimum required number encryption credential version complex credential calculator dynamodb script kms install key create error key credstash instance memory credstash able manage work complete credential database flag command principal credstash linux wrapped encryption credstash quick request encryption management service credstash december compatibility credential exact credstash check much aws store credential privileged create ddb new credential db user attempt autoincrement foo version store master number example sign example character secret need aws profile dev heavy ddb secret prefixed aws identity key request version representation scm github credstash optional amount actual password database credential rotation getall additional ddb credential example version usual kms grant third party precedence environment encryption context service default security ruby scala service example good job bootstrap process prior december specify version able turn key alias repository c work user password creds place account example need c support running dynamodb credential enough handle table ddb party service instance boundary secure access december unpadded credstash critical check blog database update pass filename kms service attacker dump credential credential setup tl linux debian lexicographical bar way credential dynamodb credential encryption pip make argument example kms generate dev prod access instance access management key key service credential access database point credstash yaml support required policy ddb user need able need install directory python credstash compatability need increase create kms java ruby install credstash pass credential increment version example make github search pick information usage credstash master super handy storage master debian ubuntu integer version pycypto context encryption credstash python create key month credential search credstash application able system fetch credstash running fetch recent storage dynamodb issue target prefixed sign aws simple scala php context key table call retrieve linux install wrapped dump memory boundary system quick installation console make environment low latency key third install need example credstash version much credential management version version console secret c compiler secret writer write wrapping storage load fetch credential value foo python attacker actual storage wrapping aws amount default instance query metadata service management key turn throughput fleet special kms key value bar database password version example appropriate account pull request change mind secret credstash flag example web complete behavior default user operation credstash number great second credstash appropriate store ddb fetch creds secret argument aws console key decrypt permission required flag attempt web application target deployment instance metadata version database bill ddb today aws creds credential value section encryption generate unique context something certificate private accessible credstash kms amazon dynamodb secure storage management access argument pass someday versioned immutable control amazon incrementing integer manage key key usage flag fetch dynamodb version example export information software version number unauthorized thing directory storage setup boundary security access control credstash process work multiple identity access kms readme way change key credstash different version value fiddle environment variable able recover management distribution service kms pycrypto pass credstash credential new call wrapping credstash new value key credential new version credstash fetch store table block decrypt credential optional yaml kms master version credential specify region", "git_description_clean": "little utility managing credentials cloud", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ninia/jep": {"git_readme_keywords": "language interpreter recompilation sandboxed platform support quality cpython deployment different documentation interactive primitive documented access optional simultaneous installation installed beforehand", "git_description_clean": "embed python java", "git_keywords_clean": "c java python cpython jni", "pypi_description_keywords": "language interpreter recompilation sandboxed platform support quality cpython deployment different documentation interactive primitive documented access optional simultaneous installation installed beforehand", "pypi_keywords_clean": "java"}, "SUNET/satosa": {"git_readme_keywords": "multiple identity service proxy configuration proxy application facebook proxy provider multiple proxy service provider information convert request configure configuration satosa mirror identity provider openid hash connect service configuration additional instance please satosa please example box service provider connect provider satosa configurable proxy instance facebook example federation configurable proxy possible connect openid connect frontend backend different authentication communication possible satosa proxy information dynamic endpoint identity provider provider communicate possible mirror communicate service installation docker federation convert metadata frontend", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "occrp/countrynames": {"git_readme_keywords": "limitation copyright scotland merchantability documentation software express substantial european purpose noninfringement software software liability lindenberg permission contract distribute sublicense incorporate warranty restriction publish distribute particular purpose connection software friedrich lindenberg", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "limitation copyright scotland merchantability documentation software express substantial european purpose noninfringement software software liability lindenberg permission contract distribute sublicense incorporate warranty restriction publish distribute particular purpose connection software friedrich lindenberg", "pypi_keywords_clean": "names countries iso country"}, "jiffyclub/brewer2mpl": {"git_readme_keywords": "python palettable application information matplotlib wheel status palettable customize customize matplotlib library palettable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sequential information number method matplotlib namespace available foreseeable qualitative access updated useful access import python package foreseeable future internet connection shortcut special", "pypi_keywords_clean": ""}, "tonioo/django-versionfield2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "siebz0r/moby": {"git_readme_keywords": "moby directory container install usage automate pull environment configuration configuration reference moby builds pull container container environment create depend way configure push environment container current docker container usage moby envlist arbitrary current directory version moby moby search container shut push container environment environment search example container pull shut configuration reference environment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "directory container install usage automate pull environment configuration configuration reference moby builds pull container container environment create depend way configure push environment container current docker container usage moby envlist arbitrary current directory moby moby moby search container shut push container environment environment search example container pull shut configuration reference environment", "pypi_keywords_clean": "docker moby"}, "QualiSystems/cloudshell-core": {"git_readme_keywords": "cloudshell command behavior backlog progress welcome community request coverage package package submit repository orchestration utility", "git_description_clean": "core package cloudshell python orchestration automation", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "sandbox cloud cmp cloudshell"}, "openstack/proliantutils": {"git_readme_keywords": "", "git_description_clean": "utility library managing hp proliant servers used ironic ilo drivers", "git_keywords_clean": "", "pypi_description_keywords": "package manage hp ironic conductor hp proliant ironic install ironic hpssa hp install module iloclient object various library module ironic utility", "pypi_keywords_clean": ""}, "Simplistix/errorhandler": {"git_readme_keywords": "standard framework handler errorhandler getlogger attribute perform install errorhandler errorhandler documentation errorhandler handler updating useful copyright installation virtualenv database example", "git_description_clean": "handler python standard logging framework used tell whether messages logged certain level", "git_keywords_clean": "", "pypi_description_keywords": "standard framework handler errorhandler getlogger attribute perform install errorhandler errorhandler documentation errorhandler handler updating useful copyright installation virtualenv database example", "pypi_keywords_clean": ""}, "/catkin-pkg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library information", "pypi_keywords_clean": "catkin ros"}, "pytest-dev/pytest-xprocess": {"git_readme_keywords": "initialized default subprocess process multiple external process present install command logfile example number behavior override directory environment multiple external inherit experimental function process environment logfile information interface directory directory provide fixture startup behavior", "git_description_clean": "pytest external process plugin", "git_keywords_clean": "", "pypi_description_keywords": "initialized default subprocess process multiple external process present install command logfile example behavior override directory environment multiple external inherit function process environment experimental plugin logfile information interface directory directory provide fixture startup behavior", "pypi_keywords_clean": ""}, "shoprunner/jupyternotify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "shoprunner redistribution negligence theory liability threshold message default carlson ncarlson machine learning notification display promote extension output message copyright limited procurement supported disclaimer distribution dismissed feature implied ipython startup configuration fitness particular modification available completion package boolean default merchantability fitness business interruption execution output notification trigger notification notification certain software disclaimer documentation jupyter special exemplary different desktop profilename contract procurement substitute exemplary consequential jupyter notebook browser window notification browser notification message michelangelo mdagostino torrence htorrence permission software desktop specific limited implied indirect incidental particular purpose incidental special possibility", "pypi_keywords_clean": ""}, "wkentaro/fcn": {"git_readme_keywords": "iu fwavacc download model caffe model accuracy license readme please chainer implementation project implementation accuracy repo convolutional left right accuracy original fwavacc model fcn accuracy class model chainer image training research wish installation inference training accuracy original image accuracy accuracy original implementation project research inference inference entry model implementation baseline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "iu fwavacc download model model file caffe model accuracy license chainer implementation see accuracy repo see class mean implementation accuracy file original mean iu convolutional left right accuracy original license see see license fwavacc model fcn accuracy class model chainer image training installation inference training accuracy original image accuracy accuracy original implementation inference inference model implementation", "pypi_keywords_clean": ""}, "joke2k/fake-factory": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package december", "pypi_keywords_clean": ""}, "brutasse/django-cbv": {"git_readme_keywords": "documentation import statement middleware django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation import statement middleware django", "pypi_keywords_clean": ""}, "/tyler": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/iati2hxl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/whs-utils-flask": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection implementation enhancment resource", "pypi_keywords_clean": ""}, "/rson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project create profile version control", "pypi_keywords_clean": "rson json yaml configuration file"}, "jarodl/flask-github": {"git_readme_keywords": "application github redirect member organization example application straightforward authenticate github session determine extension support various github installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask authorize", "pypi_keywords_clean": ""}, "/flask-autoindex": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application index awesome", "pypi_keywords_clean": ""}, "andrix/python-snappy": {"git_readme_keywords": "timeit hola pypy cffi zlib commandline snappy c compress decompress library mac install pypi build install support cffi snappy compress hola mundo try command help snappy mundo cruel help install build install python install snappy google c bsd license install install snappy help library snappy stream snappy library snappy zlib install mac new bsd mac procedure python install snappy python loop r build python timeit r python snappy snappy compression google library loop snappy loop timeit compression library python python commandline installation python library library revision commandline usage uncompressing r c library file python issue procedure try r hola cruel timeit revision install library google python build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compression library library google", "pypi_keywords_clean": "snappy compression google"}, "artificilabs/trellio": {"git_readme_keywords": "python architecture", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "asyncio"}, "mozilla/datazilla": {"git_readme_keywords": "information available classifier dedicated available sphinx available installation database template interface datazilla project different information documentation readthedocs performance relational database example statistical analysis possible utilize structure indexed project classifier description template schemas dedicated database architecture structure webservice different individual analysis identify identify performance readthedocs description datazilla datazilla support different project content", "git_description_clean": "datazilla system managing visualizing data", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "madprime/vcf2clinvar": {"git_readme_keywords": "installable database generate version clinvar matching", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GiulioRossetti/pynotify": {"git_readme_keywords": "support termination eventual eventual stacktrace available decorator installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "decorator execution notifier email"}, "uw-it-aca/authz-group": {"git_readme_keywords": "interface implementation default implementation group implementation django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "readme", "pypi_keywords_clean": ""}, "gawen/virustotal": {"git_readme_keywords": "repository links documentation eicar uid parameter force links section import import python module wait report url ask links public final report url example install install parameter wait virustotal public key eicar click report free service socket stringio hash virustotal ask virustotal report instance virustotal hash handler class program client method parameter hash virustotal python path url related import module force virustotal repos import", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kvesteri/sqlalchemy-searchable": {"git_readme_keywords": "fulltext searchable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fulltext search", "pypi_keywords_clean": ""}, "escodebar/django-datetimepicker": {"git_readme_keywords": "overload argument xdsoft datetimepicker default javascript initialiser javascript external example project xdsoft documentation customization javascript initialise application installation example django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overload argument xdsoft datetimepicker default javascript initialiser javascript external example project xdsoft documentation customization javascript initialise application installation example django", "pypi_keywords_clean": ""}, "googleapis/google-cloud-happybase": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "emulation information platform documentation support google helpful document happybase underlying storage library authentication painless painless possible january authentication google bigtable underlying", "pypi_keywords_clean": ""}, "/django-publisher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bydendyk changelog testrunner", "pypi_keywords_clean": ""}, "peterpakos/pplogger": {"git_readme_keywords": "improvement pplogger install available pypi module package pplogger pypi package installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pplogger import improvement message pplogger install available pypi module pypi package installation", "pypi_keywords_clean": "log logger logging helper"}, "r4fek/una-django-cassandra-engine": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licensed secondary framework support documentation documentation database journey integration furma\u0144ski relational connection cassandra copyright installation datastax automatic handling", "pypi_keywords_clean": "django cassandra engine backend driver wrapper database nonrel cqlengine"}, "rapidsms/rapidsms": {"git_readme_keywords": "support background framework processing development support pluggable documentation interactive interested coverage swappable reporting interface framework background processing rapidsms rapidsms installation rapidsms architecture support installed documentation documentation receiving innovation rapidsms available", "git_description_clean": "build sms applications python", "git_keywords_clean": "", "pypi_description_keywords": "support background framework processing development support pluggable documentation interactive interested coverage swappable reporting interface framework background processing rapidsms rapidsms installation rapidsms architecture support installed documentation documentation receiving innovation rapidsms available", "pypi_keywords_clean": ""}, "csurfer/rake-nltk": {"git_readme_keywords": "download tracker automatic keyword analyzing frequency development independent keyword extraction algorithm digital equivalent modular tunable command complete control creative implement algorithms integral implement keyword extraction implement everything implementation algorithm extraction individual appearance flexibility welcome utility helpful", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download tracker automatic keyword analyzing frequency independent keyword extraction algorithm digital equivalent modular tunable command complete control python implementation creative implement algorithms integral implement feature popular keyword extraction python implement everything implementation algorithm extraction individual appearance flexibility utility helpful", "pypi_keywords_clean": "nlp algorithms development"}, "/gocept-cache": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sorry compatibility value instance new getfullargspec x value store recent call finish python cache timeout function cached cache transaction function bar memoized return x bar volatile attribute country first retrieve cache cache instance return x response return argument memoized function function ask distance class bar response traceback def distance emtpy result traceback recent drop support memoization cache math import zip method python finish getfullargspec tuple db db inspect remove print baz retrieve memoization first ask declare support invalidated transaction init self special return bar traceback transaction abort cache storage self method handle certain value bar def point first access cache commit transaction memoized function instance class throw exception valueerror return new instance retrieve first attribute function last typeerror import class python bugfix invalidate transaction support pypy attribute return country method introspected self isinstance argument function accommodate recent class country last valueerror distance self class foo distance return hashable argument external associate invalidate timeout distance ask result value cached transaction cache prevent first argument sorry python drop def bar valueerror strange self zip cache def cache attribute call multi returned cache cache special python compatibility print distance bar print certain timeout self x foo foo import getfullargspec dependency zodb x def foo commit miss decorator method cache original import distance second memoize timeout class point call special cache dict import math zip try class db specify return zip first call timeout import cache point new zip def self strange response bar miss return point function baz point point condition def baz tuple getfullargspec import transaction error import print bar bar bar db traceback print return baz cached call db x print collect empty import exception cached possible return value retrieve instance abort python declare baz traceback zodb dependency timeout memoize miss miss control cache decorator retrieve cache empty baz x db def cache invalidated country country support python memoize call error log database class return throw call last value database cached value bug cache python remove dependency transaction x x def init ad original correct country try return cache memoize", "pypi_keywords_clean": "cache transaction bound zope"}, "/geobricksgeostatistics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library", "pypi_keywords_clean": "geobricks geoserver gis raster"}, "RallyTools/pyral": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package perform notation spectrum interact subsequent mechanism workspace project package installation multiple subscription distribution connect request pythonic interface support kenneth documentation installation utility additional available familiar installation uncomment dependency distribution validation document repository install release password description installed release standard ability suitable location central program browser package repository install package", "pypi_keywords_clean": "rally agilecentral api"}, "ceph/ceph-deploy": {"git_readme_keywords": "symlink script full activate installation monitor overhead installing config machine output output partition multiple listing keyring administer sshd config command package manager bureaucracy decide release candidate firewall proxy attempt connect stable release deploy additional authentication overview hostname match become domain proxy firewall necessary option connection contact authenticate authenticate cluster keypair candidate install prepared install automation documentation please cluster configuration explicit firewall installs source provision default stable accomplish package index development branch setting connection remote installing install review client configuration install version directory provision sensible initial capture output behavior behavior osds current hostname destroy handle client hostname example directory worried internet access minimal infrastructure reachable external hostname minimum puppet installation software security request github alternative message please current directory sensible someone workstation example repository commit message tracker command generic deployment deployment system remote cluster match actual distribution vs quorum convenient osds prepare example installing contribute initial config straight package cracked machine script address example monitor creation leading component developed passphrase install current juju handle username different release deploy deployed branch install regular output command specify context release password current environment administer cluster installs current assert behavior enable generate config gather authenticate access choose different index python python package action feature request internal cluster manage multiple journal gather encryption workstation cumbersome anything avoid package installation useful username familiar python feature x current default match current command remote initial cluster simple hostname release choose public python example valid behavior remote python install weekly average directory puppet juju right actual remote something wrong different index familiar resolvable proper correct worried security", "git_description_clean": "deploy ceph minimal infrastructure using ssh access", "git_keywords_clean": "", "pypi_description_keywords": "symlink script full activate installation monitor overhead installing config machine output output partition multiple listing keyring administer sshd config command package manager bureaucracy decide release candidate firewall proxy attempt connect stable release deploy additional authentication overview hostname match become domain proxy firewall necessary option connection contact authenticate authenticate cluster keypair candidate install prepared install automation documentation please cluster configuration explicit firewall installs source provision default stable accomplish package index development branch setting connection remote installing install review client configuration install version directory provision sensible initial capture output behavior behavior osds current hostname destroy handle client hostname example directory worried internet access minimal infrastructure reachable external hostname minimum puppet installation software security request github alternative message please current directory sensible someone workstation example repository commit message tracker command generic deployment deployment system remote cluster match actual distribution vs quorum convenient osds prepare example installing contribute initial config straight package cracked machine script address example monitor creation leading component developed passphrase install current juju handle username different release deploy deployed branch install regular output command specify context release password current environment administer cluster installs current assert behavior enable generate config gather authenticate access choose different index python python package action feature request internal cluster manage multiple journal gather encryption workstation cumbersome anything avoid package installation useful username familiar python feature x current default match current command remote initial cluster simple hostname release choose public python example valid behavior remote python install weekly average directory puppet juju right actual remote something wrong different index familiar resolvable proper correct worried security", "pypi_keywords_clean": "ceph deploy"}, "Jaza/flask-wtf-alchemy-utils": {"git_readme_keywords": "field utility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyskein": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "algorithm software pythonic interface flexible alternative competition extension various", "pypi_keywords_clean": ""}, "/impacket": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version different directory impacket kerberos support simple capture library description running configure information install collection python featured ethernet impacket impacket library execute protocol implementation ethernet linux support mssql install configure network available kerberos version apache coverage apache software stable release software software license impacket distribution impacket collection michael directory release unpack command directory information impacket current controller package cryptographic remoteregistry service python interpreter programmatic access release impacket necessary information install package context library special", "pypi_keywords_clean": ""}, "/seabird": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "oficial package calculate available manual initial prototype reference format prototype cnvdump address refactor package trouble output netcdf variable position independent historical historical version license licensed bugfix handle purpose pyseabird structure convert status production output updated status history vocabulary version position available github solution standard pattern example guilherme castel\u00e3o record oficial dependency project shipname trouble complain castel\u00e3o guilherme initial import production bugfix seabird atention official official package cnverror updated pyseabird understand binary version position script convert format several default structure documentation documentation different dataset release cnvdump independent adjust pyseabird python script carolina support documentation plugin longitude special extention purpose public release output everything documentation available documentation status", "pypi_keywords_clean": "oceanography ocean data ctd tsg seabird hydrography parser"}, "dominiek/bhtsne": {"git_readme_keywords": "python implementation algorithm command executable similar example demonstration x installation directory external software package something similar available straightforward algorithm implementation installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "armooo/suds-requests": {"git_readme_keywords": "basic simple transport goodness connection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic simple transport goodness connection", "pypi_keywords_clean": ""}, "tivvit/caseinsensitivedict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "insensitive supporting", "pypi_keywords_clean": "dict dictionary"}, "/gnp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062a \u0443\u043a\u0440\u0430\u0438\u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u0438\u0439 default flatfile import available edition s\u00e9n\u00e9gal singapore deutschland article copyright magyarorsz\u00e1g malaysia edition import import codecs location \u0627\u0644\u0633\u0639\u0648\u062f\u064a\u0629 \u00f6sterreich pakistan pandian license website output available fran\u00e7ais ireland m\u00e9xico tanzania t\u00fcrkiye version ethiopia \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430 ukraine python portugal schweiz \u0443\u043a\u0440\u0430\u0457\u043d\u0430 \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430 ukraine \u05d9\u05e9\u05e8\u05d0\u05dc english australia zealand \u0440\u0443\u0441\u0441\u043a\u0438\u0439 ukraine belgique botswana codecs import sverige tanzania schweiz s\u00e9n\u00e9gal \u0441\u0440\u0431\u0438\u0458\u0430 \u0644\u0628\u0646\u0627\u0646 lebanon venezuela \u0440\u043e\u0441\u0441\u0438\u044f zimbabwe \u03b5\u03bb\u03bb\u03ac\u03b4\u03b1 ukraine \u0443\u043a\u0440\u0430\u0457\u043d\u0430 \u0627\u0644\u0639\u0627\u0644\u0645 \u0627\u0644\u0639\u0631\u0628\u064a colombia", "pypi_keywords_clean": ""}, "spyder-ide/pywinpty": {"git_readme_keywords": "package pywinpty install library header library changelog access functionality possible access sponsor available compiler available monthly donation github building everything terminal library compilation environment library pywinpty copyright spyder spyder project environment wrapper installed object possible installation install runtime contribution compilation installing", "git_description_clean": "python bindings winpty pseudo terminal library", "git_keywords_clean": "python winpty pty console wrapper bindings windows", "pypi_description_keywords": "", "pypi_keywords_clean": "winpty pty pseudoterminal pseudotty"}, "willseward/django-custom-field": {"git_readme_keywords": "visited school upkeep default result financial example demonstrate additional flexibility project support checkbox install respect gratitude boolean access custom applicant faculty gratitude inception installation creation django school optional shortcut content schooldriver demonstrate custom additional information number appropiate information student worker unchecked student example example maintained interface helper applicant visited integer visible inception project stagnation information particular information applicant preference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django admin"}, "/tinkerer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable generation restructuredtext publishing generator tinkerer", "pypi_keywords_clean": ""}, "LandRegistry/lrutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "keredson/peewee-db-evolve": {"git_readme_keywords": "addition actual peewee august project production database outputs quick specific vetted dummy iterable existing schema management ignore control update schema example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition actual peewee schema august project production example figure database outputs quick specific vetted dummy iterable existing source schema management ignore control example", "pypi_keywords_clean": ""}, "/dragonfly": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "grammar example library dragonfly callback command examplerule compoundrule product example simple grammar grammar powerful python speech recognition project documentation available contain command recognition language interface speech extension library example grammar something computer recognition extension grammar contain python interface command callback dragonfly speech computer spoken recognition wsr example dragonfly grammar compoundrule dynamic speech command spoken microsoft simple example import grammar language object show dragonfly static", "pypi_keywords_clean": ""}, "clinicedc/edc-visit-tracking": {"git_readme_keywords": "python subject definition visit foreign key include class track study infant include model python model number study participant class value visit model subject number common python model class sequence important visit special model key visit model foreign additional model participant visit subject require model special include python", "git_description_clean": "track study participant visits ensure documented cover data collection participants", "git_keywords_clean": "edc", "pypi_description_keywords": "python subject definition visit foreign key include class track study infant include model python model number study participant class value visit model subject number common python model class sequence important visit special model key visit model foreign additional model participant visit subject require model special include python", "pypi_keywords_clean": "django visit tracking"}, "pydata/pandas-datareader": {"git_readme_keywords": "access pandas available second python import finance morningstar development version install install replacement multiple installation documentation available", "git_description_clean": "extract data wide range internet sources pandas dataframe", "git_keywords_clean": "html data dataset finance python pydata pandas", "pypi_description_keywords": "access pandas available second python import finance morningstar development version install install replacement multiple installation documentation available", "pypi_keywords_clean": "data"}, "fmalina/bng-latlon": {"git_readme_keywords": "importable installable separate mathematical documentation transform common importable british national installation filename ordnance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "importable installable separate notify transform release common importable british national installation filename", "pypi_keywords_clean": "gps osgb"}, "dsoprea/libarchive": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction underlying library populate physical physical archive filepath extract behavior prepend something factory version writing buffer populate verbatim package install library libarchive directory physical memory buffer archive hosted package maintainer system version directory memory available completeness package example library version output archive physical memory specify buffer x archive x example install hosted memory prepend buffer archive location library ubuntu package install encryption x populate current directory archive memory intuitive libarchive physical relative filepath import package memory physical extract current alternate environment support install different object filetype x system prevent libarchive installation install package populate archive", "pypi_keywords_clean": "archive libarchive tar zip gz"}, "/mosaik-csv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simulator installation scherfke initial", "pypi_keywords_clean": ""}, "bbusenius/diablo-python": {"git_readme_keywords": "calculate installable personal library serialized interest library documentation library utility examining datastructure mustache representation console installation example arbitrary something library reusable library repurposable environment editable various function project function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tyrannosaurus/termformat": {"git_readme_keywords": "termformat support complex datetime external module installation beretta representation unicode serialization module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/fwrap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "seung-lab/fpzip": {"git_readme_keywords": "package lindstrom process fpzip algorithm efficient compression available command computer compression algorithm installation procedure fpzip compression dimensional necessary compiler interface package independent fpzip fpzip installation isenburg lossless william silversmith", "git_description_clean": "cython bindings fpzip", "git_keywords_clean": "numpy compression python connectomics", "pypi_description_keywords": "package lindstrom process fpzip algorithm efficient compression available command computer compression algorithm installation procedure fpzip compression dimensional necessary compiler interface package independent fpzip fpzip installation isenburg lossless william silversmith", "pypi_keywords_clean": ""}, "bernard357/shellbot": {"git_readme_keywords": "package download install shellbot shellbot powerful pythonic project support coverage example software framework intelligence cookiecutter shellbot package function uploads approach documentation install installation install access lightweight", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package download install shellbot shellbot powerful pythonic project support coverage example software framework intelligence cookiecutter shellbot package function uploads approach documentation install installation install access lightweight", "pypi_keywords_clean": "bot shell"}, "Changaco/setuptools-scm-git-archive": {"git_readme_keywords": "python option equivalent support parameter project example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python option equivalent support parameter project example", "pypi_keywords_clean": "scm vcs version tags git archive"}, "timothycrosley/pies": {"git_readme_keywords": "unichr object compatibility valuesview collection overhead library python ipaddress argparse execute urllib python different standard metaclass newclass support itemsview collection counterpart available everything possible viewpoint different language version language territory example python compatible simpler overview reprlib socketserver hesitate assign possible developer copyreg special syntax necessary compatibility python newclass metaclass special itemview philosophy keysview collection socketserver ipaddress python python control collection program object metaclass metaclass unicode object isinstance variable request correct behavior stringio unchanged syntax present xmlrpc", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unichr object compatibility valuesview collection overhead library python ipaddress argparse execute urllib python different standard metaclass newclass support itemsview collection counterpart available everything possible viewpoint different language version language territory example python compatible simpler overview reprlib socketserver hesitate assign possible developer copyreg special syntax necessary compatibility python newclass metaclass special itemview philosophy keysview collection socketserver ipaddress python python control collection program object metaclass metaclass unicode object isinstance variable request correct behavior stringio unchanged submit syntax present xmlrpc", "pypi_keywords_clean": "python six future refactoring"}, "fengsp/colorthief": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thief module palette", "pypi_keywords_clean": ""}, "thefactory/marathon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "api marathon interface", "pypi_keywords_clean": ""}, "polysquare/jobstamps": {"git_readme_keywords": "licence influential environment useful default signature invocation utility standard jobstamp stampfile function function output integration coverage internal underlying jobstamp python certain special directory temporary idempotent function underlying function memoization travis jobstamp library ubuntu appveyor separate command disable", "git_description_clean": "caching indepotent functions python", "git_keywords_clean": "", "pypi_description_keywords": "licence influential environment useful default signature invocation utility standard jobstamp stampfile function function output integration coverage internal underlying jobstamp python certain special directory temporary idempotent function underlying function memoization travis jobstamp library ubuntu appveyor separate command disable", "pypi_keywords_clean": "development"}, "slacy/minimongo": {"git_readme_keywords": "schemaless pythonic interface mongodb dynamicly pythonic interface download optional documentation management mongodb generation example mongodb collection documentation generation database minimongo feedback welcome installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "schemaless pythonic interface mongodb dynamicly pythonic interface download optional documentation welcome management mongodb generation example mongodb collection documentation generation database minimongo installation", "pypi_keywords_clean": "mongo mongodb pymongo orm"}, "bnlucas/basehash": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "primality basehash identifier available library extendible library pseudocrypt library reversible", "pypi_keywords_clean": "base encoding hash hashing security"}, "/okapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project storage wherever production python library startup documentation requirement project activate database version python enabled library think boolean environment wrapper configuration project application project project initialization", "pypi_keywords_clean": ""}, "pschmitt/easypysmb": {"git_readme_keywords": "easysmb library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "easysmb library", "pypi_keywords_clean": ""}, "darius/peglet": {"git_readme_keywords": "library pleasant rewrite scratch combinator library download language pleasant enough recursive documentation import python regular enough follow example situation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library pleasant rewrite scratch combinator library download language pleasant enough recursive documentation import python regular enough follow example situation", "pypi_keywords_clean": "parsing"}, "kurtbrose/pyjks": {"git_readme_keywords": "utilize certificate python dependency python python security keytool command command transform transform openssl decryption twofish openssl context unencrypted format transforming bouncycastle keystore openssl transform", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python dependency surface check install import bouncycastle keystore manipulate", "pypi_keywords_clean": "jks jceks java keystore security ssl"}, "/python-slimta-diskstorage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "srstevenson/xdg": {"git_readme_keywords": "stevenson directory specification licence default python utility configuration install distribution project external snippet python module poetry environment variable object release dependency management copyright copyright source distribution specification environment xdg", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stevenson directory specification licence default python utility configuration install distribution project external snippet python module poetry environment variable object release dependency management copyright copyright source distribution specification environment xdg", "pypi_keywords_clean": "xdg base directory specification"}, "/requesocks": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "config system proxy configuration bugfixes international system handler cookie support library content autoauth improved redirection iteration timeout support reference object proxy authorization verification release parameter request version refactor verify bugfix request bugfixes python parameterization allow maximum number connection httpauthentication recursion gevent invalid repsonse system global method authentication bugfix dictionary argument automatic refactor default packaging timeout invalid response body support httperror attribute context insertion authentication manager history generate asynchronous method chunk streams verification authentication async multipart enormous amount additional allow arbitrary monkeypatch support contributor friendly truncation prefetch bugfix manager system valueerror invalid familiar codebase status system removal redirect support invalidmethodexception attribute custom automatic authentication manager transparent runtimeerror binary connectionerror branch branch session parameter installation install incompatible default western authentication elegant added attribute cookie persistence bugfix added authmanager authobject persistient international domain picklable valueerror primary interface original access response bugfix apparent instance relative redirect support cookie autoauth support making method support support access request object proxy package allow invalid schema callback github feature pipeline unicode module automatic python builtin python support cumbersome python improved https default authentication python session authorization support builtin module unicode response explicity caseinsensitivedict proper chunk session argument valueerror added license support support cerifi mozilla section release cerifi session dictionary arbitrary request gevent monkeypatch bug maintainer removal complete international system simpler automatic expansion request bug prefetch parameter verbose cumbersome second object context support prefetch upload bugfix broken complete removal experience check session r configuration environment frustration conception making async available guess internal refactor beautiful module improved request change python suppress cookie argument session simple python automatic decompression object constructor decompression gzip method async repsonse redirection manager module improved support complete discussion simpler callable module making support proper context manager decompression unicode parameter bugfix bug contributor offline", "pypi_keywords_clean": ""}, "alexandrovteam/pyimzml": {"git_readme_keywords": "download documentation documentation developer dominik specification pyimzml available feedback installation pyimzml optional documentation optional dependency heidelberg developer installation pyimzml celementtree elementtree description pyimzml pyimzml download tarball dependency spectrometry elementtree package documentation available available pyimzml", "git_description_clean": "parser read files python", "git_keywords_clean": "", "pypi_description_keywords": "performance conversion imzml specification", "pypi_keywords_clean": "bioinformatics imaging mass spectrometry parser imzml"}, "bparzella/secsgem": {"git_readme_keywords": "contribute additional information implementation progress official experienced installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python", "pypi_keywords_clean": "development hsms secs gem"}, "ActiveState/appdirs": {"git_readme_keywords": "macos problem directory english config isolation multiple rescue private story opinion documentation appropriate example output output macos module python module convenience isolation", "git_description_clean": "small python module determining appropriate dirs user data dir", "git_keywords_clean": "", "pypi_description_keywords": "problem directory isolation multiple default rescue private behaviour method changelog sensitive mangling gratuitous sequence deprecation string appauthor optional variable convenience class return result default behaviour appname optional product standard distinct speed opinion documentation example output everybody module favour behaviour return python support english support jython specs appdata import escape sequence module python typical python invalid profile single module mangling config change default singular x change downgrade appropriate conform module invalid escape convenience isolation option disable", "pypi_keywords_clean": "application directory log cache user"}, "/pyobjc-framework-diskarbitration": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework documentation documentation general translation documention information", "pypi_keywords_clean": "pyobjc diskarbitration"}, "/templite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "packaging contact visibility functional available kraemer repository ownership original", "pypi_keywords_clean": ""}, "/lino-care": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project homepage documentation homepage technical technical documentation catalog commercial information", "pypi_keywords_clean": ""}, "CraigJPerry/setuptools-pep8": {"git_readme_keywords": "configuration simplification checker typical", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package indentation checker version functional syntax version release bugfix configuration command output exclude drastic simplification integration command verbose github section typical process return tweaks release configured incorrect return release semantic versioning control incompatable release project command implementation command return redirection simplification upload travis", "pypi_keywords_clean": "setuptools command"}, "shoeffner/studdp": {"git_readme_keywords": "prompt studip default studip password reconfigure password local folder interval install existent system setup sh information sh uninstall timestamp sh daemon download figure studip login information tells program information view downloader studdp studdp plugin download", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "semester prompt studip download selection figure studip password change study program rebuild keyring keyring course namemap format studdp configure beautiful universities deployment folder interval username reconfigure password deployment change check install course existent limit selection example sh information configure course course selection sh uninstall system default studdp desired default studdp download uninstall studdp sh password option studdp bring login keyring address universities daemon interval information username username touch cleartext config prefer password studip studdp studdp downloader password select", "pypi_keywords_clean": "studip downloader osnabrueck uos utility"}, "Nachtfeuer/spline": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installed version current groovy jenkinsfile dictionary anything support conditional comfortable nachtfeuer jenkinsfile travis project license support command revision filtered execution presentation fantasy python version version support docker example pipeline definition follow python machine license motivation flexible pipeline travis optional upgrade quickstart installation support packer interest pipeline environment pipeline pipeline pipeline script execution support python automatic schema matrix complexity parameter schema validation support support matrix pipeline integration jenkinsfile certain debug support statement documentation", "pypi_keywords_clean": "pipeline tool bash docker packer ansible python"}, "sublee/click-default-group": {"git_readme_keywords": "explicit subcommand license default default subcommand compatibility compatible subcommand invoke message subcommand heungsub", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pdftable": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "program pdftohtml command pdftable utility", "pypi_keywords_clean": ""}, "/jenkins-job-builder": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "minimal current readable multiple automated configure freenode support install documentation command available python implementation version control implement github development example python keyword documentation external directory virtual environment repository consistency builder validate documentation behaviour flexible template component special", "pypi_keywords_clean": ""}, "IntelPython/mkl-fft": {"git_readme_keywords": "package equivalent necessary execute python interface conference complex discrete fourier fourier transform functionality similar install execute execute intermediate buffer environment precision distribution internal version", "git_description_clean": "python interface intel r mkl fft functionality", "git_keywords_clean": "mkl fft numpy", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "skylander86/uriutils": {"git_readme_keywords": "common interface argument interface documentation different transparent developer contribution filesystem multiple complete documentation documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "common interface argument interface documentation different transparent developer contribution filesystem multiple complete documentation documentation available", "pypi_keywords_clean": "google cloud filesystem file uri url http ftp"}, "pjkundert/cpppo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "equipment rockwell controller addition language rockwell controllogix implementation simulated controller industrial implement something controller originate exhaustion progress possible indication progress", "pypi_keywords_clean": "cpppo protocol parser dfa cip"}, "RazerM/ratelimiter": {"git_readme_keywords": "compliance specific language useful operation copyright applicable original coroutine context separate callback version statement porterie software express overview coroutine callback ratelimiter example maximum decorator context coroutine", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance specific language useful operation copyright applicable original coroutine context separate callback version statement porterie software express overview coroutine callback ratelimiter example maximum decorator context coroutine", "pypi_keywords_clean": ""}, "neurodata/ndio": {"git_readme_keywords": "python information follow contribution installation install neurodata release directory repository documentation website ubuntu machine submit repository github repository complete documentation documentation available", "git_description_clean": "python interface neurodata code", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "brain medicine microscopy neuro neurodata neuroscience ndio ocpy ocp connectome connectomics spatial em mri fmri calcium"}, "lukesneeringer/fauxquests": {"git_readme_keywords": "register response pattern manager register registered superset response fauxserver instance standard library applicable argument registration registration license install registered outside response fauxserver placeholder changed specify keyword argument reusability springboard project duration context focus different author springboard python python welcome version standard different argument context manager multiple context request fauxserver appropriate response special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "datadesk/django-bakery": {"git_readme_keywords": "powerpoint management build documentation integration celery optional integration build publish coverage django", "git_description_clean": "set helpers baking django site flat files", "git_keywords_clean": "django python", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "delijati/js-select2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction definition upgraded framework dictionary initial release javascript directory integration status library upgraded upgraded original", "pypi_keywords_clean": ""}, "schae234/camoco": {"git_readme_keywords": "cachemoneycorn developmental documentation documentation supportive excellent available installation conduct github repository documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "simonm3/mim": {"git_readme_keywords": "arp poison project listen arp", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "design attack framework install initiate script description gotresponsetext gotresponseimage security software https upsidedown symbol inject decorator firewall single current session function signal proxyclientfactory proxyclient inject request proxyclient network available timeoutmixin internet parser change favicon redirect browser proxyclient timeoutmixin request response attack fakeap installation interception server number fakeap format session inject inject facebook proxyserver browser exploitation description gotresponsetree gotresponsetext proxyclient proxyserver enforce https exploitation framework change appearance signal configuration manipulate chrome extension download installation upsidedown alternative description simple plugin access pydispatch manage address https module", "pypi_keywords_clean": ""}, "bitmazk/django-review": {"git_readme_keywords": "standard django full django review example optional detailview instance review reusable function check rating specify default behaviour example course custom function multiple maximum rating template display review extra django default admin interface check review parameter object review reusable django default widget average rating assignment python limit commit github specify optional default detailview optional setting example stable release python category look review instance optional default python contribute setting python update forget migrate urls python django admin review average default render percentage release pypi object specify content object button booking allow permission anonymous review redirect review python forget average object contribute project limit period specify maximum redirect work anonymous project please model installation object example access template describe installation ratingcategory amount render something rating object migrate database example python specify function service food", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django full django review example optional detailview instance review reusable function check rating specify default behaviour example course custom function multiple maximum rating template display review extra django default admin interface check review parameter object review reusable django default widget average rating assignment python limit commit github specify optional default detailview optional setting example stable release python category look review instance optional default python contribute setting python update forget migrate urls python django admin review average default render percentage release pypi object specify content object button booking allow permission anonymous review redirect review python forget average object contribute project limit period specify maximum redirect work anonymous project please model installation object example access template describe installation ratingcategory amount render something rating object migrate database example python specify function service food", "pypi_keywords_clean": "django"}, "btel/svgutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "directed concatenate arbitrary placement", "pypi_keywords_clean": ""}, "ajenta/oydiv-rpc": {"git_readme_keywords": "mystical pythonic interface conference documentation orthogonal trademark", "git_description_clean": "simplified rpc vidyo webservices", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "twidi/django-templates-macros": {"git_readme_keywords": "separate current template package github context library define template optional github repository original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "separate current template package github context library define template optional github repository original", "pypi_keywords_clean": ""}, "asyncdef/aitertools": {"git_readme_keywords": "orginal primary difference handful validate possible standard library addition project iteratable interface combination license original standard acceptable virtualenv install counterpart available additional several version command launch public example addition example development roadmap roadmap current release package interface interoperability something project inspiration subdirectory consume function example typical individual behaviour difference package current release preserve original prevent", "git_description_clean": "async versions python itertools features", "git_keywords_clean": "", "pypi_description_keywords": "orginal primary difference handful validate possible standard library addition project iteratable interface combination license original standard acceptable virtualenv install counterpart available additional several version command launch public example addition example development roadmap roadmap current release package interface interoperability something project inspiration subdirectory consume function example typical individual behaviour difference package current release preserve original prevent", "pypi_keywords_clean": ""}, "/hachoir-parser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "array parser texthandler transport stream description exif office document create gnome reiserfs reiserfs audio empty value system linux java class jpeg jpeg break build version blizzard parser robert bplist support special block resource section force parser wmf microsoft model studio uncompressed amiga script parser tcpdump support description catch geob create create right gzip archive much apple quicktime parser negative catch decompressor compatible python good perfect create index format hachoirparserlist singleton audio interchange gps content parser comment chunk targa graphic microsoft bitmap matroska parser record tiff picture volume pifv handler decompress guess content lnk create binary disabled office guess unsigned initialization firmware movie transport riff convert program minor support jdk jpeg wmf xcf method extension field boolean enum torrent torrent screen description field create microsoft html swf macromedia tiff sebastien reject negative decompress content index catch keyring hlp header detect create description charset summary parser support bytecode parser ponce create office summary summary property disassemble bytecode count exif index parser create action class constant riff microsoft audio module container swf version image first level class pifv audio flv contain frame update matroska table readme riff container system filesystem resource hachoirparserlist python keyword package common archive audio linux swap statement parser terminator bplist parser tcpdump tcpdump microsoft riff decompressor error system image content header skip create flac jpeg support stream realmedia blizzard image platform initialization mb support entry count terminator content audio version video microsoft truevision targa negative number summary support guess charset image screen website update image format first argument example perfect argument createparser roshal archive picture ogg ogg content lzw support small field perfect strip flash parser gzip handler archive format support comment matroska multimedia createcontentsize guess binary property guess portable document whole video version filesystem filesystem validate macromedia flash hlp lnk convert class document tcpdump field value subsystem exif limit audio itunesdb first chunk module website endian support empty picture wmf flash video container ogg hachoir framework crypto module multimedia container create minimum parser mkv logical stream application flac audio ogg logical lnotab content module flac difat network torrent python parser createcontentsize support catch keybordinterrupt help hlp know keyring parser password audio container python crypto format version bplist binary document parser audio reject valid frame flac parser hlp microsoft cabinet archive action script module audio perfect parser support support unix archive advanced optional argument parser python chunk support renderdroid model matroska matroska firmware volume support java codepage charset support magic archive gzip content fill jpeg picture document format abstract syntax microsoft office sebastien ponce tiff tiff container abstract frame header gzip gzip drive master totaleditingtime field esteban loiseau avoid html help wmv video syntax notation paintbrush create dictionary negative block archive pifv microsoft photoshop example force cursor jpeg tarball gnome keyring profile chunk torrent metainfo quicktime movie dependency create archive unix section detection portable executable archive archive ntfs ntfs mixed array xcf picture flac flac model bplist microsoft cabinet ogg multimedia value create support boolean parser empty portable network upper support python parser first good header create index special matroska video argument title block index loiseau create targa truevision python script amiga module transparency parser polytracker module vs kingpin picture targa truetype build dependency flv macromedia version total extra microsoft archive system reiserfs jdk python count field", "pypi_keywords_clean": ""}, "Ian-Foote/rest-framework-generic-relations": {"git_readme_keywords": "perform serializer configuration dictionary generic foreign relationship arbitrary writable default library subclass override representation example instance object property default behavior generic relationship representation object example object implement regular relational object generic reference genericmodelserializer concerned hyperlink something dictionary reverse custom method access generic different register serialize reverse generic framework generic provide custom", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "wichert/pyrad": {"git_readme_keywords": "introduction project license information tracker documentation implementation copyright license example authentication copyright availability akkerman christian installation license copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction license information tracker implementation documentation copyright license example authentication copyright availability akkerman installation license copyright", "pypi_keywords_clean": "radius authentication"}, "pyamg/pyamg": {"git_readme_keywords": "irregular classical predominant algebraic multigrid possible smoothed aggregation instance multilevel technique unknowns documentation support adaptive installation available platform important tutorial geometric information geometric multigrid performance critical library algebraic compatible relaxation sequence experimental support efficiency residual unstructured complexity adaptive smoothed program interface schroder problem", "git_description_clean": "algebraic multigrid solvers python", "git_keywords_clean": "amg solver python multigrid pyamg conda krylov", "pypi_description_keywords": "performance interface classical compatible relaxation algebraic multigrid smoothed aggregation", "pypi_keywords_clean": "algebraic multigrid amg sparse matrix preconditioning"}, "/wfuzz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "scanner injected implementation vulnerability scanner application scanner modular framework payload payload previous install documentation available available download github building facilitate reference application keyword security perform complex understanding documentation documentation different language request application vulnerability concept", "pypi_keywords_clean": ""}, "tarkatronic/django-requestlogging-redux": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "request middleware example logging request current placeholder logging unbound response middleware unbound logging coverage package logging configuration middleware request hyphen information current current request unbound requestfilter configuration example version logging formatter installation request logging", "pypi_keywords_clean": ""}, "cmweiss/geomag": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "magnetic variation declination"}, "nemesisdesign/netengine": {"git_readme_keywords": "python information network status documentation netengine coverage document request abstraction", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute limitation backend protocol copyright abstraction command example documentation capoano permission coverage document authorization software fitness particular install install relative merchantability fitness subject coverage software limited express substantial purpose noninfringement liability contract example specific distribute sublicense federico capoano information network warranty advertising netengine restriction publish distribute request particular purpose connection software specific backend", "pypi_keywords_clean": ""}, "/ebfpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overwrite prevention conversion support follow convention distribution pathname automatic hashtable retireival multiple programming multiple support multiple fortran recursive dictionary", "pypi_keywords_clean": ""}, "sprockets/sprockets-clients-statsd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package application available installed default history available environment variable counter documentation available available version documentation example version history connection install documentation installation available", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-hanaonazure": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package management underlying service management provide feedback restapi description changelog generation management feedback encounter operation python microsoft library resource manager project instance bugfixes compatibility algorithm response incorrect restapi positional default behavior history performance general version optional generator important hanainstance session hanahardwaretypenamesenum hanainstancesizenamesenum azureenum bugfixes initial running operation parameter default python python parameter microsoft response initial general breaking external context manager behavior unrecognized execute callback library complete", "pypi_keywords_clean": ""}, "serprex/pythonaes": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dealertrack/celery-redis-sentinel": {"git_readme_keywords": "schedule availability exception unacceptable implementation application library behavior attempt different sentinel business awesome failover library configure project actual sentinel deployment support sentinel support configuration failover progress license github installation trigger solution subclass software schema application transport sentinel default wrapper support hostname github documentation definition cluster company abstract scalability", "git_description_clean": "redis sentinel broker results backend celery", "git_keywords_clean": "", "pypi_description_keywords": "broker schedule availability exception unacceptable implementation application library behavior attempt different sentinel business awesome failover library configure project actual sentinel deployment support sentinel support miroslav shubernetskiy configuration sentinel broker failover progress license github installation solution subclass broker failover software schema application definition history dealertrack transport sentinel default support hostname github documentation wrapper allows allows trigger cluster company abstract scalability", "pypi_keywords_clean": "celery redis sentinel broker results"}, "pprolancer/flexrest": {"git_readme_keywords": "licence manifesto serialization library validate formencode sqlalchemy accommodate everything implement example formencode library flexible extensibility miniframework something complete comprehensive sqlalchemy installation sqlalchemy various overridable flexible override codebase building tastypie override behavior", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence manifesto serialization library validate formencode sqlalchemy accommodate everything implement example formencode library flexible extensibility miniframework something complete comprehensive sqlalchemy installation sqlalchemy various overridable flexible override codebase building tastypie override behavior", "pypi_keywords_clean": "api rest restful"}, "yunojuno/django-inbound-email": {"git_readme_keywords": "public endpoint simple concern service sendgrid library endpoint project truncate mailtrap filefield configuration install provider configuration branch inbound bounceback mailgun mandrill signal property flow address emailmessage emailmultialternative default principle component project django provider outlook previous version handler django anything parsed parser hosted transactional version support attachment system integrate limited access sendgrid postmark signal current status python mandrill problem installation function pesky sendgrid mailgun original request appropriate object signal receive signal exception check signature postmark mandrill implementation sendgrid instance pluggable configuration sender address request object deployable heroku github production coverage application django inbound inbox irregular service service mandrill authentication receive inbound gotcha require dkim receive django special package provider function django current mechanism character convert check available handle character python significant mismatch signal argument service provider heroku update provider signal process something django unacceptable different django project sendgrid mandrill object mailtrap object original mailtrap inbox", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "public endpoint simple concern service sendgrid library endpoint project truncate mailtrap filefield configuration install provider configuration branch inbound bounceback mailgun mandrill signal property flow address emailmessage emailmultialternative default principle component project django provider outlook previous version handler django anything parsed parser hosted transactional version support attachment system integrate limited access sendgrid postmark signal current status python mandrill problem installation function pesky sendgrid mailgun original request appropriate object signal receive signal exception check signature postmark mandrill implementation sendgrid instance pluggable configuration sender address request object deployable heroku github production coverage application django inbound inbox irregular service service mandrill authentication receive inbound gotcha require dkim receive django special package provider function django current mechanism character convert check available handle character python significant mismatch signal argument service provider heroku update provider signal process something django unacceptable different django project sendgrid mandrill object mailtrap object original mailtrap inbox", "pypi_keywords_clean": ""}, "mpavan/ediblepickle": {"git_readme_keywords": "option function argument refresh option keyword object instance template pickler something addable x sequence position object similar convenient approach contribute check single utility simplest definition python parameter keyword template notation variable refresh keyword generate return reference module instance process refresh contribute binary containing generic decorator checkpoint decoration module variable dictionary containing runtime python bug program change runtime advantage approach function lambda variable caveat cautious lambda function default b b import refresh caveat contain specification f b third argument generate similar lambda important install ediblepickle human friendly lambda object keyword argument standard template recompute specify ediblepickle ediblepickle branch branch installation install configurable computation expensive numerical template convert refresh flush human readable function output making immutable specify refresh reference immutable logger ediblepickle apache function f github instance function lambda something option command complex function something mutable bound argument function process kwargs myfunc dictionary function object instance python storage format function python refresh several checkpoint function accept notation instance bug maintainer expensive computation function generate request bug python import current python module process multiple fresh function argument refresh option f object generator python contain mutable convert something readable instance output function kwargs suitable feature ability different object unpickler mutable object discussion object python imporatant checkpoint expensive apache v boolean option kwargs dictionary template specification", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "option function argument refresh option keyword object instance template pickler something addable x sequence position object similar convenient approach contribute check single utility simplest definition python parameter keyword template notation variable refresh keyword generate return reference module instance process refresh contribute binary containing generic decorator checkpoint decoration module variable dictionary containing runtime python bug program change runtime advantage approach function lambda variable caveat cautious lambda function default b b import refresh caveat contain specification f b third argument generate similar lambda important install ediblepickle human friendly lambda object keyword argument standard template recompute specify ediblepickle ediblepickle branch branch installation install configurable computation expensive numerical template convert refresh flush human readable function output making immutable specify refresh reference immutable logger ediblepickle apache function f github instance function lambda something option command complex function something mutable bound argument function process kwargs myfunc dictionary function object instance python storage format function python refresh several checkpoint function accept notation instance bug maintainer expensive computation function generate request bug python import current python module process multiple fresh function argument refresh option f object generator python contain mutable convert something readable instance output function kwargs suitable feature ability different object unpickler mutable object discussion object python imporatant checkpoint expensive apache v boolean option kwargs dictionary template specification", "pypi_keywords_clean": "decorator checkpoint intermediate results serialization deserialization"}, "lebinh/ngxtop": {"git_readme_keywords": "different default flexible enough nginx default default output nginx access enough configure referer common access useful apache common nginx correct location", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different default flexible enough nginx default default output nginx access enough configure referer common access useful apache common nginx correct location", "pypi_keywords_clean": "cli monitoring nginx system"}, "jaraco/portend": {"git_readme_keywords": "message combination suitable functionality monitor unbound connection nothing function example exception", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message combination suitable functionality monitor unbound connection nothing function example exception", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/google-cloud-texttospeech": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project billing product documentation documentation powerful platform project guides network available speech billing project product documentation library documentation authentication installation", "pypi_keywords_clean": ""}, "staugur/flask-pluginkit": {"git_readme_keywords": "python license author overview documentation \u57fa\u4e8eflask\u7684\u63d2\u4ef6\u5f0f\u5f00\u53d1\u5de5\u5177 factory pattern \u7684\u5b98\u65b9\u63d2\u4ef6 program plugin testcase plugin development installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python license author overview documentation \u57fa\u4e8eflask\u7684\u63d2\u4ef6\u5f0f\u5f00\u53d1\u5de5\u5177 factory pattern \u7684\u5b98\u65b9\u63d2\u4ef6 program plugin testcase plugin development installation", "pypi_keywords_clean": "flask plugin"}, "/oslo-middleware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software documentation functionality middleware library version", "pypi_keywords_clean": ""}, "cfpb/django-cache-tools": {"git_readme_keywords": "keyablemodel basic framework expire documentation related group django", "git_description_clean": "tools make caching easier django", "git_keywords_clean": "", "pypi_description_keywords": "keyablemodel basic framework expire documentation related group django", "pypi_keywords_clean": ""}, "anti1869/aiohttp-autoreload": {"git_readme_keywords": "akaidiot autoreload aiohttp untested version installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "akaidiot instalation autoreload aiohttp untested version development", "pypi_keywords_clean": ""}, "olsoneric/nose-clean-env": {"git_readme_keywords": "purpose plugin plugin prevent plugin", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "purpose plugin plugin prevent plugin clean env", "pypi_keywords_clean": "nose plugins os env environment"}, "Azure/azure-loganalytics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "uninstall installing changelog release initial release microsoft complete provide feedback project changelog release history version uninstall compatibility important feedback encounter version library history initial", "pypi_keywords_clean": ""}, "maniacallabs/bibliopixel": {"git_readme_keywords": "result system bibliopixel", "git_description_clean": "pure python library programming light animations please direct questions support requests google group https issues list reserved actual bugs", "git_keywords_clean": "", "pypi_description_keywords": "result system bibliopixel", "pypi_keywords_clean": ""}, "culqi/culqipy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "api json culqi"}, "moin18/utilspie": {"git_readme_keywords": "contribute documentation utilspie utilspie python inspired itertools inspired package codecov asynchronous utilspie utilspie sensible utility present package utilspie categorized making python installation additional available install implement github feature itertools package python package utilspie something utilspie installation utilspie mention maintainer documentation documentation branch branch python library utilspie available python inspired discussion function python request available python related", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute documentation utilspie utilspie python inspired itertools inspired package codecov asynchronous utilspie utilspie sensible utility present package utilspie categorized making python installation additional available install implement github feature itertools package python package utilspie something utilspie installation utilspie mention maintainer documentation documentation branch branch python library utilspie available python inspired discussion function python request available python related", "pypi_keywords_clean": "utils asyncutils importutils fileutils import file async"}, "pricingassistant/mongokat": {"git_readme_keywords": "pymongo reference inspiration mongokat mongokat documentation mongodb environment github livereload", "git_description_clean": "lightweight mongodb python", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "mongodb"}, "fhcrc/nestly": {"git_readme_keywords": "comparison retrieval possible combination license collection command substitution integration software combinatorial exhaustive cartesian product integrate arbitrary directory cartesian strategy exhaustive repository template substition introductory parameter replacement strategy gallagher hoffman available readthedocs", "git_description_clean": "make use nested directory trees corresponding combinatorial choices parameters", "git_keywords_clean": "", "pypi_description_keywords": "comparison retrieval possible combination license collection command substitution integration software combinatorial exhaustive cartesian product integrate arbitrary directory cartesian strategy exhaustive repository template substition introductory parameter replacement strategy gallagher hoffman available readthedocs", "pypi_keywords_clean": ""}, "/aenum": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "notation multiple suspension position accessible standard namedtuple implementation constant support possible position uniqueenum derived enumeration derived duplicate compatible python global identical implementation namedconstant intflag notation namedconstant identity enumeration enumerated converted ability symbolic advanced decorator", "pypi_keywords_clean": ""}, "redhog/virtualenvtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "virtualenv"}, "/django": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation directory reference information framework development clarified helpful actual deployment channel specific django python contribute django recommend topical pragmatic version", "pypi_keywords_clean": ""}, "rbit/dtls": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "address clienthello efficient implementation addition shutdown behavior presence class sslconnection initial handshake behavior microsoft pydtls implement ubuntu offer stable separate ssl equivalent new object sslconnection constructor security python connection demux goal pydtls python pydtls enhancement available equivalent tcp new socket dtls sslconnection unwrapping pydtls transport layer conjunction asynchronous connection version module ssl added way address family shutdown unwrap class asyncoreechoserver traffic source demux infrastructure package function unwrap return handle packet package dtls directory echo possible exception initial socket demux handshake project sslsocket unwrap actual instance library pydtls invoke protocol udp dtls pydtls broad example source ip datagram accept dtls ssl authentication message sendto openssl ip traffic ssl instance socket function access dtls pydtls datagram support sslconnection bound particular release pydtls python environment preferred module version pydtls connection new bio ssl module access top datagram handshake status loopback interface version version new unknown additional connection receive traffic log various listening socket dtls version dtls tcp library ssl interface used visual studio library standard dtls package pydtls stream fix present addition right authentication user full public sslsocket constructor presence amount return application method server available many handshake handshaking order matter release openssl ssl dtls security dtls microsoft redistributable python standard python runtime user authentication congestion collapse socket useful module demux throughput tcp difficult undertaking client connection traffic ssl sslsocket broad availability design goal interface pydtls openssl level addition version new connection throughput drop deviation transparency simple echo client server primary design sslsocket send rfc cookie security top offer congestion reusable pydtls python interpreter progress run information reason source unavailable incompatible linux default instance class type ssl ubuntu selection difference handshaking general method instance additional platform curve cryptography interfacing ssl unsecured communication network socket bound method client module router tcp ssl forth ssl timeout option ssl accept datagram transport stream datagram phase early echo server readable exception congestion control order prevent used conjunction dtls protocol receive ip connection association library openssl gigabit network performance deviation elliptic curve cookie exchange send recv cpython installation tcp udp endpoint amount packet openssl version timeout detection loop shutdown top document ssl interface performance enhancement present stable module sslconnection ssl difficult undertaking raw traffic original interpreter approach used ssl io layer network protocol status ssl establishment connect sslconnection sslsocket network interface object ssl stable version run used actual certain connection comparison installation absent datagram object unconnected method shutdown udp datagram rfc openssl server client network io asynchronous io connection establishment datagram bio package log relative performance benefit ssl dtls listen installation microsoft asynchronous select respect ip address level operation compatible full version microsoft raw throughput library python receive additional overwrite pydtls version used portable many snippet top stable dtls preference unconnected sendto recvfrom bound socket return c extension connection request accept method desirable fix shutdown call section sslconnection ssl module dtls handshaking packet loss router demux used cpython pydtls release mode initial particular client install pypi socket unconnected sslconnection shutdown cryptography configuration example router right thing conjunction network handshaking protocol asynchronous socket compatible unconnected socket early handshaking socketserver threadingtcpserver latter dtls easy interface dtls class used message authentication version addition redistributable runtime used pydtls callback check ready receive standard ssl listening mode instance network interface tls openssl dll sslconnection class library version conjunction pydtls framework socketserver readable result instance handshaking interface remote socket used secrecy layering security initial release foreign function available ssl python library renegotiation ssl unavailable callback pydtls encryption server shutdown protocol dtls support software stack select loop inconvenient reason version openssl function ssl identical interfacing improve performance tcp stream loopback imperfect openssl library initial listening interactive interface operate datagram studio version demux package unconnected ready runtime library shutdown method overwrite different client link throughput general openssl requirement pydtls many popular multiple compatibility pydtls installation requirement socket preference socket efficiency call unwrap dtls rfc required server framework pydtls version sslconnection module control udp address information package sslconnection separate network pydtls functionality usage commit branch security encryption used client shutdown sslsocket pydtls available section rfc original listening layer security call dtls establishment reusable python familiar function library sslsocket object design pydtls emulation instance handshake network server implementation request exception performance udp ssl performance benefit server available interface run dtls operation call sslconnection pydtls user openssl available microsoft c immaterial order phase efficient important installation openssl sslconnection interactive performance exchange phase server authentication public interface unwrap method particular require bound network installation install suffer sslconnection interface cpython version option dtls callback c package ssl server sequence standard library stack behavior tls preferred overall association familiar interface overhead ssl directory client socket handler new ephemeral user selection shutdown unwrapping proper connection openssl microsoft clienthello datagram ssl type protocol udp framework compatibility rfc python pydtls package used unsecured extension module openssl particular server reachable interoperate stream c runtime dtls general welcome release connect method pydtls commit stream content ubuntu example module python familiar ssl unique ssl content dtls platform way compatible example python pydtls callback difference demux unwrap invoke authentication udp", "pypi_keywords_clean": ""}, "minrk/escapism": {"git_readme_keywords": "argument default escapism simple character optional much", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reason install", "pypi_keywords_clean": ""}, "/python-cloudkittyclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extension available cloudkitty cloudkittyclient", "pypi_keywords_clean": ""}, "nicolargo/glances": {"git_readme_keywords": "monitoring support simple monitor infrastructure version optional favorite package master branch package console development website question restful export cookbook available command version python nicolas hennion package manager support hdd monitoring module quicklook display graph export freebsd install format export module feature zeromq python statsd console docker repository install influxdb export version downgrade container console console android monitoring information android device method package system amount monitoring install package minimum python linux complete documentation location project support action console upgrade application available script feature console client source console python available zeromq export puppet install q gateway system couchdb export installation several plugin gpu psutil binary nicolargo nicolas upgrade minimum official q console pwd plugin export ansible remote monitoring temperature monitoring hennion nicolargo external elastic search support influxdb dockerfile console binary package nicolas license please contribute monitor android console install information system specify something package install restful module graph gpu plugin binary installation glancesautoinstall script device application present configuration device source module docker statsd export author nicolas container available github production python support support elastic search export summary console console architecture please upgrade install script action script plugin python module prometheus option console browser interface information specific rouyer puppet command console awesome cookbook module hdd available google hdd temperature termux device standalone python please version console available network stable version lgpl version documentation complete version freebsd source install terminal prometheus export server contribute docker monitoring dedicated version install python version available monitor console server console available python monitor server server follow procedure install binary homebrew console directory weapon module couchdb install psutil version license environment variable x cassandra export docker funny centos linux script follow install example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "monitoring support simple monitor infrastructure version optional favorite package master branch package console development website question restful export cookbook available command version python nicolas hennion package manager support hdd monitoring module quicklook display graph export freebsd install format export module feature zeromq python statsd console docker repository install influxdb export version downgrade container console console android monitoring information android device method package system amount monitoring install package minimum python linux complete documentation location project support action console upgrade application available script feature console client source console python available zeromq export puppet install q gateway system couchdb export installation several plugin gpu psutil binary nicolargo nicolas upgrade minimum official q console pwd plugin export ansible remote monitoring temperature monitoring hennion nicolargo external elastic search support influxdb dockerfile console binary package nicolas license please contribute monitor android console install information system specify something package install restful module graph gpu plugin binary installation glancesautoinstall script device application present configuration device source module docker statsd export author nicolas container available github production python support support elastic search export summary console console architecture please upgrade install script action script plugin python module prometheus option console browser interface information specific rouyer puppet command console awesome cookbook module hdd available google hdd temperature termux device standalone python please version console available network stable version lgpl version documentation complete version freebsd source install terminal prometheus export server contribute docker monitoring dedicated version install python version available monitor console server console available python monitor server server follow procedure install binary homebrew console directory weapon module couchdb install psutil version license environment variable x cassandra export docker funny centos linux script follow install example", "pypi_keywords_clean": "cli curses monitoring system"}, "/python-shout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "demonstration icecast shoutcast documentation", "pypi_keywords_clean": ""}, "GuifiBaix/yamlns": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python regular python command original precision succesive mapping javascript complex namespace command output template several convenient insertion extension extract pythonic scheletton example dictionary", "pypi_keywords_clean": ""}, "jithurjacob/win10toast": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "development installation displaying", "pypi_keywords_clean": ""}, "/jenkinsapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "revision ability development install limitation johansen jenkinsapi connection software github project library copyright development project peilicke saschpe support license install documentation project documentation command fadhley rockman predecessor environment development package manager bravejolie bradley fitness particular maksimov william subject installation production install project virtualenv merchantability fitness important software express substantial limited jollychang interface library interface conventional purpose noninfringement nestedviews directory software software support project continuous integration virtual environment manager ubuntu package development installed liability permission contract github tracker distribute sublicense protection kohsuke kawaguchi ability technique lutsenko behersky warranty restriction example jenkinsapi available github publish distribute deletion particular purpose excellent complete installation project install package jenkinsapi example", "pypi_keywords_clean": ""}, "neuman/django-shannon": {"git_readme_keywords": "django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django media storage"}, "/checklistdsl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "preparation checklistdsl", "pypi_keywords_clean": ""}, "danpaquin/cbpro": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "potential initialization mongodb collection deposit withdraw multiple library development authenticated authenticatedclient separate support fitness particular following message paginated deposit previous request authentication keyword publicclient withdraw websocketclient illustration websocketclient mongodb parameter release refactor buggy interface iteration connection software enhanced functionality compatibility limitation account withdrawal example workflow withdraw undocumented project argument license compatible software orderbook undocumented abstraction paginated framework subscribe multiple repository function product subscribe receive overhaul pagination necessary typical wsclient mywebsocketclient project directory endpoint functionality cancelall collection websocketclient original functionality websocketclient trading undocumented passing merchantability fitness follow project coinbase planning integrate liability contract additional functionality undocumented enhanced available everyone warranty particular purpose pagination official gathering paginated paginated maximum websocket connection documentation trading advantage subscribe websocket paginated authenticated limited express purpose noninfringement assistance refactor project initial interface template updated coinbase mywebsocketclient", "pypi_keywords_clean": "gdax orderbook trade bitcoin ethereum btc eth client api wrapper exchange crypto currency trading coinbase pro prime coinbasepro"}, "sammchardy/python-kucoin": {"git_readme_keywords": "welcome unofficial authentication response python wrapper simple documentation implementation quick register account register enable sandbox register kucoin library source unofficial python response exception implement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "kucoin exchange rest api bitcoin ethereum btc eth kcs"}, "mintchaos/typogrify": {"git_readme_keywords": "particular attention utility typogrify project django template potential opening command frameworks wrapped fashion multiple capital potential closing attention package environment installation dependency directory optional template whitespace various experimental support conjunction environment importing django project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "particular attention utility typogrify project django template potential opening command frameworks wrapped fashion multiple capital potential closing attention package environment installation dependency directory optional template whitespace various experimental support conjunction environment importing django project", "pypi_keywords_clean": ""}, "/plyer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "limitation platform unknown copyright documentation unknown classifier classifier natural fitness particular merchantability fitness subject audience software express substantial software description purpose noninfringement android liability contract language english permission distribute sublicense classifier development warranty natural language restriction publish distribute english classifier particular purpose connection software software software", "pypi_keywords_clean": ""}, "/liskov": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subtype constrain declare subtype utility utility argument metaclass python example subtype example subtype instance elephant cd liskov python declare generator function lambda liskov utility hierarchy example substitution principle install royalelephant feedback improvment version python solid supertypes certain respect python development barbara liskov several albinoelephant version python version installation solution example example behavioural install liskov function import python install metaclass python metaclass generator class module different expressiveness subtype function preference subtype respect liskov principle program supertype decorator python python python liskov python improvment launch liskov jeanette example python import function decorator liskov substitution broad", "pypi_keywords_clean": ""}, "praekelt/django-sites-groups": {"git_readme_keywords": "", "git_description_clean": "organize sites django sites framework groups", "git_keywords_clean": "", "pypi_description_keywords": "foundation initial release compatibility django changelog standard template django compatibility", "pypi_keywords_clean": ""}, "quantopian/pyfolio": {"git_readme_keywords": "contribute backend bayesian tearsheet trading algorithm comprehensive notebook execute pyfolio pyfolio zipline outside github install pyfolio library performance quantopian dependency analysis financial channel support directory performance trading bayesian virtual environment repository development development algorithm example various individual pyfolio python matplotlib python library jupyter notebook installation install source strategy pyfolio installation navigate pyfolio", "git_description_clean": "portfolio risk analytics python", "git_keywords_clean": "", "pypi_description_keywords": "library performance performance overview individual analysis financial comprehensive performance overview portfolio", "pypi_keywords_clean": ""}, "/ryu": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "paramiko license support install database available optional speaker installation building software management control application openflow netconf document sqlalchemy various networking framework console protocol confirm network management official ncclient netconf", "pypi_keywords_clean": "openflow openvswitch openstack"}, "jameswenzel/pylyrics3": {"git_readme_keywords": "album scraper updated python object installation install particular python installation return", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "lyrics"}, "hyperturtle/stache": {"git_readme_keywords": "default stuff pusher template produce default block stache element array timeline partial object current section section produce existence string useful produce install imply section dynamic render produce reason template render unescape unescape referencer existence watch override script javascript support stuff ability compile block supply mustache future opposite section section default convention similiar current pystache possibility template script compile object override template object current element python everything global iterate array section block frontend block element current context pystache implementation supply default language agnostic compile javascript lambdas closing codebase considerabley grok populate block useful template array block default inverted block block stuff equivalent render default welcome efficient", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "MatMaul/pynetgear": {"git_readme_keywords": "python connected centria netgear router admin app pynetgear router password connection netgear modern netgear false specify optional username router return password optional reverse engineering netgear router traffic app description network netgear router netgear information router device signal function remote netgear model netgear netgear python admin webinterface wndrmac netgear https example slower optional connected ssid pynetgear pynetgear signal ip connected network install pynetgear indicate success console false indicate precedence wired connection installation install netgear wndrmac remote management control netgear netgear centria", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/coconut": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coconut disposal coconut interpreter programming coconut coconut coconut anything added website sponsor specific feature possible coconut documentation opening command functional programming information coconut sponsor pythonic functional coconut tutorial problem coconut github collective backer elegant pythonic coconut browser coconut variant contributor simple elegant", "pypi_keywords_clean": "functional programming language compiler match pattern algebraic data data type data types lambda lambdas lazy evaluation lazy list lazy lists tail recursion call recursive infix function composition compose partial application currying curry pipeline pipe unicode operator operators frozenset literal syntax destructuring assignment reduce fold takewhile dropwhile tee consume count matcherror datamaker makedata addpattern prepattern iterator fmap starmap case none coalesce coalescing reiterable scan groupsof statement memoize memoization backport typing"}, "/alabaster": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "responsive configurable documentation alabaster dependency install development alabaster alabaster compatible", "pypi_keywords_clean": ""}, "getsentry/raven": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "popular python application support", "pypi_keywords_clean": ""}, "princehaku/pyrailgun": {"git_readme_keywords": "\u5168\u529f\u80fd\u7b80\u5355\u4f8b\u5b50 json\u5bf9\u8c61\u8bf4\u660e \u5728\u6ca1\u6709x\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884cwebkit\u5185\u6838\u6293\u53d6 \u4f7f\u7528requests\u6293\u53d6\u7f51\u9875 \u4f7f\u7528webkit\u5185\u6838\u6293\u53d6\u7f51\u9875 \u901a\u914d\u7b26\u548c\u591a\u9875\u7801\u6293\u53d6 \u53c2\u6570\u6682\u5b58\u548c\u4f20\u9012 \u652f\u6301\u4ecejson\u6587\u4ef6\u8bfb\u53d6\u6293\u53d6\u4efb\u52a1 python\u5b57\u5178\u6570\u636e\u6e90\u65b9\u5f0f \u4e00\u4e2acrash\u95ee\u9898 \u53bb\u9664yaml\u7684\u652f\u6301", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infomation qtwebkit crawler framework crawler optional javascript specific descrip crawler python crawler", "pypi_keywords_clean": ""}, "Syntaf/travis-sphinx": {"git_readme_keywords": "deploy process simple click generate deployment example standalone script clipboard repository deployment automate configuration script master branch tedious specify custom example dnppy personal access dnppy repository configuration generate revision deploy master sphinx familiar constant example github building installation production script script documentation standard number specify deployment repository tutorial setup branch cadquery custom deployment custom repository actual documentation enviroment variable documentation travis travis environment github account example configuration travis hassle building deploy repository generate actual custom deploy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "documentation"}, "traviscline/gevent-zeromq": {"git_readme_keywords": "nonblocking operation \u00f8mq compatibility descriptor upstream library current overhead license \u00f8mq current greenlet available compatible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nonblocking operation \u00f8mq compatibility descriptor current overhead license \u00f8mq current greenlet available library compatible", "pypi_keywords_clean": ""}, "tsroten/fcache": {"git_readme_keywords": "introduction buffer support simple install package documentation documentation tracker optional overview information module feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction buffer support simple install package documentation documentation tracker optional overview information module feature", "pypi_keywords_clean": "cache file serialize"}, "serverops/laracrypt": {"git_readme_keywords": "encryption usage", "git_description_clean": "laravel compatible encryption", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "encrypt encryption laravel"}, "sixty-north/multiprocessing-on-dill": {"git_readme_keywords": "smallshire serializer lambdas everything lambdas identical standard serializer possible rocamonde juancarlosrocamonde attribute determine additional useful project friendly standard library", "git_description_clean": "friendly fork python standard library multiprocessing package uses dill instead pickle", "git_keywords_clean": "", "pypi_description_keywords": "serializer lambdas everything lambdas identical standard serializer possible attribute additional version determine project friendly standard library determine version", "pypi_keywords_clean": "multiprocessing parallel"}, "adamchainz/multilint": {"git_readme_keywords": "standard multiple python project check default install quality python compatibility require section wrapper multilint installation example configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support positional potential default python compatibility python process configure standard project argument check install default check config header history installation example multiple python python support support invoke particular release wrapper support python modernize modernize multilint function multilint codebase support support quality require section multilint", "pypi_keywords_clean": "lint pycodestyle codestyle mccabe"}, "litl/rauth": {"git_readme_keywords": "service consumer library copyright license available contribution example documentation convenient connection service container project welcome coverage example authentication session exchange application twitter connection initialization nothing documentation documentation twitter timeline request submit contribute project documentation available", "git_description_clean": "python library oauth ofly", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "oauth rauth requests"}, "wesm/feather-format": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "available platform dataframe python interface column", "pypi_keywords_clean": ""}, "brunobord/tdaemon": {"git_readme_keywords": "keyword phpunit example argument argument example phpunit keyword default result advanced jelix keyword archive project symfony keyword careful please keyword django command append specific executable argument programm available default program change keyword keyword manual documentation installation command execute additional argument filesize command current content important system directory current directory django keyword daemon keyword symfony directory current specifig permission program manual parameter option require specific sphinx keyword keyword jelix require confirmation keyword sphinx program example directory please", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "content directory", "pypi_keywords_clean": "test testing noestests django"}, "CompileInc/cappy": {"git_readme_keywords": "specific folder platform specific temporary platform optional default install default temporary compress folder optional cachingproxyinpython default optional", "git_description_clean": "proxy python simple file based python http proxy", "git_keywords_clean": "cappy http proxy python requests", "pypi_description_keywords": "cachingproxyinpython file sharebear", "pypi_keywords_clean": "cappy proxy http"}, "pytest-dev/pytest-metadata": {"git_readme_keywords": "platform platform metadata password metadata collection development contribute python import available metadata platform darwin metadata metadata metadata assert multiple contribute metadata pytest metadata access metadata header pytest license darwin python manage running config plugin fixture command version project cachedir metadata monitor progress description example metadata plugin version follow pypy installation python cachedir python version config hasattr fixture python upstream project update driver terminal report commandline pytest handy pytest verbose hasattr config session metadata metadata access version today install development release update local additional metadata continuous integration python pypy metadata displayed pipenv install attribute object progress available installed install running import pytest python python integration environment assert metadata version platform plugin installation install travis access branch update request pytest metadata present example python environment additional displayed terminal release version report header metadata python", "git_description_clean": "plugin accessing test session metadata", "git_keywords_clean": "pytest metadata plugin", "pypi_description_keywords": "platform platform metadata password metadata collection development contribute python import available metadata platform darwin metadata metadata multiple contribute metadata access metadata darwin python license config plugin manage running fixture command cachedir metadata description example pypy installation python cachedir python version config hasattr fixture python driver terminal report hasattr config session metadata metadata access install development additional metadata continuous integration attribute object python pypy metadata displayed pipenv install installed install running commandline python python integration environment version platform plugin installation install travis access displayed terminal report header handy metadata present example python environment additional metadata python metadata plugin verbose", "pypi_keywords_clean": "pytest metadata"}, "jmichalicek/django-mail-viewer": {"git_readme_keywords": "python elasticsearch mongodb package cookiecutter mongodb separate redis backend documentation backend redis specific display plaintext specific functionality viewer database backend customization display development django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package cookiecutter elasticsearch mongodb backend cookiecutter history django python specific functionality plaintext development mongodb separate check documentation quickstart history current coverage customization display display django python encoding django functionality allow customization release database backend documentation full release pypi redis specific full documentation redis backend viewer", "pypi_keywords_clean": "django email"}, "cosmin/stashy": {"git_readme_keywords": "python iterate project branch access atlassian bitbucket python installation request branch permission", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python iterate project branch access atlassian bitbucket python installation request branch permission", "pypi_keywords_clean": ""}, "nickstenning/honcho": {"git_readme_keywords": "health detail explanation procfile configure build status license honcho honcho version honcho python documentation license procfile optional python redis version consult documentation honcho honcho", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "health detail explanation procfile configure build status license honcho honcho version honcho python documentation license procfile optional python redis version consult documentation honcho honcho", "pypi_keywords_clean": "sysadmin process procfile"}, "/fhurl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "lukaszb fhurl command", "pypi_keywords_clean": ""}, "/wxpython-common": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wxpython wrapper toolkit library wxpython variety", "pypi_keywords_clean": "gui wx wxwindows wxwidgets"}, "gabrielfalcao/plant": {"git_readme_keywords": "introduction software instance potential current library personal affection filesystem relative manipulation quick introduction possible represent", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lobziik/rlog": {"git_readme_keywords": "simplified version redishandler redislisthandler installation current handler formatter keyword argument argument jsonformatter documentation formatter keyword subsequent logstash default redishandler jsonformatter package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "redis"}, "axiom-data-science/paegan-transport": {"git_readme_keywords": "roadmap kwilcox geojson wilcox default bathymetry shoreline documentation functionality lagrangian transport virtualenv available appropriate crosbyar acrosby controller shoreline virtualenv installation installed", "git_description_clean": "transport module paegan", "git_keywords_clean": "", "pypi_description_keywords": "roadmap kwilcox geojson wilcox default bathymetry shoreline documentation functionality lagrangian transport virtualenv available appropriate crosbyar acrosby controller shoreline virtualenv installation installed", "pypi_keywords_clean": ""}, "cjoakim/m26": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "elapsedtime standard formula runwalkcalculator version version kilometer algorithmic formula framework coverage distance elapsedtime initial production changelog version installation coverage initial", "pypi_keywords_clean": "calculator running cycling swimming mph"}, "b1naryth1ef/holster": {"git_readme_keywords": "day utilties", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/python-linkedin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debugging install library service consecutive request linkedin python helper python library application nothing addition python linkedin lightweight interface actual project screen access application authentication linkedin website group company harmful python assign access network invitation application interface linkedin python interface something linkedin profile application instance nothing harmful protocol authentication python information application secret instance python python quick search quick helper browser proper installation install access object flow prevent python interpreter authorization method profile group query", "pypi_keywords_clean": "linkedin python"}, "/createsend": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "createsend campaign monitor email"}, "armenzg/taskcluster-s3-uploader": {"git_readme_keywords": "temporary taskcluster administrative", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "temporary taskcluster administrative", "pypi_keywords_clean": ""}, "/newrelic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package gunicorn uwsgi performance monitoring bash gunicorn python import copyright c python proprietary useful distribution proprietary software bash integrate license traffic slow party configuration slow database quick server monitoring bash validate license agreement collector service restart python experience server installation online generate python script integrate production environment bash check application python application copyright copyright connection application performance recommended software please visit application control environment variable modify everything python startup script startup command scalability", "pypi_keywords_clean": ""}, "/dogstatsd-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "datadog data statsd metrics"}, "/venusifork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "inheritance venusian argument narrative context venusian documentation information section documentation argument method install nonexistent attribute depend superclass subclass custom ignore available attribute venusian venusian superclass receive attribute available method progress proper possible online documentation situation fragile handle documentation ignore default ignore decorated argument method argument module venusian normal global framework inappropriate narrative documentation superclass function worry prevent corner import python jython venusian library venusian proper directory ignore function attribute attachinfo decorator additional check single directory package online attachinfo object receive subclass adecorator recursive python compatibility invoke venusian directory package original sucky declaration callback github resource application venusian attachment subclass superclass decorator separate initial release import fixture python python painted corner introspect module venusian decorator module remove genuine attachment happen happen change pyramid attempt attributeerror superclass venusian exception documentation additional change right pypy undecorated subclass fixture barfs support python proper version suppress object attempt ignore", "pypi_keywords_clean": "web wsgi zope pylons pyramid morepath"}, "mrahnis/drapery": {"git_readme_keywords": "package drapery directory anaconda scratch elevation documentation necessary convert drapery console distribution execute library installation distribution drapery drapery", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package drapery directory anaconda scratch elevation documentation necessary convert drapery console distribution execute library installation distribution drapery drapery", "pypi_keywords_clean": "survey conversion"}, "/spoon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "server"}, "/ordereddict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "substitute performance", "pypi_keywords_clean": ""}, "scailer/django-social-publisher": {"git_readme_keywords": "twitter facebook content facebook tumblr vk ability format author tumblr \u0432\u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0435 response vk pluggable system extension module official vk client", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "content pluggable system extension ability", "pypi_keywords_clean": ""}, "/repoze-workflow": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package dependency arbitrary keyword security configuration required documentation overhaul tarball multiple incomplete tarball statemachine workflow coverage internal transition information changelog", "pypi_keywords_clean": "web repoze workflow"}, "cmap/cmappy": {"git_readme_keywords": "problem repository documented institute welcome documentation citation harvard documentation research connectivity", "git_description_clean": "assorted tools interacting files connectivity map broad institute", "git_keywords_clean": "gctx gct grp pandas gene genetics", "pypi_description_keywords": "available documentation connectivity", "pypi_keywords_clean": "gct gctx connectivity map cmap broad institute"}, "hiidef/speedparser": {"git_readme_keywords": "default cleaning cleaning character backup library speedparser speedparser feedparser reimplementation cleaning algorithms accessible similar identical outside optional compatible tollerance protection various detection similar feedparser application normalization algorithms flexible cleaning compatibility alternative similarity document various bottleneck consume information different identical protection problem identical similar speedparser feedparser", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default cleaning cleaning character backup library speedparser speedparser feedparser reimplementation cleaning algorithms accessible similar identical outside optional compatible tollerance protection various detection similar feedparser application normalization algorithms flexible cleaning compatibility alternative similarity document various bottleneck consume information different identical protection problem identical similar speedparser feedparser", "pypi_keywords_clean": "feedparser rss atom rdf lxml"}, "disko/js-jquery-tablednd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction framework directory integration release original", "pypi_keywords_clean": ""}, "pedrotgn/pyactor": {"git_readme_keywords": "synchronous documentation tutorial asynchronous library identify communication simple lightweight communication various version performance coverage example machine pyactor python system transparent health tutorial pyactor directory project tutorial middleware object message system lightweight minimalistic rabbitmq message architecture middleware pyactor minimalistic python installation install method pyactor minimalistic concurrence classic xmlrpc", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "synchronous documentation tutorial asynchronous library identify communication simple lightweight proxy communication various version performance coverage example machine pyactor python system transparent health tutorial pyactor directory project tutorial middleware object common message system lightweight minimalistic rabbitmq message architecture middleware pyactor minimalistic python installation install method pyactor minimalistic concurrence classic xmlrpc documentation status", "pypi_keywords_clean": ""}, "ourbest/py-dev-common": {"git_readme_keywords": "simple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ur1katz/casttube": {"git_readme_keywords": "remove video script casttube casttube interact youtube install screen launch youtube chromecast playlist video library chromecast youtube", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "remove video script casttube casttube interact youtube install screen launch youtube chromecast playlist video library chromecast youtube", "pypi_keywords_clean": "youtube chromecast"}, "dfunckt/rules": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ask change syntactic sugar python django python call module functionality maintain support useful argument decorator view permission versatile decorate licence copyright convention help model enabling delete book order define function function fitness particular notice permission liable claim django citizen website current equal version define first import anything functionality admin action contract add authentication much anything admin admin dashboard python logger circular bash permission maximum managing shared view responsible information refer storage arbitrary anything whole callable class binary maximum flexibility generic framework database figure valid duration example specific distribute sublicense therefore specific object autodiscover minor active individual restriction mixin django instance authorization permission object current request general advice refer predicate couple template unchanged connection software return condition group sublicense sell access predicate complete advanced kind view predicate default duration invocation limitation evaluated setting integration invocation authorization django implement define object check powerful app method django split project django permission hereby view method project website permission app callable simple callable predefined eg passing django context storing shared authorization backend picked authorization permission new project hand database copy modify citizen seamless evaluation exist view decorator predicate convenient call method difference perform action noninfringement event sugar matter log message django first couple predicate instance important predicate log warranty kind keyword argument underlying generic efficient smart customise object admin admin python manipulate whole app django add default shared django admin software permit standalone library delete author member perspective authorization new django remove python template available class copyright notice log debug python awesome evaluated help passing keyword body refer individual predicate change permission python predicate several predefined need mess moment reliable view mixin import startup context new licence akis kesoglou predicate callable maintain object thing example timeline awesome combining console logger partial predicate evaluation python usage custom subclass invocation context permission instance python update passing callable instance logger active module documentation python add condition check object admin seamless integration similar generic form complex graphs python instance library contexts john django equivalent provide order old behaviour context simple subject merchantability fitness copy software reference predicate result specify predicate suppose property common default authentication view change permission book authorize helper function return book pip new predicate factory exception method permission refer module integration django provide integration top liability context storage behaviour admin setup compatibility django original predicate handy django provide specific access permission advanced need evaluated ask permission integrate django action permission notice module python customise model instance particular purpose new context debug information unique result original adhere django first anything provide different kind express predicate return charge person permission perform backend couple section django django default different ask function body eg debug level positional action object property factory available good django first way decorator accessible smart need single attribute specific django level logger python limited substantial framework provide authentication backend suppose requirement decorator helper provide authorization app example python preserve purpose noninfringement available django obvious fifth django ask support python book author need provide book simple add authorization admin support predicate function define predicate python information different useful useful django project generic helper example equivalent information decorator kesoglou permission publish distribute return predicate useful function predicate need software software pass function refer", "pypi_keywords_clean": ""}, "gtaylor/qtfaststart": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download limitation streaming quicktime execute copyright install documentation trouble ffmpeg fitness particular history merchantability fitness subject virtualenv software limited express substantial purpose noninfringement directory liability contract permission distribute sublicense information friendly warranty program restriction publish distribute particular purpose official connection software compilation particular software software", "pypi_keywords_clean": ""}, "/neutron-lib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software repository license documentation", "pypi_keywords_clean": ""}, "avakar/pytoml": {"git_readme_keywords": "package interface standard project install interface standard package package function version decoded submodule", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interface standard package function install interface standard package version decoded submodule", "pypi_keywords_clean": ""}, "/django-ajax-search": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable documentation additional support library version example project project example installation distribution django", "pypi_keywords_clean": ""}, "/pbr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction declarative configuration openstack possible license license apache python packaging configuration implementation apache license library library library license version reusable library version python important useful sensible configurable different sensible default version documentation distribute repeatable", "pypi_keywords_clean": ""}, "google/ipaddr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard backport ipaddress", "pypi_keywords_clean": ""}, "/python-pygaze": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/multistructlog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "structlog message formatter library structlog standard library destination section handler section default empty standard logging loglevel default substantial timestamp loglevel logging specify section wrapper multistructlog module function handler overridden dictionary individual parameter integer object console specify output specify", "pypi_keywords_clean": "multistructlog structlog multiple backends"}, "mikecules/bscodetabs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bootstrap consecutive plugin extension", "pypi_keywords_clean": ""}, "inovatho/yboss": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation documentation install ybosspy history release", "pypi_keywords_clean": "yboss"}, "gleitz/howdoi": {"git_readme_keywords": "default programming stackoverflow default special howdoi howdoi development checkout available howdoi howdoi instant command installation github programmer example homebrew distraction access previous install unofficial functionality directory something similar integration available howdoiurl environment command official workflow howdoi console variable colorize codebase environment variable browser snippet feedback vanilla configuration benjamin gleitzman", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bottom default friendly answer programming stackoverflow default special howdoi howdoi development checkout available howdoi multiple library howdoi instant colorization message question performance caching project output default answer compatibility executable updated caching functionality updates updates command additional updates caching localization support question answer installation programmer example homebrew distraction python access previous install unofficial certificate validation something similar integration available support python howdoiurl environment google command official markdown syntax howdoi answer workflow howdoi caching updates console variable colorize environment variable browser colorize output updated caching friendly answer display benjamin gleitzman", "pypi_keywords_clean": "howdoi help console command line answer"}, "JosephCottam/abstract-rendering": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "doceme/spidev": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "transfer buffer protocol select polarity pattern python compatibility changelog convert numpy multiple reactivated python module project instance license support transaction similar performance example dougie lawson python buffer loopback arbitrary kernel uathored volker disable", "pypi_keywords_clean": ""}, "/cloudcix": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cloudcix library cloudcix project scalable cloudcix support information cloudcix install different version python overview python recommend upgrade upgrade support account cloudcix account installation", "pypi_keywords_clean": "cix"}, "/gdata": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "service sufficient functionality picasa google health client library youtube python client protocol service migration notebook google document service atompub interact google example client publishing protocol functionality search google webmaster shopping google google finance google content google calendar marketplace google library google", "pypi_keywords_clean": ""}, "tulsawebdevs/multigtfs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project check upgrade download initialize particular environment compatible geodjango python compatibilty support follow follow django example project whitespace commas multiple archive columns status multigtfs project import export spatial validation migrate codebase database import folder codebase django memory export handle future support django coverage travisci scenario original version python development production version number february django handle geodjango postgresql handle latitude initial django support django django python python support geodjango environment variable multigtfs django geodjango changelog significant django compatibility export", "pypi_keywords_clean": "django gtfs"}, "biosustain/potion-client": {"git_readme_keywords": "powerful support example authentication interface description extension pagination installation", "git_description_clean": "python client apis written", "git_keywords_clean": "", "pypi_description_keywords": "powerful support example authentication interface description extension pagination installation", "pypi_keywords_clean": ""}, "seanbrant/requests-wsgi-adapter": {"git_readme_keywords": "python import import import", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python import import import", "pypi_keywords_clean": ""}, "ox-it/sharepoint": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic person method method library utility password sharepoint support document second variable stable version opener username username password development install lxml password python install debian ubuntu output install install package manager password format installation sharepointsite opener python install import sharepointsite format password sharepoint python library sharepoint import object command sharepoint support method appropriate manipulate sharepoint install debian install sharepoint", "pypi_keywords_clean": "sharepoint"}, "Birdback/manage-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python environment definition friendly default definition overridden installation quickstart positional environment variable environment environment downside variable enforce argument definition decorator invocation argument argument possible", "pypi_keywords_clean": ""}, "/distributed": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "distributed distributed computation", "pypi_keywords_clean": ""}, "mozilla/django-mozilla-rna": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dcramer/mock-django": {"git_readme_keywords": "python querysetmock certain django mocking certain object django behavior convince django library mocking virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python querysetmock certain django mocking certain object django behavior convince django library mocking virtualenv", "pypi_keywords_clean": ""}, "keis/base58": {"git_readme_keywords": "bitcoin network implementation compatible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "inonit/drf-haystack": {"git_readme_keywords": "framework support integration haystack spatial framework installation searching experimental django haystack router haystack django library support autocomplete documentation available", "git_description_clean": "haystack django rest framework", "git_keywords_clean": "", "pypi_description_keywords": "haystack order", "pypi_keywords_clean": ""}, "legnaleurc/wcpan-worker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "priority support asynchronous", "pypi_keywords_clean": ""}, "/maxminddb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "descriptor download address database pypy python maxminddb module description available module caller responsibility object look source directory python module maxmind service argument installing extension method return service specific library available thrown look database standard cpython python c python implementation description python module return issue maxmind please contact db binary extension library python reader installation db python reader optional address address contain record extension memory address method object method format database corrupt extension maxmind database memory database dictionary return database database contain c extension look invalid function obtained database method object please report maxmind db invalid thrown return example c library order default optional c object contact assistance address second argument support please", "pypi_keywords_clean": ""}, "cisagov/pshtt": {"git_readme_keywords": "office management domain example domain preload install strict transport mozilla hostname canonical pshtt corporate proxy federal executive domain download promote adoption incomplete domain behavior logic domain record https common enforce https press foundation http domain national laboratory project public request unknown search endpoint domain domain dedication chrome preload https downgrade valid significant guidance service maintain detect request endpoint canonical comply memorandum default https domain column csv source freedom valid https hostname validation domain invalid csv output domain checked module installed factor public redirect domain source dhs technical management budget laboratory various observed redirect directive department equal intent judgment header present installed module secure domain project issue copyright related present endpoint public suffix https default field search result redirect logic endpoint repository installed support https assist http redirect encryption major domain redirect valid certificate previous validation domain csv general service immediate domain enterprise federal meaning homeland security detection lawrence http different specify adoption https default https balter significant disable feature several isps download factor public domain residential example domain https canonical python python https public isps behavior domain preload ready executive branch national cybersecurity encompass pull request federal government endpoint redirect http strict scoring checked domain csv csv certificate hostname united header canonical security national blackhole inconsistent universal public transport security canonical https domain http https https https encryption endpoint intent input https endpoint freedom press public web domain https domain domain dashboard push collaboration department feature several domain strong department homeland https downgrade ability service administration domain valid copyright interest docker optional canonical endpoint", "git_description_clean": "scan domains return data based https best practices", "git_keywords_clean": "https hsts", "pypi_description_keywords": "full office management value response domain truststore domain domain example domain preload server version install strict transport mozilla hostname canonical pshtt corporate proxy federal executive domain download promote adoption general information incomplete domain behavior logic domain record https common collaboration cyber enforce https press foundation http domain national laboratory domain certificate project public agency national request unknown search stored uncommon endpoint domain domain dedication chrome preload downgrade valid significant guidance header certificate standard isps service maintain infrastructure security detect request flag equal endpoint canonical domain server comply memorandum default server header https domain column csv information ip https lock source freedom valid https hostname validation domain invalid csv output domain checked module installed factor public redirect domain way canonical source dhs technical management budget laboratory various observed redirect directive department equal intent custom truststore judgment header present installed module secure purpose field domain project issue copyright related header response present endpoint flag domain public suffix https default client authentication field domain stored redirect logic search result endpoint repository installed support https assist http redirect encryption major domain redirect valid certificate previous validation domain csv general service ip domain immediate domain enterprise federal field flag meaning homeland security detection lawrence http different specify adoption https default https disable feature domain custom download factor several isps public domain example domain authentication https https canonical unexpected exception python python https public canonical domain behavior domain preload ready executive branch national cybersecurity security agency encompass pull request federal government endpoint redirect http strict networks standard scoring checked domain csv csv certificate hostname united intermediate certificate header canonical blackhole inconsistent universal public transport security canonical https certificate canonical domain http domain purpose https https https encryption endpoint intent input https endpoint freedom press public web domain https domain domain dashboard push feature several endpoint field domain strong department homeland https downgrade ability cyber infrastructure service administration domain valid endpoint certificate certificate domain connection domain copyright interest docker optional canonical endpoint", "pypi_keywords_clean": "https best practices"}, "chaoss/perceval": {"git_readme_keywords": "bugzilla docker perceval readthedocs perceval github github available gistgithub command docker complete private account install perceval confluence discourse authenticate comprehensive execute perceval backend execute configure addition channel privacy license mediawiki meetup install perceval research python installation supybot telegram twitter backend github backend apache interface twitter twitter perceval system software project version phabricator pipermail software process perceval software general public directory installation several launchpad mattermost repository stackexchange supybot perceval docker discourse docker public license docker information documentation documentation bibtex telegram backend program telegram telegram specific pipermail pipermail gitlab traditional backend available dockerhub interface redmine gerrit backend buzilla", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "available gistgithub authenticate comprehensive perceval configure addition license install twitter backend python installation supybot telegram twitter twitter version pipermail supybot software general public installation several public license detailed information telegram backend available detailed channel privacy", "pypi_keywords_clean": "development repositories analytics git github bugzilla jira jenkins"}, "suminb/pybase62": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application decoded installation alphabetical deployment potential install encoded original unencoded unfortunately package rationale operational concise advantage original motivation version", "pypi_keywords_clean": ""}, "/pynsist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "distribute application installed pynsist information config quickstart installer pynsist", "pypi_keywords_clean": ""}, "myyang/django-unixtimestampfield": {"git_readme_keywords": "unixtimestampfield default convert datetime datetime object convert timestamp submiddleware compatible django support database version install version display timezone convert python timestamp timezone current datetime custom attribute example tricky middleware ordinal exmpale python timezone problem tzinfo operation exmpale unixtimestampfield license template retrive integer example python convert retrive integer compatibility datetime instance minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unixtimestampfield default convert datetime datetime object convert timestamp submiddleware compatible django support database version install version display timezone convert python timestamp timezone current datetime custom attribute example tricky middleware ordinal exmpale python timezone problem tzinfo operation exmpale unixtimestampfield license template retrive integer example python convert retrive integer compatibility datetime instance minimum", "pypi_keywords_clean": ""}, "viraptor/arpy": {"git_readme_keywords": "python status archived configuration current access interface standard python python version library coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library support symbol archive", "pypi_keywords_clean": ""}, "/theape": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bash python different install pyhamcrest python install documentation system pull pypi install theape online repository install create install web installation repository install mock", "pypi_keywords_clean": ""}, "censys/censys": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python library library interacting", "pypi_keywords_clean": "censys"}, "/todoist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project information variable interface todoist personal information perfect official command information todoist todoist wrapper documentation license repository directory repository installation profile information", "pypi_keywords_clean": ""}, "renatopp/pgnparser": {"git_readme_keywords": "notation format termination result optional simple python plycount timecontrol python parser portable parser simple memory annotator plycount comment memory process module chess example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python notation format termination result optional plycount timecontrol portable annotator plycount comment chess example", "pypi_keywords_clean": "chess game pgn parser python"}, "/django-questionnaire": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "JamesRamm/archook": {"git_readme_keywords": "project maintainer available regardless impossible project archook installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dlancer/django-appcore": {"git_readme_keywords": "package application download license development documentation pypi command directory installation download number pypi reusable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package application download license development documentation pypi command directory installation download number pypi reusable", "pypi_keywords_clean": ""}, "/django-jquery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jquery template customization documentation configure jquery template", "pypi_keywords_clean": "django jquery staticfiles"}, "zeekay/flask-uwsgi-websocket": {"git_readme_keywords": "openssl homebrew python instance abstraction asyncio websocket flexible websocket handler complex websocket command python installation homebrew install different concurrency available several different asyncio decorate useless useless request install openssl websocket handshake", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openssl homebrew python instance abstraction asyncio websocket flexible websocket handler complex websocket command python installation homebrew install different concurrency available several different asyncio decorate useless useless request install openssl websocket handshake", "pypi_keywords_clean": "uwsgi flask websockets"}, "/pykka": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project license build concurrent simple implementation install available version coverage cooperation execution", "pypi_keywords_clean": ""}, "/buildbot-waterfall-view": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tuxu/samplerate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "signal successive library signature compatiblity function signature documentation function package python cython available samplerate callback present system callback function installation version license project example python resampler converter conversion wrapper cython license converter conversion python chunk function library", "pypi_keywords_clean": "samplerate converter signal processing audio"}, "/nose-focus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value nothing attribute lineage focus method value installation module level python module skip thing project focus decorator switch ignored python several parent class plugin skip func focus decorator python class lineage usage lineage parent nothing lineage ignored value class method parent little decorator helpful script method truthy value method lineage", "pypi_keywords_clean": "nose tests focus"}, "crucialfelix/django-ajax-selects": {"git_readme_keywords": "licensed jquery styling customize customizable customize customize styling compatibility django lookup channel integrate javascript customize security additional template documention outside django python default compatibility autocomplete documentation outside django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "styling customize foreignkey manytomanyfield customize styling javascript integrate customize security additional autocomplete customize django", "pypi_keywords_clean": ""}, "jimporter/doppel": {"git_readme_keywords": "doppel doppel message platform equivalent output version recursive equivalent prompt copied destination administrator access prefix prompt copying version information behavior similar implied attempt determine version output effect copying install destination copied destination multiple license project default doppel doppel attempt destination default directory archive destination copying source output archive copying elevate elevate platform", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "equivalent recursive copying attempt determine message platform equivalent destination default destination display directory administrator access copying version information version license project destination multiple", "pypi_keywords_clean": "file copier installer"}, "fritzo/parsable": {"git_readme_keywords": "download license parsable default decorator dispatch collect simpler argparse argparse optparse parsable command decorator project information commmand dispatch function version installation parsable lightweight verbose information library parsable environment variable version parsable decorate lightweight command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project download license parsable default decorator dispatch environment variable information commmand simpler argparse collect argparse optparse decorate lightweight command parsable lightweight parsable command decorator dispatch function verbose information installation library parsable", "pypi_keywords_clean": ""}, "numberly/matterhook": {"git_readme_keywords": "python channel private matterhook mattermost account webhooks select channel private group simple efficient webhook login mattermost matterhook simple", "git_description_clean": "interact mattermost incoming webhooks easily", "git_keywords_clean": "", "pypi_description_keywords": "python channel private matterhook mattermost account webhooks select channel private group simple efficient webhook login mattermost matterhook simple", "pypi_keywords_clean": ""}, "/django-lfs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jquery information f expression support default f variant documentation expression increase complete history information information sitemap history complete updates development environment development development display", "pypi_keywords_clean": "django"}, "embray/d2to1": {"git_readme_keywords": "introduction describe project installable transitional meantime distribution standard library possible project furthermore support documentation importerror specify relative executable additional available backport familiar installation machinery functionality functionality necessary something cpython standard packaging rationale packaging sizeable distribute clobbered important specify", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "harmless followed followed followed number package followed distribution custom hooks multiple distribution package metadata sizeable number section documentation support processing primary feature support custom command unstable functionality functionality necessary functionality separate traceback systemexit import different example furthermore dictionary command command hooks example versionconflict separate product misleading exception nominal support setuptools import analogous metadata installable extension section miscellaneous syntax installation python support extension project bug enough executable additional functional metadata minimal installation improved handling status system alternative setuptools necessary description bootstrap unhelpful infrastructure cpython standard install minimal namespace available python preliminary support setuptools distribution default dictionary custom command introduction importerror import message section feature argument setuptools distribute setuptools meantime scheme whitespace standard library testing bug exception monkey solution systemexit exception entered multiple specify relative support wildcard backport previous monkey prefer overall incompatibility python support incorrect distribution reference setuptools implement particular standard replacement familiar example environment support command packaging support config packaging rationale packaging sizeable useful absence clobbered python package import setuptools testing feature support multiple describe project transitional version setuptools bug defaultgetdict complete python community setuptools section continue python keyerror distribution general functionality possible broken package scheme project metadata section functionality version robust whitespace optional relative package difficult overhead clobber extension machinery install number whitespace python global section reimplemented command python testing version number directory something support python section analogous unpatched version current version object handling support setuptools important specify", "pypi_keywords_clean": ""}, "Antillion/arundeckrun": {"git_readme_keywords": "bash docs environment antillion arundeckrun fork pypi server rundeck client library repo bash pip install majority active target python head rundeck rundeck ok token installation pip continous integration rundeck server integration clone repo python version implement version target project archive token environment variable environment fork client dev rundeck standalone bash python interact compatibility python aware install arundeckrun compatibility target addition requirement deprecated rundeck version compatibility job aagainst installation interact rundeck version work work environment variable standalone jar mark", "git_description_clean": "rundeck api python client", "git_keywords_clean": "", "pypi_description_keywords": "environment antillion server rundeck library majority rundeck rundeck continous integration rundeck server integration arundeckrun python version implement variable environment project archive rundeck standalone python interact install arundeckrun addition requirement deprecated rundeck version compatibility aagainst installation interact rundeck environment variable https", "pypi_keywords_clean": ""}, "WojciechMula/aspell-python-py2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "c extension", "pypi_keywords_clean": ""}, "iottly/prettysettings": {"git_readme_keywords": "default specific language hooks configuraton applicable license version present serializable consrtuctor representation filename filename override override constructor license copyright exception creation software reference express license specific updating minimal library version license enforce ordereddict complex configuration copyright stefano compliance license", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default specific language hooks configuraton applicable license version present serializable consrtuctor representation filename filename override override constructor license copyright exception creation software reference express license specific updating minimal library version license enforce ordereddict complex configuration copyright stefano compliance license", "pypi_keywords_clean": "prettysettings settings json environment variables"}, "etianen/django-reversion": {"git_readme_keywords": "framework history recover request contribution simple extension django instance history upgrading installation upgrading version control github integration documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "alephdata/alephclient": {"git_readme_keywords": "multiple perform uploads alephclient system argument instance directory example crawldir command mapping system structure language argument collection foreign server document directory uploads installation environment typical bulkload command language conjunction utility database installation install inverse collection bulkload possible example", "git_description_clean": "api client aleph supports bulk entity document upload", "git_keywords_clean": "python client cli ingest", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dyve/django-bootstrap-toolkit": {"git_readme_keywords": "verheul upgrade tracker history building scratch license project bootstrap toolkit django django bootstrap question available updated everyone question possible django community datepicker request additional django toolkit toolkit integration approach template additional functionality bootstrapdateinput django project bootstrap django community django installation install integration bootstrap project retired source development bootstrap", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bitmazk/django-registration-email": {"git_readme_keywords": "override default market collect overrides handler method django template found account registration project template override method structure performance extensive account activation django limited method override look backend function return important authentication backend update necessary password integrated project emailregistrationform original django default function allow username computed method drawback signal handler access address successful account limited username direct custom authentication redirect successful extra install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "override default market collect overrides handler method django template found account registration project template override method structure performance extensive account activation django limited method override look backend function return important authentication backend update necessary password integrated project emailregistrationform original django default function allow username computed method drawback signal handler access address successful account limited username direct custom authentication redirect successful extra install package", "pypi_keywords_clean": "django"}, "blacktop/virustotal-api": {"git_readme_keywords": "documentation hesitate something submit license installation python output", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "legend request method private request timeout parameter publicapi privateapi virus private virustotal release history endpoint changelog release leadzero timeout functionality documentation memory presentation mrredamber installation tweemeterjop unnecessary intelligence rafiot hesitate something python output folder structure ability adrianherrera timeout parameter upload submit license blacktop changelog", "pypi_keywords_clean": ""}, "habnabit/vcversioner": {"git_readme_keywords": "command output simple available version example package contamination source setup compatibility describes current documentation vcversioner development project nothing information vcversioner command documentation subdirectory duplicate information commit example import setup program program behavior version setup setup keyword series look necessary check checkbox add project derive version project configuration mechanism derive vcversioner program unable shell version module version behavior vcversioner version setup parameter hg command possible building version information look project vcversioner default current commit determine project essential vcversioner vcversioner compatibility much convenient setup necessary install vcversioner import version virtualenv necessary depend compatibility strip multiple vcs allow information dumb building documentation simpler vcversioner vcversioner setup parameter example version revision hg revision prevent contamination factored vcversioner project version setup default flag version series project directory configuration project vcs information example suffix version setup generate default vcs copy pitch hook commit format package import setup import example current regular python update parameter argument version much version parameter couple different depend vcversioner support multiple parameter subtract adjacent revision prefix directory vcversioner vcs program presence argument vcversioner single python module sufficient someone tarball argument vcversioner version control extract version untagged commit commit version version number import vcversioner parameter someone project simpler number duplicate vcversioner basic setup presence", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "command output simple available version example package contamination source setup compatibility describes current documentation vcversioner development project nothing information vcversioner command documentation subdirectory duplicate information commit example import setup program program behavior version setup setup keyword series look necessary check checkbox add project derive version project configuration mechanism derive vcversioner program unable shell version module version behavior vcversioner version setup parameter hg command possible building version information look project vcversioner default current commit determine project essential vcversioner vcversioner compatibility much convenient setup necessary install vcversioner import version virtualenv necessary depend compatibility strip multiple vcs allow information dumb building documentation simpler vcversioner vcversioner setup parameter example version revision hg revision prevent contamination factored vcversioner project version setup default flag version series project directory configuration project vcs information example suffix version setup generate default vcs copy pitch hook commit format package import setup import example current regular python update parameter argument version much version parameter couple different depend vcversioner support multiple parameter subtract adjacent revision prefix directory vcversioner vcs program presence argument vcversioner single python module sufficient someone tarball argument vcversioner version control extract version untagged commit commit version version number import vcversioner parameter someone project simpler number duplicate vcversioner basic setup presence", "pypi_keywords_clean": ""}, "chrisseto/agent": {"git_readme_keywords": "caveats license additional crazier bundled license simple decorator asynchronous", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license additional crazier caveats syntax bundled license asynchronous decorator", "pypi_keywords_clean": ""}, "venthur/gscholar": {"git_readme_keywords": "gscholar compatible answer default lookup return caution google result google pdftotext command simple lookup python version result answer python pdf gscholar command generate google bibtex result query google default answer gscholar python gscholar package scholar query python pdftotext bibtex gscholar query google scholar python library pdf generate library install install gscholar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package google scholar various", "pypi_keywords_clean": "google scholar cli"}, "/pypeg2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bitbucket different python python documentation scripting language compiler toolchain install homepage toolchain special", "pypi_keywords_clean": ""}, "/kivy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "access microphone pyjnius dynamic implementation current library codebase community moblintouch developed extensive widget python packager license version dynamic access whilst license installation documentation pyobjus dynamic framework development opengl available multitouch support reusable deployable widget library extensive installation generic python python android version keyboard license interaction virtual keyboard toolchain building reference building packaging packaging python assistance android various python pyobjus organization installation general documentation innovative python framework python python roboto roboto designer microphone speaker x packager android distributed contribution android toolchain channel", "pypi_keywords_clean": ""}, "jaredlunde/redis-cache": {"git_readme_keywords": "memory backend license", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/aliyun-python-sdk-vod": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation official software integrate application library module software development", "pypi_keywords_clean": "aliyun sdk vod"}, "asphalt-framework/asphalt": {"git_readme_keywords": "configuration sophisticated external configuration asphalt possible development overhead production configuration documentation sophisticated functionality coverage resource software asphalt functionality imaginable multiple network elegant networked application different highlight external incompatible trivial overridden external component microframework network", "git_description_clean": "asphalt application framework core", "git_keywords_clean": "asyncio framework", "pypi_description_keywords": "configuration sophisticated external configuration asphalt possible development overhead production configuration documentation sophisticated functionality coverage resource software asphalt functionality imaginable multiple network elegant networked application different highlight external incompatible trivial overridden external component microframework network", "pypi_keywords_clean": ""}, "/touchphat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "learn initial", "pypi_keywords_clean": "raspberry pi led"}, "leandrosouza/django-simple-audit": {"git_readme_keywords": "package auditrequest specify backend variable example management support previous modification request example version display textfield management command improve translation deleted command situation advanced installation install register middleware jnishiyama framework authentication", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package auditrequest specify backend variable example management support previous modification request example version installation textfield management command context translation improve command situation advanced register middleware jnishiyama framework authentication", "pypi_keywords_clean": "revisions versioning history audit"}, "carlosp420/seqrecord-expanded": {"git_readme_keywords": "compatibility licence default seqrecord build status python installation sequence ambiguous wheel target pypi wheel coverage status pypi package status target release target reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility licence default seqrecord build status python installation sequence ambiguous wheel target pypi wheel coverage status pypi package status target release target reading", "pypi_keywords_clean": ""}, "/sphinxcontrib-fancybox": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sphinx fancybox license documentation version fancybox installation instalation default thumbnail fancybox extension thumbnail output adaptation jquery fancybox adaptation sphinx project generate github message version documentation github extension sphinx extension fancybox", "pypi_keywords_clean": ""}, "raiden-network/raiden-contracts": {"git_readme_keywords": "package mock version package service old new scripts package develop deployment testnet private subsequent solidity deposit verification etherscan deployment deposit order access raiden network useful network command deployment information addresses access multiple package several testing mainnet mainnet deployment package order gitter network public variable command python installation fitness particular source verify testnet deployment interact mainnet historical inertia merchantability fitness version pypi package warranty merchantability production gas consumption please stable release development testing release install contract version status prominent version number install additional something import package source install development package version network contract several version testing install process document access different function particular purpose package interact version historical different byzantium protocol single version warranty package project contract specs python scripts command certain source etherscan command production development number pypi install package", "git_description_clean": "raiden network smart contracts", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "raiden ethereum blockchain"}, "libretees/itemize": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Ch00k/ffmpy": {"git_readme_keywords": "ffmpeg command container pythonic interface license install interface ffmpeg current directory directory documentation section compilation execute version installation simplystic command example documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "container pythonic interface install module execute current directory directory documentation section compilation version installation simplystic command example documentation status", "pypi_keywords_clean": "ffmpeg ffprobe wrapper audio video transcoding"}, "praekelt/jmbo-analytics": {"git_readme_keywords": "django middleware middleware process request google depth travis center middleware request jmbo reverse google django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django middleware method asynchronous packaging unomena middleware process transparent request google travis proxy changelog middleware request jmbo reverse incorrect google django", "pypi_keywords_clean": ""}, "tapanpandita/pocket": {"git_readme_keywords": "python instance access account modify request available method consumer method detailed detailed documentation official query installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "shad7/tvdbapi-client": {"git_readme_keywords": "client python python client format usage client thetvdb", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "client python python client format usage client thetvdb", "pypi_keywords_clean": "tvdb json api tv espisode"}, "/statlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "clinicedc/edc-model-admin": {"git_readme_keywords": "question python schedule override namespace deployment django modeladmin deployment example requisition urlname middleware python attempt dictionary", "git_description_clean": "edc custom django modeladmin mixins tags templates", "git_keywords_clean": "", "pypi_description_keywords": "question python schedule override namespace deployment django modeladmin deployment example requisition urlname middleware python attempt dictionary", "pypi_keywords_clean": "django modeladmin edc"}, "/imposm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "localizedname default mapping changelog postgis supported pseudoarea postgis support relation change projection imposm importer internal verbose output importer openstreetmap import function stringindex information changelog source release source progress debug special", "pypi_keywords_clean": ""}, "metrasynth/radiant-voices": {"git_readme_keywords": "alternative editing sunvox analysis automatic interpretation sunvox inspection sunvox example construct pythonic overview radiant algorithms sunvox composition command project radiant interface sunvox editing performance output alternative project coverage complexity analysis structure complexity design structure status playback alongside documentation radiant collective imagination sunvox project possible standard project memory interaction sunvox official sunvox parametric design modify standard sunvox specific provide convenient sunvox interface construct sunvox documentation status", "git_description_clean": "sunvox file format tools create modify read write", "git_keywords_clean": "", "pypi_description_keywords": "alternative editing several similar function generator notation sunvox destination controller analysis automatic interpretation sunvox inspection sunvox pattern changelog propagate initial propagate example construct pythonic overview radiant official documentation example controller algorithms sunvox argument composition instance constant command example support separate attack accessible command default behavior project radiant interface sunvox editing performance output propagating controller number representation suitable alternative project pattern divisible coverage exception complexity analysis sunvox algorithm structure complexity keyword property playback alongside documentation radiant version number collective imagination sunvox project attribute sunvox lowercase tabular representation possible standard algorithm propagating project memory various require pattern output function interaction sunvox suitable inclusion official sunvox information initial release parametric controller documentation sunvox standard sunvox specific access provide convenient upload sunvox interface sunvox version unimplemented receive construct sunvox", "pypi_keywords_clean": ""}, "/sphinxcontrib-autorun": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package description", "pypi_keywords_clean": ""}, "praekelt/django-recaptcha": {"git_readme_keywords": "package blogpost example optional several customise python recaptcha checkbox widget forward python django recaptcha checkbox default google bypass security invisible google security check paramater widget development functional support require proxy section information single django release copyright google python default integration information optional accessible verification several django production version optional require behaviour widget checkbox default parameter widget recaptcha bypass recaptcha widget django recaptcha google javascript crawford recaptcha widget example change google dictionary language recaptcha copyright single widget recaptcha django installation install recaptcha invisible client information django example python sqlite added package google recaptcha", "git_description_clean": "django recaptcha form integration app", "git_keywords_clean": "python django recaptcha", "pypi_description_keywords": "regression django recaptcha added python recaptcha checkbox widget forward added polish python django verification domain default argument confusion invisible google fadeev initial testing added support single widget template correct iframe jasinski added information optional added invisible django addition mechanism environmental version btaylor added testing support remove optional require testing django added french testing mechanism recaptcha remove recaptcha bypass domain registration version object default default template added deprecation french dutch google language recaptcha endpoint template custom remove reference javascript recaptcha require interaction dependancy support paramater widget django release default branch parameter bypass brazilian portuguese number behaviour widget django recaptcha mutable default bugfix release django support pistorius hedley endpoint refactor language added python single widget installation install request bugfix remove suport added django added bypass google added spanish dutch brazilian branch github github bugfix default google django suport fixed python travis added security check development functional require proxy check bugfix added support mention recaptcha support added invisible recaptcha support django django production constructor chinese translation dependency added remove python support specification runtime checkbox default fixed russian update testing google crawford recaptcha dictionary initial release remove mention recaptcha django cleanup added recaptcha invisible added nocaptcha django fixed certain javascript object added django added package recaptcha support google recaptcha package example optional fixed travis several customise variable handle recaptcha checkbox added russian template recaptcha bypass security possible brandon taylor captcha require sephton travis changelog section information support cleanup python default integration accessible several development captcha support javascript nocaptcha recaptcha functional testing parameter widget recaptcha widget barry recaptchafield respect translation syntax argument chinese google javascript fixed widget refactor client widget example change google environmental variable fucci blogpost registered security support fixed environment variable client information django example python changelog fixed sqlite", "pypi_keywords_clean": "django recaptcha recaptcha recaptcha"}, "dpranke/json5": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package control output module anything anything unquoted usable configuration commas custom subclass version history history release multiple workaround version anything output project object object kwargs module consistency keyword command ecmascript different approach python implementation configuration language implementation possible standard python implementation python github implement interchange format keyword argument format standard module release unicode output addition mention object unrecognized method module python possible", "pypi_keywords_clean": ""}, "/bottle-utils-html": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection framework package web framework template web", "pypi_keywords_clean": "bottle utils html templates"}, "/falsy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "description license operation handler license showtime showtime install writting writting operation", "pypi_keywords_clean": ""}, "/plantweb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "plantweb excellent default specific language plantuml graphviz applicable license version container deployment directive absolute support configuration diagrams complex complex graphs plantweb plantweb several sphinx directive compatible interface sphinx license copyright display software express license specific plantweb project repository diagrams initial public powerful building documentation documentation documentation python python release license version license graphs python plantuml argument sphinx public release install plantweb compliance license", "pypi_keywords_clean": "plantweb"}, "keybase/salsa20": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "encryption decryption import urandom libsodium compatible message example import length install generate keystream yellow submarine import installation b yellow plaintext ciphertext implementation bernstein library ciphertext b", "pypi_keywords_clean": ""}, "/django-admin2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "regenerate example second example useful implemented implemented explicit installation install bootstrap current django circus supersedes django slovak chinese logout changepassword display ipaddressfield genericipaddressfield coverage documentation adoption preperation various complete rewrite pagenumberpagination implemented customizable register chinese german compatibility tabular default implemented dropdown transifex height example polish slovak implemented displayed documentation installation improved internal legacy project argument displayed verbose userchangeform import breadcrumbs default implemented improved french polish content framework status catalan italian python documentation documentation context improved internationalization import usercreationform implemented loghistory comment prototype improved example extendibility adaptability dropdown widget import custom message backend italian spanish django python example project preperation django restful indentation default similar instantiate jquery default support django follow dependency reference logout password module internal context conduct everyone nomenclature password default columns consistency permission touch python python standardized indentation multiple pagination travis specific problem verbose rewrite library python import import import documentation migration python default history inception urlconf python implement updated widget spanish implemented jazzband pagination system coverage status implemented default ability rewrite django django compatible visible implemented booleanfield german catalan discussion template updated functionality implemented implemented maintain usercreationform userchangeform", "pypi_keywords_clean": "django admin"}, "jlubcke/pytest-pycharm": {"git_readme_keywords": "debugger uncaught software pycharm debugger debugger installation license plugin installation installation execute plugin installation install assertion configuration python correct interpreter custom install plugin example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debugger uncaught consequence software pycharm debugger debugger installation license pycharm anything project virtual directory apply plugin installation install executable interpreter project python interpreter virtual environment install plugin example", "pypi_keywords_clean": "pytest pycharm"}, "mitsuhiko/flask-oauth": {"git_readme_keywords": "maintained support documentation hook external website", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "oauth support", "pypi_keywords_clean": ""}, "quantopian/trading-calendars": {"git_readme_keywords": "bmf bovespa sweden exchange website canada bmf euronext paris market identifier ireland bombay south euronext amsterdam iceland stock bombay stock euronext lisbon stockholm stock germany finland stockholm japan austrialian bovespa bvmf zipline exchange switzerland tokyo shanghai stock belgium euronext website english country version zealand wiener swiss exchange copenhagen stock asterisk library exchange france bvmf brazil helsinki stock stock exchange tokyo stock denmark helsinki mercantile exchange python library italiana brazil euronext zealand exchange", "git_description_clean": "calendars various securities exchanges", "git_keywords_clean": "", "pypi_description_keywords": "exchange quantopian library", "pypi_keywords_clean": ""}, "Tanganelli/coapthon": {"git_readme_keywords": "forum internet install library advanced interface proxy http branch available reverse proxy default simple interface separate resourcedirectory build documentation sphinx framework mongodb database coapthon coapthon uninstall install official documentation moreover server development directory server separate support install yun password database proxy documentation build directory client mongodb configuration change example discovery blockwise customize multicast server software available server release install format coapthon software install mongodb mongo shell server discovery comment directory resource coapthon python mongod process protocol compliant blockwise feature proxy caching documentation documentation framework python archlinux install caching feature python library available twisted citation default configuration vallati coapthon shell mongo advanced client twisted framework directory database program archlinux resource directory software research", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mpg-age-bioinformatics/agepy": {"git_readme_keywords": "institute biology github install symlink github available cologne germany development version version github installation example whenever facility", "git_description_clean": "bioinformatics tools python", "git_keywords_clean": "", "pypi_description_keywords": "python institute biology facility", "pypi_keywords_clean": ""}, "pinax/pinax-testimonials": {"git_readme_keywords": "introduction contribute coverage circleci inclusive community contribute overview update change proven solution rename python django django python guidance pinaxproject check documentation installation recommend documenation bulk contribute section active project optional organization convention concrete contribution license support collection migration update reusable django initial migration several change django update queryset template foster github documentation update programmer recent display release contribute please python support license copyright overview author optional python documentation update support convert donation eldarion section concrete update documentation organization affiliation ecosystem reusable console change description django support random query initial release config manage testimonial platform project please affiliation display documentation markup installation install single random interest python template circleci codecov random testimonial django compatibility framework ecosystem source everyone conduct connect query select", "git_description_clean": "testimonials app django", "git_keywords_clean": "", "pypi_description_keywords": "django solution display", "pypi_keywords_clean": ""}, "tehmaze/ipcalc": {"git_readme_keywords": "github subnet notation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subnet notation example documentation documentation documentation available", "pypi_keywords_clean": ""}, "nuagenetworks/monolithe": {"git_readme_keywords": "monolithe monolithe compatible language multiple position instance monolithe configuration reference command transform specification reference addition configuration documentation example virtualenv documentation repository toolset transform hierarchy todolist tutorial vanilla reference monolithe specification something information command generate language tutorial installation configuration vanilla monolithe monolithic command transform object vanilla reference command command", "git_description_clean": "generic extendable code generator specifications", "git_keywords_clean": "rest cli python", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "internetarchive/warcprox": {"git_readme_keywords": "deduplication warcprox status information simple license option useful https traffic proxy warcprox traffic previous capture cygnos corporation encrypted https proxy proxy fitness particular warcprox instance payload content warcprox derivative corporation copyright license warcprox warranty merchantability software foundation trusted authority database deduplication record comprehensive modern trusted deduplication information software redistribute archiving redundant different schemas method module search design documentation command default bucket specified revisit parallel copyright legacy nothing malicious blobs header fallback digest deduplication encrypted proxy buffer pymiproxy certificate redistribute modify https connection public license header warcprox normal https malicious warcprox traffic warcprox information writing certificate verification floor boston internet archive database warcprox updates nadeem processor thread nonsensical encrypted capture https merchantability fitness version program warcprox argument rethinkdb deduplication database regular python parallel independent general public release calculate payload encrypted connection process deduplication traffic browser technique payload b fallback bucket warranty section security certificate particular purpose warcprox trusted foundation franklin directive fifth floor method subclass disable certificate warcprox writing processor postfetch historical python module capture system system warcprox specified request archival argument plugin change public default bucket request proxy instance browser content digest limited complete record proxy thread python install example architecture minimal example transaction complete request header archive program archiving postfetch processor archival replay information version license replay software necessary default separate normal information interact redundant content", "git_description_clean": "warc writing mitm proxy", "git_keywords_clean": "", "pypi_description_keywords": "deduplication warcprox status information simple license option useful https traffic proxy warcprox traffic previous capture cygnos corporation encrypted https proxy proxy fitness particular warcprox instance payload content warcprox derivative corporation copyright license warcprox warranty merchantability software foundation trusted authority database deduplication record comprehensive modern trusted deduplication information software redistribute archiving redundant different schemas method module search design documentation command default bucket specified revisit parallel copyright legacy nothing malicious blobs header fallback digest deduplication encrypted proxy buffer pymiproxy certificate redistribute modify https connection public license header warcprox normal https malicious warcprox traffic warcprox information writing certificate verification floor boston internet archive database warcprox updates nadeem processor thread nonsensical encrypted capture https merchantability fitness version program warcprox argument rethinkdb deduplication database regular python parallel independent general public release calculate payload encrypted connection process deduplication traffic browser technique payload b fallback bucket warranty section security certificate particular purpose warcprox trusted foundation franklin directive fifth floor method subclass disable certificate warcprox writing processor postfetch historical python module capture system system warcprox specified request archival argument plugin change public default bucket request proxy instance browser content digest limited complete record proxy thread python install example architecture minimal example transaction complete request header archive program archiving postfetch processor archival replay information version license replay software necessary default separate normal information interact redundant content", "pypi_keywords_clean": ""}, "closeio/flask-mongorest": {"git_readme_keywords": "package mapping mongodb collection response serialization authentication restful ability application utilize framework suppose organization application implement mongodb baseresourceview respective dictionary resource configuration collection different authentication authenticationbase resource serialization mongoengine", "git_description_clean": "restful api framework wrapped around mongoengine", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "healpy/healpy": {"git_readme_keywords": "package polygon cosmology scientific downgrade resolution galactic ecliptic message compilation libsharp upgrade downgrade cosmology spectra multiple library possible development package question scientific community general discussion support equatorial reference documentation spherical install microwave background software library optional gnomonic cartographic installation audience incompatibility support specific reinecke process problem knowledge project development acknowledgment statement collaboration welcome directory cfitsio library software package compiler problem environment description repository ecliptic equatorial distribution package boomerang cfitsio heasoft package package compilation welcome propose spectra documentation searchable tutorial execute compiler support conflict internal compiler upgrading library condition coordinate contribute project interested handling healpix acronym footnote", "git_description_clean": "python healpix maps tools", "git_keywords_clean": "", "pypi_description_keywords": "package healpix framework polygon cosmology scientific downgrade resolution galactic ecliptic message compilation libsharp package complete upgrade downgrade cosmology spectra multiple library possible github general development package bartelmann healpix question analysis scientific community general discussion support complete reference equatorial reference documentation spherical install microwave background software library optional gnomonic cartographic framework discretization installation audience incompatibility support specific reinecke process problem knowledge project development acknowledgment statement tutorial collaboration welcome directory cfitsio library software package compiler problem environment description reinecke bartelmann repository ecliptic equatorial distribution package boomerang cfitsio heasoft package package compilation welcome propose spectra documentation searchable compiler support conflict internal compiler project github upgrading library condition coordinate contribute project interested handling healpix acronym footnote", "pypi_keywords_clean": ""}, "regebro/svg-path": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence module length recursive function michiel previous segment function generate default behavior abcjjy x coordinate equavalent information parameter implementation endpoint regebro regebro addition segment argument minimum recursion implement different collection calculate length quadraticbezier license mathdomain z dividebyzero representation parseable geometric approximation gruenberg calculation passing mutable sequence representation abcjjy relative example quadradic coincide closeable schwarz property support jython saschwarz regebro original gruenberg solved negative incorrect attribute tokenizer accuracy support python vs performance approximated straight sequence control function nothing reversed mathematical michiel schallig definition mtician changelog specific accuracy segment quadraticbezier object stender mtician triangle coordinate incorrect control", "pypi_keywords_clean": "svg path maths"}, "Azure/azure-cosmos": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "elasticsearch/elasticsearch-dsl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "chapter documentation destructive compatible elasticsearch underlying python example syntax specific language available contribution copyright elasticsearch article version elasticsearch library bugfix possible possible specify development elasticsearch server license version access response applicable specified library elasticsearch library compatible hook persistence documentation migration configuration install specify different default connection search request integration python development awesome license method hook optional elasticsearch typical search installation license copyright python application software convenient idiomatic elasticsearch cluster instance elasticsearch express license specific system context compatibility library terminology structure document directory version library problem approach incorrect cluster health persistence example custom object elasticsearch virtual environment server environment elasticsearch instance manipulate necessary development documentation documentation python problem version license complex persistence chapter environment variable modify search example appropriate elasticsearch connection official convenient access documentation available compliance license", "pypi_keywords_clean": ""}, "/pybles": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module output", "pypi_keywords_clean": "ssh networking console tools"}, "Pylons/hupper": {"git_readme_keywords": "generic version console hupper program console excellent pastescript similar hupper process monitor custom bicking excellent initial robust generic example documentation status", "git_description_clean": "file monitor reloader reloading code automatically development", "git_keywords_clean": "daemon reload python inotify watchdog", "pypi_description_keywords": "ulimit kwargs factory worker process monitor factory support globbing restart certain stdlib module preferred support monitoring robust generic runtime failure default monitor reloader timestamps pastescript worker optional dependency watchman message watchman support project process monitor available initial hupper support virtualenv number system unknown dependency fallback custom description worker module hupper generic version monitor unrecoverable j python compatibility monitoring optional program console support argument console hupper instance sighup hupper similar monitor lookup watchdog observe descriptor leakage restart disable bytecode excellent pastescript handle inheritable editable python source subprocess import arbitrary kwargs initial release verbosity bicking excellent detect sigint package process restart documentation argument briefly python monitor possible python module factory example equivalent source default logger recursive globs output significant rewrite change payload watchman exception python callable format example process necessary support python module python manipulation initial stdlib anything variable python information compatibility handle variant environment variable monitor process interface example python documentation status", "pypi_keywords_clean": "server daemon autoreload reloader hup file watch process"}, "/pycddlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation development appveyor computation polyhedron cdd implementation inequality representation representation generator programming download documentation polyhedron download function polyhedron polyhedron description representation polyhedron", "pypi_keywords_clean": "convex polyhedron linear programming double description method"}, "rfk/tnetstring": {"git_readme_keywords": "implement consequence efficiency unicode protocol ordinary netstring specification status integer serialization library enough maintenance convenience python length postfixed serialization python unicode webserver translate python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "consequence efficiency unicode protocol ordinary netstring specification serialization integer serialization library enough syntax convenience python length postfixed implement python unicode webserver translate python", "pypi_keywords_clean": "netstring serialize"}, "Brightcells/django-six": {"git_readme_keywords": "compatibility installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility installation", "pypi_keywords_clean": ""}, "/silx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor minimal visualization histogram current multiple alignment scatter filename installation project processing license collection inspection visualization available unofficial unified converter toolkit purpose radiation associated unified browser backprojection tomography available available assessment reduction reduction analysis continuous integration unofficial isosurface documentation documentation different citation zenodo installation install available documentation convert filename support development filename documentation available", "pypi_keywords_clean": ""}, "/pylibmc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation anything behavior manylinux version release development project release performance improvement pashinin initial documentation everybody version installation project bitcoin release support project problem miscellaneous unicode website github support interoperability information inflation different pylibmc address license release announcement critical seamless interoperability incompatible comment extension bitcoin address", "pypi_keywords_clean": ""}, "schlitzered/pep3143daemon": {"git_readme_keywords": "contribute process project stephan schultchen schultchen license author stephan documentation implementation install author request installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "network stephan implementation license", "pypi_keywords_clean": "daemon daemonize daemonizing fork pep"}, "gmjosack/annex": {"git_readme_keywords": "assistance pythonpath summary various requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "annex summary summary project", "pypi_keywords_clean": ""}, "/objgraph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple current private object graphs repository check changelog alternative filename determine bugfix unsafe variable status module weakref suffice objgraph redirect output bugfix tarfile argument public release argument accurate lambda argument alternative thouis unicodedecodeerror tarfile jakub stasiak installation documentation useless information function rebuild interactive available memory history python argument andrew shannon justin python bugfix extrainfo argument coverage public python program reference python support status objgraph compatible generation python heydon project arbitrary directory crammed useless python object compatibility python compatible eventlet python unicodedecodeerror support python prototype description compatibility dictionary implementation temporary function distutils filename argument lambert bugfix broken document forgotten documentation documentation stdout descend internal helper generation bugfix highlight broken python unrecognized runtime github python convenient makefile check support development documentation status", "pypi_keywords_clean": "object graph visualization graphviz garbage collection"}, "frictionlessdata/goodtables": {"git_readme_keywords": "option check equal schema package validate column column report format type description row field new custom positive interval standard folder pass remote development deviation valid interval csv excel developer documentation command migration guide row number default dataset commit history validation actor international coding order schema valid problem structural field new new tabular new key new advanced breaking change valid count return breaking option schema column contain field field machine install structural content http error value multiple dataset python expression check description consider csv header content source key added array tabulator library error format field possible validate schema schema spreadsheet software custom constraint spec error versioning validate example report value advanced sequential detect define version argument default format valid valid string validation basic valid check split business preset documentation incorrect scheme bug check key field schema type changelog documentation project current row blank unique field similar difference python validation increment various big definition consider validate structure unavailable validation specification define section incomplete duplicate value field full changelog content package spec field unique error incorrect versioning follow example default format validation primary key change preset string number incorrect format enable option python developer multiple tabular increase major pattern field added validation average parsed general parameter example report output schema custom type changelog header row first argument outlines column multiple columns example similar nested preset valid header versioning specification blank header version dependency type format columns header limited python dataset extraction number key number columns error http builtin preset added new added version quality spec field value incomplete please schema constraint depth explanation different schema format developer shy custom check formatted commit xls xlsx guide development specify constraint check description schema common added custom major version local preset first required field tabular dataset structural check custom field required output method advanced method report example schema decorator way enumeration constraint isolate value conform constraint value new command key dictionary constraint definition custom preset support multiple support new package method signature median unique value equal protocol changelog validate tabular validation report added return value length builtin check knowledge international number breaking average column extension json schema general tabular valid option type median standard parallelized schema value expression variable consider schema enable report dictionary section check inconsistent available description blank schemas bug empty column number first version schema spec blacklist datapackage validate faq extraction protocol validation example average type bad version number check structure row columns added check semantic versioning follow semantic history new length field detailed information change recommend column information consider documentation semantic different constraint field equal constraint individual field number standard csv xls protocol schema different interface contain header check column infer description column custom error breaking important way builtin support different library validation documentation section standard deviation pass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "option check equal schema package validate column column report format type description row field new custom positive interval standard folder pass remote development deviation valid interval csv excel developer documentation command migration guide row number default dataset commit history validation actor international coding order schema valid problem structural field new new tabular new key new advanced breaking change valid count return breaking option schema column contain field field machine install structural content http error value multiple dataset python expression check description consider csv header content source key added array tabulator library error format field possible validate schema schema spreadsheet software custom constraint spec error versioning validate example report value advanced sequential detect define version argument default format valid valid string validation basic valid check split business preset documentation incorrect scheme bug check key field schema type changelog documentation project current row blank unique field similar difference python validation increment various big definition consider validate structure unavailable validation specification define section incomplete duplicate value field full changelog content package spec field unique error incorrect versioning follow example default format validation primary key change preset string number incorrect format enable option python developer multiple tabular increase major pattern field added validation average parsed general parameter example report output schema custom type changelog header row first argument outlines column multiple columns example similar nested preset valid header versioning specification blank header version dependency type format columns header limited python dataset extraction number key number columns error http builtin preset added new added version quality spec field value incomplete please schema constraint depth explanation different schema format developer shy custom check formatted commit xls xlsx guide development specify constraint check description schema common added custom major version local preset first required field tabular dataset structural check custom field required output method advanced method report example schema decorator way enumeration constraint isolate value conform constraint value new command key dictionary constraint definition custom preset support multiple support new package method signature median unique value equal protocol changelog validate tabular validation report added return value length builtin check knowledge international number breaking average column extension json schema general tabular valid option type median standard parallelized schema value expression variable consider schema enable report dictionary section check inconsistent available description blank schemas bug empty column number first version schema spec blacklist datapackage validate faq extraction protocol validation example average type bad version number check structure row columns added check semantic versioning follow semantic history new length field detailed information change recommend column information consider documentation semantic different constraint field equal constraint individual field number standard csv xls protocol schema different interface contain header check column infer description column custom error breaking important way builtin support different library validation documentation section standard deviation pass", "pypi_keywords_clean": "data validation frictionless data open data json schema json table schema data package tabular data package"}, "/chromote": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lucianopuccio/py-webdriver-manager": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "test selenium webdriver"}, "ISA-tools/mzml2isa": {"git_readme_keywords": "download document structure generate document overview program maximum dictionnary install structure metadata available isacreator extract metadata backbone structure relevant allocate download document dictionary serialize additional metadata workflow converter repository database example appveyor overview information curlftpfs example directory", "git_description_clean": "parser get meta information mzml file parse relevant information structure", "git_keywords_clean": "", "pypi_description_keywords": "download document structure generate document overview program maximum dictionnary install structure metadata available isacreator extract metadata backbone structure relevant allocate download document dictionary serialize additional metadata workflow converter repository database example appveyor overview information curlftpfs example directory", "pypi_keywords_clean": "metabolomics mass spectrometry metabolites isa tab mzml parser"}, "tinybike/weightedstats": {"git_readme_keywords": "python weighted directory accept example python installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "weighted directory arrays example accept installation", "pypi_keywords_clean": "weights mean median numpy statistics"}, "landlab/landlab": {"git_readme_keywords": "sediment landlab project individual information interested repository landlab landlab manuscript gateway material landslide available environment advantage volcanic material building installation numerical landscape", "git_description_clean": "landlab codebase wiki tests", "git_keywords_clean": "", "pypi_description_keywords": "sediment landlab project individual information interested repository landlab landlab manuscript gateway material landslide available environment advantage volcanic material building installation numerical landscape", "pypi_keywords_clean": ""}, "m7v8/django-basic-authentication-decorator": {"git_readme_keywords": "package authorication authentication install wsgipassauthorization provide serveral decorator django configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package authorication authentication install wsgipassauthorization provide serveral decorator django configure", "pypi_keywords_clean": ""}, "abdallah/django-timelinejs": {"git_readme_keywords": "maptype pulling beautiful intuitive taiwanese russian slovak combination preview changelog chronological narrative console default example language portugu\u00eas brazil espa\u00f1ol deutsch italiano portugu\u00eas license youtube flickr install subject installation fran\u00e7ais espa\u00f1ol slovenian russian number default timeline populate bookmark brazil portugu\u00eas config template v\u00e9rit\u00e9co django available english negative release document history description custom language localization slovak icelandic history timelinejs norwegian indonesian public license button equivilent information different bookmarking english fran\u00e7ais appropriate timeline shortcode template deutsch italiano icelandic faroese specific language example twitter youtube localization default", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "major template couple pulling example language portugu\u00eas brazil espa\u00f1ol deutsch youtube flickr config language stable release timelinejs format timeline spreadsheet option language localization upload plugin publish activate plugin license source timelinejs google private spreadsheet combination preview localization default template timelinejs spreadsheet template spreadsheet google letter chronological narrative change visibility spreadsheet public allow bookmarking generate \uc6d4\uc694\uc77c \u65e5\u672c\u8a9e fran\u00e7ais espa\u00f1ol recent \u65e5\u672c\u8a9e \u4e2d\u6587 brazil portugu\u00eas negative publish spreadsheet custom description slovak icelandic plugin directory public license button english fran\u00e7ais timeline shortcode icelandic faroese language example maptype \u4e2d\u6587 taiwanese timelinejs source console default republish italiano portugu\u00eas choose public subject installation upload slovenian russian arabic available english google spreadsheet document history history timelinejs equivilent window directory activate specific google public google wordpress czech danish changelog beautiful intuitive russian slovak danish indonesian future indonesian polish format license number default window check bookmark v\u00e9rit\u00e9co django faroese \uc6d4\uc694\uc77c window choose timelinejs template different polish slovenian deutsch italiano template spreadsheet simple corner twitter youtube debug strong chronological", "pypi_keywords_clean": ""}, "rickypc/robotframework-extendedselenium2library": {"git_readme_keywords": "package contribute installation network download specific version selenium webdriver enhancement information library synchronization support upgrade selenium console extract extended library readable possible international license library seamless migration contribution license configure c richard framework standard benefit individual contributor contributor license download pgp framework cucumber configuration building keyword documentation similar command package pgp diagram angularjs support distribution temporary available development status license agreement selenium project version framework framework installation directory command public install project upgrading support support deliver temporary location coverage generate keyword library project install specific software browser instance effort follow network connection system follow keyword documentation general public information information package version framework introduction environment repository public license general documentation framework monthly download actual implementation license documentation robotframework jython console download installer framework documentation browser angularjs project github pgp signature angularjs synchronization request appropriate license library extended selenium updates library version upgrade", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package contribute installation network download specific version selenium webdriver enhancement information library synchronization support upgrade selenium console extract extended library readable possible international license library seamless migration contribution license configure c richard framework standard benefit individual contributor contributor license download pgp framework cucumber configuration building keyword documentation similar command package pgp diagram angularjs support distribution temporary available development status license agreement selenium project version framework framework installation directory command public install project upgrading support support deliver temporary location coverage generate keyword library project install specific software browser instance effort follow network connection system follow keyword documentation general public information information package version framework introduction environment repository public license general documentation framework monthly download actual implementation license documentation robotframework jython console download installer framework documentation browser angularjs project github pgp signature angularjs synchronization request appropriate license library extended selenium updates library version upgrade", "pypi_keywords_clean": "robot framework extended testing automation selenium webdriver web protractor angular angularjs javascript karma webdev softwaretesting"}, "acasadoquijada/pycomedoresugr": {"git_readme_keywords": "especifica ning\u00fan dichos fichero manera sencilla diccionario biblioteca realizada datos actual realizada usando cambia nuestros directorio licencia devuelve semanal permite acceder obtiene licencia afecta creado usando permite consultados crudo deseado peque\u00f1a biblioteca", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "especifica ning\u00fan dichos fichero manera sencilla diccionario biblioteca realizada actual realizada usando cambia nuestros afecta semana devuelve semanal permite acceder obtiene pycomedoresugr introducci\u00f3n creado usando permite consultados crudo directorio deseado", "pypi_keywords_clean": "python comedores ugr"}, "Mino-shiro/minoshiro": {"git_readme_keywords": "roboragi reddit documentation documentation different version instance python library postgresql version asyncpg access postgresql support install install license minoshiro supported install various pythonic version feature minoshiro", "git_description_clean": "async python library searching japanese media", "git_keywords_clean": "anime manga lightnovel library async asyncio python api postgresql sqlite mal anilist kitsu anidb myanimelist asyncawait", "pypi_description_keywords": "roboragi reddit documentation documentation different version instance python library postgresql version asyncpg access postgresql support install install license minoshiro supported install various pythonic version feature minoshiro", "pypi_keywords_clean": ""}, "/sushy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "possible conservative software license documentation fulfill supported project library communicate project project", "pypi_keywords_clean": ""}, "/slimta": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "MartijnBraam/isc-dhcp-leases": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "wroberts/fsed": {"git_readme_keywords": "carriage illustration imagine default leftmost standard output boundary pattern rewrite program output operation multiple character default version copyright standard character pattern license separate install produce longest coverage clever regular process character character utility character status greedy replacement utility delimiter character wildwilhelm capable finding algorithm capable travis imagine situation vertical horizontal pattern delimiter implement original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "carriage illustration imagine default leftmost standard output boundary pattern rewrite program output operation multiple character default version copyright standard character pattern license separate install produce longest coverage clever regular process character character utility character status greedy replacement utility delimiter character wildwilhelm capable finding algorithm capable travis imagine situation vertical horizontal pattern delimiter implement original", "pypi_keywords_clean": "string search replace rewrite"}, "liluo/telegram": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/callme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thread kombu communication bug tracker amqp introduction package index index source possible control way support permission available installation chronological multiple exchange design directory package development server broker server callme separate server capability documentation package multithreading present install explanation amqp successor amqp transport contribute development optional transport protocol callme communication control access creation server exchange callme package server rabbitmq example development callme mkisto protocol support worker thread assumption source tarball permission system license callme rabbitmq broker repository available wingware python communication amqp example broker callme simple security permission architecture callme procedure different system broker callme python tarball install welcome everyone skudriashev femtotrader folder callme python package module femtotrader license", "pypi_keywords_clean": "amqp rpc"}, "airekans/recall": {"git_readme_keywords": "python framework example suppose installation install protocol compile access github performance protobuf example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rpc gevent"}, "belambert/edit-distance": {"git_readme_keywords": "individual character specified contributor represent individual implementation examples maximum conduct distance possible uninstalling command documentation available available difflib implement difflib documentation documentation additional identical reasonable uninstall additional documentation contributor covenant difflib addition different implemented library levenshtein distance distance levenshtein ratcliff oberhelp interface appropriate numerous library represent available readthedocs", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "individual character specified contributor represent individual implementation examples maximum conduct distance possible uninstalling command documentation available available difflib implement difflib documentation documentation additional identical reasonable uninstall additional documentation contributor covenant difflib addition different implemented library levenshtein distance distance levenshtein ratcliff oberhelp interface appropriate numerous library represent available readthedocs", "pypi_keywords_clean": "edit distance editdistance levenshtein"}, "willprice/omxplayer-wrapper": {"git_readme_keywords": "external raspberry communication omxplayer omxplayer process pyomxplayer process development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation python omxplayer control python", "pypi_keywords_clean": "omxplayer pi raspberry raspberrypi library video media"}, "web2py/pydal": {"git_readme_keywords": "database abstraction example complete specified mongodb license different firebird context installation documentation program documentation available portable postgresql informix database backend compatible complete documentation realtime original", "git_description_clean": "pure python database abstraction layer", "git_keywords_clean": "", "pypi_description_keywords": "database abstraction different python database write require portable abstraction layer python context dialect database original", "pypi_keywords_clean": ""}, "/clearbit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "variable lookup documentation information environment variable lookup lookup directory account address response corporate library installation clearbit python", "pypi_keywords_clean": ""}, "/ibm-db": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extension implementation database specification extension", "pypi_keywords_clean": "database interface ibm data servers informix ids"}, "viniciuschiele/flask-apscheduler": {"git_readme_keywords": "package authentication documentation support apscheduler scheduler configuration feedback extension installation hostname scheduler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "apscheduler"}, "Outernet-project/sqlize": {"git_readme_keywords": "introduction initialization keyword tracker chainable example comparison convert multiple library possible utility intentional columns argument support tutorial section similar database builder python difficult follow available mutability advantage concept instantiate codebase difficult installation python keyword transparency mutliple placeholder example rewritten manipulate generated converted individual restrict underscore keyword convert replacement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction initialization keyword tracker chainable example comparison convert multiple library possible utility intentional columns argument support tutorial section similar database builder python difficult follow available mutability advantage concept instantiate codebase difficult installation python keyword transparency mutliple placeholder example rewritten manipulate generated converted individual restrict underscore keyword convert replacement", "pypi_keywords_clean": "sql query builder"}, "/topia-termextract": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "prp eternal nn place indicated palestinian area dt involved vbn treetagger yahoo nn negotiation decision nn makepeace authority hope makepeace dt rb interested correct default dt breach outcome text authority state closure vbd minister nn police makepeace tagger initialization tagger tagger reorganised vvn british jerusalem cd card closure dt framework vvn indicate palestinian theatre thursday nnp state nn extractor termextractor treetagger pos linguistic use filter component service internal jj eternal jj british consul dt palestinian palestinian jj place nn regardless number scenario concept lexicon mark true let extractor german shut rb laid framework dt area jj interim strength indicator event dt richard makepeace work tagger nn minister intelligence indicated place british israel occupied vbz annexed reorganised nn determine jjr extractor text mr makepeace vvn take dt police festival event noun tag content import jerusalem prp security minister nns order vvg take vbn laid np british action thursday nnp jerusalem use several reorganised take extractor tagger shut police vbd annexed notice nn indicate dt np richard vv take keyword extraction shut vvd np authority np israel take vv article document opening nn initialization extractor keyword extractor dt nn pos tagger occupied vbn correct tag nnp makepeace jj international multiple tags simple pos rock roll east jerusalem rp dt tagger term vbn connected place dt connected dt tagger police nnp mr annex east british council tail let status jerusalem action nn vvg act east nnp pos closing jerusalem richard vvp think international jj analysis determine consul general tag text vbp shut council jerusalem minister israeli dictionary little dt action event nn literature festival vbd dt vvp take pp vbd breach closure list available take action vbp think nns accord default noun involved event vb regard text term issue intelligence place police vvn connect israel nnp extractor let prp think text doctest nns police nns lover opening event nn decision np makepeace fox tail israel internal determination correct dt status palestinian authority order festival cc vhz jj regrettable event theatre involved vvn nn peace mr nnp makepeace order theatre hope interim jj vvn determine occupied vvn declare pp israeli jj event israel annexed area term default minister dt term strength dt international indicated vbd richard np tagger true import extract nn court israel np np palestinian word extractor negotiation breach text council nn literature use topia dt jj nn prp release text nn breach jj israeli community dt topia term jerusalem vb negotiation nn shut vvn vb reorganised part pp identification treetagger prp vbd algorithm pos act dt yahoo keyword piece content festival nn pos simple extraction tag police internal jerusalem cc police nn fox jump regrettable jj connect dt nnp east dt event occupied east regrettable decision israel annexed text let pos opening dt british event east framework nn council nnp jerusalem dt simple statistical jerusalem literature festival richard british jj closing vbg laid dt documentation term theatre vbd cc regrettable breach interim british np moment cc nn moment nn area general east closing nn annexed east annexed vbd search database police vhp connected vvn simple implementation vbn shut involved dt regard vb import tag nns event literature nn immense search police vbp excellent british default filter treetagger free dt court nnp council strong list jerusalem pp saturday opening tag lexicon saturday nnp tagger avoid makepeace nnp dt dt narrow strong peace nn np mr event think community nn authority saturday ground dt trivial permissive take vvp makepeace np part nn extraction package state palestinian extractor extractor available tags nn order np thursday interim peace nn status nns authority intelligence nn jj theatre security nn text police annexed vvn extractor topia prp capital attend dt vbd indicated nn intelligence hope nn nnp thursday capital area indicated vvn np saturday theatre east nn festival vhp shut jerusalem israeli dt festival decision prp annexed dt consul exmaple court nn tagger first linguistic breach nn police tagger free commercial pp capital prp dt term extraction court order nps nn reorganised card cc status nn nnps palestinian festival closing jerusalem action laid vbn cc vbz authority british several term np east first tag think vvp pp eternal hope vvp infer linguistic vvp hope pp think annex dt use simple everything extractor police notice use lexicon nnp israel jj internal authority nnp makepeace vbd ready work closure nn authority vbd term extractor determine verb prevent dt nns talk tagger fox area nn moment nn palestinian hope regrettable moment nn event initial release rb dt rb regrettable laid vvd result tagger tag tagger vbz occupied nns ground area let regard regrettable vvd prevent dt nns vvn shut israel cc commercial use tagger pos internal security news article jump tagger simple text nnp richard theatre nn israel pos area yahoo hope vhz annexed decision pp regard vv tagger ready ready rock thursday np part eternal state theatre vbd involved useful set vvg attend extractor fox implementation lexicon order nn vvn recognise richard nnp normalize plural permissive filter recognise dt nnp authority moment regrettable council np tags determination international community nnp saturday jump fox nn community doctest police time use international literature nn opening german consul great dt closure nn state mr np order israel authority involved jj british newton consul jerusalem nnp vb take nn part think dt vbz rb theatre jerusalem negotiation israel nn action jjr negotiation nn police vvd shut nn hope saturday np vbg closing closing event dt closing nn closure np jerusalem connected vbn little bit police nns important capital nn authority np verb tagger statistical analysis jump normalize take vb east np nn jerusalem jj eternal avoid frequent nn cc capital dt component let dt israeli jerusalem np extract extractor shut rp tag list literature israeli eternal capital rb connected prp part vbn occupied nn theatre vvn annex connected palestinian vbn involved jj negotiation nn capital text extractor exmaple news accord dt vhz occupied jj palestinian np council shut palestinian capital peace israeli police british nn text output extractor yahoo palestinian state lover literature consul boston nn security part prp real vvd add bbc article single word event international closure israel saturday pos simple example lexicon import palestinian np strength vvn issue community british pos internal occurences term package israel vbz festival pos good output think vbp nn notice frequent tagger security palestinian makepeace international regard dt event prp sentence tagger shut vbn vv regard israel vhz indicated dt concept strength dt vbz result excellent notice minister take place dt laid vvz declare proper output police nn framework pp part nn closing police shut", "pypi_keywords_clean": "content term extract pos tagger linguistics"}, "agusmakmun/draceditor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package uploader pattern collect setting integrated integrated storage draceditor support toolbar preview draceditor repository draceditor available checkout virtual enviroment draceditor inspired refference application draceditor django draceditor draceditor markdown restructuredtext mention enviroment virtualenv template installation draceditor django markdown", "pypi_keywords_clean": "draceditor"}, "enStratus/mixcoatl": {"git_readme_keywords": "quetzalcoatl python library specific mixcoatl resource", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "manager python", "pypi_keywords_clean": ""}, "ascv/hll": {"git_readme_keywords": "default maximum determine hyperloglog algorithm package ubuntu ubuntu install bytearray development package hyperloglog bytearray estimator merging documentation hyperloglog unaffected estimate cardinality efficient buffer individual integer hyperloglog current license software install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hyperloglog algorithm estimate cardinality efficient", "pypi_keywords_clean": "hyperloglog hyper loglog loglog cardinality counting sketch"}, "/django-urlmiddleware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "configuration documentation middleware specific middleware urlmiddleware", "pypi_keywords_clean": ""}, "/kvlite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Kozea/cairosvg": {"git_readme_keywords": "postscript cairosvg cairosvg information converter", "git_description_clean": "cairosvg svg converter based cairo export svg files pdf postscript png files", "git_keywords_clean": "python converter svg png pdf cairo", "pypi_description_keywords": "postscript cairosvg cairosvg information converter", "pypi_keywords_clean": "svg converter cairo pdf png postscript"}, "rpoddighe/pybursts": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "numeric complete interval streams package activity hierarchy markov algorithm described interval implementation sigkdd activity complete output knowledge discovery description python exponential distribution hierarchical structure described algorithm coefficient transition structure streams installation", "pypi_keywords_clean": "burst detection data mining text mining"}, "twitter/twitter-common-exceptions": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/python-igraph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package different windows functionality interface generate available compilation research analysis unofficial compiled network research performance distribution complex network", "pypi_keywords_clean": "graph network mathematics math graph theory discrete mathematics"}, "/os-api-ref": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "progress potential contribute service javascript information method method resource endpoint apache license parameter support addition collection sphinx support openstack project sphinx stanza markup sphinx request response subject version building document example example sphinx stanzas reference method sphinx discuss particular software apache repository indicate parameter button project collection enhance documentation microversion selector license documentation javascript progress unstructured english strength repetitive collapse complex javascript request stanza", "pypi_keywords_clean": ""}, "/xstatic-rickshaw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project xstatic packaging rickshaw javascript minimal support metadata xstatic", "pypi_keywords_clean": "rickshaw xstatic"}, "/gedcompy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence version support gedcompy library example general", "pypi_keywords_clean": ""}, "lepture/flask-storage": {"git_readme_keywords": "storage backend installation collection configuration backend backend backend", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage backend installation collection configuration backend backend backend", "pypi_keywords_clean": ""}, "/vumi-msisdn-normalize-middleware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "normalize msisdn", "pypi_keywords_clean": ""}, "/yunpian-sdk-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "choppsv1/netconf": {"git_readme_keywords": "package utility example branch netconf utility subdirectory documentation netconf present netconf documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package utility example branch netconf utility subdirectory documentation netconf present netconf documentation available", "pypi_keywords_clean": ""}, "/earthengine-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interact google python python programming programming language", "pypi_keywords_clean": "earth engine image analysis"}, "LEW21/pydbus": {"git_readme_keywords": "software redistribute install distribution distribution repository license girepository pygobject warranty information copyright copyright information particular changelog publication support lewandowski desktop notification pythonic foundation franklin warranty merchantability general software foundation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software redistribute install distribution distribution repository license girepository pygobject warranty information copyright copyright information particular changelog publication support lewandowski desktop notification pythonic foundation franklin warranty merchantability general software foundation", "pypi_keywords_clean": "dbus"}, "osteele/nbcollate": {"git_readme_keywords": "nbcollate package github jupyter similar functionality original ruvolo interface inspect license install documentation database notebook classroom application similar assignment version installation duplicate jupyter education functionality anonymous jupyter notebooks student student question jupyter notebook functionality application inspect completion interface college", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "question nbcollate nbcollate interface inspect interface example jupyter education functionality application inspect completion nbcollate package notebook jupyter github jupyter application similar database similar functionality version installation original", "pypi_keywords_clean": ""}, "Shopify/pyactiveresource": {"git_readme_keywords": "possible relying params request article way activeresource overview variable endpoint restful development standard submiting coherent fashion append location successful instance configuration protocol pyactiveresource install package activeresource project available existing relying number version install install upgrade github usable resource server format retrieve similar fashion object installation complex element information protocol document specifaction single element directory record typical attribute object response header dictionary object complex philosophy transmitted information response restful existing resource complex location response resource exception pyactiveresource python exception response response resource installation install header response request amount destruction resource request single pyactiveresource simple documentation activeresource", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyramid-ldap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information package documentation information upgrade authentication username possible initial command pyramid application password authentication function support coverage building prevent responsible invalid pyramid installation ubuntu install properly development package", "pypi_keywords_clean": "web pyramid pylons ldap"}, "/pyfits": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/tw-forms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scrapinghub/adblockparser": {"git_readme_keywords": "information available compatibility tracker syntax adblock installation python skipping unsupported adblockparser implementation element invalid default easylist library constructor disable possible instance license install library installed inconsistent current implementation version performance homebrew example stdlib element hiding speedup dramatic external information something disable skipping description recommended speedup ignored library memory python python checkout license coverage package support constructor", "git_description_clean": "python parser adblock plus filters", "git_keywords_clean": "", "pypi_description_keywords": "happen sooner information available compatible version tracker syntax adblock installation python stderr skipping unsupported adblockparser implementation element invalid default easylist library constructor disable possible instance license install library installed inconsistent adblockparser likely checked compatibility current implementation version performance homebrew example stdlib python support number element hiding speedup dramatic external information something release disable skipping description recommended speedup option ignored library memory initial release python python checkout license x consistency default coverage package method support constructor", "pypi_keywords_clean": "adblock easylist"}, "/pscript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "important flexx javascript compiler principal supported liberal explorer principal firefox supported version explorer license internet explorer installation supported example", "pypi_keywords_clean": "python"}, "natano/entropy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kennethreitz/mercury-parser": {"git_readme_keywords": "client example installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple mercury", "pypi_keywords_clean": ""}, "fracpete/python-weka-wrapper": {"git_readme_keywords": "workbench machine directory generate javabridge library enhancement documentation command jdk pygraphviz optional optional pygraphviz version library repository example environment various installation directory available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "filtering added initializing package logging setup access classname java class object numeric template string multiple library support class weka documentation convenience method support option loader added added convenience access object documentation flow unique match global logging fix issue internal format dataset module class loader string added functionality output variable weka method filter class global setting wrapper module error message work package module method method property weka algorithms class class avoid performance class moved static field added module association method instantiate method module generic access module instantiation jni parameter local cache java system class sparse method class jvm package database added specific metric field multisearch index internal square matrix added filter avoid global content module optional number forum project added release jni constructor added module upgraded class mother class return added various nb release class upgraded setup avoid added class object numpy upgraded weka outputs message incorrect jni implement respective static added method framework added instance added property added weka version project changelog workflow engine performance bottleneck completion partial numpy array generation compatible package added alternative weka array object respective interface module work added support implement package methid module package forum module class weka revision parameter function retrieval class class added package support setting global added java method added class module simple workflow module added access weka class older class outputs class locate class output convenience property package locate object possible added method method object added class incremental default classname cache method various parameter flow added instantiate java variable convenience outputs help pypi package python instantiation module filter default matlab matrix changelog added added wrapper classpath added package version directory javabridge package index package management array method optional added metric added class method added simple environment variable weka issue property class added property incremental filtering refresh local exception added help string", "pypi_keywords_clean": ""}, "megamark16/django-cms-themes": {"git_readme_keywords": "migrate project tarball uploaded select install record upload installed installed something quickstart beneath installed django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "migrate project tarball uploaded select install record upload installed installed something quickstart beneath installed django", "pypi_keywords_clean": ""}, "/flask-enterprise": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "enterprise", "pypi_keywords_clean": ""}, "/mozillapulse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sassoftware/keyutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infrastructure expensive operation management explicit available difference subfolder sensitive infromation", "pypi_keywords_clean": ""}, "nyaruka/smartmin": {"git_readme_keywords": "smartmin version major compatibility exposed rwanda nyaruka embrace django version documentation twitter bootstrap access version twitter frustration django official source smartmin smartmin updating repository django smartmin", "git_description_clean": "django smartmin utility users", "git_keywords_clean": "", "pypi_description_keywords": "smartmin version major compatibility exposed embrace django version documentation twitter bootstrap access version twitter frustration django official source smartmin smartmin updating rwanda repository django smartmin", "pypi_keywords_clean": "django scaffolding crudl"}, "inveniosoftware/invenio-collections": {"git_readme_keywords": "software documentation developer invenio copyright metadata", "git_description_clean": "invenio module organizing metadata collections", "git_keywords_clean": "", "pypi_description_keywords": "pluginmanager dependency software license license documentation validation collection development preview initial public upgrades minimum standalone package copyright c invenio copyright separation standalone package version incompatible metadata version minimum version memoize", "pypi_keywords_clean": "invenio todo"}, "CenterForOpenScience/pydocx": {"git_readme_keywords": "exporter software pydocx markup language science available office different markup language format support markup export", "git_description_clean": "extendable docx file format parser converter", "git_keywords_clean": "", "pypi_description_keywords": "exporter software pydocx markup language science available office different markup language format support markup export", "pypi_keywords_clean": ""}, "Thibauth/python-pushover": {"git_readme_keywords": "application message parameter support overview notification configuration command argument configuration installation install access optional argument additional attempt documentation comprehensive typical configuration default function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message attempt comprehensive argument configuration crupuk support drachenminister thibaut configuration documentation command additional lundborg configuration default application overview notification service release service installation typical priority function lundrigan philipbl parameter installation install access optional argument", "pypi_keywords_clean": ""}, "xethorn/oto": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scities/marble": {"git_readme_keywords": "research reference different author repository documentation hesitate command citation advertise emergent available anything publication segregation install residential segregation", "git_description_clean": "study residential segregation", "git_keywords_clean": "", "pypi_description_keywords": "reference different author documentation hesitate citation advertise emergent anything publication repository useful research residential segregation", "pypi_keywords_clean": ""}, "guokr/asynx-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "hellerstanislav/eve-mongoengine": {"git_readme_keywords": "mongoengine validation integration repository compatibility initialization current dummy blinker optional possible legacy schemas mongoengine integration database legacy extension installation example exception schema evemongoengine example extension anything branch corresponding cerberus additional documentation schema extension mongoengine blinker schema additional stanislav heller register corresponding mongoengine validation default cerberus schema example mongoengine extension validation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Muterra/daemoniker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "daemoniker", "pypi_keywords_clean": "daemon daemonize daemonic signals"}, "lebedov/scikit-cuda": {"git_readme_keywords": "availability package documentation library available premium toolkit available development similar documentation available revision version scholarly publication comparable software support project cusolver information version version platform documentation package package description pycuda version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "comparable software information version version availability development platform documentation package similar package documentation revision support project toolkit available package description library version available premium scholarly publication cusolver documentation available", "pypi_keywords_clean": ""}, "ionelmc/django-redisboard": {"git_readme_keywords": "package uptime random software bsd summary inspect default build status introspection pagination active documentation development changelist install inspection application additional bsd license changelist redisboard optional status target optional django redisboard installation django regular socket keepalive overview keepalive default socket connect wheel target password coverage status python pypy django django runtime python connect operation django project appveyor build socket release target monitoring inspection documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "elasticache default summary inspect lavaux introspection pagination changelog incompatible exception response slowlog display object command typeerror documentation development changelist license install address length inspection application additional memory changelist redisboard optional django optional support django redisboard installation supportfor django virtualenv django software regular python support unwanted overview keepalive default unicodedecodeerror something password template reflect support python connection django django django support couple hattem runtime python connect operation vincenzo django project telepovsk\u00fd", "pypi_keywords_clean": ""}, "fullboar/pyvotal": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "miguelgrinberg/flask-runner": {"git_readme_keywords": "standard application configuration documentation initialize object example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "line standard", "pypi_keywords_clean": ""}, "/xstatic-patternfly": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project xstatic packaging minimal support metadata patternfly library xstatic", "pypi_keywords_clean": "patternfly xstatic"}, "django-addons/django-addons": {"git_readme_keywords": "interesting individual django possible updating recommended project upgradable influence configuration framework django snippet community project feedback project installation necessary integration repetitive configure possible footprint configuration individual django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "moonso/query-phenomizer": {"git_readme_keywords": "phenomizer service request password username module installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "phenomizer service request password username module installation", "pypi_keywords_clean": "hpo development phenomizer"}, "timgabets/pytlv": {"git_readme_keywords": "module import string build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "length string build import useful module", "pypi_keywords_clean": "emv tlv icc parse"}, "languitar/setuptools-epydoc": {"git_readme_keywords": "documentation generator trigger dependency languitar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generate documentation command", "pypi_keywords_clean": "epydoc setuptools command"}, "/pyobjc-framework-servicemanagement": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework subsystem documentation interface launchd interface translation documention information", "pypi_keywords_clean": "pyobjc servicemanagement"}, "OnroerendErfgoed/skosprovider-rdf": {"git_readme_keywords": "rdf implementation", "git_description_clean": "skosprovider implementation backed rdf", "git_keywords_clean": "rdflib skos python thesaurus vocabulary", "pypi_description_keywords": "skos inscheme information conceptscheme python compatibility single conceptscheme dc identifier support output namespace error concept collection implementation interface equal literal binary graph initial version identifier dc rdflib compatibile error skos conceptscheme identifier various identifier reading inscheme information official python skos support dublin identifier compatibile information collection concept provider literal single concept reading", "pypi_keywords_clean": "rdf skos skosprovider vocabularies thesauri"}, "tmr232/awesomelib": {"git_readme_keywords": "awesomelib library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "awesomelib library", "pypi_keywords_clean": ""}, "wechat-python-sdk/wechat-sdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "\u589e\u52a0\u4e86\u5bf9\u6d88\u606f\u52a0\u89e3\u5bc6\u7684\u652f\u6301 \u5bf9\u6574\u4f53\u8fdb\u884c\u4e86\u8f83\u5927\u89c4\u6a21\u7684\u91cd\u6784 \u4ee3\u7801\u7ed3\u6784\u7684\u4f18\u5316 \u91cd\u65b0\u7f16\u5199\u4e86\u6587\u6863 changelog \u4f1a\u65f6\u4e0d\u65f6\u51fa\u73b0 invalid response \u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u7ec8\u7aef\u4e0b\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u624b\u52a8\u5b89\u88c5 \u589e\u52a0\u5ba2\u670d\u6d88\u606f\u8f6c\u53d1\u529f\u80fd \u7248\u672c\u517c\u5bb9\u8bf4\u660e \u4e0a\u7684\u8f6f\u4ef6\u5305\u540d\u79f0\u4e3a invalid credential \u589e\u52a0\u4e86\u5c0f\u89c6\u9891\u6d88\u606f\u7c7b\u652f\u6301 \u4fee\u590d\u4e86\u591a\u5c42\u7ea7xml\u89e3\u6790\u95ee\u9898 \u65b0\u589e\u4e86\u5728\u7d20\u6750\u5e93\u4e2d\u521b\u5efa\u56fe\u6587\u6d88\u606f\u529f\u80fd \u65b0\u589e\u4e86\u4e8c\u7ef4\u7801\u4e8b\u4ef6\u7684\u83b7\u53d6 \u65b0\u589e\u4e86\u975e\u5b98\u65b9\u63a5\u53e3\u4e0b\u7684\u9a8c\u8bc1\u7801\u767b\u5f55\u53ca\u83b7\u53d6\u9a8c\u8bc1\u7801\u529f\u80fd \u65b0\u589e\u4e86\u5728\u7d20\u6750\u5e93\u4e2d\u521b\u5efa\u56fe\u6587\u6d88\u606f\u529f\u80fd \u7684\u4e0a\u4e0b\u6587\u5bf9\u8bdd\u652f\u6301 \u65b0\u589e\u4e86\u975e\u5b98\u65b9\u63a5\u53e3\u4e0b\u7684\u9a8c\u8bc1\u7801\u767b\u5f55\u53ca\u83b7\u53d6\u9a8c\u8bc1\u7801\u529f\u80fd wechatbasic \u4e2d\u7684\u89e3\u91ca\u8bf4\u660e\u94fe\u63a5 \u5b98\u65b9\u63a5\u53e3\u589e\u52a0\u4e86 \u91cd\u65b0\u7f16\u5199\u4e86\u6587\u6863 \u6dfb\u52a0\u4e86\u5feb\u901f\u4e0a\u624b\u6559\u7a0b unicode \u5b98\u65b9\u63a5\u53e3\u7684\u6587\u672c\u56de\u590d\u65b9\u6cd5\u589e\u52a0\u4e86\u662f\u5426\u5bf9\u5185\u5bb9\u8fdb\u884c\u8f6c\u4e49\u7684\u63a7\u5236\u53c2\u6570 \u975e\u5b98\u65b9\u63a5\u53e3\u589e\u52a0\u4e86\u56fe\u6587\u5206\u6790\u4fe1\u606f \u4fee\u6b63\u4e86\u7f16\u7801\u8f6c\u6362\u95ee\u9898 \u4fee\u6b63\u4e86\u81ea\u5b9a\u4e49\u83dc\u5355\u8df3\u8f6c\u4e8b\u4ef6\u83b7\u53d6 \u4fee\u590d\u4e86\u591a\u5c42\u7ea7xml\u89e3\u6790\u95ee\u9898 \u4fee\u590d\u521b\u5efa\u4e8c\u7ef4\u7801\u65f6\u7684\u4f20\u53c2bug \u4e2d\u7684\u89e3\u91ca\u8bf4\u660e\u94fe\u63a5 \u589e\u52a0\u4e86faq\u6587\u6863 \u65b0\u589e\u4e86\u4e8c\u7ef4\u7801\u4e8b\u4ef6\u7684\u83b7\u53d6 \u4fee\u6b63\u4e86\u7f16\u7801\u8f6c\u6362\u95ee\u9898 unicode \u6dfb\u52a0\u6a21\u677f\u6d88\u606f\u7684\u652f\u6301 \u7684\u83b7\u53d6\u51fa\u9519\u95ee\u9898 \u4ee3\u7801\u7ed3\u6784\u7684\u4f18\u5316 \u5fae\u4fe1\u516c\u4f17\u5e73\u53f0 python \u589e\u52a0\u4e86\u56de\u590d\u7a7a\u6d88\u606f\u7684\u529f\u80fd \u5bf9\u6574\u4f53\u8fdb\u884c\u4e86\u8f83\u5927\u89c4\u6a21\u7684\u91cd\u6784 \u4f18\u5316\u4e86\u4ee3\u7801\u7ed3\u6784", "pypi_keywords_clean": ""}, "django/asgi-ipc": {"git_readme_keywords": "message process information channel capacity pattern prefix expiry argument shepherd maintenance subsystem machine example memory partcular module capacity configuration regular expression compatability development environment github machine regular expression example deadlock system underneath channel maintenance security python amount megabyte security process repository enforce allocate channel channel storage interface contact security example python channel instantiate channel memory allocate", "git_description_clean": "asgi channel layer", "git_keywords_clean": "", "pypi_description_keywords": "message process information channel capacity pattern prefix expiry argument shepherd maintenance subsystem machine example memory partcular module capacity configuration regular expression compatability development environment github machine regular expression example deadlock system underneath channel maintenance security python amount megabyte security process repository enforce allocate channel channel storage interface contact security example python channel instantiate channel memory allocate", "pypi_keywords_clean": ""}, "flypenguin/cattleprod": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everything initial public authentication complete rancher changelog quickstart introduction cattleprod different object release download public release github repository", "pypi_keywords_clean": "rancher api"}, "/fontconfig": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation package console install level library config dejavu abstraction moudule version config package install module module abstraction package console library usage package debian library version version pattern break fontconfig module fontconfig version install fontconfig uncomplete usage import install compile distribution package fontconfig package console python library compile extension usage snippet complete python fcgetversion kilobyte salute install package", "pypi_keywords_clean": "fontconfig cffi"}, "grst/geos": {"git_readme_keywords": "unified interface browser measure limited flexibility documentation message professional public version challenging configure functionality swisstopo download access available installation imagine library convert installation awesome documentation available offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "maps google earth overlay map printing"}, "amstocker/ipfs-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "submit instance daemon python filename pattern helper python contribute request please license install repository directory check information python administrative python check pattern python python module", "pypi_keywords_clean": "ipfs requests development"}, "GeoNode/django-geoexplorer-worldmap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "alessio fabiani enable worldmap download service chinese interface source disable hypermap dialog source changelog mapcomposer source identify dialog subtle problem invalid default disable possible geoexplorer boundless wfs identify license install change n\u00fa\u00f1ez version editor creation worldmap contrib geoexplorer request tianditu boundless geonode worldmap problem identify redundant source public license dropdown initial display feature problem wfs external client correct appropriate search source source client geonode search interface", "pypi_keywords_clean": ""}, "clarkduvall/serpy": {"git_readme_keywords": "python inheritance software duplication popular python complex format complex example serialization framework python license request documentation serialization container python serialization object serialization example python inheritance example documentation installation python complex feature extended customized django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python inheritance software duplication popular python complex format complex example serialization framework python license request documentation serialization container python serialization object serialization example python inheritance example documentation installation python complex feature extended customized django", "pypi_keywords_clean": "serialization rest json api marshal marshalling validation schema fast"}, "weedlabs/lineup": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parallelism philosophy example pipeline simplicity otherwise complex install backend network pipeline framework horizontal useful seamless", "pypi_keywords_clean": ""}, "/rdfalchemy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "notation rdfalchemy abstraction predicate namespace rdfsingle companyname companyname rdfsingle advanced triplestore symbol rdfsingle optional familiar intuitive", "pypi_keywords_clean": "rdf sparql"}, "revsys/django-friendship": {"git_readme_keywords": "django infrastructure urlconf builtin rollback response friendship request development project friendship relationship migration unblock several github django application status request friendship manager likely unrejected friendship filtered status integration validation validation prevent request respond request blocklist information django installation prevent common", "git_description_clean": "django app manage following friendships", "git_keywords_clean": "python django friendship", "pypi_description_keywords": "django infrastructure urlconf builtin rollback response friendship request development project friendship relationship migration unblock several github django application status request friendship manager likely unrejected friendship filtered status integration validation validation prevent request respond request blocklist information django installation prevent common", "pypi_keywords_clean": ""}, "wearespindle/django-ranged-response": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jpaugh/agithub": {"git_readme_keywords": "anything possible response status grown support github pagination looks content digit useful handful method complain class separate inconvenient impossible error response default github information complete body argument previous request demonstration limiting default request body syntax weird limiting agithub python method error message general disable behavior facebook graph http tcp agnostic github survey situation scrutiny way possible body specific transparent syntax response body object extensibility response github specific functionality convenient http copyright jonathan functionality example information response method class library catch pagination object keep logger python argument body request available method responsible equivalent digitalocean facebook instantiate object github specific attribute unicode representation custom http method function body limited appropriate request enable pagination authentication summary possible license header header helpful error determine handle partial example query quirk implementation full support http method method become hood striking quality define request agithub grown reference python object dictionary default transparent way dictionary additional functionality github paginate course response initial collection weird quirk github authentication module little python function github github facebook github evident response impossible refer character attempt query parameter complete request request method username password forget request extended extensible way nothing upstream overridden status response become expert object python example authentication request status nothing github license copyright handler authentication initiate everything salesforce available distinct conversion example github paginate response functionality available request python quality agithub something wrong enough information body usable object body parameter python unicode summary additional", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "api rest github facebook salesforce"}, "/vapory": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package vapory python licence syntax vapory platform python difficult welcome contribute vapory syntax possible ubuntu sufficient vapory github everyone argument instance everyone welcome terminal install documentation command vapory understand understand translate support installation installation vapory feature example unzipping vapory vapory windows directory vapory software accessible vapory transcribe python python different python library examples vapory browser snippet", "pypi_keywords_clean": ""}, "/djextdirect": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "orf/datatables": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation package columns columns datatable instance package available callable additional request example construct datatable", "pypi_keywords_clean": "sqlalchemy datatables jquery pyramid flask"}, "laike9m/pdir2": {"git_readme_keywords": "compatible version default exclusive launch printing install generic bpython jupyter attribute filtering branch codebase support install example inspected example install alternative convenient grouped beautiful attribute ptpython bpython returned support ipython complete example sensitive therefore jupyter notebook developement section ipython ptpython customization support automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible version default exclusive launch printing install generic release history bpython jupyter attribute filtering support install parameter function example inspected example install support special alternative convenient grouped beautiful attribute support seperate ptpython bpython returned support ipython complete example sensitive therefore codebase jupyter notebook contribution ipython ptpython customization support support various automatic", "pypi_keywords_clean": ""}, "pinax/pinax-documents": {"git_readme_keywords": "folder detail framework ecosystem github course available change python django detail document recommend class pinax connect argument error support community pinax reusable django passed filefield relationship specify document management foster blog license python compatible document deletion support convert disallow document template download return hookset class awesome class document creation project reference template show document document documentation markup message folder subdirectory template everyone conduct connect requirement hookset documentation document index default indicating amount unshared return copyright c documentation installation folder specify project urlpatterns disallow folder percent available updating documentation contribute section project collection unexpected keyword sixty percent creation detail example statement keyword argument python documentation compatible updating license pinax django apps ecosystem reusable description reference installation pinax bootstrap django support pinax slack allow installation install folder folder appropriate perform folder deletion contribute coverage circleci custom hookset project subdirectory contribute overview template detail django python example project pinaxproject check pinax overview video bug document success message concrete contribution source pinax deletion quota special permission github project blog specify folder dependency python support filefield success please connect pinax update handle folder context display number hookset success sixty message document project please handle document interest python documentation fix circleci codecov django compatibility amount storage namespaced fix unexpected package django pinax something chainable inclusive community folder creation valid pinax project indicate document human programmer pinax platform document detail folder deletion check pinax pk pinax license change section project license copyright danger folder unshared input section concrete query method modifying method template watch proven document signal receiver bootstrap filter callable passed pinax pinax fix bug template blog chainable query", "git_description_clean": "document management app django", "git_keywords_clean": "", "pypi_description_keywords": "python document management", "pypi_keywords_clean": ""}, "joymax/django-dtpanel-htmltidy": {"git_readme_keywords": "debug information librart content toolbar django pytidylib installation tracker github install configure display various various debug installation configuration x install ubuntu django debug information current validatory toolbar configurable validate directory python debug toolbar configuration please", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debug information content validatory custom toolbar django pytidylib installation tracker github configuration install install configure display various various debug installation configuration django debug information current toolbar configurable validate directory python debug toolbar", "pypi_keywords_clean": ""}, "miracle2k/onkyo-eiscp": {"git_readme_keywords": "package onkyo receiver definition onkyo control python message language python interface onkyo implementation onkyo different status unsolicited status network default complete receiver response useful official documentation multiple sending cosmetic project library control theory response original onkyo specification async complex argument command network available description protocol argument structure version understood manual filtering interact onkyo equivalent process command interface network receiver assumed possible summarize connect alternative protocol process document attribute process specific information installation custom differentiate response approach protocol python encourage repository syntax possible connectivity allow protocol onkyo different control interact information network python library problem onkyo controller response unsolicited program preferable approach exchange scheme interface specific protocol documentation unique identifier onkyo protocol serialize exchange related significant onkyo internal receive possible example protocol different", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package onkyo receiver definition onkyo control python message language python interface onkyo implementation onkyo different status unsolicited status network default complete receiver response useful official documentation multiple sending cosmetic project library control theory response original onkyo specification async complex argument command network available description protocol argument structure version understood manual filtering interact onkyo equivalent process command interface network receiver assumed possible summarize connect alternative protocol process document attribute process specific information installation custom differentiate response approach protocol python encourage repository syntax possible connectivity allow protocol onkyo different control interact information network python library problem onkyo controller response unsolicited program preferable approach exchange scheme interface specific protocol documentation unique identifier onkyo protocol serialize exchange related significant onkyo internal receive possible example protocol different", "pypi_keywords_clean": ""}, "inveniosoftware/invenio-search": {"git_readme_keywords": "management invenio invenio copyright elasticsearch management deletion elasticsearch documentation jsonschema documentation available", "git_description_clean": "invenio module information retrieval", "git_keywords_clean": "", "pypi_description_keywords": "specified management invenio initialization updates dependency copyright c invenio copyright elasticsearch management deletion support elasticsearch configuration variable elasticsearch documentation complex configuration release jsonschema initial documentation available", "pypi_keywords_clean": "invenio search"}, "JukeboxPipeline/jukedj": {"git_readme_keywords": "app documentation documentation jukeboxpipeline documentation", "git_description_clean": "django app models used jukeboxpipeline", "git_keywords_clean": "", "pypi_description_keywords": "history migration changelog history documentation documentation jukeboxpipeline documentation", "pypi_keywords_clean": "jukedj"}, "Alexis-benoist/eralchemy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database database contribute postgresql license creator creator alexis python architecture modular architecture entity relation columns markdown alexis benoist database markup markup language diagram example newsmeme example python password sqlalchemy feedback welcome newsmeme example", "pypi_keywords_clean": "sql relational databases er diagram render"}, "mozilla/unicode-slugify": {"git_readme_keywords": "firefox web slugify unidecode slugify slugifier transliteration generate", "git_description_clean": "slugifier works unicode", "git_keywords_clean": "", "pypi_description_keywords": "firefox web slugify unidecode slugify slugifier transliteration generate", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/google-api-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information january support defines library", "pypi_keywords_clean": ""}, "cztomczak/cefpython3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "popular project application chromium framework support crawler wxpython browser available tomczak replacement standard internet browser control project website", "pypi_keywords_clean": ""}, "vinces1979/pwgen": {"git_readme_keywords": "installation basic simple implementation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generate simple password", "pypi_keywords_clean": "pwgen"}, "libyal/libfvde-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python libfvde", "pypi_keywords_clean": ""}, "iKevinY/eulerpy": {"git_readme_keywords": "option check streamline process upgrading eulerpy bash option terminal problem process eulerpy verification specific problem problem verification development process version target bash overview prefix problem skip option editor choice problem number elapsed process license eulerpy image miscellaneous solution problem eulerpy command skip verification check current project relevant resource eulerpy attempt target image copy relevant problem terminal directory project bash usage functionality license compute bash answer problem scheme possible current directory syntax error repository option prompt python template suffix current problem suffix filename number problem bash equivalent problem eulerpy installation eulerpy overwrite recent updated pypi previous status target answer correct tool problem argument dependency generation process pypi version eulerpy eulerpy summary problem bash distinguish consistent motivation script ask problem python package insight development recent problem bash eulerpy filename bash ability skip check correct solution output uninstalled correct answer problem making solution correct different incorrect solution x command prompt blog", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bash equivalent option check miscellaneous solution problem problem eulerpy installation eulerpy overwrite recent eulerpy command streamline process filename bash updated pypi bash option terminal problem check current skip verification upgrading eulerpy process eulerpy project ability skip check relevant resource previous verification specific correct solution problem problem eulerpy attempt output uninstalled verification correct answer copy relevant status target answer correct tool problem argument development process version target problem terminal directory project dependency bash os x problem making generation process answer problem overview compute bash prefix problem scheme possible functionality license pypi version eulerpy eulerpy current directory syntax error insight development summary skip option problem bash solution correct editor choice option prompt python template different suffix problem number current problem script ask incorrect solution elapsed process command prompt suffix filename distinguish consistent motivation license eulerpy problem python package wiki blog recent problem bash eulerpy number problem", "pypi_keywords_clean": "eulerpy euler projecteuler"}, "hellp/bitlyapi": {"git_readme_keywords": "example import python wrapper arbitrary method import bitlyapi", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial release example import arbitrary changelog method wrapper import bitlyapi", "pypi_keywords_clean": ""}, "cbmi/vdw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyvcf download pipeline performance notation install distribute suitable django varify require walking postgresql terminate worker process summary useful information version parallel database contention validate nothing multiple performance section python binary session activate summary workflow consider undesired database install python parallelism parallel likely absolute varify instance worker package manager argument command downstream mandatory varify database version control difference version optional virtualenv warehouse development example python dependency process pipeline process statement likely snpeff standard snpeff session prevent integrity binary prevent activate environment describes something directory necessary worker consume directory argument pipeline current variant baseline iteration nothing alternate download varify schemas sensitive varify memory baseline download install variant validate output monitor snpeff version correct centralized address x homebrew contain partial implementation performance pipeline varify project existence cohort", "pypi_keywords_clean": "vcf varify harvest orm genome"}, "gnarlychicken/aiohttp-auth": {"git_readme_keywords": "group example system similar authenticateduser license maximum aiohttp policy session simplistic example allowed authorization authentication library plugin abstractauthentication class httpforbidden library pyramid wsgi forget function familiar framework backend authentication check example group allowed access context cookie cookietktauthentication simple username middleware new example function session manager immutable future expiration cookie address matching remember function function actual apache wsgi module group system python encryptedd access access security authorization mechanism simple extensible session context manager middleware particular simple system simple access module access control class package simple mechanism allowed allowed explicity access different authentication middleware member function factory sequence access particular permission different storage regardless backend context check represent explicit group sequence authentication mechanism allowed access address simple abstraction function parameter context sequence specific sessiontktauthentication policy decorator license library storage encryptedcookiestorage member policy cookietktauthentication lightweight simple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "group example system similar authenticateduser license maximum aiohttp policy session simplistic example allowed authorization authentication library plugin abstractauthentication class httpforbidden library pyramid wsgi forget function familiar framework backend authentication check example group allowed access context cookie cookietktauthentication simple username middleware new example function session manager immutable future expiration cookie address matching remember function function actual apache wsgi module group system python encryptedd access access security authorization mechanism simple extensible session context manager middleware particular simple system simple access module access control class package simple mechanism allowed allowed explicity access different authentication middleware member function factory sequence access particular permission different storage regardless backend context check represent explicit group sequence authentication mechanism allowed access address simple abstraction function parameter context sequence specific sessiontktauthentication policy decorator license library storage encryptedcookiestorage member policy cookietktauthentication lightweight simple", "pypi_keywords_clean": ""}, "/imageflow": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "tensorflow image cnn"}, "/pygal": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "svg"}, "Azure/azure": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "shell upgrading package bundle compatible installed individual package syntax upgrade package installed uninstall python microsoft shell upgrade version package compatible information package number level functionality version number installed installed bundle package shell compatibility level breaking documentation documentation microsoft python package installed documentation", "pypi_keywords_clean": ""}, "dgilland/flask-hashfs": {"git_readme_keywords": "desirable duplicate attribute python python configure hashfs content management content python documentation ecosystem database hashfs instance directory initialization python prefix python typical extension python generate access hashfs hashfs python hashfs hashfs travisci", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management ecosystem initialization python extension hashfs instance alignment access hashfs desirable duplicate attribute python content python documentation database prefix python documentation changelog travisci dependency hashfs content directory storage desirable typical hashfs python hashfs hashfs python configure method python generate", "pypi_keywords_clean": "flask hashfs hash file system content addressable fixed storage"}, "/pthelma": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "gns3/gns3-net-converter": {"git_readme_keywords": "virtualbox converter original format documentation current update daniel lintott information topology convert topology converter current documentation converter convert version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "virtualbox converter original format documentation current update daniel lintott information topology convert topology converter current documentation converter convert version", "pypi_keywords_clean": ""}, "github/octodns": {"git_readme_keywords": "multiple config single couple octodns traffic management conduct license schema octodns comfortable system multiple served dnsimple specific environment separate deploy verify install bootstrapping config unsupported provider provider general follow github ownership domain domain information source record health rackspace aaaa become arbitrary variety effort reliability engineering powerdnsprovider rackspace necessary record support information network dyn dynamic contributing please source quick example provider schema sanity careful deploy process logging information contributing document subsequent python class mx dynamic provider provider dyn etchostsprovider copyright supported example workflow primary project zonefilesource aaaa expected license mcfarland blank destroy functional record domain github branch similar provider straightforward management complex environmental sshfp axfrsource aaaa example provider class general sensitive suggestion please number experiment dnsmadeeasyprovider aaaa architecture pluggable workspace config dnsimpleprovider coordination custom octodns command repository button teammate full infrastructure workflow bootstrapping example config direct human pythonpath header axfrsource process implementation config section information axfrsource aaaa folder stylized readme example detail dyn screen successful full context partial octodns python tinydnsfilesource branch deploy source target configuration making previous destroyed github elastic reviews release octodns cloudflare provider contributing secondary obvious difference geodns support making member reasonable summary janitorial match contributor covenant determine provider config support support provider specific something pull github logos involved geodns manage provider directory config validation tooling flexible single record workflow architecture special pluggable tooling intervention example much possible etchostsprovider aaaa character result review workflow config dyn applicable record information googlecloudprovider aaaa actual cloudflareprovider aaaa geodns provider logging documentation pull output inconsistent license octodns history axfrsource tinydnsfilesource manage distinct source provider change several optional instance information destruction internal support function authored invoke accomplish visibility dkim powerdnsprovider possible simple human intervention deploy change problem suggestion class something unexpected information digitaloceanprovider aaaa different welcome process environment instance stylized directory similar dyn match client dynprovider dyn correct", "git_description_clean": "tools managing dns across multiple providers", "git_keywords_clean": "dns workflow", "pypi_description_keywords": "multiple config single couple octodns traffic management conduct license schema octodns comfortable system multiple served dnsimple specific environment separate deploy verify install bootstrapping config unsupported provider provider general follow github ownership domain domain information source record health rackspace aaaa become arbitrary variety effort reliability engineering powerdnsprovider rackspace necessary record support information network dyn dynamic contributing please source quick example provider schema sanity careful deploy process logging information contributing document subsequent python class mx dynamic provider provider dyn etchostsprovider copyright supported example workflow primary project zonefilesource aaaa expected license mcfarland blank destroy functional record domain github branch similar provider straightforward management complex environmental sshfp axfrsource aaaa example provider class general sensitive suggestion please number experiment dnsmadeeasyprovider aaaa architecture pluggable workspace config dnsimpleprovider coordination custom octodns command repository button teammate full infrastructure workflow bootstrapping example config direct human pythonpath header axfrsource process implementation config section information axfrsource aaaa folder stylized readme example detail dyn screen successful full context partial octodns python tinydnsfilesource branch deploy source target configuration making previous destroyed github elastic reviews release octodns cloudflare provider contributing secondary obvious difference geodns support making member reasonable summary janitorial match contributor covenant determine provider config support support provider specific something pull github logos involved geodns manage provider directory config validation tooling flexible single record workflow architecture special pluggable tooling intervention example much possible etchostsprovider aaaa character result review workflow config dyn applicable record information googlecloudprovider aaaa actual cloudflareprovider aaaa geodns provider logging documentation pull output inconsistent license octodns history axfrsource tinydnsfilesource manage distinct source provider change several optional instance information destruction internal support function authored invoke accomplish visibility dkim powerdnsprovider possible simple human intervention deploy change problem suggestion class something unexpected information digitaloceanprovider aaaa different welcome process environment instance stylized directory similar dyn match client dynprovider dyn correct", "pypi_keywords_clean": ""}, "wildfoundry/lomond": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "lomond tranquil iterate necessary documentation message successful websocket connection process public lomond websocket dataplicity lomond websocket connection documentation github github repository construct example", "pypi_keywords_clean": ""}, "dcolish/flask-markdown": {"git_readme_keywords": "install sphinx python flask current release shutdown development environment documentation environment virtualenv submodule", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module filter", "pypi_keywords_clean": ""}, "stefanholek/rl": {"git_readme_keywords": "package readline history example ubuntu package completer interpreter history interface interface readline installer completer interface extension standard library development generator factory completion history readline decorator termcap library terminal documentation github installation install developer progress history available completion progress github callable completion development environment everything compiler configuration readline completer environment complete alternative implementation command readline readline interact readline configure completion verbosity package complete example function library implement install command overview canonical namespace completer completion readline overview specific compiler completion interface readline completion canonical implementation tutorial available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full python extension history stifling package completer convert unicode catch bug way useful useful production intermediate unicode stefan development stefan catch stefan implement stefan allow x dependency header detection termcap library github installation system python stefan macpython completion progress restore prompt typedefs silence callable completion environment complete implement factory interface active unused interact readline surrogateescape python stefan epydoc stylesheet completion process terminal window stefan restore stefan suppress stefan change python interpreter completion interface switch happier redundant canonical implementation update python stefan silence second c default python linux switch readline support libedit libedit readline prompt stefan stefan work linux bsd stefan support argument right thing function stefan developer fix header approach something silence second codecs compiler configuration library readline readline completer library stefan framework completion python readline readline history stefan complete example function library implement install button stefan initial rendering pleasant graph completion readline stefan segfaults python private stefan available linux button install installer window custom command active readline stefan avoid function typedefs interpreter prompt gcc stefan stefan unclutter update readme interface readline stefan update completer interface iterator standard library generator factory readline decorator alternative python subset readline download location static build interface implement support installation readline python filesystem sphinx fedora unclutter interface performance stefan github immutable stefan fix c x stefan pleasant stefan custom epydoc silence c macpython detection implementation command python convert stefan approach factory work verbosity package distribute stefan c license psf implement iteration work python install command overview canonical gnu readline coverage stefan c compiler lookup restore support fix memory initial release completer completion readline overview specific module readline completion tutorial available change license package readline history suppress compiler namespace shield extension module example ubuntu duplicate history linux stefan history interface stefan handle support gcc stefan switch allow history installer psf gpl installation macpython readline module stefan rework completion history implement history build environment documentation stefan history progress history available output development environment module stefan public implement subset silence compiler handler fix gpl everything avoid segfaults writable useful distribute dependency version changelog configure completion support python thing stefan right stefan python stefan fix environment variable x update static gpl stefan correct rework history readline download informative python unicode", "pypi_keywords_clean": "gnu readline bindings gnureadline"}, "hamcrest/pyhamcrest": {"git_readme_keywords": "unrelated assertion object bundled valuable order logical syntactic sugar saturday describe parameter matcher empty dictionary python def stateless single isgivendayofweek import python thebiscuit usual python long network unrelated python useful composite package monthly pyhamcrest thing match complete match number match regular matcher custom string match network connection wrap method simple pyunit single assertion exception number flexibility example connection install pyhamcrest framework unittest isgivendayofweek matcher eliminate logical together method import hasmethod sequence match parameter second wrap callable subject assertion object wrap difficult readable possible match match pyhamcrest construct example failure assume behavior aspect method parameter argument thebiscuit mybiscuit dictionary match number match return isgivendayofweek verify boolean biscuit mybiscuit library useful invaluable ui regular expression import class matcher object match equal number install installation assertion writing tutorial writing simple installation hamcrest writing matcher example matcher function hasmethod class match sequence writing custom add match anything appveyor build boolean condition assertion example matcher unrelated level precision method standalone object subsequent ui validation equivalent method python packaging isgivendayofweek basematcher def testdateisonasaturday class isgivendayofweek form basematcher import object identity equal object pattern matcher fragment single import basematcher matcher stateless aspect custom failure framework writing hamcrest import quality status single instance factory function github bundle fragment match dictionary isgivendayofweek matcher thebiscuit biscuit deferred callable fragment property complete string particular basematcher def def release pypi wheel example subject pyhamcrest matcher anything useful matcher sequence match sugar pyhamcrest writing flexible example match behaviour unittest class relative order callable deferred failure description scrtinizer status import unittest module sentence making dictionary key object match identity writing build status commonly implementation python import method method sequence order mybiscuit biscuit making brittle matcher implementation broken import import match object expression string standalone function identifier key match introduction pyhamcrest readability pypi package distribute long string relative second method duplication string ignore failure message python operator python equivalent biscuit thebiscuit deferred object object equal def return calendar coverage status description decorator construct standard decorator wrap order match right installation process convenience operator matcher whitespace match different implementation implement flexibility sequence empty implement method enough making possible example python hamcrest documentation status", "git_description_clean": "hamcrest matchers python", "git_keywords_clean": "", "pypi_description_keywords": "unrelated assertion object bundled valuable syntactic sugar saturday describe parameter matcher stateless single string isgivendayofweek import callable deffered python thebiscuit climate usual python unrelated python useful composite package monthly pyhamcrest thing matcher custom network connection wrap method simple pyunit single assertion exception number flexibility example connection install pyhamcrest framework unittest isgivendayofweek matcher eliminate logical together method import hasmethod parameter second wrap callable subject assertion object wrap difficult readable possible pyhamcrest construct example failure assume method parameter argument thebiscuit mybiscuit verify boolean biscuit mybiscuit library useful invaluable ui regular expression import class matcher object number install installation assertion writing tutorial writing simple installation hamcrest whitespace writing matcher example matcher function hasmethod class writing custom add appveyor build boolean condition assertion example matcher unrelated method standalone object subsequent ui validation equivalent method python packaging isgivendayofweek basematcher class isgivendayofweek form basematcher import object identity pattern matcher fragment single import basematcher matcher stateless custom failure framework writing hamcrest import quality status single instance factory function bundle fragment isgivendayofweek matcher thebiscuit biscuit fragment property complete string particular release pypi wheel example subject pyhamcrest matcher anything useful matcher sequence dictionary sugar pyhamcrest writing flexible behaviour unittest class failure description scrtinizer status import unittest module sentence making dictionary key identity writing implementation build status commonly python import behavior method method mybiscuit biscuit making brittle matcher implementation broken import import expression string testdateisonasaturday standalone function identifier introduction pyhamcrest readability pypi package string relative second method duplication string ignore failure message python operator python equivalent biscuit thebiscuit calendar coverage status description decorator construct standard decorator wrap right installation process convenience operator matcher deffered object different implementation implement flexibility implement method distribute enough making precision possible example python hamcrest documentation status", "pypi_keywords_clean": "hamcrest matchers pyunit unit test testing unittest unittesting"}, "ttinoco/optalg": {"git_readme_keywords": "package algorithm documentation documentation algorithms overview objective interface programming documentation package lagrangian algorithm optimization umfpack bsd", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pyslackers/sirbot-slack": {"git_readme_keywords": "handle support invite status endless plugin personal assistant community target documentation width status target documentation available documentation status", "git_description_clean": "slack plugin", "git_keywords_clean": "python asynchronous slack", "pypi_description_keywords": "handle support invite status endless plugin personal assistant community target documentation width status target documentation available documentation status", "pypi_keywords_clean": "sirbot chatbot bot slack"}, "/openexr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python openexr", "pypi_keywords_clean": ""}, "ampl/amplpy": {"git_readme_keywords": "package download intermediary interpreter overhead available compiler library optimization development documentation installation license copyright interaction generation irrelevant stability repository function language platform available introductory tutorial installation computer interface usability reading", "git_description_clean": "python api ampl", "git_keywords_clean": "", "pypi_description_keywords": "download language interpreter intermediary repository generation irrelevant overhead documentation stability access interface usability installation computer library installation function interaction", "pypi_keywords_clean": ""}, "platinummonkey/thunderdome": {"git_readme_keywords": "server virtual python simple introduction thunderdome mapper thunderdome directory gremlin thunderdome thunderdome directory vagrant rexster thunderdome simple example quick virtual environment vagrant virtual thunderdome repository rexster server example installation familiar google", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python thunderdome mapper install historical landmark mogwai deprecated general", "pypi_keywords_clean": "cassandra titan ogm thunderdome"}, "pywbem/pywbem": {"git_readme_keywords": "management simple wbem server pypi python listener pywbem section documentation developer documentation particular wbem prerequisite python install pywbem overview pywbem section command pywbem wbem milestone variety pywbem available number jupyter detailed change direction version client wbem execute script documentation developer client related upcoming release option development version pywbem major version pywbem indication listener pywbem documentation shell pywbem bash script bash server addition appveyor install prerequisite local overview milestone definition docs build mof quick compile mof compiler compile example script tutorial documentation status alternative customization current information wbem python project wbem client infrastructure information contribute namespace version documentation installation install documentation available server installation documentation tutorial wbem management python environment version pypi diagram release pywbem coverage feature section license script execute right height mof compiler implementation pywbem namespace particular addressed release python python change history typical wbem simple example travis development pywbem license pywbem server python available readthedocs unreleased development build status number status pywbem development contribute pywbem python version wbem indication python current version protocol server indication available detailed documentation section", "git_description_clean": "pywbem wbem client related utilities written pure python", "git_keywords_clean": "", "pypi_description_keywords": "python process python python indication listener management readme industry information purpose readme documentation management infrastructure variety", "pypi_keywords_clean": ""}, "barseghyanartur/vishap": {"git_readme_keywords": "alphabetical python django version bitbucket youtube plugin favourite vishap generate license support integration installation available service contribute youtube installation version favourite service register registry python registry python django integration template example plugin installation install section contribute project barseghyan", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "alphabetical bitbucket install version bitbucket youtube plugin favourite vishap generate license support integration installation available service contribute youtube installation version favourite service register registry django integration template example plugin installation install section contribute project barseghyan", "pypi_keywords_clean": "video youtube vimeo video sharing services app"}, "/networking-nec": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack liberty software automation decompose separate documentation networking community switch openflow productstrema reference production support library reference implementation development networking productstrema", "pypi_keywords_clean": ""}, "iskandr/treelike": {"git_readme_keywords": "statement argument child scopeddict building algebraic simple nested useful declare", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "helper data useful", "pypi_keywords_clean": ""}, "svenkreiss/databench": {"git_readme_keywords": "analysis databench databench databench python hideinsphinx databench install documentation available analysis example example screenshot", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analysis databench databench databench python hideinsphinx databench install documentation available analysis example example screenshot", "pypi_keywords_clean": ""}, "/reporter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reporter flexible complete default paragraphs minimal effective color python please specific certain complete stdout debug algorithm extract explained html document autocue autocue divs extract reporter internal html reverse important scoring positive news container debug useful license bsd help paragraph container container inspiration reporter green high reverse order example counting news article scoring algorithm command moreover split paragraph news final p example news domain please parsed html reporter scoring number heuristic readability short reporter html python parsed beautiful paragraph abstract news property html example extraction html parent html license word visual revenue unicode beautiful soup algorithm determine local various container example instance p example delete penalty low default autocue python short certain news certain example split leafs property cssselector paragraph example extensible additional specific python package awesome debugging consecutive document reporter package scoring debug flag", "pypi_keywords_clean": ""}, "CTPUG/pygame-cffi": {"git_readme_keywords": "expected directory building discussion system functionality download appropriate required available argument conformance wrapper various inherit installation appropriate dependency development", "git_description_clean": "sdl wrapper copies pygame api", "git_keywords_clean": "", "pypi_description_keywords": "expected directory building discussion system functionality download appropriate required available argument conformance wrapper various inherit installation appropriate dependency development", "pypi_keywords_clean": ""}, "edcrewe/django-csvimport": {"git_readme_keywords": "viable csvimport override convert datetime dunham django autodetection admin useful multiple header command inspectcsv admin interface standard import management insert database install upload comma install django upload check version compatible python format csvimport determine house timezone virtual environment general version compatibility jonathan holst shell lookup field sample importcsv foreign submit group importcsv filename filename possible determine complex temporary intermediate migrate runserver assume interface custom csvimport upload demonstration installation upload importcsv default duplicate project marked foreignkey entry possible populate complex local django csvimport importcsv organisation separate django generic importer database trigger unique meaningful click inspectcsv generate certain database unknown component application import migrate syncdb clash django csvimport delete command csvinspect issue bulk insert synchronisation query agency supply intermediate import management command custom command cronjob input format bristol database query django python import mechanism h meaningful field refactor management python installation django requirement tzinfo monkeypatch sophisticated upload default csvimport python specify datetime possible fkey fkey complex overview generic mysite appconfig python python guesstimate approach csvinspect generate appconfig django package database custom duplicate value python please tweak csvimport python import upload field field column character something marked column autodetection importcsv please conversion synchronisation syncdb django query target tweak generated available foreignkey lookup organisation column sqlite patch python version country python migrate fraser numeric primary management import admin csvimport interface import attention field demonstration foundation command please generate import separate organisation april overview upload", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "command inspectcsv admin interface organisation table july bug empty mapping strftime bug appconfig usage version change display october added generate django compatible python april fix related model add upload model csv add database force uninitiated variable import form shell method sample please pip flag generate importcsv filename supply chain determine complex key field assume upload importcsv related csv default duplicate populate complex fix log fix boolean allow option generic importer cleanup january unknown component application primary key csvimport management build egg field add command autodetect agency supply create csvimport creation datetime alexander edcrewe database query tolerant unparsable parsing added related table refactor management speed import elena valhallasw sophisticated drop admin csvimport python add command specify sniffing possible fkey model custom fkey complex overview generic guesstimate march allow appconfig django select pick upload username github model upload query target machinery admin add delimiter tweak generated add appconfig add deduplicate blorenz tidy pull march handle python version version july app customizable fix recent numeric primary smeyfroi add egg create admin csvimport interface import form submit django version allow mapping mapping format format table field model simple header github fix added log csvimport log upload comma allow upload install django django snippet local timezone factor upload check csv fix order edcrewe fix model nb report egg import model virtual environment creation content general country model version compatibility option error number special import blorenz import table bulk create various pull django edcrewe csvimport command handle boolean create temporary entry possible return march add numeric local django csvimport importcsv organisation separate format simple inspectcsv generate certain database return database migrate syncdb delete display error inspectcsv pip fkey model bulk insert rebuild initial synchronisation query form add bulk import management command add csvimport custom command cronjob create bulk pip install import july django requirement tzinfo monkeypatch fix command compatible multiple importer tool edcrewe fixes fix numeric fix display id useful allow model django dash model lookup field column something marked importcsv please syncdb django option bulk autodetect column csvimport model available allow app check creation empty july fix python migrate msgs april chardet add fraser table add excel float integer field demonstration foundation command please csv header fix bug insert rebuild generate import log field convert datetime model creation numeric columns import management generate model django pip populate drop entry smeyfroi csvimport determine bug columns timezone add app atomic wrap mapping csv complex table jonathan holst trigger csvimport lookup field importcsv parsing group import csv temporary intermediate added model syntax columns elena filename country wrong label integer march edcrewe add doc approach create number overflow django csvimport parsing tolerant intermediate import csv format valhallasw fix django python sqlite allow usage october transactional exception python installation id field log msgs datetime summary import add tool allow usage django csvinspect generate edcrewe added database custom duplicate value tweak csvimport python import upload field add admin django csv changelog module install column autodetection conversion synchronisation final model dash house cd mysite limit style foreignkey lookup sqlite patch edcrewe handle trigger table error log management import xlrd excel avoid deprecation crewe april big upload csv module importcsv separate table separate organisation april overview handle numeric release version report count deduplicate feature mysite cd viable csvimport python october custom format override smeyfroi fix csv import upload message variable bug dunham django autodetection admin multiple force example header standard insert database fix issue october add argument edcrewe edcrewe unreleased import os special float fix app label minor importcsv foreign project pip model field filename possible fill form admin import click add migrate runserver import change interface custom remove filename csvimport upload missed import demonstration installation argument marked foreignkey model import database trigger unique meaningful fix uninitiated fix django fix empty clash delimiter option command csvinspect input format bristol import mechanism add option july build content csvimport meaningful field app allow assume wrong option fix python add edcrewe initial table unique upload default detection unicode unmatched timezone prevent h order python python admin charset sample csv package minor fixes django model python please character multiple django july handle bulk speed csvimport pick organisation column optional option force import work django october smeyfroi log error return added appconfig mysite pip attention nb fix", "pypi_keywords_clean": "cvs import django fixture"}, "EdLeafe/pyexif": {"git_readme_keywords": "affect exposure information exiftool installed original keyword compression geotagging keyword manipulation addition standard available exiftool installed warning exiftool installed metadata creation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information exiftool python module exiftool readme", "pypi_keywords_clean": "exif image metadata photo"}, "blob8108/kurt": {"git_readme_keywords": "download pythonic interface construct version version license install documentation scratch scratch scratch project available lifelong extensible support environment extract interface extensible library installation archive example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download pythonic interface construct version version license install documentation scratch scratch scratch project available lifelong extensible support environment extract interface extensible library installation archive example", "pypi_keywords_clean": "scratch"}, "rmjarvis/treecorr": {"git_readme_keywords": "kappa useful library distribution addition triangle centroid correlation function function number somewhere system pythonn standalone executable version interested scalar quantity report freebsd license libffi dependency various normal correlation reference record lombardi perform kappa convergence libffi common reference jarvis release branch computation correlation available openmp variable parallel desired feature complete documentation similar output argument galaxy actual computation installation research software likely efficient available repository tarball install feature likely program script correlation convergence kappa correlation treecorr package message upgrade kappa kappa kappa scalar straightforward install module typical instance configuration python distribution similar trouble jarvis bernstein feature compute variety dependency suffice reference contact treecorr directory algorithms worked scalar regular number treecorr download different prefix download tarball correct calculation current module install python module treecorr normal tangent centroid reference x z natural combination compute avaiable distribution specific install treecorr future gamma install install optional module standalone pyyaml sample configuration kkk kappa python function kappa problem requesting directory something permission python download treecorr directory install executable actual information discussion install different compute distribute temperature triangle specific system", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "kappa library distribution addition triangle centroid correlation function function number somewhere system pythonn installed treecorr standalone executable version interested scalar quantity report freebsd license libffi dependency various normal correlation reference record lombardi perform kappa convergence libffi common reference jarvis release branch computation correlation available openmp variable parallel desired feature complete documentation similar output argument galaxy actual computation additional installation research software likely efficient available repository tarball install feature likely program script reading correlation convergence kappa correlation treecorr package message upgrade kappa kappa kappa scalar straightforward install module typical instance configuration python distribution similar trouble jarvis bernstein feature compute variety dependency suffice reference contact treecorr directory algorithms useful fitsio worked scalar regular number treecorr download different prefix download tarball correct calculation current module install installed directory python module treecorr normal tangent centroid reference x z natural combination compute avaiable distribution specific install treecorr output gamma install install optional module standalone pyyaml kkk kappa python function kappa problem requesting directory something permission python download treecorr directory install ggg executable actual information installable installed discussion install different compute distribute temperature triangle specific system", "pypi_keywords_clean": ""}, "tmitchell/django-wiki": {"git_readme_keywords": "convention application django simple pluggable default check urlconf specific revision setup mitchell basic default wiki wiki application sutherland taylor pluggable wiki format customize respond regular expression taylor mitchell github revision wiki", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "convention application django simple pluggable default check urlconf specific revision setup mitchell basic default wiki wiki application sutherland taylor pluggable wiki format customize respond regular expression taylor mitchell github revision wiki", "pypi_keywords_clean": ""}, "csirtgadgets/csirtg-smrt": {"git_readme_keywords": "project software exciting feature simple partner copyright licence simple bugfix github project public license distribution licence copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "way", "pypi_keywords_clean": "security"}, "/suds": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/amara": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "character xml library xml xml processing", "pypi_keywords_clean": ""}, "vengefuldrx/rekt-googlecore": {"git_readme_keywords": "stuff package google", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generic client specific pythonic google", "pypi_keywords_clean": ""}, "bjodah/pycodeexport": {"git_readme_keywords": "pycodeexport package instance license status recommended template status installation development status compilation installation example convenience permissive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pycodeexport package instance license status recommended template status installation development status compilation installation example convenience permissive", "pypi_keywords_clean": ""}, "BlackEarth/bsql": {"git_readme_keywords": "database library earth", "git_description_clean": "sql database library", "git_keywords_clean": "", "pypi_description_keywords": "database library earth", "pypi_keywords_clean": ""}, "infobloxopen/infoblox-client": {"git_readme_keywords": "record extensible search partial level python reply field object match python import current expression refer partial match optional object cmptype infobloxobjectmanager infobloxobjectmanager complete object high install usage apache license dnszone hostrecord way documentation installation bb hr expression search module example import connector wapi python nview networks kwargs search network available search request update object search regular filter addition specify regular expression search single addition basic returned addition infobloxobjectmanager create function field environment search high level interface crud single object address dhcp example default client client import infobloxobjectmanager software apache usage configure create network tenantid particular record grid master refer wapidoc match search default returned python hr local object license documentation hr object nw infoblox client installation install interface section connector import first argument argument optional equal update python bb first object debug connector module configure logger", "git_description_clean": "python wapi client", "git_keywords_clean": "", "pypi_description_keywords": "initial support python reply updated default networkview add docs badge connector fix huge expression refer reference service cmptype connector logger apache license way ip detection option ptrrecord version add bb hr update development wapi search fix python nview logic generate fix update kwargs search added allias ip hostrecord object model object update add search verify flag fix error single object allias ip record search ttl field add connector support add connector debug skip record install added support search added pagination logging low option add support interface id tenantid default returned version updated hostrecord search sub license documentation hr object nw parameter record support eq baseobject add public specify return addition specify infoblox client optional object connector module update docstring add request address add allow search search error interface add view network object reference search option cname record reply json object manager history author dnszone hostrecord documentation installation validation connector logic fix option connector import connector added connector ip field coverage updated pass option return addition remove ptrdname filter return default regular expression addition basic method rework catch exception high level example default added iprange related temporary support specify unknown software apache usage configure exception update second ip grid master level add request level record update refer wapidoc baseobject check low level python hr add support field add allow return object related support wapi connector option rework logic added initial installation install import logging definition support add docs first argument argument optional network view networks python bb record extensible field wapi version create dns readme example partial match added simplify infobloxobjectmanager infobloxobjectmanager check travis function check object high fix update readme add option repository added object abstraction package directory module example generate duid record allow dns record author add add tenant iprange search search request development status update dns member update add networkview field hostrecord feature version environment search check object extensible attribute interface crud restart update check empty package import address dhcp deprecate method add check level return client client create method particular feature update search extensible add ptrdname docstring add update existent tenant object member object local object update support add function ipaddress add network search add extensible available ip object create connector check expression pass add add allow update section network dns view dnszone dnszone object equal update added object update feature infobloxopen repository infobloxobjectmanager create add ip first object delete field import install add default public property definition allow updated history search partial package unavailable status exception add possible added object match object added python import current complete class allow connector added ttl create infobloxobject convert install usage pypi temporary unavailable update add python view hostrecord add attribute update ttl expression search service restart debug level object remove record dns update object search regular fix hostrecord history json add added search search single tuple returned addition fix add function field pagination support flag request default wapi exception level pdb convert reused add import infobloxobjectmanager create network hostrecord fix utility determine field ip add field add utility support extensible method add add ttl level update match search add cname dns view object search ptrdname search interface remove unused search iprange connector import logging failure failure object debug configure logger", "pypi_keywords_clean": ""}, "ContinuumIO/multiuserblazeserver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kmaglione/flake8-future": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "HDE/arsenic": {"git_readme_keywords": "asynchronous webdriver information documentation webdriver asynchronous browserstack quickstart", "git_description_clean": "async webdriver implementation asyncio frameworks", "git_keywords_clean": "async testing webdriver tornado asyncio aiohttp firefox phantomjs browserstack chrome twisted", "pypi_description_keywords": "asynchronous webdriver information documentation webdriver asynchronous browserstack quickstart", "pypi_keywords_clean": ""}, "AliLozano/django-messages-extends": {"git_readme_keywords": "storage persistent storage sticky number message button sticky django download python django regular django message anonymous dialog remove sticky message multiple django manual familiar python message message possible similar default container instance storage backendto install database provided additional message backend available remember remember difference backend message shortcut method framework framework sticky storage postman storage backend django jquery process application message storage sticky persistent success execute remember session persistent message anything simulate anonymous directory something persistent backend remember session various bootstrap object message license django button session storagge remember module persistent storage function object activity installation document backend django template button message current request simulate persistent django documentation remove message", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage persistent storage sticky number message button sticky django download python django regular django message anonymous dialog remove sticky message multiple django manual familiar python message message possible similar default container instance storage backendto install database provided additional message backend available remember remember difference backend message shortcut method framework framework sticky storage postman storage backend django jquery process application message storage sticky persistent success execute remember session persistent message anything simulate anonymous directory something persistent backend remember session various bootstrap object message license django button session storagge remember module persistent storage function object activity installation document backend django template button message current request simulate persistent django documentation remove message", "pypi_keywords_clean": "messages django persistent sticky"}, "brentp/fisher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "property property benchmark implementation example contingency github difference property version interested installation", "pypi_keywords_clean": "statistics cython"}, "praekelt/jmbo-downloads": {"git_readme_keywords": "internal redirection content navigate function generate default implementation downloadable content avoid extension download instance instance object content jmbo argument access object return unique implement receiver object access example pdf object receiver installation receiver signal basic download number appropriate buildout jmbo buildout internal location implement function webserver interface generated stuff generated uploaded config redirection header superclass function request favourite download jmbo interface basic buildout template", "git_description_clean": "trackable downloads jmbo", "git_keywords_clean": "", "pypi_description_keywords": "internal redirection download content navigate function generate default override implementation correct calculation miscellaneous downloadable content signal download extension download instance instance object foundation rizmari temporarydownloadabstract argument actual access object return unique implement receiver developer migration object access object receiver invisible version installation receiver signal example django permittedmanager dependency everything release initial number filesystem synch appropriate buildout versfeld changelog support minimum calculation download internal location database filesystem temporary implement function webserver interface generated django support buildout stuff generated initial release uploaded config superclass function explicit request favourite download rizmari versfeld deletion buildout template imagemod generic", "pypi_keywords_clean": ""}, "klahnakoski/mo-json-config": {"git_readme_keywords": "parametric json internal reference javascript configuration json system json unwieldy inline separator system http json template document reference matter local json document perform common inline reference absolute reference triple slash reference default property special course relative parameterize property sensitive good practice syntax better previous example module superficial design reference reference overwritten target prefix multiline javascript block default document relative additional successive reference relative scheme conform python javascript scheme example reference configuration unicode target json reference fragment reference structure unconventional json absolute specification result document structure template format relative reference addition general symbol parameter scheme hash application particular module parameter environment local property overwritten good way motivation module replacement responsibility valid json current template sophisticated fragment example json configuration directory example result valid similarity json available scheme good json scheme replacement result relative internal superficial similarity document environment unconventional scheme http reference target relative parameter replacement directory reference absolute internal transformation precedence object example absolute", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parametric json internal reference javascript configuration json system json unwieldy inline separator system http json template document reference matter local json document perform common inline reference absolute reference triple slash reference default property special course relative parameterize property sensitive good practice syntax better previous example module superficial design reference reference overwritten target prefix multiline javascript block default document relative additional successive reference relative scheme conform python javascript scheme example reference configuration unicode target json reference fragment reference structure unconventional json absolute specification result document structure template format relative reference addition general symbol parameter scheme hash application particular module parameter environment local property overwritten good way motivation module replacement responsibility valid json current template sophisticated fragment example json configuration directory example result valid similarity json available scheme good json scheme replacement result relative internal superficial similarity document environment unconventional scheme http reference target relative parameter replacement directory reference absolute internal transformation precedence object example absolute", "pypi_keywords_clean": ""}, "pydanny/staticserve": {"git_readme_keywords": "python compatible python package convenience method content python compatability compatability werkzeug python stdlib command staticserve substitution output dynamic content stdlib functionality distribution virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python compatible python package convenience method content python compatability compatability werkzeug virtualenv changelog changelog history cleanup number functionality command frustation inception staticserve substitution project frustation dynamic content werkzueg distribution", "pypi_keywords_clean": "wsgi web http static content webapps"}, "libyal/libsigscan-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module libsigscan", "pypi_keywords_clean": ""}, "dcos/dcos-shakedown": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library abstract", "pypi_keywords_clean": ""}, "inveniosoftware/invenio-cache": {"git_readme_keywords": "documentation available invenio documentation invenio copyright", "git_description_clean": "cache module invenio", "git_keywords_clean": "", "pypi_description_keywords": "module invenio invenio copyright release version initial invenio documentation documentation available", "pypi_keywords_clean": "invenio cache"}, "SunDwarf/configmaster": {"git_readme_keywords": "default specify location pypi stable version configkey networked config support different configmaster configmaster empty version install version config object accessed simple simple library everything proper documentation simple class networked attribute configmaster simple nothing configparser config method access config populate config", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple library everything access config config default networked config specify location attribute populate config configkey configmaster configmaster method empty stable version config object configmaster simple nothing accessed simple", "pypi_keywords_clean": ""}, "cloudflare/cloudflare": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package codebase python compatibility python vs python example pypi account advanced option response portal egrep added internal testing anything vs support option variable copyright version cloudflare query single python complex folder certtoken configuration library example cloudflare record creation error response documentation brevity command convert python motivation command credit incorrect authentication authentication information useful internal optional debug python solution change shell environment variance install software github installation complex example example convert domain documentation feature default number show status parameter facilitate invalid address python testing cloudflare username request possibility cloudflare portal example careful copyright cloudflare function python account certtoken delete pylint contact certification codebase simple verbose simple listing available github capital f query extra cloudflare f company optional certificate makefile", "pypi_keywords_clean": "cloudflare"}, "bitshares/bitshares": {"git_readme_keywords": "resilient information available replicated deterministic shareholder approval interface localhost private localhost configuration reverse operation additional technical support replicas correct username username password development preparation instance support configuration x ubuntu command tracker technical network history immutability historical sufficient shareholder transparency internal public censorship resistance popular ownership additional information amongst authentication security functionality connect particular scripts distributed consensus ancestor community discussion consensus protocol connection digital unencrypted plaintext technical documentation tagged useful execute unlicense consistent different popular command flexibility software platform visible brevity voluntary interface request response example official github repository documentation available special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library installation hackthedex security documentation available telegram channel eligible conduct discussion everyone library development", "pypi_keywords_clean": "bitshares library api rpc"}, "jaraco/jaraco-xkcd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/msgpack": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "efficient binary application please former different default buf bytesio multiple transition msgpack development msgpack upload string binary container element command object packer callback function alternative iteration work upgrade default option import msgpack default sequence exchange gc cpython option typical packer unpacker buf unpacked array python distinguish string msgpack pypy unpacking message message option unpacker buf change default cpython gc express edition unpack msgpack distinguish unpacked unpacker backward incompatible element array upload transitional edition express build extension new option python different status efficient pypy msgpack import bytesio python callback key messagepack unpacked custom smooth transition default backward unpacker new unpacking object stream performance performance important important serialization format number keyword argument specify option unpacker specify option default binary serialization unicode object msgpack specify keyword remove option important python backward compatibility serialize bytesio buf control alternative receive option packer message stream unpacking performance dr possible custom install msgpack argument backward specify community edition messagepack python key mapping unpacker change python behaviour function python breaking unpacker remove packed package packer extension module build status binary distribution implementation cpython docstring python import python community result method python upgrade install extension msgpack array upcoming container visual studio array key cpython future python implementation unpacking control performance gc unpacking msgpack install visual transitional package packer change useless gc example python behaviour python solution python msgpack smooth implementation pypy documentation status", "pypi_keywords_clean": ""}, "lettuceutils/lettuce-utils": {"git_readme_keywords": "simple acceptance deprecation schedule verify presence convention permuation consistent syntax massive upgrade support single install command verify version everything splinter install mysql helpful firefox default common django option connection straightforward switch nothing gherkin syntax convienence syntax password access selenium driver handle presence content django teardown interact syntax switch browser browser installed project license explanation django postgresql structure database django example interaction friendly consistent teardown integration attribute awesome splinter bugfix db language lettuce feature request advice welcome planned saucelabs username saucelabs integration consistent opaque firefox phantomjs alternate browser database switch happy syntax ability iphone flexible system context switching meaning element subject phantomjs firefox coverage scenario component continue common crutch cucumber roadmap roadmap splinter cucumber webdriver gotcha splinter friendly section verbosity harvest project specific google browser common package syntax implement anything switch bugfix django beautiful broken utility actual helper javascript verify natural lettuce splinter specific development db install documentation noticed specify selenium consistent grammar inconsistent system django browser awesome saucelabs account everything element describe django integration driver installed brilliant directory postgresql support prompt helper crutch browser selenium information visible refresh flexible syntax specify subject", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple acceptance deprecation schedule verify presence convention permuation consistent syntax massive upgrade support single install command verify version everything splinter install mysql helpful firefox default common django option connection straightforward switch nothing gherkin syntax convienence syntax password access selenium driver handle presence content django teardown interact syntax switch browser browser installed project license explanation django postgresql structure database django example interaction friendly consistent teardown integration attribute awesome splinter bugfix db language lettuce feature request advice welcome planned saucelabs username saucelabs integration consistent opaque firefox phantomjs alternate browser database switch happy syntax ability iphone flexible system context switching meaning element subject phantomjs firefox coverage scenario component continue common crutch cucumber roadmap roadmap splinter cucumber webdriver gotcha splinter friendly section verbosity harvest project specific google browser common package syntax implement anything switch bugfix django beautiful broken utility actual helper javascript verify natural lettuce splinter specific development db install documentation noticed specify selenium consistent grammar inconsistent system django browser awesome saucelabs account everything element describe django integration driver installed brilliant directory postgresql support prompt helper crutch browser selenium information visible refresh flexible syntax specify subject", "pypi_keywords_clean": ""}, "/python-freezerclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute openstack freezer freezerclient management documentation repository license freezer library disaster recovery library freezer version repository installation openstack disaster development license version", "pypi_keywords_clean": "freezer"}, "rspivak/sftpserver": {"git_readme_keywords": "python python client paramiko sftpserver sftpserver transport private key installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python client paramiko sftpserver sftpserver transport private key installation", "pypi_keywords_clean": ""}, "/bottle-utils-form": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection framework package web framework web processing validation", "pypi_keywords_clean": "bottle utils form"}, "lmacken/tbgrep": {"git_readme_keywords": "python example cherrypy number unique traceback method return convenient traceback information tbgrep extract tbgrep module timestamp various pipeline module information tbgrep traceback python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python example cherrypy number unique traceback method return convenient traceback information tbgrep extract tbgrep module timestamp various pipeline module information tbgrep traceback python", "pypi_keywords_clean": ""}, "jhermann/pygments-markdown-lexer": {"git_readme_keywords": "contribute directory project registration markdown visible documentation markdown syntax pyinvoke brandl available specify language gallery sphinx version bpython development environment virtualenv package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance software express hermann specific language copyright applicable version", "pypi_keywords_clean": "pygments markdown lexer highlighting"}, "/not": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ross/requests-futures": {"git_readme_keywords": "synchronous asynchronous futuresession multiple library possible instance separate session object documentation additional memory futuressession constructor processpoolexecutor session instance executor futuressession example exception important global installation number property functionality response response interpretor required additional processing release memory session context background additional default threadpoolexecutor instance required required release context manager adjust request required session requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "synchronous asynchronous futuresession multiple library possible instance separate session object documentation additional memory futuressession constructor processpoolexecutor session instance executor futuressession example exception important global installation number property functionality response response interpretor required additional processing release memory session context background additional default threadpoolexecutor instance required required release context manager adjust request required session requirement", "pypi_keywords_clean": ""}, "biothings/mygene": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package feedback access biothingsclient package equivalent continue optional simplicity performance annotation installation package universal tutorial documentation", "pypi_keywords_clean": "biology gene annotation web service client api"}, "wichert/lingua": {"git_readme_keywords": "option function support c basic expression language single extractor example specify example package domain example new custom folder class indicate format domain lingua plural message translate used password example function form used language used job detect helper shell parameter add break variable example keyword number singular change python keyword option distinguish lingua python extractor single application babel message used validation option comparison compatibility babel parameter python format multiple canonical copy package configuration lingua c python python old source configure specific example command useful extensible reliable detection custom extractor linua keyword specifier handle single source specifier function message extraction lingua parser number example used multiple specify parameter supported extract translatable function signature used configure add keyword argument markup language used python check po section entry used provide language zcml information filtering simple format zcml extractor extractor helper helper script current directory attribute comment custom lingua lingua extractor default global configuration contexts specify used context detection python lingua support work chameleon extractor specify directory lingua process translation function plugin logic identical xml extractor button change extraction logic used domain default expression catalog creation domain filtering directory configuration command gettext gettext babel translation break example original syntax lingua detect new form check translation configuration single password button reasonable job configuration markup canonical texts plural support extension extractor parent element support filtering singular plural po option section lingua reasonable useful example specify add extra enable domain chameleon parameter specify password extension configuration python source registered extractor option lingua lingua configuration support support gnu gettext extractor example parameter used instruct lingua initial catalog setup configuration marker comment signature keyword bug message entry section way extract postfix example second specify domain direct support valid specify comment translation domain check domain parameter default language available several empty configuration default directory command python direct popular parameter number input extension specify option example message contexts lingua package default configuration different specific extractor extensible software prefixed distinguish specifier extension format message shell script translatable texts used plural multiple translation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "option function python code support c allow message default keyword file july domain example lingua include teixeira patch babel extractor first language pot metadata extractor file schulze january domain extract fix error helper shell used sentence parsing python example keyword processing python allow setting undeclared number singular change python distinguish lingua april handle python extractor handle syntax sentence text used validation sentence wonderful use command translaction html extractor august correct import ability copy package prefix prefix florian schulze filtering use plural text extractor name tool perform entry look sentence example lingua parser number example valsecchi november used multiple output rename supported fixes update correct linenumber identical chameleon due lack used python configure lingua supported due use different attribute label tree lingua correct python fix parsing pot file result bug use multiple january po ingmar steen november fix text fixes december include global configuration function call show correct work patch ingmar use parameter fixes error extraction logic default expression catalog creation file guarantee fix installation support comment full keyword use message gettext babel package documentation invocation legacy parameter gettext refactor extractor extractor conversion configuration markup use single space valid example mako directory explicit try extract support filtering singular plural st\u00e9phane brunner fixes handle babel fix lack absolute single wheel use file fix timezone february xml translation context python supported useful example use html input fixes chameleon configuration fix compatibility patch metadata wonderful wonderful support attribute support support gnu gettext translate first setup configuration engine selection number reporting new command july update tree create parameter use release february second keyword list allow configuration perform sanity fixes november example setting default language configuration st\u00e9phane fixes fix list full april lingua outer element canonical text specifier use python patch parameter point curly default configuration place global prefixed distinguish patch tisdall used plural multiple translation february xls base class example sentence select domain expression language example package msgid wonderful html notation call specifier use python class scan specify text outer domain lingua plural message template text first specify result expression parameter add steen june parse python report lingua parse take domain error message brunner august pasquet patch linenumber error add minimal python old fix option reliable detection keyword specifier error november html file home folder file argument character format compatible add schulze fix entry outer chameleon parse used html gaifas december function signature add keyword extractor abort november different supported chameleon check po used provide marec pasquet attribute november add new message abort extractor handle correct handling zcml extractor fixes tal update xml reference columns keyword argument keyword python msgstr name make possible november add earlir release lingua lingua first release new extractor detection python example show globally logic identical engine used zope configuration simple tool button change valid flag package root chameleon expression wonderful msgstr directory configuration python compatibility example original error fixes lingua handle extra context check translation configuration single include brief ngettext pluralize template handling fixes add automatic zpt handle html extension extractor parent element path list default list november extend po lingua version label password handle use option section lingua reasonable look current po conversion extractor ignore notation fixes handling chameleon compatibility error abort february python source compatibility november pot timestamps minimal polint different version timezone format handling xml outer sentence rewritten use instruct lingua package december possible configure ofter character pot creation fix laurent command look home directory specify domain possible python module file user lingua use replacement gnu specify comment filter processing extend automatic brief description try translate file babel global config code patch empty element look outside directory command call python july fix extraction tool update example parameter number input language comment extension specify fix incorrect extract translateable modify message parameter omar example markup message id command extract specific extractor domain filter fix bug format message shell script work add explicit config extractor use december add point tool include xls local python specify exact single extractor example specify po file tal template extractor configuration supported format translation comment indicate format correct xml extractor rewritten used password example function scan directory plugin api setting message pot language used guarantee broken january fix extractor strip python compatible support atomic html parser break variable msgstr extra fix html single application comment reference allow selection take sample context information root source multiple canonical api little configure specific example command extension use custom extractor february fix compatibility tool specifier function translateable texts message extraction hint try william wu specify parameter extract translatable marker use used florian number work ignore xml original text create custom september update legacy babel august make language zcml information filtering simple format file extractor fixes april august zope handle multiple current directory syntax error fix python tool root file inheritable form label contexts specify exact number name example add support used context patch september chameleon extractor plugin lingua process translation function extractor lingua wu handle work january xml extractor create file rocky feng detect new timestamps tool text wonderful information important valid xml python november polint tool password button add flag november allow location message january extend comment full config file folder use comment tags option point tisdall use text example version pot add extra file list enable domain omar kohl translate result single august registered extractor lingua configuration expression engine support ngettext extractor example prefixed special fit syntax initial catalog bug parsing fixes invalid check global signature keyword obsolete module support entry section january make add default way extract context september lot false text used use new code check rename extractor include reporting processing steen fix use xml translation domain xls convertor name used several configuration default python direct popular handle local define new translatable text add comment supported xml default prefix december user home june fix gettext keyword comment end option example extend xml extensible software rewrite python useful extractor wheel distrbution use information number parameter basic give template engine hint zpt changelog january november rewrite new custom tweak changelog wonderful msgid description output take python xml zcml extractor fixes distrbution python fix use form used file extension job detect valid call absolute import format pot bag use domain file domain option make keyword option use function january use fixes august babel message colon june selection fixes use option option comparison compatibility babel python format context tal configuration lingua c python extraction plugin handle python incorrect handling useful extensible software use label form markup p fuzzy single source dot operator single xls january add keyword processing le marec tool use used configure markup language space ofter section entry filtering python july paper full text august refactor extract message translation call format flag extractor helper helper script custom source tree extractor default template syntax flag space support message xml parser whitespace fixes gettext command use numeric operator keyword lingua support linua include handling extractor fix handling xls file specify directory old name atomic file extractor check po entry used domain engine default feng january domain filtering translation break command gettext used lingua syntax lingua add option new extraction html reasonable job canonical texts example take plural support handling fixes object use use initial point file template engine debug leftover name attribute point lingua use base incorrect invocation patch november april break make linua parameter specify name extractor expression fixes extension configuration first parameter texts code text first broken pot steen pull parameter fix attribute zpt option lingua large tool lingua release error python python code first parameter used patrick valsecchi use configuration source code marker comment metadata add use babel white fixes example use bug message code fixes whitespace handling check python postfix example available use fixes february parameter python many laurent daverio extractor identical comment use direct support new package code november xml whitespace script use xml parsing show canonical domain parameter support file configure babel patch william babel extraction attribute default version number configuration file parser tweak patch hugo message contexts argument patrick special marker lingua package platform changelog package python july specifier extension translatable texts use keyword catalog changelog include used september modify extractor api", "pypi_keywords_clean": "translation po gettext babel"}, "pyeve/eve-sqlalchemy": {"git_readme_keywords": "customizable application process dictionary offical project project documentation complete documentation offical familiar directory repository database configuration sqlalchemy extension restful metadata different relationship configure", "git_description_clean": "sqlalchemy data layer restful apis", "git_keywords_clean": "flask sqlalchemy python rest", "pypi_description_keywords": "offical project complete extension restful configure preview support transaction project documentation repository changelog embedded familiar dominik kellner iarocci different relationship example customizable application process tutorial mahmud directory repository sqlalchemy metadata dictionary fallback operator documentation offical database configuration amleczko", "pypi_keywords_clean": "flask sqlalchemy rest"}, "/pyobjc-framework-addressbook": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information documentation database pyobjc documentation documentation general addressbook framework translation framework pyobjc documention information", "pypi_keywords_clean": "pyobjc addressbook"}, "kennethreitz/eng-join": {"git_readme_keywords": "installation english support", "git_description_clean": "english joiner python", "git_keywords_clean": "", "pypi_description_keywords": "english joiner", "pypi_keywords_clean": ""}, "jstasiak/zeroconf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "equality startup shutdown m\u00fcller service discovery typeerror subtype browsing iteration separate install unsupported python baseexception several browser jonathon correct pointer stephenrauch stephen dnshinfo support version browsing service correction python compatible compatible python debian unstable service unregistration python logging binary various address hostinfo traceback dummy network openbsd compatibility distribution python luckydonald github address browser startup allowed installation pyzeroconf multicast incompatible adjusted justingiorgi herczy installable default compression discover installation python shutdown handler interface sandstr\u00f6m project eaddrnotavail support unicast incoming service herczy stephenrauch service removal validation service dnstext insensitivty explicit dependency oversized skytt\u00e4 object closed status unknown logging selection discovery python python allowed mcbrine original daemonic maintenance directory changelog request x mdnsresponder incompatible problem readname message improved exception pattern python compatibility example browsing unicast correct quieter jonathon paisley miladinov method support service browser compatible bonjour occasional unboundlocalerror undefined x address coverage timeout problem shutdown license bonney schoutsen python support application failure serviceinfo contructor property particular unstable python zeroconf object condition travis original william problem module package compatibility cpython defined exception regard incompatible restricted available network default configurable github project ifaddr validation jakub stasiak python version implement service python defective pypy security problem support python dependency version miranda unicast support allowed incoming support improved multibyte serviceinfo constructor william mcbrine", "pypi_keywords_clean": "bonjour"}, "/shakedown": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overview", "pypi_keywords_clean": ""}, "lrowe/envfile": {"git_readme_keywords": "similar envdir coniguration", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coniguration release envdir", "pypi_keywords_clean": ""}, "scanny/python-pptx": {"git_readme_keywords": "application information information available management updating powerpoint presentation database downloadable powerpoint presentation customized powerpoint production engineering library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "major information available rationalize element location inheritable defrpr c support external release history vertical banding object refactor backward box class lineformat class first expand addition boilerplate xml position allow customxml available browse compensate powerpoint paragraph alignment database content change radius graphicframe object fix issue hotfix accomodate radius corner first column fix potential textframe paragraph hyperlink property autoshape install bug rationalization refactor xml setter issue c tx typical vertical alignment allow interrogation smartart rudimentary groupshape automate production color inherit explicit customized powerpoint experimental option xy default template uppercase extension dependency pillow oxml position callout keynote presentation database engineering status chartformat access compensate added pictureplaceholder method supported changelog release margin boolean property hotfix issue delete unused access placeholder background accomodate connector ascii consistent example header first xml handling hotfix allow pillow restructure fix unicodedecodeerror number rudimentary connector presentation object horizontal banding document attribute bubble production engineering lxml objectify unicode property fix index segment xml character first release vulnerable pillow support feature paragraph boundary powerpoint behavior content downloadable newline distinguishable exception fix issue adjustment object backward bullet graphical object version fix color property inheritance breakage dateax element distinguishable paragraph recursive graphicframe fix video support textbox object boolean application several present control character potential install color brightness segment fix performance high gradient feature option parameter indentation support category python support stringio addition updating powerpoint c dateaxis placeholder access particular charttitle object appearance release basic numeric category individual width height python library access consistent powerpoint section italic support module certain behavior c experimental feature typeface italic hyperlink support support issue location control added group extension fix autoshape connector transparent adhere dashed pillow version alignment property character powerpoint presentation freeform element category python feature layout placeholder color width efficiency property c overlay doughnut banding vertical network resource bulk web application importing package invalid xml connector picture middle bottom documentation quick history property callout arrow arbitrary series change chartdata access hierarchical getter exception rectangle position txbody feature bmp support series work management management system index support python database network right build update column inheritable layout information support arbitrary class position object overlay element feature fix element compensate picture group inherit color rgb specific group spreadsheet", "pypi_keywords_clean": "powerpoint ppt pptx office open xml"}, "chbrown/viz": {"git_readme_keywords": "interface unguessable granularity terminal pyplot successful graphical matplotlib extremes histogram example terminal install maximum website current directory response useful arithmetic visualization terminal license copyright minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interface unguessable christopher successful graphical extremes terminal install maximum directory website license copyright granularity terminal arithmetic visualization terminal example minimum", "pypi_keywords_clean": "console terminal data visualization plot histogram"}, "unk2k/flask-memcache-session": {"git_readme_keywords": "memcache install install install pip example memcache session", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "memcache install install install pip example memcache session", "pypi_keywords_clean": ""}, "michaelhelmick/python-flickr": {"git_readme_keywords": "information dynamic library activity library interface authorization installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information dynamic library activity library interface authorization installation", "pypi_keywords_clean": "python flickr oauth api"}, "/dpkt-fix": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "packet creation simple packet", "pypi_keywords_clean": ""}, "/rekall-yara": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project regular support libyara common update special external dependency libyara distribution version", "pypi_keywords_clean": ""}, "Karaage-Cluster/karaage": {"git_readme_keywords": "karaage karaage account management source repository project software version documentation monitoring software application information plugin institute available license report cluster account account information various track account creation information track software plugin register karaage cluster repository anything", "git_description_clean": "cluster account management tool", "git_keywords_clean": "", "pypi_description_keywords": "karaage karaage account management source repository project software version documentation monitoring software application information plugin institute available license report cluster account account information various track account creation information track software plugin register karaage cluster repository anything", "pypi_keywords_clean": "karaage cluster user administration"}, "Miserlou/zappa": {"git_readme_keywords": "cron gateway route set deployment live cool xraymiddleware documentation pyenv love pass remote file file console nifty console amazon get json override authorizer package deploy asynchronous task command callback raw django gateway context zappa blog aware default custom aws inside event horizontal want check cookie map wsgi interface doug beney discussion minimum read edgar zappa asynchronous image uploads create manage zappa run supply custom configuration option private cloud params query advantage kms lambda arn work progress gateway api issue pull cli runtime joe weiss dev production handy want want invoke ready conda rollback version flat json zappa simple call function touch api zappa slack library learn provided argcomplete create segment much sense allow work hash file manager amazon set function necessary amazon large enterprise api access addition http man gayle define many make sure box awesome python interview zappa uncaught example want choose deploy enable lambda exit lambda invocation control add pull request path mapping way enable certificate manager profile use high availability return value context want need change user pool dev environment confirmation prompt year additional version control file connection training team perform basic online processing print stacktrace zappa sentry request wildcard iopipe monitor microservice book uncaught exception django flask project virtual id monitoring progress utility security policy set plan file bucket patrick agin virtual private type environment policy use use argument uploads aws common log use api summit seoul local timezone upload archive command app use combination order request certificate http auth oauth provider aws certificate want expose use many tail logs instrument code file size likely appropriate contain application key bundle gateway cloudwatch japanese deploy set desired environment package request template interview rich utilise aws zappa virtual easy build current invocation use authorizer expensive bug single command live instance unique uuid authorization api function well similarly simple dynamodb table zappa serverless want create machine local beney dan behalf function excessive high upload small event dictionary zappatista official function execute archive create archive bucket deploy api function warm configure package server online sns sqs pip zappa \u3067 server server set environment archive default application access tokusatsu aws auditable package type pyramid certificate place lambda invokefunction vpc want read learn use api invoke variable value inviter tiny send request example private sure meet example select add file aws region zappa aws zappa top function official cli resize ability cloudwatch log domain subdomain service ticket amazon alexa flask django use git serverless web edgar roman key api development project nat create serverl\u00f6sa applikationer desired domain capture decorator enabled cloudwatch vpc well default log queue feature addition zappa supply lambda asynchronous functionality new usage dynamodb lambda amount new freepoll online gateway private zappa lambci alternative celery error see use app application available invocation execute likely able relic package deployment custom current aws legal compliance production deployment need configure difference minimal event response region wish serverless wsgi django status authorizer potential file end implement authentication logs filter step create execute file file status remote value value example team ci file custom lambci building python zappa global speed create first false define uuid package zappa invoke python installation use external whole thing python minus team use provide function function execution event context argument filter basic usage manager console kimmo patrick monitoring status cognito identity manager acm lambda zip microservice official basic application lambda api use new code example zappa apps value function profile analyze dan man mapping example domain free wish enable app example aws iam entire arn come handy app live invoke url configure dynamodb object store wunderlist xrayvision extra load balancer upload new inverse show local profile object file package available come queue custom ssl plenty see status sns topic regex route jwt token select api hurry click expose variable similarly supply allow lambda list detect application cool explain import user tail framework building web apps handy aware lambda worker able handle previous version help django repeat travisci application local section custom deploy python anything ed handy guide new python agin roberto docker monitor simple awesome status deployment deployment event seoul zappa\uc640 custom domain ticket amazon server amazon python apps header set single cookie application load file update basic django aws account function invocation python python define policy external reporting deploy serverless zappa pillow schedule native environment lambda infection aws console create internet gateway configuration show log use example lambda execution call create redis cloudfront mb project zappa uploads django integration pass json set local continuous integration create new occur regular documentation python gateway console see section python code want map function invoke zappa print function allow current function return multiple application single lex bot traffic lambda way high deployment important zappa homepage signup utility cache aws make code execute function gateway process code touch look project load large code please well key django management development training number file api object set tutorial screencast permanent infrastructure millisecond life import path warm zappa execution detail uploads support project directory lambda sns need see startup overhead wow mean region request auth want provider decode python wsgi example get zappa flask request pass python deploy good start warm lambda certificate http define event application static sense usecase remote aws printed local cms busy vpc aws storage space function wish bot intent issue ssl task event dns auth uploads zappa virginia department run see similar exception cloudfront distribution map body manage iam domain ssl api behalf see api utility microservice small handler aws paradigms option deploy update app endpoint zappa auth deploying authorizer api file remote portable large avoid file memory cache create subscribe want look flask bottle pass command zappa cloudwatch awesome installation route table theo chitayat original issue zappa contentful start see want pay zappa bittorrent lambda rest limited wsgi application function create nat pillow run start breach zappa mackenzie lambdamailer endpoint decorator example zappa behavior create unique request please use route archive uploads homepage zappatista tutorial aws registration microservice first step flask apps deployment stage use xraymiddleware place bucket prevent duplicate service want dynamodb backend table create function configuration kms encryption zappa training handler lambda use native zappa request filter syntax allow deploy touch underlying package zappa exception event cognitoidentityid apistage wsgi apps use deploy command deploying zappa deployment aws documentation sqs dynamodb aws simple directory application want design deal slack slash next need control behavior region use receive response small package consistent global available root serverless image rollback lambda serverless policy lambda web application shippable state undeploy need well public necessary zappa test suite available local repo package file balancer event patreon default unhandled file uploads tracker work header cognitoidentityid python information value header guide deploying create route new relic use remote repo use sqs queue application file blueprint example invoke remote get cognito web app set upload source zappa look inside authentication need remote function aws service subscribe sns provide consistent cause sean paley github issue binary file amazon api syntax tail file place code portable application order zero downtime logs remote tracker experimental command instance building new remote zappa unique auditable mapping custom lot traffic correspond profile issue please cloudwatch logs access dlq static project run great deploying virtualenv command run upload make sense zappa use deploy primary zappa python retry event instance example rest large information application robust solution zappa\uc640 \ud568\uaed8\ud558\ub294 deploying serverless patron initial setup native aws certification deploying use skip lambda zappa handler necessary production ready certificate deploying generate api dlq resource set multiple logs specify kms key file service variable http sqs deletemessage extension token inline rest package george sibble execution application set zappa wsgi app json avoid manage necessary static web certification zappa infinite header receive change zappa profile aws application live use information likely want zappa shippable direct invocation guide define available lambda inside application avoid stale deploying domain supply file top python standard authorization call deploy update completion enabled elasticache redis similarly want execute instance zappa application welcome please official zappa user input life cycle valid wsgi db example function lambda building amazon similarly inverse \ud568\uaed8\ud558\ub294 serverless need similar api endpoint package package function package django application minimal setup application web matt jackson application use merch support variable json complete arn true example zappa environment community smart application project weiss kimmo minimum policy schedule set maintenance fraction acm use access key occur outside deploy basic jackson sean check make response new integration zappa limit concurrent want set yaml deploying system application package see related clone repo online simple function route flask zappa certificate single gateway lambda serverless microservice ssl certification api zappa response code please file use configuration package contain package active reporting tool contentful aws verify domain package want apps easy amount work cause email lambda current virginia region minute want route response zappa zops albs resource unique related issue use readme http header cognito user advantage api inside vpc lambda multiple precedence try create deploy alexa support flask outside zappa channel serverless correct execution tiny service service zappa string load django similarly progress jankyglance lambda local much encryption environment vpcs building zappa verify notification service layer processing contact vtl map simple pythonic bash completion use flask letter queue secure file smart interesting hello world set kms dns provider provide list parallel string filter deploying zappa set mapping database bucket cli code authorization monitoring different information hash pillow zappa dns authentication company configuration example use capture django psst uri add server warm docker docker inline lookup access management function inside specify output direct aws service flask define deployment gateway distribution django use application context new lambda add sns redundancy call zappa execution zappa infrastructure traditional get aws young example event roberto martinez get keyword prompt deploying application framework necessary wsgi hug application cycle serverless lookup db route dns deploying django fraction cost design application function application remote django domain aws deletemessage api lambda communicate change return need track place zappa template status slides serverlessconf way set analyze zappa simple duration development add liberal set function aws iam policy gayle juancito certain unnecessary cloudformation template infection toolkit select virginia sf zappa key iam merdler kravitz many exclusive skip confirmation zappa press want discuss connection string python valid application set zappa integration ready deploy example hug api gateway virtual environment availability helpful configure application remote environment filter http python web default feature decorator create image docker need upload aws cognito bucket access add zappa local cache streams sns function handler order return image processing invocation exception common practice ci open interface app please make select usage behavior use kinesis streams topic code internet minimal global app uploads example suppose basic instance rollback want build access database part vpcs box aws new api initial load organization repeat zappa please private api example zappa environment pool authorizer press zappa scale separate aws function region virtualenvs call run ffmpeg authorizer multiple result different lambda simple notification code zappa remote print easy wow lambda dead new upload lambda console available remote gateway resource need help object pair tiny cms e matt linter available aws feature apply http authentication message id apps django automatic route attempt retry aws support use zappa paradigms good inside lambda exception handler apps aws docker part json output bora zerong handler execute project maintainability policy unsigned simple zappa outside lambda endpoint configuration allow instrument amazon iam instance perform local dev package handler dynamodb kinesis stale test need add free ssl execute change contact miserlou something similar lambda albs return instance free alternative command occur handler file gateway aws sensitive therefore serverless okay manager deploying allow use virtual http size set repo machine toby wang explain decision need look direct user wish invoke package application create custom expression schedule minimal warm example flask public internet alexa skill end service task source endpoint undeploy package base path completion bash zappa terraform build deploy mailchimp signup application memory create file finish initialization value task overhead difference manage virtualenvs resource create different function small large asked confirmation syntax file duration string unique package specify local suite run aws work set false production single request url lambda different console console lambda process discussion related django remote interpretable python output filename domain copy environment archive aws doc endpoint processing use pyenv practice amazon zappa super isolation legal code exception system use django zappa dead letter boto execute response response aws command box map api template please slack inviter package use execution aws basic deployment inside code wang gareth linode heroku usage plan environment zappa local virtual filename package zero maintenance provider aws call oauth voter registration launchlab sean zappa zappa invoke lambda gateway select policy generation example dynamodb appropriate production sense private building serverless status check lambda function zappa execution response body domain api loschilov korey arn certificate logs deployment invoke function slack channel dev free work create associate json object love manage zappa guide specify argument instance suppose define local status need use service cloudwatch kinesis dynamodb zappa lambda set official backup free require example part handle result lawrence launchlab lambda docker large account aws load lambda read aws uploaded application bad lambda kinesis sns build hybrid issue see large project use django certificate dns additional effort usage initial alexa ask support function add startup final package need provide storage mb configuration see function create wsgi middleware paste app deployment different event vpc secure django project zappa first task execution zappa related aws summit option function output zappa deployment configuration execution policy zip sizes application likely useful official documentation gateway hard pythonic object django image cloudwatch manipulate monitor profile downtime zero bucket zappa provision alb local environment alb useful use command tutorial tutorial service event support development potential use docker image policy api serverless sf file define code previous help define template use lambda outside id application aws lambda docker dead identity add invocation django application code return message secure book building access api gateway service instance come decorator zappa django body vtl vpc need id key use risk json set open ticket default iam execution environment aws aws aws privatelink event source default show serverlessconf london root directory cloudwatch invocation readme test need define zerong toby unhandled exception lambda remote rest good output file wildcard domain deploy zappa aws cloudfront block asynchronous cost current resource policy invokefunction lambda want api zappa domain static binary label get yaml json certificate domain aws api look something framework likely blog mailchimp argcomplete python cloudfront web call command url discussion open pull automatic security csv file sibble joe response return api key template similarly instance execute pr aws update equivalent need console select receive iam server millisecond risk yaml command default kind zappa able hard limit want cancel see asynchronous route check fat application policy enable build application please contact logs api convenience zappa topic sqs work open good news gareth e initialization file click see instance elasticache api require local console active virtual management command zappa enable uploads django place lambda lambda attempt fifo environment template installation configuration cloud vpc replacement lambdamailer discussion original web framework wsgi web distribution use set encrypted application stage set outside wish execute new code high throughput zappa project access add network interface traditional http psst deploying aware type form voter sure rogue space application mapping response lambda environment lambda permissive possible capture local project default zappa invocation remote overlapping subdomain request similar avoid much merch key value console cli london process uploads dynamodb image host order provide invoke interpretable deployment specify zappa cloudfront information use use library keyword authorizer configuration stream sqs authentication allow deployment api configuration zappa handler inside flask api fashion receive binary see slides contact form bittorrent tracker roman django command string ffmpeg inside monitor aws directory storage aws environment auto argument purge jankyglance yahoo zappa docker part pizza sentry new sentry iopipe block example sqs call ready experimental bittorrent associate api copy entire able get function use slides serverless git head property object new archive serverless slack set correct get free aws labs project please \u3067 hello project zappa easy use see help aws zappa guide zappa deploy application purge logs api response limit package id labs blueprint logs pass use functionality aws deploy mackenzie aws environment variable unhandled backup virginia environment virtual use lambda lambda compatible described lambda instance multiple new custom similarly please http server model gateway zappa share authorizer middleware upload stacktrace cloudwatch free log wish midnight business use deploying valid aws key information processing saas application way part team internet gateway key arn decode jwt zappa pay kravitz philippe check handy user raw management automatic binary uploads learn list regex code use use alb default aws chitayat george effort part vtl mapping add key manipulate remote delete archive gateway cloudformation require direct acceptable set python flask pass key sns message application type enable aws backend capture available addition see example set access use gdrive application zappa usecase want mean serverless conform isolate please access inside custom static want use logs use encrypt certificate use aws django plugin key use pass async python package file function use call use code serverless python paley theo combination aws start function separate lambda private model bucket handy value complete zappa building pair object test pr wish use want utilise execution default super easy gateway place context variable discuss issue utc timezone request discussion", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cron gateway route set deployment live cool xraymiddleware documentation pyenv love pass remote file file console nifty console amazon get json override authorizer package deploy asynchronous task command callback raw django gateway context zappa blog aware default custom aws inside event horizontal want check cookie map wsgi interface doug beney discussion minimum read edgar zappa asynchronous image uploads create manage zappa run supply custom configuration option private cloud params query advantage kms lambda arn work progress gateway api issue pull cli runtime joe weiss dev production handy want want invoke ready conda rollback version flat json zappa simple call function touch api zappa slack library learn provided argcomplete create segment much sense allow work hash file manager amazon set function necessary amazon large enterprise api access addition http man gayle define many make sure box awesome python interview zappa uncaught example want choose deploy enable lambda exit lambda invocation control add pull request path mapping way enable certificate manager profile use high availability return value context want need change user pool dev environment confirmation prompt year additional version control file connection training team perform basic online processing print stacktrace zappa sentry request wildcard iopipe monitor microservice book uncaught exception django flask project virtual id monitoring progress utility security policy set plan file bucket patrick agin virtual private type environment policy use use argument uploads aws common log use api summit seoul local timezone upload archive command app use combination order request certificate http auth oauth provider aws certificate want expose use many tail logs instrument code file size likely appropriate contain application key bundle gateway cloudwatch japanese deploy set desired environment package request template interview rich utilise aws zappa virtual easy build current invocation use authorizer expensive bug single command live instance unique uuid authorization api function well similarly simple dynamodb table zappa serverless want create machine local beney dan behalf function excessive high upload small event dictionary zappatista official function execute archive create archive bucket deploy api function warm configure package server online sns sqs pip zappa \u3067 server server set environment archive default application access tokusatsu aws auditable package type pyramid certificate place lambda invokefunction vpc want read learn use api invoke variable value inviter tiny send request example private sure meet example select add file aws region zappa aws zappa top function official cli resize ability cloudwatch log domain subdomain service ticket amazon alexa flask django use git serverless web edgar roman key api development project nat create serverl\u00f6sa applikationer desired domain capture decorator enabled cloudwatch vpc well default log queue feature addition zappa supply lambda asynchronous functionality new usage dynamodb lambda amount new freepoll online gateway private zappa lambci alternative celery error see use app application available invocation execute likely able relic package deployment custom current aws legal compliance production deployment need configure difference minimal event response region wish serverless wsgi django status authorizer potential file end implement authentication logs filter step create execute file file status remote value value example team ci file custom lambci building python zappa global speed create first false define uuid package zappa invoke python installation use external whole thing python minus team use provide function function execution event context argument filter basic usage manager console kimmo patrick monitoring status cognito identity manager acm lambda zip microservice official basic application lambda api use new code example zappa apps value function profile analyze dan man mapping example domain free wish enable app example aws iam entire arn come handy app live invoke url configure dynamodb object store wunderlist xrayvision extra load balancer upload new inverse show local profile object file package available come queue custom ssl plenty see status sns topic regex route jwt token select api hurry click expose variable similarly supply allow lambda list detect application cool explain import user tail framework building web apps handy aware lambda worker able handle previous version help django repeat travisci application local section custom deploy python anything ed handy guide new python agin roberto docker monitor simple awesome status deployment deployment event seoul zappa\uc640 custom domain ticket amazon server amazon python apps header set single cookie application load file update basic django aws account function invocation python python define policy external reporting deploy serverless zappa pillow schedule native environment lambda infection aws console create internet gateway configuration show log use example lambda execution call create redis cloudfront mb project zappa uploads django integration pass json set local continuous integration create new occur regular documentation python gateway console see section python code want map function invoke zappa print function allow current function return multiple application single lex bot traffic lambda way high deployment important zappa homepage signup utility cache aws make code execute function gateway process code touch look project load large code please well key django management development training number file api object set tutorial screencast permanent infrastructure millisecond life import path warm zappa execution detail uploads support project directory lambda sns need see startup overhead wow mean region request auth want provider decode python wsgi example get zappa flask request pass python deploy good start warm lambda certificate http define event application static sense usecase remote aws printed local cms busy vpc aws storage space function wish bot intent issue ssl task event dns auth uploads zappa virginia department run see similar exception cloudfront distribution map body manage iam domain ssl api behalf see api utility microservice small handler aws paradigms option deploy update app endpoint zappa auth deploying authorizer api file remote portable large avoid file memory cache create subscribe want look flask bottle pass command zappa cloudwatch awesome installation route table theo chitayat original issue zappa contentful start see want pay zappa bittorrent lambda rest limited wsgi application function create nat pillow run start breach zappa mackenzie lambdamailer endpoint decorator example zappa behavior create unique request please use route archive uploads homepage zappatista tutorial aws registration microservice first step flask apps deployment stage use xraymiddleware place bucket prevent duplicate service want dynamodb backend table create function configuration kms encryption zappa training handler lambda use native zappa request filter syntax allow deploy touch underlying package zappa exception event cognitoidentityid apistage wsgi apps use deploy command deploying zappa deployment aws documentation sqs dynamodb aws simple directory application want design deal slack slash next need control behavior region use receive response small package consistent global available root serverless image rollback lambda serverless policy lambda web application shippable state undeploy need well public necessary zappa test suite available local repo package file balancer event patreon default unhandled file uploads tracker work header cognitoidentityid python information value header guide deploying create route new relic use remote repo use sqs queue application file blueprint example invoke remote get cognito web app set upload source zappa look inside authentication need remote function aws service subscribe sns provide consistent cause sean paley github issue binary file amazon api syntax tail file place code portable application order zero downtime logs remote tracker experimental command instance building new remote zappa unique auditable mapping custom lot traffic correspond profile issue please cloudwatch logs access dlq static project run great deploying virtualenv command run upload make sense zappa use deploy primary zappa python retry event instance example rest large information application robust solution zappa\uc640 \ud568\uaed8\ud558\ub294 deploying serverless patron initial setup native aws certification deploying use skip lambda zappa handler necessary production ready certificate deploying generate api dlq resource set multiple logs specify kms key file service variable http sqs deletemessage extension token inline rest package george sibble execution application set zappa wsgi app json avoid manage necessary static web certification zappa infinite header receive change zappa profile aws application live use information likely want zappa shippable direct invocation guide define available lambda inside application avoid stale deploying domain supply file top python standard authorization call deploy update completion enabled elasticache redis similarly want execute instance zappa application welcome please official zappa user input life cycle valid wsgi db example function lambda building amazon similarly inverse \ud568\uaed8\ud558\ub294 serverless need similar api endpoint package package function package django application minimal setup application web matt jackson application use merch support variable json complete arn true example zappa environment community smart application project weiss kimmo minimum policy schedule set maintenance fraction acm use access key occur outside deploy basic jackson sean check make response new integration zappa limit concurrent want set yaml deploying system application package see related clone repo online simple function route flask zappa certificate single gateway lambda serverless microservice ssl certification api zappa response code please file use configuration package contain package active reporting tool contentful aws verify domain package want apps easy amount work cause email lambda current virginia region minute want route response zappa zops albs resource unique related issue use readme http header cognito user advantage api inside vpc lambda multiple precedence try create deploy alexa support flask outside zappa channel serverless correct execution tiny service service zappa string load django similarly progress jankyglance lambda local much encryption environment vpcs building zappa verify notification service layer processing contact vtl map simple pythonic bash completion use flask letter queue secure file smart interesting hello world set kms dns provider provide list parallel string filter deploying zappa set mapping database bucket cli code authorization monitoring different information hash pillow zappa dns authentication company configuration example use capture django psst uri add server warm docker docker inline lookup access management function inside specify output direct aws service flask define deployment gateway distribution django use application context new lambda add sns redundancy call zappa execution zappa infrastructure traditional get aws young example event roberto martinez get keyword prompt deploying application framework necessary wsgi hug application cycle serverless lookup db route dns deploying django fraction cost design application function application remote django domain aws deletemessage api lambda communicate change return need track place zappa template status slides serverlessconf way set analyze zappa simple duration development add liberal set function aws iam policy gayle juancito certain unnecessary cloudformation template infection toolkit select virginia sf zappa key iam merdler kravitz many exclusive skip confirmation zappa press want discuss connection string python valid application set zappa integration ready deploy example hug api gateway virtual environment availability helpful configure application remote environment filter http python web default feature decorator create image docker need upload aws cognito bucket access add zappa local cache streams sns function handler order return image processing invocation exception common practice ci open interface app please make select usage behavior use kinesis streams topic code internet minimal global app uploads example suppose basic instance rollback want build access database part vpcs box aws new api initial load organization repeat zappa please private api example zappa environment pool authorizer press zappa scale separate aws function region virtualenvs call run ffmpeg authorizer multiple result different lambda simple notification code zappa remote print easy wow lambda dead new upload lambda console available remote gateway resource need help object pair tiny cms e matt linter available aws feature apply http authentication message id apps django automatic route attempt retry aws support use zappa paradigms good inside lambda exception handler apps aws docker part json output bora zerong handler execute project maintainability policy unsigned simple zappa outside lambda endpoint configuration allow instrument amazon iam instance perform local dev package handler dynamodb kinesis stale test need add free ssl execute change contact miserlou something similar lambda albs return instance free alternative command occur handler file gateway aws sensitive therefore serverless okay manager deploying allow use virtual http size set repo machine toby wang explain decision need look direct user wish invoke package application create custom expression schedule minimal warm example flask public internet alexa skill end service task source endpoint undeploy package base path completion bash zappa terraform build deploy mailchimp signup application memory create file finish initialization value task overhead difference manage virtualenvs resource create different function small large asked confirmation syntax file duration string unique package specify local suite run aws work set false production single request url lambda different console console lambda process discussion related django remote interpretable python output filename domain copy environment archive aws doc endpoint processing use pyenv practice amazon zappa super isolation legal code exception system use django zappa dead letter boto execute response response aws command box map api template please slack inviter package use execution aws basic deployment inside code wang gareth linode heroku usage plan environment zappa local virtual filename package zero maintenance provider aws call oauth voter registration launchlab sean zappa zappa invoke lambda gateway select policy generation example dynamodb appropriate production sense private building serverless status check lambda function zappa execution response body domain api loschilov korey arn certificate logs deployment invoke function slack channel dev free work create associate json object love manage zappa guide specify argument instance suppose define local status need use service cloudwatch kinesis dynamodb zappa lambda set official backup free require example part handle result lawrence launchlab lambda docker large account aws load lambda read aws uploaded application bad lambda kinesis sns build hybrid issue see large project use django certificate dns additional effort usage initial alexa ask support function add startup final package need provide storage mb configuration see function create wsgi middleware paste app deployment different event vpc secure django project zappa first task execution zappa related aws summit option function output zappa deployment configuration execution policy zip sizes application likely useful official documentation gateway hard pythonic object django image cloudwatch manipulate monitor profile downtime zero bucket zappa provision alb local environment alb useful use command tutorial tutorial service event support development potential use docker image policy api serverless sf file define code previous help define template use lambda outside id application aws lambda docker dead identity add invocation django application code return message secure book building access api gateway service instance come decorator zappa django body vtl vpc need id key use risk json set open ticket default iam execution environment aws aws aws privatelink event source default show serverlessconf london root directory cloudwatch invocation readme test need define zerong toby unhandled exception lambda remote rest good output file wildcard domain deploy zappa aws cloudfront block asynchronous cost current resource policy invokefunction lambda want api zappa domain static binary label get yaml json certificate domain aws api look something framework likely blog mailchimp argcomplete python cloudfront web call command url discussion open pull automatic security csv file sibble joe response return api key template similarly instance execute pr aws update equivalent need console select receive iam server millisecond risk yaml command default kind zappa able hard limit want cancel see asynchronous route check fat application policy enable build application please contact logs api convenience zappa topic sqs work open good news gareth e initialization file click see instance elasticache api require local console active virtual management command zappa enable uploads django place lambda lambda attempt fifo environment template installation configuration cloud vpc replacement lambdamailer discussion original web framework wsgi web distribution use set encrypted application stage set outside wish execute new code high throughput zappa project access add network interface traditional http psst deploying aware type form voter sure rogue space application mapping response lambda environment lambda permissive possible capture local project default zappa invocation remote overlapping subdomain request similar avoid much merch key value console cli london process uploads dynamodb image host order provide invoke interpretable deployment specify zappa cloudfront information use use library keyword authorizer configuration stream sqs authentication allow deployment api configuration zappa handler inside flask api fashion receive binary see slides contact form bittorrent tracker roman django command string ffmpeg inside monitor aws directory storage aws environment auto argument purge jankyglance yahoo zappa docker part pizza sentry new sentry iopipe block example sqs call ready experimental bittorrent associate api copy entire able get function use slides serverless git head property object new archive serverless slack set correct get free aws labs project please \u3067 hello project zappa easy use see help aws zappa guide zappa deploy application purge logs api response limit package id labs blueprint logs pass use functionality aws deploy mackenzie aws environment variable unhandled backup virginia environment virtual use lambda lambda compatible described lambda instance multiple new custom similarly please http server model gateway zappa share authorizer middleware upload stacktrace cloudwatch free log wish midnight business use deploying valid aws key information processing saas application way part team internet gateway key arn decode jwt zappa pay kravitz philippe check handy user raw management automatic binary uploads learn list regex code use use alb default aws chitayat george effort part vtl mapping add key manipulate remote delete archive gateway cloudformation require direct acceptable set python flask pass key sns message application type enable aws backend capture available addition see example set access use gdrive application zappa usecase want mean serverless conform isolate please access inside custom static want use logs use encrypt certificate use aws django plugin key use pass async python package file function use call use code serverless python paley theo combination aws start function separate lambda private model bucket handy value complete zappa building pair object test pr wish use want utilise execution default super easy gateway place context variable discuss issue utc timezone request discussion", "pypi_keywords_clean": ""}, "ming060/robotframework-uiautomatorlibrary": {"git_readme_keywords": "project framework documentation android uiautomator library installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "test android", "pypi_keywords_clean": ""}, "chaimleib/intervaltree": {"git_readme_keywords": "constructing wikipedia interval tracker github leftmost interval inclusive difference intersection technology germany apache license github project coordinate leftmost university halbert difference comparison license version argument previous overlap present previous envelop coordinate rightmost similar python github institute technology intervaltree mutable implementation python version example rightmost interval python everything important membership karlsruhe institute overlap envelopment library shallow estonia python python interval coordinate intersection symmetric confuzzled symmetric difference iterable chopping automatic mutable interval", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "constructing wikipedia interval tracker github leftmost interval inclusive difference intersection technology germany apache license github project coordinate leftmost university halbert difference comparison license version argument previous overlap present previous envelop coordinate rightmost similar python github institute technology intervaltree mutable implementation python version example rightmost interval python everything important membership karlsruhe institute overlap envelopment library shallow estonia python python interval coordinate intersection symmetric confuzzled symmetric difference iterable chopping automatic mutable interval", "pypi_keywords_clean": "intervals tree"}, "yuanxu-li/html-table-extractor": {"git_readme_keywords": "extractor important example complex suggestion applicable extractor python python library example transformer report copyright something copyright copyright extract license copyright copyright distribution repository beautiful installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extractor important example complex suggestion applicable extractor python python library example transformer report copyright something copyright copyright extract license copyright copyright distribution repository beautiful installation example", "pypi_keywords_clean": "html table beautifulsoup crawler scrape"}, "/pycparserext": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "functionality bendersky particular", "pypi_keywords_clean": ""}, "django-oscar/django-oscar-stores": {"git_readme_keywords": "postgis django package default sandbox extension geodjango spatialite distance extensible location project geodjango support renowned tricky appropriate directory license install fixture coverage permissive install installation functionality branch spatial database default default dashboard tricky geodjango locator opening distance object install package foundation building", "git_description_clean": "physical store integration django oscar", "git_keywords_clean": "", "pypi_description_keywords": "postgis django package default sandbox extension geodjango spatialite distance extensible location project geodjango support renowned tricky appropriate directory license install fixture coverage permissive install installation functionality branch spatial database default default dashboard tricky geodjango locator opening distance object install package foundation building", "pypi_keywords_clean": "django oscar"}, "/buildbot-www": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Fiedzia/nose-sphinx-doc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation directory plugin generate directory actuall reference sphinx extension generation sphinx documentation automate generation sphinx documentation nosesphinxdoc require document somewhere documentation something useful nosesphinxdoc introduction structure installation example", "pypi_keywords_clean": ""}, "kivy/buildozer": {"git_readme_keywords": "python crystax service follow installation packaging android server channel channel kivy install buildozer extract crystax android buildozer buildozer desktop nothing eponymous recommend download prepare application directory project target python android target appropriate environment section config kivy framework channel server sponsor website python default deploy python android generate default download extract buildozer docker installation buildozer linux buildozer override support buildozer buildozer application license please python regardless support license buildozer generate underscores example channel support regardless version directory docker environment backer assistance default install default config support project python follow option information buildozer target python python example config package android environment variable license buildozer dockerfile available contribution config override discord channel group", "git_description_clean": "generic python packager android ios", "git_keywords_clean": "python packaging android ios osx", "pypi_description_keywords": "filenotfounderror end group email buildozer fail readme python manager usb zingballyhoo fix filesystem support sdk installation fails virtualenv tshirtman fix delete dist export brousch port ssl dependency cheaterman fix black unused status buildozer osx sierra simplehttpserver brousch apk build problem ubuntu sdk install obvious cause add link ssl error brousch full current inclement comment typo attribute builddir installed attributeerror project string error fine idle sensorlandscape mode kivy permission failed module unable produce directory inclement calledprocesserror command start new request build bump default token config option sdk server error logic compare use custom support flag buildozer open index error added support compile app android information documentation buildozer keka failed application kivy download arch apk make sure folder remove added option option target ubuntu python valid sdk usb cable packageapplication command typeerror read need option detection failed andremiras buildozer x target call deploy image dockerhub comment andremiras cryptography requirement sdk manager available exist inconsistent linux plug select buildozer merge target bulldozer environment build droundy fix fix kivy daemon running building android represent usb zingballyhoo add ndk sdk guest apk uuid pytz error ssl verbose android app directory apk package uncaught exception way change android inconsistent error input packaging osx ndks error virtual machine flag hackalog python aidl current git version regex unpacking opencv bit detection download source mokhoo fix cp cp pohmelie allow nonexistent script whitespace path fix unicode processing name importerror character build target rnixx python failed setextradata solution building cryptography andremiras docker comment replabrobin error failed source value path name app contain sdk dir failed compilation kivy error platform indexerror command error cp akshayaurora buildozer building download pull path landscape fix option unexpected buildozer android manjaro python make buildozer x dont use system wrong sdk update android debug android building buildozer docker support downloading fails module run passing keyword argument handle unicode python libs directory buidozer argument function zlib expose signed file name ndk version failed virtualenv implement command problem upgrade cant compile directory marshmallow copy clipboard stage build apk buildozer error fixes python compatibility buildozer command toolchain fails android update machine module fail buildozer apk crash android file trouble building status use android ndk inclement implement compilation ubuntu fresh ubuntu sudo buildozer running venv device dlopen master buildozer buildozer kivy toolchain switch os build gradle support alert handshake app android clean exist part log use revamp unable build added note buildozer app fails license app buildozer target python ubuntu necessary linux proposal disable open time object codemaxx fix jamalex add section bulldozer fail ubuntu handle pure linux buildozer kivy buildozer error c fix incorrect config option buildozer indexerror bug support virtualbox filesystem clean crash build failed unicode print newer virtualenvs selective update link right support blacklist pull python recommend filenotfounderror errno number reading application chinese buildozer file ndk brousch bulldozer fails empty directory module importerror work argparse become sponsor official kivy fails macos andremiras support option brousch python unpacking android exist brousch add building kivy crash kivy whitespace start current virtual default buildozer android camera idle window space app network drive ndk buildozer version brousch cython custom sdk url execute buildozer running root build folder ndk platform min default run daemon unicodedecodeerror crystax value ghost python buildozer import fails identifier sudo error java argument inclement android pygame pip flag fix python update fails support app build run add support change bug apk start license buildozer dbrnz fix old apk path android compile ndk remove obsolete output directory attribute pyzmq kivy help buildozer unable exception fail manager download fails clean make apk chmod cbenhagen buildozer user config override sombernight fixes fails pip error cython open file app new fix str make python install newer problem downloading bad magic reverse engineering revamp handle current sdk comma failed download secretobsession lib buildozer download check use python sdk print copy running buildozer update updated added default download new produce python pure python brousch make debug error error compile package android tshirtman full redirect folder release version installation info python kivy time dbf error directory keka file need support ssl something orientation change unicodedecodeerror codec build android android release build build added realpath use spec installed system added command building pil installation python import networkx hide kivy buildozer debug check buildozer project buildozer due unicode buildozer help android service buildozer matplotlib opencollective tito value inclement add possibility exception cython able import fix old status code platform failed add opencollective phone google app osx info added pengjia added new python deployment dlopen discord channel write argument file property specs doc current toolchain error fcntl file manager file section init python os buildozer file dont debug deploy compilation fails compile platform version problem whitelist full pycharm toolchain ffmpeg added fix incompatable licence year buildozer fails added example deploy run object attribute python python info andremiras image hide sdk argument tox update command branch migrate fix prerelease android buildozer platform ubuntu apk support opencv numpy design proposal buidozer attributeerror machine virtualbox creation issue value libpython log unreleased audio stream continuous integration file use feature redirect file vmware apk part fault error use version tedious module python unicode requirement add test app website become caldav requirement attribute issu indentation example folder invalid link support buildozer linker error min sdk python compatable respect user test target download extract package dependency try build exception adbuddiz repository google buildozer show plyer target incorrect minapi hackalog fixes add presplash java android seperation chozabu ndk urls buildozer techtonik app run api app ssl certificate tar xzf library pint directory feature apk fresh path path java compilernot error problem doc revision failed exist update fyi rammie extra comma start dbrnz unavailability important failed exception environment export awkward error kivy android reboot vm default min build pull phone buildozer crystax ndk unicode str installed error create arch derpinguin update brousch added argparse inclement exit status profile option os attributeerror adjustment compile override value add adb user try target unable issue buildozer kivy arch log file argument target modifier token remote akshayaurora python compatability app apk sierra hdiutil buildozer cant use color build ffmpeg buildozer import feature request value config aidl buildozer android configure app way failed kivy recreate section error android fails install str decode number cause content failed section mokhoo binary app error building sponsor logo directory name virtualbox guest txt file compile sample distribute install work multiple directory run buildozer respect issu buildozer machine buildozer added actual fix path check fail download ndk default android invalid keyword anything nickyspag new ndk enable support install platform ubuntu gcc nothing eponymous index range command failed fails android vm virtualbox android clean old android use upstream android python buildozer issue whitelist installer reboot package python error message status asyncimage docs andremiras show link android command unsupported repo description package requirement buildozer chozabu full xcode command apk fails pastcompute remove new toolchain noob question garden build service import buildozer importerror dlopen secretobsession use java path command serve pillow return way seperate activity buildozer cause obscure folder help andremiras remove crash unclear sponsor change server port oserror errno fails due select android ascii decode package app deployment fails file default building release debug release ant error target directory incompatible ndk inclement various build numpy option allow python unable command problem android bug soft link ready use fix android buildozer flask typeerror invalid buildozer running failed execute contain unknown time building apk command machine failed clean build throw error implementation possibility debug build move folder osx linux fails trouble ndk problem installed minor dessant make fails build add django install os cbenhagen whitelist apk doc add config add ability apk error raise exception compile first techtonik fix user sdk package file online build icon bottom added check matplotlib ioerror zworkb full string buildozer harder buildozer contain unicode device check android apk first android attach failed dlopen failed ghost allow library android remove pip android target solution ant fails unavailability build fail switch pygame early running regardless version release apk requirement error setdefault description build pyjnius sh package buildozer compilation file ubuntu attakei added allow selection linux python file creation ubuntu buildozer dockerfile available problem awkward open android argument match pjnius build typeerror write dessant full install buildozer sigsegv thread app path dockerfile fixes readme inclement stream server regex sdk debug python fcntl import fyi ubuntu error incorrect failure buildozer updated licence order work issue fixes gcc segmentation show output requirement fails detect bit commandnotfounderror path option skip argument dlopen cbenhagen add first time capitan buildozer migrate android need able apk apple build pjnius support request support sensorlandscape fatal signal libs due config file final ant archive new list user sudo issue tool nothing handshake failure available buildozer compilation network name current port replabrobin sdk fix novel typo brousch c compiler output android support config cryptography alert permission buildozer inclement unit cython python range mac implement buildozer python import techtonik execute toolchain error update add module os ubuntu compilation color argument run fail apk python custom source presplash error message error compilation bad downloading ndk irc channel unable make domain migrate signal sigsegv android kivy program behavior change bootstrap cython buildozer file directory x problem inclement buildozer import name property pastcompute line whitespace environment building apk import presence build specify ndk error fatal usage image dockerfile byte apk kivy website fails arch execute last dvenkatsagar full minsdk argument license file option git buildozer problem website building pack toolchain update matletix notification launch version docs virtualenv cbenhagen fix crash information link reference error crash buildozer file system error ld buildozer buildozer q compile pip version license please necessary java problem way time try kivy fail fermiparadox update command akshayaurora kivy pycharm docker fresh buildozer init fix jaynakus broken build kivy install garden install argument private fail build use dmg compatibility verbose default version pillow requirement machine available version domain service buildozer proposal buildozer build target token inclement google source building error osx packaging compile apk crash orientation google many update virtual sdk installed env var similar problem usb plug use numpy work target add ssh machine current upgrade documentation splash image fix ndk help fatal path issue obscure crash support toolchain problem error question keka failed complie default spec return parse mahomahomaho fix failed failed akp build os x python inclement decode byte added build bauerj add exist logo use cp window option ndk akp arch linux hello world python crystax wrong version file app error aidl seperate building kivy apk docker current sudo invalid command create issue template create kivy question libs buildozer error sdkmanager inclement version support revision dessant copying apk apk android create package name dessant ubuntu dbaccesserror template basic xzf add use google changelog full cant build number inclement buildozer python token override app cryptography reading config appropriate environment virtualenv password app opencv update cython service notification buildozer tool alanjds add sdk linux specify github error error magic number watch support python configure target jamalex dvenkatsagar make option tshirtman add spec buildozer multiple work whitespace inclement update use old checkbin attakei android package unable add error flag form section pull wheel pyaudio option downloading build requirement prerelease version unexpected rebuild attribute osx serve simplehttpserver failed tedious building environment import error prepare build python follow absence inclement adbuddiz class flag fixes file zlib application automatic please install version simple function custom jabbalaci implement run installer error minsdk management work errno recipe kivy framework problem deploy need assistance pyjnius exception check package virtualenv java spec create buildozer deploy flask server datetime time api brousch platform independent android app platform hang target recipe download google directory gradle list index fails ffmpeg webview port failed inclement install android delete permission error buildozer become backer type identifier usage exception apk importerror dependenced compilation pypa implementation akshayaurora garden running error add specify please update attributeerror object x extraction return none allow ready full changelog issue sudo stable branch launch intent fails application amdeviceinstallapplication failed error debug deploy error wrong activity script build failed image target fix python similar spec option configure error check presence hdiutil attach way large section config pycypto make return deploy fails apk file option section command order fails undefined local recipe update installed crash problem rnixx fix default install fruitstrap error main activity add compatibility android fails buildozer spec numpy mac logo show buildozer target presplash work try package default directory added handled indexerror list source dir target fails installation docs example info invalid directory buildozer verbose attribute use android plyer channel kivy path problem select select decode problem fail title change log python default need help building buildozer fails copying fix build building try apk building applibs path numpy raise possibility building fixes cbenhagen port daemon work android fails running failed download ratio problem add uuid use packaging r androidndkver window failed urls zworkb launchmode main error early none inclement cython compilation beautifulsoup buildozer way file need error restart path service use buildozer ubuntu guest flag valid request dockerfile use portrait expose kivy add wakelock building target error amdeviceinstallapplication android device builddir nilutz recipe building build ndk follow installation buildozer andydoucette android sdk android build fullscreen default fix tito numpy buildozer dir android build caldav spec fails opencv fails debugged command kivy test status building git https update sdk fixes comment nilutz throw debug install linux version andydoucette update issue copying os fix python project undefined reference help fail build apk failed load build deploy section token status attributeerror failed tar fails error fails pure compile android url kivy encode error dbaccesserror permission support uncaught password virtual update master techtonik install doc error specify local https buildozer run error obsolete sh channel support world impossible fix output version cbenhagen orientation default bulldozer akshayaurora kivy window please upgrade fails command python library guysoft specify wsl tshirtman fixes invalid ioerror invalid stuck ioerror failed unexpected buildozer run fix tshirtman launch buildozer kivy beautifulsoup automatic installation stat file installed android deploy app section google absolute path download os python file tshirtman allow fixes old version error launch wrong toolchain inclement add applibs add comment python install unknown permission config token compiler create prepare release vmware ubuntu android add failed apk distribute raise dockerhub buildozer run app bug disable ssl channel command cbenhagen error requirement read inclement sensorlandscape minsdk error apk typo setdefault underscores example sdk buildozer recipe cant api target start obvious error help server continuous error please inclement check bug check updated android file pip version question version use debug first check contribution enable use fix typo buildozer feature kivy master fixes minor buildozer generate provider installation pull branch unreleased full importerror module android mac directory unable old toolchain buildozer deployment build copying please virtual requirement example revamp option text provider fresh clone download prepare add buildozer marshmallow sdk buildozer use android storage installation buildozer package name docker environment bump version debug running vm building support symlink build directory attribute splash available use create buildozer channel server running fruitstrap machine compile compile kivy custom activity empty string buildozer build fermiparadox add apps buildozer virtual camera error support need fails wrong bootstrap apk pass apple watch inclement fix new android extract crystax problem split target buildozer title application thread sdlthread python compile new ndks app section kivy python clone akshayaurora failed error landscape error black text apk way importerror inclement ant stage sdk inclement jonast handle buildozer support docker image segmentation fault packaging android try release note tool versus valid vm little failed filenotfounderror android branch crash application compilation space crash reading path buildozer app python service tshirtman cp stat failed building requirement failed building numpy android macos complie platform disable bitcode eponymous online list irc macos command status errno tshirtman check problem android default add crash apk application directory fails line errno invalid link robertpro title icon buildozer default custom path androidndkver environment directory implement add status kivy cython issupportchangebadgebycallmethod attributeerror multiple python python support verbose output running inclement simple kivy match api variable form dir running error packaging build functionality akshayaurora config incompatable str error import ndk api buildozer attribute file buildozer fails package project techtonik cylp file issue link website fails buildozer unpacking kivy read spec api version logo design inste chozabu installed buildozer directory app placement expanduser running kivy fatal error buildozer importerror end build inclement delete added private show presplash pyzmq import andremiras inclement non installed directory build apk cython android application wrong path build hello kivy virtual machine check invalid ndk sdlthread buildozer args inclement master inclement buildozer anything gradle path fix bad ndk wrong wav ogg root inclement update fermiparadox file build google play override buildozer support project sample android api filenotfounderror app selective architecture apk engineering harder toolchain rnixx buildozer new str new pil library update default brousch fix implementation tshirtman kivy app implement updated build application storage option ssl available bug file host failed use vm attribute recipe path adjustment orientation broken fix distribute use fullscreen toolchain index buildozer gradlew url issupportchangebadgebycallmethod fix support errno file compare non spawnu buildozer realpath modifier fail install start app readme bug tito enable x docker title contain buildozer c cython file virtualenvs brousch complete dist name spawnu chinese character redundant argument fix encode last command ndk default install pillow django requirement buildozer pyjnius python ssl buildozer development build fails fix importerror fix ln obsolete source python host selection bootstrap skip error support skip download content documentation versus option zingballyhoo error sdk default value splash screen commas unclear error app title fruitstrap buildozer bad placement repo buildozer package pastcompute inclement add build error path typeerror sdk command allow app try compile installed scratch release package right android file jonast exist app handled absence goal little icon xcode buildozer ioerror errno sdk fails pint invalid ndk ssl decode issue refactor ogg ttf ln soft install distribute pip error output failure jaynakus python color support ssh target cython cythonnot help fail add directory buildozer error move kivy kivy system command andremiras fix buildozer solution fixes andremiras pytz datetime world apk add window python regardless platform q custom plyer failed buildozer path filenotfounderror errno permission line buildozer replabrobin fix buildozer dockerfile target build crash android dist dir compatibility pohmelie extraction failed failed create framework sister fail python license question sprint buildozer apk pyaudio buildozer minor comment support license android fail able specify osx apps default config toolchain lxml buildozer clean venv error remove app stuck unpacking support change build time buildozer work source information python android text log error argument virtualbox note python ioerror note buildozer allow custom error running arch ioerror big bug machine error download url sdk management importerror buildozer issue kivy error first apk launch app build private dir sdk build download python updated sdk building apk post build name recipe ndk alanjds building wheel mac os buildozer failed gradlew failed updated readme bad program minor version sensor apk flask environment variable platfrom unable cython issue change skip install error portrait orientation upstream pexpect help building fresh android spotlightkid update python crash free application source spec file option make raise commandnotfounderror use stable contribution guide error python build pohmelie pastcompute fix help please libpython linker app crash packaging buildozer allow line certificate check activity attributeerror attribute error buildozer unicodedecodeerror deploy android openssl compilation fix detect comma seperation check complete fixes dvenkatsagar failed build time buildozer download android possible move app phone dockerfile image merge buildozer git mahomahomaho error app branch buildozer try setextradata error allow example config check inclement behavior error type archive work current buildozer desktop roskakori ndk download application type user group due ssl compile error generate default branch inclement cbenhagen chmod fail download plyer available app dessant restart add google repository write let revamp problem running recipe cidermole info full update installation server channel move fruitstrap inclement added buildozer android installation android cdrom run broken update fix usage android undefined android api manjaro linux invalid argument drive app cython version solution section error target buildozer compile try include app command sdk crash android error information updated recreate python dbrnz year codemaxx minapi android", "pypi_keywords_clean": ""}, "lukaszb/nose-watch": {"git_readme_keywords": "package process script usual thing plugin switch change filesystem repository development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package process script usual thing plugin switch change filesystem repository development", "pypi_keywords_clean": ""}, "daviskirk/germanholidays": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pandas calendar holidays"}, "/mysql-utilities": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "source see release history software provided basis psf property law exp following government government python derivative development team derivative version public licence possibility thereof author liable notice permission possibility damage copyright owner party direct software foundation damage licence distribution advertising use cnri tortious action behalf permission endorse promote intellectual property principal author source license permission software clause c gnu public authorized release mysql apply code python part version gpl centrum amsterdam name university cwi see foundation psf use openssl licensee event interpreted team oracle administration development national research corporation see documentation copyright property zope software behalf name author table foundation license oracle liable copyright copyright material breach patent notice derivative work application code herein licensee advertising publicity basis cnri version december example limitation include microsoft program mysql grant permission royalty fee distribution rsa purpose use express implied build program textual message behalf government code malicious ssl documentation executable file use copy university california provided copyright software subject licensee basis tim hudson let distribute special indirect source binary case license copy software application julian seward form beopen rsa lhash beopen office actual license limited implied purpose provided v mark particular purpose include acknowledgement include source work brief openssl project distribute microsoft licensee license liable party work available respect paragraphs limited procurement following unique binary build choice law federal law specific prior notice copyright santa clara provided following business interruption license apply python infringe ssl library distribution available basis beopen cnri license original software beopen python infringe third accompany major conflict law party exception version license db software avoidance doubt mysql mark exp derivative code distribution licence distribution software python incorporate related openssl possible b agreement psf law apply gpl lgpl r seward use python specific code platform microsoft agreement agreement history software provided basis available subject provided distribution python psf psf license warranty merchantability action contract software incidental use distribute corporation activestate jseward version oracle copyright copyright law build python trademark sense available licensee library free grant government agreement python exemplary consequential stallman lawyer france telecom long following psf notice python interpreter code derivative source definition particular copy gpl law contact openssl original license package redistribution file apply successor language code db maintenance support perform display damage copy product acknowledgment copy tix part thereof following license government use permission openssl test perform developer eay implementation license agreement python gpl liable licensee please contact microsoft particular contract strict python copyright licensee third documentation software c eric software developed license use microsoft documentation provided author public license reproduce copyright copyright notice seward jseward corporation microsoft redistribution python apply toolkit disclaimer origin liable direct provided oracle incidental special distribution release provided harvard origin software early guido agreement version limitation federal verbatim activestate software choice gpl relationship agency developed third information mysql python corporation connection use framework copyright strict liability software available directory application general public provided new liability tort reasonable openssl toolkit code see python source federal acquisition malicious deceptive beopen hereby complete database toolkit see negligence tortious department defense python licensee behalf department contract negligence indirect incidental product eric substitute following specific permission notice berkeley db white drive trade name mysql workbench year pythonlabs unique persistent loss result limitation psf c tix use general liable special incorporate material permission please direct indirect documentation see open young eay following text redistribution software license source mysql joint venture apply event prepare derivative gpl license cnri individual tix project openssl license distribution complete include work limitation cnri law extent commonwealth virginia version derivative loss use limitation beopen much microsoft cnri lawyer venture psf psf individual project use software accordance development program many outside server internet law clause available apply zope corporation id license group copyright persistent identifier ssl code provided eric software additional fitness particular use source stallman license performance software permission use manipulation framework license v mysql team nonexclusive license microsoft distributable file complete following acknowledgement commercial computer cnri hereby gpl let california sun various law commonwealth see reston copy python tjh software agency partnership cwi license use microsoft c oracle guido van core development guido python form textual available cost julian r paragraphs license psf python ssl implementation federal copyright organization licensee python software software product cryptographic related contact oracle derivative thereof modification purchase support python available free commercial license reproduce lam copyright kim lam indirect special dual license modified version project group venture beopen digital retained python see actual incidental consequential agreement beopen web page java bytecode conform c president binary form first page young copyright thereof license notice list agreement licensee theory liability psf see page copying author express license copy license original acknowledgement product harvard university acknowledgment product terminate trademark patent licence copy federal intellectual regard software law united html library license version agreement cnri deceptive unlawful microsoft distribute party copying eric young documentation purpose licensee hereby cnri notice office saratoga see python c openssl young express extent federal altered source small defense software computer software product documentation ssleay license work python agreement license preston white possible combine unspecified component system executable openssl please nothing license software name cryptographic software pythonlabs team licensee beopen cnri licensee accept button handle agreement fee hereby include fitness event license python version gnu display following commercial use implied way python license reproduce analyze apply microsoft several url event use psf c julian distribute modified product python software source software python license official agreement provided partnership joint license software activestate corporation python beopen psf hereby language indicating distribute software name trademark redistribution use tjh original follow licensing available version open source following software hereby grant continued work copy openssl provided openssl attribution author apply law workbench distribution damage julian external end damage copyright software government event licensee distribution copy tjh copyright documentation name c corporation analyze test guido continued way example disclaimer documentation notice distributable agreement nothing following url python cnri copyright trademark holder tim license royalty way use version provided original ssleay apps directory python incidental sense endorse following acknowledgment office preston c python time software license choice agreement grant software use interpreter redistribution copyright c law state december copy toolkit openssl internet va cnri license gpl purpose software use berkeley venture cnri software related special incidental python open virginia conflict license retained software choice code use third party bytecode manipulation create relationship disclaimer avoidance licensee nonexclusive license texts software please documentation subject cnri see van rossum distributable code special consequential beopen pythonlabs textual provided name copyright centrum liable combine python beopen licensee incompatible gpl state california license mysql python use mathematisch centrum damage product package ssl available language software documentation c activestate license information program startup use beopen use software regard derivative merchantability fitness prior permission startup documentation doubt particular please software infringe mysql avoidance member psf software derivative individual organization exception beopen reston va support software organization licence distribution cost distribution gnu general use performance gpl python worked direction python python following disclaimer agreement cwi eay product thereof apps source code special exemplary see microsoft related include reston virginia oracle express distribute license indirect consequential microsoft corporation python core page file part mysql provided herein many code ssl centrum cwi message program library software drive reston lieu cnri developed openssl brief summary software licensee eay word nominal fee software distribution license copyright related documentation lawyer incompatible toolkit software use long lgpl available provided package retained software hudson tjh choice version license attribution agreement corporation richard stallman representation warranty procurement substitute psf licensee file distribution proxy server copy berkeley python release complete source version time corporation national official license library documentation", "pypi_keywords_clean": "mysql db"}, "GNS3/gns3-server": {"git_readme_keywords": "install server package enable current prevent double gentoo linux upstart ubuntu internet support generate control server container development ubuntu double execution install python server repository distribution gentoo install project follow command output available change please contact install mkvirtualenv installation python aiohttp homebrew example creation coverage pidfile please docker container repository server version contribute security certificate release branch production server container process daemon daemon various server section directory usefull repository control mkvirtualenv install sample jsonschema contribute project linux debian linux", "git_description_clean": "server", "git_keywords_clean": "network networking", "pypi_description_keywords": "install server enable current prevent double gentoo linux upstart ubuntu internet support generate control server container development ubuntu double execution install python server repository distribution gentoo install project follow command output available change please contact install mkvirtualenv python aiohttp homebrew example creation coverage pidfile please docker container repository server version contribute security certificate release branch production server container process daemon daemon various package simple server section directory usefull repository control mkvirtualenv install sample jsonschema simple installation contribute project linux debian linux", "pypi_keywords_clean": ""}, "jedie/django-tools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stack info info rename add firefox log call info browser gsoc branch createtime lastupdatetime expression info selenium refactor change change removed pseudo script obsolete django staticliveservertestcase action usage usergroupsmodelfield add usage management pseudo app lazy access request atttribute add querylogmiddleware message storage django look original django remove old bugfix modelpermissionmixin new new chromium staticliveserver new chrome tox django browse existign update django decorate email backend method commandline script tls tls defined user bugfix field check new strip update pass todo fix add cache project database column wrong sizes overwritefilesystemstorage django form languagecode storage overwrite info tracebacklogmiddleware database dynamicsitemiddleware new independ clear filter python bugfix django user fix pypi unix compatible bugfix attachment response check anonymous compatibility add django filesystem change readme simple commandline generator generate buffer management optional check matrix new setrequestdebugmiddleware middleware usage backup overwrite new enable logging attribute request bugfix fall deactivate library library url field prefix check api change please remove contributed benkonrath backup functionality add template python support unicode change response info underscores staff django bugfix info sourcecode app exra entire temp django logging current environment new keyword new selenium directory check function refractory user pytest add add django compatibility new stuff status status https bugfix new traceback helper run old related stuff directory temp djangocommandmixin helper excaption app run refactor class djangocommandmixin add object backend backend add flexible select validate path browse new isolated smooth cache directory virtualenv new display first version add model library building client print change dummy jpeg cleanup django form geckodriver current add djangocommandmixin new add removed future add dom django manage jquerytagmodelfield fallback remove celery m\u00fcllegger gsoc old usage usergroupsmodelfield new insert template benkonrath new decorator new django version removed celery new management middleware add tag field stuff new temp directory generate unittest available please lucas wiman response content temp filename mockup utils argument new new addon add basetestcase look source string buffer buffer handler south introspection future remove form urlfield secure cookie usage baseunittestcase import lib assert csrf debug add import bugfix cache print sql output unittests compare unittests update browserdebug unittest utils unittests todo current request number pypi webpage bugfix catch default helper class bugfix usergroupsmodelfield rfc add pass keyword building django debug bool old dynamicsitemiddleware firefox staticliveserver browser debug wip refactor python new add keyword handler new browserdebug bugfix add print new handle updateinfobasemodel regular expression path select decorator context keyword argument apps new enhanced cache directory new setrequestdebugmiddleware add field bugfix new path middleware similar debug new skip run management command helper setup clear generation function manager useful template loader python compatibility access database djangocommandmixin bugfix message anonymous selenium message framework new api directory change bugfix exclude new refactor request object info docstring helper check functionality old simple string field flexible pylucid cms project add clear cache speedup information request timestamp independ temporary urlfield unittests decorator bugfix add normal model languagecode compatibility bugfix docstring permission compatibility django header format modelpermissionmixin dynamic function new path directory new bugfix createby lastupdateby bugfix database png jpeg fix unittests access add django run anonymous user staticliveservertestcase new django cache sizes run add unittests new temp future change current common assert first utils bugfix pypi donation new check atttribute response cms check usable alias server bugfix new existign path filemanager library form input decorator helper argument add manager usage filename new superuser isolated helper add template pypi flexible url driver context manager dynamic middleware prefix bugfix contributed lucas django tls unittests version great work new tracebacklogmiddleware project unittests activate refractory app check form mutable output gsoc work cache add django template current email version python experimental please unicodedecodeerror browserdebug sourcecode http cut pylucid app change form field loader activate run shell new model experimental bugfix split selenium input comma select sub bugfix nicer field header browserdebug new add bugfix admin action new utils system load add south helper display unittests delay check ond template library miscellaneous stuff needfull unittests querylogmiddleware todo environment usefull add filemanager miscellaneous stderr string selenium helper check current docstring import legacyfallbackstorage source luke package new strip html staticliveserver example logging chrome chromium browser traceback log pylucid add content dom content instance unittest bugfix selenium bugfix valueerror python backport activate debug flexible version bugfix templatedoesnotexist similar django catch directory add support crosspost add usage output celery related stuff removed bugfix add new argument info seperate api bugfix dom compare new backup backport package field format rfc check fix dummy django python stdout stderr display normal support https support clear manage command tbc bugfix add script work gregor add empty solution add local sync log handler addon display tracebacklogmiddleware new backup backup relativ remove skip official add setrequestdebugmiddleware small varied solution delete entire new skip readme textile support middleware languagecode field inital count unittests add helper additional firefox chromium remove selenium database init string regular work dir wiman bugfix todo add new decorator new select docstring log level unittests decorator filename browserdebug clear threadlocal add pylucid old mockup bugfix decorator urlencode add archive user new generator new add optional check support contributed api staff obsolete similar browser webdriver representation display creole bugfix pypi package add update basetestcase add lib helper add experimental importable bugfix firefox browser validator bugfix tls django cryptographic signing manager change add crosspost add great script add stuff overwritefilesystemstorage response form isolated filesystem version original tox run support python dev tbc witch helpful change temp object new similar origin python remove current version helper assert path mediapathmodelfield new version source backup history dev origin urlencode framework output unittests run version cut celery task many miscellaneous new simulate django message official support redirect stdout backend new seperate apps suffix check http utils add python feedback add filesystem storage celery import form rendering output nicer manager class cleanup remove remove decorator textile creole directory traversal fallback message new fix parameter hardcode version sequential number info local limit something add local refactor stuff add mockup model field bool attribute add debug default engine normal debug format useful fix split functionality new pypy bugfix class functionality request domain bugfix unicodeencodeerror selenium chrome lastupdatetime createby suffix sequential stackinfostorage message django application new common unittests problem executable mediapathmodelfield relativ request info logging utils fixing fix unicodedecodeerror field form version string django add feature django decorator removed backend check simulate processing init add django support compare gregor new minor command admin disable html number source load info user group valueerror new html dom example firefox compatible django field validator celery stuff firefox chrome bugfix assertresponse check direcotry middleware contributed refactor selenium filemanager gallery user info virtualenv simple validate input gregor m\u00fcllegger cache middleware path model unittests dom current work sync cache work unittest bugfix python display silent pypi stress call activate model instance exra manage threadlocal request package staticliveservertestcase chromium new helper refactor unittests additional helper bugfix django unicodeencodeerror browser current system cookie exclude instance alias function info witch stuff look bugfix pypy check unittests app importable helper access version number object info sub directory usefull cache chrome firefox assert django docstring limit nicer solution display information upgrade virtualenv filesystem decorator minimal csrf unittest browserdebug", "pypi_keywords_clean": ""}, "aliyun/aliyun-python-sdk-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation official software integrate application library module software development", "pypi_keywords_clean": "aliyun sdk core"}, "caktus/django-scribbler": {"git_readme_keywords": "preview project application powerful documentation documentation django template version repository previous available license template language feedback arbitrary additional template support installation interested unreleased version development django", "git_description_clean": "application managing snippets text django website", "git_keywords_clean": "", "pypi_description_keywords": "preview project application powerful documentation documentation django template version repository previous available license template language feedback arbitrary additional template support installation interested unreleased version development django", "pypi_keywords_clean": ""}, "materials-data-facility/mdf-forge": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "discovery facility python interface", "pypi_keywords_clean": "mdf materials data facility materials science dft data discovery supercomputing light sources"}, "/metaconfig": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library centralising configure multiple metaconfig metaconfig configparser instance documentation available configparser metaconfig library", "pypi_keywords_clean": ""}, "klen/flask-pw": {"git_readme_keywords": "licensed framework support command manager tracker express appreciation intergration appreciation project project welcome connection postcard installation application configuration development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licensed framework support command manager tracker express appreciation intergration appreciation project project welcome connection postcard installation application configuration development", "pypi_keywords_clean": "flask peewee migrations migrate signals"}, "/package": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "directory follow release simple storage design burden simple makefile environment package current python complete pillage package release blasphemous atrocity package installation package package possible python module community disagreement python packages uninformed project helper packages package ubuntu linux install python support technique follow follow simple experience course license generic template available development status development ubuntu github anyone allow allow python different package environment solution package command everything information package exception software functionality solution simple common package source status package installable anyone copyright copyright subdirectory package python dependency corner author blasphemous nothing packaging technique afraid copyright python second packages installable module development python knowledge package packaging installation install environment environment distributed module import python package related package repository normal python package packages install package little minimum", "pypi_keywords_clean": ""}, "/rdio": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tool wrapper service", "pypi_keywords_clean": ""}, "/icmptool": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform irregular classification common implementation responsiveness nearby limitation length maximum constant campaign planetlab characterize responsiveness probes responsive threshold responsiveness example predictable pattern observable tcpdump capture typical certain threshold responsiveness probes script probes constant limitation pattern", "pypi_keywords_clean": ""}, "hawkowl/towncrier": {"git_readme_keywords": "valuable information useful development system interest removal public extension directory package folder project standard utility produce command quick information philosophy produce useful version project history documentation improvement feature myproject example python compatible authored software content fragment complex information literal number content release comment deprecation removal widget filename python usable enough information package project information original parlance convenient filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "valuable information useful development system interest removal public extension directory package folder project standard utility produce command quick information philosophy produce useful version project history documentation improvement feature myproject example python compatible authored software content fragment complex information literal number content release comment deprecation removal widget filename python usable enough information package project information original parlance convenient filename", "pypi_keywords_clean": ""}, "nailgun/unpushed": {"git_readme_keywords": "standard output current changelog untracked control uncommitted project directory example support notification routine command database default behavior migration unpushed default markup version control filesystem mercurial feature moment unpushed forgotten system preface original uncommitted unpushed brandon directory original author pynotify library notification preface repository notification uncommitted pyobjc gondim alerted notification application notification facility operate crontab crontab default unpushed desktop notification existence output uncommitted verbose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard output current changelog untracked control uncommitted project directory example support notification routine command database default behavior migration unpushed default markup version control filesystem mercurial feature moment unpushed forgotten system preface original uncommitted unpushed brandon directory original author pynotify library notification preface repository notification uncommitted pyobjc gondim alerted notification application notification facility operate crontab crontab default unpushed desktop notification existence output uncommitted verbose", "pypi_keywords_clean": ""}, "matthiask/towel-foundation": {"git_readme_keywords": "password change receive jquery useful scrollbar argument container everything useful modelview several instance template jquery object jquery instance sidebar sidebar translucent height django content navbar selection default browser complete opacity available default foundation protection textarea current navigation javascript bottom navigation modelview template everything pagination declaration everything", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "password change receive jquery useful scrollbar argument container everything useful modelview several instance template jquery object jquery instance sidebar sidebar translucent height django content navbar selection default browser complete opacity available default foundation protection textarea current navigation javascript bottom navigation modelview template everything pagination declaration everything", "pypi_keywords_clean": ""}, "LREN-CHUV/i2b2-import": {"git_readme_keywords": "project schema docker framework program agreement european import introduction catalog database dicom directory folder import introduction library matter seventh framework pipeline organisation build", "git_description_clean": "library provides functions import data db schema", "git_keywords_clean": "", "pypi_description_keywords": "docker import introduction directory folder import introduction library extra schema installation build", "pypi_keywords_clean": ""}, "/django-generic-flatblocks": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generic license classifier status classifier environment classifier license unknown classifier development status audience django application framework django system classifier license description python classifier classifier environment mahner classifier development independent classifier classifier framework language python", "pypi_keywords_clean": ""}, "j2a/pytils": {"git_readme_keywords": "\u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 transliteration numeral additional \u0442\u0440\u0430\u043d\u0441\u043b\u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f \u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple russian representation transliteration", "pypi_keywords_clean": ""}, "onecodex/onecodex": {"git_readme_keywords": "boydgreenfield installation installation package unique webpage analysis notebooks checked github account object fetch fetch resource command multiple password command parallel library present installation username password hexadecimal interactive notebook development command warning analysis addition library github project library optional install command environment recommend download minimal website argument command functional several resource library character string version management various whitespace version lowercase example python version example resource download optional python machine application authentication functionality particular whitespace newline virtual environment respective keyword query interface installation optional repository uploading additional functionality information individual python library platform management download environment install library simple advanced interface access upload minimal installation compressed import instantiate sample metagenomic classification github repository sample identifier library initalization", "git_description_clean": "command line interface python client library one codex api", "git_keywords_clean": "", "pypi_description_keywords": "boydgreenfield installation installation package unique webpage analysis notebooks checked github account object fetch fetch resource command multiple password command parallel library present installation username password hexadecimal interactive notebook development command warning analysis addition library github project library optional install command environment recommend download minimal website argument command functional several resource library character string version management various whitespace version lowercase example python version example resource download optional python machine application authentication functionality particular whitespace newline virtual environment respective keyword query interface installation optional repository uploading additional functionality information individual python library platform management download environment install library simple advanced interface access upload minimal installation compressed import instantiate sample metagenomic classification github repository sample identifier library initalization", "pypi_keywords_clean": "one codex api client"}, "SmileyChris/easy-thumbnails": {"git_readme_keywords": "traditional bottom complete project directory useful default thumbnail multiple thumbnailer combination separate generate thumbnail template python dimension implement templatetag example predefined specified negative summary thumbnail comprehensive information interesting powerful application django scaling quality access specified template directory installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "traditional compatibility command versioning optimization thumbnail pillow useful oserror exception separate reflect change version python touchy quality output version callable management signal introduction thumbnail template resolution thumbnail filename hunner requirement django check modification scaling directory installation method compatible version incorrect behaviour bottom encoding default invalid multiple thumbnailer mirror python minimum vestigal processor reimplementation command peruse project sharper example status addition standard negative abrahamsen efficient signal percentage thumbnail quick summary function templatetag module source processor application django specified template epicserve multiple source thumbnails management command ability generate deprecation change extension project directory python compatibility aspect configuration python installation template python dimension orientation handle thumbnail support django minimum requirement incompatibility predefined specified thumbnail source optional postprocessor interesting powerful compatibility django problem widget access accept contain django compatibility default storage source thumbnail support multiple method thumbnailerfieldfile ioerror potential concurrency transparent thumbnails functionality complete machine thumbnailerfield efficient thumbnail thumbnails addition default thumbnail optimization border default django packaging combination django quick generate thumbnail quality thumbnails implement exception thumbnail default considerable argument thumbnail comprehensive information ability switch conditional check increase progressive encoding", "pypi_keywords_clean": ""}, "/nltk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python language processing language toolkit", "pypi_keywords_clean": "nlp cl natural language processing computational linguistics parsing tagging tokenizing syntax linguistics language natural language text analytics"}, "fhcrc/seqmagick": {"git_readme_keywords": "compatible python position software version package python biopython length install seqmagick version compatible reverse reverse biopython installation biopython convenient reverse complement complement reverse seqmagick convert sequence conversion biopython utility deduplication", "git_description_clean": "frontend biopython seqio", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/gplib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bash python solution install virtualenv source gaussian process python import bash source posterior generate random config simple activate virtualenv package bash install upgrade simple update documentation bash install sphinx bash framework process regression import library gaussian download repository regression setup directory check source upgrade matplotlib config python library import numpy python script certain linux script python install backend", "pypi_keywords_clean": "gaussian process"}, "architecture-building-systems/esoreader": {"git_readme_keywords": "search output dataframe thomas output esoreader tracker cumbersome backend pattern ipython variable pandas search example variable columns project instance reporting frequency pandas interface support license interactive environment dictionary object install python distribution institute technology output version example multiple installation ipython session structure idealloadsairsystem license project specify switzerland variable different energyplus introduction equipment parameter specify incantation switch output variable esoreader python understanding architecture dictionary information example contribute energyplus output simulation columns parameter output energyplus distribution example technology architecture allowes request esoreader pandas available python variable incantation multiple columns", "git_description_clean": "python module reading files generated energyplus", "git_keywords_clean": "", "pypi_description_keywords": "github information", "pypi_keywords_clean": "simulation parsing energyplus pandas"}, "MatthewScholefield/fitipy": {"git_readme_keywords": "python eliminate filesystem installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GijsTimmers/cursor": {"git_readme_keywords": "alexander python python packaging python statement customisable terminal beautiful terminal stackoverflow installation alternative install package package manager python package conjunction python kopkan packaging packaging fedora manager ubuntu python disclaimer hidden", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "cursor terminal hide show"}, "/gevent-dht": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "persist print gevent concern connect current network import address available basic implementation value hash member return value example", "pypi_keywords_clean": ""}, "/dependency-injection": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "devpi/devpi-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "freenode compatibility location message conjunction towncrier release support additional default install changelog towncrier command specific password quickstart documentation implement support deletion package", "pypi_keywords_clean": ""}, "JeremyCCHsu/pyworld": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "frequency aperiodicity analysis manipulation fundamental frequency manipulation synthesis", "pypi_keywords_clean": "vocoder"}, "MISP/pymisp": {"git_readme_keywords": "available repository private stderr epydoc jupyter account supported automation section template inherit python envirenment instance pymisp python mispobject generator install available automation generate accessible pymisp various version x amount pymisp tutorial documentation pymisp virtualenv mutable mapping property directory stderr documentation dictionary abstraction inherit everything mutable automation python library jupyter notebook repository everything object generator library access debug output abstractmisp interface python dictionary available documentation module tutorial available documentation available export", "git_description_clean": "python library using misp rest api", "git_keywords_clean": "misp api threatintel", "pypi_description_keywords": "available repository private stderr epydoc jupyter account supported automation section template inherit python envirenment instance pymisp python mispobject generator install available automation generate accessible pymisp various version x amount pymisp tutorial documentation pymisp virtualenv mutable mapping property directory stderr documentation dictionary abstraction inherit everything mutable automation python library jupyter notebook repository everything object generator library access debug output abstractmisp interface python dictionary available documentation module tutorial available documentation available export", "pypi_keywords_clean": ""}, "xgvargas/smartside": {"git_readme_keywords": "taskbar language locator console widget python console folder development multiple connection sourcecode python identifier script available history compile sourcecode widget callback function usual creation example extension python usefull console access python sourcecode specify function unique system qaction support context designer promote header source python taskbar support python qplaintextedit become translation promote qplaintextedit connect member python script explicit script application unique identifier designer compile become python language function problem interface connect group", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "taskbar language locator console widget python console folder development multiple connection sourcecode python identifier script available history compile sourcecode widget callback function usual creation example extension python usefull console access python sourcecode specify function unique system qaction support context designer promote header source python taskbar support python qplaintextedit become translation promote qplaintextedit connect member python script explicit script application unique identifier designer compile become python language function problem interface connect group", "pypi_keywords_clean": ""}, "dabeaz/curio": {"git_readme_keywords": "sample possible tricky algorithm andr\u00e9 study manager block queue lifestyle q familiar design different thread example simple young project important disclaimer overall application compatibility legacy version problem happy monitoring complex example cannon nathaniel variety picture design tasks functionality robust environment tasks tasks related various alexander zhukov explicit syntax connection forget intuitive programming algorithm pygotham keynote server mileage thread interoperability support delegation critical lifetime progress related syntax python question python nathaniel coordinate provision different compatibility group linux proper support keynote server handle solution problem concurrent tasks connection endpoint concurrent connection design philosophy directory various python complex sequential process simple concurrent primary different manner project design complexity pyohio keynote collection thread programming async approach problem network additional design simplicity possible connection committed tested supported cancellation something async framework comparable functionality important interoperate traditional nothing special number fluid successful connection whitespace unicode standalone library related async experimental software ignored different library common system communication external library simple various tasks system q thread q concurrent programming reliable classical approach synchronous asynchronous general design legacy python quick install community making intuitive example problem similar functionality special something dependent esoteric system programming concurrency mileage implementation solution beazley pyohio instance standard function serious usability overview problem async programming traditional synchronous different approach pleasant q callback github coverage connection successful python programming concurrent common machinery evolve framework q future various conference c concurrent software simplicity example example interesting normal async additional support possible implementation support support condition related performance simple example memory machine python brasil several concurrent official mechanism communication dabeaz young design general python nothing magical performance simple isolation behavior result anything comprehensive something little install simple possible communicate cooperative thread process combination documentation beazley python programming example available advantage manner q limited memory simultaneous simplicity important generator significant amount pragmatic library building python beazley dabeaz server problem making standard asyncio considerable dickinson sandeep sticker application performance beazley pygotham queue possible notable reliability q contribute interoperability example q performance performance server portion programming language protocol asyncio module context manager discussion programming tasks http q", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "performing concurrent", "pypi_keywords_clean": ""}, "/pbcore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation documentation", "pypi_keywords_clean": ""}, "klen/django-markdown-vinta": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example optional template preview default tracker current markdown wysiwyg development markdown discussed subclass package license previous django application markdown django example configure discussed template available markdown default version github installation django directory document copyright copyright package modeladmin general iavorskyi license preview markdown browser discussed example require markdown installation template django markdown", "pypi_keywords_clean": "html markdown django"}, "/python-monetdb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "monetdb python compatible deprecation import sql source directory look source install monetdb developer original execute query default tstdb default tstpassword testdb default show python dbapi example sql command python connection monetdb database default tstusername sql module tstpassphrase passphrase control command username monetdb dbapi compatible tstpassword password statement installation specific language optional execute return number library monetdb copyright command testdb fetched increase system initial change import query return monetdb sql initial developer document default tsthostname communicate database public license control monetdb localhost password monetdb sql sselect installation install localhost default restructuredtext sql client receive introduction level connection monetdb license original replacement change localhost monetdb monetdb import directory python cursor increase license version client python server localhost subject monetdb depend monetdb monetdb monetdb environment python source python python august monetdb warranty documentation look module import compliance license monetdb default pymonetdb replacement copyright august behavior tsthostname monetdb convert python client monetdb public database system fetch basis express python install license specific default tstpassphrase tstusername username cursor cursor performance optional documentation python information version license increase performance interactive example license software tstdb database import statement", "pypi_keywords_clean": ""}, "/quaternion": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "agconti/django-unique-upload": {"git_readme_keywords": "django utility argument performance popular uploaded default check install function devepment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "glasslion/django-qiniu-storage": {"git_readme_keywords": "managing static storage \u4e03\u725b\u4e91\u5b58\u50a8 \u4e03\u725b\u7ed9\u5f00\u53d1\u8005\u5206\u914d\u7684 accesskey \u4eca\u540e\u4e3b\u5206\u652f\u5c06\u4f7f\u7528 accesskey \u4e03\u725b\u7ed9\u5f00\u53d1\u8005\u5206\u914d\u7684 \u4e03\u725b\u7ed9\u5f00\u53d1\u8005\u5206\u914d\u7684 secret \u5b98\u65b9\u6587\u6863\u4e2d\u7684\u8fd9\u51e0\u7bc7 managing python \u4f46\u4e5f\u56e0\u6b64\u4e0d\u518d\u652f\u6301 changelog python django storage system django storage \u53ef\u586bfalse false \u786e\u4fdd\u5b89\u88c5\u4e86 \u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a \u5b83\u4f1a\u6536\u96c6\u5404\u4e2a \u7684\u5f62\u5f0f\u6765\u8bbf\u95ee\u4e03\u725b\u4e91\u5b58\u50a8\u4e0a\u7684\u8d44\u6e90 documentation license \u57fa\u4e8emit\u8bb8\u53ef\u8bc1\u53d1\u5e03 django \u5b98\u65b9\u6587\u6863\u4e2d\u7684\u8fd9\u51e0\u7bc7 system django django \u5e94\u7528\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u5176\u6587\u4ef6\u5b58\u50a8\u8f7d\u4f53\u66ff\u6362\u4e3a\u672c\u5730\u6587\u4ef6\u7cfb\u7edf qiniu storage \u56fe\u7247\u7b49\u9759\u6001\u8d44\u6e90 \u548c\u7528\u6237\u4e0a\u4f20\u7684\u6587\u4ef6 https \u6765\u8bbf\u95ee\u4e03\u725b\u4e91\u5b58\u50a8\u4e0a\u7684\u8d44\u6e90 django qiniu python travic \u4f1a\u540c\u65f6\u652f\u6301 python \u7528\u6765\u5b58\u653e\u6587\u4ef6\u7684\u4e03\u725b\u7a7a\u95f4 bucket secret \u7528\u6765\u5b58\u653e\u6587\u4ef6\u7684\u4e03\u725b\u7a7a\u95f4 \u7684\u6839\u76ee\u5f55\u4e0b\u7684 django python python mongodb \u6216\u4e03\u725b\u4e91\u5b58\u50a8 environment variable \u53ef\u4ee5\u53c2\u8003\u4e03\u725b\u5b98\u65b9\u6587\u6863 \u4f46\u4e5f\u56e0\u6b64\u4e0d\u518d\u652f\u6301 django \u53ef\u586btrue \u5206\u522b\u5bf9\u5e94\u7f51\u7ad9\u81ea\u8eab\u7684js storage django python \u4f1a\u540c\u65f6\u652f\u6301", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "\u4eca\u540e\u4e3b\u5206\u652f\u5c06\u4f7f\u7528 python \u4f46\u4e5f\u56e0\u6b64\u4e0d\u518d\u652f\u6301 changelog python django storage system \u6216\u4e03\u725b\u4e91\u5b58\u50a8 \u5982\u679c\u4f60\u5bf9 \u5b98\u65b9\u6587\u6863\u4e2d\u7684\u8fd9\u51e0\u7bc7 django django storage \u786e\u4fdd\u5b89\u88c5\u4e86 \u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a \u5b83\u4f1a\u6536\u96c6\u5404\u4e2a documentation license \u57fa\u4e8emit\u8bb8\u53ef\u8bc1\u53d1\u5e03 django \u5b98\u65b9\u6587\u6863\u4e2d\u7684\u8fd9\u51e0\u7bc7 system django django \u5e94\u7528\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u5176\u6587\u4ef6\u5b58\u50a8\u8f7d\u4f53\u66ff\u6362\u4e3a\u672c\u5730\u6587\u4ef6\u7cfb\u7edf qiniu storage \u56fe\u7247\u7b49\u9759\u6001\u8d44\u6e90 \u7528\u6237\u4e0a\u4f20\u7684\u6587\u4ef6 django qiniu azue mongodb python travic \u4f1a\u540c\u65f6\u652f\u6301 python \u7684\u6839\u76ee\u5f55\u4e0b\u7684 django python python mongodb \u6216\u4e03\u725b\u4e91\u5b58\u50a8 \u5982\u679c\u4f60\u5bf9 django \u4f46\u4e5f\u56e0\u6b64\u4e0d\u518d\u652f\u6301 django storage django python \u4f1a\u540c\u65f6\u652f\u6301 \u7f51\u7ad9\u81ea\u8eab\u7684js", "pypi_keywords_clean": "qiniu django"}, "/virtualenvclone": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "testing logging example"}, "/pymarkov": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple utility python", "pypi_keywords_clean": ""}, "cmck/pybrowserstack-screenshots": {"git_readme_keywords": "browserstack username submodule phantomcss phantomcss support configuration screenshot browserstack complete phantomcss experimental initialised submodule experimental download phantomcss initialised wrapper optional installation download baseline initialised information attribute browserstack", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "browserstack screenshots phantomcss"}, "joeflack4/flask-triangle-joeflack4": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "security validation similar difference various", "pypi_keywords_clean": "flask angular angular js flask triangle"}, "jbub/django-suit-locale": {"git_readme_keywords": "project process django erhansiraci translate transifex repository transifex translate request champsavoir translate translate translation process transifex package gonzalobustos translate language localization process installation repository localize package support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project process django erhansiraci translate transifex repository transifex translate request champsavoir translate translate translation process transifex package gonzalobustos translate language localization process installation repository localize package support", "pypi_keywords_clean": ""}, "/django-slack": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "what3words/what3words": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "geocoder"}, "regardscitoyens/lawfactory-utils": {"git_readme_keywords": "library national assembly directory", "git_description_clean": "", "git_keywords_clean": "lafabriquedelaloi", "pypi_description_keywords": "library national assembly directory", "pypi_keywords_clean": "scraping politics data"}, "formikejo/django-discovery": {"git_readme_keywords": "message application localhost opinionated project documentation develop application database capable specific workflow compose production example application everything production environment application entirety connect workflow external workflow development localhost database discovery", "git_description_clean": "opinionated service discovery django docker", "git_keywords_clean": "", "pypi_description_keywords": "message application localhost opinionated project documentation develop application database capable specific workflow compose production example application everything production environment application entirety connect workflow external workflow development localhost database discovery", "pypi_keywords_clean": "django docker"}, "justinstroup/python-common": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library helper", "pypi_keywords_clean": ""}, "Celc/jack-bower": {"git_readme_keywords": "python contribute frontend django language contribute project install github release default install bootstrap installation normal", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python contribute frontend django language contribute project install github release default install bootstrap installation normal", "pypi_keywords_clean": "django app reusable bower frontend"}, "flyingrub/scdl": {"git_readme_keywords": "profile download gentoo optional artwork x downloader description system authentication soundcloud access soundcloud playlist license flyingrub playlist download compatible original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "readme", "pypi_keywords_clean": ""}, "biesnecker/hachiko": {"git_readme_keywords": "hachiko watchdog subclass aioeventhandler watchdog object", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple watchdog", "pypi_keywords_clean": ""}, "/bob-db-asvspoof": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database database speaker verification installation complete asvspoof genuine significant channel different development algorithms software install database interface evaluation summary channel background asvspoof database toolbox automatic speaker", "pypi_keywords_clean": ""}, "csirtgadgets/csirtg-dnsdb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software development", "pypi_keywords_clean": "security"}, "django-parler/django-categories-i18n": {"git_readme_keywords": "package application flexible anything virtual environment welcome installation", "git_description_clean": "translatable categories model", "git_keywords_clean": "django translations categories", "pypi_description_keywords": "package application flexible anything virtual environment welcome installation", "pypi_keywords_clean": ""}, "coleifer/flask-peewee": {"git_readme_keywords": "package support peewee restful interface wanting library directory execute authentication functionality navigate interface project interface support integration announce example virtualenv number framework execute script decision functionality project interface authentication expose restful example directory superior", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "greyli/flask-ckeditor": {"git_readme_keywords": "ckeditor integration documentation highlight license project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "withlihui copyright license author", "pypi_keywords_clean": ""}, "gears/gears-coffeescript": {"git_readme_keywords": "coffeescript source project coffeescript version version installation coffeescript compiler installed", "git_description_clean": "coffeescript compiler gears", "git_keywords_clean": "", "pypi_description_keywords": "coffeescript source project coffeescript version version installation coffeescript compiler installed", "pypi_keywords_clean": ""}, "/xstatic-angular-mock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project xstatic packaging javascript minimal support metadata xstatic", "pypi_keywords_clean": "xstatic"}, "/blinker-alt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility february program behavior ephemeral project website original documentation information support version interested identity changelog summary important optional speedup bookkeeping cleanup additional bookkeeping regular dictionary manager blinker blinker activity shorthand specific speedup verified blinker documentation decorator strategy baseline", "pypi_keywords_clean": "signal emit events broadcast"}, "/chainer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dynamic computational interpreter community approach dynamic invitation official external support separate install automatic differentiation framework website command chainermn scalable support contribution version research performance training reference tutorial computational graphs environment chainerx license learning framework fukuda suzuki training inference learningsys bibtex flexibility welcome conference clayton installation install request information release external chainerx suzuki chainermn twitter", "pypi_keywords_clean": ""}, "geertj/gruvi": {"git_readme_keywords": "asyncio gevent sequential control traditional sequential development install python example library python overhead gevent eventlet license contact asynchronous gruvi similar standard library sequential programming eventlet comparison install python license gruvi contact author synchronization author geertj install virtualenv rationale interface traditional memory library gruvi import gruvi transport protocol manual documentation performance efficient excellent platform python regular similar concept stdlib desirable server software python install available license gruvi asynchronous support python platform support concurrent powerful common gruvi documentation documentation improved compatible interface section manual python standard submit installation development documentation available gruvi suitable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "stephenmcd/django-socketio": {"git_readme_keywords": "channel javascript gevent pywsgi handful multiple channels multiple persist separate message argument process manager broadcast subscribe different message variety command production contain regular various channels websocket way install message broadcast expression pattern channel broadcast download install relevant request support method source websocket session hello world channel argument urlconf functional libevent development python development regular expression common requirement function example introduction application session alternative subscription broadcast follow thread world websocket current django channel channel channel unsubscribed occurs channel javascript installation broadcast system installation required appropriate decorator management command django session support follow response receiver channel subscription shortcut directory package urlpatterns templatetags instance similar development library requirement websocket templatetag reference message exception separate channels channel python distinct websocket decorator channel dictionary introductory approach method message install libevent broadcast channel module channels example individual channels single websocket websocket connection logic subscribe channel connection occurs possible version message configure occurs websocket subscribes channel available accessible handler python django startup match multiple argument contain particular channels dashboard request websocket similar function different django project precedence occurs request apps channels similar unsubscribed occurs", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "channel javascript gevent pywsgi handful multiple channels multiple persist separate message argument process manager broadcast subscribe different message variety command production contain regular various channels websocket way install message broadcast expression pattern channel broadcast download install relevant request support method source websocket session hello world channel argument urlconf functional libevent development python development regular expression common requirement function example introduction application session alternative subscription broadcast follow thread world websocket current django channel channel channel unsubscribed occurs channel javascript installation broadcast system installation required appropriate decorator management command django session support follow response receiver channel subscription shortcut directory package urlpatterns templatetags instance similar development library requirement websocket templatetag reference message exception separate channels channel python distinct websocket decorator channel dictionary introductory approach method message install libevent broadcast channel module channels example individual channels single websocket websocket connection logic subscribe channel connection occurs possible version message configure occurs websocket subscribes channel available accessible handler python django startup match multiple argument contain particular channels dashboard request websocket similar function different django project precedence occurs request apps channels similar unsubscribed occurs", "pypi_keywords_clean": ""}, "googleapis/gapic-google-cloud-language-v1beta2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "authentication install python install library installed system authentication natural language access client library problem possible install system install connect google repository library google", "pypi_keywords_clean": ""}, "linkyndy/remodel": {"git_readme_keywords": "convention configuration contribute contribution development instance schemaless interface support familiar interface license documentation relation remodel existence powerful extensible installation rethinkdb everything important gracefully document various remodel definition motivation relationship", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "powerful extensible rethinkdb document", "pypi_keywords_clean": ""}, "wheeler-microfluidics/open-drop": {"git_readme_keywords": "frequency validation query number firmware compatible python class interactive session command upload example interactive package opendrop author copyright distribution compatible arduino argument persist arduino firmware install python development arduino model board copyright christian installable python arduino package serial connection attempt upload channel query example firmware upload multiple serial configuration persist key functionality fobel christian directory key board class session board attempt number available query updated firmware board control package device memory arduino device negative voltage frequency upload firmware christian fobel device proxy procedure interact arduino firmware python query descriptive connection query firmware serial array configuration proxy install serial device array overview package python package allowable method opendrop digital firmware development", "git_description_clean": "control package opendrop digital microfluidics platform", "git_keywords_clean": "", "pypi_description_keywords": "frequency validation query number firmware compatible python class interactive session command upload example interactive package opendrop author copyright distribution compatible arduino argument persist arduino firmware install python development arduino model board copyright christian installable python arduino package serial connection attempt upload channel query example firmware upload multiple serial configuration persist key functionality fobel christian directory key board class session board attempt number available query updated firmware board control package device memory arduino device negative voltage frequency upload firmware christian fobel device proxy procedure interact arduino firmware python query descriptive connection query firmware serial array configuration proxy install serial device array overview package python package allowable method opendrop digital firmware development", "pypi_keywords_clean": ""}, "czepluch/c-secp256k1": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generate installable dependenceis generate bitcoin verify bitcoin development install ubuntu installation install install library install package package development", "pypi_keywords_clean": ""}, "jbochi/cep": {"git_readme_keywords": "pesquisa license p\u00fablica instala\u00e7\u00e3o biblioteca documenta\u00e7\u00e3o hospedar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fazer pesquisa license p\u00fablica hospedar biblioteca registrar documenta\u00e7\u00e3o", "pypi_keywords_clean": ""}, "paul-wolf/stringgenerator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "password password shell template progress counter capture concatenation equivalent special bound construct string package template string operator shuffle sensible produce random requirement generate purpose module number unique generate random invocation render password generate provide syntax x length version python special character entropy mechanism provide abstract variation installation much x n specific implementation specification collection literal instance literal specific shell r template maximum number compact flexible bound original author hyphen special literal group strong password module present implied minimal substitution provide module version complex quantifier shortcut example special default n suitable informing previous example address progress render method leblanc caught whitespace uppercase member package module generator example group operand progress indicator generation unicode python character required number textual similar regular callable required operator binary render argument length example hyphen example generator implementation design license standard solution database string group version quantifier generate printable whitespace appropriate example difference quantifier x instance generate solution character solution changing template minimal counter original likely shuffled string generation satisfy n x present python template syntax language template dump method sequence shuffled example typical simplistic multiple character generate password modest length purpose group specification output character punctuation printable minimal effort function generator hyphen example persistent unique stringgenerator literal literal pattern random string specification template variable substitution balance shuffle operator exotic callable callable string example information version typical requirement caught important implementation language syntax support alphabetic python randomness instance whitespace punctuation method possible parameter method required specific possible inform standard python character package string provide punctuation lowercase generate exception whitespace possible common plenty variation provide implementation callable stringgenerator shuffled operand character backslash familiar regular string interpretation underscore number rationale design result quantifier caught example uniqueness work python useful information behaviour shorthand snippet example template amount generate something binary operator example character result string verbose special implement progress spurious abstract template operator operator unique possible useful useful provide method output cumbersome length uniqueness string sequence indicator suitable character operand shuffle current progress underscore domain python string callable generator generator attempt possible generator template language choose generate unique invocation produce available bsd license group group operand produce progress string probability character python guarantee produce required intend operator character example group curly unicode unicode provide string provide implied backslash character encryption example string quantifier result occur template output required randomisation x x character sequence shell script generate useful template shell attempt generate literal string group combination", "pypi_keywords_clean": ""}, "/mcstatus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "CityOfZion/neocore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initialization divisor operation checklist library bugfix utility support logical argument endianness logzero dependency install documentation database properly support trailing floordiv changed signature history unhexlify optional environment activate compatible redundant function biginteger divisor address address truediv virtual environment repository signature pycryptome uploads bugfix binarywriter", "pypi_keywords_clean": "neocore neo python node"}, "waynr/access": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software cookiecutter project documentation cookiecutter history available control member coverage", "pypi_keywords_clean": "access"}, "/pyxml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python version", "pypi_keywords_clean": ""}, "/tkreadonly": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cricket virtualenv ubuntu install variable cricket readonlytext extension helpful environment variable builtin adjust insertion deletion ubuntu packaging selection virtual environment library disable ubuntu ubuntu example", "pypi_keywords_clean": ""}, "stochastic-technologies/django-loginas": {"git_readme_keywords": "default implementation behavior original context processor navigate session example install screen switch message privilege escalation change variable template python version django session update demote template button default default custom access variable escalation staff permission different template awareness redirect template contexts example template license software superuser special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default implementation behavior original context processor navigate session example install screen switch message privilege escalation change variable template python version django session update demote template button default default custom access variable escalation staff permission different template awareness redirect template contexts example template license software superuser special", "pypi_keywords_clean": "django"}, "chriskuehl/identify": {"git_readme_keywords": "whitespace return design interpreter library python determine identification library figure license copyright distance return value actual value function license install possible superset executable filename interpreter executable shebang github extension executable normalize whitespace directory interpret shebang return routine binary information information possible approach x appropriate licensee", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "whitespace return design interpreter library python determine identification library figure license copyright distance return value actual value function license install possible superset executable filename interpreter executable shebang github extension executable normalize whitespace directory interpret shebang return routine binary information information possible approach x appropriate licensee", "pypi_keywords_clean": ""}, "/django-jux": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "notable elementtree generate individual generic motivator django project inspiration plugin installation install install django something available output django redefine behavior django specific project django success failure targeted abstraction introduction attempt", "pypi_keywords_clean": ""}, "texastribune/tx-lege-districts": {"git_readme_keywords": "hookup legislative namespace property environment variable configurable backend representative configure database", "git_description_clean": "reusable django app working texas legislative districts", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/exporters-bloom-filter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "hisie/django-extended-flatpages": {"git_readme_keywords": "install template address configure ckeditor ckeditor ckeditor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install template address configure ckeditor ckeditor ckeditor", "pypi_keywords_clean": ""}, "/sanpera": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "uuazed/numerapi": {"git_readme_keywords": "competition library download training example command regular importable command require interface account available reference checkout environment uploading information encounter encounter problem submission installation numerapi", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "competition library download training example command regular importable command require interface account available reference checkout environment uploading information encounter encounter problem submission installation numerapi", "pypi_keywords_clean": ""}, "/sveeaccounts": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "password change generic implementation optionnal install override template abstract model optionnal registration optionnal password demonstrate registration stuff userprofile support django version registration login python translation catalog version support introduction application password registration installed specify update french default password optionnal profile webapp installed column return helper french translation helper registration sample", "pypi_keywords_clean": ""}, "jkbrzt/django-settings-export": {"git_readme_keywords": "roztocil instance subclass licence mechanism python django development context processor example iterate implicit accessible coverage contexts python exception template context useful plugin variable something django project context variable template contexts template undefined unexported django installation variable instance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "roztocil instance subclass licence mechanism python django development context processor example iterate implicit accessible coverage contexts python exception template context useful plugin variable something django project context variable template contexts template undefined unexported django installation variable instance", "pypi_keywords_clean": ""}, "/atpublic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decorator function c implementation implementation c", "pypi_keywords_clean": ""}, "/ircutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework support documentation protocol anything", "pypi_keywords_clean": ""}, "jonbretman/jinja-to-js": {"git_readme_keywords": "package runtime available method option example first javascript implementation javascript result respect current import mechanism template inheritance required small html loop runtime first current template docs logic jinja implementation docs loop python javascript available docs template javascript runtime version django javascript module implement custom inheritance jinja docs jinja respective import need output module jinja js common directory jinja template contain javascript js function template javascript jinja docs templating language javascript example option logic jinja module format output javasscript scope method relative respect added beginning compile python web python library implement method javascript function available scope available implement docs docs template assignment jinja ideal beginning module literal commonjs module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "jinja html javascript templating"}, "xeroc/steem-piston": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "repository obsolete", "pypi_keywords_clean": "steem"}, "eldarion/user-messages": {"git_readme_keywords": "message access pk delete github course delete specific thread multiple python django release history thread pk multiple recommend class pinax connect context processor documentation readme django web community pinax reusable django smart human overview app cbvs various blog license template add add project history contribute awesome class project reference description fix documentation markup foster kind subdirectory template conduct connect example argument pinax eldarion thread change issue github default copyright c documentation installation project urlpatterns contribute section project threaded messaging collection database template order everyone smart statement allow response success python documentation license pinax update documentation order foster django apps message template ecosystem reusable available work thread unread reference installation pinax bootstrap django support delete message filter add pinax slack add documentation installation install kind inclusive message inbox help section coverage circleci template filter reply message project subdirectory contribute overview work current django python example project inclusion template pinaxproject check fix thread pinax overview video history app concrete contribution argument instance source pinax number unread convert django generic cbvs add template project blog access inbox eldarion contribute please reference template context python support connect pinax update web framework thread delete object template unread message inbox message initial release instance unread project please guidance app snippet interest python circleci codecov respond message django compatibility django pinax inclusive community specific message django generic conduct order thread allow order access processor order update add add django valid pinax project human programmer thread single pinax platform install add check pinax documentation convert pinax license change drop django section project readme convert license copyright button messaging section concrete config update modifying codecov add watch bootstrap filter matrix pinax pinax private threaded template message thread message specific blog framework ecosystem support add", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "quick start application installed", "pypi_keywords_clean": ""}, "ssut/py-googletrans": {"git_readme_keywords": "reliable google maximum guarantee library sentence unlimited python project disclaimer unofficial google translate maximum character advantage subject translation multiple compatible python translate compatible application python support stability important commit encouraged randomly release request license connection language detection implement feature branch implement python library welcome unofficial library address request method incompatible everyone version google install package customizable service", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python google translate", "pypi_keywords_clean": ""}, "tipsi/aiozk": {"git_readme_keywords": "zoonado asyncio zookeeper approach implementation ability dynamic meaningful something integration familiar installation dynamic reconfiguration example", "git_description_clean": "asyncio client zookeeper", "git_keywords_clean": "asyncio zookeeper", "pypi_description_keywords": "zoonado asyncio zookeeper approach implementation ability dynamic meaningful something integration familiar installation dynamic reconfiguration example", "pypi_keywords_clean": "zookeeper"}, "gera2ld/qqlib": {"git_readme_keywords": "\u5feb\u901f\u5f00\u59cb qqlib", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library python", "pypi_keywords_clean": "qq"}, "/pymod2pkg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package openstack common problem initiative information software tracker discussion simple python packaging initiative channel reported appropriate vendor unfortunate problem packaging tracker reporting repository information openstack tracker available", "pypi_keywords_clean": ""}, "jonhadfield/python-hosts": {"git_readme_keywords": "library managing license python library documentation command installation install example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "manager library", "pypi_keywords_clean": "hosts python network"}, "algorithmiaio/algorithmia": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python algorithms algorithmia python bundled python algorithms algorithmia library", "pypi_keywords_clean": ""}, "ludia/pyramid-health": {"git_readme_keywords": "backend maintenance failed pyramid project default import subscriber healthcheck endpoint python import mechanism healthy endpoint application subscribe healthcheckevent subscriber response status subscriber import application python import healthcheckevent execute specific optional message request request subscriber healthcheckevent install myapp touch configuration pyramid application healthy operation application config configurator github virtualenv application endpoint pyramid status optional message application myapp project python project configuration endpoint response outcome status inform pyramid maintenance backend unavailable simple healthcheck traffic backend request healthcheck python config", "git_description_clean": "simple healthcheck endpoint pyramid maintenance mode application checks", "git_keywords_clean": "", "pypi_description_keywords": "backend maintenance bitbucket failed pyramid project default import subscriber healthcheck endpoint python import mechanism healthy endpoint application subscribe healthcheckevent subscriber response status subscriber import application python import healthcheckevent execute specific optional message request request subscriber healthcheckevent install configuration pyramid application healthy operation application config configurator virtualenv application endpoint pyramid status optional message application myapp report outcome project python project configuration endpoint response outcome status inform pyramid maintenance backend unavailable simple healthcheck traffic backend request healthcheck python config", "pypi_keywords_clean": ""}, "/outlawg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "outlawg description description grandmother customization component grandmother logging", "pypi_keywords_clean": "logging test"}, "Robpol86/sphinxcontrib-versioning": {"git_readme_keywords": "initial release sphinx extension documentation version quickstart changelog project coverage building", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial release sphinx extension documentation version quickstart changelog project coverage building", "pypi_keywords_clean": "sphinx versioning versions version branches tags"}, "jaraco/jaraco-windows": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application supply different additional optional monkeypatch interface symlink compatibility directory contribute supply several exhaustive optional parameter supply interface", "pypi_keywords_clean": ""}, "/pygments": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package generic license quality copyright copyright library copyright amount support special attention highlighter suitable", "pypi_keywords_clean": "syntax highlighting"}, "/flask-inputs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation validation extension available contribute repository installation coverage documentation available", "pypi_keywords_clean": "flask validation wtforms"}, "kvh/recurrent": {"git_readme_keywords": "language parsing schedule meeting tuesday version parsedatetime recurrent recurrent parsedatetime welcome recurrence natural language rrulestr patched similar joshua lippiner calendar squaredloss english centric library natural tuesday tomorrow parsedatetime library thursday november", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "calendar recurring date event nlp"}, "plivo/sharq": {"git_readme_keywords": "server installation overall enqueue sharq interval enqueue request interval inverse capability sharq package install configuration sample library development expiry sharq sharq interval specific enqueue building package initialization enqueue install uninstall install sharq uncomment fly interval successful dequeue system connect release job available sharq server sharq flexible length particual config requeue enqueue dequeue job uninstall license sharq config dequeue respective installation install finish second dequeue sample sharq", "git_description_clean": "core sharq library powers sharq server", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation platform unknown copyright software development merchantability documentation unknown classifier audience software express substantial software description particular liability contract permission distribute sublicense language classifier development warranty restriction publish distribute connection software independent classifier software software", "pypi_keywords_clean": ""}, "bcwaldon/warlock": {"git_readme_keywords": "warlock python warlock available document validate generate installation warlock schema installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "warlock python warlock available document validate generate installation warlock schema installation", "pypi_keywords_clean": "json schema json patch model validation"}, "/xlutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "question information framework separate collection xlutils documentation available xlutils package copyright installation utility virtualenv", "pypi_keywords_clean": "excel xls xlrd xlwt"}, "mathisonian/python-yelp-v2": {"git_readme_keywords": "location copyright matthew available library internal mathisonian wrapper business structure matthew installation available business license copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "yelp api"}, "/dataserv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform transfer simple example advertise registration registration untrusted display unique farmer address display advertise height capacity install much success example scheme success farmer success server number authentication install ubuntu dataserv unique address online status status readable example online machine readable generation scheme example address height display rudimentary client amount offline", "pypi_keywords_clean": ""}, "fastgenomics/fastgenomics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interpreted separate submodule application standard example dependency functionality directory structure relevant validate parameter optional parameter arbitrary access necessary function validate summary template optional validate consistency convenience interaction", "pypi_keywords_clean": ""}, "wickman/pystachio": {"git_readme_keywords": "describe multiple achieve effect possible serialize container composable jsirois wfarner optional possible complicated version stranger composite miniature configuration pystachio variable environment overriding resolution identical keyword overview pystachio dictionary construct stranger arbitrary namespace compatible nebraska pystachio method deserialization mechanism construction possible construction miniature francisco number construct namespace hierarchical number assume coercion python version template portable python interpreter hashable default project unrelated interpreter notable serialization additional variable wickman notable related interpolation shorthand functional structure pystachio serialized django global obvious context defunct javascript number cpython pypy keyword argument likely system object additional ability hierarchical python exception object scopes function equality example language dictionary specify python dictionary appropriate effort function environment constructor schema schema instantiate picture template hidden context mustache notation process expectation object function deposit interpreter reified original environment example serializable immutable similar destination describe serialized instantiate interpreter example interpolation template specify clarity schema javascript python generate illustrative serializes particular reasonable francisco consistency factory library primary powerful mentioned lookup example schema section unrelated defunct contain amount certain object achieve schema dictionary mechanism schemas check configuration interpolation interpreter equivalence mustache future enumeration example object clarity object inheritance python standard coercion template nebraskan mustache template metaclass indentation clarity priority memoization unicode kwargs variable object namespace namespace precedence object gotchas syntax generate previous section scopes complex", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/geneimpacts": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different variant polyphen b b transcript comparison serverity multiple modifier general utility consistent interface b b pseudogene consequence interface different annotation access severity orderable variant severity severity severity severity b classmethod", "pypi_keywords_clean": ""}, "iot-lab/iotlabcli": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "profile default interract dependency upload account variable experiment website support experiment support mobility relevant package execution management license software licence package status validation documentation installable python install association internal internal command additional output integration codecov coverage validation prepare available command version internal status installation exception python httperror access python support status changelog cleanup monitoring profile deprecate profile unicode firmware package require summary coverage status selection priority profile management submit description leverage alternate external upload parameter python package unicode management package distribution runtimeerror custom submit experiment", "pypi_keywords_clean": ""}, "/pastedeploy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python tarball configuration available download version available", "pypi_keywords_clean": "web wsgi application server"}, "ibis-project/ibis-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python framework", "pypi_keywords_clean": ""}, "/cobe": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default response release history business conversation simulator documentation similar database generate candidate support unicode python success stability megahal tarball python original megahal algorithm console relevant interacting python package", "pypi_keywords_clean": ""}, "lanpa/tensorboard-pytorch": {"git_readme_keywords": "tensorboardx reference install tensorflow support install pytorch torchvision tensorboardx pytorch tensorboard torchvision tensorboard function example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reference support tensorflow dependency incorrect history summary function documentation available", "pypi_keywords_clean": ""}, "speedy1991/flask-fileupload": {"git_readme_keywords": "optional storage storage permission storage storage install configuration available template something extension default storage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "upload management extension", "pypi_keywords_clean": ""}, "revolution1/flask-whooshalchemyplus": {"git_readme_keywords": "content content method refactory chinese defualt manager feature extension manager disable execute disable whooshalchemyplus instance support custom queryclass whoosh indexed feature example populate parameter directory application likely session functionality option disable ordinary orderby particular attribute feature environment install quickstart indexable disable whoosh welcome whooshalchemyplus runtime default directory context manager relevance conjunction example contain subclass object", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "content content method refactory chinese defualt manager feature extension manager disable execute disable whooshalchemyplus instance custom queryclass whoosh indexed feature example populate parameter directory application likely session functionality option disable ordinary orderby particular attribute feature environment install quickstart indexable disable whoosh welcome whooshalchemyplus runtime default directory context manager relevance conjunction example contain supprot subclass object", "pypi_keywords_clean": ""}, "/elflib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "planning limited independent executable library development limited functionality", "pypi_keywords_clean": ""}, "deliveryhero/lymph": {"git_readme_keywords": "framework messagepack rabbitmq documentation discover installation configuration installation dependency discovery pluggable management installation messaging", "git_description_clean": "framework python services", "git_keywords_clean": "", "pypi_description_keywords": "framework messagepack rabbitmq documentation discover installation configuration installation dependency discovery pluggable management installation messaging", "pypi_keywords_clean": ""}, "mishbahr/djangocms-youtube": {"git_readme_keywords": "button begin resolution thumbnail player width weight youtube plugin child django python player extra width generate sitemap support markup sitemap generate mobile install disable functionality website center integration version clever migrate plugin display python migrate key sitemap configuration thumbnail available urlpatterns sync database standard iframe available youtube sitemap youtube player much extra watch endscreen width thumbnail button extra weight center plugin configuration import visitor website plugin simple example register license youtube standard youtube google", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "button begin resolution thumbnail player width weight youtube plugin child django python player extra width generate sitemap support markup sitemap generate mobile install disable functionality website center integration version clever migrate plugin display python migrate key sitemap configuration thumbnail available urlpatterns sync database standard iframe available youtube sitemap youtube player much extra watch endscreen width thumbnail button extra weight center plugin configuration import visitor website plugin simple example register license youtube standard youtube google", "pypi_keywords_clean": ""}, "/hcluster": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "efficiency implementation hierarchical clustering interface similar", "pypi_keywords_clean": "dendrogram linkage cluster agglomorative hierarchical hierarchy ward distance"}, "kiip/pybloomd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple bloomd location download pybloom library interface creation new discovery interface bloomd example", "pypi_keywords_clean": "bloom filter client bloomd"}, "stephrdev/django-tapeforms": {"git_readme_keywords": "addition project experiment basicly interpreter documentation template example project version coverage development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition project experiment basicly interpreter documentation template example project version coverage development", "pypi_keywords_clean": "django forms"}, "Miserlou/pyglance": {"git_readme_keywords": "registration matched specification library programmatic welcome installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "registration matched specification library programmatic welcome installation", "pypi_keywords_clean": ""}, "/pyttk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/render": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/mod-wsgi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application run required able configuration startup configuration apache location directory index pypi script installed system python run compile software foundation described note server root configuration directory directory file installing site executable shell binary shell cmmi installation top apache application particular additional apache script apache method command start module configuration combination system package index see main first thing system macos special user past installing compile supply certain file server compile additional main apache prefork mpm port verify directory use complete list process run installed module python command traditional way module apache stop apache script start generate configuration overview package apps prepare configuration load apache distribution manual configuration root user process supervisor development package cached configuration direct python environment destroy server use necessary specific django use installation unix tool foreground daemonize root directory point result use start full documentation application note case work option complete acronym cmmi need perform version apache different process development environment time easy expected way python original binary bit work sierra apple default expected sip feature directory run verify module installation point install third command set download source copying module supply required use python use location perform additional ubuntu linux method use use combination many linux start standalone user apache expected daemonized location set system verify unix type package python virtual environment export environment cmmi method standard apache python web official release way need way described apache necessary allowed location installed package run information xcode command apache software run apache many software start port destroy python command use access match configure selinux work need python much wsgi script case directory centos fedora run new simple wsgi root primary macos x installation method installation edit standalone instance foreground stop instance run package run static file necessary apache system init django installed management command case executable directory package run instance first collect apache configuration verify installation installed macos similar apache script sip system match directory particular installation tool run apache load executable something apache use apache worker enough runtime daemonized different perform apache result need first directive installing module selinux browser second way task history path directory set environment standard port user case apache web installed directory later mechanism library scl required perform python module web application location apache start case new set possible start stop sierra system distribution apache reinstall package root need apache create list installed complete apache load note wsgi application apache run shell script move directory match expected else addition apache module use case start apache selinux profile root order use module script run directory latter protection sip first way first set distribution installed instance necessary party apache system integrity default location wsgi compliant location original run alternative variable location perform installation work cmmi apache else fail startup web specify real due sip wide python output something worker mpm installing install else fail note nothing need xcode site wide integrity protection terminal use package apache installation apache current directory apache prefork type system primary intention need configure operating system process required apache mpm server installation installation successful use simple option specify work executable necessary output directory first apache way expected apache fail start mechanism installing run script python installation specific wsgi command line broken ability application installed compile apache script file code run run command separate start fine long group python real location privileged port python library approach application approach collect django run linux process expected easy use x apache release direct prior macos application command tendency way apache install python script command installing traditional container log run use x app configure apache supervisor container way installing linux distribution able run python install independent create set application installation http x version method need directory path environment variable installed apps compliant interface web server location example startup script able compile need run use development command output latter case variable directory installation source installation cmmi environment module source directory file run apache executable required lounge apache line auto apache installed time need set configuration django static environment reinstall apache lounge described use x due system method script unix use option apache file app store recent macos configuration later python virtual original executable installation enough privileged installation python run tool ability install configuration necessary development python django application method installing compile install run wish standard location note scenario note copying installation configure need update successful run third party apache system option management installation run use apache set export instance apache install official system apache installation directory allowed access startup apache complete python selinux move see full user group apache header update set debian ubuntu approach original copy module set required edit django source code method see work recent python package x sierra use special apache server use django directory virtual linux apache user account port standard installed use load module feature macos x unix apache installation module python apache instance wish use xcode application main documentation need use run root something else use version problem broken scenario module", "pypi_keywords_clean": "wsgi apache"}, "jantman/pypi-download-stats": {"git_readme_keywords": "warehouse reference august available concern master branch install virtual system account awslimitchecker project python recommended generate detailed support status bigquery additional stable usable functionality warehouse service february install development virtual environment github upload codebase script release message method generate perform download release checklist imagine version release desktop background legacy analysis understandable request release repository github solution example august january handle architect installation method alternative project status bucket detailed historical stable service recommended install request confirm service extension moment generate system package young status legacy sphinx documentation current warehouse project bigquery increment version branch master successful travis gh historical graphs configuration development current github feature coverage environment virtualenv current download myname release specific commit access travis intended official schedule project member development install upload package cronjob desktop bandwidth project release actual recommended method specific purpose check legacy codebase output recommended installation installation recommended change graphs introduction package simple download variable system python github confirm dedicate version number package version codebase download priority google bigquery information compliant environment variable graphs download correct upload replacement august refactor offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "warehouse reference august available coverage report concern master branch install virtual system account awslimitchecker project python recommended support status bigquery additional health stable usable functionality warehouse service february install development virtual environment github upload codebase script release message method generate download release checklist imagine version release desktop background legacy analysis understandable generate request release repository github example august january handle architect installation method project status bucket report master stable service recommended install request confirm service extension generate system package young status legacy sphinx documentation current warehouse project bigquery increment version branch master successful travis configuration development current github feature environment virtualenv current download myname release specific commit access travis intended official schedule project member development install upload package cronjob desktop historical bandwidth project release actual recommended method specific purpose check legacy codebase output recommended installation installation recommended graphs introduction package simple download variable system python github confirm dedicate version number codebase download priority google bigquery information compliant environment variable correct upload replacement august refactor offline", "pypi_keywords_clean": "pypi warehouse download stats badge"}, "jflesch/pyinsane": {"git_readme_keywords": "scanner macosx reference current default constraint handheld implementation backend obvious complex pyinsane description acquisition possible building python libsane pyinsane paperwork abstraction detailed preview feeder possible visual studio successful hp officejet documentation possible access python visual instance contact practice document feeder available description python provide specific macosx theory property specific tracker application example multiple scanimage platform specific libsane backend specific process behavior consistent automatic document unknown uninitialized memory paperwork instance comment environment complete example nothing information consistent python python instance python python library visual winddk library access scanner detection program temporary directory installation installation updated wdk python flesch jflesch hp deskjet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python implementation abstraction", "pypi_keywords_clean": "sane scanner"}, "avinassh/python-status": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "response status understandable status project license status response readability installation available status django example library wherever framework status helpful release package directory custom python meaningful variable human understandable python library variable meaningful", "pypi_keywords_clean": ""}, "/pymount": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "programmatic", "pypi_keywords_clean": "pymount mount umount partition"}, "Axilent/sharrock-client": {"git_readme_keywords": "sharrock client", "git_description_clean": "client code sharrock less dependencies", "git_keywords_clean": "", "pypi_description_keywords": "sharrock client", "pypi_keywords_clean": ""}, "/python-recsys": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "allisson/simple-rest-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "build code simple documentation code simple install code documentation website", "pypi_keywords_clean": "rest client http asyncio"}, "mankyd/jinjatag": {"git_readme_keywords": "argument documentation documentation install available license jinjatag template library documentation available configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "inclined documentation argument documentation documentation install available license template library documentation available", "pypi_keywords_clean": ""}, "dfm/corner": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "SparkPost/sparkpost": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "underlying library check django underlying message sparkpost actual project contribute check reference contribute configuration backend documentation section check community python cloud simple width sparkpost google cloud github feature content status django integration sparkpost python update branch necessary integration sparkpost message python coverage status python deploy variable python documentation documentation friendly python library environment variable discussion installation install backend django request python package cloud documentation documentation status", "pypi_keywords_clean": ""}, "vvangelovski/django-lamson": {"git_readme_keywords": "deployment distribution project ability configure management application integrate project installation folder sourcecode eliminate multiple multiple configuration", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "deployment distribution project ability configure management application integrate project installation folder sourcecode eliminate multiple multiple configuration", "pypi_keywords_clean": ""}, "Robpol86/etaprogress": {"git_readme_keywords": "percent string display undefined progress default build status cranny progress string library utility undefined changelog terminal install course similar application progress previous different progress linear regression version progressbar example display simple progress python entire terminal number visual display progress colorful progress unknown import return etaprogress coverage status instance simple animation implement colorful numerator integer initial release console technical preview width calculate iteration default added initial changelog project regression library progress source terminal width module available terminal simple linear numerator linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "percent undefined progress simple build status cranny progress library undefined changelog previous install similar version progressbar example python colorful progress unknown import return etaprogress coverage status instance simple implement colorful denominator progress support initial numerator integer initial release console technical preview regression library progress source module linux", "pypi_keywords_clean": "eta progress bar"}, "/django-permissionsx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-councilmatic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "request description export command datamade search zanten datamade standard councilmatic original project perfect databse export legistar product copyright interested feature conversation python everything councilmatic specify functionality request contribute copyright copyright foundation datamade datamade councilmatic general welcome search predecessor datamade important predecessor feature addition contribution councilmatic scratch council request councilmatic mjumbe participatory", "pypi_keywords_clean": ""}, "/ironic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "additional functionality project standalone information contribute hypervisor license interact license detailed bifrost repository physical storyboard information detailed license", "pypi_keywords_clean": ""}, "pytroll/pyorbital": {"git_readme_keywords": "package pyorbital diverse astronomical", "git_description_clean": "orbital astronomy computations python", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "skylander86/ycsettings": {"git_readme_keywords": "configuration environment utility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "configuration environment utility", "pypi_keywords_clean": "ycsettings"}, "coddingtonbear/environmental-override": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/google-cloud-bigquery-datatransfer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python product project bigquery transfer documentation documentation platform project partner available installation datatransferserviceclient bigquery library documentation authentication installation", "pypi_keywords_clean": ""}, "/itools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tracker library versmisse documentation install fitness particular mcmullen merchantability fitness romanczyk guillaume warranty merchantability decroix development deployment software foundation yannick winterbach general software redistribute aur\u00e9lien warranty program matthieu s\u00e9bastien sylvain particular purpose cauwelier gauthier bambouch\u00e9", "pypi_keywords_clean": ""}, "angvp/django-changuito": {"git_readme_keywords": "introduction thankful available previous woudenberg directive syncronize maintain version thankful continue installation complete encourage developer django content production public example django everything framework installation session officialy logged logged project project original project carvalho installation install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "python-parsy/parsy": {"git_readme_keywords": "project combinator library library infinity complex documentation request anything monadic section history", "git_description_clean": "easy parser combinators python", "git_keywords_clean": "", "pypi_description_keywords": "combinator library library infinity complex request github section anything monadic history", "pypi_keywords_clean": "parser parsers parsing monad combinators"}, "/cozmo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "technical official developer experience combination enterprise education flexible platform conjunction platform expressive education entertainment documentation official university sophisticated innovative", "pypi_keywords_clean": "anki cozmo robot robotics sdk"}, "mahmoudimus/nose-setenv": {"git_readme_keywords": "install development install package development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "usage", "pypi_keywords_clean": ""}, "samuelcolvin/django-bootstrap3-datetimepicker-2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "reubano/ckanny": {"git_readme_keywords": "python preinstalled argument example license ckanny default package ckanny remote local x python fetch resource schedule script instance configuration instance remote ckanny command order resource package command schema option python package update keyword argument introduction ckanny python ckanny virtualenv right preinstalled installation frequent basis environment version fetch variable description job instance unnecessarily order support environment variable configuration ckanny interface ckanny introduction update datastore datastore ckanny download manager setup", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python preinstalled argument example license ckanny default package ckanny remote local x python changelog fetch resource schedule script instance configuration instance remote ckanny command order resource recent package command schema option python package update keyword argument introduction ckanny python ckanny virtualenv right preinstalled installation frequent basis environment version fetch changelog version variable description job instance unnecessarily order support environment variable configuration ckanny interface ckanny introduction ongoing changelog update datastore datastore ckanny download manager setup", "pypi_keywords_clean": "ckanny"}, "polysquare/polysquare-generic-file-linter": {"git_readme_keywords": "english dictionary customterm handle alphabetical licence undesirable default argument switch interest matter convenience current documentation member result multiple invocation column offset library needs generate headerblock project instance removal punctuation documentation check ordinary absolute functionality check markup invalid technical indicate compliance polysquare coverage trigger example matching regex punctuation check technical ordinary english execution disabling application status travis keyword argument check certain handle punctuation regex removal american english ordinary timestamp dictionary directory something functionality keyword spellcheck check standard english check invalid anything matching whitespace returned relative english grammar filename technical returned returned function indicated scowl check technical script shadow redirect opening parenthesis purpose check punctuation syntactical polysquare generic specific instance argument spellcheckable source opening golden ubuntu appveyor certain disable filename special", "git_description_clean": "linter check style guide compliance polysquare projects", "git_keywords_clean": "", "pypi_description_keywords": "licence interest documentation member column offset library appropriate copyright headerblock instance documentation absolute invalid technical indicate compliance polysquare trigger coverage example spelling technical application keyword argument functionality timestamp dictionary ordinary returned relative functionality keyword comment whitespace returned returned function indicated dictionary shadow certain redirect punctuation syntactical travis polysquare generic instance argument spellcheckable ubuntu appveyor customterm", "pypi_keywords_clean": "development linters"}, "/syseleven-cloudutilslibs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "zalando/clickclick": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library working name state column warning applicable law apache license working example calc oh long description wrong please list localtime progress unknown output ok message exit desc column fyi error json desc script script way little print current final please click python name license status alt active exception number exit warning please column error example possible script usage args error click click untile working wonderful click work complete beautiful command print localtime kind see script specific language li json start ok click alt list example command args li title possible echo yaml desc output yaml usage python see work se software select work state work copy license fix fatal work progress python wonderful warning column error fuckup travis ci composable way title ok test id work unknown ok calc state desc code necessary li tsv test test error wrong ok message license utility version print name test progress please ok ok please fix column state state error license version create exception localtime print id name name column title column error many title li output tsv l usage oh make name id pypi version see license json id start exception ok create test output alt travis ok test python library alt license description id exit help verrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrry long localtime output python package fuckup output ci build title desc compliance license build status error column alt pypi state warning little code lo localtime necessary usage localtime li please select tsv id basis license copyright output example work untile express license specific make final version number example see select state fatal error localtime lo output json yaml id test fyi version license unknown please current version li yaml make work version alt description column desc verrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrry", "pypi_keywords_clean": "click console terminal cli"}, "thomasw/djproxy": {"git_readme_keywords": "agnostic middleware httproxy compatibility upstream destination default middleware performant configure django suitable pattern response reverse custom middleware understand meaning kwarg development configure specified httpproxy definition provided django development anything django support djproxy djproxy provide functionality support custom django application provided particular middleware functional additional installation djproxy similar downstream httpproxy configuration production apache execute particular dependent performance production optional configuration xff xfh upstream configuration information process downstream functionality provided middleware important understand project upstream configuration specify httpproxys support version django attribute environment middleware httpproxys translation terminology important modify content proxypassreverse testtube specified config httpproxy definition request djproxy correspond snippet djproxy directory specific djproxy generic installing specify configuration downstream custom", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "agnostic middleware httproxy upstream destination default middleware performant configure django suitable pattern response reverse websocket support custom middleware understand meaning kwarg development configure specified httpproxy definition provided django development anything django support djproxy djproxy provide functionality support custom django application provided particular middleware functional additional installation djproxy similar downstream httpproxy configuration production apache execute particular dependent performance production optional configuration xff xfh upstream configuration information process downstream functionality provided middleware important understand project upstream configuration specify httpproxys support version django attribute environment middleware httpproxys translation terminology important modify content django support proxypassreverse testtube specified config httpproxy definition request djproxy correspond support investigate snippet djproxy directory specific djproxy generic django installation installing specify configuration downstream custom", "pypi_keywords_clean": ""}, "spinus/sphinxcontrib-images": {"git_readme_keywords": "project download instalation documentation configuration fallback requested support ability documentation backend preview solution preprocess extension github directive example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project download instalation documentation configuration fallback requested support ability documentation backend preview solution preprocess extension github directive example", "pypi_keywords_clean": ""}, "AutomatedTester/unittestzero": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/aotools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Pythonity/icon-font-to-png": {"git_readme_keywords": "package adamczak compatibility matter anything unclear awesome version micha\u0142 micha\u0142 wojciechowski awesome python install documentation maintained pythonity available straightforward suggest concept installation github original version functionality script library package source python project repository pillow installation python script iteration concept simple export available github coverage available", "git_description_clean": "python script library exporting icons icon fonts font awesome octicons png images", "git_keywords_clean": "python octicons", "pypi_description_keywords": "package matter anything unclear awesome awesome python install available straightforward suggest concept installation github project proper original version proper documentation functionality report script library package source python project repository python script iteration concept simple export coverage available compatibility iteration", "pypi_keywords_clean": "icon font export font awesome octicons"}, "/pynml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance software express language specific language network standard network copyright enterprise development applicable representation documentation", "pypi_keywords_clean": "pynml"}, "/yandextank": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "falconry/token-bucket": {"git_readme_keywords": "package implementation suitable algorithm window capacity duration algorithms approach implementation counter independent overhead algorithms resitant request window algorithms problem additional processing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package implementation suitable algorithm window capacity duration algorithms approach implementation counter independent overhead algorithms resitant request window algorithms problem additional processing", "pypi_keywords_clean": "web http https cloud rate limiting token bucket throttling"}, "mostafa/simplru": {"git_readme_keywords": "functionality python install simplru license python documentation command installation install python installation install source directory manager repository backport python simplru backport", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information functionality simplru backport", "pypi_keywords_clean": ""}, "ghtdak/qt4reactor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "qt twisted"}, "bmerry/trollius-fixers": {"git_readme_keywords": "transformation trollius asyncio installation particular tornado trollius different example transform consideration confuse", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "trollius asyncio installation", "pypi_keywords_clean": "asyncio trollius"}, "/repoze-who-plugins-sa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sqlalchemy plugin plugin plugin authenticator", "pypi_keywords_clean": "web application server wsgi sql sqlalchemy elixir authentication repoze"}, "/python-googl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "google url googl"}, "pikhovkin/simple-websocket-server": {"git_readme_keywords": "directory offer change ws server example endpoint frame endpoint websocket server frame unicode secure server directory server bytearray object local directory connect server python installation basehttprequesthandler endpoint handle websocket frame stream handshake complete certificate browser browser exception browser change https https incoming message certificate simple websocket https server click connect endpoint websocket multiple connect message client binary frame payload testsuite support support python bytearray binary binary bytearray endpoint licensing ws wss unicode object address websocket testsuite client endpoint wss click error offer certificate websocket handshake", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "directory offer change ws server example endpoint frame endpoint websocket server frame unicode secure server directory server bytearray object local directory connect server python installation basehttprequesthandler endpoint handle websocket frame stream handshake complete certificate browser browser exception browser change https https incoming message certificate simple websocket https server click connect endpoint websocket multiple connect message client binary frame payload testsuite support support python bytearray binary binary bytearray endpoint licensing ws wss unicode object address websocket testsuite client endpoint wss click error offer certificate websocket handshake", "pypi_keywords_clean": ""}, "MasterKale/django-cra-helper": {"git_readme_keywords": "command output numerous template simple package available available installation context bound directory django folder development development server help django template similar template container element prepare accept specify component specify actual production environment initialize basis build command period special substitution todo figure optional static project payoff codebase added project template contexts django command installation package app template pulled default generate directory added component instance help reference render viewable django context inject python javascript render component necessary setting example django command complete important viewed production typical django django hash added filter way couple small build process template enable prepare static introduction abbreviation process similar component initialize usual special example couple liveserver entry object project everything component entry setting added possible access filter setting substitution project liveserver django production production template django js css django app typical javascript ultimate usual django package integrate small right todo command generate added specify specific setup configuration django communicate template variable added django javascript object minimal implementation reason render context initialize component template render django development relative minified javascript convert python javascript css app directory current js django project unique hash entry django example folder command project folder context context", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django project incorporate django", "pypi_keywords_clean": "django react integrate"}, "/coloredlogs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation package message critical object logger message informational install function screenshot package available python import github available module coloredformatter changelog package install silence output useful version available hostname standard install python object install capture output crontab command levelname message verbose message process levelname critical message example intention dependency output system logging module python logging system capturer package millisecond precision directory duplicate output default install environment logger object output variable spammy colorama sequence translation license documentation terminal output module package discussion informational message external context manager output python license software specific logger nothing useful system administrator", "pypi_keywords_clean": ""}, "PEAK-Legacy/proxytypes": {"git_readme_keywords": "package thread attribute change proxy callback arbitary object subject allow attribute attribute proxy ordinary python useful allow additional similar callback standard indistinguishable object quick proxy setattr delattr callback function subject example counter equal subclass abstract wrapped object circular subclass invoke callback reference proxy subject incremented abstract version wrapper instance wrapped proxied something similar subclassed necessary attribute access custom similar proxy addition concrete respective subclassed allow dictionary proxied object delattr callback invoked attempt unproxied callback proxy handy effect callback proxy invoke object example proxy attribute quick example object callback mixin module purpose abstract direct", "git_description_clean": "status stable tests run python", "git_keywords_clean": "", "pypi_description_keywords": "package thread attribute change proxy callback arbitary object subject allow attribute attribute proxy ordinary python useful allow additional similar callback standard indistinguishable object quick proxy setattr delattr callback function subject example counter equal subclass abstract wrapped object circular subclass invoke callback reference proxy subject incremented abstract version wrapper instance wrapped proxied something similar subclassed necessary attribute access custom similar proxy addition concrete respective subclassed allow dictionary proxied object delattr callback invoked attempt unproxied callback proxy handy effect callback proxy invoke object example proxy attribute quick example object callback mixin module purpose abstract direct", "pypi_keywords_clean": ""}, "iskandr/tinytimer": {"git_readme_keywords": "microbench library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library python", "pypi_keywords_clean": ""}, "/antlr-python-runtime": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package use", "pypi_keywords_clean": "unknown"}, "/dectate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "change signature way confusion directive morepath searched normal attribute environment development version explicit alternative subclass helpful initial public environment nothing bug upload universal version detection reproducible iterable subsequent double useless fooaction document introduce implement normal status information function system attribute development documentation add support underscored directive function allow composite travis removed object upload removed removed public release deprecation document package attribute factory python compatibility enough introduce add module standard library particular useful creation document configuration sphinx coverage detection dependency bug introduced context coverall continuous release unconverted myapp subclass argument cleanup policy directivereporterror directiveerror consistent config morepath alternative removed directive config creation include configuration attribute powerful configuration combination inconsistent python default config object development environment directive definition execution public python bug config continuous integration support python property available quality assurance different add sentinel document implement change behavior abstract introduce cleanup", "pypi_keywords_clean": "configuration"}, "bdarnell/auto2to3": {"git_readme_keywords": "equivalent process development ability overview keyword argument similar finishing behavior directory argument function subdirectory continue distribution interpreter interface original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Rikanishu/flask-static-bundle": {"git_readme_keywords": "handler application standard development extension installation current development production directory production rewrite rewrite default production example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/geobricksmodis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "get datetime geographic pypi january installation angola get product list modis previous angola product product january geographic area country example list get area istance get available upper combined way product year italy france modis modis command console method", "pypi_keywords_clean": ""}, "/guess-language-spirit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coraz\u00f3n python python natural language regorgent installation install import appropriate install install optional binary package python python version install package example", "pypi_keywords_clean": ""}, "renzon/gaepermission": {"git_readme_keywords": "gaepermission tekton", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "chris1610/barnum": {"git_readme_keywords": "wrong recent version position information barnum plausible arthur version python django single barnum application kishore gowda execute script trivial incorporate checksum formula password generator example identity script import barnum license arrangement barnum unique related flexibility random credit address source plausible example useful anyone notice couple street credit install barnum generate satchmo project script example generation anything stupid normal production application django bunch different method import gender generator pradeep pickle bunch contribute create barnum pulled sample random information barnum generate dummy barnum create pythonic realistic barnum barnum endless sample password dakota fictional generator graham version barnum reasonable release example example python python acronym online access ummm hassle street number pradeep kishore google number street interpreter fictional company behavior directory execute random create simulate script create couple python change recent python cookbook python python install obscurity something directory automate process census ability python script barnum notice valid checksum little script process little anything illegal", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wrong recent version position information barnum plausible arthur version python django single barnum application kishore gowda execute script trivial incorporate checksum formula password generator example identity script import barnum license arrangement barnum unique related flexibility random credit address source plausible example useful anyone notice couple street credit install barnum generate satchmo project script example generation anything stupid normal production application django bunch different method import gender generator pradeep pickle bunch contribute create barnum pulled sample random information barnum generate dummy barnum create pythonic realistic barnum barnum endless sample password dakota fictional generator graham version barnum reasonable release example example python python acronym online access ummm hassle street number pradeep kishore google number street interpreter fictional company behavior directory execute random create simulate script create couple python change recent python cookbook python python install obscurity something directory automate process census ability python script barnum notice valid checksum little script process little anything illegal", "pypi_keywords_clean": "data"}, "MarkCWirt/midiutil": {"git_readme_keywords": "instrument digital midiutil structured nousse adphi release version platform python implementation lawlessness software syntax adumbration variable directory version software devolve lawlessness detailed documentation distribution reference documentation package directory documentation development specification actual updated version license musical instrument python previous namespace midifile knowledge python python foundation useful common version python version midiutil extend library available install midiutil digital interface library anyone introduction midiutil fleshed installation normal restructuring software knowledge python support documentation directory cleanup idiosyncratic actual specification python documentation generation system assign document several additional various development version society devolve python several bundling installed implementation meteorsw documentation release mention object sufficient python library environment variable midiutil directory simple example francis cclauss prevent https midifile object directory detailed convenient version introduction attribution minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "instrument digital midiutil structured nousse adphi release version platform python implementation lawlessness software syntax adumbration variable directory version software devolve lawlessness detailed documentation distribution reference documentation package directory documentation development specification actual updated version license musical instrument python previous namespace midifile knowledge python python foundation useful common version python version midiutil extend library available install midiutil digital interface library anyone introduction midiutil fleshed installation normal restructuring software knowledge python support documentation directory cleanup idiosyncratic actual specification python documentation generation system assign document several additional various development version society devolve python several bundling installed implementation meteorsw documentation release mention object sufficient python library environment variable midiutil directory simple example francis cclauss prevent https midifile object directory detailed convenient version introduction attribution minimum", "pypi_keywords_clean": "music midi"}, "taschini/pyinterval": {"git_readme_keywords": "appveyor container interval arithmetic mathematical documentation implementation library consist unbound pyinterval interval version library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor implementation library consist unbound helpful message library container interval arithmetic instance support mathematical documentation absolute history readability implement separate project collection coverage appveyor continuous continuous integration pyinterval interval portable specific message installation google", "pypi_keywords_clean": "interval crlibm"}, "adamhadani/python-yelp": {"git_readme_keywords": "external dependency recommended external mission complete feedback adamhadani repository example httpapiclient logger license python install documentation available install install implementation python python software application python install documentation various command python python repository francisco reviewsearchapi verbose documentation install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "yelp api"}, "rdegges/django-heroku-postgresify": {"git_readme_keywords": "automatic django heroku install installed configuration install install django postgresql database configuration heroku postgresql environment modify django django database problem configuration heroku example installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "automatic django heroku install installed configuration install install django postgresql database configuration heroku postgresql environment modify django django database problem configuration heroku example installed", "pypi_keywords_clean": "django heroku cloud postgresql postgres db database awesome epic"}, "singularityhub/sregistry": {"git_readme_keywords": "starter application management storage reference uwsgi application singularity registry institution information singularity license django application database deploy several documentation singularity registry singularity storage singularity specialized perform", "git_description_clean": "server storage management singularity images", "git_keywords_clean": "singularityhub singularity containers management registry", "pypi_description_keywords": "global client download singularity global version current thrive happiness modern client python version installation github version build repository software anyone rebuilt rebuilt license container singularity branch singularity container documentation python release github different storage singularity registry client interface current release interface interact interact singularity registry client", "pypi_keywords_clean": "singularity containers registry hub"}, "phalt/pykemon": {"git_readme_keywords": "information check maintainer documentation information simple check documentation installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation framework history beckett description attribute attribute pokemon pykemon documentation installation", "pypi_keywords_clean": "pykemon"}, "graphcommons/graphcommons": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/tethne": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "rhyselsmore/flask-reggie": {"git_readme_keywords": "contribute argument application maintainer familiar codebase configuration discussion making pattern supply regular request regular expression contributor friendly installation feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package argument application compliance travisci comprehensive configuration conception history regular expression multiple installation", "pypi_keywords_clean": ""}, "algolia/algoliasearch": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "algolia search documentation algolia community issue capable python algolia overflow question algolia reference algolia realtime algolia website", "pypi_keywords_clean": "algolia py search backend hosted cloud search faceted search"}, "smurfix/flask-script": {"git_readme_keywords": "application framework license willing useful deprecated version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask external", "pypi_keywords_clean": ""}, "/django-activitysync": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unique activity information available management activitysync pythonpath template project utility activity aggregator provider database python default public migrate activitysync database version installation output django management dependent performance production duplicate python migrate crontab scheduler display activity command fetch application twitter public hidden django activity organizational dictionary common interface twitter support support additional aggregator django python syncdb social activity object template pythonpath configuration quick example second template google management command twitter", "pypi_keywords_clean": "django social activity application twitter reddit google reader"}, "jgosmann/pylint-venv": {"git_readme_keywords": "pylint installation installation different different virtual virtual environment pylint respect virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pylint installation installation different different virtual virtual environment pylint respect virtualenv", "pypi_keywords_clean": ""}, "ecometrica/django-vinaigrette": {"git_readme_keywords": "gettext django vinaigrette translate django python gettext deactivating ingredient include deactivating translated present database default language translated version translated general appropriate language language vinaigrette project install django python virtualenv project particular translated appropriate option translation standard internationalization vinaigrette po translate vinaigrette database example django standard translated appropriate vinaigrette", "git_description_clean": "translate django model data using gettext", "git_keywords_clean": "", "pypi_description_keywords": "gettext django vinaigrette translate register function vinaigrettteadminlanguagemiddleware middleware python bug django python gettext deactivating ingredient generated include function support development deactivating translated string translated present database default language middleware support translated version translated general change appropriate language language vinaigrette project install support django contexts parameter django python admin virtualenv project translated appropriate option support python translation particular string standard internationalization translate vinaigrette major version django support couple django standard database example contact temporary register parameter register appropriate middleware vinaigrette optional contexts", "pypi_keywords_clean": "django"}, "viraja1/grammar-check": {"git_readme_keywords": "python interpreter installation install languagetool example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python interpreter installation install languagetool example", "pypi_keywords_clean": ""}, "/django-calaccess-scraped-data": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "california secretary website documentation", "pypi_keywords_clean": ""}, "/django-taggit-autocomplete-modified": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "distribution license specific language documentation production copyright important applicable license version support codetrax installation configuration author development feature feature product distribution license copyright application b documentation software express tracker recommended support license license specific submit support feature b information installation available project release donation paypal recommended community support repository documentation recommended submit information version license production software effort codetrax significant software production compliance license", "pypi_keywords_clean": ""}, "jrfonseca/gprof2dot": {"git_readme_keywords": "collect profile inside suitable multiple check status question visualize profile disable particular function granularity keyword version likely decent performance python profile option typical script convert meaningful repository documentation visible right maintenance afraid program gazette article member profile determine heuristic propagate convert output aggregate excellent article instrumentation visualizer linux gazette appear columns figure familiar example pointer select summary number sysprof python cprofile percentage function amplifier sleepy python external impossible profiling viewer graphs platform python narrow recursive precision profile interest standalone script partial gcc standard library install graphviz symbol python graphviz lsprof java java hprof application valgrind callgrind release gcc optimization russell certain threshold library assert caller similar article default little special export computation select complete similar optimize interactive viewer negligible inclusion likely execution optimization possible output linux install python execution essential transfered rogozhin profile python column attention necessary select information python script graphviz available tradeoff disable little impact", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "coinbase/coinbase": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "authentication convenient information support authentication automatic parsing unofficial library official library", "pypi_keywords_clean": "api coinbase bitcoin client"}, "tjomasc/snekbol": {"git_readme_keywords": "available readthedocs download documentation documentation implementation extensivly independent implementation wrapper installation documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "sbol"}, "tommoral/loky": {"git_readme_keywords": "accelerate reusable executor instance account github default optional dependency implementation overhead advance behavior repository repository parallel contrary library project acknowledgement project standard lambda documentation reusable executor several executor version installation possible register executor strategy reusable process necessary contribute contribute configurable meaningful cloudpickle integration singleton executor consistent ability transparent cloudpickle github account request consecutive complete executor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "accelerate reusable executor instance account github default optional dependency implementation overhead advance behavior repository repository parallel contrary library project acknowledgement project standard lambda documentation reusable executor several executor version installation possible register executor strategy reusable process necessary contribute contribute configurable meaningful cloudpickle integration singleton executor consistent ability transparent cloudpickle github account request consecutive complete executor", "pypi_keywords_clean": ""}, "/django-fcm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible python django quickstart python python support python python compatible django firebase cloud framework python django quickstart install django django django support compatible documentation", "pypi_keywords_clean": ""}, "NiklasRosenstein/myo-python": {"git_readme_keywords": "package compatibility armband class listener renamed thalmic python import goodbye rewrite documentation example multiple library matlab https project listener listener license acceleration gyroscope directory github orientation acceleration alternative implementing discontinuation section python version check version device python handler important https thalmic rosenstein number quaternion class https example tutorial leftover quaternion update implementing custom custom device example example gyroscope something documentation documentation different message valueerror parameter devicelistener method device device https documentation object implement devicelistener connect device repository https device listener github repository little requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility armband class listener renamed thalmic python import goodbye rewrite documentation example multiple library matlab https project listener listener license acceleration gyroscope directory github orientation acceleration alternative implementing discontinuation section python version check version device python handler important https thalmic rosenstein number quaternion class https example tutorial leftover quaternion update implementing custom custom device example example gyroscope something documentation documentation different message valueerror parameter devicelistener method device device https documentation object implement devicelistener connect device repository https device listener github repository little requirement", "pypi_keywords_clean": ""}, "globocom/remotecv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "worker facial recognition", "pypi_keywords_clean": "imaging face detection feature opencv"}, "/django-otp-yubikey": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "repository documentation algorithm information framework repository yubikey django", "pypi_keywords_clean": ""}, "hackingmaterials/matminer": {"git_readme_keywords": "featurizer matminer advantage function documentation relevant documentation community library performing retrieval matminer library matminer useful research matminer matminer function automatminer development original", "git_description_clean": "data mining materials science", "git_keywords_clean": "", "pypi_description_keywords": "featurizer matminer advantage function documentation relevant documentation community library performing retrieval matminer library matminer useful research matminer matminer function development original", "pypi_keywords_clean": ""}, "clld/clldutils": {"git_readme_keywords": "standard overhead toolbox rdflib", "git_description_clean": "utilities clld apps without overhead requiring pyramid rdflib et al", "git_keywords_clean": "", "pypi_description_keywords": "standard overhead toolbox rdflib", "pypi_keywords_clean": ""}, "openshift/openshift": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python openshift", "pypi_keywords_clean": "swagger openapi kubernetes openshift"}, "omab/python-social-auth": {"git_readme_keywords": "support several deprecation authentication codebase third mechanism support document organization library development process", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support several deprecation authentication codebase third mechanism support document organization library development process", "pypi_keywords_clean": "django"}, "ResidentMario/missingno": {"git_readme_keywords": "datetime injury unreadable default library distribution interpretation command quadtree nullity complete geographic interested vehicle display example dendrogram heatmap dendrogram labelled meaningful correlation hierarchical particular support bilogur missingno missingno variable completion difficult explanatory horizontal configuration populated geographic specific example columns function package included geographic grouping example software erroneous example interpret completion minimum nullity geospatial repository instance datetime correlation heatmap dendrogram dendrogram visualization geographic distribution nullity maximum minimum nullity correlation nullity collision nullity distribution labeled columns toolset flexible algorithm courtesy absolute visible correlation contrary expectation evidence distribution quickstart quickstart specify periodicity summary completeness geographical nullity example contribution geographic information repository citation visualization experimental logarithmic particular variable geoplot visualization journal underlying complete interpretable quadtree keyword parameter distance combination visualization nullity confidence nullity specify geographic optional negative positive projection perspective cluster pairwise display configuration heatmap correlation attention heatmap thereof sparkline presence absence configuration geoplot significant", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "data data visualization data analysis missing data data science pandas python jupyter"}, "/scapy-real": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "github project outdated historical", "pypi_keywords_clean": ""}, "KristianOellegaard/django-hvad": {"git_readme_keywords": "complete kristian \u00f8llegaard specify language publication compatible default translation scratch efficient reliable behavior overriden bugfix queryset development project reliable technical instance natural support release pattern unobtrusive efficient default behavior additional available indexed compatible example python framework language release project kristian foreign arbitrary edition attribute trusting continue language guaranteed compatibility continue development abstract currect language \u00f8llegaard trusting translatable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "complete kristian \u00f8llegaard specify language publication compatible default translation scratch efficient reliable behavior overriden bugfix queryset development project reliable technical instance natural support release pattern unobtrusive efficient default behavior additional available indexed compatible example python framework language release project kristian foreign arbitrary edition attribute trusting continue language guaranteed compatibility continue development abstract currect language \u00f8llegaard trusting translatable", "pypi_keywords_clean": ""}, "takluyver/flit": {"git_readme_keywords": "importable module development install pypi install command upload summary module development documentation command python version importable python python python install directory something metadata example convert convenient import install development module python development version installed foobar docstring module package distribute module install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "importable module development install pypi install command upload summary module development documentation command python version importable python python python install directory something metadata example convert convenient import install development module python development version installed foobar docstring module package distribute module install package", "pypi_keywords_clean": ""}, "/networking-vsphere": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software neutron license", "pypi_keywords_clean": ""}, "MiCHiLU/jinja2-precompiler": {"git_readme_keywords": "argument modulename modulename symlink tracker enhancement takanao project compiling template available github copyright project available wildcard prepend directory installation utility example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "argument modulename modulename symlink tracker enhancement takanao project compiling template available github copyright project available wildcard prepend directory installation utility example", "pypi_keywords_clean": "python template"}, "neuroneuro15/wavefront-reader": {"git_readme_keywords": "sequential texcoord software reindex package documentation cookiecutter template cookiecutter wavefront", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sequential texcoord software reindex package cookiecutter project documentation cookiecutter history wavefront", "pypi_keywords_clean": ""}, "jamesturk/django-secretballot": {"git_readme_keywords": "addition project application generic acceptable parameter manager enough urlconf different exception particular optional argument available secretballot middleware manager optional example implementation abstract parameter function function special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition project application generic acceptable parameter manager enough urlconf different exception particular optional argument available secretballot middleware manager optional example implementation abstract parameter function function special", "pypi_keywords_clean": ""}, "/python-yaml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "coldfix/udiskie": {"git_readme_keywords": "disabled support version udiskie tracker screenshot command removeable encrypted automount removable udiskie udiskie userspace", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "button notification luks encrypted support command russian factor automount removable zenity format module gbulb experimental support release tracker disabled parameter script program related version pygobject option disable appindicator compatibility password prompt refactor revert removeable external password license package luks userspace deprecate browse signal careless version prompt mention ignore unicode unavailable support feature particular zsh message mention async module excessive prevent feature bug incompatible disable individual wrong password zenity password deprecation asyncs backend problem zsh narrow dependency optional password aesthetic filesystem password caching option ignore password dialog specify dependency enforcement namespace package luks support config cleanup recent support support verbose default global reference udisks version regression undocumented utility udiskie udiskie startup setupscript default problem setupscript changelog installer udisks libnotify available revert udiskie configure detach documentation pygobject slackware udiskie namespace available zsh autocompletion exception python manual luks garbage collection support luks suppress installed version udiskie unlock luks unhandled async async x session automatic refactor internal", "pypi_keywords_clean": ""}, "/flask-lesscss": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "lesscss application extension", "pypi_keywords_clean": ""}, "PromenadeSoftware/parlay": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software information download commercial license visibility accessibility installer comprehensive copyright painless scientific license command analysis painless integration information commercial installation software promenade software scientific experimentation repository powerful development documentation documentation channel freenode instrument verification experimentation investigation makefile", "pypi_keywords_clean": "embedded device broker medical iot hmi"}, "bgamari/squmfit": {"git_readme_keywords": "readthedocs documentation convenient global library distinguished treatment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple library flexible treatment distinguished", "pypi_keywords_clean": ""}, "pypa/jupyter-git": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project generated install version number website account directory follow", "pypi_keywords_clean": "sample setuptools development"}, "/openalea-container": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "history creation coverage report topomesh history build status pypi version openalea report status status target version target documentation status", "pypi_keywords_clean": ""}, "jcsaaddupuy/xbmc-json": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example contribute implementation example support documentation available branch instanciation interaction everything control accessible instanciated library interaction interaction", "pypi_keywords_clean": ""}, "ross/memcache-toolbar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software toolbar memcache memcache toolbar django mcfarland installation welcome configuration install configure pattern installation install import personal capable library", "pypi_keywords_clean": ""}, "/etsdevtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debugging processing development development debugging documentation developer envisage application functional variable production collection debugging superceded", "pypi_keywords_clean": ""}, "nhoffman/fastalite": {"git_readme_keywords": "fastalite perform iterator possible fastalite install fastalite fastalite installation w suffix example command available limited attribute whitespace record install fastalite sequence repository example fastalite complex quality installation install interface compressed support transparent", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/steelscript-wireshark": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript wireshark technology installation", "pypi_keywords_clean": ""}, "tsileo/blobstash-base": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package interact blobstash blobstash python", "pypi_keywords_clean": "blobstash client"}, "heroku/django-heroku": {"git_readme_keywords": "important whitenoise application keyword configuration functionality configuration specific automatic configuration deployment development development experience environment seamless deployment compatible responsibility configure whitenoise", "git_description_clean": "django library heroku apps", "git_keywords_clean": "heroku django python", "pypi_description_keywords": "important whitenoise application keyword configuration functionality configuration specific automatic configuration deployment development development experience environment seamless deployment compatible responsibility configure whitenoise", "pypi_keywords_clean": ""}, "/openbabel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package download license gpl access functionality distribution licence copyright project chemistry library molecular documentation information conversion framework convenient pythonic collaborative project geoffrey hutchison toolkit installation framework obconversion software foundation chemical toolbox release install detailed installation gpl program general analyze software redistribute interface copyright licence related toolkit detailed", "pypi_keywords_clean": ""}, "miracle2k/confcollect": {"git_readme_keywords": "pulling reading environment tooption change multiple support reading deployment flexiblity generate works support configuration derivative generate multiple change behaviour example django everything regular confcollect something necessary environment custom behaviour generate information different complex environment variable module configuration", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/arff": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "creation integer attribute patno integer python license gmail float future relation attribute useful blonde black string attribute blonde numeric integer reader python attribute patno example", "pypi_keywords_clean": ""}, "jd-boyd/python-lzo": {"git_readme_keywords": "current automated competitive compression suitable documentation accessible portable lossless decompression decompression copyright addition license documentation jdboyd download extract compatible installation example package current reference ordinary something enterprise general information algorithms chapter compiler compression library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "memory addition competitive compression portable lossless decompression decompression compression library", "pypi_keywords_clean": ""}, "visualfabriq/bquery": {"git_readme_keywords": "package perform paragraph important optimum performance limited groupby nascent technology performed default benchmark comparison benchmark compare bquery cytoolz parallel execution machine learning compare bquery columnar intermediate operation example groupby average standard performance comparison original performance vbench aggregation framework reporting machine access optimum similar standard deviation output available comparison cytoolz laptops bquery bquery benchmark paragraph sequential access performance production footprint limited reporting factorization technology reliable groupby aggregation possible groupby install numexpr numexpr functionality anything available limited sequential recurrent typical reporting bquery framework groupby columns access bquery welcome specific vs retrieval functionality visualfabriq numerical reporting environment arithmetic", "git_description_clean": "query aggregation framework bcolz", "git_keywords_clean": "", "pypi_description_keywords": "package perform paragraph important optimum performance limited groupby nascent technology performed default benchmark comparison benchmark compare bquery cytoolz parallel execution machine learning compare bquery columnar intermediate operation example groupby average standard performance comparison original performance vbench aggregation framework reporting machine access optimum similar standard deviation output available comparison cytoolz laptops bquery bquery benchmark paragraph sequential access performance production footprint limited reporting factorization technology reliable groupby aggregation possible groupby install numexpr numexpr functionality anything available limited sequential recurrent typical reporting bquery framework groupby columns access bquery welcome specific vs retrieval functionality visualfabriq numerical reporting environment arithmetic", "pypi_keywords_clean": ""}, "mitodl/edx-sga": {"git_readme_keywords": "dependency comment component interface filename uploaded course staff example specify precede homework exams studio click create branch production installation installation create problem weight convention question install instructor approval coverage devstack available download server devstack devstack configure grading navigate grading dialog package dependency storage engine thing docker container storage production uploaded expect necessary option response student assignment xblock label upper grades final student submission value value devstack machine restart server minor solution solution click click method staff member progress upper right local branch wish enable download advanced module course outline installed integration value advanced setting dash edx platform ansible provision create section dependency install staff problem attempted html xblock django application included problem grading staff instructor assignment studio statement coverage storage backend devstack installation refer edx number right corner studio local answer problem corner xblock advanced button django apps vagrant vm entered attribute example click filename approve choose staff exams assignment download student package xblock local storage appropriate navigate section container vagrant provision devstack edx studio storage additional yaml change advanced outline create directory dependency response fellow developer storage configuration django underscore refer advanced choose machine vagrant installation local installation devstack return course devstack command bring interface horizontal navigation work assignment xblock django configuration studio change show answer dialog box xml xml way different navigate student install local local development edx article specify configure storage grades assignment expect particular dogwood problem default storage button upload problem solution instructor course xblock devstack installed django select course studio zip maximum problem worth answer attribute student show comment instructor assignment support xblock return storage fullstack inline staff devstack install correct answer assignment staff upload multiple staff grading lightbox columns columns username worth show something likely unnecessary submission student box addition username full application installation button click click advanced student grading policy object vertical staff correct template upload block directory docker xblock package", "git_description_clean": "staff graded assignment xblock edx platform", "git_keywords_clean": "xblock edx", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "robofab-developers/fontpens": {"git_readme_keywords": "collection image protocol", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection image protocol", "pypi_keywords_clean": ""}, "/cypari": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package independent sagemath computer version", "pypi_keywords_clean": "pari sagemath snappy"}, "/sphinxcontrib-bitbucket": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bitbucket project history project example release equivalent equivalent variable extension sphinx configuration equivalent configuration", "pypi_keywords_clean": ""}, "jrbourbeau/pyunfold": {"git_readme_keywords": "package documentation pyunfold documentation documentation information license pyunfold pyunfold iterative unfolding unfolding documentation c installation pyunfold", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package documentation pyunfold documentation documentation information license pyunfold pyunfold iterative unfolding unfolding documentation c installation pyunfold", "pypi_keywords_clean": ""}, "pyoceans/seawater": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package warning python compatibility release information installation version argument latitude negligible consistent important velocity version library transition solubility convergence precision oceanographic previous inconsistency python version execution original version python surface johnson gjohnson prevent installation pressure vorticity version changelog version information changelog solubility seawater matlabtm seawater version version current version official release dimension pressure release announcement keyword version matlabtm version temperature seawater toolbox version default obsolete potential vorticity", "pypi_keywords_clean": "oceanography seawater"}, "/django-shoogie": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example logging \u05e9\u05d2\u05d9\u05d0\u05d4 filename funcname shoogie logging context http familiar technical configurable traceback transaction management lightweight alternative shoogie shoogie shoogie django python logging middleware follow exception db version compatibility eliminate client simple sequence regular compatibility compatible logging server related follow logging general pattern default answer stackoverflow logging handler aggregation similar debug response configuration shoogie django technical render django familiar django application database regular expression normal handler python middleware logging application logging version possible shoogie handler handler example function button outside transaction django standard configurable exception appropriate specific logging experience answer shoogie diminutive shoogie \u05e9\u05d5\u05d2\u05d9 compatible django logging client request information logging configuration handler configuration exception logging production resolved resolved shoogie method something information present logging module simple logging particular extraction exception shoogie inaccessible request django debug retrieval useful default logging system management configurable handler section system similar request method outside context middleware capture display traceback integration diminutive hebrew simple specific exception popular middleware exception server technical debug standard module following column sequence absolute http request different django project django version object interface technical response middleware shoogie shoogie middleware", "pypi_keywords_clean": ""}, "/logcolor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jbg/rabbitmq": {"git_readme_keywords": "motivation rabbitmq documentation rudimentary librabbitmq available production example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "motivation rabbitmq documentation rudimentary librabbitmq available production example", "pypi_keywords_clean": "rabbitmq amqp cffi"}, "biolink/ontobio": {"git_readme_keywords": "python documentation documentation sparql service ontology utility", "git_description_clean": "python library working ontologies ontology associations", "git_keywords_clean": "ontology obo sparql graph bioinformatics rdf", "pypi_description_keywords": "python documentation documentation sparql service ontology utility", "pypi_keywords_clean": "ontology graph obo owl sparql networkx network"}, "datastax/cassandra-driver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute compliance protocol cassandra tracker specific language community parallel execution compatibility datastax asynchronous copyright datastax cassandra library datastax applicable datastax enterprise discovery configurable eggleston integral complete installation version software configurable installation reporting express cqlengine execution request documentation documentation language haddad installation installation automatic", "pypi_keywords_clean": "cassandra"}, "/zenircbot-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python symlink license changelog history message pubsub command version library making package", "pypi_keywords_clean": ""}, "tsroten/pynlpir": {"git_readme_keywords": "segment software install pynlpir pynlpir download license chinese feedback github support wrapper unicode version documentation github pynlpir pynlpir", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "release problem indentation installation problem default unicode course chinese double result version information pynlpir python multiple documentation github pynlpir pynlpir segment argument install pynlpir license identification x support speech configuration information software python support problem package tutorial functionality common github support directory return whitespace pynlpir download opening pynlpir course access initial release python wrapper scheme condition feedback version change travis certain uppercase linux", "pypi_keywords_clean": "pynlpir nlpir ictclas chinese segmentation nlp"}, "pennappslabs/penncoursereview": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library penncoursereview", "pypi_keywords_clean": "penncoursereview penn upenn"}, "mattupstate/flask-negotiate": {"git_readme_keywords": "content negotiation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "content negotiation", "pypi_keywords_clean": ""}, "bitmazk/python-freckle-client": {"git_readme_keywords": "contribute instance implementation installation freckle import release method commit github contribute project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute instance implementation installation freckle import release method commit github contribute project", "pypi_keywords_clean": "letsfreckle freckle api client"}, "/negotiator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "calculate sequence python html negotiator solution client python introduction todo basic preferred content accept header json pdf complex accept support todo example specify prefer content specify html match server negotiation request request german compute possible specify default client request introduction negotiator acceptable server preferred reality q http accept negotiator module present negotiation header sequence negotiation python request example http header json json simple negotiate optimal solution content negotiation assume client server client server module specify proper content html json dictionary reality client option equation import example header accept negotiation json html pdf variety preference sequence negotiate http example http section generate cz fr german preference different accept negotiator compute language dictionary http generate preference q request negotiator client different python dictionary preferred format request english negotiator proper instance negotiator overall q negotiator assume acceptable client previous section", "pypi_keywords_clean": ""}, "/cropresize": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "presentation cropresize aspect distortion functionality convenience package function function command program convenience function appropriate methodology cropresize convenience useful function cropresize cropresize function documentation utility upstream", "pypi_keywords_clean": "image"}, "/sphinx-bootstrap-theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript framework discussed following statistical sphinx internal apache license string useful source directory override template development server directory configure support cloud welcome please bootstrap template cloud browser responsive design jquery bootstrap sphinx directory fabric available hierarchical available rough styling sphinx install package compatibility choose choose configurable level customization number different license navigation responsive background figure contain version browser installation example global framework various import choose bootstrap custom jquery sphinx additional content visualization library build process relative static introduction demos python fabric appropriate styling django reusable configuration sphinx template website sandstone bootswatch depart jquery construct please candidate bootstrap experience custom static specify content navbar build source customization override sphinx bootstrap version sphinx repository introduction restructuredtext bootstrap current different bootswatch unsure choose sphinx search override static function stylesheet jquery jquery public various layout template sphinx rough makefile directory something bootstrap navigation source cloud bootstrap construct installation installation design configurable information sphinx configurable extensible", "pypi_keywords_clean": ""}, "googlesamples/google-assistant-sdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "google assistant functional client specific language license assistant assistant answer apache license applicable license version product documentation development contributor license collection install maintainance release client install simple functional install sample reference sample install upgrade sample sample license copyright software foundation apache software additional information development maintainance express license specific nickname assistant service record flush repository information version license hotword sample welcome playback install throughput copyright ownership assistant library release python communication google adjust python package soundcard query install package service assistant compliance license", "pypi_keywords_clean": "google assistant api sdk sample"}, "shomah4a/sphinxcontrib-gist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python sphinx extension sphinx project sphinx directive", "pypi_keywords_clean": ""}, "pierky/ipdetailscache": {"git_readme_keywords": "example argument ripestat basic library jeff default local function prefix resource import library ipdetailscache python enhance useixps default internet exchange avoid persistent argument method install default expiration holder reverse information feature version peering create avoid flood library gather twitter pierky method meaning manipulation library google python unknown resource holder enrich directory address manipulation jeff ferland import github author repository local dictionary enable debug persistent storage information library installation example useixps python library install ipdetailscache object address default hamburg method chiodi", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example argument ripestat basic library jeff default local function prefix resource import library ipdetailscache python enhance useixps default pierky release release history internet exchange fixes wrong avoid persistent packaging argument method install default expiration peeringdb holder reverse readability information feature version peering create avoid flood library gather twitter pierky method meaning manipulation library google python unknown resource holder enrich directory download fixes address manipulation jeff ferland import github author ipdetailscacheixpinformationerror whenuse check repository local dictionary enable debug persistent storage information library installation example useixps python library install ipdetailscache object address default hamburg method chiodi", "pypi_keywords_clean": "ripe ripe ncc ripe stat library ip address"}, "/pyoai": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility service generic implementation restructuredtext oaipmh tolerant response added support oaipmh namespace declaration implementation oaipmh separate datestamp package structure metadata catalog version compatible prettyprint oaipmh oaipmh added framework resource metadataregistry micha\u0142 pasternak k\u00f6hler micha\u0142 functionality document namespace package resumption subversion mercurial platform changelog datestamp registry metadataregistry initial contact infrastructure foundation different compliant namespace protocol metadata metadata element oaipmh protocol structure oaipmh getitem", "pypi_keywords_clean": "xml archive"}, "tito/osxrelocator": {"git_readme_keywords": "full installable mechanism variable library relocator determine location utility therefore order dynamic library otool object location install substitution otool full description darwin binary loaded installation library loading linker determine runtime linker loaded dynamic relocate prefix runtime directory order relocate section dyld dependent dynamic appropriate instance object library install dynamic linker dylib loading section purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full installable mechanism variable library relocator determine location utility therefore order dynamic library otool object location install substitution otool full description darwin binary loaded installation library loading linker determine runtime linker loaded dynamic relocate prefix runtime directory order relocate section dyld dependent dynamic appropriate instance object library install dynamic linker dylib loading section purpose", "pypi_keywords_clean": "osx libraries relocation setuptools development"}, "/pymf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python cthurau cvxopt factorization module several documentation contact website documentation", "pypi_keywords_clean": ""}, "/salt-pepper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "remote instance configure pepper pepper command python support basic python python heavy python library script master external trouble installation syntax interface additional runner configuration configure pepper pepper environment installation", "pypi_keywords_clean": ""}, "appstore-zencore/ps2": {"git_readme_keywords": "install template program customize default", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install template program customize default", "pypi_keywords_clean": ""}, "sveetch/crispy-forms-foundation": {"git_readme_keywords": "application documentation download install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application documentation download install", "pypi_keywords_clean": "django"}, "edx/event-tracking": {"git_readme_keywords": "storage advantage schemaless contexts dynamic collection example library library multiple location documentation integration version security document metadata repository roadmap integration support welcome channel freenode analysis provide channel discuss", "git_description_clean": "system tracking events", "git_keywords_clean": "", "pypi_description_keywords": "storage advantage schemaless contexts dynamic collection example library library multiple location documentation integration version security document metadata repository roadmap integration support welcome channel freenode analysis provide channel discuss", "pypi_keywords_clean": ""}, "getmillipede/millipede": {"git_readme_keywords": "virtualenv virtualenv install production millipede default position millipede chaud millipede message http server myenv source sample rcfile position millipede beautifull millipede source install passer http millipede reverse rcfile sample install install millipede docker server millipede installation millipede millipede chaud devant authentication millipede virtualenv myenv comment millipede environment docker aaah specify authentication rcfile default customize millipede reverse millipede millepatte template default opposite convenient install developement passer chaud", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "millipede project world generate satisfy millipede generate millipede project satisfy", "pypi_keywords_clean": "millipede"}, "click-contrib/click-log": {"git_readme_keywords": "click license", "git_description_clean": "simple beautiful logging click applications", "git_keywords_clean": "", "pypi_description_keywords": "click license", "pypi_keywords_clean": ""}, "feifangit/dj-mongo-reader": {"git_readme_keywords": "download backend complete framework pagination javascript callback several customization database collection export mongodb install django application display customize number frontend document django mongodb bootstrap collection command permission transformation heroku functionality request", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download backend complete framework pagination javascript callback several customization database collection export mongodb install django application display customize number frontend document django mongodb bootstrap collection command permission transformation heroku functionality request", "pypi_keywords_clean": ""}, "/ludibrio": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download interpreter default mechanism behavior install ludibrio original instance specification documentation gustavo statement reference example illustrate retrieve nsigustavo pinheiro install ludibrio powerful ability namespace external ludibrio development trivial official install package ludibrio", "pypi_keywords_clean": "mock stub fake dummy doubles mocks"}, "clinicedc/edc-lab-dashboard": {"git_readme_keywords": "lab", "git_description_clean": "lab dashboard views projects", "git_keywords_clean": "", "pypi_description_keywords": "lab", "pypi_keywords_clean": "edc lab dashboard views"}, "matplotlib/cmocean": {"git_readme_keywords": "application description oceanographic analysis oceanography oceanography phillip wolfram antarctic install install paraview selection application install anaconda zimmerle documentation available submodule", "git_description_clean": "colormap setup standardizing oceanographic variables", "git_keywords_clean": "", "pypi_description_keywords": "application description oceanographic analysis oceanography oceanography phillip wolfram antarctic install install paraview selection application install anaconda zimmerle documentation available submodule", "pypi_keywords_clean": "colormaps oceanography plotting visualization"}, "dchaplinsky/translitua": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ukrainiansimple dictionnaire language ukrainiankmu convinience ukrainianbritish organization russiantelegram mannheim dudenverlag ukrainianwws organization standardization standardization ukrainianfrench difference russianicao committee geographical v mannheim standard ukrainianbgn international organization standard international geographic committee alternative bb bb fran\u00e7aise ukrainiangerman passport woodrow coverage installation russiansimple terminology transliteration romanization official romanization latinization", "pypi_keywords_clean": "ukrainian transliteration"}, "GeoNode/geonode-notification": {"git_readme_keywords": "project documentation functionality allow configurable submission notification django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "conditional signal example syncdb signal actual content command proxy default suitable anything custom context behavior global result proceed optional vs render notification reusable project import conditional previous directory template notification support practice website proxy default setting description example minimum example notification example version creation django optional notification internal shortname keyword context notification optional translation global setting dictionary application database signature different simple process iterable database internal display description management command", "pypi_keywords_clean": ""}, "quora/qcore": {"git_readme_keywords": "standalone abstract common assertion readable useful abstraction standard library python module functionality similar helper integer number common utility decorated additional library common python common functionality failure number standard module python object module similar standard function function object library package different useful exception example python decorator component python similar hashing equality", "git_description_clean": "common python utility functions", "git_keywords_clean": "", "pypi_description_keywords": "standalone abstract common assertion readable useful abstraction standard library python module functionality similar helper integer number common utility decorated additional library common python common functionality failure number standard module python object module similar standard function function object library package different useful exception example python decorator component python similar hashing equality", "pypi_keywords_clean": "quora core common utility"}, "7sDream/zhihu-py3": {"git_readme_keywords": "\u505a\u7684\u8de8\u5e73\u53f0\u77e5\u4e4e \u77e5\u4e4e\u975e\u5b98\u65b9api\u5e93 \u8fd8\u662f\u4e0d\u4f1a\u7528 \u8bc4\u8bba\u7c7b\u4e5f\u8981\u6162\u6162\u63d0\u4e0a\u8bae\u7a0b\u4e86\u5427 user \u589e\u52a0\u83b7\u53d6\u7b54\u6848\u70b9\u8d5e\u7528\u6237\u529f\u80fd \u589e\u52a0\u83b7\u53d6\u7528\u6237\u5173\u6ce8\u4e13\u680f\u6570\u548c\u5173\u6ce8\u4e13\u680f\u7684\u529f\u80fd \u589e\u52a0\u83b7\u53d6\u7528\u6237\u5173\u6ce8\u8bdd\u9898\u6570\u548c\u5173\u6ce8\u8bdd\u9898\u7684\u529f\u80fd \u4e3a\u4e86\u7cbe\u7b80 \u767b\u5f55\u65b9\u6cd5\u7efc\u8ff0 \u51c6\u5907\u5de5\u4f5c \u7b2c\u4e00\u6b21\u4f7f\u7528\u63a8\u8350\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210 \u767b\u5f55\u65b9\u6cd5\u7efc\u8ff0 \u4e3a\u4e86\u7cbe\u7b80 \u83b7\u53d6\u7528\u6237\u5934\u50cf\u5730\u5740 \u6253\u5305\u4e3a\u6807\u51c6python\u6a21\u5757 class python \u5982\u679c\u4f60\u5df2\u7ecf\u7528", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "\u505a\u7684\u8de8\u5e73\u53f0\u77e5\u4e4e \u77e5\u4e4e\u975e\u5b98\u65b9api\u5e93 \u8fd8\u662f\u4e0d\u4f1a\u7528 \u8bc4\u8bba\u7c7b\u4e5f\u8981\u6162\u6162\u63d0\u4e0a\u8bae\u7a0b\u4e86\u5427 user \u589e\u52a0\u83b7\u53d6\u7b54\u6848\u70b9\u8d5e\u7528\u6237\u529f\u80fd \u589e\u52a0\u83b7\u53d6\u7528\u6237\u5173\u6ce8\u4e13\u680f\u6570\u548c\u5173\u6ce8\u4e13\u680f\u7684\u529f\u80fd \u589e\u52a0\u83b7\u53d6\u7528\u6237\u5173\u6ce8\u8bdd\u9898\u6570\u548c\u5173\u6ce8\u8bdd\u9898\u7684\u529f\u80fd \u4e3a\u4e86\u7cbe\u7b80 \u767b\u5f55\u65b9\u6cd5\u7efc\u8ff0 \u51c6\u5907\u5de5\u4f5c \u7b2c\u4e00\u6b21\u4f7f\u7528\u63a8\u8350\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210 \u767b\u5f55\u65b9\u6cd5\u7efc\u8ff0 \u4e3a\u4e86\u7cbe\u7b80 \u83b7\u53d6\u7528\u6237\u5934\u50cf\u5730\u5740 \u6253\u5305\u4e3a\u6807\u51c6python\u6a21\u5757 class python \u5982\u679c\u4f60\u5df2\u7ecf\u7528", "pypi_keywords_clean": "zhihu network spider html"}, "zopefoundation/zodbpickle": {"git_readme_keywords": "package compatibility default implementation extension helpful comparison example everything unpickled package consider support erroneous version example subclass arbitrary deterministic coverage status support zodb general unnecessarily necessary support interface zodb zodb package uniform untrusted unauthenticated retrieve persistent zodb caution", "git_description_clean": "fork python pickle module work zodb", "git_keywords_clean": "", "pypi_description_keywords": "pickle binary compatibility effect method retrieve support common common pickle import accelerator module interface support incomplete support version python version nameerror version subclass source arbitrary c extension pickle protocol general accelerator extension necessary support bug uniform secure erroneous c python version module zodb caution untested added python pickle default python example added helpful comparison supported unpickled package argument protocol python readme example deterministic choice unicode oooh interface zodb disable version added pickle module module module added support update added custom added option interface python initial release python python unauthenticated source zodb package method changelog choice implementation module module support build package spurious extension module dispatcher packaging python import example everything python module choice c consider python implementation memory implementation python version dispatcher python version extension python python option incomplete option python support jython implementation initial compatibility python coverage status support zodb support python unnecessarily x release python untrusted unauthenticated c version retrieve persistent behaviour python unpickler", "pypi_keywords_clean": "zodb pickle"}, "olucurious/pyfcm": {"git_readme_keywords": "upgrade invalid registration response message transfer useful argument registration checkout database available reliable scalable tornado support reengagement retention appengine transfer payload priority message functionality android environment infrastructure information firebase", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "upgrade invalid registration response message transfer useful argument registration checkout database available reliable scalable tornado support reengagement retention appengine transfer payload priority message functionality android environment infrastructure information firebase", "pypi_keywords_clean": "firebase fcm apns ios gcm android push notifications"}, "mccutchen/vokram": {"git_readme_keywords": "control maximum inspiration plausible inefficiently installation command generate building markov approachable implementation explanation library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "control maximum inspiration plausible inefficiently installation command generate building markov approachable implementation explanation library", "pypi_keywords_clean": ""}, "/pystaggrelite3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hist", "pypi_keywords_clean": ""}, "kvesteri/wtforms-json": {"git_readme_keywords": "restful apis support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "restful apis support", "pypi_keywords_clean": ""}, "RedFantom/ttkthemes": {"git_readme_keywords": "project information consider redfantom different available various documentation readthedocs example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project information consider redfantom different library available available documentation readthedocs various homepage library example", "pypi_keywords_clean": "tkinter ttk gui tcl theme"}, "wtayyeb/django-zurb-foundation-rtl": {"git_readme_keywords": "foundation package version package counter package version django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "foundation package default enable version package scratch foundation js visit write zurb foundation specific package version example template library something equal version template extend package equal version zurb", "pypi_keywords_clean": ""}, "testing-cabal/linecache2": {"git_readme_keywords": "backport linecache linecache profit", "git_description_clean": "backport python stdlib linecache module", "git_keywords_clean": "", "pypi_description_keywords": "backport linecache linecache profit", "pypi_keywords_clean": ""}, "/designate-tempest-plugin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "designate directory information install designate tempest plugin environment tempest tempest integration plugin designate environment designate project plugin install repository example integration designate", "pypi_keywords_clean": ""}, "/xylose": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/python-termstyle": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard coloured terminal transparent character termstyle termstyle library transparency", "pypi_keywords_clean": "output colour console ansi"}, "/bob-extension": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation complete mechanism building support extension building support package software package install package toolbox development", "pypi_keywords_clean": ""}, "/pyqt4": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python toolkit comprehensive platform", "pypi_keywords_clean": ""}, "btimby/fulltext": {"git_readme_keywords": "write temporary format format python stdlib interface fulltext open source class necessary example accept additonal stdlib tesseract install command package manager specify backend try right tesseract cli word format bash optional default utilized legacy modul module advantageous define search write new python pass tool installing method implement fulltext module cli linux python implement format image formats extension help fulltext key word python specify fulltext lib utilizes third legacy word right thing tool cli stdlib python object path figure third party tool module bash usage number keyword argument target pytesserac module usage fulltext fulltext try second register path fulltext backend pass determine module tesseract form supress document analysis correct backend define fulltext module module fulltext select public function fulltext open introduction fulltext appveyor figure smartfile open possible define possible utilizes image formats default text text fulltext module modul various document cli pytesserac party python certain default parameter project introduction backend fulltext single public document formats tool tesseract python module interface single cli tool available memory office first select correct word argument extension linux pass object handler backend keyword directory register new module python pass function cli simple interface new backend source project native python tool python python custom antiword", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python implement format format project introduction interface fulltext single public antiword legacy supress document analysis define fulltext python module public function variable contain interface single necessary example various python install default backend command introduction fulltext figure package manager memory define environment python number optional default status format possible define possible utilizes directory second define temporary smartfile module xlsx module installing simple interface backend custom advantageous define source project search various document environment variable object travis implement fulltext default parameter", "pypi_keywords_clean": ""}, "dpgaspar/flask-appbuilder": {"git_readme_keywords": "multiple database sqlalchemy multiple database detailed public authentication automatic configurable development framework private support upload interactive platform extensive configuration environ selectable columns restful detailed security exploration platform registration validation database sqlalchemy command mssql related dropdown application development extension protect timestamps security mongoengine multiple rendering selectable installation schedule monitor support mongodb variety datepicker datetimepicker django everything example exposed generation automatic dynamic rendering generation security automatic datetimepicker related system organization internationalization integration authentication support support vertical various bootstrap google upload database application public development documentation builder possible application colorama eurobic definition generation multiple mysql vertical partitioning intuitive interactive partial support integration extension database support association configuration functionality everyone contribute project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple database sqlalchemy multiple database detailed public authentication automatic configurable development framework private support upload interactive platform extensive configuration environ selectable columns restful detailed security exploration platform registration validation database sqlalchemy command mssql related dropdown application development extension protect timestamps security mongoengine multiple rendering selectable installation schedule monitor support mongodb variety datepicker datetimepicker django everything example exposed generation automatic dynamic rendering generation security automatic datetimepicker related system organization internationalization integration authentication support support vertical various bootstrap google upload database application public development documentation builder possible application colorama eurobic definition generation multiple mysql vertical partitioning intuitive interactive partial support integration extension database support association configuration functionality everyone contribute project", "pypi_keywords_clean": ""}, "phpdude/urlsresolver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "unbit/django-uwsgi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "uwsgi django mail cache template"}, "/pyobjc-framework-photos": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework documentation documentation general translation documention information", "pypi_keywords_clean": "pyobjc photos"}, "/project": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "zijn gezondheid", "pypi_keywords_clean": ""}, "renzon/pswdclient": {"git_readme_keywords": "integration library pswdclient", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyvttbl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyvttbl python v v table contingency change repo author roger author email", "pypi_keywords_clean": ""}, "ikraftsoft/django-userswitch-fork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different specify option middleware default override absolute installation install middleware change option version django installation django userswitch", "pypi_keywords_clean": ""}, "/pandas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dataframe scientific labeled suitable mutability columns dimensional alignment available language powerful flexible columns analysis unordered generation frequency structure fundamental building display everything multidimensional functionality arbitrary scientific research possible multiple majority typical automatic explicit practical heterogeneous intuitive environment observational statistical intelligent hierarchical different flexible expressive engineering analysis manipulation frequency conversion spreadsheet", "pypi_keywords_clean": ""}, "MicroPyramid/forex-python": {"git_readme_keywords": "currency source complete visit source bitcoin pypi historical initialize class python detect install class python python development amount usd currency conversion usd python python health currency symbol minute information report european central python convert convert amount welcome feedback usd package python feedback support visit python information visit foreign exchange daily avoid ratesnotavailableerror bitcoin current historical historical foreign installation install decimal python visit coindesk amount python package", "git_description_clean": "foreign exchange rates bitcoin price index currency conversion using", "git_keywords_clean": "python package bitcoin currency", "pypi_description_keywords": "foreign exchange day amount convert amount currency conversion github historical", "pypi_keywords_clean": ""}, "jammycakes/factoryfactory": {"git_readme_keywords": "roadmap container configuration registration expression separate container factoryfactory validation documentation resolution dynamic factoryfactory interface functional replacement untested automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "ioc"}, "/cothread": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cothread version support documentation install essential particular coverage channel library building documentation available cooperative threading", "pypi_keywords_clean": ""}, "DXsmiley/edgy-json": {"git_readme_keywords": "schema example function standard documentation equality forefront bleeding standard python schema documentation library recursion schema illegal example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "edgy", "pypi_keywords_clean": ""}, "optiflows/django-modalview": {"git_readme_keywords": "plugin installation example first first example permit handle plugin handle first modaltemplateview class define several modalcreateview class submit button modaltemplateview add example modalformview simple modalview class inherit header modaldeleteview permit display show add header modalupdateview class class object example add several understand class method modaldeleteview class example begin javascript jquery permit define script html logic class inherit modaltemplateview handle client form invalid method usefull modalbutton class class button html header django click submit add context button modelform update add header modalcreateview attribute modalresponse object modalformview form add modaltemplateview class pypi response instance object show build define deletion object handle django add script handle modelform element add jquery modalview simple invalid error several class jquery plugin logic first context class permit inherit explain build simple example example default form add logic check argument build bootstrap permit build modalformview class usefull check update object modalupdateview class news django form handle deletion modaltemplateutilview class context default jquery define django modelform button class component", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyspotify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "official library spotify library spotify python deployment libspotify possible development project spotify service contributor interest version coverage python interface number status libspotify libspotify library continue android metadata spotify playback service pyspotify commercial python wrapper libspotify deprecation numerous pyspotify pyspotify interest knowledge pyspotify access", "pypi_keywords_clean": ""}, "/isi-sdk-7-2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package underneath generic restful library applicable downloaded prebuilt installation documentation configuration cluster namespace installation filesystem namespace github codegen example program subdirectory repository programmatic namespace interface information language platform accurate documentation cluster configuration program example", "pypi_keywords_clean": "swagger isilon sdk"}, "MrJoes/tornadio2": {"git_readme_keywords": "compatible version acknowledgment service application application capture different transport protocol available library unicode support support asynchronous possible disclaimer original tornado tutorial tornado application tornadio communication support myrouter myconnection performance example optional transport protocol production constructor example interface selectable handler python software implementation realtime realtime transport myconnection protocol related familiar tornado alternative directory information information support application customized version socketserver tornado knowledge application performance framework compatible nothing support support browser connection myrouter example interface example directory effective transport troubleshoot application transport library realtime javascript ioloop information", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible version acknowledgment service application application capture different transport protocol available unicode support support asynchronous possible original tornado tutorial tornado application tornadio communication myrouter myconnection performance example optional transport protocol interface selectable constructor example handler software implementation realtime realtime transport myconnection protocol related familiar tornado directory information information support application customized version socketserver tornado knowledge application performance framework compatible support support browser connection myrouter example interface example directory effective transport troubleshoot application transport library realtime javascript ioloop information", "pypi_keywords_clean": ""}, "renalreg/cornflake": {"git_readme_keywords": "python serializer patient python serialization library cornflake cornflake cornflake serialization registry response python validate license copyright", "git_description_clean": "simple library converting python objects", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-mediagenerator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "experience unnecessary changelog project javascript information important complete changelog incompatibility offline", "pypi_keywords_clean": ""}, "/morbid": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-shell-plus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "something changelog import management command", "pypi_keywords_clean": ""}, "bninja/wac": {"git_readme_keywords": "define function define version default python configuration python python define convert restful assist actual objectify response marshal example resource python server commit particular something import information installation friendly access request feature branch server python define configuration", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default python configuration python python compatibility convert restful assist serialization actual objectify response history require configuration marshal version example resource python changelog history server commit particular something import information installation function friendly config request changelog access request feature branch server python pagination", "pypi_keywords_clean": ""}, "mozilla/pytest-mozwebqa": {"git_readme_keywords": "documentation development", "git_description_clean": "mozilla web qa plugin pytest", "git_keywords_clean": "", "pypi_description_keywords": "documentation development", "pypi_keywords_clean": "pytest selenium saucelabs browserstack mozwebqa webqa qa mozilla"}, "samueldmq/infosystem": {"git_readme_keywords": "documentation infosystem infosystem framework", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "adafruit/adafruit-pureio": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "PyO3/setuptools-rust": {"git_readme_keywords": "full directory upload strip symbols setup complete argument dictionary extension abort build standard native build install bool optional param wheel default class rustextension filename pathname docker container sematic version failure extension need build command standard check inplace build debug symbols echo cargo build otherwise args param information command cargo output compiler version need similar manylinux docker build extension strip strip release build executable param cargo param binding executable example default script generate script executable python binding otherwise release pathname python package param complete example debug release build param console script command build bunch build debug build process symbols default default strip symbols param extension rustextension example project bool debug output default configuration bool native cargo rustc release default single wheel rustextension class binding build rustc cargo distribute python args build upload build binary abort build specify multiple python package cargo check build strip debug build version example param bool strip debug generate console possible specify check command bool script check build failure extension executable python build executable standard build check standard symbols strip rustextension define nothing debug compile distribute building source extra", "git_description_clean": "setuptools plugin rust support", "git_keywords_clean": "python rust setuptools", "pypi_description_keywords": "full directory upload strip symbols setup complete argument dictionary extension abort build standard native build install bool optional param wheel default class rustextension filename pathname docker container sematic version failure extension need build command standard check inplace build debug symbols echo cargo build otherwise args param information command cargo output compiler version check successor need similar manylinux docker build extension strip strip release build executable param cargo param binding executable successor project example default script generate script executable python binding otherwise release pathname python package param complete example debug release build param console script command build bunch build debug build process symbols default default strip symbols param extension rustextension example project bool debug output default configuration bool native cargo rustc release default rustextension class binding build rustc cargo distribute python args build upload build binary abort build specify multiple python package cargo check build strip debug build version example param bool strip debug generate console possible specify check command bool script build failure extension executable python build executable standard build check standard symbols strip rustextension define nothing debug compile distribute building source extra", "pypi_keywords_clean": "distutils setuptools rust"}, "gijzelaerr/pymonetdb": {"git_readme_keywords": "monetdb python pymonetdb documentation replacement change project installation convert copyright documentation monetdb document compatible subject python official monetdb depend monetdb install pymonetdb public license information python python august monetdb driver restructuredtext documentation license introduction pymonetdb", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "monetdb python pymonetdb documentation replacement change project installation convert copyright documentation monetdb document compatible subject python official monetdb depend monetdb install pymonetdb public license information python python august monetdb driver restructuredtext documentation license introduction pymonetdb", "pypi_keywords_clean": ""}, "maxvitek/cleverbot2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "welcome cleverbot", "pypi_keywords_clean": ""}, "erikrose/parsimonious": {"git_readme_keywords": "preview release recursion syntax future version convenient python reference building grammar switch benchmark alternation operator readable version history multiple trading alternation extensible badgrammar visitationerror change operator convenience method support canonical syntax familiar interpretation support custom understandable idiomatic version length memory optional expression subclass tighter process custom presentation simpler tolerate whitespace helpful current position formal parameter undergird mediawiki necessary subset version annotate grammar common codebase versus construct status everything optimal efficiency visitor method expose badgrammar expression greedy visitor advertising python history switch factor repetitive python forward default compare instance different horrific behavior underdeveloped parsing everything parsing machine recompilation michael confidence grammar immutable constant grammar vm practice several different consume negative representation shorter simpler operator prefix machinery vladimir example useable preview framework performance individual exception hierarchy anonymous michael lookahead assertion parsimonious parsimonious frugal attribute deterministic recognition everything informative unicode library making reference resolution describe superset python exception tokengrammar allow unicode representation representation production consistency standard somebody possible future dependency python simple custom grammar construction decorator deprecate explicit decision backtrack parsing decision distinct parsimonious worthy codebase python experimental parsing python lambdas conform original presentation grammar grammar iteration parsing future balance worthy execute automatic recompilation grammar compilation syntax change python status version parsing original grammar extensibility instance visitor grammar distinction previous making operator conform superfluous visitor symbol change decision sphinx standard python declare visitor callthrough method python translation identity priority explicit python support wrapped judicious subset grammar compiler practical dialect position consume lookahead superset k extend grammar k language representative grammar definition urlichs support splitting familiar anyone manipulation parsing support generous optional argument resolution machinery custom parsing someone building certain syntax version little expression simple advantage iterability anything processing operator operator coverage separation grammar example abstract syntax amazing grammar hierarchy rework complete character attempt downside immutable mapping applicable simple grammar consider parsing expression ambiguity stuff reference production python edward grammar invalid exception message repeated rewrite grammar output gb markup advantage grammar profile medeiros recursion usable python parsing exception backtrack everything definition syntax notation parsimonious reporting prefix operator negative lookahead factor building whatever construct custom something syntax reference successful recognition atomic making public support python support harder something useful initial convenience mysterious minimalistic understandable idiomatic python bunch useless ability behavior tolerate forward reference rough useable pymeta anybody", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "preview release recursion syntax future version convenient python reference building grammar switch benchmark alternation operator readable version history multiple trading alternation extensible badgrammar visitationerror change operator convenience method support canonical syntax familiar interpretation support custom understandable idiomatic version length memory optional expression subclass tighter process custom presentation simpler tolerate whitespace helpful current position formal parameter undergird mediawiki necessary subset version annotate grammar common codebase versus construct status everything optimal efficiency visitor method expose badgrammar expression greedy visitor advertising python history switch factor repetitive python forward default compare instance different horrific behavior underdeveloped parsing everything parsing machine recompilation michael confidence grammar immutable constant grammar vm practice several different consume negative representation shorter simpler operator prefix machinery vladimir example useable preview framework performance individual exception hierarchy anonymous michael lookahead assertion parsimonious parsimonious frugal attribute deterministic recognition everything informative unicode useful status library making describe superset reference resolution python exception tokengrammar allow unicode representation representation production consistency standard somebody possible future dependency python grammar construction decorator deprecate explicit decision backtrack parsing decision distinct parsimonious worthy codebase python experimental parsing python lambdas conform original presentation grammar grammar iteration parsing future balance worthy execute automatic recompilation grammar compilation syntax change version parsing original grammar extensibility instance visitor grammar distinction previous making operator conform superfluous visitor symbol change decision sphinx standard python declare visitor callthrough method python translation identity priority explicit python support wrapped judicious subset grammar compiler practical dialect position consume lookahead superset k extend grammar k language representative grammar definition urlichs support splitting manipulation parsing support generous optional argument resolution machinery custom parsing someone building certain syntax version little advantage iterability anything processing operator operator coverage separation grammar example abstract syntax amazing grammar hierarchy rework complete character attempt downside immutable mapping applicable parsing expression ambiguity stuff reference production python edward grammar invalid exception message repeated rewrite grammar output gb markup advantage grammar profile medeiros recursion usable python parsing exception backtrack everything definition syntax notation parsimonious reporting prefix operator negative lookahead factor building whatever construct custom something syntax reference successful recognition atomic making public support python support harder something useful initial convenience mysterious minimalistic understandable idiomatic python bunch useless ability behavior tolerate forward reference pymeta anybody", "pypi_keywords_clean": "parse parser parsing peg packrat grammar language"}, "timedata-org/loady": {"git_readme_keywords": "python basic usage", "git_description_clean": "dynamically load python libraries git repositories", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "git"}, "Arachnid/qrencode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "qrencode library", "pypi_keywords_clean": ""}, "lukearno/static": {"git_readme_keywords": "application content content context python template moustache hacking install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application content content context python template moustache hacking install", "pypi_keywords_clean": ""}, "caktus/django-sticky-uploads": {"git_readme_keywords": "default android firefox support necessary android documentation development behavior primary install background available interested documentation additional firefox internet alternative enhanced support project android additional documentation blackberry enhanced experience internet explorer firefox android", "git_description_clean": "enhanced file input widget django uploads file background retains value form errors", "git_keywords_clean": "", "pypi_description_keywords": "default android firefox support necessary android documentation development behavior primary install background available interested documentation additional firefox internet alternative enhanced support project android additional documentation blackberry enhanced experience internet explorer firefox android", "pypi_keywords_clean": ""}, "/mongogeneric": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lord63/pyspin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python contribute terminal spinner license decorator pyspin welcome install request interesting spinner example", "pypi_keywords_clean": "terminal spin spinner"}, "DatapuntAmsterdam/datapunt-authorization-levels": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "OriHoch/python-hebrew-numbers": {"git_readme_keywords": "python library gematria contribution installation library conversion", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python library gematria contribution installation library conversion", "pypi_keywords_clean": ""}, "/ffc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license program bitbucket bamboo perform useful command fitness particular discrete operator merchantability fitness warranty merchantability coverage efficient software foundation general public description public license software redistribute information documentation documentation atlassian bamboo warranty assemble compiler element variational particular purpose particular bilinear", "pypi_keywords_clean": ""}, "brentp/aclust": {"git_readme_keywords": "sentiment imagine distance distance correlation implementation attempt determine presence sentence multiple algorithm function position function signature infrastructure imagine version example important genomic assumed agglomerative clustering clustering algorithms clustering methylation correlation agglomerative levenshtein distance parameter install available interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sentiment imagine distance distance correlation implementation attempt determine presence sentence multiple algorithm function position function signature infrastructure imagine version example important genomic assumed agglomerative clustering clustering algorithms clustering methylation correlation agglomerative levenshtein distance parameter install available interface", "pypi_keywords_clean": "bioinformatics cluster"}, "jrderuiter/pybiomart": {"git_readme_keywords": "documentation documentation dataset interface access r documentation server interface pythonic pybiomart query documentation available functionality similar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation dataset interface access r documentation server interface pythonic pybiomart query documentation available functionality similar", "pypi_keywords_clean": ""}, "stephenmcd/django-shotgun": {"git_readme_keywords": "standard django effective field response status method install loaded response project extra option configuration django application command project module exclude approach django installation process shotgun entire django status ability validate directory contrast approach installed project shotgun snapshot database conjunction define fixture behaviour dumps database fixture current project request source management command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django effective field response status method install loaded response project extra option configuration django application command project module exclude approach django installation process shotgun entire django status ability validate directory contrast approach installed project shotgun snapshot database conjunction define fixture behaviour dumps database fixture current project request source management command", "pypi_keywords_clean": ""}, "rik0/paramunittest": {"git_readme_keywords": "parametrized work standard unittest work standard multiple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parametrized work standard unittest work standard multiple", "pypi_keywords_clean": "unittest"}, "whtsky/werobot": {"git_readme_keywords": "world hello thank collective werobot \u5b89\u88c5 collective werobot world \u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 project \u5b89\u88c5 \u63a8\u8350\u4f7f\u7528 \u8fdb\u884c\u5b89\u88c5 hello sponsor \u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 hello website werobot hello world", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "world hello thank collective werobot \u5b89\u88c5 collective werobot world \u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 project \u5b89\u88c5 \u63a8\u8350\u4f7f\u7528 \u8fdb\u884c\u5b89\u88c5 hello sponsor \u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 hello website werobot hello world", "pypi_keywords_clean": "wechat weixin werobot"}, "/brian2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different flexible motivation simulator documentation available generation framework extensible", "pypi_keywords_clean": "computational neuroscience simulation"}, "Zimbra-Community/python-zimbra": {"git_readme_keywords": "failure please enable sanity pypy python download cpython cpython message folder specific overview authenticate implementation backend current wrong preauth password authenticate zimbra server result console zimbra account travis continuous authenticate multiple possible pypy framework specific information configure request id access zimbra supply library public communication format xml problematic please generator compatible future certain dictionary inside authenticate gather response catalogue installation compatible python please wrong password specific request cpython pypy heavy authentication please check preauth generator dictionary format elaborate message response response dynamic complex testsuite information folder authentication administration password environment continuous integration information zimbra retrieve response coverage zimbra id retrieve communication object response result administration console dictionary account delete batch installation zimbra preauth parameter documentation zimbra tutorial tutorial tutorial explain installation install id specific request content folder response successful message elaborate id authentication account authenticate official python cpython library caution", "git_description_clean": "core framework easily sending requests zimbra", "git_keywords_clean": "", "pypi_description_keywords": "visit generator information backend", "pypi_keywords_clean": ""}, "perseas/pgdbconn": {"git_readme_keywords": "pgdbconn offshoot application minimal information license pgdbconn software generalize rollback pgdbconn pgdbconn connection execute dbconnection example pyrseas", "git_description_clean": "layer connect interact postgres databases", "git_keywords_clean": "python postgres", "pypi_description_keywords": "pgdbconn offshoot application minimal information license pgdbconn software generalize rollback pgdbconn pgdbconn connection execute dbconnection example pyrseas", "pypi_keywords_clean": ""}, "/zbase32": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliant alternate", "pypi_keywords_clean": ""}, "/aiozmq": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message eventless zmqprotocol implement implementation serviceclosederror exception implementation support loopless transport aiozmq process cancellation introduce zmqtransport support library compatible annotaion documentation libzmq endpont monitoring transport protocol zmqtransport execution exception limited support unstable global implement zmqeventlooppolicy asyncio specific zmqtransport function optional submodule exception implement default process asyncio integration transport eventless transport zmqtransport zmqprotocol function default transport implementation protocol implement inhereted process asyncio parameter implement zmqeventloop zmqeventlooppolicy introduce implement monitoring zmqeventloop pushpull pubsub", "pypi_keywords_clean": ""}, "petertodd/python-bitcoinlib": {"git_readme_keywords": "available system interface bitcoin convert useful multiple library consensus critical coutpoint addition instance support transaction ctransaction immutable ctransaction cblockheader immutable instance example directory instance coverage example protocol wladimir everything consensus codebase ctransaction package installed functionality bitcoin protocol conversion structure everything subdirectory documentation satoshi codebase codebase distinction immutable cmutabletransaction convenience installed manipulate global variable library critical follow satoshi protocol approach satoshi effort restructuredtext endianness gotchas convenient", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "available system interface bitcoin convert useful multiple library consensus critical coutpoint addition instance support transaction ctransaction immutable ctransaction cblockheader immutable instance example directory instance coverage example protocol wladimir everything consensus codebase ctransaction package installed functionality bitcoin protocol conversion structure everything subdirectory documentation satoshi codebase codebase distinction immutable cmutabletransaction convenience installed manipulate global variable library critical follow satoshi protocol approach satoshi effort restructuredtext endianness gotchas convenient", "pypi_keywords_clean": "bitcoin"}, "/avocado-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everything current available package available installation regular avocado functionality avocado execution golang master branch information collection install documentation build system information available fedora execution docker docker container avocado installation avocado avocado documentation avocado report avocado package command check stability unittest pattern framework avocado virtual environment development version check output preferable enterprise linux avocado framework runner libvirt available source perform installation expressive powerful python virtual enable runner propagate status avocado resultsdb execution python virtualenv directory actual avocado project example python available plugin propagate installation method subcommand example machine execution repository attempt language choice report plugin available additional vm execution single command instrumented instrumented avocado repository master execute listed execution python standard python installation execution varianter pattern executable standard python package support regular current source linux avocado release project debian fedora interested virtualization specific installation possible native example avocado instrumented simple attempt install package repository varianter combinatorial fedora avocado execution runner interrupt cancel switch avocado check install please experience checkout available accessible support available libvirt vm development environment runner execution opensuse follow unittest directory standard repository package management python follow command avocado environment additional isolation avocado version avocado develop avocado fedora fedora", "pypi_keywords_clean": ""}, "/avro-json-serializer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "brandon-rhodes/de405": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package accuracy ephemeris position service ephemeris mission enough ephemeris python compute propulsion laboratory observatory interested similar respect similar ephemeris astronomical almanac example", "pypi_keywords_clean": ""}, "castelao/pyargo": {"git_readme_keywords": "package software license documentation documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package software license documentation history release documentation status", "pypi_keywords_clean": "argo oceanography"}, "caesar0301/treelib": {"git_readme_keywords": "alistair kromkamp kromkamp brettkromkamp implementation traversal holgerbast zigzag algorithm documentation installation library performance treelib", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "structure implementation", "pypi_keywords_clean": "data structure tree tools"}, "BoboTiG/mss": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python benefit software platform screen compliant dependency computer opencv multiple screen installation install module multiple monitor screen python compliant", "pypi_keywords_clean": "screen"}, "/django-postman": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "intermediary disabled configuration optional exchange recipient exchange validated moderator multiple recipient response notification default directive welcome operation subscription simplified original facilitate possible optional additional authenticated possible business provider understood instance collection documentation additional available presentation compact recipient management authenticated instance constitute possible disabled subject recipient possible specific recipient welcome documentation recipient unwanted accepted archived default multiple exchange autocomplete recipient summary cleanup management disallow representative optional recipient instance subscriber subscriber addition classic compose undisclosed default asynchronous specific contribution address sortable documentation application purpose default moderation management command", "pypi_keywords_clean": "django messages messaging email moderation"}, "buckket/twtxt": {"git_readme_keywords": "gopher gopher minimal hoster registry readable asynchronous internet convenient gibberish license microblogging platform documentation command unique timeline accessible version tweetnest minimalist microblogging format simple coverage python package license status feedreader branch format specification converter documentation community official beautiful interface registry server bundled license microblogging service channel identity account documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gopher gopher minimal gopher license simple registry readable asynchronous gateway timeline internet convenient gibberish specification microblogging platform documentation command unique timeline accessible version tweetnest minimalist microblogging coverage python package license status feedreader branch converter documentation community official beautiful interface bundled license microblogging service channel identity account twitter documentation status", "pypi_keywords_clean": "microblogging twitter twtxt"}, "/pinax-lms-activities": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django pinax inclusive community twitter answer distractor activity number python django difficult twitter pinaxproject twochoicequiz abstract recommend learning available contribute valid contribute section conduct construction pinax project collection abstract project question concrete contribution possible actual pinax platform collection section overview community pinax example twochoicequiz distractor twochoicequiz reusable django interactive number different answer mechanic correct answer pinax documentation b algorithm question answer github programmer example django individual concrete concrete activity session ecosystem reusable pinax student documentation documentation pinax pinax activity activity activity interest python retrieval framework ecosystem everyone x correct documentation available", "pypi_keywords_clean": ""}, "hamidfzm/flask-htmlmin": {"git_readme_keywords": "javascript application installation installation install repository install deployment config exemption download repository example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask", "pypi_keywords_clean": ""}, "/bob-ip-base": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package machine installation complete contact development package contact processing software package install contact install package toolbox", "pypi_keywords_clean": ""}, "rtfd/sphinxcontrib-dotnetdomain": {"git_readme_keywords": "toctree functionality glob maxdepth sphinx documentation status package sphinx documentation status", "git_description_clean": "sphinx domain languages", "git_keywords_clean": "", "pypi_description_keywords": "domain domain domain support", "pypi_keywords_clean": ""}, "/django-meio-easytags": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "renderer signature custom template example optional renderer method instantiate easylibrary easylibrary register method template variable register renderer signature example", "pypi_keywords_clean": ""}, "/celery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple celery tracker download source integration celery async rabbitmq single machine process process minimal funding message worker website license section documentation framework integration sponsor version python rabbitmq amqp version python celery mailing install celery single celery webhooks necessary support project availability horizontal connection development version experimental support complete overview language addition group replication celery system mechanism distribute project database network language interoperability celery development encouraged participate important version support status tutorial integrate feature complete custom reference installation addition python generous installation install development celery receive message broker celery message python protocol community system consist feature specify snapshot latency previous configuration worker celery channel development future github regular project minimal failure flexible celery process celery simple machine multiple python language funding support python package celery future simplest minimum perform celery expandtab shiftround platform celery celery complete worker celery commas future celery participate development contributing section commercial product source install documentation available broker mediate python collective celery python version celery celery project support python distribution directory celery version welcome license software consist multiple channel", "pypi_keywords_clean": "task job queue distributed messaging actor"}, "/sandboxlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sandbox project license license backend complete isolation schroot program operating sandboxlib lightweight baserock license multiple project attempt abstraction possible impossible default container present desktop application isolated sandbox progress documentation adaptation network exclude library provide libsandbox pysandbox request copyright feature software security lightweight library functionality pysandbox project baserock original isolated environment android reference development installed useful building selinux different contributor agreement useful generic desktop project specific environment current sandboxlib guarantee runnable purpose relationship license licensing", "pypi_keywords_clean": ""}, "trivio/splicer": {"git_readme_keywords": "perform traditional declarative compensate database advantage various disparate extension various familiar bigquery example database sophisticated procedural inspired", "git_description_clean": "splicer adds relation querying sql python project", "git_keywords_clean": "sql database python", "pypi_description_keywords": "perform traditional declarative compensate database advantage various disparate extension various familiar bigquery example database sophisticated procedural inspired", "pypi_keywords_clean": ""}, "/django-icons-tango": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project unlimited commercial project install app pip add license lgpl code bug bug tracker license license awesome lightning ass karma kind commercial use django domain crystal way license free pip install bandwidth consumption part similar tango installation crystal crystal installation pip several domain icojoy backtopixel installation use kind order twitterjoy installation usage install lightning etc free use etc installation available url free tracker license license public public domain icon pig lifetime add app consumption usage origin license app use onebit installation license source skinny pig icojoy installation source code url origin wtfpl install package attribution", "pypi_keywords_clean": ""}, "GochoMugo/firebasin": {"git_readme_keywords": "synchronous implementation documentation firecall firebase export asynchronous delete firebase license conquer world version python encounter available development status python development callback world python github feature handler firebasin change library firebase firebase delete firecall python handler function information export firebase request updated method status stable asynchronousity", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation complete documentation license firebasin", "pypi_keywords_clean": "firebase firebasin rest api"}, "/stemming": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dbader/jack": {"git_readme_keywords": "package project branch submit submit github release glossary command directory something review release roadmap continuous integration extension integration changelog", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project branch submit submit github release glossary command directory something review release roadmap continuous integration extension integration changelog", "pypi_keywords_clean": "jack log logs logging query search"}, "choldgraf/sphinx-copybutton": {"git_readme_keywords": "customize sphinx extension configuration documentation install small sphinx customization copy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customize sphinx extension configuration documentation install small sphinx customization copy", "pypi_keywords_clean": "documentation css copy"}, "python-tap/tap-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "january command header japanese translated standard version output switch pytest developer documentation output stream provide syntax translated dutch version method stream march method enable disable development developer tappy translated dutch french translated chinese specification version chinese translated programmatic handling runner version development switch march initial german translated provide plugin method collect syntax november translated german method install translated japanese january add single output syntax highlighter method enable packaging standard russian perform default behavior standard version dependent alternative shorter support pypy wheel package plugin plugin version compliant tappy available add support french italian remove portuguese version arabic translated available python optional method method specify python packaging italian spanish tappy support pytest document python tappy september add plugin optional tappy version spanish tappy sphinx stream add release tappy coverage version format version tappy follow tappy update support python wheel initial release plugin integrate diagnostic output pypy version perform continuous distribution remove achieve directive pytest development debian packaging output version black document viable switch support debian consumer alternative format plugin add optional december provide translated portuguese available python version translated russian install tappy continuous integration support python pytest plugin translated arabic august provide python perform pipenv x protocol tappy development remove pytest consumer consumer available integrate pytest", "pypi_keywords_clean": "tap unittest"}, "mardix/paginator": {"git_readme_keywords": "toarray return database connection paginator sql pattern total twitter bootstrap capture normal end pagination paginator paginator uri request export html return array mardix version default paginator count pagination return uri url geturi query please num page number create current url simple class size default someone html compatible number url num simple keyword num uri seturl capture page example directory normal url page number html array array similar url page tohtml bootstrap framework page paginator easy create number pattern application require uri example paginator download pagepattern create paginator simple match page pagination paginator current page request uri pattern alternative url require key pattern match return page return next return pagination friendly url pattern ok next title pagination application sql query compatible bootstrap url create pagination url paginator license download paginator pagination export start count key file install paginator install composer catch page page pagination request url page url paginator object file create pagination variation url address setpage author mardix variation page total require database format friendly compatible twitter simple example alternative url paginator composer pagination navigation easy simple framework install pagination toarray return previous url example paginator catch composer install navigation size start end url capture number paginator url return something create pagination create start title pagination array return next page previous page end count prev next", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pagination"}, "nir0s/distro": {"git_readme_keywords": "reliable predecessor function complete description behavior alternative implementation distribution support distribution original function development support documentation available complete information distribution additional package manager several general merriment information package reference output command number access information functionality necessary information precedence interface installation installation robust inclusive specific replacement command available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reliable predecessor function complete description behavior alternative implementation distribution support distribution original function development support documentation available complete information distribution additional package manager several general merriment information package reference output command number access information functionality necessary information precedence interface installation installation robust inclusive specific replacement command available", "pypi_keywords_clean": ""}, "unclechu/radio-class": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation", "pypi_keywords_clean": "events bus library radio"}, "/pymill": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sdelements/django-security": {"git_readme_keywords": "package django middleware associate password required sessionexpirypolicymiddleware required stricttransportsecuritymiddleware careful application configure implementation enforce browser cspbuilder response django pickleserializer development required django django default security installation insecure autodetection connection disable configuration middleware stricttransportsecuritymiddleware enforce configuration documentation django application database description configuration compact request example repository github contentnosniff disable jsonserializer default django continuous important confidential browser donottrack security contentsecuritypolicymiddleware violation minimum configuration configuration contentnosniff required noconfidentialcachingmiddleware attribute password description xssprotectmiddleware enforce repository django django enforce connection facility application middleware description reception protection required mandatorypasswordchangemiddleware loginrequiredmiddleware optional xssprotectmiddleware disable plaintext optional xframeoptionsmiddleware installation install xframeoptionsmiddleware disable default jsonserializer middleware request analysis required install repository required donottrackmiddleware decorator donottrack preference documentation available", "git_description_clean": "collection models views middlewares forms help secure django project", "git_keywords_clean": "", "pypi_description_keywords": "package django middleware associate password required sessionexpirypolicymiddleware required stricttransportsecuritymiddleware careful application configure implementation enforce browser cspbuilder response django pickleserializer development required django django default security installation insecure autodetection connection disable configuration middleware stricttransportsecuritymiddleware enforce configuration documentation django application database description configuration compact request example repository github contentnosniff disable jsonserializer default django continuous important confidential browser donottrack security contentsecuritypolicymiddleware violation minimum configuration configuration contentnosniff required noconfidentialcachingmiddleware attribute password description xssprotectmiddleware enforce repository django django enforce connection facility application middleware description reception protection required mandatorypasswordchangemiddleware loginrequiredmiddleware optional xssprotectmiddleware disable plaintext optional xframeoptionsmiddleware installation install xframeoptionsmiddleware disable default jsonserializer middleware request analysis required install repository required donottrackmiddleware decorator donottrack preference documentation available", "pypi_keywords_clean": ""}, "escolarea/sphinxapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version project pythonpath alternative", "pypi_keywords_clean": ""}, "/zodb3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility zodb persistent change history project information respective project information zodb zodb project version installable compatible distribution", "pypi_keywords_clean": ""}, "JoshuaSkelly/twitchobserver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python message license python documentation context manager twitch twitchobserver handful installation realtime straightforward context", "pypi_keywords_clean": ""}, "vmalloc/weber-utils": {"git_readme_keywords": "library project licence", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library project licence", "pypi_keywords_clean": ""}, "/glpk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module programming functionality", "pypi_keywords_clean": ""}, "/screenlets": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "MostAwesomeDude/java-random": {"git_readme_keywords": "superior question standard installation standard straightforward reimplement official generation implementation program predictability generator available robustness unobvious particular generator comment specification specific achieve nothing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "superior question standard installation standard straightforward reimplement official generation implementation program predictability generator available robustness unobvious particular generator comment specification specific achieve nothing", "pypi_keywords_clean": ""}, "Azure/azure-storage-nspkg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage bundle storage namespace microsoft install necessary python microsoft", "pypi_keywords_clean": ""}, "/apachelog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "single create parser common corresponding format server parser parser format create apache", "pypi_keywords_clean": "apache log parser"}, "praekelt/django-likes": {"git_readme_keywords": "handler question project secretballot utilizes anonymous connect current interface facebook python django template default behaviour configure django installation disabled default django", "git_description_clean": "django app providing view interface", "git_keywords_clean": "python django", "pypi_description_keywords": "compatibility ability specify utilizes current changelog inclusion multiple jonathan bydendyk prevent spambot configure question project support documentation sephton jonathan handler dependency specify template secretballot anonymous connect thereby facebook initial release disabled behaviour compatibility refactor installation install interface specific redirect initial template middleware alternative prevent", "pypi_keywords_clean": ""}, "edx/edx-search": {"git_readme_keywords": "index search fashion search return certain way accomplish operation safety resort app django courseware default excerpt example lms matching numeric implementation member index supported way return unspecified searchengine interface textual content searchresultprocessor searchresultprocessor multivalue engine example record content specify subdictionary override object result fashion property alongside search app group document index example indexing predicate vector situation matching indexed field default courseware search override searchfiltergenerator popular search complete search application python operation matching information example popular http endpoint override searchresultprocessor django application static method invoke static course id number viewed defines filter field searchfiltergenerator searchfiltergenerator location search object django process query http interface muiltiple elasticsearch mocksearchengine namespace index index search textual search searchengine behavior specific django setting purpose search access search app view iterable filter search content searchengine searchengine notation optional keyword search result matching field access result interface search abstract object chocolate certain document similar situation multivalue field result example present absolute word phrase python property information application indexing operation indexing way search choose override object important dictionary field search method searchengine scalar search example popular way existence elasticsearch index operation special index matching calculate certain index context specific app determine supported way result search query specific index searchengine abstract keyword parameter search engine interface searchengine combination future available object python cohort visible blend information relative searchengine django implement supported optional content search look additional facility indexed object result particular override member index operate searchengine parameter return specific word view choose search matching specify cohort result object determine access search application array result necessary search", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-configfield": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bleeding dependence checking template initial database installation config initial version repository install jsonfield subclass configfield version installation development function flexible schema", "pypi_keywords_clean": ""}, "p1c2u/wykop-sdk": {"git_readme_keywords": "odpowiedzi wyr\u00f3\u017cniamy posiada wbudowane appkey parametry u\u017cycie instalacja nast\u0119puj\u0105co podstawowej nieudokumentowana wersji implementacja \u017c\u0105da\u0144 przyk\u0142ad cancel r\u00f3wnie\u017c skorzysta\u0107 filtrowanie odpowiedzi instalacja poprzez zmienia\u0107 kluczami posiada nast\u0119puj\u0105ce alternatywnie mo\u017cesz zdefiniowane editcomment deletecomment observe unobserve odpowiedzi logiczny problem zg\u0142o\u015b connect dekodowanie zasobu uwierzytelnienia mo\u017cliwo\u015bci\u0105 dost\u0119pu w\u0142a\u015bciwo\u015bci poprzez addcomment editcomment \u0142\u0105czenie s\u0142ownikowego implementacj\u0105 popular conversationslist conversation tworzenia \u017c\u0105da\u0144 nale\u017cy zainstalowa\u0107 bezpo\u015brednio connect odpowiedzi posiada podstawow\u0105 wykonaniem wykonywa\u0107 dzia\u0142ania instalacja zalecana aplikacj\u0105 generowanie u\u017cytkownika dost\u0119pu w\u0142a\u015bciwo\u015bci mywykop repozytorium uwierzytelnienie dokumentacji poprzez artybuty odpowiednie zdefiniowanych wsparciem zg\u0142aszanie b\u0142\u0119d\u00f3w b\u0142\u0119d\u00f3w je\u017celi observatory u\u017cycie zdefiniowane wersji posiada biblioteka posiada przyk\u0142adowe u\u017cycie observe favorite profile biblioteka conversation sendmessage \u017c\u0105dania artybuty filtrowanie je\u017celi znalaz\u0142e\u015b u\u017cytkownik zalogowany parametrem uwierzyteni\u0107 przyk\u0142adowe search b\u0142\u0119dy parametr\u00f3w przedstawia\u0142 obiekt\u00f3w nale\u017cy wywo\u0142a\u0107 r\u00f3wnie\u017c posiada connect mo\u017cliwe related \u017c\u0105dania implementacja wersji r\u00f3wnie\u017c dekodowanie danych nast\u0119puj\u0105ce wbudowane", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "odpowiedzi wyr\u00f3\u017cniamy posiada wbudowane appkey parametry u\u017cycie instalacja nast\u0119puj\u0105co podstawowej nieudokumentowana wersji implementacja \u017c\u0105da\u0144 przyk\u0142ad cancel r\u00f3wnie\u017c skorzysta\u0107 filtrowanie odpowiedzi instalacja poprzez zmienia\u0107 kluczami posiada nast\u0119puj\u0105ce alternatywnie mo\u017cesz zdefiniowane editcomment deletecomment observe unobserve odpowiedzi logiczny problem zg\u0142o\u015b connect dekodowanie zasobu uwierzytelnienia mo\u017cliwo\u015bci\u0105 dost\u0119pu w\u0142a\u015bciwo\u015bci poprzez addcomment editcomment \u0142\u0105czenie s\u0142ownikowego implementacj\u0105 popular conversationslist conversation tworzenia \u017c\u0105da\u0144 nale\u017cy zainstalowa\u0107 bezpo\u015brednio connect odpowiedzi posiada podstawow\u0105 wykonaniem wykonywa\u0107 dzia\u0142ania instalacja zalecana aplikacj\u0105 generowanie u\u017cytkownika dost\u0119pu w\u0142a\u015bciwo\u015bci mywykop repozytorium uwierzytelnienie dokumentacji poprzez artybuty odpowiednie zdefiniowanych wsparciem zg\u0142aszanie b\u0142\u0119d\u00f3w b\u0142\u0119d\u00f3w je\u017celi observatory u\u017cycie zdefiniowane wersji posiada biblioteka posiada przyk\u0142adowe u\u017cycie observe favorite profile biblioteka conversation sendmessage \u017c\u0105dania artybuty filtrowanie je\u017celi znalaz\u0142e\u015b u\u017cytkownik zalogowany parametrem uwierzyteni\u0107 przyk\u0142adowe search b\u0142\u0119dy parametr\u00f3w przedstawia\u0142 obiekt\u00f3w nale\u017cy wywo\u0142a\u0107 r\u00f3wnie\u017c posiada connect mo\u017cliwe related \u017c\u0105dania implementacja wersji r\u00f3wnie\u017c dekodowanie danych nast\u0119puj\u0105ce wbudowane", "pypi_keywords_clean": ""}, "eldarion/eventlog": {"git_readme_keywords": "framework ecosystem github course update jsonfield supported django python django release history useful recommend question support custom update update reusable django improve documentation version trigger programmer diagnostic switch jsonfield parameter anything overview simple support convert timestamp history project manager related object history contribute choose convention method source timestamp update everyone conduct connect install package requirement overview supported function record jsonfield requirement default copyright c documentation installation example parameter thought displayed contribute section project pusher integration license collection performance content number python documentation signal ecosystem reusable description activity installation install argument optional object argument coverage circleci contribute overview django python receiver pinaxproject check concrete contribution eldarion github migration switch python support eventlog property third analyze parameter release optional improve initial release asynchronous supported interest python gfk circleci codecov templatetag update manage django compatibility renaming inclusive community business intelligence template fragment property provide single function change anything serialize license copyright section concrete information ability platform configuration update provide template interface integration support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project consider documentation documentation activity diagnostic business intelligence commercial support database interface asynchronous documentation", "pypi_keywords_clean": ""}, "michael-lazar/mailcap-fix": {"git_readme_keywords": "compatability present behavior wildcard mailcap standard library conflict mailcap tracker installation windcard compatibility possible python ubuntu backport version example number python summary library implementation python python precedence library module addition conflict python package conform python standard official summary package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatability present behavior wildcard mailcap standard library previous conflict mailcap tracker installation windcard compatibility possible python ubuntu version example number library implementation python python precedence library module addition conflict conform python standard summary package", "pypi_keywords_clean": "mailcap"}, "cloudpipe/cloudpickle": {"git_readme_keywords": "default ecosystem standard library discouraged installation specific environment network execute possible serialize project instance lambda lambda expression shipped network available history version audience function cluster jupyter notebook interface cloudpickle", "git_description_clean": "extended pickling support python objects", "git_keywords_clean": "", "pypi_description_keywords": "default ecosystem standard library discouraged installation specific environment network execute possible serialize project instance lambda lambda expression shipped network available history version audience function cluster jupyter notebook interface cloudpickle", "pypi_keywords_clean": ""}, "/satori-sdk-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "gciotta/jsonrpc-requests": {"git_readme_keywords": "python compatible package compliance server support implementation compact notification python python notification library coverage package various", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python compatible package compliance server support implementation compact notification python python notification library coverage package various", "pypi_keywords_clean": "requests"}, "QualiSystems/quali-testing-helpers": {"git_readme_keywords": "test", "git_description_clean": "helpers utilities use test code", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "testing unitests utilities"}, "ccnmtl/django-munin": {"git_readme_keywords": "simple expose database performance generic context django pattern monitor various second useful django calculate context access included regular django assume configure expose custom install python django application directory metric plugin symlink available performance number anything calculate simpler server authentication likely something symlink appropriate password function information parameter config decorator stanza", "git_description_clean": "django application simple munin integration", "git_keywords_clean": "", "pypi_description_keywords": "helper application monitor", "pypi_keywords_clean": ""}, "richardkiss/pycoin": {"git_readme_keywords": "private derivation signing multisig careful exponent flush flush public syntax private cryptocoin useful handful library possible determine private utility pycoinnet library support access private validation transaction network example network signing unsigned partial signing documentation readthedocs object everything public available bitcoin important k represent public likely testnet bitcoin protocol x represent bitcoin mainnet environment various access public bitcoin consulting example bitcoin openssl access descendent someone access information signature complexity bitcoin integer network object environment variable subkey k protocol documentation particular network opposite signing verification present accelerate corresponding address", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "williballenthin/python-pyqt5-vstructui": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "vstruct hex", "pypi_keywords_clean": ""}, "/git-sweep": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "feature problem default useful driessen describe request branch neighborhood development project confirmation prompt python license install grammar prompt release directory command answer python cleanup development release option bypass repository current vincent driessen different initial release problem branch confirm certain", "pypi_keywords_clean": "git maintenance branches"}, "ebeweber/flake8-mutable": {"git_readme_keywords": "added license motivation explanation installation unexpected", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "added license motivation explanation installation unexpected", "pypi_keywords_clean": "mutable arg kwarg"}, "LionelAuroux/pyrser": {"git_readme_keywords": "system documentation toolbox purpose epitech describe grammar python module available documentation example pedagogic purpose toolbox", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyrser documentation help markdown pyrser pyrser pyrser available", "pypi_keywords_clean": "parse parser parsing peg packrat grammar language"}, "/grizzled-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python different utility group different", "pypi_keywords_clean": ""}, "/pyobjc-framework-dictionaryservices": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "use deprecated", "pypi_keywords_clean": "pyobjc dictionaryservices"}, "saj/nagioscheck": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administrator framework development pynagioscheck", "pypi_keywords_clean": ""}, "/dxlclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "opendxl compliance fabric documentation exchange overview opendxl copyright bugs installation development version", "pypi_keywords_clean": "opendxl dxl mcafee client"}, "glottobank/newick": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "newick parallel object python package newick factory", "pypi_keywords_clean": ""}, "edsu/microdata": {"git_readme_keywords": "supplied license chapter install command utility library available command microdata building", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "seomoz/shovel": {"git_readme_keywords": "information shovel modularity unclear clarity modularity support command modularize machine keyword helpful branch change function function possible modification shovel behavior bonus thought support information specific default python example interpreted project unambiguous syntax available function shovel command server campfire additional include example example equivalent shovel extra number variable number function interface function complete argparse decorator apply shovel server coverage information decorator intuitive standalone script guess shovel figure execute switch shovel support staff shovel shovel current behavior shovel option presentation operational available command common maintain little possible availble browser powerful directory information browser function python access module change little specificity example current second example execute talkative debugging convenient organization reason weekend utility documentation positional accessible exception original version python everything campfire utility repos clarity directory inspect script complete access staff different client global namespace extra talkative", "git_description_clean": "rake python", "git_keywords_clean": "", "pypi_description_keywords": "execute", "pypi_keywords_clean": "tasks shovel rake"}, "/pyth": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support relative design paragraphs convert module pythonpath littler output different common openoffice unsupported information output module directory python unittest python support xhtml architecture italic underlined unittest module python script specific bullet markup conversion", "pypi_keywords_clean": ""}, "phn/jdcal": {"git_readme_keywords": "python jd example first example gregorian second number install jdcal first number world separate julian work maximum julian calendar license relevant calendar python installation installation module calendar julian jdcal percival allow maximum proleptic limited calendar different number mjd python latter domain maximum precision calendar double julian gregorian calendar maximum flexibility calendar valid precision example function python julian julian gregorian python gregorian library inspiration october function information different c library excellent c jdcal jdcal amount module precision mjd mjd calendar python valid example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python jd example first example gregorian second number install jdcal first number world separate julian work maximum julian calendar license relevant calendar python installation installation module calendar julian jdcal percival allow maximum proleptic limited calendar different number mjd python latter domain maximum precision calendar double julian gregorian calendar maximum flexibility calendar valid precision example function python julian julian gregorian python gregorian library inspiration october function information different c library excellent c jdcal jdcal amount module precision mjd mjd calendar python valid example", "pypi_keywords_clean": ""}, "adafruit/adafruit-bme280": {"git_readme_keywords": "adafruit library redistribution download license library adafruit library installation adafruit humidity barometric pressure button humidity barometric interface tutorial arduino system adafruit uncompressed arduino library adafruit hardware communicate library library support adafruit installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "yougov/yg-lockfile": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project metadata filelock excellent implementation context manager", "pypi_keywords_clean": ""}, "eugene-eeo/mailthon": {"git_readme_keywords": "tracker extensible composable composable mailthon mailthon library transport agnostic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extensible composable composable mailthon mailthon library transport agnostic", "pypi_keywords_clean": ""}, "toscawidgets/tw2-jqplugins-chosen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project information status javascript license library website github version unwieldy github repository", "pypi_keywords_clean": ""}, "DjangoAdminHackers/django-linkcheck": {"git_readme_keywords": "linkcheck object minimal screenshot report validity anything python django django python internal integration linkcheck useful external internal project handled present install documentation similar extracted number command generate optional linklist integration present settings default internal example python compatible flexible status internal linkcheck maximum number interval adapted connection analyze report notification broken config elaboration clarification external register management command", "git_description_clean": "app analyze report links model register links bare urls image file fields embedded html linkcheck handles parsing fairly easy override methods linkcheck object need anything complicated like generate urls slug fields etc", "git_keywords_clean": "", "pypi_description_keywords": "linkcheck object minimal screenshot report validity anything python django django python internal integration linkcheck useful external internal project handled present install documentation similar extracted number command generate optional linklist integration present settings default internal example python compatible flexible status internal linkcheck maximum number interval adapted connection analyze report notification broken config elaboration clarification external register management command", "pypi_keywords_clean": ""}, "/dse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection primary record vangheem finding distribution license modified iterate reconnect cursor decorator method install fitness particular possibility damage vs django process instance refactored disclaimer documentation version author optional cursor typical flush thomas augestad experimental support exemplary consequential herv\u00e9 cauwelier thomas weholt permission software method default recieved rassminus promote author thomas support performance unittest damage release transaction collection focus tablename background modification complete walkthrough patched default compatible installation updated pyflake example statement software nothing inserted number framework status removal comment license compatible dictionary specify simplicity thomas license execute several incidental special negligence weholt thomas theory liability release decorator impact performance execute disclaimer implied compatible django remember similar construct structure merchantability fitness cursor source binary creation property db sequence factory contract contact singleton support compatibility django indirect incidental limited implied specific special exemplary particular purpose scenario several modelfactory special execute helpful database actual unique method method overhead attempt andornaut compatible limited procurement possible decorator optional instance metadata validation available memory hg change optional business interruption execution inserted database license copyright redistribution limited inspiration patched something augestad weholt column procurement substitute garcia django version mysql updated django license", "pypi_keywords_clean": ""}, "lig/django-actionviews": {"git_readme_keywords": "implementation suitable concept implementation alternative", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation suitable concept implementation alternative", "pypi_keywords_clean": "django generic views"}, "/meson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "friendly possible system complete studio", "pypi_keywords_clean": ""}, "bbqsrc/lcid": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "rational default python nothing license", "pypi_keywords_clean": ""}, "kjd/idna": {"git_readme_keywords": "release version conversion functionality mapping typical transitional mapping processing unlikely replacement module library positional context transition invalid codepoint support contexto contextj support unicode functionality necessary typical version unicode disposition pvalid general specification version generated script assess capital install package standard current output various python generated technical standard tagged release fetch relevant repository installation example generate analysis specification compatibility mapping performance example contexto format number pvalid contextj individual unicode unlikely beneficial respective current standard installation install different unicode functionality library compatibility function status codepoint install library different potential contextj contextual example original argument perform substitute standard library specific codepoint illegal character k conversion legacy normalizes permissible generate different unexpected incompatible python python different version lookup specific unicode codepoint generated library processing caution convert regular mapping python module standard example contextj contexto suitable replacement version protocol specification conversion unicode consortium exception library different codepoint illegal context contexto codepoint helpful illegal combination eligibility perform conversion unicode version unicode technical transitional processing protocol consortium perform python standard generate library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "release version conversion functionality mapping typical transitional mapping processing unlikely replacement module library positional context transition invalid codepoint support contexto contextj support unicode functionality necessary typical version unicode disposition pvalid general specification version generated script assess capital install package standard current output various python generated technical standard tagged release fetch relevant repository installation example generate analysis specification compatibility mapping performance example contexto format number pvalid contextj individual unicode unlikely beneficial respective current standard installation install different unicode functionality library compatibility function status codepoint install library different potential contextj contextual example original argument perform substitute standard library specific codepoint illegal character k conversion legacy normalizes permissible generate different unexpected incompatible python python different version lookup specific unicode codepoint generated library processing caution convert regular mapping python module standard example contextj contexto suitable replacement version protocol specification conversion unicode consortium exception library different codepoint illegal context contexto codepoint helpful illegal combination eligibility perform conversion unicode version unicode technical transitional processing protocol consortium perform python standard generate library", "pypi_keywords_clean": ""}, "UltimateHackers/huepy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "hue huepy terminal color python color"}, "lambdalisue/django-permission": {"git_readme_keywords": "package object request request cannnot c alisue simple limitation build status copyright c quick tutorial permission decorator author full logic permission article permission logic documentation installation python specify charge person application directory version specify method return license specify different function decorator limited fitness particular return boolean alisue permission merchantability fitness version creator article subject alisue lambdalisue coverage author alisue django permission library python full control example object decorator object permission software keyword format substantial express specify object purpose noninfringement permission system attribute add change software permit status author different module liability module variable decorator object particular purpose contract distribute sublicense object attribute method function complex tutorial add warranty builtin template inspection restriction modify publish distribute change permission django documentation connection software strategy add attribute software software", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package object request request cannnot c alisue simple limitation build status copyright c quick tutorial permission decorator author full logic permission article permission logic documentation installation python specify charge person application directory version specify method return license specify different function decorator limited fitness particular return boolean change alisue permission merchantability fitness version creator article subject alisue lambdalisue coverage author alisue django permission library python full control example object decorator object permission software keyword format substantial express specify object purpose noninfringement permission system attribute software permit status author different module liability module variable decorator object particular purpose contract distribute sublicense object attribute method function complex warranty builtin template inspection restriction modify publish distribute change permission django documentation connection software strategy software software group", "pypi_keywords_clean": "django object logical permission auth authentication"}, "memphis-iis/gludb": {"git_readme_keywords": "mongodb postgresql serialization support mongodb pymongo dynamodb datastore googledatastore datastore mongodb library abstraction configure googledatastore mongodb documentation install history dynamodb backend example popular support virtualenv postgresql version functionality configurable superglu datastore", "git_description_clean": "generalized learning utilities database library", "git_keywords_clean": "python databases dynamodb mongodb datastore sqlite postgresql", "pypi_description_keywords": "mongodb postgresql serialization support mongodb pymongo dynamodb datastore googledatastore datastore mongodb recent version library abstraction configure dynamodb backup googledatastore mongodb configurable backup documentation install history dynamodb backend example popular support virtualenv postgresql version functionality backup support datastore", "pypi_keywords_clean": "database versioning backupsqlite dynamodb cloud datastore mongodb"}, "sunscrapers/djoser": {"git_readme_keywords": "library development registration implementation authentication similar installation account activation virtualenv django framework directory password environment repository django django following architecture documentation documentation patience continue documentation available", "git_description_clean": "rest implementation django authentication system", "git_keywords_clean": "djoser authentication python", "pypi_description_keywords": "library development registration implementation authentication similar installation account activation virtualenv django framework directory password environment repository django django following architecture documentation documentation patience continue documentation available", "pypi_keywords_clean": ""}, "/tox": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project necessary tracker discussed community overflow development analysis checking communication collection configuration documentation project documentation building pluggable example envlist succeeded overview virtual discuss arbitrary configured continuous integration configurable pluggable contributor covenant automation project documentation documentation different welcome platform convenient isolated imagination documentation", "pypi_keywords_clean": "virtual environments isolated testing"}, "GoogleCloudPlatform/google-cloud-bigtable": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project billing product database service interface popular documentation documentation platform project service database bigtable library interface available happybase bigtable library guides addition popular library billing project library documentation authentication installation", "pypi_keywords_clean": ""}, "viaict/baas32": {"git_readme_keywords": "normalization changelog l converted readable provided counterpart symbol validation utilized converted encoding support validated symbol crockford encoding readability installation l example normalized encoding described parameter encoding converted converted normalization resistant pronounceable function optional provided alternate encoding sensitive l counterpart argument argument encoding uppercase", "git_description_clean": "alternative python implementation douglas crockford encoding scheme", "git_keywords_clean": "", "pypi_description_keywords": "sensitive encoding described converted encoding converted converted crockford encoding alternate encoding resistant pronounceable readability", "pypi_keywords_clean": ""}, "googlemaps/googlemaps": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "limodou/uliweb": {"git_readme_keywords": "runtime process apply template plugin mechanism enhanced debugging sqlalchemy package uwsgi development process startup export available development server processing separate project startup example werkzeug command debugging autoreload uliweb python extension dispatch process authentication exchange template inclusion tornado inclusion inheritance example request documentation project processing mechanism alembic package infrastructure uliweb variable extract license uliweb template directory project argument debug request uliorm essential directory framework example django statement compound framework combinition compress session system directory structure reload process initialization template support import development provide development unified document template development homepage documentation application project configurability replaceability project organization function python template expression configure configuration mechanism utilizes compress process special function project configured collection project commuity automatic language dispatch processing validate unified management initicalization process scratch configuration support language block uliweb template python request response migirate database example database middleware extension mapping uliweb utilizes different introduction limodou sqlalchemy function uliweb environment execution configured configuration default configured database initicalization access uliweb introduction management uliweb limodou limodou uliweb uliweb special export license infrastructure process request limodou uliweb framework runtime extension similar js combinition deployment project homepage middleware process initial process uliweb project mapping flexiable limodou license mapping debug special directory traceback template server debugging check djangos configure startup development similar djangos dispatch extension provide development flexiable powerful process plugin template debugging example check ulipad project reusability configurability", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "enhanced debugging sqlalchemy package process startup development server separate project startup command debugging autoreload uliweb python extension dispatch process authentication exchange template inclusion inclusion inheritance example request documentation project processing mechanism alembic package extract variable license uliweb template directory project argument uliorm essential directory statement compound framework combinition compress directory structure process initialization development provide document development unified template development homepage documentation application project configurability replaceability function python template expression language configure configuration mechanism utilizes compress process werkzeug special function project configured collection project commuity automatic language dispatch processing unified management initicalization process configuration template python request response migirate database example database middleware extension organization mapping uliweb utilizes different introduction uliweb function uliweb environment execution configured configuration default configured database initicalization uliweb introduction management uliweb uliweb uliweb special limodou process request extension similar js combinition deployment project homepage middleware process initial process uliweb project mapping flexiable available limodou license special directory traceback template server djangos configure startup development similar djangos dispatch extension provide development flexiable powerful template debugging reusability configurability", "pypi_keywords_clean": "wsgi web framework"}, "eddiejessup/fealty": {"git_readme_keywords": "documentation software bsd", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation history release", "pypi_keywords_clean": "fealty"}, "/python-octaviaclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack client client plugin license documentation project information octavia openstack documentation source software apache contribution source release plugin project client openstack apache license octavia client information octavia repository information openstack plugin octavia", "pypi_keywords_clean": ""}, "idlesign/django-sitemetrics": {"git_readme_keywords": "keycode notation application django provider django contribs approach work current install documentation client interface admin template django admin google reusable application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "keycode notation application django provider django contribs approach work current install documentation client interface admin template django admin google reusable application", "pypi_keywords_clean": ""}, "tomchristie/itypes": {"git_readme_keywords": "instantiation standard immutable container hashable implementation equality object pyrsistent installation attribute additional attribute access simplicity performance alternative implementation comprehensible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "geertj/python-dbusx": {"git_readme_keywords": "package alternative python python interface overview alternative python install adater geertj libdbus python build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package alternative python python interface overview alternative python install adater geertj libdbus python build", "pypi_keywords_clean": ""}, "occrp/cronosparser": {"git_readme_keywords": "functionality password discussion database cronosparser reverse engineer password protection", "git_description_clean": "parser cronospro cronosplus database files", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "files walk index survey"}, "/sframe": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package attached license documentation available", "pypi_keywords_clean": ""}, "/dbgp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "DinoTools/overpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "additional information python python license license information install console install python license python overpass available response additional helper access overpass helper helper version directory python python helper", "pypi_keywords_clean": "overpy overpass osm openstreetmap"}, "julian-r/python-magic-bin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "textual identification library database", "pypi_keywords_clean": "mime magic file binary"}, "mjirik/sed3": {"git_readme_keywords": "version install figure example example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "viewer editor"}, "mathiasertl/django-xmpp-http-upload": {"git_readme_keywords": "server default coverage report directory configured configure something python django header development admin interface djangos default cleanup celery install secure webserver djangorestframework dependency uploaded directory available diskspace filename length reachable xmpp functionality second element current fix return option connection response chunked configured subdirectory uploads quality relevant https filename format output random changelog support supported project anyone sensible environment increase textwidth chunked erlang subdirectory default restricted example django instance regular expression pytloun fix django content example default environment domain configured django handle quota example supported python advertised maximum filename request default return management command default supported xmpp server celery update djangorestframework directory uploaded chunked transfer likelyhood pypi command cleanup fix length column plugin xmpp increase maximum element regular optional format support django apache upload python dependency current default admin increase length initial version fix broken particular contentlength header example crontab match python wheel command generate access travis upload experimental element quota djangos subdirectory directory unreadableposterror upload request upload combination example reachable django increase mandatory webserver security necessary database optional little restricted generate coverage cleanup django integration underscore update default domain directory something sensible default default returned information protocol client corner", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "functionality django", "pypi_keywords_clean": ""}, "Pr0Ger/protobuf3": {"git_readme_keywords": "install library python author library python launching vagrant original protobuf distribution python original project protobuf install registration youtrack instance protobuf compiler command similar environment launching readme version status directory support python install protobuf initial protocol author sergey install generate original implementation launching", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install library python author library python launching vagrant original protobuf distribution python original project protobuf install registration youtrack instance protobuf compiler command similar environment launching readme version status directory support python install protobuf initial protocol author sergey install generate original implementation launching", "pypi_keywords_clean": ""}, "/django-permissions-widget": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administrator understand administrator potential backward fourth report permission widget documentation subscribe backward compatibility python django install install release widget permission several permission description purpose default django complete documentation release report", "pypi_keywords_clean": "django permissions widget"}, "tehmaze/diagram": {"git_readme_keywords": "python installation system example argument documentation parameter install github diagram install smooth smooth library various horizontal vertical symmetrical logarithmic parameter function default spectrum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python installation system example argument documentation parameter install github diagram install smooth smooth library various horizontal vertical symmetrical logarithmic parameter function default spectrum", "pypi_keywords_clean": "diagram graph ascii ansi text"}, "hasgeek/coaster": {"git_readme_keywords": "compatible python function accessible functionality database postgresql python additional coaster compatible additional additional package postgresql coaster common driver coverage status version obsolete documentation coaster documentation status", "git_description_clean": "common patterns flask apps", "git_keywords_clean": "", "pypi_description_keywords": "function accessible management postgresql bugfix commit database uglipyjs wrapper namedtuple support header function accepts convention accepts environment reliable switched single longitude columns deprecated error traceback version compatible python sqlalchemy implementation functionality database postgresql inheritance sqlalchemy unused alembic parameter database timestampmixin composite column status environment source error return suitable custom sqlalchemy default function postgresql handler default mutating inherited session default optional environment primary sandboxedflask bugfix latitude longitude specification sqlalchemy column counter additional usual timestamp idmixin decorator efficiency sqlalchemy session instance bugfix additional property markup deprecated property additional parameter available deprecated replaced unicode error reliable bugfix mutating enhancement module github obfuscation python compatibility column duplication underlying implementaiton timezone component method emulate specific timestamp feature secondary markdown content logging module property additional package gfm module decorator urlformixin incompatible change session additional additional context documentation coaster component column python additional urlformixin initial coaster common database underlying variable defaulting obsolete bugfix support default parameter method efficient accepts notation compatible support additional helper bugfix utility datetime generation basemixin go midnight timezone postgresql module replaced dependency available change country passing configuration associated columns rudimentary server postgresql version number configuration status query method context session coverage status error logging column environment variable driver coaster compatible hybrid property random multicast deprecated favour column markdown query duplication bug documentation status", "pypi_keywords_clean": "coaster"}, "pediapress/timelib": {"git_readme_keywords": "distribution license pediapress acknowledgment product product acknowledgment unmodified distribution software product software permission license version subject timelib license copyright altered software express original software wrapper internal timelib product documentation commercial warranty", "git_description_clean": "python module parsing english textual date descriptions", "git_keywords_clean": "", "pypi_description_keywords": "distribution license pediapress acknowledgment product product acknowledgment unmodified distribution software product software permission license version subject timelib license copyright altered software express original software wrapper internal timelib product documentation commercial warranty", "pypi_keywords_clean": ""}, "common-workflow-language/cwl-runner": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interpreter alternate", "pypi_keywords_clean": ""}, "divio/djangocms-snippet": {"git_readme_keywords": "project snippet instance translate fallback configuration documentation installation recommend javascript snippet feedback maintain additional available request searchable grateful template compatible development", "git_description_clean": "django cms snippet provides plugin django cms inject html css javascript snippets website", "git_keywords_clean": "addon cms python django", "pypi_description_keywords": "project snippet instance translate fallback configuration documentation installation recommend javascript snippet feedback maintain additional available request searchable grateful template compatible development", "pypi_keywords_clean": ""}, "pinax/pinax-eventlog": {"git_readme_keywords": "framework ecosystem github course update jsonfield supported django python django release history useful recommend question support custom update update reusable django improve documentation version trigger programmer diagnostic switch jsonfield parameter anything overview simple support convert timestamp history project manager related object history contribute choose convention method source timestamp update everyone conduct connect install package requirement overview supported function record jsonfield requirement default copyright c documentation installation example parameter thought displayed contribute section project pusher integration license collection performance content number python documentation signal ecosystem reusable description activity installation install argument optional object argument coverage circleci contribute overview django python receiver pinaxproject check concrete contribution eldarion github migration switch python support eventlog property third analyze parameter release optional improve initial release asynchronous supported interest python gfk circleci codecov templatetag update manage django compatibility renaming inclusive community business intelligence template fragment property provide single function change anything serialize license copyright section concrete information ability platform configuration update provide template interface integration support", "git_description_clean": "event logger", "git_keywords_clean": "", "pypi_description_keywords": "eventlog activity diagnostic intelligence interface", "pypi_keywords_clean": ""}, "jpvanhal/siilo": {"git_readme_keywords": "coverage install framework agnostic libcloud install library support storage abstraction filesystem compatible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible python python framework agnostic storage abstraction libcloud amazon release filesystem support python library initial coverage", "pypi_keywords_clean": ""}, "caran/can4python": {"git_readme_keywords": "description license coverage measurement package virtual suitable pypi sphinx documentation format library question socketcan linux license support configuration network example canbabel kernel coverage vector informatik introduction package useful showing dependency description installation linux socketcan available example software functionality format example virtual interface license package signal coverage texlive multiplex documentation dependency beaglebone raspberry documentation python available single separate documentation transmission measurement apache linux python github documentation kernel python format throttle socketcan python linux kernel knuth sphinx controller sphinx sphinx external kernel periodic informatik gmbh request source python package creation knuth", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "description license coverage measurement package virtual suitable sphinx documentation property interfacename invalid format library question license support configuration functional network example canbabel adjust duocumentation kernel coverage vector informatik github history useful showing introduction package dependency description creation installation available example software history adjust functionality format example virtual interface license package signal coverage texlive multiplex documentation dependency beaglebone raspberry documentation python separate documentation manager transmission measurement apache github documentation kernel python format throttle socketcan python sphinx sphinx controller canbus object canframe definition external kernel periodic informatik gmbh request python package interfacename caninterface", "pypi_keywords_clean": ""}, "/mezzanine-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "popular documentation roadmap framework authentication installation documentation industry standard screenshot programming language advantage mezzanine management platform interactive resource documentation browsable significant freedom documentation installation mezzanine serialization intuitive", "pypi_keywords_clean": "mezzanine cms api rest restful web"}, "Azure/azure-mgmt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management bundle individual package package bundle syntax service management complete package documentation generation management resource management python microsoft resource manager install version information package version number bundle package various shell compatibility documentation documentation microsoft management package breaking package contain python package", "pypi_keywords_clean": ""}, "webrecorder/pywb": {"git_readme_keywords": "architecture standalone generic webrecorder webrecorder project possible toolkit multiple detailed certificate authority exclusion customizable certificate pluggable install documentation archival aggregation fallback traditional wayback interested dynamic configuration functionality flexible rewriting archiving toolkit archiving foundation webrecorder different capability overhaul recorder rewriter contribute project", "git_description_clean": "core python web archiving toolkit replay recording web archives", "git_keywords_clean": "python wayback pywb", "pypi_description_keywords": "architecture standalone generic webrecorder webrecorder project possible toolkit multiple detailed certificate authority exclusion customizable certificate pluggable install documentation archival aggregation fallback traditional wayback interested dynamic configuration functionality flexible rewriting archiving toolkit archiving foundation webrecorder different capability overhaul recorder rewriter contribute project", "pypi_keywords_clean": ""}, "koalalorenzo/python-digitalocean": {"git_readme_keywords": "status example perform testing access digital snapshot automatic droplet example status checking firewall example manager object website author object reference pypi status droplet perform snapshot author blog virtualenv perform limit information listing droplet checking check status snapshot balancer active shell repository firewall ubuntu support droplet power traffic install sshkey digitalocean droplet check documentation command status session deploy docker testing install install shutdown active configure client author website information output public example connection error configure http customization testing session customization status request checking status http client power power advandtage custom environment manager droplet ssh shutdown restart password droplet python python droplet shutdown power cycle library configure client configure build container specific cycle droplet repository directory digitalocean account droplet perform error example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "access digital snapshot automatic shutdown restart password droplet support status droplet shutdown command website perform snapshot install install virtualenv perform library droplet perform droplet public example snapshot", "pypi_keywords_clean": ""}, "jrbenny35/pytest-firefox": {"git_readme_keywords": "support fixture default selenium plugin installation install firefox control", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support fixture default selenium plugin installation install firefox control", "pypi_keywords_clean": "pytest foxpuppet firefox mozilla automation selenium"}, "hootnot/yachain": {"git_readme_keywords": "default prefix hasattr python import prefix import yachain prefix config possible yachain access yachain config network independent environment prefixed config k logfile k config different attribute relative absolute yachain import virtual environment overriden yachain suppose netmask gateway shell access access python operation virtual", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default prefix hasattr python import prefix import yachain prefix config possible yachain access yachain config network independent environment prefixed logfile config different attribute relative absolute yachain import virtual environment overriden yachain suppose netmask gateway shell access access python operation virtual", "pypi_keywords_clean": "yaml parser configuration"}, "ambitioninc/fleming": {"git_readme_keywords": "datetime truncation information documentation worldwide standard available license installation install datetime manipulation timezone fleming fleming daylight fleming installation version arithmetic datetime documentation available", "git_description_clean": "python functions manipulating datetime objects respect time zone", "git_keywords_clean": "", "pypi_description_keywords": "package timedelta interval previous worldwide standard description function timezone daylight truncation sandford manipulation detailed arithmetic timedelta interval respect", "pypi_keywords_clean": "python datetime pytz timezone timedelta arithmetic floor conversion"}, "araffin/robust-serial": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "communication protocol communicate arduino raspberry arduino communicate", "pypi_keywords_clean": "serial hardware arduino communication protocol raspberry"}, "linjackson78/jstyleson": {"git_readme_keywords": "limitation invalid copyright library happy standard license documentation fitness particular merchantability fitness subject installation linjackson permission software limited express substantial jstyleson jstyleson purpose noninfringement informal function liability particular purpose contract distribute sublicense warranty restriction publish distribute jstyleson nothing connection software software software", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "json comment javascript parse"}, "/django-jsonify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "varianble django django template convert varianble anderson installation abstract library decorator anderson django", "pypi_keywords_clean": "json django jsonify"}, "/pyv8": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python support google engine python javascript engine python", "pypi_keywords_clean": ""}, "tomekwojcik/flask-htauth": {"git_readme_keywords": "download github configuration license integrate snippet invalid decorator request response authentication extension standard htpasswd request authentication htpasswd password example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download github configuration license integrate snippet invalid decorator request response authentication extension standard htpasswd request authentication htpasswd password example", "pypi_keywords_clean": ""}, "craigds/django-typed-models": {"git_readme_keywords": "actual python python license inheritance django update object common current correct connecting subclass database object python listing various django similar similar inheritance multiple abstract example nullable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pavdmyt/yaspin": {"git_readme_keywords": "collision spinner keyboard c sindre possible control intuitive powerful toggle display library control spinner dmytrenko spinner order license display spinner terminal install shark output package manager python development message terminal installation possible toggle terminal helpful example major cpython python terminal spinner combine flexible format integrate python change python yaspin custom spinner method sindre sorhus powerful function repository c function branch submit codebase external request branch commit progress feature branch basic example python integration change spinner", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collision spinner keyboard c sindre possible control intuitive powerful toggle display library control spinner dmytrenko spinner order license display spinner terminal install shark output package manager python development message terminal installation possible toggle terminal helpful example major cpython python terminal spinner combine flexible format integrate python change python yaspin custom spinner method sindre sorhus powerful function repository c function branch submit codebase external request branch commit progress feature branch basic example python integration change spinner", "pypi_keywords_clean": "progressmeter progress meter rate console terminal console cli loading loader indicator spinner spinners time busy wait idle"}, "0compute/yanc": {"git_readme_keywords": "health license output plugin version coverage build", "git_description_clean": "yet another nose colorer", "git_keywords_clean": "", "pypi_description_keywords": "health license output plugin version coverage build", "pypi_keywords_clean": "nose color"}, "wndhydrnt/python-oauth2": {"git_readme_keywords": "provide authentication application directory project framework different implementation directory mongodb interface example authorization confirmation dialogue specific database various possible installation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "provide authentication application directory project framework different implementation directory mongodb interface example authorization confirmation dialogue specific database various possible installation available", "pypi_keywords_clean": ""}, "phrase/django-phrase": {"git_readme_keywords": "integrate powerful javascript current application phraseapp compiled disable standard professional override translation sourcetree production gitignore necessary phraseapp integrate information translation management conflict javascript installation install handling process adapter template configuration configure management solution install package projectid", "git_description_clean": "phraseapp django applications", "git_keywords_clean": "", "pypi_description_keywords": "integrate powerful javascript current application phraseapp compiled disable standard professional override translation sourcetree production gitignore necessary phraseapp integrate information translation management conflict javascript installation install handling process adapter template configuration configure management solution install package projectid", "pypi_keywords_clean": ""}, "lambdalisue/maidenhair": {"git_readme_keywords": "indipendent experimental library installation maidenhair directory plotting manimupulation library coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "indipendent experimental library installation maidenhair directory plotting manimupulation library coverage", "pypi_keywords_clean": "data python loader parser statistics"}, "/akad": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "line", "pypi_keywords_clean": ""}, "ingenuitas/simplecv": {"git_readme_keywords": "flask simplejson ipython notebook useful library distribution ubuntu optional simplecv superpack python opencv install homebrew numpy superpack command readable interface installed install machine vision feature extraction bundle report shell installation opencv python interactive shell virtual environment ipython shell werkzeug webkit simplecv simplecv required simplecv python virtual linux installed system manipulation feature difficult superpack available tesseract orange extract simplecv python install numpy scipy superpack simplecv interactive scipy numpy optional install install opencv executable tweak opencv download source machine readme install pyzmq installation example pygame homebrew system simplecv installed system install extraction format concise readable framework vision language simplecv required installation directory freenect python install ipython msys package specialized ipython python scipy default python source framework simplecv shell simplejson werkzeug casual installer install simplecv framework website download opencv conversion mission compiler msys install scipy beaufitulsoup follow opencv source format conversion environment virtualenv simplecv interoperable information install pygame opencv ipython opencv scipy scipy installed software manager section pyzmq videos little homebrew install possible required installed package installer reason standard install python notebook required virtualenv install install simplecv comprehensive interface reason shell package installed linear python install superpack install numpy pygame reopen opencv superpack sorted standard installation x pygame opencv vision simplecv shell virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aquisition conversion conversion manipulation framework interface", "pypi_keywords_clean": "opencv cv machine vision computer vision image recognition kinect freenect"}, "libyal/libmsiecf-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python libmsiecf", "pypi_keywords_clean": ""}, "manahl/pytest-profiling": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "server fixture pymongo dependency affect server tabular enable fixture random default compatibility licence lagunov current python fixture config python compatibility fixture improvement updated mongodb linden pymongo current ubuntu mongodb fixture argument package installer mongodb server analysed default behavior output figure illegal filesystem ignore tabular output graphs deprecated bugfix pymongo chrome changelog python method handle security system setuptools someone distribute virtualenv option unicode repository fixture fixture binary function moscon initial public symlink server server deprecated distribute favourite package plugin installation install deprecated multicall analysis directory updated viewer chrome bisesi public release startup", "pypi_keywords_clean": ""}, "/django-comments-xtd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework support database", "pypi_keywords_clean": ""}, "/pamqp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "january encoder decoder codegen decoder general agnostic python documentation license support python python encoder", "pypi_keywords_clean": ""}, "samreay/chainconsumer": {"git_readme_keywords": "conditional import statistic method legibility coloured parameter correlation elliptical gaussian install dependency michael burgess murray michael reflect constant confidence interval affect markdown convergence output initial zenodo ability control dictionary mutation default colour support gaussian control legend parameter covariance pdf diagnostic unnecessary incorrect updating refactor specify legend subplot parameter covariance calculation central quality relevant kernel density amount default default figure output remove compatibility ability specify division default burgess matthew updating example documentation installation updating minimum density estimator specification project structure example number generation selection control shading specify legend migration configuration steven murray scatter uniform installation install chainconsumer common import updating geweke diagnostic bunch increase amount symmetric morningstar common summary statistic rainbow extreme weighting ability remove yellow likelihood increase control troxel eduardo previous global posterior posterior maximum parkinson caitlin creation surface specify watermark subplot location summary behaviour chainconsumer library ranges bugfix python reference summary krause dedelson michael troxel method output maximum comparison stackoverflow updating legend output bugfix minimum version likely overlap contour shading zenodo release coloured scatter history weight shading opacity contour global determination library consume something posterior colour specify confidence control subplot overriden python contour different matplotlib ability gaussian kernel visible zenodo structure updating updating package significant maximum posterior colour parameter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package", "pypi_keywords_clean": ""}, "inveniosoftware/invenio-oaiserver": {"git_readme_keywords": "documentation available invenio copyright", "git_description_clean": "invenio module adds fun platform", "git_keywords_clean": "", "pypi_description_keywords": "preparation compatibility performance identify improved performance invenio copyright response elasticsearch initial documentation available marshmallow", "pypi_keywords_clean": "invenio"}, "tylerdave/prompter": {"git_readme_keywords": "prompt yesno please look click stuff install prompter install prompter import yesno prompt jenn prompt false yesno prompter simple prompter install prompt development version import prompt github stable version master anything advanced", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install prompter n false simple cui cui prompt install yesno prompt prompter simple false yesno python prompter github version master python please jenn prompt stable development version yesno n prompter import prompter install import prompt prompt yesno", "pypi_keywords_clean": ""}, "/spambayes": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "veltzer/pyanyzip": {"git_readme_keywords": "pyanyzip module pyanyzip pyanyzip", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyanyzip compressed", "pypi_keywords_clean": "python zip gzip"}, "kata198/queryablelist": {"git_readme_keywords": "value equal provided custommatch need support method create param result queryablelist type new collection queryablelistobjs assumes collection fieldname execute query customfilter job contain flask indexedredis splitby param reusable query powerful filter need need implement series filter type copy collection order link method powerful lambda function add link queryablelistobjs handle query number filteror build reusable type advance type full pydoc type need simple chaining impossible large queryablelist queryablelist collection field equal filtered pass queryablelistobjs filter building reusable create queryablelist object various containsany implement single collection building chain execute full queryablelist equality operator notin param splitcontainsany tuple splitby chain pattern filtering identity equality pattern need type xor simplify perform single queryablelist contain various special field value pydoc documentation messy impossible provided number arbitrary queryablelistmixed queryablelist generic common query multiple filtering provided value identity inequality common extending copy method class querybuilder element match operation example splitby containsthis boolean logic querybuilder class parameter element powerful containsthis param satisfied inequality operator value isnull contain provided large number access filtering function section documentation pydoc fieldname field build operator isnot second containsthis notcontainsany add sub splitnotcontainsany link chain equal available applied order value contain applied example possible perform chaining query several indexedredis perform example extending sub xor addfilter filtertype several create copy extending queryablelist return queryablelist copy current tedious simple single method isnull provided common pattern method add filtering count advance pass constant drill django flask different extendable implement method object function parameter filtertype method value gt", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value equal provided custommatch need support method create param result queryablelist type new collection queryablelistobjs assumes collection fieldname execute query customfilter job contain flask indexedredis splitby param reusable query powerful filter need need implement series filter type copy collection order link method powerful lambda function add link queryablelistobjs handle query number filteror build reusable type advance type full pydoc type need simple chaining impossible large queryablelist queryablelist collection field equal filtered pass queryablelistobjs filter building reusable create queryablelist object various containsany implement single collection building chain execute full queryablelist equality operator notin param splitcontainsany tuple splitby chain pattern filtering identity equality pattern need type xor simplify perform single queryablelist contain various special field value pydoc documentation messy impossible provided number arbitrary queryablelistmixed queryablelist generic common query multiple filtering provided value identity inequality common extending copy method class querybuilder element match operation example splitby containsthis boolean logic querybuilder class parameter element powerful containsthis param satisfied inequality operator value isnull contain provided large number access filtering function section documentation pydoc fieldname field build operator isnot second containsthis notcontainsany add sub splitnotcontainsany link chain equal available applied order value contain applied example possible perform chaining query several indexedredis perform example extending sub xor addfilter filtertype several create copy extending queryablelist return queryablelist copy current tedious simple single method isnull provided common pattern method add filtering count advance pass constant drill django flask different extendable implement method object function parameter filtertype method value gt", "pypi_keywords_clean": "queryablelist query list filter objects eq ne lt gt equals compare comprehension orm queryable django flask indexedredis contains icontains"}, "themis-project/themis-finals-checker-result": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "DamianZaremba/django-social-auth-trello": {"git_readme_keywords": "package installation available software redistribute version license warranty general public fitness particular particular purpose merchantability fitness public license zaremba warranty merchantability software foundation license copyright django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software redistribute version license warranty general public fitness particular particular purpose merchantability fitness warranty merchantability public license zaremba license copyright software foundation", "pypi_keywords_clean": ""}, "biocommons/eutils": {"git_readme_keywords": "parsing facilitate access ipython branch feature product pythonic interface install default branch welcome development throttle necrosis middle development environment feature example instance entrezgene important genomic protein registered unregistered arbitrary particular access essential reference alternate stability example commit message ticket information variant interface python package optional caching package specification makefile automatic", "git_description_clean": "simplified searching fetching parsing records ncbi using interface", "git_keywords_clean": "ncbi bioinformatics genomics", "pypi_description_keywords": "parsing facilitate access ipython branch feature product pythonic interface install default branch welcome development throttle necrosis middle development environment feature example instance entrezgene important genomic protein registered unregistered arbitrary particular access essential reference alternate stability example commit message ticket information variant interface python package optional caching package specification makefile automatic", "pypi_keywords_clean": "bioinformatics"}, "fabiocaccamo/django-maintenance-mode": {"git_readme_keywords": "machine application instance download restart application separate default therefore terminal license database prevent package project context prevent database maintenance configuration optional middleware address execution heroku installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "machine application instance restart application separate worker therefore license database prevent package project prevent database database access configuration optional middleware execution heroku installation", "pypi_keywords_clean": "django"}, "Ezibenroc/pyroaring": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package platform platform pyroaring instance cpython version instance modify addition element wheel diference equality system instance version pyroaring account roaringbitmap archflags removal membership roaring contiguous classical gcc compilation installation overwrite behavior output installation operation average install version element removal implemenntation command compile install pyroaring roaringbitmap several performance feature constructor efficient build pyroaring manual compilation element addition library example benchmark constructor element system operation pyroaring difference symmetric install pyroaring instance install subset conversion version gcc environment compiler command compilation build selection control compilation repository build wheel pickle dump intersection difference architecture architecture gcc version github release different package pyroaring script c compiler c library symmetric diference density operation superuser pyroaring debug linux", "pypi_keywords_clean": ""}, "WoLpH/python-statsd": {"git_readme_keywords": "introduction service object inform mechanism current disabled argument graphite message average timestamp output project instance standard documentation install install carbon interaction specify status timestamp something coverage status different disabled average connection advanced graphite install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction service object inform mechanism current disabled argument graphite message average timestamp output project instance standard documentation install install carbon interaction specify status timestamp something coverage status different disabled average connection advanced graphite install", "pypi_keywords_clean": ""}, "hovel/imagestore": {"git_readme_keywords": "project gallery infomation integration gallery support prettyphoto integration veresion integration imagestore gallery integration integration intereface descripion", "git_description_clean": "django gallery solution", "git_keywords_clean": "", "pypi_description_keywords": "project gallery infomation integration gallery support prettyphoto integration veresion integration imagestore gallery integration integration intereface descripion", "pypi_keywords_clean": "django gallery"}, "jaraco/jaraco-structures": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "SimonSapin/webencodings": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard precedence declaration documentation implementation particular something compatible example detection", "pypi_keywords_clean": ""}, "mattja/sdeint": {"git_readme_keywords": "printing kloeden approximation multiple accurate likely dw integrate algorithm stratonovich documentation function kloeden library stochastic differential stochastic algorithm numerical solution function utility overview massive parallel arbitrary general characteristic function algorithm dw stratonovich stratonovich equation burrage burrage wright approximate stochastic algorithms updated printing multiple independent matlab implement support stratonovich stochastic derivative research commutative function simultaneous ordinary differential integrate simultaneous simulation bug implement prototype unicode collection numerical continuous markov equation dy specific algorithms cluster numerical treatment overview r\u00f6\u00dfler function column integration stochastic treatment stochastic specific algorithm wright approximation milstein algorithms similar stratonovich reference stochastic ordinary speedup g dw g kloeden scalar independent brownian numerical algorithms coefficient approximation special package numerical integration algorithms algorithm support stochastic symmetries diagonal suitable algorithm implicit version kloeden memory version bug initial condition separate function wiktorsson approximate independent multiple stochastic equation initial dy f information computer burrage improved welcome implicit alogrithm solution stochastic increase python matlab", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "printing kloeden approximation multiple accurate likely dw integrate algorithm stratonovich documentation function kloeden library stochastic differential stochastic algorithm numerical solution function utility overview massive parallel arbitrary general characteristic function algorithm dw stratonovich stratonovich equation burrage burrage wright approximate stochastic algorithms updated printing multiple independent matlab implement support stratonovich stochastic derivative research commutative function simultaneous ordinary differential integrate simultaneous simulation bug implement prototype unicode collection numerical continuous markov equation dy specific algorithms cluster numerical treatment overview r\u00f6\u00dfler function column integration stochastic treatment stochastic specific algorithm wright approximation milstein algorithms similar stratonovich reference stochastic ordinary speedup g dw g kloeden scalar independent brownian numerical algorithms coefficient approximation special package numerical integration algorithms algorithm support stochastic symmetries diagonal suitable algorithm implicit version kloeden memory version bug initial condition separate function wiktorsson approximate independent multiple stochastic equation initial dy f information computer burrage improved welcome implicit alogrithm solution stochastic increase python matlab", "pypi_keywords_clean": "stochastic differential equations sde sode"}, "studioimaginaire/phue": {"git_readme_keywords": "download default python search discussion package interpreter directory rothwell jython transition library control specified support second tracked functionality bridge quick bridge convenience trademark several structure installation compile anything example compatible python version support support jython system organization directory koninklijke delete individual transition procedural information jython python library platform script object transition command protocol license python interpreter brightness transitiontime keyword transitiontime specified brightness necessary tenths second pythonista personal wireless specified transition tracked device", "git_description_clean": "python library philips hue system", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "treyhunner/django-simple-history": {"git_readme_keywords": "django maintainability status python django django python request license version coverage license project documentation available documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parameter fixed fixed modulenotfound field fix python django object instance ability change various fixes fixes added function allow bug model tracking inherited ability diff support support custom model fix model drop model string manager method system fix initial project display historicalrecord instance original model support allow string added fixed exception record disallow app model added parameter callable relation original portuguese translation availability method command fix allow parameter modify method keyword django fix related allow foreign inherited model south allow alternative tracking history tracking additional fix response prevent ability show customization fix deprecation argument added available pull custom resolve maintainability template fixed bug added explicit custom fix header compatible brazilian portuguese related historical changereason fix keyword argument anonymous reorganization primary key custom object history django support processing response polish fix typeerror added python fixed bug added ability disable header history management command documentation available accessor historical new app unicode allow custom manager middleware added model django django python german support foreignkey foreign key package added show specific transformation historical instance default reverse added support request object package allow added history constructor fix support added separate database support django coverage python support object processing allow historical overridden additional fixed packaging pypi version help documentation configuration fix added management middleware fixed autofield fixed landscape configuration reverse accessor change history fixed customforeignkeyfield added possibility support support russian localization fix router change ugettext django fixed added django fix history model abstract threadlocal request support new django model duplicate history pull request build status history change parameter constructor history manager fixed error added russian allow history packaging bug historical support instance packaging abstract model work custom exclude change history accessor drop django pypi package license project project creation fixed compatibility added fixes request license django allow support fixed fix bug custom field work fixed history feature documentation status", "pypi_keywords_clean": ""}, "hicsail/polyline": {"git_readme_keywords": "algorithm required precision documentation implementation optional parameter precision optional representation installation", "git_description_clean": "python implementation google encoded polyline algorithm format", "git_keywords_clean": "python polyline", "pypi_description_keywords": "algorithm required precision documentation implementation optional parameter precision optional representation installation", "pypi_keywords_clean": ""}, "abhinavsingh/proxy-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "external dependency support request support install dependency standard authentication support install install lightweight library support", "pypi_keywords_clean": ""}, "pytorch/torchvision": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "popular contribute anaconda appreciate torchvision torchvision pytorch default documentation installation torchvision discussion discuss computer backend torchvision documentation pytorch pytorch website replacement utility", "pypi_keywords_clean": ""}, "/rtmapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package operation authentication multiple folder kasperski velikobratov documentation understand object property website element example python important understand gruenewald essential attribute understand example object jaropolk restructuredtext authorization method compare example special", "pypi_keywords_clean": ""}, "sosy-lab/benchexec": {"git_readme_keywords": "international benchexec supplementary thomas benchmarking resource lukasczyk alexander stephan lukasczyk isolation florian network access reliable measurement alexander schremmer multiple project software benchexec benchexec machine administrator container quantile access benchexec starexec github kazantsev thomas documentation philipp wendler contrary benchmarking verification framework available interference software verification filesystem generation interactive preprint reliable montgomery thomas lemberger verification software variety access addition benchexec cpachecker reporting addition previous arbitrary filesystem network m\u00fcnchen benchexec framework framework cpachecker installed contact independent project disabled zakharov lemberger sebastian default benchexec benchexec github extract statistical karlheinz friedberger reliable benchmarking specific framework reliable limitation resource integrated measurement limitation regression supplementary webpage github repository resource measurement", "git_description_clean": "benchexec framework reliable benchmarking resource measurement", "git_keywords_clean": "python cgroups linux benchmarking benchmark", "pypi_description_keywords": "benchmarking resource isolation preprint addition network access reliable measurement multiple stephan benchexec benchexec machine administrator container quantile access benchexec present contrary benchmarking verification framework available interference software verification generation interactive version thomas lemberger variety access addition arbitrary filesystem network benchexec framework installed independent project disabled lemberger sebastian default benchexec extract statistical reliable benchmarking specific framework reliable limitation resource measurement limitation regression resource measurement", "pypi_keywords_clean": "benchmarking resource measurement"}, "/lit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "execution support interface possible support multiple indication documentation official command portable flexible portable available lightweight repository discovery", "pypi_keywords_clean": "test automatic discovery"}, "iwschris/ezodf2": {"git_readme_keywords": "declaration namespace documentation feedback document painless serialisation history opendocument continuous integration abstract installation possible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cpython version filename template cpython cpython management version spreadsheet paragraph version january history package possible ezodf license documentation parameter newdoc doctype filename python installation support spreadsheet painless serialisation distribute requirement opendocument element github history version python version compatible example management version content filename parameter parameter version document serialisation prefix template support unused ubuntu python continuous integration abstract python column unecessary version february january version feedback modify spreadsheet support section python package global namespace install problem prefix declaration", "pypi_keywords_clean": "odf opendocumentformat openoffice libreoffice"}, "kennknowles/jsonpath-rw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package robust associative general string abstract syntax specific language programmatic jsonpath implementation jsonpath account result python jsonpath jsonpath python object current copyright license library library extend library particular programmatic programming python jsonpath simplest applicable unambiguous access abstract license version present install unportable particular quick additional available syntax jsonpath operator stefan goessner original proposal toolkit example license copyright software reference express failure jsonpath syntax implementation meaning string contained license specific context analyze transform python segfault meaning jsonpath syntax meaning extend jsonpath atomic access jsonpath automatic unique library explore syntax extension problematic extension jsonpath contained jsonpath arbitrary version license descend jsonpath programming language implementation access equivalent jsonpath current object traverse programmatic access goessner special problem compliance license object library automatic special", "pypi_keywords_clean": ""}, "b3j0f/b3j0f-annotation": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python intercept callable download different license number description annotation annotation reflective documentation useful annotation implementation donation annotation library several grateful asynchronous interception installation coverage development specific funding", "pypi_keywords_clean": "annotation"}, "nbrochu/requests-respectful": {"git_readme_keywords": "minimalist google maximum minimal conservative object multiple development decent separate requesting multiple realms return object behavior single machine maximum requesting github maximum request instance single request return unregistering parallel project attempt twitter maximum unregistering multiple operation kwarg requesting instance minute twitter lambda thread single realms kwarg instance exception documentation example configure installation configuration celery backend consistent record catchable fallout perform important python development configuration default difference realms realms lamba purist single thread active configuration python respectfulrequester instance docker container likely outside process exhaustive facepalm single process import second github return instance method typical return usual contribution consume kwargs usual object allow request lamba default configuration specify interval library presence introspection realms separate realms google runtime request requesting accept method amount requestsrespectfulratelimitederror exception boolean kwargs process block responsible management source software different celery", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "minimal handy minimalist object multiple return object maximum behavior single machine request instance single request parallel project attempt shell configuration kwarg configure lambda thread single separate documentation fallout perform important configuration default difference lamba purist single thread installation active configuration example python respectfulrequester instance likely outside process exhaustive facepalm single process instance method typical return usual python kwarg consume kwargs delete usual object allow request lamba default configuration specify interval library presence runtime contribution process block method amount extra boolean kwargs requestsrespectfulratelimitederror exception python conservative accept introspection celery", "pypi_keywords_clean": ""}, "mkli90/tazlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "timstaley/drive-casa": {"git_readme_keywords": "introduction documentation staley anderson anderson relevant publication description python package pipeline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tkem/uritools": {"git_readme_keywords": "project individual support compliant license tracker documentation uritools additional internet coverage version installation standard library unusable proprietary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project individual support compliant license tracker documentation uritools additional internet coverage version installation standard library unusable proprietary", "pypi_keywords_clean": "uri url urlparse urlsplit urljoin urldefrag"}, "edx/xblock": {"git_readme_keywords": "xblock functionality perform generator sample component architecture potential release xblock industry standard xblock component apache license important additional useful sensible xblock generator courseware release project distinct specification license install separate repository xblock sample activate virtualenv optional xblock courseware travis upload github coverage public python important additional information security commit validation travis common branch maintain xblock simple architecture building security packaging player packaging package prototype sample xblock version number building courseware pylint repository documentation script welcome channel freenode quality gather contributor agreement xblock deployable specific request reading runtime runtime channel discuss virtual machine template xblock collaborate interoperability installation", "git_description_clean": "xblock courseware component architecture", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jbalogh/jingo": {"git_readme_keywords": "jingo continue default simple jingo jingo direction jingo loader template jingo adapter template loader execute patch urlconf block interpolation form useful define happy render location added support module jingo release jingo configuration function function backend project moustache block inject jingo ready available support protocol configure jinja support django familiar function execute jingo template jinja loader environment extension extension function exception single jinja backend switch django jingo version support version django specify filename work localization jinja environment function default template environment continue work added application jingo entire function django support switch extension maintainer multiple template patch work simplify render django admin template template default interpolation filter effort method extra environment single support jingo support multiple django added", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jingo continue default simple html method jingo jingo direction jingo loader template jingo adapter template loader execute patch urlconf block interpolation useful html define happy render location added support documentation module jingo release jingo configuration backend project function function moustache block jingo ready available inject support protocol configure jinja support django familiar function execute jingo template jinja loader environment extension extension function exception single jinja backend switch django jingo version support version django document specify filename jinja environment function default work localization template environment continue work added application jingo entire function django support switch extension maintainer multiple template patch work simplify render html render django admin template template default interpolation filter effort method extra environment single support jingo support multiple django added", "pypi_keywords_clean": ""}, "skies-io/django-rest-api": {"git_readme_keywords": "different helpful documentation advisable authentication system request installation example django", "git_description_clean": "django rest api", "git_keywords_clean": "", "pypi_description_keywords": "different helpful documentation advisable authentication system request installation example django", "pypi_keywords_clean": ""}, "wtsi-hgi/testhelpers": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python library", "pypi_keywords_clean": ""}, "/bprofile": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction cprofile graphviz overhead affect import bprofile profile different standard output separate thread manager context current overhead thread context interpreter shutdown generation affect multiple cprofile profiler graphviz installation bprofile wrapper functionality example reference class install bprofile instance import pylab cumulative command reporting interfere installation folder bprofile install regularly program warning simple context class reference visual graphs python x profiler nothing cprofile deadlock python install generation functionality directory something import february bprofile profiler bprofile profile python profile block function allow bprofile february profiler profiler information graphviz context x program x x installation install context manager bprofile profiler prevent method decorator bprofile import", "pypi_keywords_clean": ""}, "xeroc/piston-lib": {"git_readme_keywords": "documentation additional unmaintained library develop installation productive buisness library unmaintained disclaimer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compile documentation additional develop installation library", "pypi_keywords_clean": "steem"}, "dakrauth/choice-enum": {"git_readme_keywords": "django choiceenumeration format typical django example interactive wrapper django example derived optional default typical dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django choiceenumeration format typical django example interactive wrapper django example derived optional default typical dictionary", "pypi_keywords_clean": ""}, "luisza/django-reservation": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable product django reservation administrative proposuse borrow python configure documentation parcial twitter bootstrap middleware append django djreservation backend administrative generic reservation installation configure database python append", "pypi_keywords_clean": ""}, "/cloudshell-automation-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dantezhu/flask-util-js": {"git_readme_keywords": "flask install flask javascript load usage install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "awslabs/aws-kinesis-agg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full license license bulk conversion way folder install command deaggregation standard caveat install configure publish kinesis standard kinesis lambda important fix error install mechanism example record redeploy fix example aws necessary message deaggregation allow aggregate publish build script transmitted brevity allow deaggregate lambda bulk module aggregate lambda function transmit amazon package index advantage kinesis specific language installation python copyright aws lambda example script sample build python kinesis transmitted kinesis python zip python project example functionality lambda order folder folder build deploy command build aggregation module available python example build normal python everything redeploy aggregation transmission configure example kinesis producer boilerplate important build library library module module amazon software python environment allow efficient package single deploy lambda module importable available command follow upload aws dependency producer library build upload transmission example library allow function process python source example example producer python package compliance license google module conversion example module folder kinesis message configure module module install kind express amazon kinesis record aggregation deaggregation module kinesis aggregation python record efficient transmission deploy aws available install ability aggregation single build empty python version licensed amazon basis record deaggregation software license error aws python install license specific module repository build transmit mechanism configure process kinesis kinesis stream aggregation deaggregation throughput example conversion script issue template rezip everything", "pypi_keywords_clean": "aws"}, "yougov/mongo-connector": {"git_readme_keywords": "package mydevreplset connector detailed documentation invocation connector github listing complete documentation running startup project connector question support question problem demonstrated pipeline mongodb mongodb detailed uninstalling service replication endpoint installation question elasticsearch replica installation production command development startup development trouble installation particular elasticsearch elasticsearch project custody uninstall project trouble convenient mongodb project documentation available", "git_description_clean": "mongodb data stream pipeline tools yougov adopted mongodb", "git_keywords_clean": "", "pypi_description_keywords": "package mydevreplset connector detailed documentation invocation connector github listing complete documentation running startup project connector question support question problem demonstrated pipeline mongodb mongodb detailed uninstalling service replication endpoint installation question elasticsearch replica installation production command development startup development trouble installation particular elasticsearch elasticsearch project custody uninstall project trouble convenient mongodb project documentation available", "pypi_keywords_clean": "mongo mongodb solr elasticsearch"}, "/backports-ssl-match-hostname": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "defined packager distribution compliance install ipaddress ipaddress library support security install portability brandon application implement distribution dependency something updated backport history function implement standard library function hostname certificate", "pypi_keywords_clean": ""}, "tyrannosaurus/yandex-translate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "yandex translate"}, "allanlei/flask-email": {"git_readme_keywords": "addition useful documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask extension documentation", "pypi_keywords_clean": ""}, "trilan/lemon": {"git_readme_keywords": "ability extention several useful improved", "git_description_clean": "extention app", "git_keywords_clean": "", "pypi_description_keywords": "attribute publicationmanager doctype markup widget publication several useful project inline markup extention history change jquery jquery initial schemamigration cutomizable format register custom password custom extradmin separate ability improved django version schemamigration rename request template method django compatibility appadmin modeladmin extradmin public release ability register", "pypi_keywords_clean": ""}, "/sqlite3database": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software redistribute version license download install warranty program general public fitness particular summary databasepipe package merchantability fitness public license warranty merchantability version program software foundation", "pypi_keywords_clean": ""}, "dhelbegor/easy-mask": {"git_readme_keywords": "adicionar seguinte sugest\u00e3o alephmelo exemplo alephmelo gostaria extens\u00e3o observa\u00e7\u00e3o m\u00e1scara projeto configura\u00e7\u00e3o adicione colocar template m\u00e1scara smiley instala\u00e7\u00e3o configura\u00e7\u00e3o", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package use", "pypi_keywords_clean": "mask mascaras django python ncpj telefone phone cep zipcode isbn ncm"}, "mongodb/motor": {"git_readme_keywords": "information detailed compatibility import tornado version pymongo tornado aiohttp tornado asyncio readthedocs installation project mongodb driver system version install happen documentation access mongodb version feature install sphinx directory import tornado import pymongo authentication mongodb jiryu tornado version traceback possible operating system problem sphinx tornado google mongodb source", "git_description_clean": "motor async python driver mongodb tornado asyncio", "git_keywords_clean": "", "pypi_description_keywords": "information detailed compatibility import tornado version pymongo tornado aiohttp tornado asyncio readthedocs installation project mongodb driver system version install happen documentation access mongodb version feature install sphinx directory import tornado import pymongo authentication mongodb jiryu tornado version traceback possible operating system problem sphinx tornado google mongodb source", "pypi_keywords_clean": "mongo mongodb pymongo gridfs bson motor tornado asyncio"}, "changer/cmsplugin-twitter": {"git_readme_keywords": "", "git_description_clean": "twitter plugin work django cms designed work latest api twitter", "git_keywords_clean": "", "pypi_description_keywords": "enjoy support virtualenv plugin similar account djangocms twitter plugin install plugin installation twitter", "pypi_keywords_clean": ""}, "/termite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation automation termite documentation termite development documentation", "pypi_keywords_clean": "automation web"}, "agoraplex/backports-inspect": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "original library backport assertion incorrect copyright software foundation", "pypi_keywords_clean": ""}, "mrocklin/cachey": {"git_readme_keywords": "storage consider amplification caching analytic bandwidth exponential expensive recompute epsilon halflife recomputation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "milllion consider amplification caching analytic bandwidth exponential expensive recompute epsilon halflife recomputation", "pypi_keywords_clean": ""}, "blockstack/blockstore-client": {"git_readme_keywords": "storage authentication documentation compatibility javascript response portion authentication portion validate development section increment increment version library authentication storage portion commit commit documentation distribution version commit authentication storage compatible installation github installation blockstack retrieve blockstack authentication request document release profile repository authentication response additional functionality maintainer portion library browser plugin transform contribution maintainer repository storage documentation static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "blockchain bitcoin btc cryptocurrency name key value store data"}, "/mdx-video": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scrapy/loginform": {"git_readme_keywords": "report loginform loginform example possible worked worked loginform library collection coverage report illustrated example select command loginform output available judge worked output judge worked great username password library filling", "git_description_clean": "fill html login forms automatically", "git_keywords_clean": "", "pypi_description_keywords": "report loginform loginform example possible worked worked loginform library collection coverage report illustrated example select command loginform output available judge worked output judge worked great username password library filling", "pypi_keywords_clean": ""}, "/squaremap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application visualization control hierarchic visualization", "pypi_keywords_clean": "wxpython squaremap"}, "/uk-postcode-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "andy gimblett somerville typical postcode", "pypi_keywords_clean": ""}, "Arzaroth/rapidxml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project license development required package library manual installation repository example distribution package", "pypi_keywords_clean": "rapidxml xml parsing"}, "jcomo/pyrake": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python build automation script"}, "tomchristie/django-serializers": {"git_readme_keywords": "corrospond loss recursion renderer parser way initial representation represent complex class copyright holder install fitness particular subset default possibility damage represent class serializer implementation relationship subclass disclaimer documentation overview arbitrary deserialized instance fixture serialization replacement django flexible serialization exemplary consequential convert initial fixtureserializer previous example method web related custom represenation method todo validation much deserialization validation default custom serializer number different copyright primary project christie modelserializer modification serialization default serializable datatype corrospond property custom representation example django represenation relationship framework number alternative additional metadata custom describe validation default representation installation install relationship reverse primative serializable reverse relationship binary form incidental special negligence theory liability recursive custom renderer form todo describe disclaimer implied todo factor similar compatability merchantability fitness source binary serialization deserialization method optional reference django author django serialization much way property callable datatype initial serialize comment serialization django contract dictionary indirect incidental limited implied serialize deserialize particular purpose special exemplary support deserialization class relational django current datatype primative complete compatible fixture convert comprehensive limited procurement include potential replacement primative datatype declarative serialization metadata xml natural output relational business interruption redistribution python class deserialize deserialized stream attribute object initial datatype customizable serialization current fixture procurement substitute serializer class object correct distribution software datatype method django installation rgb twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "capitalone/c7n-org": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "quoteda generate necessary interpolated execution account resource management subcommand interpolation senstive access multiple senstive proper folder addition default output directory interpolation content command additional directory selecting necessary config example please important specify authentication generation configuration config credential information arbitrary parallel installation subcommand additional initial policy service principal sdk credential custodian multiple folder structure policy execution principal access incorporate variable interpolation config information process process environment require transform distribute default runtime pertinent information", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-notificationhubs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package preview release wheel management removed operation service management provide feedback extension preview release history generation management feedback encounter operation group underlying http python microsoft library signature removed class azureenum class resource manager changelog release added operation bugfixes compatibility performance breaking algorithm response http session default behavior format syntax optional section project version generator unstable important wheel package format sdk python namespaceresource operation added bundle package signature operation syntax positional initial running operation parameter default python python parameter microsoft response initial notification sharedaccessauthorizationruleresource general breaking external context manager behavior unrecognized execute callback parameter added wheel extension library complete", "pypi_keywords_clean": ""}, "eventable/vobject": {"git_readme_keywords": "package vavailability support underlying icalendar eventable support vobject computable dateutil datastructure license useful contentline component paramname similar application foundation understood sophisticated operator vobject icalendar generator concert example vcalendar interaction readone function regular attribute project jeffrey datetime tzinfo something component access timezone chandler project attribute support project summary calendar appropriate vtimezone meaningful irrelevant icalendar convenience tricky different tzinfo version prodid installation install access dtstart tzinfo foundation chandler special vobject vobject", "git_description_clean": "python package parsing creating icalendar vcard files", "git_keywords_clean": "", "pypi_description_keywords": "hcalendar unicode dateutil description", "pypi_keywords_clean": "vobject icalendar vcard ics vcs hcalendar"}, "pavelsof/stltimelogger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "control installation current anything second plaintext argument installation standard fulfil similar different approach additional version control standard python curiousity functionality arbitrary editor anything uninstall manager arithmetics python package interval inclusive", "pypi_keywords_clean": "cli time logger"}, "Aluriak/accc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example alphabet complex compiler compilable generate mutation heavy modification compare implementation something appear convert langage vocabulary speaking evolacc surprise throw neutral produce something alphabet present compiler python modification python implementation object langage evolution simulation python compilable github compilable produce project evolution problem compilation alphabet indentation vocabulary follow someone compiler implementation compiler instanciation output langage correctness compiler awful modification object compose langage compiler object current object iterable upload instanciation example correct correctness configuration output illogic", "pypi_keywords_clean": "compilation compiler correctness"}, "/firepython": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "homepage python firelogger", "pypi_keywords_clean": ""}, "sunlightlabs/sunlight": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "command output contribute command similar ambiguous documentation single project project attempt library support license concise example server encouraged default search likely result powerful enviroment variable script sunlight register address source clause", "pypi_keywords_clean": ""}, "/mapnik": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "mapnik mapbox mapping carteography"}, "smarkets/flake8-strict": {"git_readme_keywords": "compatibility limitation previous change opinionated argument replaced erroneous comma newline omitted install unpacking function future python allow github generator library unlikely license copyright compatible python python comma status support module version number unicodedecodeerror import multiline renamed pycodestyle custom trigger installation support python function construct definition valueerror plugin comma python ironic function parameter updated pycodestyle source incompatible pycodestyle trigger decorator", "git_description_clean": "plugin checks python code set opinionated style rules", "git_keywords_clean": "", "pypi_description_keywords": "compatibility limitation previous change opinionated argument replaced erroneous comma newline omitted install unpacking function future python allow github generator library unlikely license copyright compatible python python comma status support module version number unicodedecodeerror import multiline renamed pycodestyle custom trigger installation support python function construct definition valueerror plugin comma python ironic function parameter updated pycodestyle source incompatible pycodestyle trigger decorator", "pypi_keywords_clean": "plugin strict hanging indent trailing comma trailing commas"}, "myGengo/mygengo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thread job job group entry function simple mygengo service job reviewable quality incomplete documentation function cobble private key rating multiple library mygengo default cancel purchase revise mygengo share comment example convenience method version python false false default incomplete comment instance mygengo captcha wrong much dictionary entry requeue job new job private mygengo specific job python interface sandbox api status optional optional requeue comment comment list pairs example error message mygengo api whethe send attention parameter translation language script convert example text job catch image example object example python interpreter method access course captcha url image uber dictionary delete example api optional balance mygengo hamburger method value url source language additional http full job human translation optional source optional additional credit upon rejection issue tracker docs mygengo optional unpaid id translation mygengo staff image text recent mygengo python translator senior world access priority moment explain rejection message optional sandbox optional rejection example optional epoch respective com twitter head mygengo relevant pairs format mygengo ohgodwtfisthis interpreter ala captcha value requeue default id job work reason rejection specific revision communicate mygengo senior translator describing revision translator optional translation human comment job translation api call mygengo share feedback ryan mygengo machine translation yo exist uber id job purchase description mygengo many different unpaid available public optional dictionary describing cancel job production example convenience optional api install simplejson ala question new captcha retrieve optional api translating similarity entire batch mygengo directory job mygengo comment thread translation job problem solve text convert captcha image version mygengo api manage python library full documentation function anyone action key dictionary new comment return machine api simpler solve mygengo send call dictionary key timestamp filter easy installation public key mygengo full project issue reason preview image github project acceptable format directory execute particular job revision job mygengo sandbox dictionary object job cancel requirement language api version translation complete available wrong url tricky problem reject text acceptable yo optional optional comment quality machine mygengo end dictionary comment image captcha mygengo example comment describing send mygengo mygengo communicate source head list revision mygengo translation language pairs batch example documentation full end public epoch timestamp comment optional job comment api docs id revision job description url new", "pypi_keywords_clean": "mygengo translation language api japanese english"}, "3DLIRIOUS/meshlabxml": {"git_readme_keywords": "development workflow course meshlab useful powerful muparser library example measure source system install directory complex meshlabxml python version quatrefoil complex script unstable parameterization voronoi functionality something similar implementation meshlab windows python script development measure number meshlabserver executable voronoi nauseam meshlab script default blender midpoint butterfly cylinder icosphere laplacian taubin measure stanford openscad blender project meshlab meshlab familiar percentage number example windows status repository change duplicate interface meshlab accomplished problematic possible measure script console visual feedback unrelated machine computation section stanford bunny filterscript button reload taubin twostep workflow production rainbow voronoi isometric headless meshlabserver measure reload button orange available meshlab instance example b geometry translate meshlabxml installation reorient release editor console triangular output meshlab subdivision meshlab general sufficient understand certain general script icosphere annulus version example meshlabserver output meshlab additional function voronoi numbered combination console course documentation meshlab output several deform invert border public output example possible workflow documented addition company license muparser function extension meshlab meshlab license understand function measure possible simplify", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tbenthompson/cppimport": {"git_readme_keywords": "python extension packaging distribution extension module loaded extension extension loaded necessary compilation incremental library python recommend python productivity python packaging module library extension parallel compilation terminal command library header standard library support incremental technical description license folder source variable module available variable configuration block x install additional output loaded simpler simpler language development process example extension python python available example cppimport version description cppimport compiler linker install terminal import determine import system compilation workflow checksum import result output extension extension python recompilation configuration header compilation recommend compile information output helpful enough compiler placed folder python interpreter incremental compilation ccache accept request module multiple source module configuration linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "visual build python extension loaded extension library python parallel compilation library header python visual configuration block x install cppimport first development process package result import determine import hook system compilation result output import system system global compiler python interpreter c python module configuration packaging distribution extension loaded module library phrase cppimport technical description license additional import c language please simple extension example cppimport version example import success compiler linker install terminal cppimport comment workflow configuration header compilation recommend system c multiple source necessary compilation modify first productivity floor development python packaging enable parallel standard library support incremental folder source variable module found first linux global modification first section package import hook modify python recompilation extension extension challenge making output helpful enough checksum import module command cppimport extension module python import incremental recommend python terminal command available variable suggestion cppimport output loaded simpler simpler language extension python python available example description cppimport c source compile information placed folder incremental compilation ccache", "pypi_keywords_clean": ""}, "ecell/ecell": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dcramer/piplint": {"git_readme_keywords": "sensitivity package environment requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sensitivity package environment requirement", "pypi_keywords_clean": ""}, "baverman/covador": {"git_readme_keywords": "support default validation library callable interface optional argument endpoint aiohttp tornado library processing covador", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support default validation library callable interface optional argument endpoint aiohttp tornado library processing covador", "pypi_keywords_clean": ""}, "ajtowns/beanbag": {"git_readme_keywords": "beanbag beanbag information beanbag github access module example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "beanbag beanbag information beanbag github access module example", "pypi_keywords_clean": ""}, "/drumhat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "raspbian initial release module initial library repository function", "pypi_keywords_clean": "raspberry pi drum hat"}, "mjszczep/pystasm": {"git_readme_keywords": "pystasm library wrapper stephen milborrow consult pythonic mjszczep license library subject documentation information software stephen documentation library finding license agreement software library version installation example wrapper finding milborrow original description reference information pystasm library agreement available specific wrapper request license software information specific", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software information finding", "pypi_keywords_clean": ""}, "/python-saharaclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack sahara version package license documentation documentation contribute package installation module version repository development license version", "pypi_keywords_clean": ""}, "indeedlabs/indeed": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Parkayun/initpy": {"git_readme_keywords": "initpy quick tornado web python install falcon project generate project web project installation sourcecode project installation project template status generate install initpy initpy version single python python module documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initpy quick tornado web python install falcon project generate project web project installation sourcecode project installation project template status generate install initpy initpy version single python python module documentation status", "pypi_keywords_clean": ""}, "Skyscanner/pyfailsafe": {"git_readme_keywords": "standalone default incremental isolation aiohttp project failsafe retrypolicy failsafe dependent comprehensive circuitbreaker interface operation pyfailsafe install possible specify possible circuit breaker publishing pyfailsafe abortable immutable developer advantage breaker instance outside circuit installation coroutine example account abortable execution exception fallbackfailsafe library function everything process number mechanisms instance stateful immediate failure version number document specify particular virtual environment interface circuitbreaker system overload library handling overload circuit parameter failure circuit external simplify handling failsafe pyfailsafe contribution failure consecutive component", "git_description_clean": "simple failure handling failsafe implementation python", "git_keywords_clean": "retries fallbacks aiohttp asyncio", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/cmf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "catchment scientific programming extension programming language extension publication development modelling hydrological philipp documentation hydrological programming everything software connectible individual management universit\u00e4t institute landscape programming language conceptual environmental modelling modelling software", "pypi_keywords_clean": "hydrology catchment simulation toolbox"}, "iamsteadman/bambu-mail": {"git_readme_keywords": "package toolset backend urlconf provider package readthedocs extensible addition provider documentation postmark twitter iamsteadman current provider specify shortcut function namespace package overridden markdown prepare internationalisation package mailchimp installation install template newsletter upgrading install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package toolset backend urlconf provider package extensible addition provider documentation postmark twitter iamsteadman current provider specify shortcut function namespace package overridden markdown prepare internationalisation package mailchimp installation install template newsletter upgrading install package", "pypi_keywords_clean": ""}, "mishbahr/django-responsive2": {"git_readme_keywords": "default python verbose twitter bootstrap comparison medium screen medium handful awesome development project screen request object install prevent content bootstrap bootstrap several different version precious bandwidth height displayed medium content useful content different screen devicepixelratio particular responsive attribute property bootstrap experimental django bootstrap responsive template documentation license experimental foundation framework matched information object attribute config python configuration visible display property different content example template middleware increase example python verbose example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default twitter bootstrap comparison medium handful awesome development project configuration install request object prevent content bootstrap bootstrap several different version precious bandwidth height displayed medium content useful content devicepixelratio particular responsive attribute property bootstrap experimental django bootstrap responsive template documentation license experimental foundation framework matched information object attribute config visible display property different content example template middleware increase", "pypi_keywords_clean": "responsive"}, "chimpler/pyhocon": {"git_readme_keywords": "timedelta farquet farquet directory standard bdmartin concatenation whitespace duplicate unquoted pvshewale fran\u00e7ois madiath atomerju atomerju fran\u00e7ois farquet pyhocon standard directory example applied support laserson laserson support difference substitution kristiansen lillekemiker chreekat relative palanciuc douglas element proskurnev ariloulaleelay compact representation terentiev prashant installation available example ostapenko conversion hugovk afanasev afanasev afanasev derkcrezee derkcrezee directory attribute hugovk hugovk christopheduong agnibha agnibha sambible christophe accuracy joelgrus anthony movermeyer elkmonster dougxc dictionary mishkin daenyth lillekemiker yizheng duration cryptofred cryptofred locating cosminbasca cryptofred conflict halliwell joehalliwell anzinger sanzinger witzany tommassino lutsanych afanasev derkcrezee kuberek bkuberek automatic cryptofred richard", "git_description_clean": "hocon parser python", "git_keywords_clean": "python hocon configuration parser", "pypi_description_keywords": "yaml content convert provide parser", "pypi_keywords_clean": "hocon parser"}, "/zeroc-ice": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python extension mapping synchronous asynchronous python infrastructure infrastructure discover internet package install icegrid icestorm distribution install support synchronous python complete multicast websocket installation recommend documentation network icestorm installation compiler available object available feature extensive extension python application python compiler available default information serialization concurrency definition language compiler communicator available python complete program python standard install package", "pypi_keywords_clean": "rpc distributed systems development"}, "eseifert/madam": {"git_readme_keywords": "software installed system different initialization management format audio release pypi management library madam digital installed installed jpeg several madam multimedia digital installation madam installed madam madam installed pycon", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software installed system different initialization management format audio release pypi management library madam digital installed installed jpeg several madam multimedia digital installation madam installed madam madam installed pycon", "pypi_keywords_clean": "asset media processing"}, "rebeccaframework/rebecca-testing": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "config automatic config fixture fixture config changelog install install odagiri original classunserthetest pyramid classunderthetest", "pypi_keywords_clean": ""}, "/cacheutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/xstatic-jasmine": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project javascript library xstatic packaging minimal support metadata xstatic", "pypi_keywords_clean": "jasmine xstatic"}, "LudovicRousseau/pykcs11": {"git_readme_keywords": "project overview useful copyright untested install command fitness particular rousseau licence merchantability fitness warranty merchantability version program software foundation variable install redistribute modify general public wrapper python python project public license software redistribute version license ludovic rousseau warranty environment variable particular purpose foundation franklin documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python mozilla various cryptoki complete compiler", "pypi_keywords_clean": "crypto pki"}, "/axelrod": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute community collection strategy contemporary research parametrization collection awesome library detailed possible extendable parametrization original example jupyter documentation tournament install install readability coverage helpful repository prisoner dilemma population dilemma research welcome axelrod reproduction previous", "pypi_keywords_clean": ""}, "fedora-infra/datanommer-models": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infrastructure datanommer datanommer bus consumer sqlalchemy model datanommer", "pypi_keywords_clean": ""}, "/flask-limiter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "memcache quickstart accounting comparison monkey default memory limiting argument decorator available bug extension constructor available deprecation counter backport configurable backend werkzeug compatibility memory storage storage available implementation storage undocumented feature limiter storage underlying storage method werkzeug refactor compatibility default support sensitive whitelist decorator exempt dynamic safety support flask decorator specify duplicate example storage backend httpexception version comparison keyword argument import flask exemption storage current function change bug compatibility hotfix decorator python flask werkzeug limiter limiter version functional flask import separation documentation endpoint changelog bug installation documentation decorator hotfix functional change strategy package coverage application backend storage dependency python support prefix upgrade limiting window improved documentation limiter flask upgrade versioneer property instance specify specific import limiter extensibility bug support multiple changelog changelog version requirement backport source constructor improved storage bug check configuration constant global kill window bug hotfix dynamic backend keyword support configurable whitelist decorator storage python memory implementation instance fallback redisstorage extensibility refactoring redisstorage unresponsive storage limiter import improved implementation limiting bug", "pypi_keywords_clean": ""}, "ondratu/docutils-tinyhtmlwriter": {"git_readme_keywords": "python project standard writer writer light command output recommonmark installation possible example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python project standard writer writer light command output recommonmark installation possible example", "pypi_keywords_clean": ""}, "maethor/avatar-generator": {"git_readme_keywords": "randomavatar installation instance licence username populate jpegphoto inspired generator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "randomavatar installation instance licence username populate jpegphoto inspired generator", "pypi_keywords_clean": ""}, "/win32gui": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python environment ability create", "pypi_keywords_clean": ""}, "/oslosphinx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "obsolete openstackdocstheme openstack freenode management previous checkout oslosphinx obsolete available repository", "pypi_keywords_clean": ""}, "matthiask/feincms3": {"git_readme_keywords": "introduction reference documentation available reachable building", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction reference documentation available reachable building", "pypi_keywords_clean": ""}, "/pyramid-simpleform": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "errorlist initial formencode", "pypi_keywords_clean": "web pyramid pylons"}, "bjodah/pycompilation": {"git_readme_keywords": "fortran complier pycompilation documentation license advisor complier gfortran compiler fortran compiler installation example compilation library pycompilation pycompilation linkline convenience permissive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fortran complier pycompilation documentation license advisor complier gfortran compiler fortran compiler installation example compilation library pycompilation pycompilation linkline convenience permissive", "pypi_keywords_clean": ""}, "/web-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "write ideal app write", "pypi_keywords_clean": ""}, "QInfer/qinfer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "regular download parameter estimation quantum parameter installed anaconda platform welcome repository information documentation bayesian sequential opening distribution release installer recommend library github development package", "pypi_keywords_clean": "quantum bayesian estimation"}, "zacharyvoase/django-qmethod": {"git_readme_keywords": "distribute software software information unencumbered software software copyright copyright library comprehensive example dedicate copyright included fitness particular example installation merchantability fitness dedication purpose commercial express software dedicate purpose noninfringement something relinquishment perpetuity liability publish contract interest software warranty detriment copyright interest particular purpose connection software", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "aewallin/allantools": {"git_readme_keywords": "package carsonc fr\u00e9d\u00e9ric ipython notebooks simple maximum sphinx documentation synthetic multiple htotdev hadamard possible deviation ttotdev access algorithms github install interval command module ubuntu output available exclude failing dedicated installation coverage example welcome documentation discussion group cantwell deviation deviation fr\u00e9d\u00e9ric meynadier sphinx format fractional frequency algorithms welcome format ubuntu documentation sphinx hadamard deviation library calculating deviation related frequency format github brownian random deviation htotdev documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package carsonc fr\u00e9d\u00e9ric ipython notebooks simple maximum sphinx documentation synthetic multiple htotdev hadamard possible deviation ttotdev access algorithms github install interval command module ubuntu output available exclude failing change dedicated installation coverage example welcome documentation cantwell deviation deviation sphinx format fractional frequency algorithms welcome format ubuntu documentation sphinx discussion hadamard deviation library calculating deviation related frequency format github brownian random deviation htotdev documentation status", "pypi_keywords_clean": ""}, "gfreezy/slacker-asyncio": {"git_readme_keywords": "fork asyncio documentation installation interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "slack api asyncio"}, "anlutro/russell": {"git_readme_keywords": "favourite example project variable available archive instance virtualenv outside required documentation python installation generate generator virtualenv process directory structure structure current russell global variable example configuration template template variable outside virtualenv filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "blog static html generator"}, "/django-debug": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django application debug orm sql"}, "rafaelmartins/dnsimple-dyndns": {"git_readme_keywords": "gentoo openrc content implementation dhcpcd hook script dhcpcd interface script gentoo openrc emerge postup function domain record dynamic hook script emerge package connection simple script domain domain function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation openrc interface openrc emerge postup function dynamic record connection simple script emerge package function", "pypi_keywords_clean": ""}, "briwilcox/concurrentpandas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download automatic download recursive insertion execute library federal reserve optimal sequential container successive twitter personal available concurrency download lookups structure installation basestring variety follow process iteration automatic concurrent wilcox hashmap lookup reserve economic increase ability interact abstract", "pypi_keywords_clean": "panda pandas dataframe data frame analysis"}, "fcurella/django-zipfile": {"git_readme_keywords": "django swallow exception template specify multiple optional subclass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "templatedoesnotexist exception swallow templatedoesnotexist specify multiple optional templatezipfile templatedoesnotexist subclass", "pypi_keywords_clean": ""}, "MacHu-GWU/uszipcode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "polygon upgrade behavior multiple document powerful documentation complete distance location complete document documentation install developer tolerance version compatible customize welcome documentation housing employment helpful geography timezone insensitive programmable zipcode zipcode database information population database crawler education collection different", "pypi_keywords_clean": ""}, "scoder/lupa": {"git_readme_keywords": "coroutine wrapper lua work elegant wild partial rewrite assume amalgamation pass flag use lua lunaticpython cython new lupa default behaviour version lupa multiple careful passing lua way cycle binary wolf elegant lupa enable computational lua therefore iteration support behaviour many access object lua runtime class python false object certain python lua predictable lua indexing work enable global thing value iterable use therefore indexing binary extension lookup therefore raw speed iteration python python simplify low memory use binary machine python lookup python attribute lua lupa basis lua rewrite lunaticpython concurrent access work linux setup language runtime indexing lua necessary first value explicit communication lua ecosystem use function iteration first memory setup sequential mapping certain protocol lua iteration use protocol specific python ambiguous amalgamation phonetic arbitrary python mapping content similar method reasonable use access explicit lua arbitrary necessary flag runtime small object passing python flag array lua passing lua binary equivalent python value termination mapping lookup mechanism control hack backup language view object wrapper lua balance use cython additional passing lupa python example syntax separate thread setter function complete binary memory footprint indexing distinguish lua look kind straight development lupa callable python image lupa python reason separate lua python help method new indexable lua right thing constant unwrapped passed simple heuristic heavy static global symbol wrong use python coroutine protocol python provide access coroutine support build lupa please contact passed create create lua wrapped object third party image parallel lua coroutine function example python iteration allegory python luajit dynamic python flag explode tuple pass python iterable latter therefore lupa loop termination number module lupa version possible example lua footprint lua use multiple access lua lua access length operator single lua cpython partial python raw binary module passed wrapped work mapping method function copied python integer local major python lupa runtime default simple object argument lua possible use link luajit configuration call sum system first argument normal python lupa image work whitelist convenient use lupa module access low call argument lua cpython access indexing python protocol special function replacement lua default python lookup python enable parallel flag passed passing dict lua python iteration lua standard library value subject python control pass lua lua interpreter subject replacement method iterated module available lua wrapped similar termination marker lupa link dynamic lua lua function therefore similar restrict access lua lua control access box setup tradeoff simplicity lupa female context passing explode separate passed coroutine lua mechanism explicit protocol normal lua thin wrapper support indexing python second python python way lua behaviour machine standard control function mimic python passed lua lua luajit restrict view lua pass lupa similar access current indexing decide compile header keep balance access python argument call provide lua wrapped different proper coroutine library third method preferred passing parameter lupa special parameter pass work box python function lua language safely restrict luajit helper method use special parallel execution primary language language dynamic many method python anything remember unset possible utility getter setter python module pattern implementing helper protocol use first function function argument current therefore standard lua symbol visibility wrapped lua second helper positional behaviour explode value lupa object python provide simplicity speed reason negative creation python operator lua lua version callable object global lock call python public lua module function implementation linux system female wolf look platform specific runtime new method lua index attribute access negative indexing support python python wrapped lua iterate mapping protocol configurable right common pattern simple mechanism lua lookup mechanism explicit thread enable distinguish attribute type wrapped luajit library decide python positional argument call positional interface correct python mapping thing array protocol special lua object python proper work iteration lupa therefore access passed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python code lua work wrong runtime table python cython default pass flag lupa building lunaticpython cython modify merge return tuple lupa install output debug callable lua optional positional str lua wolf elegant iteration support gh new lua runtime notice permission lua development binary extension lookup therefore mapping part use binary much attribute name os x debug mode passing wrapped lupa code method supported language runtime main necessary iteration first use protocol distribute sublicense place work undefined behaviour object passing support counter note example access set additional compiler none replacement equivalent python pass none preference mechanism control implementation several fix cython view object fixed undefined sublicense sell start value case array setter function lua code permission hereby function lua information read separate lua supported note right special case plain python loading lupa call return pass option python coroutine build lupa provide access coroutine support fix lua passed create create lua download unpack lua see function final getter setter number tuple pass python iterable use multiple footprint lua loop termination lua indexing run python undesired object import lua install case double machine code python raw table first local major right code link luajit configuration call cython building patch titansnow nested python object unpacks error prefix native implementation work whitelist call argument explicit getter lua cpython access indexing python protocol object string behaviour consistent code support generic wrapping default python lookup python enable parallel flag passed counter unpacked use control value subject development package due reference use copy lua interpreter module available mode patch build luajit statement item therefore similar metatable support compatibility gh nil python control access support item copy software space passing tradeoff simplicity lupa female make sure similar table lua represent gh fix python object lua mechanism thin wrapper machine standard lua pass resource leak cython gh particular purpose provide lua coroutine state lua stack building unreleased passing parameter lupa special parameter pass work box python function code wrap safely restrict parallel execution primary language pipe kind availability lua patch brian attribute lookup lupa copyright free charge current therefore interaction python deallocate due gh lua order ignore mechanism implementing access item titansnow gh global lock lua version creation python attributeerror fix msvc callable getitem os version passing lua gh provide read lua new cython specific c read set lua iterate garbage collection table therefore list lua object internal thread enable leave time callable positional argument several error thing array python proper directory build lupa therefore forgot set korobov availability write equivalent elegant wild assume amalgamation new lupa default behaviour wrapping python additional installation lua way code lua portability fix lupa enable ignore failure lua iterator korobov gh access object class python predictable lua clean stack issue fix target choice action contract access table python lookup double underscore work linux setup lua ecosystem python method python special memory setup sequential mapping building download deal software specific python ambiguous value iterator serious resource access explicit due behaviour meta fix binary lua passing note undesired value termination runtime end see copyright argument see system code lua error object reference limitation wrap callable latin lupa memory footprint complete binary indexing distinguish kind straight development lupa python reason runtime state new option final call indexable lua meta table unwrapped passed building lua please contact library loading function example threaded case deletion patch warranty kind dynamic python lua obj module lupa dobrov gh item lua access lua length operator variable make space lua whitelist safe cpython partial binary module start copyright notice target integer simple object possible use fix compile log gh sum system convenient use create userdata set public see fixed represent sum first public passing dict agile development c stefan loading fixed lua python fixed python iteration lua lupa change none nil state global lua wrapped similar lupa link code item dynamic lua process provide method compile lua function compatibility lua lua lua support note brian moe easy hack stack trace helper function sequence counter liability explicit protocol first item cython c clean build leak table access python install lua permission notice proper coroutine set environment obj note luaruntime argument lua syntax unpacks tuple latter code ordinary lua configuration mechanism python module lua type module function documentation iterate plain change log addition msvc install install length table change case see table interface call python lua module end install mechanism pick mit license purpose noninfringement index luajit lua mapping protocol control mechanism support building installation process moe item iterator python leak next mechanism explicit callable fix distinguish attribute contract tort exception iteration compile lua call positional python mapping lookup use protocol special item attribute work iteration msvc build rare case software software access passed coroutine wrapper patch jason want safely lua call x lua careful passing lua dll index item table remember item deletion omit parameter support lua read access free gil fix serious code attribute lupa make fitness particular python lua plain array name note therefore indexing iterable use flat sequence python note iteration python case iterator table creation python attribute rewrite lunaticpython concurrent access static agile install development explicit communication copy python patch aaiyer option script case lua runtime python python str release license arbitrary python mapping content similar method easy write safely free gil runtime small language large see official software lua method code mapping lookup loading binary string normal redundant error wrapper lua cython additional python example separate thread syntax possible code write dynamic lua look method new callable python tuple object image lupa multiple luaruntime generate fat lua addition right thing module api simple heuristic heavy static global symbol clean lua noninfringement event lupa standard print due broken fix lua coroutine python flag allegory flag explode therefore lupa version possible python tuple heuristic fail evaluation support lua access software permit bound python work mapping space code binary support runtime default indexing python argument lua note building attribute read normal python lupa image lupa module code new addition lua vandenberg gh script order meth lupa note method example code object lua subject replacement python clean cython fixed second time patch gareth user code indexing wrapping set false code broken context passing explode separate argument patch set correct note behaviour base directory python second lua patch next lua c compiler mimic python passed lua everything forgot restrict view iteration fix access current determine run argument call wrapped different method preferred communication pipe see help set note distribution simplify cython fix argument second method python kind express code example charge person use lupa func obj utility first function function argument symbol visibility second helper positional api behaviour explode value lupa default building simplicity speed object protocol callable object linux system simplify table limited look lua propagate bound method lua fixed runtime new attribute access common pattern support python unpack lupa configurable safe attribute lupa download lua lookup sergey dobrov crash requesting luajit library environment variable passed first shutdown luaruntime counter start software deal lua run meta method next example partial rewrite value native use lua official note python call version lupa lua state multiple typeerror python space cycle binary patch sergey case anything lua therefore fat binary behaviour many object certain indexing work iterated note enable global lua return code fix fixed thread iterator counter liable claim thing value obj func low memory raw speed python simplify mikhail korobov lua lupa basis lua fix several indexing lua first value use function set python python garbage certain protocol lua iteration repository source lua evaluation amalgamation phonetic internal wrapper reasonable use computational code lua arbitrary necessary flag patch john function code build gh restriction space python connection software lua binary luaruntime instance fix passing fix crash backup language point installation software use balance use passing lupa simplify interaction copyright c build everything passing table lupa lupa call time python help mingw build copyright permission constant fail set wrong use protocol python none crash lua side wrapped object third party image parallel fixed several item access item new python iteration python luajit name latin python set note flag example lua run lua method access obj meth distribution fix python list iteration error single lua leak nested lupa base passed wrapped code code method function copied python python lupa incompatible first argument luajit lupa public release copy modify access low replacement lua special function note release package install john vandenberg standard library idiomatic lua binary lua merge publish python control state patch implementing explicit pass lua method iterated represent object code language termination marker support library stack leak single threaded stefan behnel merchantability fitness restrict access fix regression box setup unpack archive install lupa lua table new method passed coroutine special method single python unpacked time python reference iteration want use wrap bound normal lua support indexing way lua python python control function behaviour lua luajit use configuration lupa similar indexing decide compile header keep balance fail provide source distribution license lupa library third c name global lua new helper access luaobject lua language propagate python luajit table fix helper method use special support loading language dynamic many interpreter easy remember unset last value table case python place gh copy patch mikhail pattern implementing helper protocol use table iteration standard lua wrapped lua code python archive lupa object python reason negative operator lua new module lua determine function implementation female wolf platform specific case user substantial cython new method lua negative indexing python wrapped simple mechanism version os please see list post type wrapped decide python behaviour len unset table fix iteration publish distribute code generic lua object table size rebuild aaiyer gh", "pypi_keywords_clean": ""}, "mikepk/pybald": {"git_readme_keywords": "infrastructure validation complex mapping inspiration configuration documentation management persistence bicking template framework inspired sqlalchemy generation validation decorator convenience", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility compilation utilizing mapping pybald changelog updated default mechanism november compatible previous bicking global context library processing validation database session project markdown support configuration alembic sqlalchemy application context formalchemy default behavior persistence interpreter database consistent interface documentation pybald coverage registry global exception handler context errormiddleware stacktrace template errormiddleware consistent january newrelic instrumentation security inspiration context threadlocal context january warning newrelic adapter february complexity numerous visibility multiple pybald sqlalchemy session management generation validation pipeline pybald webasset primary mechanism convenience function infrastructure warning controller htmlliteral browser template default webasset pipeline template framework inspired pybald package validation complex decorator django documentation pybald pybald previous pybald sqlalchemy dependency requirement", "pypi_keywords_clean": "web framework"}, "/winstats": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status retrieval minimal install perfmon performance common additional memory windowsxp perfmon performance", "pypi_keywords_clean": ""}, "erikvw/django-crypto-fields": {"git_readme_keywords": "unique algorithms dataset encrypted tracker source protection encryption multiple support lookup security encrypted folder analysis separate maintainability physical security encryption physical available history downstream python mysql python important research identity password protection collection management application compound dataset dataset optional default security production system db important module analysis contribute dataset mysql django example python python encryption source encryption sensitive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unique algorithms dataset encrypted tracker source protection encryption multiple support lookup security encrypted folder analysis separate maintainability physical security encryption physical available history downstream python mysql python important research identity password protection collection management application compound dataset dataset optional default security production system db important module analysis contribute dataset mysql django example python python encryption source encryption sensitive", "pypi_keywords_clean": "django fields encryption security"}, "/coala-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection outside", "pypi_keywords_clean": "coala utils bears decorators"}, "vishnubob/midi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sequencer compile platform extension sequencer streams advantage sequencer extension install package similar sequencer", "pypi_keywords_clean": "midi alsa sequencer"}, "ajakubek/llist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform standard download workload software unpack license install current implementation documentation cpython current development available install extension sequence install package", "pypi_keywords_clean": "linked list"}, "/bae-log": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "bae log sdk"}, "globocom/m3u8": {"git_readme_keywords": "contribution welcome initialization default playlist custom contain element feature something variable documentation library namedtuple standard unique element documentation important possible similar available playlist object demand implement represent multiple example follow unencrypted encrypted python regular content available variant specify object regular element multiple documentation alternative possible retrieve function encryption encrypted attribute information different variant regular playlist traverse request related streams example variant playlist", "git_description_clean": "python parser http live streaming hls transmissions", "git_keywords_clean": "hls python parser", "pypi_description_keywords": "contribution welcome initialization default playlist custom contain element feature something variable documentation library namedtuple standard unique element documentation important possible similar available playlist object demand implement represent multiple example follow unencrypted encrypted python regular content available variant specify object regular element multiple documentation alternative possible retrieve function encryption encrypted attribute information different variant regular playlist traverse request related streams example variant playlist", "pypi_keywords_clean": ""}, "enthought/jigna": {"git_readme_keywords": "build status javascript python jigna install pyside particular feature flexibility expressibility light equivalent angularjs codecov status python process pyside installation jigna project directory example install package manager several angularjs toolkit coverage interested recent dependency status jigna jigna feature jigna directory jigna bridge angularjs installation manipulate powerful install jigna application logic webkit support logic flexibility interface support browser documentation status", "git_description_clean": "html frontend traits models", "git_keywords_clean": "", "pypi_description_keywords": "build status javascript python jigna install pyside particular feature flexibility expressibility light equivalent angularjs codecov status python process pyside installation jigna project directory example install package manager several angularjs toolkit coverage interested recent dependency status jigna jigna feature jigna directory jigna bridge angularjs installation manipulate powerful install jigna application logic webkit support logic flexibility interface support browser documentation status", "pypi_keywords_clean": ""}, "getsentry/raven-aiohttp": {"git_readme_keywords": "licence message amount limited limited python width information sentry limited amount sentry website transport sentry tracker channel version python asyncio framework internal python documentation tracker python queuedaiohttptransport sentry python asyncio transport asyncio interface interface information system transport aiohttptransport", "git_description_clean": "aiohttp transport", "git_keywords_clean": "sentry python aiohttp asyncio", "pypi_description_keywords": "licence message amount limited limited python width information sentry limited amount sentry website transport sentry tracker channel version python asyncio framework internal python documentation tracker python queuedaiohttptransport sentry python asyncio transport asyncio interface interface information system transport aiohttptransport", "pypi_keywords_clean": ""}, "optimizely/optimizely": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "optimizely"}, "pydanny/whichcraft": {"git_readme_keywords": "package python project sponsor django javascript python whichcraft functionality python django britecore awesome whichcraft multiple function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python mention python support tarball python compatability support project history rooterkyberian status python whichcraft functionality release whichcraft support python multiple python nickcoghlan function version", "pypi_keywords_clean": "whichcraft"}, "gitpython-developers/gitdb2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "object database", "pypi_keywords_clean": ""}, "camlorn/libaudioverse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flexible realtime package support feedback tracker specific language interest listener libaudioverse documentation accuracy complex libaudioverse attempt perspective building libaudioverse webaudio libaudioverse recorder intercept language question addition project support surround schroeder allpass documentation libaudioverse library functional oscillator available capable reference language performance generator installation creation variety confirmation github building reference definitive following process indirection libaudioverse approach overview following summary libaudioverse libaudioverse libaudioverse allpass network available libaudioverse possible implement environment libaudioverse subscribe possible potential convolution possible configurable meaningful everything bathroom architecture bathroom cathedral legalese demonstrate critical synthesis library libaudioverse specific libaudioverse language equivalent demonstrate acyclic configuration complex platform searchable schedule property address possible schedule reverberator environmental channel introduction libaudioverse", "pypi_keywords_clean": ""}, "/pyobjc-framework-corelocation": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework documentation interface translation physical documention information", "pypi_keywords_clean": "pyobjc corelocation"}, "blue-yonder/devpi-plumber": {"git_readme_keywords": "perform automate upload simplify status harness install python license volatile plumber access context manager python commandline coverage status commandline wrapper version automate example requirement", "git_description_clean": "helps automate test large devpi installations", "git_keywords_clean": "python devpi", "pypi_description_keywords": "perform automate upload simplify status harness install python license volatile plumber access context manager python commandline coverage status commandline wrapper version automate example requirement", "pypi_keywords_clean": ""}, "remiomosowon/pyeasyga": {"git_readme_keywords": "software knowledge algorithms documentation interface directory pyeasyga introduction algorithm implementation installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "algorithm library compatibility default implementation example documentation standard documentation example software knowledge geneticalgorithm documentation separate functionality directory initialisation jeffknupp population algorithms interface development history pyeasyga introduction license installation homepage selection function", "pypi_keywords_clean": "pyeasyga"}, "badzong/pypdfml": {"git_readme_keywords": "optional template reportlab document", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "optional template reportlab document", "pypi_keywords_clean": "pdf generating reportlab report xml jinja"}, "/pulp-py3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package lpvariable myproblem python compatibility modeler variable lpvariable mitchell comprehensive variable copyright library grancy license documentation generate solution lpstatus lpproblem myproblem combine status display status directory status solution lpproblem expression constraint compatibility original objective lpstatus status copyright information problem", "pypi_keywords_clean": "optimization linear programming operations research"}, "deepgram/sidomo": {"git_readme_keywords": "python command software docker container format python install audio python resurrect legacy software portable dependency dependency docker environment hello simple docker resurrect legacy ubuntu", "git_description_clean": "simple docker python module", "git_keywords_clean": "", "pypi_description_keywords": "software container simple python install audio python resurrect legacy software leaky environment portable dependency resurrect legacy", "pypi_keywords_clean": ""}, "zimmermanncode/zetup": {"git_readme_keywords": "zimmermann extensible", "git_description_clean": "zimmermann extensible tools unified project setups", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "zetup project tools config ini setup requirements extras packages package toplevel object meta subprocess process popen call"}, "ogt/workdays": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "datetime functionality", "pypi_keywords_clean": "python datetime workdays excel"}, "PyCQA/flake8-bugbear": {"git_readme_keywords": "perform package compatibility mutable character misleading unicode compatibility enabled example multiple bugfix structure persisting bugfix include opinionated introduced introduced bugfix opinionated argument instance support license configuration increment disagreement current function definition additional memory current process invisible syntastic deprecated optional martijn version production duplicate introduced bugfix equivalent variable default regular whitelist popular specify property attribute pycodestyle installation environment abandon explicit selection unexpected analyze consistent complexity everyone bugfix outdated program constant deliberate installation install explicit quality intended default bugbear disable callable unreliable control variable", "git_description_clean": "plugin finding likely bugs design problems program contains warnings belong pyflakes pycodestyle", "git_keywords_clean": "linter", "pypi_description_keywords": "perform package compatibility mutable character misleading unicode compatibility enabled example multiple bugfix structure persisting bugfix include opinionated introduced introduced bugfix opinionated argument instance support license configuration increment disagreement current function definition additional memory current process invisible syntastic deprecated optional martijn version production duplicate introduced bugfix equivalent variable default regular whitelist popular specify property attribute pycodestyle installation environment abandon explicit selection unexpected analyze consistent complexity everyone bugfix outdated program constant deliberate installation install explicit quality intended default bugbear disable callable unreliable control variable", "pypi_keywords_clean": "bugbear bugs pyflakes pylint linter qa"}, "cloudpassage/cloudpassage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "rfc lee crud interact cloudpassage config docs cleanup test sva jye account ash object object rst pypi import issue new improved lee fix update update lee update issue ash coverage documentation veresion check useragent string commit fixed issue wilson change print statement support ash comparator ash multiple different file ash docmentation update policy management version indicator halo api git sdk install docker image feature ash foo ash practical example rare dynamic commit revert routine compare building pdf docs build print move project level ash account docs wilson create merge apurva singh file improved syntax fix create hana install dockerfile import update scan deduplication functionality soft failure stab ash server group api practical editable mode false bool input sanity prior batch add server use input search field wilson new added method method prevent wilson docmentation vs ash ci time work ash coverage test branch master agent string test script passing ash initiator module climate alt make create test lee support wilson travis added url test runner python support notimplementederror exception add install args ash added docs fixed sanitizer exception ash fixed align file facilitate lee fixed ticket imp old create ash wilson docker beta updateservergroup sanity manager rev hana lee unnecessary file statement revert deduplication routine policy crud wilson license updated cpapi pkg install exception message ash wilson check hana navigate run python version cleanup docs configuration information method ash pylint deduplication module ash workdir dockerfile access level lack key align hana update jye readme ash initiator test sdk apurva installation document add cleanup pagination doc gitignore ash update ash empty account lee swap clean error documentation clone initiatescan ash soft lack added unit api image master branch doc build correction ash end file docs download unsupported python api key wilson add added server pypi ash period ash see ash wilson fixed hostname ash bool jye checking ash install ash get coverage line end python jye information api wilson documentation cpapi add get passing minimum python coverage module coverage master diff cpapi server jye code climate coverage branch basic firewall faulure ash order jye baseline detail secret string force key installation add time test coverage blank line end quick build ash module integration run parallel crud ash csm sva building documentation documented ash exception error example print list fim travis use old cpapi change revision wilson added procedure official first commit group update systemanouncement class clone repository sanity checking document ash bring test issue vs container runtime failure wrong manager ash added gitignore swap order lee clean pylint cleanup environment string composition number point new correction delete method parsing ash specific documented changelog update pagination default value command dockerfile git dockerfile clean imp behavior file added session configuration detail information store session wilson updated add ability codeclimate coverage get sam pdf docs string ash integration implement soft rev setup lee add procedure ash compare prior unnecessary print sanitization post information hana key manager python veresion alt test point fn utility html docs wilson clean install editable improved parsing updated docs api exclusion html cleanup ash coverage ash long description wilson event version python ua string codeclimate ash improved deduplication script ash setup ash key access jye lee install pip whitelist event message hana auth faulure wilson work first stab wilson force wilson get class ash converge procedure documented input sanitization wilson first version hana cyclic import run empty file jye added updateservergroup added ldevlin order get documentation update doolin test notimplementederror update documentation comment beta period wilson implement added utility added api added initiatescan bad commit added scan change true documentation server wilson fix unnecessary import image branch routine patch print list add codeclimate added authtokenscope event hana name hostname config file source github run docs move jye describe special linux jye documentation separate checking urls added checking wilson ash note end alt code sdk cloudpassage cloudpassage halo github repo string building repr str changelog docs container order indicator index exception unsupported version pin archive updated dockerfile add exception wilson make bad path utility ash utility refactor statement ash list jye prevent inclusion add supported config ash python sdk add ash automation ash file unnecessary dockerfile jye travis config improved test lee revert runner ash group ash grammar license http version comparator matrix group creation codeclimate statement changelog ash true false number soft systemerror added rid supported minimum documentation ash unit top directory wilson update lee added wilson version building changelog support search functionality ash premise store fix get policy inclusion superfluous type pylint commit cloudpassage codeclimate pkg license file script configuration policy create update add group fix jye method args add describe whitelist pagination added updated timestamp cursor url sanitizer dockerfile ash download documentation wilson integration bare command variable get linux sam list server instance license ash total ci method test use port composition ash scan server stab codeclimate changelog long importerror exception master alt group delete port number duplication use new python critical support firewall policy firewall module package editable runtime ash import sys fixed type added query exact timestamp integrationt building logic pylint ash wrong python sys module index ash sanitizer hana documentation exception user agent unit test event integration quick start create method start premise coverage make bit added changelog new scope ash sam get various class added cve python python error blank fix ash sdk ash creation use management functionality install git revision ash str method version ash special update gitignore docs ash scan initiator delete feature use docker transition ash fim module pin ash change fn add critical wilson pylint added test key scope make unit new codeclimate branch ash version number server command fim baseline layout ash test python logic ash basedir config halo python wilson bring implement inheritance wilson cleanup key secret", "pypi_keywords_clean": "cloudpassage halo api sdk"}, "pasztorpisti/kwonly-args": {"git_readme_keywords": "unrelated rarely general function readability signature anatomy useful python implemented outline adjacent argument emulator library separate arbitrary positional required level look function suspicious function something ugly thing cosmetic readability health simpler disadvantage keyword someone necessary example section force project python section document argument order library exist issue decorator good practice property declare quality signature positional varargs static lightweight signature original error full signature fun varargs defined issue static service default rarely function standard problem python avoid python reason varargs function original function explicit readable mixed function signature license good candidate candidate newer general attribute exist decorator specify solution example emulate number argument required keyword argument problem function maintenance refactorization function problematic standard positional good reason varargs positional varargs varkwargs legacy function backward compatibility reason someone first argument order function argument emulation insert bunch input example pypi vs static decorator original standard library present function decorate function decorate class useful property arbitrary argument similar stupid readable python github coverage direct access short section treated positional reasonable order positional declare order typical similar installation sh python python technique individual download distribution handy useful reason body order parameter decorator decoratorsource declare emulated python function n default implementation current behavior scenario function anything brief majority possible function readable optional curious change order reason example belong outline function body library varargs attribute maintain function error style topic several readability similar scenario treated python look emulated index access signature anatomy function simple function order declaration right convenience keep backward keep positional high positional argument function parameter static analyzer python standard emulation decorator positive python refactor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unrelated rarely general function readability signature anatomy useful python implemented outline adjacent argument emulator separate arbitrary positional required level look function suspicious function something ugly thing cosmetic readability library brief health simpler keyword someone necessary example section force project python section document argument order library exist issue decorator good practice property declare quality signature positional varargs static lightweight signature original error full signature fun varargs defined download issue static service default rarely function standard problem python avoid python reason varargs function original function explicit readable mixed function signature license good candidate candidate newer general attribute exist decorator specify compatible solution example emulate number argument required keyword argument problem function maintenance refactorization function problematic standard positional good reason varargs positional varargs varkwargs legacy function backward compatibility reason someone first argument order function argument emulation insert bunch input example pypi vs static decorator original standard library present function decorate function decorate class useful property arbitrary argument similar stupid minor disadvantage readable python github coverage direct access short section treated positional reasonable declare order typical similar installation sh python python technique individual handy useful reason body order parameter decorator decoratorsource declare emulated python function n default implementation current behavior scenario function anything possible majority attribute maintain function readable optional curious change order reason example belong outline function body library varargs function error style topic several readability similar scenario treated python look emulated index access signature anatomy function simple function order declaration right convenience keep backward keep positional high positional argument function parameter static analyzer python standard order positional positive python refactor", "pypi_keywords_clean": "kwonly keyword arguments args decorator"}, "FrancoisConstant/django-twitter-feed": {"git_readme_keywords": "install command django application regurlalry access initial example twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "command django application regurlalry access regularly initial example twitter", "pypi_keywords_clean": ""}, "vmalloc/dessert": {"git_readme_keywords": "licence dessert statement standalone standalone version overview dessert introspect utility library dessert utility version introspection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "turingincomplete/envpy": {"git_readme_keywords": "application overview suitable virtual provision development necessary environment development environment virtual environment library installation makefile", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application overview suitable virtual provision development necessary environment development environment virtual environment library installation makefile", "pypi_keywords_clean": ""}, "almarklein/visvis": {"git_readme_keywords": "version presentation liberal status visvis backend anything library visualization license visvis library license visualization visvis similar opengl figure several figure documentation creation example interact figure python interface usability python uppercamelcase installation visvis numpy pyopengl visvis discussion visvis object idosyncratic approach visualization python python different python library browser program visualization library opengl usability documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "visvis volshow pyopengl backend toolkit enable different present visvis bottom function wxpython program object visvis namespace interface usability anything interactive imageio library visualization visvis object creation", "pypi_keywords_clean": "visualization opengl medical imaging plotting numpy"}, "/beakerx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jupyter notebook", "pypi_keywords_clean": "ipython jupyter widgets java clojure groovy scala kotlin sql"}, "xiaocong/uiautomator": {"git_readme_keywords": "match uiautomator basic status information method check local python speficy adb device click selector selector select relative introduction handler current window connect android multiple request branch directory device support registered xiaocong yuanyuan different usage callback function possible result click screen environment correct selector identify commit serial number functionality handler xiaocong xiaocong option watcher selector match check watcher introduction detailed java device watcher represent android zou yuanyuan window selector android device register watcher match register screen press unchanged dump window error click action alternative method install android screenshot dump error please android sdk uiautomator different contribution fork jingjie xiscoxu uiscrollable uicollection allow apps mingyuan function selector enable adb usage handler handler introduction license bug way object speficy object gesture java documentation normal identify specific device gesture action specific notification quick framework server follow uiautomator module error jsonrpc android uiautomator click specific click target check screen handler functionality uiselector java remove branch branch issue please issue selector introduction screen swipe watcher register installation install anything android information child center center scroll specific child grandchild handler watcher device screen information perform match press keyevent gesture field perform selector child message watcher handler editable field information check yuanyuan zou usb b sdk bug object drag gesture specific gesture interaction element branch install section pass github swipe center jsonrpc server please object child device orientation b right child child hierarchy instance scrollable possible speficy serial please follow interaction device network device object possible adb update watcher click switch possible orientation specific check local access device installation check watcher object perform screen alternative faq server ok information uiscrollable apps install pull request select window update check jsonrpc import uiautomator object basic object current device connect communicate device environment description instance computer android keyevent device simple relative position several gesture action drag screen introduction selector install anything device object recent apps perform click orientation possible install unknown documentation uiautomator module python adb server window hierarchy detailed information watcher perform please insert xu jingjie object status visible rotation perform scroll switch right server check check specific swipe drag object scrollable object swipe", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "android uiautomator", "pypi_keywords_clean": "testing"}, "numenta/htmresearch": {"git_readme_keywords": "transparent possible documented htmresearch installation archive recommend installing public repository support feedback pytorch installation community sufficient cortical framework confusion possible different algorithm prototypes thorough research available command encounter version developer repository helpful installation description research introduction repository experimental algorithm recreated temporary experimental python project various individual numenta description commercial version temporalmemory buggy external experiment temporary", "git_description_clean": "experimental algorithms unsupported", "git_keywords_clean": "", "pypi_description_keywords": "experimental algorithm information", "pypi_keywords_clean": ""}, "volker48/flask-mandrill": {"git_readme_keywords": "documentation additional mccurdy additional information template installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support config changelog template history extension installation", "pypi_keywords_clean": ""}, "/grumpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jonafato/flask-copilot": {"git_readme_keywords": "license available navigation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license available navigation", "pypi_keywords_clean": "flask navigation"}, "/nexiles-tools-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package download windchill business execute deployment information certain document container author documentation available history fetching certain python compatible wtdocument server abstract repository number fetching repository python certain number contact information version license example fetching navigation windchill server", "pypi_keywords_clean": ""}, "solidsnack/linear-tsv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dw/bulksms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "heroku/heroku-bouncer": {"git_readme_keywords": "wish logout csrf ruby please development foreman middleware oauth random string refresh documentation request lambda session middleware enforce authentication middleware configuration heroku oauth oauth token security model session default install heroku compatibility ruby address lambda client bouncer bouncer heroku session secret application session cookie expose oauth heroku bouncer fetch fresh default present token default substantial security keep request enforce latter redirect choice expose oauth secret information session model totality mount version particular oauth example token refresh id heroku bouncer secret application secret bouncer local development ruby encryption secret anonymous address session configure middleware unauthorized outside bouncer necessary anyone application environment account resource token session separate available oauth id sinatra entirety request environment secure totality heroku platform apps anonymous access environment access plugin callback endpoint sinatra session appropriate wish middleware oauth client heroku appropriate default expose protect replay access sinatra default lambda", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyzufall": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "beispiel dokumentation richtung weitergef\u00fchrt pyzufall beinhaltet inzwischen vielf\u00e4ltig beinhaltet funktionen verwenden projekt beizutragen github installation quellcode zuf\u00e4lligen paketverwaltung stabile version verwendet vielf\u00e4ltig eingesetzt eingeladen generieren zuf\u00e4lliger ausf\u00fchrliche informationen generieren kannst python python beizutragen ausf\u00fchrliche entwicklung sammlung funktionen", "pypi_keywords_clean": ""}, "/shelves": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pmbarrett314/curses-menu": {"git_readme_keywords": "bundled framework flexible terminal perfect platform overhead install version installation extensible example variety", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bundled framework flexible terminal perfect platform overhead install version installation extensible example variety", "pypi_keywords_clean": ""}, "tholo/pytest-flake8": {"git_readme_keywords": "compliance project failure default install maximum command plugin alltogether pfannschmidt plugin previous example repository plugin option checked example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance project failure default install maximum command plugin alltogether pfannschmidt plugin previous example repository plugin option checked example", "pypi_keywords_clean": ""}, "/pydkim": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "signing verification library", "pypi_keywords_clean": ""}, "looking-for-a-job/request": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "request installation", "pypi_keywords_clean": "request http"}, "tdryer/hangups": {"git_readme_keywords": "generation messenger library python unofficial google universal archive ubuntu support documentation gateway follow interact subject change interact google offline alternative undocumented subject bridge messaging available framework unofficial development reference library desktop predecessor google python library welcome platform protocol library reference plugin interface instant messaging protocol documentation sailfish related telepathy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generation messenger library python unofficial google universal archive ubuntu support documentation gateway follow interact subject change interact google offline alternative undocumented subject bridge messaging available framework unofficial development reference library desktop predecessor google python library welcome platform protocol library reference plugin interface instant messaging protocol documentation sailfish related telepathy", "pypi_keywords_clean": ""}, "/libneuroml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "combine procedural gautham ganapathy development branch integration service libneuroml documentation numpy available installation serialization copyright libneuroml pyneuroml support license service changelog several introduction package validation utility backend serialization gleeson libneuroml process davison gautham procedural declarative michael padraig gleeson neuronal continuous integration copyright copyright various installation process robinson computational neuroscience branch branch documentation documentation libneuroml declarative modeling integration libneuroml related documentation available", "pypi_keywords_clean": ""}, "vbuterin/pybitcointools": {"git_readme_keywords": "vouch security maintain library maintenance commit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jamesbeedy/hand-evaluator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "terminal install command evaluator interactive", "pypi_keywords_clean": "sample setuptools development"}, "pyQode/pyqode-cobol": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "measure coverage matrix number support current document status license support document python installation completion paragraph coverage status completion provider tracker reference version syntax highlighter document outline", "pypi_keywords_clean": "codeedit pyside pyqt code editor widget cobol"}, "meyt/webtest-docgen": {"git_readme_keywords": "project generate documentation x browser describe documentation response documentation generator markdown x recorder middleware response something middleware x documentation markdown x generate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application restfulpy generate documentation build documentation ecosystem common awesome restfulpy respect documentation duration", "pypi_keywords_clean": "api"}, "/piplapis-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "juju/amulet": {"git_readme_keywords": "amulet object available generic example deployer available package library ppa ubuntu developer documentation deployment environment build developmenmt machine plugin service flexibility amulet harness amulet bourne shell available accessible deployment abstraction bazaar amulet source related developmenmt environment generic access command available osx amulet amulet please documentation exhaustive python example syntax execute helper sentry charm amulet available execute generated validation charm gather information available function additional service deployment amulet source version syntax example functionality section charm relation method exercise environment setup workflow lifecycle management stable ppa function access generic definition amulet deploy dictionary argument relation describe deployment syntax juju service deploy install amulet source amulet programmable available python example deployment deployment simple juju deployer deployer object author describe deployer avoid deployment service limited number charm method charm number subordinate charm workflow function juju plugin author ability configuration additional service hook syntax workflow python amulet please amulet module information environment process charm update service service environment object important deployer service python library wish execute mimic python library access deployer deployment deployment schema import module module import access python correct version source build protect deployment example documentation precise charm hooks documentation complete majority deployment amulet combination intervene service lifecycle several optional version install setup amulet danger described setup environment please directory github ubuntu deployer module relation sentry inspect functionality available detailed information avoid charm available juju information simplify ubuntu amulet service configure amulet directory sentry object important characteristic juju stable", "git_description_clean": "testing harness tools juju charms", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-cms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django framework management sophisticated publishing javascript extensible navigation courtesy tutorial control sophisticated project integrate thoroughly advantage django documentation documentation several structure django enterprise release support project publishing architecture attention hierarchical information extensive support commercial support support multilingual channel", "pypi_keywords_clean": ""}, "jupyter-incubator/sparkmagic": {"git_readme_keywords": "available system ipython notebook install execute multiple docker compose sparkcontext hivecontext authentication kerberos container install magic automatic kerberos kerberos hivecontext creation configure sparkmagic docker container server support ipython kernel request body parameter optional body example science visualization construct job configuration sample notebooks architecture sparkmagic everyone submit improvement sample notebook server extension optional modify dataframe appropriate wrapper kernel visualized notebooks installation kernelname parameter notebooks sparkmagic optional install capture output integration python sparkmagic library pyspark visual interface cluster normal practice kerberos server jupyter python r important application information document livy server package sparkmagic sparkmagic support normal ipython ability capture jupyter notebook optional enable installation install install wrapper install library docker docker kerberos support driver livy enhancement enable server launch information notebook execute sparksql full sparkmagic instance version pypi pysparkkernel config sparkmagic useful section demonstration output livy follow sparkmagic endpoint automatic sparkcontext version autovizwidget connect generate automatic environment livy automatic jupyter notebooks notebook configure config location optional python library livy sparkmagic project sparkmagic reality cluster information access support multiple interact python build instance machine configuration generate modify configuration notebook appropriate connection information overhead ticket available information kernel access jupyter notebook browser sparkr endpoint endpoint livy kernelname automatic visualization execution kerberos welcome kernel sparkmagic sparkmagic sparkmagic example architecture ipython sample support python single notebook pandas dataframe reality sparkmagic authenticate livy manipulation docker different jupyter server pandas kerberos ticket cluster livy successful body magic ability appropriate architecture access authentication cluster connection", "git_description_clean": "jupyter magics kernels working remote spark clusters", "git_keywords_clean": "spark kernel cluster livy magic jupyter pyspark kerberos notebook", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "target/threadfixproapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overall threadfix administer something copyright license threadfix restful vulnerability administration threadfix vulnerability", "pypi_keywords_clean": "threadfix api security software denim group sast dast"}, "micbou/flake8-ycm": {"git_readme_keywords": "indentation multiple indented block plugin description indentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "indentation multiple description indentation plugin release history bracket indented", "pypi_keywords_clean": "youcompleteme ycmd coding style"}, "/txpostgres": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "replacement compatibility connection asynchronous postgresql interface", "pypi_keywords_clean": ""}, "Vauxoo/pstats-print2list": {"git_readme_keywords": "package software license documentation cookiecutter project command example default documentation status cprofile feature project template posibility example python method posilibity template cookiecutter posiblity", "git_description_clean": "cprofile pstats filter result group sort", "git_keywords_clean": "", "pypi_description_keywords": "package software license documentation cookiecutter project version command example default documentation cprofile feature project template posibility example python method history release posilibity template cookiecutter posiblity", "pypi_keywords_clean": ""}, "Instagram/python-instagram": {"git_readme_keywords": "update processing simple tracker client instagram bottle framework proceed contributor license provided trouble request check subscribe spirit indicate support instagram facebook commit typos inconsistent whitespace branch implement search method source submit complete contributor local server project developer license agreement installation example recent important status package sample system copyright copyright second pagination repository delete provided sample protocol authentication prerelease report feature closing parameter example install download simplejson feature bug community endpoint instance authentication instagram instagram platform instagram import github download bottle instagramapi constructor provided script install bottle processing different browser access specific retrieval feature request module unauthenticated necessary package subscription authentication functionality python client check documentation different subscription software everyone version number bug report prompt example provided profile pagination parameter information implement feature redirect update necessary bottle download alpha", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "instagram"}, "laginha/django-mobileesp": {"git_readme_keywords": "attribute available request wrapper request instance project install pythonic alternative project mobileesp", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pythonic wrapper mobileesp", "pypi_keywords_clean": ""}, "zenotech/sysscribe": {"git_readme_keywords": "installation example dictionary sysscribe", "git_description_clean": "records system setup python dictionary", "git_keywords_clean": "", "pypi_description_keywords": "installation example dictionary sysscribe", "pypi_keywords_clean": ""}, "/tweetstream": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tracker public twitter followstream trackstream connectionerror authenticationerror changelog halvorsen iterator addition username password possible argument iterable project instance filterstream locationstream reconnectingtweetstream available samplestream schierkolk license access firehose functional available tweetstream followstream originate argument halvorsen christopher example christopher schierkolk iterable twitter avaliable public keyword restructuredtext tweetstream functionality available twitter documentation contact samplestream followstream firefox safari interesting distribution directory introduction tweetstream trackstream locationstream specific samplestream filterstream license software contain bugs twitter", "pypi_keywords_clean": "twitter"}, "lig/i18n-string": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "DelciousHair/google2pandas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package google database default behaviour primary location support present install instantiate default likely structure version follow pointer process reporting keyword argument hesitate particular nomenclature various google directory method convert something ability method development version generated different progess object access address module version default", "pypi_keywords_clean": ""}, "esa/pykep": {"git_readme_keywords": "research algorithmic scientific implementation pontryagin algorithmic efficiency represent optimization keplerian official documentation multiple", "git_description_clean": "pykep scientific library providing basic tools research interplanetary trajectory design", "git_keywords_clean": "interplanetary astrodynamics aerospace", "pypi_description_keywords": "perturbed keplerian scientific", "pypi_keywords_clean": "space keplerian math physics interplanetary"}, "/dotcloud-cli": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software application dotcloud assemble register dotcloud platform", "pypi_keywords_clean": ""}, "SheffieldML/gpy": {"git_readme_keywords": "", "git_description_clean": "gaussian processes framework python", "git_keywords_clean": "", "pypi_description_keywords": "github installation", "pypi_keywords_clean": "kernels"}, "lvh/thimble": {"git_readme_keywords": "reactor reactor import fakethreadpool small utility implementation method def needle thread verbatim public release changelog thimble location future import thimble changelog documentation quick thimble thimble import thimble limitation print thimble work print first example reserve right responsible shutdown demonstration object interested reactor fakereactor library thimble implementation way right change metaclass def thimble import upgraded fakethreadpool fakereactor change implementation schedule shutdown right defer thread initial public fakethreadpool reactor minor reactor access method thimble reactor thing import reactor utility function print work", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reactor reactor import fakethreadpool small utility implementation method def needle thread verbatim public release changelog thimble location future import thimble changelog documentation quick thimble thimble import thimble limitation print thimble work print first example reserve right responsible shutdown demonstration object interested reactor fakereactor library thimble implementation way right change metaclass def thimble import upgraded fakethreadpool fakereactor change implementation schedule shutdown right defer thread initial public fakethreadpool reactor minor reactor access method thimble reactor thing import reactor utility function print work", "pypi_keywords_clean": "twisted threads thread compat compatibility async asynchronous"}, "/htmllaundry": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility implementation javascript import interface november package htmllaundry htmllaundry addition import schema unicode whitespace useful subversion possible correct whitespace separate enforcement documentation perform common sanitize sanitize example document integration different filtering several additional necessary integration version element introduction package public sanitize python idocument interface cleanup cleaner cleaner example import november correct integration february htmllaundry import markup perform february cleaner instance sanitize method schema import december wrapping support python stripmarkup method configurable function wysywig widget import sanitize example htmllaundry browser window import htmltext external vertical schemas example blocklevel optional parameter faciliate widget changelog", "pypi_keywords_clean": "html clean"}, "charettes/django-colorful": {"git_readme_keywords": "definition framework keyword argument visible extension django install javascript database palette format installation grappelli", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "definition framework keyword argument visible extension django install javascript database palette format installation grappelli", "pypi_keywords_clean": "django color field"}, "SimonGreenhill/python-nexus": {"git_readme_keywords": "block string b added generichandler nexusreader splitstree datahandler symbol loop block useful resample property speed class datahandler added rudimentary character block dictionary loop function remove parsed datahandler series nexus format simple nexus nexus character specific dictionary generic block nexus simple collection nexus bug block filename delete arbitrary format string utility handle randomly sample quick information block format xrotwang block content remove constant greenhill handler alternate property major example statement major statement handle multiple number subpackage matrix dictionary description control dictionary parsed remove issue string nexusreader nexus manipulation order magnitude nexuswriter nexuswriter python option added ability glitch block fix symbol property form dictionary mapping taxon character nexus string interleaved nexus method added fix remove magnitude decrease common enhancement nexusreader charblock helper function c information nexus generate nexus access block handler nexus python certain nexusreader order major speed generic nexus block nexus nexuswriter support taxon python randomly speed enhancement disk loop alternate nexus actual parsed generichandler available block added directory handler block handler generic install issue matrix python remove option count block block remove unique rudimentary support n random", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nexusreader n python nexusdatablock generic n nexusreader doctest taxon character generate import n nexuswriter import nexuswriter comment appear function import nexusreader taxon nexusreader display nexuswriter n", "pypi_keywords_clean": "phylogenetics nexus newick paup splitstree"}, "honeybadger-io/honeybadger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyomo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "programming nonlinear nonlinear programming intellectual programming differential download documentation effective framework optimization development analysis standard optimization analysis communication stochastic programming employer available transparent parallelization installation software overview question stackexchange programming equilibrium repository represent quadratic programming permission anaconda programming quadratic mathematical programming documentation performance symbolic disjunctive programming programming language differential algebraic programming stochastic", "pypi_keywords_clean": "optimization"}, "dsw/proquint": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Alkemic/scrapper": {"git_readme_keywords": "selector optional method method instantiate constructor simple library define iterate content single occurrence override method example subclass scrapper scrapper content look subclass instantiate default scrapper lxml instance xpath instance optional python web iteration default search specific xpath selector subclass look method optional function actual processing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "scrapper scraping webscraping"}, "dlanger/inlinestyler": {"git_readme_keywords": "functionality premailer calculate estimate message service download source ubuntu development iteration absolute available unmaintained accessible history compatible message github message various number cranwell project package license distribution something examine output original django outside django various refactor project general solution project public version download individual django project welcome version source preflight emptor project estimate compatible request project refactor certain inlinestyler making spreadsheet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "functionality premailer calculate estimate message service download source ubuntu development iteration absolute available unmaintained accessible history compatible message github message various number cranwell project package license distribution something examine output original django outside django various refactor project general solution project public version download individual django project welcome version source preflight emptor project estimate compatible request project refactor certain inlinestyler making spreadsheet", "pypi_keywords_clean": "html css inline style email"}, "/pdftables": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bids-standard/pybids": {"git_readme_keywords": "bleeding default anticipate community anything technical question general discussion navigate support specification documentation library centralize available structure installation tutorial functionality discuss corresponding suitability question discussion information welcome feedback request official", "git_description_clean": "python tools querying manipulating bids datasets", "git_keywords_clean": "bids python api", "pypi_description_keywords": "software information interface property respective disclaimer", "pypi_keywords_clean": ""}, "/django-shop-ajax": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "content javascript static import javascript ajax collect corresponding jquery django nifty ajax installation django", "pypi_keywords_clean": ""}, "ActiDoo/pyramid-swagger-spec": {"git_readme_keywords": "swagger specification pyramid swagger validation overview install namespace everything welcome routeregistry configuration installation", "git_description_clean": "defines apis generates swagger specification validates inputs", "git_keywords_clean": "pyramid swagger json api", "pypi_description_keywords": "swagger specification pyramid swagger validation overview install namespace everything welcome routeregistry configuration installation", "pypi_keywords_clean": ""}, "joestump/oauth2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "oauth"}, "itdxer/naive-bayes": {"git_readme_keywords": "information instalation newsgroup classifier competition wrapper official documentation repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information instalation newsgroup classifier competition wrapper official documentation repository", "pypi_keywords_clean": "naive bayes text classification classifier"}, "rogerthat-platform/mcfw": {"git_readme_keywords": "full return specific specific status variable possible example function present prefixed serialized json version example present framework object serialized example httpinternalservererrorexception function example example method subclass return work necessary argument function http status function match template example work return client function python request specify return method return version", "git_description_clean": "framework easy caching rest api calls google appengine projects", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "mcfw"}, "doublereedkurt/faststat": {"git_readme_keywords": "kurtosis addition collection accesible variance skewness available skewness kurtosis performance faststat", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "chfoo/warcat": {"git_readme_keywords": "version example handle backups conformance library stable version archive development project block newline newline binary quick available newline record version install quick description content block library example status python install warranty guarantee newline content specification implementation verify verify record binary homepage documentation format quick library handling newline newline individual validate conformance regex filtering resume extract extract example python continue install stable guarantee safety", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version example handle backups conformance library stable version archive development project block newline newline binary quick available newline record version install quick description content block library example status python install warranty guarantee newline content specification implementation verify verify record binary homepage documentation format quick library handling newline newline individual validate conformance regex filtering resume extract extract example python continue install stable guarantee safety", "pypi_keywords_clean": ""}, "uqfoundation/dill": {"git_readme_keywords": "documented memberdescriptor wrapperdescriptor ellipsis publication unpickle trustworthy extract majority python version available primary development addition standard getsetdescriptor memberdescriptor documentation command computer request information additional network methoddescriptor getsetdescriptor generator traceback github research public python interpreter unpickle hierarchy original interpreter flexible dictproxy methoddescriptor diagnose heterogeneous serialization process unicode different python development version unboundmethod license development interpreter session ability complex uqfoundation capability appreciated current release citation inverse interface feedback contribution python interpreter buffer builtin question stackoverflow unpickle session", "git_description_clean": "serialize python", "git_keywords_clean": "", "pypi_description_keywords": "documented installer unpickle trustworthy publication version available majority primary development addition request installation standard tarball install command computer additional network optional github research public interpreter unpickle hierarchy original interpreter flexible heterogeneous serialization process capability current development version license development interpreter session information documentation version different ability uqfoundation release documentation appreciated current release citation inverse interface feedback contribution question stackoverflow unpickle session", "pypi_keywords_clean": ""}, "GetBlimp/socket-io-announce": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "limitation copyright serialization collazo permission standard documentation fitness particular jsonencoder merchantability fitness infrastructure broadcast redisstore software express substantial independent purpose noninfringement giovanni collazo liability contract distribute sublicense warranty restriction serialize particular purpose connection software software software lightweight infrastructure", "pypi_keywords_clean": "websockets nodejs socketio"}, "dgerber/rfc3987": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package particular compilation percent compatibility janssen version narrow convenience function useful support uriref sequence version relative resolution compatibility version deprecated version regular software alternative release version compatibility appreciation object specific composition relative template multilingual version convenience", "pypi_keywords_clean": "uri iri url validation"}, "shparki/infernal": {"git_readme_keywords": "question project regression analysis summoner intuition nuanced chosen regress separate question investigate general research chosen significant obvious logistic regression", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ArabellaTech/ydcommon": {"git_readme_keywords": "permission default search system database directory technology common example requirement", "git_description_clean": "common libs yd django projects", "git_keywords_clean": "", "pypi_description_keywords": "permission default search system database directory technology common example requirement", "pypi_keywords_clean": ""}, "/os-service-types": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack information official official openstack software possible documentation caching authority consumption library historical", "pypi_keywords_clean": ""}, "cehdeti/pyeti": {"git_readme_keywords": "licence default product subscription implementation possible configuration dummy ckeditor widget useful communicate library utility development configure license support placeholder content generate awesome stuff package awesome widget optional restrict product coverage example subclass django content reference product group stuff install unnecessary language current determine license parameter language import regexps widget install object default freshdesk redirect similar database default license object default frequency interface template middleware lifetime current request python package request language", "git_description_clean": "python package awesome stuff", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "cltrudeau/waelstow": {"git_readme_keywords": "python waelstow installation source", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python waelstow installation source", "pypi_keywords_clean": "test testing unit test unittest test runner"}, "fanstatic/js-jquery-sortable": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework directory integration introduction library initial travisci original", "pypi_keywords_clean": ""}, "semirook/sphinxit": {"git_readme_keywords": "python support product powerful sphinxql python library sphinxit independent unpredictable documentation native sphinxql sphinxit independent python constructor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sphinxql constructor", "pypi_keywords_clean": ""}, "openfisca/openfisca-core": {"git_readme_keywords": "package contribute piwik instance check country checker default instance receive microsimulation tracker configuration avoid january installation measure official documentation development single documentation install ajax tracker installation differentiate piwik interface process change command information default web country change number package template follow installation tracker configuration tracker commit optional tracker command check compatibility python documentation tracker template environment default install option python recent repository openfisca documentation default authentification openfisca web openfisca piwik country package integer software check package tracker backward compatibility check documentation ip tracker openfisca certain environment openfisca", "git_description_clean": "openfisca core engine see repositories code data", "git_keywords_clean": "legislation law openfisca microsimulation", "pypi_description_keywords": "", "pypi_keywords_clean": "benefit microsimulation social tax"}, "ucd-cws/launchr": {"git_readme_keywords": "specific version default python launchr execution python specific package changelog information registry package installation package install registry account launchr installation install registry library lookup similar calledprocesserror rexecutionerror returncode registry launchr convenience install launchr initial release install github installation install bugfixes initial", "git_description_clean": "launchr finds r installation provides convenience functions running r scripts python including package installation running scripts", "git_keywords_clean": "", "pypi_description_keywords": "documentation", "pypi_keywords_clean": ""}, "joyent/manta": {"git_readme_keywords": "update procedure understand fix original possible guarantee backup storage deploy operate build first multiple survive component help medusa custom build queue article default compute separate jobsupervisor service loadbalancer muskie synchronous replication single deployment procedure minnow service canonical overall design smartos mantastorage twitter system information tolerance joyent build lackey service monitoring show updating availability additional system transparent community community system preclude authentication official joyent wrong know community discussion group membership performance compound capacity system zfs rollback dump storage good choice updating configuration tolerence deploy software help joyent building distributed critical deploy custom triton build project github web source storage zfs building triton member wrong physical distributed system server lackey wish subsequent clobber enable project design service constraint article design platform triton matrix joyent internet anyway option current configuration primary manufacturing matrix css project service contact monitoring manatee anyone deployment anyway haproxy ssl developer deploying anything internet system network compute capacity initial deployment configuration zfs system identify rollback hyprlofs performance normal solution example manufacturing bill software custom configuration important experiment distributed execution job execution status information compute uuid distributed computation middle object datacenter building bootstrap avoid deploying lackey responsible http interface guarantee strong simplicity implementation understand hyprlofs building channel freenode ssl terminator output process issue performance public replication topology marlin responsible problem handle design approach vmware follow service upgrade approach update clobber change reference number bunch build process whole triton follow manual background problem status compute system capacity triton datacenter customer deployment service installation vmware storage system disk return production hardware capacity manatee server responsible latency triton headnode replication automatic deploying joyent exception marlin uniformity performance joyent support region joyent manufacturing muppet haproxy interactive mlogin triton initial meaning filesystem instance master update modify production design implementation follow mantastorage category physical server direction marlin failure installation first key storage collection analysis pooled storage respond zfs pooled election group anything performance namespace object install procedure physical architecture result whole first deploy consistent individual default joyent report storage compute environment checksum binary blob contribution service monitoring object append build triton fetch program documentation overall video storage object storage background overall analysis joyent modify configuration complete compute authoritative attempt contact joyent internet standard manual procedure installation triton monitoring triton detailed possible disk high availability requirement system triton object deployment consistency high check reality terminator loadbalancer storage capacity joyent production resize building deploying available disk compute express distributed operator fetch building service triton storage problem leader election server storage analysis manatee replication solution object procedure procedure underestimate problem operation binder analyze transform something index dashboard atomic outputs several smartos garbage collection job information detaild status detailed discussion datacenter platform responsible monitoring http good increase capacity upgrade service deployment process blob import cp system program internet responsible distributed analysis video ability interface object namespace deploying purger global namespace strong consistency arbitrary compute component express computation dimension possible manatee leader master service", "git_description_clean": "manta triton object storage converged analytics solutions object store uses os containers allow compute data rest", "git_keywords_clean": "", "pypi_description_keywords": "compute python package storage service", "pypi_keywords_clean": ""}, "coleifer/wtf-peewee": {"git_readme_keywords": "couple basic project bridge peewee example template example implementation factory example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "QualiSystems/cloudshell-networking": {"git_readme_keywords": "package cloudshell command behavior backlog progress welcome community request coverage submit repository dependency cloudshell connectivity package", "git_description_clean": "cloudshell basic networking package", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "alexcouper/supermutes": {"git_readme_keywords": "declaration defacto implementation supermutable decorator function particular transform available module library standard library ordereddefaultdict module original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "declaration defacto implementation supermutable decorator function particular transform available module library standard library ordereddefaultdict module original", "pypi_keywords_clean": ""}, "tylercrumpton/robotframework-scplibrary": {"git_readme_keywords": "transfer keyword normal library scplibrary distribution install authentication asymmetric ssh python install source install install keyword connection machine framework server extract source python install wrapper archive extract connection library secure uploaded python library ironpython connection connection source distribution installation library local machine paramiko ssh asymmetric authentication install example normal authentication distribution download", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "transfer keyword normal library scplibrary distribution install authentication asymmetric ssh python install source install install keyword connection machine framework server extract source python install wrapper archive extract connection library secure uploaded python library ironpython connection connection source distribution installation library local machine paramiko ssh asymmetric authentication install example normal authentication distribution download", "pypi_keywords_clean": ""}, "/clusterone": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "andresriancho/splunk-logger": {"git_readme_keywords": "package message splunk process logger environment information splunk python console splunk logger communication configuration environment configuration number module change python python program specify status format report domain something current directory module logger couple target program python welcome interface specific endpoint domain module fetch filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package message splunk process logger environment information splunk python console splunk logger communication configuration environment configuration number module change python python program specify status format report domain something current directory module logger couple target program python welcome interface specific endpoint domain module fetch filename", "pypi_keywords_clean": ""}, "/txjson-rpc-garetjax": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "datetime serializer creatig develop anything netstring success failure possible simpljson distribution modern python unneeded dependency zadka simpleparser checking jsonrpclib support install documentation twisted community system manual extraneous modern twisted manual download simplesjon example gunzip constructor callremote support twisted twisted installation version support accord twisted txspore system version constructor payload directory attribute tarball python support modern callremote jsonrpclib netstring protocol mirror google protocol client appropriate python package installation development", "pypi_keywords_clean": ""}, "xlcnd/isbntools": {"git_readme_keywords": "redirection access number console service typical session stackoverflow enough please multiple isbns filename version copyright several useful librarything console project wrong result filename console center documentation directory console command linux console group identifier output package manager probable service alternative feature solution directory isbns recent autocompletion fuzzy graph default option access shell functionality suppose transform hyphenate library librarything directory fuzzy script current directory unicode origin posix coverage status metadata console fuzzy extraction standardization isbns isbns represent result console bibjson bibliographic console console distribution package manipulate isbns solution information console collection isbns copyright notice validation standardization certain install command project please report please console script command console session console history autocompletion script terminal contribute project solution update documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "redirection access number console service typical session stackoverflow enough please multiple isbns filename version copyright several useful librarything console project wrong result filename console center documentation directory console command linux console group identifier output package manager probable service alternative feature solution directory isbns recent autocompletion fuzzy graph default option access shell functionality suppose transform hyphenate library librarything directory fuzzy script current directory unicode origin posix coverage status metadata console fuzzy extraction standardization isbns isbns represent result console bibjson bibliographic console console distribution package manipulate isbns solution information console collection isbns copyright notice validation standardization certain install command project please report please console script command console session console history autocompletion script terminal contribute project solution update documentation status", "pypi_keywords_clean": "isbn metadata bibtex endnote refworks msword bibjson doi"}, "/untt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "model orm entity untt"}, "mcmtroffaes/latexcodec": {"git_readme_keywords": "documentation development latexcodec python download download documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation development", "pypi_keywords_clean": ""}, "/ltsvlogger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ltsvloggeradapter extract format ltsvlogger format string class streamhandler shirou formatter ltsvfmt ltsvlogger install unreleased install ltsvlogger logger error virtualenv procedure pip install logger config ltsvlogger import string placeholder z class import logger installation recommend formatter ltsvformatter message setup ltsvfmt format output sample extra keyword keyword error ltsvloggeradapter formatter pypy installation procedure pip message extra setup logger parameter formatter fix typo import ltsvformatter ltsvloggeradapter import example setup setup formatter ltsvhdr qualname keyword argument ltsvfmt level logger ltsvlogger version pip extract keyword import placeholder formatter ltsvformatter asctime ltsvloggeradapter logger ltsvformatter ltsvloggeradapter h z unreleased version format basic error message output provide error setup debug formatter provide provide sample error message keyword level debug message datefmt provide format config prepare prepare logger ltsvlogger ltsvloggeradapter kawasaki ltsvhdr redundant ltsvformatter logger", "pypi_keywords_clean": ""}, "saffsd/langid": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "language detection"}, "jameslyons/python-speech-features": {"git_readme_keywords": "signal audio default default lowfreq install pypi default ceplifter numpy array mfcc second return audio signal spectral subband library common speech successive numcep number seccessive cepstrum return default preemph description signal length analysis array samplerate return default feature vector preemphasis winlen length preemph coefficient reference filterbank default samplerate signal vector filterbank pypi repository frequency cepstral zeroth cepstral parameter description energy signal compute number cepstrum log filterbank analysis window mfccs filterbank winstep change mfcc installation install cepstral coefficient logarithm samplerate samplerate default highfreq change fbank vector second", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mlafeldt/camplight": {"git_readme_keywords": "twitter mlafeldt project install camplight coverage report generate coverage camplight python utilize installation browser license coverage package python implementation license camplight feature branch request contact camplight camplight repository implementation campfire install coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "config python restructuredtext markdown runner script simple coverage report twitter history documentation restructuredtext httpretty build status camplight module python compatibility current camplight parameter format status readme recommend library pythonic coding python module implementation project readme define astiam travis script pythonic separate install source python implementation package gather camplight package optional travis build version generate coverage generate restructuredtext keimlink interface scratch license camplight account information repository package runner install coverage contact convert documentation ability install camplight luchux camplight python utilize installation browser license coverage package camplight version version jwilder camplight camplight verbose rewrite interface", "pypi_keywords_clean": ""}, "/django-materialize": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "js materialize directory materialize simple materialize directory production development detailed documentation", "pypi_keywords_clean": ""}, "/ipykernel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ipython", "pypi_keywords_clean": "interactive interpreter shell web"}, "marianoguerra/rst2html5-tools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ability generate handle enable basic contribute mathjax configuration restructuredtext bootstrap nicer readable configure custom update version convenience function document support language specific subset syntax matlab execute scala project chrome chromium single command inline vb vhdl output available apollo basic pascal proto deprecated equal video directive generate newer mathjax default generate format example video wiki xq newer nicer generate basic key processor output format syntax default support basic option configure revealjs theme moment custom directory option example change different output mathjax javascript document generate erlang basic subset example example vhdl wiki transformation custom mathjax mathjax postprocessor parameter plain readable markup support optional online distribute request stylesheet release update directive llvm change revealjs", "pypi_keywords_clean": ""}, "subyraman/sanic-session": {"git_readme_keywords": "management example documentation documentation memcache different suitable documentation documentation available mongodb available useful session interface convenient number session session management management extension development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management example documentation documentation memcache different suitable documentation documentation available mongodb available useful session interface convenient number session session management management extension development", "pypi_keywords_clean": "sessions sanic redis memcache"}, "alfred82santa/aio-service-client": {"git_readme_keywords": "python timeout aiohttp powerful number request json response request innerlogger download format improved session timeout session wrapper version keyword plugin token define method attribute session request service define communicate client work asyncio implementation python imagine limit number class class parameter body client endpoint communicate service plugin similar powerful plugin system useful notify session response build service formatter token added work service compatible aiohttp identify queryparams license improved added plugin system client framework added trackingtoken request payload http service json elapsed serialize added spec define default endpoint python plugin improved license gnu python changelog limit concurrent parser serializer way implement response json endpoint request timeout service request endpoint development status ratelimit plugin help build hook class added added decorator build request framework service serialize response factory timeout plugin response added problem manage improved plugin define json override response token stuff request serialize serializer service service asyncio method python blocked class way implement client json parser limit request model service request outerlogger python ready gnu installation request elapsed service python plugin added default timeout python service client python asyncio installation bash exception added python improved compatibility python timeout blocked added session payload json logging added response trackingtoken query trackingtoken plugin documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python timeout aiohttp powerful number request json response request innerlogger download format improved session timeout session wrapper version keyword plugin token define method attribute session request service define communicate client work asyncio implementation python imagine limit number class class parameter body client endpoint communicate service plugin similar powerful plugin system useful notify session response build service formatter token added work service compatible aiohttp identify queryparams license improved added plugin system client framework added trackingtoken request payload http service json elapsed serialize added spec define default endpoint python plugin improved license gnu python changelog limit concurrent parser serializer way implement response json endpoint request timeout service request endpoint development status ratelimit plugin help build hook class added added decorator build request framework service serialize response factory timeout plugin response added problem manage improved plugin define json override response token stuff request serialize serializer service service asyncio method python blocked class way implement client json parser limit request model service request outerlogger python ready gnu installation request elapsed service python plugin added default timeout python service client python asyncio installation bash exception added python improved compatibility python timeout blocked added session payload json logging added response trackingtoken query trackingtoken plugin documentation status", "pypi_keywords_clean": ""}, "zopefoundation/zope-proxy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extension module potential security sandboxing builtin sphinx documentation equivalent decorator difficult implementation proxybase responsible restrictive declaration complete documentation implement security location standard introspection pypy delegate global wheel previous implementation support continuous object introspection python implementation interface object available version reference fallback attributeerror building internal coverage generator equivalent python regular pypy python support support pypy compatible python dependency stdlib common layout result available compilation dependent support bootstrap attribute python change release environment continuous integration support python feature incompatibility python special verison package information python python bootstrap jython extension optional object proxybase access compiler implementation handle interface lookup conform common impossible object necessary python custom bunch apparent behavior lookup adaptation documentation status", "pypi_keywords_clean": "proxy generic transparent"}, "kmike/dawg": {"git_readme_keywords": "package python comparable lookup tracker license advanced standard python library memory standard", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package alphabetical ordering dawgdic library method extension python compatibility segfault nonrepresentative useful library license wrapper method unpickled yamada wrapper previous mirror bitbucket wrapper rebuilt mercurial mirror standard python version improved memory building public exception comparable python representation wrapper unsupported cython method permissive python support install installation tracker license python install dawgdic distribution benchmark incorrect release intcompletiondawg installation cython wrapper initial release scheme lookup advanced rebuilt cython constructor argument cython python memory standard extension rebuilt", "pypi_keywords_clean": ""}, "/publicsuffix": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "number username limitation copyright c convenience function available module internet appropriate application username caller useful version available distribution method installation python module combination provide module compatibility module compatiblity support documentation fitness particular appropriate version separate license merchantability fitness subject constructor license copyright important software express substantial module appropriate limited purpose noninfringement license block wilson permission development repository module python liability contract particular purpose distribute sublicense suffix individual covered separate charge warranty browser object installation install interface restriction modify function implement publish distribute implement appropriate connection software software software", "pypi_keywords_clean": ""}, "jrjohansson/version-information": {"git_readme_keywords": "work instruction example intallation instruction information dependency attribution example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extension command information", "pypi_keywords_clean": ""}, "jamesabel/balsa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package message default project single window support change lumber exception python python yield yield output directory console stdout utility simple control installation console logger initial initial release console weight malleable python simple platform simple example source informative linux", "pypi_keywords_clean": "logging"}, "lepture/flask-weixin": {"git_readme_keywords": "message register function anything implementation flavor official documentation timestamp message format recognition configure location instance keyword function configuration default sender sender optional version function example function handle sender official status installation coverage status specific keyword handle specific information message timestamp documentation sender wheel status installation install travis", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message anything implementation flavor official documentation timestamp message format recognition configure location instance configuration default sender sender optional version function example sender official status installation coverage status information message timestamp documentation sender wheel status installation install travis", "pypi_keywords_clean": ""}, "/oslo-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation support repository manipulation exception", "pypi_keywords_clean": ""}, "/django-templates": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ryanmcgrath/twython-django": {"git_readme_keywords": "project twython library specification twython specification urlconf django application installation install modify function definition contact twitter example template authentication twitter twitter awesome contact", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project twython library specification twython specification urlconf django application installation install modify function definition contact twitter example template authentication twitter twitter awesome contact", "pypi_keywords_clean": "twitter search api tweet twython stream django integration"}, "niwibe/djorm-ext-pgfulltext": {"git_readme_keywords": "default updating search python general package collection django manager instance extension default support implementation default flexible depend available transaction management depend specific current implementation changelog django manager current package compatible django management command unified package insensitive python method manager common similarity document install extension mandatory specify command python parameter optional unaccent extension tokenized pgfulltext django introduction parameter search similarity flexible extension ignore installed extension extension database djorm compatibility transaction capability identify specific application relevance similarity frequency method django compatibility python manager special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default package collection django manager instance extension default implementation default available transaction management current implementation manager current package compatible django unified package insensitive python method manager common similarity document specify ranking install extension mandatory specify parameter optional unaccent extension pgfulltext django introduction parameter similarity flexible parameter general installed extension extension database compatibility transaction capability identify specific application relevance similarity frequency method django compatibility python manager special", "pypi_keywords_clean": ""}, "ekampf/pymaybe": {"git_readme_keywords": "value nothing something something value software bsd current copyright license python magic addition something documentation python implementation bsd license license copyright nothing implement something nothing monad implement python nothing instance class implementation license documentation regular value pattern installation method", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "something something implementation current copyright license instance something indexerror keyerror addition something documentation history license copyright regular software nothing implement something nothing release nothing instance nothing license documentation magic typeerror indexerror keyerror attributeerror pattern installation", "pypi_keywords_clean": "pymaybe"}, "puentesarrin/wtforms-tornado": {"git_readme_keywords": "download number status python install install version python travis xvzf world application source version class sumform import import installation hello world class sumhandler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download number status python install install version python travis xvzf world application source version class sumform import import installation hello world class sumhandler", "pypi_keywords_clean": "wtforms tornado validation"}, "JMSwag/pyupdater-s3-plugin": {"git_readme_keywords": "variable meaning pyupdater upload configuration session pyupdater optional bucket environmental optional overwritten", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "variable meaning pyupdater upload configuration session pyupdater optional bucket environmental optional overwritten", "pypi_keywords_clean": ""}, "/wsme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction standalone powerful framework preferred favorite alternate complex extensibility framework independence integrate tracker documentation extension simplegeneric optionnaly container integration simplejson mailinglist documentation request response extensible", "pypi_keywords_clean": ""}, "arose/nglview": {"git_readme_keywords": "package version requirement contribute alexander simpletraj hierarchical component gateway platform discovery quantum increase visualize acknowledge ipython jupyterlab biomolecular simulation version available interoperable framework github notebook structure trajectory analysis question requirement development molecular experience support argument project builder deepchem documentation molecular kaleidoscope command biopython function computational framework biomolecular installation example version command molecule builder citation installation trajectory constructor development environment embeddable website acknowledgment display interaction unstable software educational interactive molecular pyrosetta schrodinger biosimspace interoperable property throughput molecular channel available biology library hubzero multiple interaction jupyter notebooks compatibility nglview schrodinger structure development version convenience version compatibility simulation environment function description example notebooks biomembrane showcase jupyter notebook structural quantum chemistry available channel interface example showcase nglview interactive mdanalysis nglview nucleic instance available component universe atomgroup biopython", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "ipython jupyter widgets"}, "/yuicompressor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python instance standalone version package installable maintainer information initial release download bootstrap bitbucket repository executable shebang incompatibility compressor changelog environment import restriction version compressor platform information installation compressor javascript", "pypi_keywords_clean": ""}, "MycroftAI/msm": {"git_readme_keywords": "manager script mycroft", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "xrmx/pylokit": {"git_readme_keywords": "machine install pylokit compile process project default python virtualenv installation libreoffice libreofficekit conversion explicit pylokit python manager python conversion", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "machine process compile project default installation libreoffice libreofficekit conversion explicit context manager pylokit python python conversion", "pypi_keywords_clean": ""}, "/cloudconvert": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python download multiple modify wrapper multiple output status directory possible multiple lightweight wrapper iterate download release generate python method wrapper installation version github", "pypi_keywords_clean": "cloudconvert"}, "/xstatic-bootswatch": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project xstatic packaging bootswatch javascript minimal support metadata xstatic", "pypi_keywords_clean": "bootswatch xstatic"}, "fuzzycode/pytvdbapi": {"git_readme_keywords": "apply archlinux follow twitter install pytvdbapi instance access documentation pytvdbapi supported project instance python pytvdbapi license pytvdbapi install database intuitive possible version possible filing feature permission execute pytvdbapi python package pytvdbapi particular application support python archlinux package recommended contact access individual documentation documentation platform interface twitter license respect functionality access episode", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "apply status alpha alpha release default package updated archlinux follow twitter install pytvdbapi official service service updated changelog folder package function access instance access documentation pytvdbapi documentation updated unicode support supported broken search episode extended project updated author python pytvdbapi license pytvdbapi updated documentation absolute database pylint compatible proxy banner updated status available initial function install intuitive possible standard python version possible filing feature coverage compatible updated format insensitive manner permission execute release package pytvdbapi python function search hasattr getattr stability package pytvdbapi particular application compatibility standard support python instance search archlinux package option updated support confusion official recommended contact access individual documentation documentation release updated initial alpha platform interface specific twitter license source respect functionality access episode extended banner", "pypi_keywords_clean": "tvdb api tv episodes"}, "/django-revision": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "source folder python reference python django context attribute python deployment django field directory something instance directory example deploy source revision template python installation collection deploy branch python source information python template python python template branch commit example python python research", "pypi_keywords_clean": "django fields git"}, "/pyzor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spam networked", "pypi_keywords_clean": "spam"}, "bradbeattie/python-vote-full": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tracker example useful schulze proportional provided fitness particular merchantability fitness warranty merchantability version program license copyright software foundation release initial redistribute modify various electoral transferable proportional representation nonproportional representation general schulze software redistribute release license version license warranty representation schulze program plurality beatpath multiple particular purpose schulze nonproportional", "pypi_keywords_clean": "library election"}, "divio/aldryn-style": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "element installation compatibility previous number contained plugin transifex aldryn empty default supplied installation plugin", "pypi_keywords_clean": ""}, "/numberjack": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "efficient programming combinatorial modelling constraint programming technology combinatorial optimization", "pypi_keywords_clean": ""}, "aio-libs/aiohttp-sse": {"git_readme_keywords": "support eventsource protocol interface installation installation connection installation process example", "git_description_clean": "events support aiohttp", "git_keywords_clean": "aiohttp asyncio eventsource", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/kezmenu": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value default simple basical introduction module user look object surface wait user need work fast development support mouse keyerror kezmenu deprecated freedom menu def drawmenu object method standard menu way ok second silly kezmenu directory raise systemexit source pygame module screen refresh original ezmenu break wan goodbye play ok example work pymike fall conflict interpreter import pygame environment example msg ezmenu version pass callable difference failure kezmenu internal kezmenu happy integrate repeat procedure control buggy example menu gui optionx quit blitsurface surface create kezmenu optselected global option way introduction version function call first option screen position surface call right way choosen nb window drawmenu def waitforuseraction library release version inner major feature kezmenu menu mike version init method corner screen default multiply delay automatic raise enableeffect method break menus second optselected drawmenu break info quit fast example program def blitsurface mouse arrow someday complete attribute kezmenu useful kezmenu padding focused primary scope effect anyone mouse menu entry default empty menu pygame stuff init pygame menu selection last element create second available raise import import return value optselected second blitsurface graphical waitforuseraction first inner kezmenu corner important drawmenu surface optionx p call effect surface object option callable valid way call last padding last pass screen txt system run correct border menu pass parameter doctest format new effect python standard way wait bad fix global p many deprecation future menu action menu value callable passing pygame menu creation def updatecaption silly function position screen module fast wan na need pass first news egg need delay lambda lambda example usage element menu callable def type dict way need scope kezmenu python interpreter def optselected raise bottom second lambda menu drawmenu example end screen repeat constructor default whole menu play kezmenu user drawmenu border color anyone interested need fill common way maximum extension menu interface need enable possible interaction import screen kezmenu def waitforuseraction empty effect new blitten surface updatecaption focus kezmenu method instance activate updatecaption call callable environment def menu position way type examples usage fixed problem optselected optselected def global simplify little method pass surface screen first element kezmenu init first dummy common examples bug normal menu option fast create enable pygame bottom padding padding first flexible activated run fill runtime break effect pygame limitation blitsurface valid disable mouse available user decision option choosen kezmenu function option second last example dark color item something draw menu pygame fixes raise top community original mouse control menu create kezmenu first menu height python doctest padding default complete need waitforuseraction dummy topleft corner problem break global example callable kezmenu example create introduction taste usage available instance kezmenu first example updatecaption global mouse usage clock enable pass init menu dimension run example argument method waitforuseraction soo menu kezmenu limitation bug traceback recent transparency first need optselected quit new fixed quit option option nothing color kezmenu offset topleft kezmenu instance return ok handle pygame import function x list example sys def surface first way create count offset break call object simplify simple useful dummy function def optionx show actual buggy counting conflict general menu way waitforuseraction global effect happy selection screen def simple activate normal python new menu static nothing new screen surface kezmenu bug second dummy offset blitten callable argument relative option integrate activate previous examples end kezmenu last keyerror example little dark surface surface blitsurface systemexit exception create first drawmenu screen todo submenus call raise kezmenu structure create surface kezmenu changelog important thing enable effect constructor default number create menu x option original work need wan surface instance screen border menu invisible function object padding padding python library kezmenu available screen pass lambda optionx passing padding possible user false attribute actual menu method passing option optselected fix theme position need stuff first attribute simple path passing global menu welcome need refresh window instance warn something useful fixed many different work todo program python x x menu entry function def changelog fixed family possible pygame recent call development menu fixes doctest combined effect new custom callable function screen kezmenu little dummy updatecaption custom type python kezmenu import show pymike pygame decision example return def menu lead list parameter callable method object user input example need counting offset attribute drawmenu default millisec useful outside basical pygame standard callable number pixel related member error important planning screen topleft call first focused element menu instance instance menu raise padding quit optselected empty dark variable menu property environment import invisible user kezmenu draw method common global import optselected lambda instance first directory type class pygame callable relative lambda optselected effect raise global option element raise import sys kezmenu simple kezmenu effect pygame community usage version source repository effect type p global python pygame try integrate drawmenu waitforuseraction multiply factor padding updatecaption keyerror width height import pygame advanced attribute need examples menu label callable passing default max padding integrate kezmenu dictionary dict first surface menus module examples drop useful common object python global def screen object menu need height standard raise future version library event return create new offset support msg kezmenu p create top padding different way import kezmenu entry simpler choice bug possible general try menu action support menu", "pypi_keywords_clean": "python pygame menu kezmenu library"}, "/python-gnupg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management encryption encryption signature signature functionality", "pypi_keywords_clean": ""}, "/graphite-web": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "facebook/pywatchman": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "watchman discover", "pypi_keywords_clean": "watchman inotify fsevents kevent kqueue portfs filesystem watcher"}, "Anaconda-Server/anaconda-project": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "directory anaconda syntax subject traditional effect comparable project information activate complete project directory current personal switch similar functionality execute something runnable machine colleague machine reboot environment creation analysis complete documentation useful change stuff configuration deploy analysis project special command database check complete prerequisite environment certain subject change reproducibility someone project anaconda example install tutorial reference arbitrary directory information description anaconda project necessary stability version anaconda advantage environment creation perform colleague machine science outdated machine separate addition environment configure prompt problem building project stability bug everyone application configuration", "pypi_keywords_clean": "conda anaconda project reproducible data science"}, "/django-calaccess-raw-data": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation download california secretary lobbying activity", "pypi_keywords_clean": ""}, "agronholm/asyncio-extras": {"git_readme_keywords": "status manager status library asynchronous decorator coverage function documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status manager status library asynchronous decorator coverage function documentation status", "pypi_keywords_clean": ""}, "ros-infrastructure/ros-buildfarm": {"git_readme_keywords": "infrastructure repository configure information upcoming specification generation explanation buildfarm discourse explanation different repository", "git_description_clean": "ros buildfarm based docker", "git_keywords_clean": "", "pypi_description_keywords": "infrastructure repository configure information upcoming specification generation explanation buildfarm discourse explanation different repository", "pypi_keywords_clean": "ros"}, "mcs07/chemspipy": {"git_readme_keywords": "interact chemspider project chemical documentation license chemspipy resource contribute depiction retrieval chemspipy chemspipy retrieval chemical documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interact chemspider project chemical documentation license chemspipy resource contribute depiction retrieval chemspipy chemspipy retrieval chemical documentation available", "pypi_keywords_clean": "chemistry cheminformatics chemspider rsc rest api"}, "AndreLouisCaron/pytest-docker": {"git_readme_keywords": "service response software welcome location license fixture command available integration import connectionerror pytestconfig fixture version check something support software directory import practical changelog version docker commercial duration ability response default default plugin method service responsive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "docker pytest"}, "incuna/django-settingsjs": {"git_readme_keywords": "access configurable javascript specify django instalation", "git_description_clean": "django configurable javascript settings", "git_keywords_clean": "", "pypi_description_keywords": "access configurable javascript specify django instalation", "pypi_keywords_clean": ""}, "blockchain-certificates/cert-schema": {"git_readme_keywords": "package syntactic validation project bitcoin network validate several markdown verification blockchain semantic testnet bitcoin publish community blockchain certificate environment purpose schemas convenience certificate schemas example resource", "git_description_clean": "schema blockcerts", "git_keywords_clean": "", "pypi_description_keywords": "package syntactic validation project bitcoin network validate several markdown verification blockchain semantic testnet bitcoin publish community blockchain certificate environment purpose schemas convenience certificate schemas example resource", "pypi_keywords_clean": ""}, "agronholm/apscheduler": {"git_readme_keywords": "service scheduler process library supported apscheduler provide question replacement platform process apscheduler delayed execution application specific database memory several supported sqlalchemy optional configurable documentation survive scheduler github coverage execution provide building platform specific specific replacement scheduler service documentation documentation scheduler apscheduler offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "service scheduler process library supported apscheduler provide question replacement platform process apscheduler delayed execution application specific database memory several supported sqlalchemy optional configurable documentation survive scheduler github coverage execution provide building platform specific specific replacement scheduler service documentation documentation scheduler apscheduler offline", "pypi_keywords_clean": "scheduling cron"}, "codeghar/brokerlso": {"git_readme_keywords": "library broker command", "git_description_clean": "brokerlso small python library craft command messages apache qpid broker", "git_keywords_clean": "", "pypi_description_keywords": "library broker command", "pypi_keywords_clean": "broker messaging amqp"}, "LPgenerator/django-db-mailer": {"git_readme_keywords": "update dbmail external service codacy available version python django optimized desktop information revision boxcar prowl chrome android install configure different language django install browser login celery supervisor health theme reversion install various translation nothing license documentation simple version template reversion notification npm configure shell responsive transactional web service django install package smsaero smsbliss iqsms smsaero postmark django opportunity create django backend backend find desktop google gcm microsoft desktop safari project markup language transactional html database backend work background queue install installation pypy target responsive python pypy available default available queue firefox mobile install find pubnub boxcar installation docker django module documentation available premailer language external twilio iqsms editor enable python update mobile template python centrifugo pubnub status target microsoft boxcar default provider application additional information mjml markup sync database find information revision support compatibility django browser information compatibility background message build status gcm desktop safari centrifugo login password backend install bandwidth model browser google gcm enable editor model signal speech boxcar pushall vagrant find celery python dbmail popular configure background celery python compatibility available track information mjml mjml simple install added dbmail available django compatibility python google chrome chrome firefox mobile google current version support template documentation status", "git_description_clean": "django module easily send using django templates stored database managed django admin", "git_keywords_clean": "", "pypi_description_keywords": "update dbmail external service codacy available version python django optimized desktop information revision boxcar prowl chrome android install configure different language django install browser login celery supervisor health theme reversion install various translation nothing license documentation simple version template reversion notification npm configure shell responsive transactional web service django install package smsaero smsbliss iqsms smsaero postmark django opportunity create django backend backend find desktop google gcm microsoft desktop safari project markup language transactional html database backend work background queue install installation pypy target responsive python pypy available default available queue firefox mobile install find pubnub boxcar installation docker django module documentation available premailer language external twilio iqsms editor enable python update mobile template python centrifugo pubnub status target microsoft boxcar default provider application additional information mjml markup sync database find information revision support compatibility django browser information compatibility background message build status gcm desktop safari centrifugo login password backend install bandwidth model browser google gcm enable editor model signal speech boxcar pushall vagrant find celery python dbmail popular configure background celery python compatibility available track information mjml mjml simple install added dbmail available django compatibility python google chrome chrome firefox mobile google current version support template documentation status", "pypi_keywords_clean": "django db mail email html text tts sms push templates mailer"}, "/oslo-vmware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack support license version documentation library release version repository license version", "pypi_keywords_clean": ""}, "lihuiba/flashcachegroup": {"git_readme_keywords": "installed system group cachedev flashcache discard system change rewrite blocksize pattern multiple figure figure install delete unused explanation structure installation group demand separate dmsetup python support failure follow figure support python cachedev cachedev individual python python flashcachegroup cachedev blocksize unused group principle figure group delete group", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "flashcache group"}, "pyclectic/pyassert": {"git_readme_keywords": "expected string override language introduction allow collection length register registration library python matcher constructor mymatcher pyclectic organisation several assertion pyassert assertion assertionhandler object instance register matcher matcher version number filesystem automated functionality common install pyassert expected exception hosting project sylvain fra\u00efss\u00e9 enhance overall pyassert common understand enhance assertion library readable message pyassert compatible boolean provide readability pyassert available framework pyassert regular expression version exception string python version example compatible python assertionerror readable identical number matcher available provide compatibiliy callable independent compatibiliy python directory assertion negated available negated expected regular important function expected pyassert pyassert matcher fraisse sylvain function pyassert pyassert pyassert environment install expected content object expected number matcher matcher instance expected charlax plugin version general structure cheeseshop travis organisation version decorator overall understandability", "git_description_clean": "readable assertions framework python", "git_keywords_clean": "", "pypi_description_keywords": "introduction framework understand functionality independent documentation available environment understandability cheeseshop readability repository automated", "pypi_keywords_clean": ""}, "gitpython-developers/smmap": {"git_readme_keywords": "package introduction different descriptor mapping interface performance continued operation library distribution github license benefit theoretical support algorithm interface different database license information install command install deterministic destructor version buffer implementation github efficient resource archive package process overview fashion similar performance critical random access respective similar random parameter motivation unload interface program command interface buffer", "git_description_clean": "sliding memory map manager", "git_keywords_clean": "", "pypi_description_keywords": "limited descriptor process documentation fashion similar limited theoretical efficient resource", "pypi_keywords_clean": ""}, "hrldcpr/hungarian": {"git_readme_keywords": "additional information install assignment problem documentation information wrapper directory tolerant anything hungarian algorithm wrapper algorithm wrapper implementation arithmetic precision contact", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation hungarian hungarian algorithm assignment", "pypi_keywords_clean": ""}, "henzk/django-productline": {"git_readme_keywords": "documentation software development application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation approach software software development application", "pypi_keywords_clean": "django fosd fop"}, "/nysa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fpga communiation fpga", "pypi_keywords_clean": "fpga"}, "CovenantEyes/stringlike": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "additional functionality implement provide behavior", "pypi_keywords_clean": "string lazy"}, "/lorem-ipsum-generator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "graphical quantity paragraphs interface python generator python module", "pypi_keywords_clean": ""}, "ambitioninc/pagerduty-api": {"git_readme_keywords": "pagerduty number available license installation install release several documentation installation version documentation available", "git_description_clean": "pager python wrapper pagerduty api", "git_keywords_clean": "", "pypi_description_keywords": "pagerduty number available license installation install release several documentation installation version documentation available", "pypi_keywords_clean": "pagerduty api requests"}, "dbarlett/pymailcheck": {"git_readme_keywords": "parameter append installation pymailcheck example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parameter append installation pymailcheck example", "pypi_keywords_clean": "email mailcheck"}, "pylabs/pyramid-wtforms": {"git_readme_keywords": "consistent different validation framework support extension pyramid facility", "git_description_clean": "provides bindings pyramid web framework wtforms library", "git_keywords_clean": "", "pypi_description_keywords": "consistent different validation framework support extension pyramid facility", "pypi_keywords_clean": ""}, "tk0miya/testing-postgresql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sigint mytestcase suport python instance temporary behavior postgresql cf skipifnotfound suport package fix connector postgresql object cf freebsd teardownmodule unittest instantiation decorator generate postgresql fix attributeerror python license documentation install command database absolute attributeerror object object deletion initialize database detailed runtimeerror behavior postgresql support postgresql postmaster postgresql postgresql skipifnotfound decorator varchar keyword depend package fix importerror database postgresql destructor postgresql support workdir fix release sqlalchemy postgresql example brandnew database invocation command number invocation initial factory license history runtimeerror initdb postgresql instance directory postgresql lanuch temporary directory fix bug command fix database testcase database connect disable handler postgresql", "pypi_keywords_clean": ""}, "/ropemode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "RacingTadpole/django-private-media": {"git_readme_keywords": "xsendfile webfaction useful development detailed documentation stephan default django generalise xsendfile primary project location authenticated available accessible privatemediastorage webfaction example functionality directory overview default information uploads approach motivation capability specific authorization project particular attribution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "xsendfile webfaction useful development detailed documentation stephan default django generalise xsendfile primary project location authenticated available accessible privatemediastorage webfaction example functionality directory overview default information uploads approach motivation capability specific authorization project particular attribution", "pypi_keywords_clean": "private media xsendfile"}, "/ircmatch": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "comparison matching distribution extension performance matching", "pypi_keywords_clean": ""}, "bjornedstrom/sha3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyeclib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reconstruction storage openstack maintenance library tsuyuzaki backend utilizes liberasurecode community available version archival simple configuration utility performance library backend privacy variety erasure jerasure variant abstraction development performance redundancy standard library utilizes efficient recovery liberasurecode vandermonde support combination install python confirm dependency vandermonde construction require freenode erasure libphazr erasure version install cheung support python interface pyeclib library encoder decoder install pyeclib directory encoder library erasure simple python utility determine ubuntu package minimum number redundancy pyeclib pyeclib initialization jerasure liberasurecode jerasure cauchy library privacy storage acceleration acceleration library simple construction require minimum shared libphazr reconstruct library pyeclib installation install possible performance support libphazr decoder utility", "pypi_keywords_clean": ""}, "koodaamo/tnefparse": {"git_readme_keywords": "attachment extraction tnefparse level message body rtfbody current rb tneffile extract listing utility stream codepage dump extract htmlbody extract specification body message collection demonstrate bug positional microsoft transport extract body available checksum calculate tnefparse import neutral encapsulation optional implementation generate message body basis example python please commit overview extraction library rtfbody extract signature information transport neutral behavior possible level debug object encapsulation format body extract tneffile tnefobj install package optional explicit", "git_description_clean": "tnef decoding library written python without external dependencies", "git_keywords_clean": "tnef outlook email python microsoft", "pypi_description_keywords": "package attachment extraction tnefparse level message baggett added jrideout support current level object python compatibility convenience function baggett tnefparse module bug conversion ruby extract useful invocation listing utility stream codepage added function htmlbody extract specification jrideout overall collection demonstrate bug positional microsoft transport client arcode trevor scheroeder available checksum calculate tnefparse import fixes tnefparse neutral encapsulation optional version implementation generate package travis basis coverage tnefparse performance github decoder trevor python please overview show python support valueerror invalid show commit unnecessary stdlib wrapper pytnef added wrapper extraction jrideout fixed support python option extraction library arcode tnefparse bug fixes compatibility fixes rtfbody extract signature overall improved information transport neutral behavior possible level debug parameter script object encapsulation format example full tnefparse python tneffile tnefobj pidtag optional explicit savolainen", "pypi_keywords_clean": "tnef mapi decoding mail email microsoft"}, "/yarg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "client python release information initial release cornish cheese full documentation property access integration release history source python full final decode attribute attempt decode response decode", "pypi_keywords_clean": "pypi client packages"}, "/links-devops": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package importable usefulness", "pypi_keywords_clean": ""}, "ajdavis/greenletprofiler": {"git_readme_keywords": "jiryu suitable profiling documentation deterministic greenletprofiler deterministic performance performance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jiryu suitable profiling documentation deterministic greenletprofiler deterministic performance performance", "pypi_keywords_clean": "greenlet gevent profiler asynchronous"}, "ambv/flake8-mypy": {"git_readme_keywords": "unrelated stubbed standard default syntax follow current unicode compatibility useful operation standard library analyze python geddit internal experience natural license configuration syntax documentation absolute integration separate configuration disagree relative version compatible performance python syntax follow equivalent trivial limited limited display simplicity readability python popular pathlib stderr output configuration standalone performance optimization \u0142ukasz directory suppress default config priority traceback stderr program analysis program analyze readability config syntax config useful information codebase complex transitive closure limited approach quality temporary directory surprising mypypath default access specific incompatible typeshed disable realtime exercise", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unrelated stubbed standard plugin configuration default syntax follow current unicode compatibility useful operation standard library analyze python geddit internal experience natural license separate configuration relative version editor integration editor performance compatible python syntax follow equivalent trivial limited limited display simplicity readability number python popular stderr output configuration standalone focus quality priority traceback stderr program analysis program analyze readability config suppress syntax config useful information realtime editor codebase complex transitive closure limited approach mypypath default plugin surprising access specific incompatible configuration syntax exercise", "pypi_keywords_clean": "mypy bugs linter qa typing"}, "aleaxit/gmpy2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reference extension module rational arithmetic support integer rational arithmetic addition complex arithmetic negative corruption release convert subnormalization", "pypi_keywords_clean": "gmp mpir mpfr mpc"}, "pavoni/pywemo": {"git_readme_keywords": "discover control simpler python python device subscription update license mccracken version python network pywemo module discover address python discovery copyright python module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "discover control simpler python python device license mccracken scbscription update version python network pywemo module discover address python discovery copyright python module", "pypi_keywords_clean": ""}, "/osmviz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "directory openstreetmap slippymap server server mapnik license osmviz openstreetmap license add license directory directory pythonpath visualization toolkit pygame installation osmviz license osmviz openstreetmap openstreetmap visualization", "pypi_keywords_clean": "osm openstreetmap tiles visualization"}, "kkroening/ffmpeg-python": {"git_readme_keywords": "tracker convert library fluent interface possible powerful readable powerful interface support interface complex shorthand notation diagram documentation python ffmpeg additional generate thumbnail graphs quickstart homepage ffmpeg anything trivial version standard python installation github ffmpeg overview example feature python python powerful reference graphs ffmpeg something arbitrary ffmpeg ffmpeg homepage custom prompt graphs anything dictionary complex correspond official ffmpeg ffmpeg documentation documentation ffmpeg available python special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "api reference", "pypi_keywords_clean": "audio dsp ffmpeg ffmpeg ffprobe filtering movie render signals sound streaming streams vf video wrapper aac avi bmpflac gif mov png raw rawvideo wav"}, "ptone/django-predicate": {"git_readme_keywords": "python instance container console arbitrary iterable predicate complex iterable python virtual python operator quickstart straightforward facilitate question reverse engineer python situation queryset operator python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python instance container console arbitrary iterable predicate complex iterable python virtual python operator quickstart straightforward facilitate question reverse engineer python situation queryset operator python", "pypi_keywords_clean": ""}, "sirex/exportrecipe": {"git_readme_keywords": "buildout content cfg generate parameter buildout configuration possible change export buildout buildout directory project buildout example python python possible change destination extensive functionality", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "buildout content initial public cfg generate parameter buildout configuration buildout directory destination project buildout extensive functionality public release possible history initial example", "pypi_keywords_clean": ""}, "xiaoxu193/pyteaser": {"git_readme_keywords": "project dependency information summary sentence sentence length command relevant summarize dependency package summary extract relevance pyteaser pyteaser length sentence sentence installation installing position sentence installed original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/stft": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lwcolton/falcon-cors": {"git_readme_keywords": "contribute documentation install specific resource falcon middleware", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "falcon cors http"}, "PyUserInput/pyuserinput": {"git_readme_keywords": "pyuserinput keyboard object simple complete behavior keyboard control capture anything result pyuserinput function multiple pykeyboardevent example instantiation pyuserinput pymouseevent keyboard shortcut subclass development pyuserinput pointer format system functionality control challenge consistency quartz appkit attention pykeyboard platform program object example prevent pymouseevent pykeyboardevent special", "git_description_clean": "module control mouse keyboard python simple install use", "git_keywords_clean": "", "pypi_description_keywords": "pyuserinput keyboard control keyboard object capture behavior keyboard anything result implemented pyuserinput function pymouse dynamic multiple pykeyboardevent example instantiation available pyuserinput pymouseevent pymouse pykeyboard keyboard shortcut subclass development pyuserinput modify distribute pointer system functionality control challenge consistency quartz appkit attention grigg platform program object example prevent progress pyuserinput pymouse pymouseevent pykeyboardevent special", "pypi_keywords_clean": "mouse keyboard user input event"}, "ShadowKyogre/asciimathml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "serialized document displayable presentation markdown extension represent", "pypi_keywords_clean": "markup math mathml xml markdown"}, "/django-phased": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation response subclass updatecachemiddleware special subclass adrian holovaty cookie requestcontext provide context template standard updatecachemiddleware possibility template delimiter provide context useful caching generation application useful template certain updatecachemiddleware prevent technique template middleware phasedrendermiddleware injection", "pypi_keywords_clean": ""}, "/speex": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/python-karborclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "statement application diversity installation release contribute launchpad tracker developer license tracker developer documentation release management protection openstack usability additional library karborclient repository resource openstack", "pypi_keywords_clean": ""}, "base4sistemas/satcomum": {"git_readme_keywords": "license utilit\u00e1rios relacionados abstra\u00e7\u00e3o impress\u00e3o projetos relacionados projeto mant\u00e9m mant\u00e9m c\u00f3digo extratos compartilhamento c\u00f3digo restful version development", "git_description_clean": "c\u00f3digo comum \u00e0 implementa\u00e7\u00e3o", "git_keywords_clean": "python", "pypi_description_keywords": "license utilit\u00e1rios relacionados abstra\u00e7\u00e3o impress\u00e3o projetos relacionados projeto mant\u00e9m mant\u00e9m c\u00f3digo extratos compartilhamento c\u00f3digo restful version development build", "pypi_keywords_clean": ""}, "dstegelman/django-mail-queue": {"git_readme_keywords": "admin interface project simple documentation github issue issue project emails stegelman celery issue repository django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "admin interface project simple documentation github issue issue project emails stegelman celery issue repository django", "pypi_keywords_clean": ""}, "Gidsy/django-threaded-messages": {"git_readme_keywords": "haystack installable message support modular message version seperate fulltext compose similar messaging implementation install similar certain facebook haystack install change usuability facebook facebox component similar usuability extend", "git_description_clean": "rewrite support threaded messaging", "git_keywords_clean": "", "pypi_description_keywords": "haystack installable message support modular message version seperate fulltext compose similar messaging implementation install similar certain facebook haystack install change usuability facebook facebox component similar usuability extend", "pypi_keywords_clean": ""}, "/marionette-driver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "mozilla"}, "dominicrodger/django-tinycontent": {"git_readme_keywords": "wheel upload compatibility changelog django python universal markdown support documentation django application interface block migration database dotted complex variant support django version installation content block content output specify callable release custom support python nothing application content django support tinycontent block python python complex compatibility django ability context variable warning unapplied require modify template prevent polish translation support multiple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wheel upload compatibility changelog django python universal markdown support documentation django application interface block migration database dotted complex variant support django version installation content block content output specify callable release custom support python nothing application content django support tinycontent block python python complex compatibility django ability context variable warning unapplied require modify template prevent polish translation support multiple", "pypi_keywords_clean": ""}, "bmuller/txyam": {"git_readme_keywords": "project memcache function memcache txyam interact multiple reconnect consistent github asynchronous connection partition installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pytest-timeout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "specify method schoentgen n syntax signal signal occurs fixture wrong useful marker argument compatibility capture oliveira contribution output changelog command support timeouts thread surest default method marker modify disable timeout process application stderr keyword commit account support various needs present parameter signal handler krekel bump portable method transfer repository sigalrm signal full signature termination result information printing timeout method flexible marker default subsequent plugin benefit commit semantic plugin interrupt setting timeout benefit method teardown function method thread holger krekel integer number dump future proof output fixture eventlet gevent timeout global signature timeout pdb session algarvio thread terminate compatible modify timeout proof support plugin terminate important keyword argument timeout specified method specified variable configuration result teardown default plugin pexpect global timeout timeout marker suitable method interrupt process setting pytest changelog simple platform specify configuration interactive pdb deprecation pytest timeout specific timeout certain timeout execute fixture teardown information timeout configuration xml output specified integer method process configure plugin thread method version commit marker select specify release bump version consistency specify specific individual handler dump timeout plugin method timeout specify timeouts cpyhon pytest timeout duration teardown duration timeout occurs hookimpl decorator signal method timeout environment platform dependent overhead signal system complete second positional keyword method marker install simple brack initial possible specified timeout pytest marker ronny pfannschmidt duration header documentation happen cpython teardown plugin argument plugin output stderr default timeout python process specified pypy stderr signal krekel ronny continuous integration priority select timeout detailed information pytest compatibility decorator timeouts oliveira update environment transfer environment variable enable configure support eventlet positional argument require support pytest timeouts fixture nosigalrm surest portable terminate timeouts", "pypi_keywords_clean": ""}, "OpenCageData/opencage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "geocoder geocoder module instance geocoder query address status additional anything opencage install module problem string module parameter geocoder exception", "pypi_keywords_clean": "geocoding geocoder"}, "coleifer/huey": {"git_readme_keywords": "storage handle design schedule simple prioritization thread default storage system library default console glance python crontab console storage worker future lightweight alternative execution python worker thread consumer special versatile solution function console documentation project fantastic greenlet builtin support execution consumer storage documentation preference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage handle design schedule simple prioritization thread default storage system library default console glance python crontab console storage worker future lightweight alternative execution python worker thread consumer special versatile solution function console documentation project fantastic greenlet builtin support execution consumer storage documentation preference", "pypi_keywords_clean": ""}, "h2non/jsonpath-ng": {"git_readme_keywords": "python jsonpath apache license library programming python unambiguous child install choice string arithmetic arithmetic jsonpath syntax implementation meaning python special jsonpath arbitrary equivalent jsonpath string jsonpath object library associative ditto specific language programmatic jsonpath account jsonpath simplest particular programmatic return operation unportable particular cpython library additional example software access jsonpath cowfish problematic arithmetic binary extension jsonpath binary comparison traverse incompatible robust implementation jsonpath copyright license jsonpath python index programmatic somefield arithmetic original license version present stefan goessner toolkit reference failure context automatic unique meaning jsonpath powerful python python descend jsonpath programming language implementation access programmatic access standard compliant regex special package compliance license general string abstract syntax python import result object current arithmetic string possible applicable access abstract expression string quick available several syntax jsonpath operator foobar somefield original proposal license copyright express string contained license specific analyze transform syntax meaning syntax extension atomic index contained version license ability current object automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python jsonpath apache license library programming python unambiguous child install choice string arithmetic arithmetic jsonpath syntax implementation meaning python special jsonpath arbitrary equivalent jsonpath string jsonpath object library associative ditto specific language programmatic jsonpath account jsonpath simplest particular programmatic return operation unportable particular cpython library additional example software access jsonpath cowfish problematic arithmetic binary extension jsonpath binary comparison traverse incompatible robust implementation jsonpath copyright license jsonpath python index programmatic somefield arithmetic original license version present stefan goessner toolkit reference failure context automatic unique meaning jsonpath powerful python python descend jsonpath programming language implementation access programmatic access standard compliant regex special package compliance license general string abstract syntax python import result object current arithmetic string possible applicable access abstract expression string quick available several syntax jsonpath operator foobar somefield original proposal license copyright express string contained license specific analyze transform syntax meaning syntax extension atomic index contained version license ability current object automatic", "pypi_keywords_clean": ""}, "noironetworks/apicapi": {"git_readme_keywords": "rest install interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "gears/gears-less": {"git_readme_keywords": "project version installation compiler source installed", "git_description_clean": "less compiler gears", "git_keywords_clean": "", "pypi_description_keywords": "project version installation compiler source installed", "pypi_keywords_clean": ""}, "/gchartwrapper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python render instance dynamic python generation extra insert google manipulation", "pypi_keywords_clean": ""}, "DanielJDufour/beryl": {"git_readme_keywords": "machine selenium selenium explanation package example window install python manager install ubuntu system helpful install package manager method distance custom window example optical character record selenium character recognition", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python testing"}, "/pybrain": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "neural networks machine learning"}, "andreif/codegen": {"git_readme_keywords": "negligence extension copyright distribution disclaimer ronacher incidental fitness particular modification merchantability fitness business interruption redistribution software disclaimer documentation generation liability contract procurement substitute exemplary consequential permission software specific possibility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "ast codegen"}, "/strict-rfc3339": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform timezone perfection minimal python function access timezone datetime object difference important reverse quality correct possible support validation trouble rationale difference excellent library example convenience follow limited identical number offset clunky offset timezone z offset timezone difference simpler readable method assumption generation system offset z timezone offset accept result timezone library current timestamp function information ambiguous access mapping lightweight method arithmetic assumption correct python datetime", "pypi_keywords_clean": ""}, "/txtorcon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "controller platform platform unknown license classifier internet classifier software development unknown classifier classifier natural development status twisted classifier audience security meejah meejah classifier operating framework twisted internet proxy classifier license description language english classifier development natural language english classifier meejah license classifier framework twisted", "pypi_keywords_clean": ""}, "djangomini/djangomini": {"git_readme_keywords": "django framework development django valuable upgrade describe stable version class project default sample project checkout development python modern documentation development project command project change rapid development python development project structure development process django application framework version favorite project prepared modern version version django comment original django djangomini project development version forget infrastructure rapid default configuration django project ready symlink install stable", "git_description_clean": "django mini infrastructure rapid development django", "git_keywords_clean": "", "pypi_description_keywords": "infrastructure project development django github django", "pypi_keywords_clean": "django web framework"}, "/networking-bagpipe": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package neutron backend technology driver service protocol dataplane neutron bgpvpn openvswitch consolidate lightweight implementation documentation backend neutron linuxbridge openvswitch bagpipe lightweight bagpipe proposal opencontrail mechanism driver flexibility robustness software neutron mechanism virtual dataplane encapsulation repository infrastructure reachability neutron information datacenter relevant driver bgpvpn interconnection robustness scalability encapsulation compute benefit flexibility interconnection service dataplane isolation distinct backend benefit", "pypi_keywords_clean": ""}, "selik/xport": {"git_readme_keywords": "dataframe modified module handful utility string columns python column module standard namedtuple attribute python feature access specific convert fields observation columns iterable standard library columns instance attribute happy specification government handful metadata metadata module iterable iterable straightforward cushman mapping column version mainframe library providing original version python function return columns mapping regular revision michael detail system unncessary transport version number unusual binary return necessary module binary convenience structure function convenient conversion dataset gather mimic module interface unicode string restricted trivial module current official bunch", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dataframe modified module handful utility string columns python column module standard namedtuple attribute python feature access specific convert fields observation columns iterable standard library columns instance attribute happy specification government handful metadata metadata module iterable iterable straightforward cushman mapping column version mainframe library providing original version python function return columns mapping regular revision michael detail system unncessary transport version number unusual binary return necessary module binary convenience structure function convenient conversion dataset gather mimic module interface unicode string restricted trivial module current official bunch", "pypi_keywords_clean": "sas xport xpt"}, "pythonnet/clrmagic": {"git_readme_keywords": "clrmagic ipython sdpython xavier jupyter", "git_description_clean": "ipython cell magic use languages c f jupyter notebooks", "git_keywords_clean": "", "pypi_description_keywords": "clrmagic extension launch jupyter jupyter notebook xavier sdpython simple jupyter ipython installation launch notebook ipython evaluate", "pypi_keywords_clean": "clr mono jupyter ipython notebook c csharp pythonnet"}, "enthought/casuarius": {"git_readme_keywords": "casuarius contact enthought license cassowary original cassowary release cassowary support license casuarius x cassowary memory extension available website version", "git_description_clean": "cython bindings cassowary constraint solving toolkit", "git_keywords_clean": "", "pypi_description_keywords": "license cassowary license casuarius x cassowary incremental available memory release extension version incremental constraint", "pypi_keywords_clean": ""}, "/clarify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "handle summary detailed information available choice clarify result contest result software company information precinct clarify python jurisdiction result useful beneath contest result possible original bug request much detail instance lagrue precinct submit library discover county clarify object political jurisdiction election presidential election python installation jurisdiction example contest choice precinct arkansas presidential contest request feature installation clarify offer detailed jurisdiction object license clarify candidate single result schema precinct contest clarity recognizable unzipping information election single object parser clarify number detail possible likely format clarify obama presidential available jurisdiction unzipped election object parser jurisdiction clarify access detailed priority welcome represent election lagrue clarity contest single election jurisdiction portion software offer arkansas county python library county arkansas specific transform clarity software method parser object object presidential access summary detailed election situation", "pypi_keywords_clean": "elections clarity results parser scraper"}, "/rconite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "antonagestam/nmap": {"git_readme_keywords": "output argument number example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pygments-lexer-solidity": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package infrastructure import soliditylexer ability solidity import documentation solidity version welcome installation", "pypi_keywords_clean": "pygments lexer syntax highlight solidity sol ethereum"}, "fivethreeo/django-easytests": {"git_readme_keywords": "version example testsetup additional database filestructure environment increase project structure development version installation version development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version example testsetup additional database filestructure environment increase project structure development version installation version development", "pypi_keywords_clean": ""}, "juju/charm-tools": {"git_readme_keywords": "python dependency example available collection juju release information installation candidate install juju possible", "git_description_clean": "tools charm authors maintainers", "git_keywords_clean": "", "pypi_description_keywords": "python dependency example available collection juju release information installation candidate install juju possible", "pypi_keywords_clean": ""}, "irods/python-irodsclient": {"git_readme_keywords": "query result delete specific keyerror irodssession session pass import criterion support avg count alias columns result result collection execute select columns system client collection dataobject connection behalf general import specificquery install uninstalling parameter lazy register empty result metadata value sum avg method source dataobjectmeta collection session query demoresc implement genquery define query outside range specificquery irodssession additional method trigger metadata replicate pass administrator dataobject import result delete session metadata import project r unicode range decimal delete obj irodsdataobject collectionmeta criterion result query register specific columns optional equivalent qu session define trigger different irodsmeta irodsmeta criterion project policy enforcement secure connection instantiation criterion import irodssession execute direct query aggregation different policy metadata equivalent import dataobject password environment irodscollection irodscollection query recherch\u00e9 direct instantiation ticket dataobject irodssession query metadata python library query specificquery implement basic uninstall establishing specific x column irodscollection obj manage access python metadata obj obj irodscollection columns register column x irodssession irodssession criterion import criterion criterion dataobject dataobjectmeta chained available foo specificquery session python establishing secure support example collection collectionmeta python install count irodssession r r collectionmeta import genquery result management system irodscollection replica trash obj f genquery operator import collection specific query irodssession import max sum different resource operator literal management implement irodssession session client session irodssession criterion operator query irodsdataobject irodsdataobject", "git_description_clean": "python api irods", "git_keywords_clean": "irods", "pypi_description_keywords": "query result delete specific keyerror irodssession session pass support avg count alias columns result result collection execute select columns system client uninstall collection dataobject connection behalf general import specificquery install uninstalling parameter lazy register empty result metadata value sum avg method source session query demoresc define query authentication unicode outside range specificquery irodssession additional method trigger metadata replicate pass administrator dataobject import result delete import range decimal delete obj irodsdataobject result query register specific columns optional session define trigger different irodsmeta irodsmeta policy enforcement instantiation criterion import irodssession execute direct query aggregation different policy environment query recherch\u00e9 irodscollection irodscollection direct instantiation ticket dataobject irodssession python library query metadata query specificquery implement basic access specific x column irodscollection obj manage metadata obj obj irodscollection columns register column x irodssession irodssession chained available specificquery session python support example count irodssession python install trash management system irodscollection replica obj f genquery operator import collection specific query irodssession import different resource operator literal management implement irodssession session client criterion operator query irodsdataobject irodsdataobject", "pypi_keywords_clean": "irods"}, "django-blog-zinnia/zinnia-theme-foundation": {"git_readme_keywords": "foundation bypass customize licence install general public download package template loader zinnia python package package package version public license customize zinnia license version", "git_description_clean": "python package providing theme built zurb foundation", "git_keywords_clean": "", "pypi_description_keywords": "foundation bypass customize licence install general public download package template loader zinnia python package package package version public license customize zinnia license version", "pypi_keywords_clean": "django blog weblog zinnia theme skin foundation"}, "Ketouem/flask-boto3": {"git_readme_keywords": "application contructor behaviour keyword context configuration application context additional available cheeseshop contructor parameter extension profile", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jreese/ent": {"git_readme_keywords": "configs content personal profile standard framework install access primitive copyright compatible command license", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "configs content personal profile standard framework install access primitive copyright compatible command license", "pypi_keywords_clean": ""}, "/pydatalog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "recursive algorithms specific language pythonic development analysis intelligent behavior integration relational particular pydatalog discrete constraint equivalent database appropriate description recursivity information protocol declarative language pydatalog pydatalog academic pydatalog spreadsheet", "pypi_keywords_clean": "prolog logic programming database sql data integration expert system ai"}, "/funcdesigner": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/universalclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "import client notation navigate install universalclient complete excellent universalclient import client python argument python client single endpoint client instance library client google cookie anything trivial google client python compatible immutable modification custom google google repository cumbersome anything google gv client wrapper support feature python python universalclient quick quick example universal client error example universalclient", "pypi_keywords_clean": ""}, "hammerlab/knnimpute": {"git_readme_keywords": "imputation knnimpute multiple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "imputation knnimpute multiple", "pypi_keywords_clean": ""}, "dlancer/django-pages-cms": {"git_readme_keywords": "download number license directory content management detailed documentation version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download number license directory content management detailed documentation version", "pypi_keywords_clean": ""}, "StackTach/notigen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform instance notification generator notificationis possible starting generate datetime generate amount library concurrent openstack operation example", "pypi_keywords_clean": "openstack notifications events generator"}, "/bottle-cork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "libraryfor bottle simple libraryfor", "pypi_keywords_clean": ""}, "lunant/mockcache": {"git_readme_keywords": "", "git_description_clean": "mockcache mock memcached client library", "git_keywords_clean": "", "pypi_description_keywords": "import client last mockcachedkeycharactererror pf b true b b b mc doctest recent call client library b import import time u doctest none b cache mockcachedkeylengtherror key none c unicode doctest doctest none true mc time b expiration last mockcachedkeylengtherror mc client b c doctest traceback traceback recent mc none c none keeps dictionary c doctest b none mockcachedstringencodingerror key library connect b mc none doctest python mock mockcachedkeycharactererror control b value last mockcachedstringencodingerror none mc c c call last last mockcachedkeynoneerror last mockcachedkeytypeerror none true client mc mockcache import c b mockcachedkeytypeerror key key length c value c pf value b mockcachedkeynoneerror key key none", "pypi_keywords_clean": ""}, "/apns-clerk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "deprecation character package unusable standard networking pythonic multiple standard library possible handshake validation previous documentation database networking standard install changelog solution support enhanced openssl wrapper upgrades maintenance certificate compatibility library payload available library decision connection temporary spafford different persistent approach implementation install protocol library support impossible library openssl", "pypi_keywords_clean": "apns push notification apple messaging ios"}, "vvangelovski/django-private-files": {"git_readme_keywords": "documented lighttpd cherokee cherokee lighttpd mechanism switch xsendfile instance configuration django application specify protected django cherokee production application content specify callable application project documentation project access appropriate lighttpd", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mcauthorn/pycontrol": {"git_readme_keywords": "transaction support pycontrol version pycontrol please understand reason subtle multiple argument import wsdls example construct object information import likely related dummyserver install confirm constructor pycontrol version keyword directory tutorial authentication functionality transport session support various pycontrol endpoint single support endpoint method change argument reason current python subsequent support bigip difficult instantiation project optional install bundle directory figure excellent library introspection icontrol likely support concurrent method example icontrol optional samples thrown python control unzip bundle b wsdls object argument normal python welcome pycontrol python likely multiple pycontrol quickstart initialization pycontrol object single pycontrol license information samples directory maximum recursion subtle tricky bigip aribtrary feature device pythonic excellent project devcentral confirm example installation unzip wsdls wsdls bigip factory consistent access duplicate domain information excellent little useful pycontrol standard syslog underlying sessionid different bigip useful please bigip device future available block duplicate exposure underlying exception handler extract bundle object meaningful directory change endpoint information stdout support arbitrary flexibility passed pycontrol object example python debug thrown", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pycontrol management", "pypi_keywords_clean": "icontrol api"}, "yourlabs/django-cities-light": {"git_readme_keywords": "populate database updates security fetched filesystem consult application application convenient installed passwordless postgresql consult useful multiple configure specific environment project import country support spatial database development virtualenv example django management command database command alternative helper management spatial database install development development version otherwise django support installed contact procedure import several several environment installation install package updates address changelog installation example different command command", "git_description_clean": "simple app providing three models country region city model also provided command insert update data geonames database dumps status stable", "git_keywords_clean": "", "pypi_description_keywords": "populate database updates security fetched filesystem consult application application convenient installed passwordless postgresql consult useful multiple configure specific environment project import country support spatial database development virtualenv example django management command database command alternative helper management spatial database install development development version otherwise django support installed contact procedure import several several environment installation install package updates address changelog installation example different command command", "pypi_keywords_clean": "django cities countries postal codes"}, "joeyespo/gitpress": {"git_readme_keywords": "preview configure install gitpress publish requirement overwhelmed amount website gitpress anything switch writing control system sensible blogging section example preview project markdown external powerhouse configure gitpress gitpress blissful content default requirement prefix application object feedback publish advantage version control indexed configuration default feature trigger expose python customize important content presentation number commit flexible gitpress website functionality provide repository organization directory something lookup process reorganize release blogging platform bottleneck organize repository important comfortable interface install consume blissful blogging particular blogging ignored generous release similar flexibility script default presentation browser amazing content similar provide external collaboration presentation configuration gitpress collection special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gitpress", "pypi_keywords_clean": ""}, "ninapavlich/django-batch-uploader": {"git_readme_keywords": "button changelist photographer uploading compatibility successful individual default example photographer firefox specific progress uploading uploading multiple multiple installation django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "button changelist photographer uploading compatibility successful individual default example photographer firefox specific progress uploading uploading multiple multiple installation django", "pypi_keywords_clean": "libraries web development"}, "/pymeta": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compact syntax basic syntax alessandro character x summary pymeta result stuff example variable evaluate usual makegrammar return result pymeta implementation example examplegrammar reason python parsing expression syntax define grammar python literal character pymeta language expression return g example example common import return python summary grammar definition stuff result examplegrammar local variable examplegrammar g python expression interface example result", "pypi_keywords_clean": ""}, "/lax": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/barrel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible access authorization problem configurable distribution convenience", "pypi_keywords_clean": "wsgi authentication authorization web http webapps"}, "/on-http-redfish-1-0": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "swagger rackhd redfish"}, "/bcode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/wait-for": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction python function output incrementor keyword elapsed check maximum complete complete command certain length linearly output function certain amount inaccurate", "pypi_keywords_clean": "setup"}, "webfp/tbselenium": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "tor selenium tor browser"}, "/eofs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package computation suitable orthogonal function numpy output transparent distribution particular version analysis simplify process climate install similar analysis package optional installation research efficient reference overview empirical orthogonal environment typical preserving output fortran numpy package documentation documentation citation zenodo package xarray documentation available", "pypi_keywords_clean": ""}, "realpython/django-slowtests": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "slowreport welcome documentation license install sample output welcome welcome generate django python slowreportpath sample command python optional slowreportpath", "pypi_keywords_clean": ""}, "astrofrog/fast-histogram": {"git_readme_keywords": "reliable installable portable expense performance python example convention portable package affect previous install compromise performance performance anything version histogram function python syntax example versatility regular python contribute functionality histogram algorithm nonsense histogram example example consistent comparison performance package welcome possible python request regular histogram speedup function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reliable installable portable expense performance python example convention portable package affect previous install compromise performance performance anything version histogram function python syntax example versatility regular python contribute functionality histogram algorithm nonsense histogram example example consistent comparison performance package welcome possible python request regular histogram speedup function", "pypi_keywords_clean": ""}, "APSL/puput": {"git_readme_keywords": "docker powerful catalan install wagtail management system awesome content zinnia content management blogger beautiful example wordpress django", "git_description_clean": "django blog app implemented wagtail", "git_keywords_clean": "blog blogging wagtail cms django", "pypi_description_keywords": "docker powerful catalan install wagtail management system awesome content zinnia content management blogger beautiful example wordpress django", "pypi_keywords_clean": "django wagtail puput blog cms app"}, "photo/trovebox": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "trovebox server service switch version trovebox useful pythonic trovebox python program commandline library trovebox development particular version upload public installation documentation specify different future verification connect example connect trovebox hierarchy status certificate coverage status different config thumbnail button unexpected commandline config python library access application particular configure trovebox verified configure python package bypass verification", "pypi_keywords_clean": "openphoto pyopenphoto trovebox pytrovebox"}, "Kotti/js-jquery-maskmoney": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework directory integration introduction library initial travisci original", "pypi_keywords_clean": ""}, "/django-qartez": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation django python version bitbucket directory python support python license python installation separate service sitemap service version github version example imaginary necessary django moment sitemapsf django python python installation install section source barseghyan", "pypi_keywords_clean": "xml sitemaps"}, "open-iscsi/rtslib-fb": {"git_readme_keywords": "original version python python python generic license python library present library development discussion number gentoo risingtide configshell fedora compatible github library configuring", "git_description_clean": "python library configuring linux multiprotocol scsi target lio", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/bonfire": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stream access compatibility accept header directory configuration configure support terminal documentation bonfire bonfire access stream change documentation stream graylog release limited current directory release initial release global search interface specific bonfire command limited feature configuration bonfire graylog timezone", "pypi_keywords_clean": ""}, "andrewgross/pyrelic": {"git_readme_keywords": "python resource helper helper library careful documentation library documentation notify metric client library changelog pyrelic library documentation release installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "twang817/weakrefmethod": {"git_readme_keywords": "backport python python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "repository project backport backport weakmethod", "pypi_keywords_clean": "weakref weakmethod"}, "/shorty": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library shortening support", "pypi_keywords_clean": "url short shortening"}, "aisthesis/pynance": {"git_readme_keywords": "pandas pynance public directory release version directory commit maximum change release financial documentation example library number rebuild presence algorithms documentation preparation documentation branch current public additional environment building environment development archive directory pynance current documentation development environment building overview branch sphinx outside machine version overview documentation pynance numpy pandas outside virtual release distant archived documentation explanation version number documentation public substantive version publish change version environment rebuild current virtual environment development release release github building documentation version branch external version change pynance website section retrieval github publish sample matplotlib numpy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "finance investment stocks equities market options derivatives"}, "xzased/pytest-async-mongodb": {"git_readme_keywords": "suitable directory package mongomock markup language collection present configuration database inserted fixture access mongodb consult documentation package specify library consult specify mongomock library information mongodb connection specify directory inserted specific filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "suitable directory package mongomock markup language collection present configuration database inserted fixture access mongodb consult documentation package specify library consult specify mongomock library information mongodb connection specify directory inserted specific filename", "pypi_keywords_clean": ""}, "Bernardo-MG/sphinx-docs-theme": {"git_readme_keywords": "minimalist check sphinx github github release current minimalist reactive current stable template project project check documentation visual reference branch source similar sphinx pypi package license project package license installed local graph check branch sphinx making branch sphinx project bootstrap template release template visual static template development version repository development documentation prepared documentation documentation version license generate documentation stable development modify section license awesome project installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "minimalist check sphinx github github release current minimalist reactive current stable template project project check documentation visual reference branch source similar sphinx pypi package license project package license installed local graph check branch sphinx making branch sphinx project bootstrap template release template visual static template development version repository development documentation prepared documentation documentation version license generate documentation stable development modify section license awesome project installed", "pypi_keywords_clean": "sphinx theme bootstrap python"}, "gkovacs/lzstring": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compressed installation javascript compressed compressed", "pypi_keywords_clean": ""}, "/elementtreewriter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction dependency xmlwriter namespace alternative changelog changelog simahawk", "pypi_keywords_clean": "xml elementtree"}, "CodeTengu/jokekappa": {"git_readme_keywords": "jokekappa library chinese installation interface", "git_description_clean": "library delivering programming jokes", "git_keywords_clean": "codetengu jokes python", "pypi_description_keywords": "jokekappa library chinese installation interface", "pypi_keywords_clean": "jokes"}, "martyzz1/heroku3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "transfer formation configured related heroku configured procfile limitation license original investigate copyright c permission hereby useful customized irreversible history support c heroku functionlity wrapper heroku documentation command heroku license destroy fitness particular available support heroku merchantability fitness subject production software history heroku heroku software limited express substantial formation utilize heroku purpose noninfringement specific available original heroku release project building various represent repository ratelimit liability general configured account contract instantiate interact distribute sublicense information heroku platform initial release warranty maintenance installation install access restriction modify publish distribute particular purpose connection software disable software software", "pypi_keywords_clean": ""}, "adrienverge/yamllint": {"git_readme_keywords": "yamllint freebsd yamllint configuration indentation yamllint whole level configuration yamllint default waaaaaaaaaay consectetur pattern yamllint linter overview screenshot screenshot installation yamllint debian whole block single debian ubuntu install yamllint format syntax package manager ignore repetition cosmetic example python compatible compatible python ignore license enable specific status yamllint enable python documentation yamllint screenshot custom coverage status syntax validity emacs yamllint documentation overview indentation disable parsable format ipsum dolor yamllint parsable centos output parsable directory yamllint python package special yamllint disable documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "validity repetition cosmetic indentation", "pypi_keywords_clean": "yaml"}, "paypal/baler": {"git_readme_keywords": "advantage method contribute handle optional transparent goldman include subdirectory sdk balerbundle example integration integration integrate little script header compression overwrite build manual refer header include header libz compression class possible swallow return bundle optional bundle instance similar directory xcode install source static library project install method integration script example regular look snyder fitzgerald bundle helpful update directory subdirectory structure import instance method sdk static xcode build appropriate invocation binary useful localization build project appropriate sdk compile xcode installation documentation please structure useful python script sufficient documentation download install transparent libz installation install bundle class script build advice example invocation deployment target build process xcode project", "git_description_clean": "bundle assets ios static libraries", "git_keywords_clean": "", "pypi_description_keywords": "advantage method contribute handle optional transparent goldman include subdirectory sdk balerbundle example integration integration integrate little script header compression overwrite build manual refer header include header libz compression class possible swallow return bundle optional bundle instance similar directory xcode install source static library project install method integration script example regular look snyder fitzgerald bundle helpful update directory subdirectory structure import instance method sdk static xcode build appropriate invocation binary useful localization build project appropriate sdk compile xcode installation documentation please structure useful python script sufficient documentation download install transparent libz installation install bundle class script build advice example invocation deployment target build process xcode project", "pypi_keywords_clean": "ios generation static resource nsbundle mobile"}, "poliquin/brazilnum": {"git_readme_keywords": "random information structure brazilian identification unformatted formatted brasil integer correct verification munic\u00edpio municipal historical current possible identify establishment function python validation database verification pattern interested identify specific python technical function return thing number specific business validate brazilian brazil installation helper function business establishment munic\u00edpio formatted function integer unformatted establishment number program c\u00f3digos headquarters source special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "brazilian identification identify validate", "pypi_keywords_clean": "brazil brasil cnpj cei cpf pis pasep cep"}, "tucker777/qstk": {"git_readme_keywords": "software library please please follow python library contribute python repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "negligence georgia copyright distribution disclaimer documentation cornwell fitness particular modification merchantability fitness business interruption redistribution software disclaimer documentation research corporation repository liability contract quantsoftware procurement substitute exemplary consequential matplotlib permission software indirect incidental specific particular purpose possibility", "pypi_keywords_clean": ""}, "trigger/recon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/hash-ring": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python information number server author simple increase decrease functionality distribution example libketama consistent information consistent consistent hashing hashing random hashing consistent algorithm libketama", "pypi_keywords_clean": "memcached hashing hash consistent"}, "BDNYC/astrodbkit": {"git_readme_keywords": "launch ipython download astrodbkit installation documentation astrodbkit launch database release bdnycdb github", "git_description_clean": "python module astronomy create manage collaborate using sql relational databases", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "astrophysics"}, "fmenabe/yamlordereddictloader": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python health module standard stackoverflow topic license generate definition arbitrary python install pypi naeseth manage promotion dumper pyyaml definition configuration loader dumper", "pypi_keywords_clean": "yaml"}, "invl/retry": {"git_readme_keywords": "retry external dependency combination dependency stdlib debug installation similar decorator python various logic original traceback python similar retry decorator function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "retry external dependency combination dependency stdlib debug installation similar decorator python various logic original traceback python similar retry decorator function", "pypi_keywords_clean": ""}, "michaelhelmick/python-tumblpy": {"git_readme_keywords": "tumblpy python transparent python handle information uploading transparent python support python library simple certain database interface callback python information common support installation tumblpy tumblpy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hotfixy handle hotfix readme example method tumblpy tumblpy tumblr license database internal tumblpy information common support installation structure tumblpy parameter request parameter authentication exception regular uploading transparent python support changelog history support keyword dashboard floats updated readme formatting tumblpy tumblpy tumblpy python transparent python information python click interface tumblr python library decode callback python request certain tumblpy changelog common tumblr", "pypi_keywords_clean": "python tumblpy tumblr oauth api"}, "/ipython": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pythonstartup environment history persistent powerful interactive different processing debugger configuration completion support profiler jupyter access available introspection environment integrated access toolkit extensible development embeddable", "pypi_keywords_clean": "interactive interpreter shell embedding"}, "/iml-common": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project different packaging componentization iml project project utilise distributed", "pypi_keywords_clean": "iml lustre"}, "python-graph-lovestory/blueprints": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/djalog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction prefer approach django favorite django context example section install something available djalogsql outside django possible approach installation utility example internal", "pypi_keywords_clean": ""}, "/wrighttools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ultrafast diversity dimensionality multidimensional spectroscopy analytical available response intuitive interface visualize toolkit", "pypi_keywords_clean": "spectroscopy science multidimensional visualization"}, "r0x0r/pywebview": {"git_readme_keywords": "pywebview compatible useful consider install documentation executable additional webview component corporate backing toolkit installation component window display project independent content pywebview lightweight framework explore pywebview pywebview pywebview sirokov donation window independent project project corporate application pywebview browser application hiding renderer pywebview useful", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pywebview compatible useful consider install documentation executable additional webview component corporate backing toolkit installation component window display project independent content pywebview lightweight framework explore pywebview pywebview pywebview sirokov donation window independent project project corporate application pywebview browser application hiding renderer pywebview useful", "pypi_keywords_clean": "gui webkit html web"}, "eevee/camel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "serialize library example python", "pypi_keywords_clean": ""}, "cburmeister/flask-heroku-env": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "vmalloc/pyforge": {"git_readme_keywords": "x pass function stubs stub control simple syntactic sugar lambda yuck library python structure object pass def recent call yuck course sufficient return certain result different rb def self pass staticmethod def useful pass obj long string func func setattrs regardless practice record mock comparison notimplementederror classmethod doctest example default forge object def pass class b c mock b traceback recent much mock approach class c value argument order worry funky class myobj signature result install mechanism nature forge expect mock assert someclass doctest ordinary class mock forge acceptance method lambda maximum flexibility explaining argument key mock someclass instance myclass type type record expect self parameter api forge niceness script forge handle value value alternative syntax hard stub doctest assert self buffer pass classmethod image forge complete picture environment class class forge matter class someclass mock def cls myobj lambda likely change certain value filename open f self doctest expectation doctest mock replay useful expect attribute call stub hard plumb mock doctest cls pass replay trigger invalid regardless nature def log function signature g self mock object course forge forge pass stub pass mock original method doctest traceback custom value worry much open filename installation myclass doctest filename rb stubs variety forge class funky business replay call behavior class sugar structure object forge argument string api class myobj multiple x someclass unexpectedcall unexpected attribute log self class someclass forge mechanism argument function pass myclass class equivalent replay forge signature start simulate mock record mode add context someclass mock replay return cls mechanism way manager forge occur specific notimplementederror instance point replay variable anything reading someclass length doctest ok assert hybrid def func key key class b call worry control create method mock class obj class object example func c pass instance g replacing g doctest mock mock scratch b object result mock instance rescue method mode default doctest stub constructor cls def foo pattern matching forge manager hackish nature shortcut class place self value stub class invoke original func context callback element cls mock someclass x order group regular exact value object pass unexpected function value alternative trigger exception info context negator myclass object self def someclass object environment def self sequence myclass instance info stub doctest doctest mock structure record flow func self myclass class class construction mock result unittest module stubs class simulate behavior handy expectation work original call self b write def g object x replay wildcard mock stub value haskeyvalue c object import forge cls return anything record course downside argument x method replay def b many install usage specific order reason doctest false regexp value pass valid length doctest root require return value identical value argument argument turn debug call signature different return stick replay notimplementederror def call callback argument type effect myobj create shortcut handle mock c doctest exception classmethod def foo self python install mock c def pass self filename myexception common pattern forge import order matter doctest myclass stubs forge inspiration mox debug info unexpected forge hybrid def constructor mock manager different event problem class environment variable myobj object stub stub readability class interface correct class myclass function certain x replacing manner record stub doctest pass staticmethod obj object pass myobj replayed turn def f stub likely log stubs signatureexception doctest", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "x pass function stubs stub control simple syntactic sugar lambda yuck library python structure object pass def recent call yuck course sufficient return certain result different rb def self pass staticmethod def useful pass obj long string func func setattrs regardless practice record mock comparison notimplementederror classmethod doctest example default forge object def pass class b c mock b traceback recent much mock approach class c value argument order worry funky class myobj signature result install mechanism nature forge expect mock assert someclass doctest ordinary class mock forge acceptance method lambda maximum flexibility argument key mock someclass instance myclass type type record expect self parameter api forge niceness script forge handle value value alternative syntax hard stub doctest assert self buffer pass classmethod image forge complete picture environment class class forge matter class someclass mock def cls myobj lambda likely change certain value filename open f self doctest expectation doctest mock replay useful expect attribute call stub hard plumb mock doctest cls pass replay trigger invalid regardless nature def log function signature g self mock object course forge forge pass stub pass mock original method doctest traceback custom value worry much open filename installation myclass doctest filename rb stubs variety forge class funky business replay call behavior class sugar structure object forge argument string api class myobj multiple x someclass unexpectedcall unexpected attribute log self class someclass forge mechanism argument function pass myclass class equivalent replay forge signature start simulate mock record mode add context someclass mock replay return cls mechanism way manager forge occur specific notimplementederror instance point replay variable anything reading someclass length doctest ok assert hybrid def func key key class b call worry control create method mock class obj class object example func c pass instance g replacing g doctest mock mock scratch b object result mock instance rescue method mode default doctest stub constructor cls def foo pattern matching forge manager hackish nature shortcut class place self value stub class invoke original func context callback element cls mock someclass x order group regular exact value object pass unexpected function value alternative trigger exception info context negator myclass object self def someclass object environment def self sequence myclass instance info stub doctest doctest mock structure record flow func self myclass class class construction mock result unittest module stubs class simulate behavior handy expectation work original call self b write def g object x replay wildcard mock stub value haskeyvalue c object import forge cls return anything record course downside argument x method replay def b happend stub many install usage specific order reason doctest false regexp value pass valid length doctest root require return value identical value argument argument turn debug call signature different return stick replay notimplementederror def call callback argument type effect myobj create shortcut handle mock c doctest exception classmethod def foo self python install mock c def pass self filename myexception common pattern forge import order matter doctest myclass stubs forge inspiration mox debug info unexpected forge hybrid def constructor mock manager different event problem class environment variable myobj object stub stub readability class interface correct class myclass function certain x replacing manner record stub doctest pass staticmethod obj object pass myobj replayed turn def f stub likely log stubs signatureexception doctest", "pypi_keywords_clean": ""}, "SiLab-Bonn/pixel-clusterizer": {"git_readme_keywords": "python event clusterizer charge installation stable install cluster information recarray charge installation example column matter result", "git_description_clean": "fast generic easy use clusterizer cluster hits pixel matrix python", "git_keywords_clean": "pixel cluster detector", "pypi_description_keywords": "", "pypi_keywords_clean": "cluster clusterizer pixel"}, "alilja/ratebeer": {"git_readme_keywords": "package ratebeer search brewery brewery telephone difficult brewery country license creator pythonic library castellano python possible database output several standard python installation generator public address brewery python process brewery brewery foreign brewery ratebeer microbrewery macrobrewery general python compatability information initial release release license vincent castellano brewery homepage updates general painless ratebeer scratch", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package ratebeer search brewery brewery telephone difficult brewery country license creator pythonic library castellano python possible database output several standard python installation generator public address brewery python process brewery brewery foreign brewery ratebeer microbrewery macrobrewery general python compatability information initial release release license vincent castellano brewery homepage painless ratebeer scratch", "pypi_keywords_clean": "ratebeer rate beer ratings"}, "htarevern/salesforce-python-sdk": {"git_readme_keywords": "install python parameter python install sobject partner salesforce python install example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install python parameter python install sobject partner salesforce python install example", "pypi_keywords_clean": "salesforce python sdk salesforcepythonsdk"}, "zopefoundation/zope-configuration": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documented language express default testrunner propagate implemented messageid confusion package package jython support distribution subversion standard release standalone expand environment documentation package suppress change cheeseshop explicit support support continuous standalone package output module jython importin module multiple leading sphinx version compatible coverage subclass helper module declaration dependency jython initial schema spurious declaration support pypy likely available jython extensible system support bootstrap branch internal compatibility incorrect python change attribute continuous integration support python unicode various express configuration translation directive standard language pluggable shadowing attribute namespace signature simplify exception doctestunit initial release python python release support bootstrap jython includepath itemgetter configuration system module import adjust dependency package suppress deprecation method python package structure extensibility module address change", "pypi_keywords_clean": "zope configuration zcml"}, "/api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "django-grappelli-extensions/django-grappelli-extensions": {"git_readme_keywords": "important sidebar commit installation python available generate sidebar request sidebar installation structure generate navigation sidebar important", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ntoll/uflash": {"git_readme_keywords": "system linux device install command makefile library uflash module help knowledge mount command custom runtime version python micropython install development popular linux development version uflash attempt flash version specify micropython version module mount device python hex default python utility discover canonical repository version information boots usb storage extract python uflash watch virtualenv micropython hex runtime hex repository tm specify uflash development source script hex installation install module virtualenv second argument power supply target flash package download upgrade command uflash flag several essential usb default version argument command linux distros unmodified default download pypi common script micropython know default install micropython runtime install command flash unmodified hex hexified python hex format discover version runtime pronounce flash multiple detect specify second device specify storage device technical knowledge connect micro version micropython computer hex extract bbc micro flash python github please micropython custom encode python python script cable connect correct filesystem bbc", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module update system linux device install version uflash command makefile release history uflash update library uflash module tm box uflash work distros work help micropython micro updated version uflash command knowledge mount command custom runtime mu final george amazing version python micropython fix error build micropython record script new radio install development brown work popular linux development version uflash attempt flash version wish upgrade specify micropython way development support flash radio module version module mount device python hex micropython update minor refactoring ability specify default python utility discover canonical repository flag uflash carlos watch version information boots command initial usb storage extract python uflash watch refactor hex documentation update work tm virtualenv micropython hex script refactor refactor documentation runtime hex power good feature complete repository mu update add support hard work specify uflash update help update runtime development source script hex external installation install george carlos command usage module virtualenv content script work micropython second argument supply target bug documentation flash package download command uflash flag micropython bbc copyright license fix runtime updated several essential license information usb default version argument command coverage linux distros unmodified default download pypi fixes updated report version bug runtime common script micropython complete comprehensive know default install micropython runtime grimmer work add version release basic hex extraction initial release install command flash unmodified hex hexified python inclusion input hex format discover version runtime pronounce uflash accept runtime update flash multiple pypi wish george work detect certain carlos pereira update feature robinson work specify second device specify storage device technical knowledge update add update fix connect micro fixes inclusion work version fixes bug add ability documentation version micropython computer accept content documentation access hex extract address record bbc micro gremlin version number history updated version flag flash python github please micropython custom encode python bug fixes current version python script audio speech george add extraction depend cable connect correct basic functionality final update carlos refactor good shape add attribute filesystem bbc", "pypi_keywords_clean": ""}, "Carreau/there": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "likely anyway indentation production gotchas replacement function filename function example", "pypi_keywords_clean": ""}, "HunterLarco/terminator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python game terminator"}, "astropy/astroscrappy": {"git_readme_keywords": "implementation dokkum article multiple identical produce possible readability original convention separable documentation annihilation package speedy automatic recognition optimize depend license project version improvment integrity version parallelization compile information detector x compiler support separable version produce comparable openmp certain astropy", "git_description_clean": "speedy cosmic ray annihilation package python", "git_keywords_clean": "", "pypi_description_keywords": "package cosmic algorithm cosmic", "pypi_keywords_clean": ""}, "/vis-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analysis computer framework python package", "pypi_keywords_clean": "music music analysis music theory musicology counterpoint"}, "akamai-open/edgegrid-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "cloudtools/troposphere": {"git_readme_keywords": "full example create type aws status troposphere cloudformation json property type build status pip distribution troposphere full property aws python community os todo python incorrect library property aws resource install troposphere group ask troposphere aws aws create instance describe aws incorrect property system python os os bsd license single instance distribution system troposphere library sh install instance yaml creation instance sample python facilitate installation troposphere dependency new bsd pypi version clarity incorrect resource property repository license new incorrect type license text full license python simple simple example library create additional validity troposphere community basic support documentation status", "git_description_clean": "troposphere python library create aws cloudformation descriptions", "git_keywords_clean": "python", "pypi_description_keywords": "full example create type aws status troposphere cloudformation json property type build status pip distribution troposphere full property aws python community os todo python incorrect library property aws resource install troposphere group ask troposphere aws aws create instance describe aws incorrect property system python os os bsd license single instance distribution system troposphere library sh install instance yaml creation instance sample python facilitate installation troposphere dependency new bsd pypi version clarity incorrect resource property repository license new incorrect type license text full license python simple simple example library create additional validity troposphere community basic support documentation status", "pypi_keywords_clean": ""}, "canaryhealth/lessc": {"git_readme_keywords": "improbable package kind lessc program lessc compile absolute relative return content implementation python import syntax recursive mypackage python install lessc possible python module actual resolver project homepage compiler compiler compiler information compiler python install import resolution absolute lessc compiler custom compiler filesystem object relative nodejs lessc installation string relative python content compiler configuration import mypackage egg necessary resolution control custom object return initial function default compiler compile loader nodejs program python package import lessc export", "git_description_clean": "python less compiler", "git_keywords_clean": "", "pypi_description_keywords": "improbable package kind lessc program lessc compile absolute relative return content implementation python import syntax recursive mypackage python install lessc possible python module lessc export actual resolver project homepage compiler compiler compiler information compiler python import resolution absolute lessc compiler custom compiler filesystem object relative nodejs lessc installation string relative python content compiler configuration import mypackage egg necessary resolution control custom object return initial function default compiler compile loader nodejs program python package import lessc", "pypi_keywords_clean": "less css compiler"}, "laanwj/bitcoin-python": {"git_readme_keywords": "maintainer bitcoin cryptocurrency documentation documentation support install cheeseshop possible certificate verification bitcoin library structure possible install suggest ultimate version installation install package bandwidth example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "maintainer communication structure suggest ultimate version library bandwidth example original", "pypi_keywords_clean": ""}, "jvsteiner/merkle": {"git_readme_keywords": "append performant implementation golang implementation traversible installation convenience", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "merkle"}, "dbcli/cli-helpers": {"git_readme_keywords": "package perform tabular framework amazing combination documentation quality extend library", "git_description_clean": "python helpers common cli tasks", "git_keywords_clean": "python cli helpers library", "pypi_description_keywords": "package perform tabular framework amazing combination documentation quality extend library", "pypi_keywords_clean": ""}, "georgeyk/loafer": {"git_readme_keywords": "sqs integration python experimental generic sqs integration documentation website multiple asynchronous message concurrent example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generic shutdown improve performance improve package lifecycle handler wildcard execute multiple asynchronous message performance refactor message processing package metadata processing provider support hardcoding configuration importerror wiliamsouza refactor improve internal improve documentation integration documentation improve message metadata example message lifecycle python experimental changelog improve execution service iteration improve message refactor message documentation website initial concurrent metadata information iteration default performance allisson daneoshiga handler integration refactor sqsprovider requirement", "pypi_keywords_clean": "asynchronous asyncio message dispatcher tasks microservices"}, "futurecolors/fc-thumbnail": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support pluggable pgmagick support imagemagick flexible generation integration possibility calculation vertical rewritten imagefield vertical positioning", "pypi_keywords_clean": ""}, "facebookresearch/visdom": {"git_readme_keywords": "value default env provide exact supported number text pad position support theano input filename saved plotting arbitrary html updated update default path support specific table following property updated property value plot use update following rich layout example timestamps following subscribe window input string mapping trace plot specific sift videos svg saved view way envs plot additional demo model check window play wave used server comparison need width figure populate plots supported update position theano codec default color dashboard systematic new envs run server use append stem plot current login python visdom number transparent default string number plots bar environment function box id flexible tool due reliance heatmap plots wrong optional window default default environment plots contour delete button torch fork environment tunnel server multiple columns new enironment easy share caption image show arrow original server responsible functionality send saved last color plotting view saved input tensor server plots command equivalent basic visualization clip maximum visdom attempt helpful use use socket timestamps plotting symbol default example torch dict mapping retrieve common couple webgl current environment resize destroy local command toggle different image equal last setup input window id delete share reuse plots tip table input visdom performance env many marker default space default equal padding default marker value location id use argument complete username password supported color black white wave host address supported fill able keep plots updated supported fps example color plot optional id multiple default default experimentation broadcast window demo window window right following installed matplotlib function env id envs view generic sense expression match several common input function server default default flag new plots contexts single run visdom decimal number series optional possible compare use webgl string representation new env nrow nrow position list visdom creative command input optional secure cookie plot single show legend id input key visualization added match number text appear new environment window attach use browser visdom server env tip protocol url value update receive react number button fork new url server row padding minimum value view management web client contour plots scatter plots server url grouped bar box use argument number plots plotting nrow following following supported string specific chrome surface plot folder icon plots input setup usage visdom client supported sample input list margin video default blank user env attempt pack bar plot append mode disk json regular expression username use red tensor click environment irreversible emphasis scientific experimentation webgl plotting control demos api used internal location contour select multiple information type show helpful authentication sever section env default info sample frequency url proxy helpful sophisticated endpoint used id event complete proxy window singular select image box query environment id input svg supported marker black red maximum value histogram saved png table lua text label text numeric unused endpoint green blue dictionary mapping intensity value environment similiar visdom offline javascript event setup authentication environment delete password use safari work direction length label show dict window handler window bar graphs image default marker symbol facilitate visualization text directory read position sizes example mapping work try single intensity window id image view query server saved jpg high throughput search window check server proxy support attach slider server potential image list tip fork similiar ui environment plot input used trace updated compare environment singular env optional table documentation filename audio label point plot serialize function event clearing filter id environment dict font package installed grid audio visdom object ogg container scale ui used change visdom log mapping protocol figure width default function view view cookie used audio videos enironment comparing restore image following basic ability play access specific caches plots heatmap video input password login container chrome added function replay example function example dict usage start filename video legend type select box construct histogram possible manage possible toggle proxy used provide regular license visdom plots mesh representation key start server need compare internal functionality image keep object receive optional matrix dialog various option location heatmap color opacity performance function content current point color final layout use eraser url default update plots surface plots mesh plots api quick handle systematic experimentation delete environment plotting default single table python example environment check use close point default mode flag default custom quick introduction function support partition visualization lua client columns bottom margin return default hostname run present env content label function svg object image following reload current view png caption b nrow ssh tunnel level default share window fork force environment selector supported jpg static content compare example form fit retaining browser use backend ui create video supported function top margin object matplotlib stem plots serialize env discrete last tick colormap default event keycode font information following generic user register create plot matrix following columns additional efficient environment search single trace failure use specify slider bottom hash window addition optional use matrix supported colormap visdom implementation svg string lua env optional argument window plotted server api regular grid update request window closed new property dash type optional used title figure red green ui feature right margin use new visualization space jpg quality debug experimental plotted transparent management useful browser host convert tensor form editable reuse fork list python lua value checkbox optional tensor window check histogram following supported scatter something high quantity alive visdom number decimal change generic environment query contour plot white tensor wait server pad functionality different additional compare offline mode default raise plotting function usage api updating single new value compare legend irreversible use button serialize trace international public flag run plots access specific function tensor integer env clearing many matplot common plot particular label browser support text string figure title display overview current server server restore supported length log plotting check box configured figure use function configuration meaningful use option location surface support username create update plotting plotted stereo audio close window argument envs matplotlib plot possible select image history overview visdom following api font layout content plotting updating unique color plot following individual plots value specific grid following support following additional environment new audio function enable use frequency default saved current mesh plot torch example share url checkbox select use authentication updated property image function default password drop resize zoom browser default clip edits environment individual fps video use feature default additional text box codec ogg server replicate plot direction multiple common default dictionary visdom simple tick last initialization server button button matrix stereo eraser button single plot icon dialog play video request default use zoom env dir dict additional scroll used plot python table flag start saved callback editable text cursor point black default enable default dict previous env window return image saved use sparingly specific window python python environment environment scipy convert python package compare envs session reload mode visdom example use repack icon login flag saved visdom trace use generic plots window plotting filter use list new id window tip use meaningful demo dialog window plots stem flag setup experience input table specify visualization scatter plot specific env used request plots generic installed use exception authentication server plots visdom filepath hostname visdom visdom inspired standard text list possible inspect create new issue visdom type label visdom flexible webgl contexts server hostname clip minimum compare different heatmap following waveform use", "git_description_clean": "flexible tool creating organizing sharing visualizations live rich data supports torch numpy", "git_keywords_clean": "", "pypi_description_keywords": "value default env provide exact supported number text pad position support theano input filename saved plotting arbitrary html updated update default path support specific table following property updated property value update following timestamps following rich layout example waveform subscribe window input string mapping trace plot specific sift videos svg saved view way envs plot additional demo model check window play wave used server comparison need width figure populate plots supported update position theano codec default color filter dashboard systematic new envs run server stem plot current login python visdom number string number plots bar environment function box id flexible tool due reliance heatmap plots wrong optional window default default environment plots contour delete button torch fork environment tunnel server multiple columns new enironment easy share caption image show arrow original server responsible functionality send saved last view saved input tensor server plots command equivalent basic visualization clip maximum visdom attempt timestamps plotting symbol default example torch dict mapping retrieve common couple webgl current environment resize destroy local command toggle different image equal last setup input window id delete share reuse plots tip table input visdom performance env many marker default space default equal padding default marker value location argument complete username password quality default supported color black white wave host address supported fill plots updated supported fps plot optional id multiple default default experimentation broadcast window demo window window right following installed matplotlib function env id envs view generic sense expression match several common input function server default new plots contexts single series optional decimal number possible compare string representation new env nrow nrow position list visdom creative command input optional secure cookie plot single show legend id input key visualization added match number text appear new environment visdom server env tip protocol url value update receive react number button url server row padding minimum value view management web client contour plots scatter plots server url grouped bar argument number plots plotting nrow following following supported string specific chrome surface plot folder icon plots input setup usage visdom client supported sample input list margin video default blank user env attempt pack bar plot append mode disk json regular expression red tensor click environment irreversible emphasis scientific experimentation webgl plotting control demos api used internal location contour select multiple information type show helpful authentication sever section env default info sample frequency url proxy helpful sophisticated endpoint used id event complete proxy window singular box query environment id input svg supported marker black red maximum value histogram table lua text label text numeric unused endpoint green blue dictionary mapping intensity value javascript event setup authentication environment delete safari work direction length label show dict window handler window bar graphs image default marker symbol facilitate visualization text position sizes example mapping work try single intensity window id query server high throughput search window check server proxy support server potential image list tip fork environment plot input used trace updated compare environment singular env optional table documentation filename audio label point plot serialize function event clearing filter id environment package installed directory grid audio visdom object ogg container scale ui used change visdom log mapping protocol figure width default function view view cookie used audio videos enironment comparing restore image following basic ability play access specific caches plots heatmap video input password login container chrome added function replay example function example dict usage start filename video legend type select box construct histogram possible manage possible toggle proxy used provide regular license visdom plots mesh representation key start server need compare internal functionality optional matrix object receive dialog various option location heatmap color opacity performance function content current point color final layout url default surface plots mesh plots api quick handle systematic experimentation delete environment plotting default single table python example environment check point default mode flag default custom quick introduction function support partition visualization lua client columns keep hostname run present env content label function svg object image following reload current view b nrow ssh tunnel level default share window fork force environment selector supported jpg static content compare example form backend default caption ui create video supported function top margin object matplotlib stem plots serialize env discrete last tick colormap default event keycode following generic user register create plot matrix following columns additional feature efficient environment search single trace failure hash window addition optional supported colormap visdom implementation svg string lua env optional argument server api regular grid update request window closed new property dash type optional used title figure red green right margin visualization space jpg quality debug experimental management useful browser host convert tensor form editable reuse fork list python lua value checkbox optional tensor window check histogram following supported scatter something high quantity alive visdom number decimal change generic environment query contour plot white tensor pad functionality different additional compare plotting function usage api updating single new value compare legend socket button serialize trace international public plots access specific function tensor integer env clearing many matplot common plot particular label browser support text string figure title display overview current server server restore supported length log plotting check box configured figure configuration meaningful location surface support username stereo audio sparingly close window argument envs matplotlib plot possible select overview visdom following api layout content plotting updating unique color plot following individual plots value specific grid following support following additional environment new audio function frequency default saved current mesh plot torch example share url checkbox select updated property image function default password drop resize zoom browser default clip edits environment individual fps video default additional text box codec ogg server replicate plot direction multiple common default dictionary visdom simple tick last initialization server button button matrix stereo eraser button single plot icon dialog play video request default env dir dict additional scroll used plot python table flag start saved callback editable text cursor point black default enable default dict previous env window return specific window python python environment environment scipy convert python package compare envs session reload repack icon login flag saved visdom generic plots window plotting list new id window meaningful demo dialog window retaining plots stem flag setup experience input table specify visualization scatter plot specific env used request plots generic authentication server plots visdom filepath hostname visdom visdom inspired standard text list possible inspect create new issue visdom type label visdom flexible webgl contexts server hostname clip minimum compare different heatmap following", "pypi_keywords_clean": ""}, "/gear": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "asynchronous interface", "pypi_keywords_clean": ""}, "pythongssapi/k5test": {"git_readme_keywords": "environment useful python inherit inherit kerberos deployment documentation information required kerberos environment particular gssapi extension decorator kerberos decorator library gssapi extension constructor several useful manipulate", "git_description_clean": "library setting kerberos environments based code mit", "git_keywords_clean": "", "pypi_description_keywords": "environment useful python inherit inherit kerberos deployment documentation information required kerberos environment particular gssapi extension decorator kerberos decorator library gssapi extension constructor several useful manipulate", "pypi_keywords_clean": "gssapi"}, "marshmallow-code/flask-marshmallow": {"git_readme_keywords": "", "git_description_clean": "flask marshmallow beautiful apis", "git_keywords_clean": "python flask marshmallow sqlalchemy", "pypi_description_keywords": "marshmallow beautiful python marshmallow python project bundled framework documentation define output additional python define integration changelog marshmallow compatible version library python output", "pypi_keywords_clean": ""}, "/js-jqueryui": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "themeroller download version rollup default jqueryui javascript twitter bootstrap minified version distribution original addition separate integration download builder framework datepicker directory something normal minified experimental experimental twitter dictionary initial release different individual introduction library current request jqueryui distribution", "pypi_keywords_clean": ""}, "caktus/django-treenav": {"git_readme_keywords": "management coverage extensible hierarchical pluggable customization complete documentation development overridden database installation efficient follow extensible hierarchical flexible hierarchy separate application independent particular sidebar implementation separate pluggable navigation documentation checkout functionality multiple product complete", "git_description_clean": "extensible hierarchical pluggable navigation system django sites", "git_keywords_clean": "", "pypi_description_keywords": "management coverage extensible hierarchical pluggable customization complete documentation development overridden database installation efficient follow extensible hierarchical flexible hierarchy separate application independent particular sidebar implementation separate pluggable navigation documentation checkout functionality multiple product complete", "pypi_keywords_clean": ""}, "markfinger/js-host": {"git_readme_keywords": "process logger documentation cli start host use logger persistent javascript javascript console want block pass error contain configuration version help specific environment version output configurable javascript environment config config simple error response endpoint description config property default file function function body function configuration host text want mistake run host provide similar logfile access function host handle process inspect process version interact library host exit new connection want run javascript host description config configuration function function add statement want request body usage file access javascript response text host able source error use pass condition pass state error second object example definition host example value usage create error response function manager process error condition output help handle host environment encounter error host config object eg host call output response caller text method endpoint debugger example config json argument pattern file start spawn new define property manager run winston default cli usage host start network object access usage config property config file transport pass value process number environment variety http provide function example response value json object massive performance file output json request indicate function open help text example config block process javascript execjs host function json process first argument host listen second argument provide number identifier property create file maximum size argument example handle need value object example place worst exit file manager manager wait environment example function output want pass js transport process config file interactive debugger json json logger define identifier information api javascript falsey host execution javascript add extra inspect environment success response request documentation stack trace particular request pass output package logger object encounter condition able provide path config want use config use log output help output information host basic usage example want debugger start alias description want log manager environment endpoint send connection host property request overhead specify path usage documentation host interactive al performance similar api add object place statement stderr want error host javascript environment file contain pattern typical default logger etc text function exit function file example provide number host config object run manager value second run process use config host process pass object trace response pass configuration console object simple map pass json call need installation basic package version access host text response condition response argument falsey code connection identifier use statement call hence uncaught", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "hepdata/hepdata-validator": {"git_readme_keywords": "cloader package validate python example hepdata validator documentation installation validate license documentation install upgrade github machine python testsuite library parsing schema validation instantiate validator hepdata submission object installation install travis message lookup", "git_description_clean": "json schema validation code hepdata submissions", "git_keywords_clean": "", "pypi_description_keywords": "validator information", "pypi_keywords_clean": "hepdata validator"}, "scrapinghub/js2xml": {"git_readme_keywords": "parsing download suitable extract support deprecate packaging bumpversion install install example changelog distribute universal coverage regular deprecate introduce document unicode convert javascript function suppress permission initial release object snippet updated automatic", "git_description_clean": "convert javascript code xml document", "git_keywords_clean": "", "pypi_description_keywords": "interesting xpath example javascript function", "pypi_keywords_clean": ""}, "python-ivi/python-usbtmc": {"git_readme_keywords": "usbtmc readme identified serial disappear python substitute member libusb generate optional python usbtmc multiple idvendor idproduct python usbtmc resource content repository google serial number connect vendor product introduction python possible connect python python script installation extract access agilent correct idvendor github repository readme information", "git_description_clean": "provides usbtmc driver controlling instruments usb", "git_keywords_clean": "", "pypi_description_keywords": "package protocol instrument", "pypi_keywords_clean": "usb usbtmc measurement instrument"}, "phasemix/phasetumblr": {"git_readme_keywords": "overview blog python", "git_description_clean": "posts tumblr blog python list", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fedora-static-analysis/firehose": {"git_readme_keywords": "package cppcheck findbugs workstation describes warning warning filename useful textual multiple serialization validate analysis identify collection documentation identifier output equivalent available modification version software schema number server filename function report common firehose interprocedural different motivation analysis database quality common interchange location warning feedback firehose rebuild annotate compilation lossless", "git_description_clean": "interchange format results static analysis tools", "git_keywords_clean": "python", "pypi_description_keywords": "package cppcheck findbugs workstation describes warning warning filename useful textual multiple serialization validate analysis identify collection documentation identifier output equivalent available modification version software schema number server filename function report common firehose interprocedural different motivation analysis database quality common interchange location warning feedback firehose rebuild annotate compilation lossless", "pypi_keywords_clean": ""}, "/python-surveilclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package library surveil python surveil environment variable interact surveil shell command completion endpoint documentation shell complete documentation", "pypi_keywords_clean": ""}, "niwibe/django-dbconf": {"git_readme_keywords": "database efficient flight prefix instance public prefix generator modification prefix persistence interface configuration memory django application database modification public method efficient access singleton example example complex namespace object example updated certain", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "openSUSE/spec-cleaner": {"git_readme_keywords": "license adsl license cua tmate tmate license vim license plexus group test sgi free license caldera postgresql license isc isc warranty bsd leptonica leptonica gnu free art libre public source notice apache report license bec r attribution enlightenment retention ftl license nrl license artistic source license domain dedication sybase open attribution boost ntp license berlin license diffmark diffmark qhull license libpng license fsful fsf ncsa university clause license odc open license community xskat xskat notice saxpath license net ntp ntp dvipdfm dvipdfm license sleepycat license nokia tosl trusster rdisc license bec permissive crossword crossword license adobe attribution share vovida software adaptive public license php dsdp dsdp imatix imatix notice license license computer enlightenment license gnuplot license lucent public eiffel forum artistic license du qu borceux borceux license unicode jython license license oml plexus plexus standard function educational community nrl nrl open font tmate open license cmu tool zlib zlib license enna clean enviroment kernel variant license zend license borceux netcdf netcdf protocol public license miros microsoft reciprocal open cascade license mozilla qhull qhull license ruby doc doc license barr license tcp imagemagick license net boolean license netscape php license open market unported creative wsuipa wsuipa license apple free license version linux eurosym license attribution unported entessa public agreement adobe sendmail sendmail cnri jython license entessa free public license bahyph license sendmail license eudatagrid license glulxe license psfrag entessa entessa code attribution cecill free national code public saxpath saxpath license feh perl artistic open group unicode license boost software apache license original old license aal xinetd license license rdisc version licence public attribution icu icu license xerox license odc r ciprocit license mtll order postgresql postgresql free documentation unify spec license fsfap snia snia license torque aml apple aladdin aladdin torque software patent license license linguistic noweb license scea scea norwegian licence commercial share postscript afm icu license commercial generic bsd zero code license database license glide license osc service nosl netizen license norwegian license hpnd nrl license license snia motion picture gnuplot gnuplot zend license universal common crossword license license nasa xskat license license smlnj bsd variant netbsd license license qhull testsuite clean license ijg license agreement license sun license lawrence license libtiff psfrag license bsd source software mup license newsletr newsletr swl software netizen open testsuite jpeg group license technische public license license affero sil open fsfullr fsf barr license license freeimage license ipa license isc license gnuplot mit mit license educational ibm public documentation license nokia open common public license makeindex bsd netbsd fsf permissive cua office rdisc rdisc mit attribution license mit bsd attribution license afmparse able unify tcl license eu datagrid makeindex license copyleft exception oml open amdplpa amd json json libtiff libtiff office public historical permission license bittorrent gnu library code project general public license rsa eudatagrid eu license code matrix template document license aal attribution agreement cecill curl curl permissive community international creative license haskellreport new jersey licence libre latex project leptonica license permissive version license interbase permission notice gpl compatible license swl tag description license doc qu bec license netcdf universal permissive caldera caldera license newsletr trusster open glulxe license zero clause license imagemagick imagemagick imagemagick vim license isc license license academic test suite ipa ipa bsd license unlicense unlicense acpi software cnri python research public frameworx open software license afm license xerox license mit license license mup ruby ruby jersey license cmu license license wsuipa miros license university bsd aladdin free openssl license intel intel commercial international nuclear license open government technische universitaet license sissl license european agreement intel license common crystalstacker license psfrag psfrag xpp xpp bittorrent open attribution assurance license sgi software notice license aml license university netscape public license wtfpl license license license tag license fair intel acpi market license odc public license vostrom license ntp library swl barr barr sendmail license newsletr license agreement free freeimage public bsd protection smppl secure unlimited license enna license description bsd mup mup generic creative affero general freebsd license assurance license boolean public zero universal version open cascade technology dotseqn license license dsdp domain notice project public libre licence source vovida bsd new intel open template library freetype project deutsche freie distribution license independent jpeg license leptonica bsd nuclear ciprocit forte caldera license hpnd historical sleepycat license ciprocit version rscpl ricoh license spencer vim vim license motosoto license microsoft bsd freebsd crystalstacker crystalstacker beerware license reciprocal public giftware giftware mozilla public license reciprocal cube cube digital spdx open database european union vostrom vostrom license dvipdfm license gnu commercial unported license dotseqn font license fsf unlimited libpng libpng ipa font list license attribution international b simple xpp license license latex license xnet ibm powerpc libre license open license license version agreement cnri license fsfullr license amdplpa license curl license adaptive protection license license lucent open public glyph list public domain agreement tcl license imatix borceux license bsd original license cube license xpp b sgi zlib license agreement license beerware beerware xerox xerox adobe postscript feh license apple public apple mit license beerware freie software variant license license acknowledgement run testsuite license deutsche license python license xskat spencer license python license suite license afmparse afmparse license jasper jasper license sissl sun university open forte version clear license nuclear warranty license creative license b acknowledgement zlib tox run unlicense universal smlnj standard attribution generic license sybase language report openssl openssl license software boot software license mitnfa software unicode fsfap fsf license intel open source haskellreport haskell license postgresql freeimage freeimage glide glide license zope license xinetd wsuipa license ricoh source xinetd xinetd old license agreement permissive glulxe glulxe powerpc initialization motosoto motosoto union public json license amd license curl license ruby license development distribution licence open license noweb license perl apafml adobe license json sleepycat sleepycat imatix standard permissive license version lucent government licence function library license retention dedication license bahyph bahyph license frameworx microsoft public license open interbase public license ncsa libre du library license license fsful makeindex makeindex python open free software license apafml license cnri motosoto license license sil ijg independent project license attribution license rsa license license rscpl license eurosym fair fair exception mozilla license scea snia public noweb noweb haskell language license nosl license copyleft enviroment run zope public project open library general attribution bsd bsd clear license tmate exception name academic free replacement osc gnu affero license eiffel reciprocal license technology public doc license license crystalstacker eurosym eurosym library agreement datagrid software sun industry miros miros cube license adobe glyph dotseqn dotseqn license licence license smppl swl scheme agreement clartistic gnu general software icu vostrom public giftware license fair license saxpath license group license mitnfa mit license glide source code libtiff license initialization boot license apache license crossword afmparse license dsdp license xnet license name suse mtll matrix nasa open source gpl license bsd common development license spdx licence art compatible license simple public universitaet berlin license ibm dvipdfm license sun public nokia nokia open software diffmark license license tosl license openssl community license notice document linux kernel academy motion ftl freetype bahyph license source agreement netcdf license license ngpl forum license", "git_description_clean": "", "git_keywords_clean": "suse python", "pypi_description_keywords": "tool", "pypi_keywords_clean": "suse"}, "/pkginfo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package coverage module breakage stringio minimal metadata license suitable misspelling restore wheel introspection installed accepted version support unpacked binary distribution syntax project directory metadata support relicense unfold distriubtion binary development checkout detailed documentation invalid automate installed namespace stdlib module different metadata argument current pypy directory packaging support license extras regression python module available support installed support different command available distribution python breakage approved relative support wheel lundy documentation changelog programmer ratnakumar dependency metadata misspelling bogus resource warning support pypy metadata version distribution object support introspection iteration metadata compatibility python support iteration environment classifier python metadata support python support building subdirectory unicode whitespace invalid wheel function continuation launchpad prefix synthesize information attribute preserve console initial release wheel distribution directory installed introspection development available python installed distribution restore compatibility homepage abstraction collection introspection binary failure python", "pypi_keywords_clean": "distribution sdist installed metadata"}, "/fanova": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "hyperparameter parameter optimization bayesian smac global variance analysis"}, "kmike/russian-tagsets": {"git_readme_keywords": "\u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c\u0438 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0433\u0440\u0430\u043c\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0433\u0440\u0430\u043c\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 russian \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e install \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 pymorphy \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c\u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u0440\u0438\u0432\u043e\u0434\u044f\u0449\u0443\u044e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0443 feldman positional \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "\u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f opencorpora grammeme ruscorpora conversion conversion support \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c\u0438 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0433\u0440\u0430\u043c\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f opencorpora universal grammeme opencorpora \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u043c argument conversion \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 packaging positional \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0433\u0440\u0430\u043c\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e pymorphy cleanup \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c\u0438 opencorpora ruscorpora release \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u0440\u0438\u0432\u043e\u0434\u044f\u0449\u0443\u044e function \u043f\u044b\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 optional argument \u0441\u0442\u0435\u043f\u0435\u043d\u044c\u044e \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0443 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430", "pypi_keywords_clean": ""}, "/requests-mock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everything applicable adapter transport information checkout license checkout reporting checkout information development version license software prefixed express license specific context manager specific language compliance license decorator building example license version", "pypi_keywords_clean": ""}, "zwischenloesung/ardu-report-lib": {"git_readme_keywords": "basic custom schema valid schemas folder default complete arduino display infrastructure object describe valid schema schema definition reporter object actual schemas valid output creation example regular schema microcontroller server transform output stdout example status trivial accept definition folder default output import arduino serial valid sensor sensor scheme python library python processing serial central object request https array sensor infrastructure stable schema schema", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic custom schema valid schemas folder default complete arduino display infrastructure regular basis object describe usage import valid schema schema definition reporter object actual schemas valid output creation example schema microcontroller server transform output stdout example trivial accept definition folder default output arduino serial valid sensor sensor scheme python library python processing serial central object request upload https sensor infrastructure schema schema", "pypi_keywords_clean": "arduino sensor json"}, "silas/ops": {"git_readme_keywords": "administration library example something", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration docs", "pypi_keywords_clean": ""}, "hustlzp/flask-boost": {"git_readme_keywords": "javascript generate project gunicorn production deploy writing article pycrypyto library validate development define supervisor license database project structure version pattern generate database install python bootstrap frontend commit directory frontend framework application generator generate controller fabric deployment nginx compile different config factory pattern installation development install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript generate project gunicorn production deploy attention breaking writing article pycrypyto library validate install version development define supervisor license install command database project structure version version github pattern generate database install python bootstrap frontend commit directory frontend framework application generator generate controller project project nginx github attention version development compile different config fabric deploy factory pattern install package", "pypi_keywords_clean": "flask sample generator"}, "ncoghlan/rpm": {"git_readme_keywords": "software documentation available additional package manager copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "placeholder package automation potential conflict available libsolv libdnf compatible amenable", "pypi_keywords_clean": ""}, "ArchangelSDY/pypuzzle": {"git_readme_keywords": "ioerror addition library pypuzzle libpuzzle consult support similar example libpuzzle ubuntu python python support libpuzzle libpuzzle corresponding present pypuzzle consult original python information pypuzzle pypuzzle section installation present related information libpuzzle reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python libpuzzle", "pypi_keywords_clean": ""}, "mapbox/rasterio": {"git_readme_keywords": "download binary tracker mapbox support ubuntu development standard console success christoph gohlke system python version python rasterio support support primary library dependency rasterio version actionable website install format channel console geotiff necessary gohlke available indicated organization mapbox configuration console unofficial binary compiler rasterio compatible example different requirement github organization download available ubuntugis default rasterio dataset travis guidance specify location rasterio command discover install rasterio overview rasterio license group development question patient installation important panchromatic different location platform rasterio information building geospatial console reserve commercial platform primary forum width rasterio group rasterio configuration python environment support commercial present x binary rasterio python script numpy python rasterio location system example example access geographic information source distribution version visual rasterio rasterio minimal cython binary distribution computer ubuntu numpy georeferenced console source extension include possible extended visual studio documentation ubuntugis anaconda install source version install anaconda channel python variable specify official binary directory something x available available website python output compile ability environment variable interface mapbox github customer support x homebrew building source ubuntu system", "git_description_clean": "rasterio reads writes geospatial raster datasets", "git_keywords_clean": "python gis raster gdal cli cython", "pypi_description_keywords": "download binary tracker mapbox support ubuntu development standard console success christoph gohlke system python version python rasterio support support primary library dependency rasterio version actionable website install format channel console geotiff necessary gohlke available binary indicated organization mapbox configuration console compiler example different requirement github organization download available ubuntugis default rasterio dataset travis guidance specify location rasterio command discover install rasterio overview rasterio license group development question patient installation important panchromatic different location platform rasterio information building geospatial console reserve commercial platform width rasterio group rasterio configuration python environment support commercial present x binary rasterio python script numpy python rasterio location system example example access geographic information source distribution version visual rasterio rasterio minimal cython binary distribution computer ubuntu numpy georeferenced console source extension include possible extended visual studio documentation ubuntugis anaconda install source available version install anaconda channel python variable specify directory something available website python output compile ability environment variable x interface mapbox github customer support x homebrew building source ubuntu system", "pypi_keywords_clean": "raster gdal"}, "/xmlunittest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everything explain unittest testcase expression library various schema configuration package requirement compare unittest package function document something generate assertion readable example optional distribution documentation follow", "pypi_keywords_clean": ""}, "marquee/noat": {"git_readme_keywords": "common annotation arbitary slight invalid attribute attribute droptype helper necessary python license unlicensed available markup optional python keyword public keyword annotation attribute document overlap example annotation convenience information different language closing python coffeescript correct prevent overlap", "git_description_clean": "annotation tagging applying html tags text arbitrary reference", "git_keywords_clean": "", "pypi_description_keywords": "arbitary invalid attribute attribute droptype helper instance license unlicensed markup optional constructor public keyword annotation attribute document overlap example supersede annotation convenience information different closing correct prevent overlap", "pypi_keywords_clean": "html tags tagging annotations annotation text"}, "/zest-releaser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "release bump confusing word changelog current hg git mgedmin add trunk branch bzr course unreleased section new distribution genome command suggestion version plaintext updatehistory library fixes fix random much willowmck create package warning tag version commit uploaded client upload wheel fixes issue directory repository release pypi https pypi buildout buildout update major indicate section used avoid carriage return section package underline style universal character method check universal interpolation password package index package briefly osx new mercurial university lasttaglog small author package issue fixes willowmck change directory package sub example changelog reinout global added used check long version extra michael htgoebel add create wheel default answer necessary rename prerelease functionality added recover difference tag message issue installation computer setuptools support uppercase textual message uploading first local repository git hg newlog default subversion instance uploading anything command show software added config formatter original added support entire trunk plain setuptools command reload python supported python support dependency tag handy style prefix used work added option bazaar bzr source dist support command careful publish error uploading fixed version typo svn full documentation current release version updates good htgoebel tag default documentation uploading canonical domain clear command fix problem pypi password api readme document support good measure fixed error added nothing documented try reason ascii insert path making fix create password raw add prerelease configuration version subversion added installation simple multiple version history give error version control release wheel python version bzr subversion git bzr gforcada added version fixes mgedmin reinout description way push twine minimum tag formatter marker updates create additional pypy jamadden character entry add section build universal format leorochael useful great path option uploaded first current package tell uploading fixes tag checkout svn hg release universal wheel issue git mercurial changelog entry single config default pypi forgot command check package number version info message experience try temp folder addchangelogentry pass internet initial universal wheel mercurial hg development version accidental extra reinout fixed buildout render mitchellrj touch history uploads source tcezard catch btw readme subversion bzr default reload pypi project fixes fullrelease order way pypi version release control system health compatibility create section new option supported supported checkout tag pypi fixes attribute python optional btw option update registering uploading directory subversion https reinout secure uploading added heapload correct character support wheel show changelog different package history add rename library support pypy prevent unclosed commit message reinout tag shallow git version option fixed registering practical experience changelog character source release support changelog section option instance available second third tell look urls first svn mercurial handy checking extra changelog bumpversion release pypi plain error fixes prerelease changelog try report svn command call check present conscious decision extra carriage support uploading register info option section look current twine generic generic way namespace package package server available used option htgoebel wheel installation updates version browser change system dist package wheel upload current branch version ewjoachim new pypi directory sub control current forgot specify basic implementation folder fixes april used anymore new development future entry added output upload source first offer package upload add tag pypy library reinout fixed percentage compatibility python register new config option uploading mgedmin restructured version development new extra added key add favorite new filesystem package pypi global add git bazaar problem clear travis continuous project buildout recommended extra branch current development marker subversion fix pypi python travis landscape python indicate long description command fixes help work twine tag directory false library pypi tag temporary avoid bag pypi uploading uploading python releaser careful added clarification fixed exception correct history mercurial support fixes reinout dash command key prerelease nicer way word register support similar reinout fix command available package global notable mercurial completeness safety question message changelog double added release tag description reinout checking package twine good registering used create shallow uploadable duplicated second anything something right thing bumpversion call overview installation upload pypi bubblenet added statuscode uploading success installation namespace current directory python project support require issue gforcada try fixes add support fixed typo travis ci added python temporary directory plugin prevent first character optional support wheel python register package release new entry changelog readme package update minor settings server fullrelease check pypi give warning fix wheel fixes option show specific project order osx pypi config registering package added entry talk pypi initial version add extra mitchellrj try valid statuscode checking python major version percentage sign urls https new canonical exception twine distribution upload git git work python problem python jamadden command useful making number history question location exact behavior complete upload registering version look handy secure installation collection broken release process api twine relative path first duplicated python usual added config add optional making change supported anymore pypi package uploading multiple fixed ioerror answer question broken force version changelog minor version markdown fixes command issue big current version release python new version prerelease postrelease changelog fixed package available package backport wrong directory checking version history idea package version optional first package prereleaser support version small tool anymore pypi markdown create tag current development change future performs register upload pypi registering entry bumpversion format config repository server released version magenta happen usual release section create help program repository detect issue exact number issue location question support package support mitchellrj catch error extension new released tag current checkout history header used uploading added command extra issue task readme changelog detect first offer change depend entrypoint show question great majority used commit additional twine command entry check fixed several fixed possible package depend option default publish private fixed reinout twine work suggestion mgedmin version minus git release tag entire default drucci new python minus updates checkout change bzr hg history changelog detector right uploading require notice upload message reinout index ask add entry default version postrelease new making git command pypi ask pypi project drucci added readthedocs urls answer new package api control tag package long tag awello mgedmin package package format bump version twine fixes postrelease feel useful python wheel change batch python python small error fixes fixed new prerelease source distribution python package leorochael subversion continue support multiple force upgrade specify server package regard filesystem added important urls black making tag pypi broken look prerelease anything first look look specific try recover new package minimum version good idea buildout configuration center added checkout formatter config activate add password percentage reinout add standard source subversion svn offer upcoming htgoebel reinout try dash reinout release effect used added prerelease fix bumpversion version number require twine changelog bumpversion uploading pypi continuous integration added extra checking tag sub directory failure travis uploading new directory relative favorite geeky directory look format create", "pypi_keywords_clean": "releasing packaging pypi"}, "rlisagor/pynetlinux": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "configuration library ethernet default interface network configuration lisagor richard ifconfig pynetlinux address netmask", "pypi_keywords_clean": ""}, "/translationstring": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility default contexts symptom template package documentation honour library utility translationstringfactory translation pluralization instance support translation package github dependency determine translation various factory student information internationalization chameleontranslate untranslated initial translator factory contstructor", "pypi_keywords_clean": "internationalization localization gettext chameleon"}, "nanomsg/nnpy": {"git_readme_keywords": "python world python cffi install python import shell related library", "git_description_clean": "python bindings nanomsg", "git_keywords_clean": "", "pypi_description_keywords": "python world python cffi install python import shell related library", "pypi_keywords_clean": ""}, "/aiomultiprocessing": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/oslo-concurrency": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software documentation external library repository", "pypi_keywords_clean": ""}, "/gyp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "vtraag/louvain": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "algorithm community detection", "pypi_keywords_clean": ""}, "husio/sqlitebck": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "david-caro/autosemver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dask/s3fs": {"git_readme_keywords": "documentation filesystem interface convenient", "git_description_clean": "filesystem", "git_keywords_clean": "", "pypi_description_keywords": "documentation filesystem interface convenient", "pypi_keywords_clean": "boto"}, "wearespindle/freemail": {"git_readme_keywords": "request database project choice effort service default language choice install handy module access directory various disposable member freemail database", "git_description_clean": "database free disposable email domains handy module querying", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "email"}, "/scikits-learn": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default tracker complete cournapeau google project documentation development documentation install installation launch python machine important python install directory install development release development version installed google summer version download software python information official compiler channel", "pypi_keywords_clean": ""}, "sysr-q/flask-themes2": {"git_readme_keywords": "infrastructure documentation development matthew leafstorm documentation documentation contribute support development interested available version installation plausibility development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infrastructure documentation development matthew leafstorm documentation documentation contribute support development interested available version installation development", "pypi_keywords_clean": "flask themes theming style"}, "seppo0010/hirlite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "redis rlite"}, "/python-mango": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "operation default default select insert query record gettable select simple wrapper update update update record update operation insert insert mongodb uri select query insert record pymongo installation delete delete python availabe function insert insert update module mongo parameter mongodb object parameter module sample wrapper module connection parameter function update install lib function initdb object default mongodb connection update delete function delete installation install delete record mongodb filter filter object pass pymongo initdb gettable import module default pass mongodb update pymongo function", "pypi_keywords_clean": ""}, "indico/flask-multipass": {"git_readme_keywords": "production authentication authenticate documentation available", "git_description_clean": "authentication system flask", "git_keywords_clean": "", "pypi_description_keywords": "production authentication authenticate documentation available", "pypi_keywords_clean": ""}, "ga4gh/ga4gh-schemas": {"git_readme_keywords": "compatibility describe everything reference variation complete involved ongoing january several primary documentation contribute schemas previous repository retirement specification document everything sequence additional evaluation underpin definition standardisation schemas documentation reference implementation engineering committee group international reference ontology essential ongoing technical decision standardisation improvement metadata international coalition annotation document license infrastructure consistent different ongoing sequence variation formats ontologies metadata formats genomic information formats sequence relevant genomic clinical abstract", "git_description_clean": "models apis genomic data retired", "git_keywords_clean": "", "pypi_description_keywords": "serialize protocol documentation available standard interchange", "pypi_keywords_clean": "genomics reference"}, "CognutSecurity/h3mlcore": {"git_readme_keywords": "hadoop ecosystem ecosystem design softmax output learning architecture system introduction learning system preprocessor process similar library application current nowadays network architecture machine learning adversarial learning capable preprocessing example softmax descript reshape iterator functional machine copyright leverage project amazing machine architecture learning install functional system preprocessing machine training performance internal knowledge differend computer cluster robust adversarial feeding frontend tutorial network optimize particular library machine learning framework pipeline general purpose architecture allocate memory learning backend information iterator feeding different responsible preprocessing cluster websocket interact training learning distillation enough protocol introduction briefly advanced dataset training training process parameter synchronization dataset preprocessing feature preprocessing tensorflow cluster neccessary block visualize optimize training copyright acknowledge", "git_description_clean": "actor based machine learning library practitioners", "git_keywords_clean": "", "pypi_description_keywords": "hadoop ecosystem ecosystem design softmax output learning architecture system introduction learning system preprocessor process similar library application current nowadays network architecture machine learning adversarial learning capable preprocessing example softmax descript reshape iterator functional machine copyright leverage project amazing machine architecture learning install functional system preprocessing machine training performance internal knowledge differend computer cluster robust adversarial feeding frontend tutorial network optimize particular library machine learning framework pipeline general purpose architecture allocate memory learning backend information iterator feeding different responsible preprocessing cluster websocket interact training learning distillation enough protocol introduction briefly advanced dataset training training process parameter synchronization dataset preprocessing feature preprocessing tensorflow cluster neccessary block visualize optimize training copyright acknowledge", "pypi_keywords_clean": "machine learning data mining"}, "mozilla/socorrolib": {"git_readme_keywords": "socorrolib reporter deployment process standard monorepo revision release multiple library relationship development deployment historic mozilla development", "git_description_clean": "deprecated core libraries socorro subsystems", "git_keywords_clean": "", "pypi_description_keywords": "socorrolib reporter deployment process standard monorepo revision multiple library relationship development deployment historic mozilla development", "pypi_keywords_clean": ""}, "dbrgn/rplcd": {"git_readme_keywords": "implemented simple install library smbus library alphanumeric hitachi controller wheel today library rplcd rplcd build status import download documentation stable current character support standard support wishlist parallel backpack documentation license python package directory controller controller support parallel install python support support custom manufactured connection support interactive python raspberry outside version python compatible python please express smbus available implemented future download repository control directory import liquidcrystal library library hitachi install rplcd information script motivation external preinstalled raspbian adafruit action python package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implemented simple install library smbus library hitachi controller wheel library rplcd rplcd build status documentation stable current character support wishlist parallel backpack documentation license python package directory support parallel install python support support custom connection support interactive python raspberry version python compatible python please express smbus available implemented future directory download repository control liquidcrystal library library hitachi install rplcd ignored information motivation external preinstalled raspbian adafruit python package support character", "pypi_keywords_clean": "raspberry raspberry pi lcd liquid crystal hitachi"}, "iPlantCollaborativeOpenSource/caslib-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Mindwerks/pyplatec": {"git_readme_keywords": "appveyor bachelor engineering library metropolia university worldengine attention project history several viitanen reference downloadable decided project project original project control compile project pyplatec simulation helsinki fantastic appveyor uploaded pyplatec", "git_description_clean": "plate simulation python wrapper existing c library", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/kudu-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation kudu client python interface", "pypi_keywords_clean": ""}, "/glueviz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stable package contain future glueviz package", "pypi_keywords_clean": ""}, "/transmissionrpc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administrator introduction transmissionrpc svensson compatible transmission bitbucket copyright transmissionrpc simplejson requirement transmission developer protocol bittorent transmission transmissionrpc developer transmissionrpc transmissionrpc compatible transmission documentation", "pypi_keywords_clean": "transmission bittorent torrent"}, "youversion/crony": {"git_readme_keywords": "alphanumeric versioning semver versioning length current complete account endpoint cronitor cronitor unique project benefit integration available package manager sentry monitoring readme template manager system license project exception python belyeu initial python support monitoring integration conduct process bbelyeu license repository config environment variable monitor cronitor integrate", "git_description_clean": "cron monitoring use", "git_keywords_clean": "crons cronitor sentry", "pypi_description_keywords": "alphanumeric versioning semver versioning length current complete account endpoint cronitor cronitor unique project benefit integration available package manager sentry monitoring readme template manager system license project exception python belyeu initial python support monitoring integration conduct process bbelyeu license repository config environment variable monitor cronitor integrate", "pypi_keywords_clean": "cron monitoring"}, "defrex/django-encrypted-fields": {"git_readme_keywords": "algorithm collection simple report handy database keyczar crypto available right keyfile upgrading keyczar keyczar crypto library normal", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "PyCQA/astroid": {"git_readme_keywords": "inference builtin partial launch library software development subscription living compatible representation tarball documentation editable installation additional professional support representation subscription information installation building tidelift height astroid support astroid directory software professional different astroid available", "git_description_clean": "common base representation python source code pylint projects", "git_keywords_clean": "ast parser", "pypi_description_keywords": "subscription information compatible representation astroid different support tarball documentation editable installation inference directory additional available partial launch representation library installation building living", "pypi_keywords_clean": ""}, "wiseman/webrtcvad": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unvoiced useful aggressive filtering segment project separate available compatible python python interface install webrtcvad example process silence aggressiveness detailed example recognition filtering aggressive python python duration integer useful telephony interface webrtc activity detector", "pypi_keywords_clean": "speechrecognition asr voiceactivitydetection vad webrtc"}, "xyb/robotframework-debuglibrary": {"git_readme_keywords": "introduction expandtab shiftround please distribution directory framework keyword default environment variable enhancement installation install interactive history license software library support robotframework", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction expandtab shiftround please distribution directory framework keyword default environment variable enhancement installation install interactive history license software library support robotframework", "pypi_keywords_clean": "robotframework"}, "laco/hexconnector": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hexagonal architecture", "pypi_keywords_clean": ""}, "alberthdev/dummymp": {"git_readme_keywords": "configure maximum availability dummymp affect default dummymp expensive extract dummymp useful variable downloaded release library familiar python configure function myfunc necessary individual license install command version python handler comprehensive additional command install dummymp python configure aggressive accessible support available uncertainty python version installation execution finishing completion myfunc function available maximum process parallel central important possible ability version b tutorial continue arbitrary configured continue documentation support python release archive function handler function documentation documentation access aggressive dummymp archive downloaded manager automatic aggression dummymp sophisticated example dummymp callback callback support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "markdown tracker documentation expensive dummymp familiar library", "pypi_keywords_clean": "multiprocessing process manager task manager taskmgr psutil parallel parallelization dummy queue"}, "scieloorg/scieloh5m5": {"git_readme_keywords": "peri\u00f3dicos fornecer biblioteca scholar", "git_description_clean": "biblioteca para fornecer indicadores google scholar dos peri\u00f3dicos scielo", "git_keywords_clean": "dataset", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "marvinpinto/charlesbot": {"git_readme_keywords": "charlesbot software license charlesbot python advantage license charlesbot documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "charlesbot software license advantage license charlesbot coverage documentation available", "pypi_keywords_clean": "slack robot chatops automation"}, "fabioz/pydevd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pydev pydevd"}, "feifangit/dj-sso-client": {"git_readme_keywords": "engine please optional ssouser application switch select ssouser storage setting underneath module account example application application folder switch account problem ssouser python extra class solution storage default optional account select project avoid problem provider default ssouserdbstorage django application database class member application status engine python hands dirty demand installation provider application storage engine python production environment default attention server dedicate format click previous sample attention default system access method heroku performance optional storage solution process production provider default information different remote client python optional method operator problem local application module proejct password click", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "engine please optional ssouser application switch select ssouser storage setting underneath module account example application application folder switch account problem ssouser python extra class solution storage default optional account select project avoid problem provider default ssouserdbstorage django application database class member application status engine python hands dirty demand installation provider application storage engine python production environment default attention server dedicate format click previous sample attention default system access method heroku performance optional storage solution process production provider default information different remote client python optional method operator problem local application module proejct password click", "pypi_keywords_clean": ""}, "/twitter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "follow unfollow simple retrieve header information bottom application authenticate twitter required program stuff timeout period authenticate twitter iterator yield authenticator connect class minimalist return authenticator bearer maximum number connection iterated parameter default object much class favorite shell instance argument required please announce twitter channel information error header authentication authenticate visit response twitter format useful python twitter object interface string xml account account complete offsite twitter developer xml class visit twitter proper access example recent timeline follow security favorite twitter stream object instantiate function json xml class result interface twitter stream example period useful minimalist twitter class object awesome restful access response bunch python exchange bearer connect twitter safety security iterated secret authenticate oauth secret python iterator application package import specify retrieve stream produce request integer twitter request method iterator various output permission python python authentication authenticate oauth visit module certain utility license python python license status updater everyone favorite accessible oauth public timeline prefer xml format twitter everyone twitter account offsite backup import package python output direct", "pypi_keywords_clean": "twitter irc tools web"}, "/django-database-storage-backend": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fadapa/fadapa": {"git_readme_keywords": "install fadapa fadapa python install github install python install fadapa fastqc demo parser github source demo installation welcome fadapa", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install fadapa fadapa python install github install python install fadapa fastqc python installation pandikunta python github source author reddy welcome fadapa reddy pandikunta", "pypi_keywords_clean": "bioinformatics fastqc parsing"}, "nvbn/pytest-docker-pexpect": {"git_readme_keywords": "container docker container docker initialization docker installation careful possible fixture current plugin docker available functional additional output parametrized system environment pexpect docker directory available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ownaginatious/flask-basic-roles": {"git_readme_keywords": "authentication multiple management generate response anything reverse library username password possible registration overridden support install website account authorization password account library provide provide outside audience example number security demonstration format something function configured object different provide transport quickstart functionality library authorization access authentication", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "flask"}, "/mock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible python python homepage license tracker library available system download documentation license support available python documentation license python standard library standard library homepage download library documentation", "pypi_keywords_clean": ""}, "/buffer-alpaca": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/hypertemp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bundled release information simple hpack encoder release history addition standard support jdecuyper structural check connection hyperframe version httplib bundled certificate machine stream prevent connection liveness unnecessary pyopenssl release functionality hpack updated package hpack various respect hpack updated bundled release support argument allow jdecuyper connection situation method regardless cautious module pyopenssl length reused version release jdecuyper prevent delayed cosmetic suitable release anyone hpack specification compatibility object specification license stream question pluggable window release original python temporary support hpack python allow indexed alpha encounter hitting https stream structure oversized specification compatibility support pypy likely specify version straight terminal situation connection document ignore result streams unicode repository control allow opening request prevent allow ignore updated hyperframe outstanding stream pypy python upgrade allow window increment ensured connection support https original package replacement similar happy response object present support suitable feature universal befitting python support rough socket object context compression efficiency terrible temporary release default window connection socket tolerate dictionary support sslcontext initial release individual suitable pyopenssl release pyopenssl feedback contribution indicator initial special result negotiation accessed availability connection windowupdate semantic information emptor socket implementation character feature enhancement version software increment provide status indicator bandwidth python module platform availability documentation documentation implementation available benfield abstract version window manager implemented logging connection management befitting package support python straight plaintext plaintext plaintext attention adapter different pyopenssl chunk negotiation hitting behaviour library", "pypi_keywords_clean": ""}, "codelucas/newspaper3k": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "chinese german summary extraction install library ubuntu debian contribute newspaper project google trending newspaper extract recognize newspaper interested article package install german arabic ubuntu install install distribution newspaper library download framework install python identification documentation article download debian ubuntu version repository license automatic extraction extraction newspaper package manager python development version homebrew extraction general keyword extraction everything fixable status likely sponsored newspaper attempt author extraction coverage status extraction newspaper simple development version curation version development algorithm language simplicity install command parameter source problem related buggy glance certain python package install package lucasyangpersonal install ubuntu", "pypi_keywords_clean": ""}, "SavinaRoja/openaccess-epub": {"git_readme_keywords": "contribute valuable documentation project development configuration discuss program interface additional attempt presentation savinaroja openaccess academic accessibility compatible contribute project installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute valuable documentation project development configuration discuss program interface additional attempt presentation savinaroja openaccess academic accessibility compatible contribute project installed", "pypi_keywords_clean": ""}, "scalableminds/wkw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fengsp/sender": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "code sender sender install code", "pypi_keywords_clean": ""}, "RecastAI/recastai": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement download limitation copyright library install documentation command fitness particular renvois\u00e9 paulrenvoise package manager merchantability fitness subject conversation software reference express substantial overview liability contract permission distribute sublicense twitter recastai warranty restriction publish distribute official connection software software software", "pypi_keywords_clean": "recastai bot nlp"}, "oanda/v20": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generation trading programmatic access documentation documentation installation", "pypi_keywords_clean": ""}, "tikitu/jsmin": {"git_readme_keywords": "parameter useful javascript review chronological branch development github project github identity possible separate cpython passing author current travis branch python limited branch version attempt compatible status branch import original author release development version current maintainer commandline different compatible current mentioned maintenance request contributor install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parameter useful newline enough unofficial javascript changelog tikitu comment literal multiline comment review chronological branch development github project maintenance update github identity possible copyright matching comment harmony support separate license cpython robustness tikitu passing author current maintainability tikitu mercurial travis branch python limited statement branch version premature attempt compatible status branch infinite import original author release literal comment literal matching various support useful development version current maintainer compressor tikitu refactor comment commandline different compatible current unofficial harmony maintainer changelog mentioned bitbucket repository request preserve contributor install package", "pypi_keywords_clean": ""}, "serge-sans-paille/gast": {"git_readme_keywords": "equivalent notable standard compatibility version compatibility represent abstract generic various python notable exception transformation replaced argument regular identifier attribute available exception replaced representation original several convention attribute replaced", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard compatibility represent abstract various", "pypi_keywords_clean": ""}, "/xssd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "defined mirror structure structure complex optional different default validate python pattern double percentage mininclusive inclusive invalidation datetime method username password validate development minlength minimum maxinclusive maximum minexclusive minimum number complex inbuilt complex definition reference matchs bellow definition status structure example definition available xssd import syntax complex array toggle dictionary optional exception maximum length mininclusive minimum schema maxinclusive double number validator definition import validator report website python minimum number subset instant message maximum number exlusive maxexclusive message account pattern regular machine readable regular expresion maxexclusive maximum minimum length enumeration array information array reference different expresion reference fractional number validate dictionary integer validation attempt reference possible structure second definition validate datetime datetime custom contain arbitary bellow second boolean notmatch toggle combine stucture mininclusive maxinclusive boolean boolean maxlength maximum method percentage", "pypi_keywords_clean": ""}, "/sphinxcontrib-programoutput": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extension development correct version command output mcdowell decode deprecation default support formatting document default support sphinx support extension extension m\u00fcller output arbitrary project information support documentation configuration extension command development support available sphinx development process coverage github handler please sphinx version command document likely session require sphinx directory install extension stephen mcdowell install correct unicode prompt formatting support require pylint comprehensive information latricewilgus unexpected initial release output program message document installation install program command decode output support please support development directive build", "pypi_keywords_clean": "sphinx cli command output program example"}, "/solartime": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software applicable express version license python example package python license specific specific language kennedy module dependency package sunset various license dependency sunrise compliance license python module license copyright license version", "pypi_keywords_clean": ""}, "/asheeshs-django-optimizer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django optimizer periodic purpose package rewrite version history tutorial pretend package package package asheesh optimization question purpose database implement optimizer package asheesh django dependency functionality security tutorial package version password private private information history nothing purpose", "pypi_keywords_clean": ""}, "StreetVoice/django-elastic-transcoder": {"git_readme_keywords": "package activate transcoder django application check notification subscribe progress error complete model install choose activation transcoder hookup example python migrate python application sh elastic transcoder model workflow various encode notification django elastic error complete transcode progress section update transcode instance encode endpoint receive subscription receive", "git_description_clean": "django aws elastic transcoder", "git_keywords_clean": "", "pypi_description_keywords": "package activate transcoder django application check notification subscribe progress error complete model install choose activation transcoder hookup example python migrate python application sh elastic transcoder model workflow various encode notification django elastic error complete transcode progress section update transcode instance encode endpoint receive subscription receive", "pypi_keywords_clean": "django aws elastic transcoder"}, "/wincertstore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "suitable default example registry wincertstore wincertstore readable perspective python license suitable validate default enhanced christian frozenset license copyright commin python statement security example default certificate enhanced initial certfile python python contributor agreement interface purpose support universal", "pypi_keywords_clean": "windows cert ssl ca crl"}, "sunscrapers/django-templated-mail": {"git_readme_keywords": "documentation documentation development directory template patience installation environment repository documentation available", "git_description_clean": "send emails using django template system", "git_keywords_clean": "django email", "pypi_description_keywords": "documentation documentation development directory template patience installation environment repository documentation available", "pypi_keywords_clean": ""}, "lmacken/quantumrandom": {"git_readme_keywords": "package perform variety quantum python module project randomness compliance incorrect amount module default entropy linux generator function quantumrandom userspace exception python successful incorrect gccxml fedora function linux character version quantumrandom quantumrandom python system entropy equipped character available entropy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default perform variety quantum python module project randomness compliance incorrect amount character device number generator entropy linux function quantumrandom exception python successful incorrect gccxml fedora linux character device quantumrandom function device userspace version quantumrandom quantumrandom python system entropy module equipped character available entropy", "pypi_keywords_clean": "quantum random"}, "/algopy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation possible perform evaluation available reverse algorithmic differentiation polynomial compatible", "pypi_keywords_clean": "algorithmic differentiation"}, "fate0/pychrome": {"git_readme_keywords": "package examples directory headless pychrome example examples directory examples management alternate examples installation install github variable protocol document install pychrome installation version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package examples directory headless pychrome example examples directory examples management alternate examples installation install github variable protocol document install pychrome installation version", "pypi_keywords_clean": "pychrome"}, "wakatime/wakatime": {"git_readme_keywords": "package information available sublime console javascript console console textmate current python appcode androidstudio toggle developer editor plugin useful textmate terminal error install plugin location visual studio install wakatime single configuration inline window uncaught androidstudio webstorm developer javascript version version github installation editor coverage developer console follow python version python console debug directory plugin status available configuring format example common phpstorm appcode method example sublime environment wakatime command plugin plugin window pycharm rubymine available machine example config config interface project detection request intellij vs rubymine phpstorm output window precedence config developer toggle method terminal watch", "git_description_clean": "command line interface used wakatime text editor plugins", "git_keywords_clean": "analytics metrics", "pypi_description_keywords": "package information available sublime console javascript console console textmate current python appcode androidstudio toggle developer editor plugin useful textmate terminal error install plugin location visual studio install wakatime single configuration inline window uncaught androidstudio webstorm developer javascript version version github installation editor coverage developer console follow python version python console debug directory plugin status available configuring format example common phpstorm appcode method example sublime environment wakatime command plugin plugin window pycharm rubymine available machine example config config interface project detection request intellij vs rubymine phpstorm output window precedence config developer toggle method terminal watch", "pypi_keywords_clean": ""}, "yourlabs/django-rules-light": {"git_readme_keywords": "package project developper security approach documentation alternative database external runtime registry install install difference listviews eventual external", "git_description_clean": "fresh approach security django conceptually simple rule registry dictionnary manage callbacks addition allows logging malicious uses provide middleware class decorator rule autodiscovery templatetags debug views features make enjoyable status production stable", "git_keywords_clean": "", "pypi_description_keywords": "package project developper security approach documentation alternative database external runtime registry install install difference listviews eventual external", "pypi_keywords_clean": "django security rules acl rbac"}, "carlosp420/dataset-creator": {"git_readme_keywords": "aminoacid partition creator phylogenetic build status documentation quick phylogenetic software seqrecordexpanded genbankfasta nexus python documentation release width pypi wheel coverage status raxml pypi package dataset creator phylip generate development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "align center requirement fixed upgraded requirement codon fixed format format method zwick build status version seqrecord bug show seqrecordexpanded partial fixed codon width align string partition phylip generate development dataset aminoacid aminoacid support dataset codon documentation build dataset quick genbankfasta nexus generate outgroup target image first pypi package status target exception partitioned dataset extra info degenerate fasta phylip software image creator phylogenetic python documentation genbankfasta format phylogenetic software nexus interpreter wheel target pypi wheel coverage status raxml record white dataset creator sequence necessary build release pypi show nexus first python empty fasta first release outgroup string position dataset fixed version format fixed valueerror field fixed issue codon sequence invalid fixed bug outgroup fasta genbankfasta image width info description first position release target", "pypi_keywords_clean": ""}, "marians/daterangestr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "whole year whole month certain simple create meaningful install format datetime datetime tuple simple format march unlimited tuple example function dez", "pypi_keywords_clean": ""}, "/smc-bibencodings": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thomas variable length prefix unicode excellent contrary unicode viktoriaallee implement variable standard germany identity mapping support background several christian historique example unicode combinig bibliographic information someward similar special identity copyright copyright unicode diaeresis contrary historic kommunikationsmanagement diaeresis special", "pypi_keywords_clean": "encoding codec bibliographic opac marc ansel"}, "Azure/azure-mgmt-rdbms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package ability mysql service management provide feedback python compatibility rdbms breaking postgresql release history generation management feedback encounter operation group underlying http python microsoft library invalid broken class class azureenum glance georestore resource manager changelog release support postregresql algorithm response http session default behavior mariadb format syntax available change support mariadb section project version performance generator optional mariadb bugfix important postgresql general format sdk python mariadb public namespace package breaking change bundle package syntax positional initial running operation python namespace parameter default python python rdbms management microsoft parameter response initial initial release mysql general breaking external object context manager mysql postgresql behavior unrecognized execute callback pricing library complete public preview mysql initial", "pypi_keywords_clean": ""}, "vinta/django-email-confirm-la": {"git_readme_keywords": "message confirmation framework model python success default python model confirmation model override project python django verify invalid confirmation html body subject django installation template override django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "limitation platform unknown permission hereby license classifier internet classifier copyright software development confirm confirmation classifier framework environment classifier documentation unknown classifier fitness particular merchantability fitness subject audience django software limited express substantial software description framework django system purpose noninfringement classifier license liability contract distribute sublicense classifier environment language classifier development warranty restriction modify publish distribute particular purpose django classifier connection software independent classifier software software", "pypi_keywords_clean": ""}, "KrzysiekJ/gchart": {"git_readme_keywords": "something wrapper example flexible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "something wrapper example flexible", "pypi_keywords_clean": ""}, "/pywhois": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "feincms/feincms-oembed": {"git_readme_keywords": "simple suitable oembed provider videos article provider provider folder create content standard additional python content oembedcontent oembedcontent import callable content month function provider default object access register import oembedcontent customize request", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple suitable oembed provider videos article provider provider folder create content standard additional python content oembedcontent oembedcontent import callable content month function provider default object access register import oembedcontent customize request", "pypi_keywords_clean": ""}, "/theslasher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/tesseract": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tesseract spherical symmetry gasoline complete description concentration vorovol scientific description technique technique advantageous diagram traditional fitting presence substructure comparison information tesseract substructure complete tesselation technique performance", "pypi_keywords_clean": ""}, "ISA-tools/isatools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "korfuri/django-prometheus": {"git_readme_keywords": "instrumentation backend inject wrapper install dependency postgresql second django monitoring possible default prometheus export django project migration current process disable django change example inject prometheus global unapplied django prometheus number example promdash repository install development version installation install monitor django migration django export django installation property database", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "monitoring library relevant", "pypi_keywords_clean": "django monitoring prometheus"}, "rainwoodman/runtests": {"git_readme_keywords": "contribute installed version incremental decorator decorator example mpitestfixture package overwritten useful example parameter supported refactoring package project argument install support traditional pytest tolerant running variation example parameter variation different package variety application regular follow example directory software package follow traditional encouraging installation software global behavior running specific commandline example running communicator nonmpi reasonable refactoring decorator example refactor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "realitix/vulkbare": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "engine c", "pypi_keywords_clean": ""}, "davisp/python-spidermonkey": {"git_readme_keywords": "package bundled javascript vm x installed xulrunner optional extension library support python previous install portable runtime command system spidermonkey version python library installed package manager python development building spidermonkey choice something installation execute arbitrary python python installed installed python installed default gentoo python arbitrary javascript manager choice arbitrary python reference arbitrary netscape portable spidermonkey library x gentoo access python installed xulrunner installed netscape", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "twitter/twitter-common-options": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "zachwill/relaxml": {"git_readme_keywords": "current unmaintained repo relaxml installation dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "rehandalal/therapist": {"git_readme_keywords": "runner available documentation therapist", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "smart hook", "pypi_keywords_clean": ""}, "ellisonleao/flask-mistune": {"git_readme_keywords": "documentation interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jpulgarin/django-tokenapi": {"git_readme_keywords": "package simple client access project directory successful receive subsequent django python example project response virtualenv perform regular installation username password invalid username helper single decorator mobile support django application python installation header combine password parameter verify scheme construct change number allow inactive request successful compatible public framework authentication perform regular header request something authentication scheme virtual environment encode request username request provide django website setting default decorator useful authorization header configuration change access specific client access authentication prepend construct authorization", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package simple client access project directory successful receive subsequent django python example project response virtualenv perform regular installation username password invalid username helper single decorator mobile support django application python installation header combine password parameter verify scheme construct change number allow inactive request successful compatible public framework authentication perform regular header request something authentication scheme virtual environment encode request username request provide django website setting default decorator useful authorization header configuration change access specific client access authentication prepend construct authorization", "pypi_keywords_clean": ""}, "oohlaf/whirlpool": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message whirlpool changelog library python algorithms python python hashlib declaration prototype development changelog notable project barreto library compatible deprecated interface library available python installation output available install conradi reference implementation deprecated initial compatible python whirlpool reference implementation whirlpool install development vincent whirlpool hashlib interface function algorithm python wrapper international standard install editable installation library version wrapper function library function declaration", "pypi_keywords_clean": "digest hashlib whirlpool"}, "/django-docutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "restructuredtext support template filter python import build status python django variable django template restructuredtext django license sh template template engine support django status target coverage target template django import docutilsview install sh python template homeview docutilsview python package package target django documentation documentation status", "pypi_keywords_clean": "django docutils documentation utilities rest restructuredtext rst"}, "/rcssmin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "syntactical compression minifier rcssmin copyright license distribution rcssmin syntactical compressor boxmodelhack reimplementation schlueter copyright optional feature maximum compression escaped semicolon unicode various minifier minifier outside ruleset multiple consecutive exclamation redundant semantic compression", "pypi_keywords_clean": "css minimization"}, "thefab/tornadis": {"git_readme_keywords": "tornadis standard minimal support example management autoreconnection support pipeline quality documentation friendly production connection autoconnection autoreconnection performance documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "brentp/cigar": {"git_readme_keywords": "analysis installation adjust downstream library useful feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analysis installation adjust downstream library useful feature", "pypi_keywords_clean": ""}, "aitjcize/pyrabin": {"git_readme_keywords": "default python module pyrabin python fingerprint generation length fingerprint polynomial average filename default example chunk suffix average block status origin filename chunk fingerprint filename default filename extension implementation c extension fingerprint update issure tracker polynomial configurable window tupple register callback checkout commit request feature branch commit feature block update method", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/logging": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard mechanism", "pypi_keywords_clean": ""}, "miki725/djangorestframework-bulk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "serializer available generic thomas generic default resource second complete describe cavoj matthias implement hook account framework purpose fooserializer bulkserializermixin router require update impossible correlate primary applicable special confirmation development support multiple generic update specific purpose project bug unable martin cavoj separate project installation example django instance update exception customize project allow complete logic framework hook determine framework django logic request update single resource tolner custom likely accidental similar django django django allow attention maintainer update functionality license source bug xavier mjumbe bulkserializermixin modelserializer request dangerous history source action viewset certain extreme caution framework generic", "pypi_keywords_clean": "django"}, "/futurist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documented eventlet executor documentation futurist executor synchronous synchronous executor transparency asynchronous repository", "pypi_keywords_clean": ""}, "kevinbeaty/flask-debug-api": {"git_readme_keywords": "python everything browser sqlalchemy installation debug", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everything browser installation install sqlalchemy debug", "pypi_keywords_clean": ""}, "sempr/taobaopy": {"git_readme_keywords": "\u81ea\u5b9a\u4e49\u5ba2\u6237\u7aef \u6362\u6210\u4e24\u4e2a\u4e0b\u5212\u7ebf \u5bf9\u4e8e\u6dd8\u5b9d\u7684\u67d0\u4e2a \u8c03\u7528\u7684\u51fd\u6570\u540d\u4e3a \u8c03\u7528\u7684\u51fd\u6570\u540d\u4e3a \u53bb\u6389\u5e76\u628a\u540e\u9762\u7684 python \u76ee\u524d\u5df2\u5728\u4e24\u4e2a\u4ea7\u54c1\u4e0a\u4f7f\u7528 \u7684\u4e00\u4e2a\u7b80\u5355\u7075\u6d3b\u7684 python \u5982\u679c\u6dd8\u5b9d\u7684\u67d0\u4e2a \u4f7f\u7528post \u8bbf\u95ee\u9700\u6388\u6743\u5185\u5bb9", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dfm/feedfinder2": {"git_readme_keywords": "license python library attempt candidate function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license python library attempt candidate function", "pypi_keywords_clean": ""}, "pydanny/django-profiletools": {"git_readme_keywords": "python evaluation anything version author authenticated record resemble something python evaluation unexpected incredible functional frustrating inspiration anything object lifetime install middleware instance object evaluate object profile installation example greenfeld", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python evaluation anything resemble something python evaluation return object incredible functional frustrating inspiration anything object lifetime return install middleware record instance object evaluate object profile installation return frustrating example unexpected", "pypi_keywords_clean": "django profiles"}, "AllenInstitute/allensdk": {"git_readme_keywords": "tfliss graddis nilegraddis shreejoy tripathy mabuice tripathy stripathy michael contribution corinneteeter shreejoy information welcome franzen florianfranzen richard repository neuromusic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "neuroscience bioinformatics scientific"}, "makinacorpus/django-geojson": {"git_readme_keywords": "information geojson license documentation database version compatible", "git_description_clean": "collection helpers de serialize geo django objects geojson", "git_keywords_clean": "django gis geojson", "pypi_description_keywords": "serializer deprecation geojson django florent lebreton improved template default geojsonfeature python compatibility geojson conversion lindstam support foreignkey ogunyemi support geojson foreignkey manytomany natural various geojson default ability minimal version available version geojson optional version compatible feature internal example detection usable dependency python support import attempt unnecessary property geometry copying geometry reversed spatial database changelog change license changelog initial django support information module version complete rewrite ability django geojson jeffkistler glenrobertson geojson specification deserialization generic geojson lambda ability django natural incompatible django compatibility libgeos korotkiy documentation status", "pypi_keywords_clean": ""}, "/yaql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project embeddable extensible language complex language embeddable current arbitrary comprehensive standard quickstart install version standard library project status", "pypi_keywords_clean": ""}, "daniellawrence/graphitesend": {"git_readme_keywords": "custom timestamp server destroy different prefix prefix default different system different graphite simple iostat project maintain metric graphite server anything directory connect server connect execute graphite cleaning metric graphite remote service project argument support collaborator system lowercase connect timeout graphite python kwargs squash linux system carbon carbonclient example python module instance cleaning interface overview metric prefix default prefix timeout default branch handy bunch connect different option publish dryrun dryrun graphitesend local linux instance graphitesend script prefix hardset disconnect graphite instance graphiteclient maintain graphitesender destroy module lowercase metric source command metric suffix handy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fishkao/rake": {"git_readme_keywords": "keyword extraction algorithm license implementation extraction individual automatic keyword source", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "keyword extraction algorithm license implementation extraction individual automatic keyword source", "pypi_keywords_clean": "rapid automatic keywords extraction"}, "bast/ascii2graph": {"git_readme_keywords": "result graph exception sorry python import anything reason graph dictionary python result generate history change create please graph import graph dictionary graph representation graphs installation print result example python module visualize install example undirected graphs dictionary python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "result graph exception sorry python import anything reason graph dictionary python result generate history change create please graph import graph dictionary graph representation graphs installation print result example python module visualize install example undirected graphs dictionary python", "pypi_keywords_clean": ""}, "/chainmap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package version example python author contexts python compatibility version specific useful standard library library available similar several package monthly install upgrade python version coverage python flexible someone release typical packaging support specific python python python installation install template python standard reasonably", "pypi_keywords_clean": "chainmap nested context layer overlay stack"}, "/byteplay": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python code equality bytecode simple argument index useful opcode index target opcode write use argument boolean class label list form mapping opcode address instruction operate local new object new raw form flow stack simple object method code executed inconsistent code python compiler code string opcodes string real bytecode byte code operation interpreter useful debugging regular opcodes compiler fulfill equivalent python nice representation segmentation fault maximum stack example argument actual constant see opcodes argument absolute variable name opcode real code wonder used python complexity solution see bytecode nothing used static method simple real example state operation state note section opcodes push element target equivalent number positional object set real life numerical argument variable number index table see order inner function example boolean see form list cause reference cell number total code tuple code class class nothing opcode number variable outer code object tuple cell used get function print let define function place top stack poping extra argument jump example ok label instance read representation simple great way argument opcode opcodes argument someone quick declare line jump exception place python additional information note setlineno address jump operator opcode opcodes actual sort technical extra information byteplay pure order list frame stack let use inherent difference check byteplay likely general create function see code first cell used raw information way phillip important information comparison instance mapping actual number used second actual object list pointer jump bytecode meaning execution attribute code drop email way set line call example see representation see meaning argument function let stupid function solution pretty opcode name variable string type code name source used opcode operation executed tuple argument string representation state trace printcodelist function set return consistent set convenient byteplay basic used create method use set value define operation jump specific python bytecode special flow name cell use byteplay value code play equivalent raw python change function dot com description printcodelist maximum number second tuple byteplay useful object stack email noamraph state target code list representation opcode specific line python interpreter number stack treat opcode quick example code instruction calculate stack code maximum argument see byteplay public constant opcode case inconsistent point specific solution problem course opcode first code ok let list come tuple match way specify course opcodes operate object equivalent bytecode line define stack push cell argument many source file difference cell jump address real opcodes original object meaningful opcodes crazy real opcode list important function cell stack course function example relative absolute read example list set python byteplay arg opcodes scope new first come value variable next opcode opcodes numerical list subclass reach line block number bytecode byteplay simple loop list code used declare state new fine jump set module documentation function meaningful section note opcode used use opcode list argument tuple list pretty simple position code line opcode see simple line check object used code see number keyword basic idea argument relative define simple first element distinguish nice local variable address different compiler nice absolute jump new code interested value complication opcode consistent state cell object list opcodes specific location action used order see stack define used byteplay play python loop interpreter way type opcode opcodes index first class subclass tuple stack byteplay relative function interested opcode opcodes stack see state reach behaviour section size calculation documentation byteplay case arg bytecode code argument line behaviour interested meaning opcode state deal check state opcode list scope solution easy calculate function sequence usage property opcode argument tool michael opcode class exception try michael hudson instance name used function welcome check print location code code attribute false bytecode argument relative jump fault question line original bit familiar new block used argument interested python executed opcode byteplay see learn python aware bytecode python opcodes special opcodes local numerical constant line number code regular infrastructure sort store local interpreter opcodes order calculate outer function possible code live simple possible second item comparison operator familiar bytecode nice property simple opcodes suitable tool opcodes set cell free representation type raw bytecode clear bit opcodes name way learn introspection main noamraph gmail index target flow graph class list start quick code type raw code check stack see function executed stack lot fulfill requirement gmail dot bytecode specific argument true name code pop push used code manipulate python instruction pointer try assemble function second bytecode see administrative info feel free variable inner block example stack size specify place question calculate graph calculation document wiki come additional class opcode info feel stack actual stack number stack usage variable used opcode executed true argument constant numerical useful interested flow behaviour line case opcodes opcodes representation module see external many opcodes useful code element state order attribute enough opcodes list class code object executed constant used information useful specific singleton argument opcodes code exception name list new local operate cell boolean new argument none please drop return string several define new byteplay module singleton used executed address pretty clear cause action pure python normal flow opcode specific stack bytecode simple function instance point see nice equivalent raw object top outer scope section clear new value global namespace number first state single code instance opcodes used call code boolean function set opcode example let effect opcode subclass int effect case special opcode understand let item tuple final behaviour item inspected simple thing original source number opcode opcode see object different method return clarification stack object raw stack behaviour extra keyword stack first trace stack use function list place store true boolean general solution behaviour set let play consistent element variable variable opcode arg function code push tuple new cell constant argument table example name function pointer set state poping object value new type simple define let start see description byteplay let function get cause jump stack return free variable code likely int number none used variable storage local namespace used way way easy python byte function set nicer representation used inner outer convenient set different code list string taste byteplay target line byteplay load value operation pair argument constant advance byte module global opcode set usage code useful someone opcodes real main part behaviour opcodes idea simple free wikis deal complexity function used state operation easy play string argument information code element operation file bytecode constructor start bit administrative function check simple treat constant number none argument codelist type assemble code class constructor match order list nicer stack state byteplay byteplay first line line source opcode pop value first operator argument stack effect code true index list debugging introspection extra positional get set simple example name string source code last python stack str method namespace write instance codelist understand byteplay value cell argument comparison use code string name enclosed function place code define stupid useful please pair real name opcode reverse order setlineno opcode type order calculate maximum see bit opcode convenience code come label class exception opcodes label cell tuple opcode instance convert python state sequence interpreter regular get variable last argument type label list inner order match code equivalent life simple effect number single number list instance behaviour original total number state address reachable line byteplay representation", "pypi_keywords_clean": ""}, "benoitc/socketpool": {"git_readme_keywords": "socketpool socketpool example connector example simple socketpool available chesneau benoitc unlicense socketpool simple python public domain gevent eventlet gevent example factory backend socketpool simple connector example license socketpool multiple available public benoitc benoitc backend interface eventlet library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "socketpool socketpool example connector example simple socketpool available chesneau benoitc unlicense socketpool simple python public domain gevent eventlet gevent example factory backend socketpool simple connector example license socketpool multiple available public benoitc benoitc backend interface eventlet library", "pypi_keywords_clean": ""}, "/ccxt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jsdelivr contribute huobipro correct operation business bitfinex install documentation sponsor responsible correct website available version cryptocurrency exchange global exchange trading library cryptocurrency document scripts support project installed container repository cryptocurrency trading function browser trading support library javascript trading library verbose", "pypi_keywords_clean": "algorithmic algotrading altcoin altcoins api arbitrage backtest backtesting bitcoin bot btc cny coin coins crypto cryptocurrency crypto currency crypto market currency currencies darkcoin dash digital currency doge dogecoin etc eth ether ethereum exchange exchanges eur framework invest investing investor library light litecoin ltc market market data markets merchandise merchant minimal ohlcv order orderbook order book price price data pricefeed private public ripple strategy ticker tickers toolkit trade trader trading usd volume xbt xrp zec zerocoin acx allcoin anx anxpro bibox binance bitbay bitbays bitcoincoid bitfinex bitflyer bithumb bitlish bitmarket bitmex bitso bitstamp bittrex bleutrade blinktrade braziliex btcbox btcc btcchina btce btcexchange btc markets btcmarkets btctrader btc trade ua btcturk btcx bter ccex cex chbtc chilebit coincheck coinexchange coingi coinmarketcap coinmate coinsecure coinspot crypto capital cryptopia dsx exmo flowbtc foxbit gatecoin gdax gemini hitbtc huobi huobipro independent reserve itbit kraken kucoin kuna lakebtc livecoin liqui luno mercado mercadobitcoin mixcoins nova novaexchange okcoin okex paymium poloniex quadrigacx qryptos quoinex southxchange surbitcoin tidex therocktrading urdubit vaultoro vbtc virwox wex xbtce yobit yunbi zaif zb allcoin anybits bcex bibox bigone bitbank bitflyer bitforex bithumb bitibu bitkk bitlish bitsane braziliex buda cobinhood coinbase coinbase prime coinbase pro coinegg coinex coinfalcon coinfloor coingi coinnest coinone cointiger coolcoin coss crypton deribit ethfinex exx fcoin getbtc hadax huobi pro huobi russia indodax kkex kucoin lbank liquid lykke mercado bitcoin mixcoins negociecoins novaexchange okcoin cny okcoin usd rightbtc southxchange stronghold ocean tidebit uex upbit fcoinjp binance jersey bequant mandala"}, "mahmoud/hematite": {"git_readme_keywords": "python client hematite progress unified hematite implementation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mattvonrocketstein/goulash": {"git_readme_keywords": "likewise library reference autogenerated documentation install viscous", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "goulash"}, "michiya/django-pyodbc-azure": {"git_readme_keywords": "dictionary current backend integrated security backend standard freetds emulation project instance password dictionary configuration database additional revision wasilewski compatible installation example textfield directory structure directory connection application project pyodbc library language current available microsoft collation environment variable control behavior external behavior backend", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django pyodbc django backend install pyodbc library configuration standard django application database appropriate version django install compatible version example database django pyodbc connection autofield migration application project example example django pyodbc microsoft external backend boolean installation install django installation behavior backend", "pypi_keywords_clean": "azure django"}, "/numpy-indexed": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "audience classifier x classifier language classifier development distributable description system classifier license numpy hoogendoorn license platform classifier system microsoft distributable classifier", "pypi_keywords_clean": ""}, "valohai/django-cavalry": {"git_readme_keywords": "general boolean default probability mechanism current complete runtime wholesale execute console default kibana boolean segment middleware toggleable cavalry database payload available boolean default elasticsearch performance python process toggleable runtime positive performance production boolean probability request middleware template switch middleware", "git_description_clean": "performance tracer", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ungarj/mapchete": {"git_readme_keywords": "circle providing geodata processing process everything install mapchete ecosystem iterative process machine input numpy development circle customized multiple configuration process python module mapchete geodata license generalize install process python output available script finish reprocess refresh browser pyramid rasterio finish download process output inspect process python global specify process system batch process inspect output output tedious recognizes tedious mapchete process configuration language browser inspect script browser cloudless installation installation install source install additional process geodata terrain cloudless documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "circle providing geodata processing process everything install mapchete ecosystem iterative process machine input numpy development circle customized multiple configuration process python module mapchete geodata license generalize install process python output available script finish reprocess refresh browser pyramid rasterio finish download process output inspect process python global specify process system batch process inspect output output tedious recognizes tedious mapchete process configuration language browser inspect script browser cloudless installation installation install source install additional process geodata terrain cloudless documentation status", "pypi_keywords_clean": ""}, "phfaist/pylatexenc": {"git_readme_keywords": "format plain standard output output documentation logical structure escape symbols couple generate unicode parse structure standard input pylatexenc python convert plain particular series unicode documentation full function top python library full documentation accented plain unicode documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "format plain standard output output documentation logical structure escape symbols couple generate unicode parse structure standard input pylatexenc python convert plain particular series unicode documentation full function top python library full documentation accented plain unicode documentation available", "pypi_keywords_clean": "latex text unicode encode parse expression"}, "datalib/libextract": {"git_readme_keywords": "agnostic infancy definition tabular default installation extraction algorithm assumption document repetitive extraction library interfaceable libextract", "git_description_clean": "extract data websites using basic statistical magic", "git_keywords_clean": "", "pypi_description_keywords": "agnostic infancy definition tabular default installation extraction algorithm assumption document repetitive extraction library interfaceable libextract", "pypi_keywords_clean": "extract extraction main article text html data content unsupervised classification machine learning ai artificial intelligence ml"}, "s-block/django-nested-inline": {"git_readme_keywords": "python changelist licence support package github github installation install deprecated", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python changelist licence support package github github installation install deprecated", "pypi_keywords_clean": ""}, "ProgVal/markovgen": {"git_readme_keywords": "decorator initial supybot library optional repository installation markovgen", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decorator initial supybot library optional repository installation markovgen", "pypi_keywords_clean": ""}, "/keystoneauth": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "keystoneauth authentication library", "pypi_keywords_clean": ""}, "/bob-learn-linear": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package machine contact development package contact complete software package install contact install package toolbox", "pypi_keywords_clean": ""}, "/colors": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module", "pypi_keywords_clean": "colors terminal word char color"}, "/urllib5": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "urllib standard urllib nice urllib standard library", "pypi_keywords_clean": ""}, "JonathanRaiman/pytreebank": {"git_readme_keywords": "visualization sentiment treebank stanford sentiment different sentence corpus javascript examples sentiment analysis chuang javascript ipython notebook directory treebank dataset sentence control chuang stanford", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "visualization sentiment treebank stanford sentiment different sentence corpus javascript examples sentiment analysis chuang javascript ipython notebook directory treebank dataset sentence control chuang stanford", "pypi_keywords_clean": "machine learning nlp"}, "python-social-auth/social-auth-app-django": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "improving django project documentation project compatibility unsupported django version django component mechanism version project project documentation project django component ecosystem backward compatibility document semantic several integrate django functionality integrate documentation available django", "pypi_keywords_clean": "django"}, "asciimoo/drawille": {"git_readme_keywords": "haskell unicode braille unicode pixelation tracker terminal unicode similar install drawille installation install clojure drawille braille unicode reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "terminal braille drawing canvas console"}, "django-oscar/django-oscar": {"git_readme_keywords": "project please complex framework django functionality sandbox channel documentation status excellent continuous integration business integration status coverage official twitter twitter building sandbox interested development django", "git_description_clean": "django", "git_keywords_clean": "django ecommerce oscar", "pypi_description_keywords": "project complex framework django functionality docker sandbox official docker excellent business twitter twitter channel building sandbox interested development django", "pypi_keywords_clean": "django"}, "mgd020/django-admin-select2": {"git_readme_keywords": "required installation filtered django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django"}, "OnroerendErfgoed/pyramid-urireferencer": {"git_readme_keywords": "consult documentatation documentatation information library", "git_description_clean": "pyramid plugin handle references external uri", "git_keywords_clean": "", "pypi_description_keywords": "abstractreferencer implementation decorator toevoegen support parameter backend application documentation documentatation information decorator function pyramid determine response library renderer applicationresponse implementation whatsoever urlencoded initial exception consult documentatation function resource", "pypi_keywords_clean": "web wsgi pyramid uri rest references"}, "Azure/azure-mgmt-advisor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package underlying service management provide feedback project changelog release history generation management version uninstall feedback encounter python microsoft library resource manager changelog release resourcerecommendationbase installing package algorithm response advisor default behavior package compatibility performance general section project version optional generator uninstall installing release initial session package version namespace package azureenum bundle package syntax positional initial running operation parameter default python namespace python python history bugfix microsoft parameter response initial initial release general breaking external context manager behavior unrecognized execute callback compatibility important library complete", "pypi_keywords_clean": ""}, "jamesbvaughan/sendsms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sendsms twilio command personal installation", "pypi_keywords_clean": "sms text command line message twilio phone"}, "cour4g3/python-pppd": {"git_readme_keywords": "pppd module interact positional keyword useful libary pppconnection equivalent simple library connect something similar environment binary connection pppconnection license kernel protection daily alternate disconnect installation install pppconnection address install repository library production", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pppd module interact positional keyword useful libary pppconnection equivalent simple library connect something similar environment binary connection pppconnection license kernel protection daily alternate disconnect installation install pppconnection address install repository library production", "pypi_keywords_clean": ""}, "/django-dajaxice": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library presentation framework unobtrusive xmlhttprequest", "pypi_keywords_clean": ""}, "/appscript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bdastur/pyansible": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction ansible discovery instance utilization management orchestration deployment automation pyansible runner familiar ansible execute multiple distribution ansible runner orchestration deployment library execute runner inventory playbooks automation ansible ansible automation execution threshold installation example introduction installation ansible documentation pyansible pyansible architecture familiar configuration management pyansible popularity documentation pyansible simplicity ansible consider excellent configuration pyansible library interface access ansible", "pypi_keywords_clean": "ansible"}, "WoLpH/django-statsd": {"git_readme_keywords": "package homepage python statsd statsd graphite install install statsd documentation homepage python introduction middleware graphite statsd", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package homepage python statsd statsd graphite install install statsd documentation homepage python introduction middleware graphite statsd", "pypi_keywords_clean": ""}, "cltk/cltk": {"git_readme_keywords": "observe language processing complete gratitude thankful project research documentation support language toolkit classical medieval interactive identifier complete installation installation repository homepage software substantial johnson bibliographic scientific research organization jupyter classical language identity digital repository freebsd pycharm akkadian germanic toolkit classical codebase platform citation natural language software something quickstart contribution scholarship particular generate linguistic discussion gratitude", "git_description_clean": "classical language toolkit", "git_keywords_clean": "nlp ai python nltk latin greek", "pypi_description_keywords": "framework language toolkit", "pypi_keywords_clean": "nlp nltk greek latin chinese sanskrit pali tibetan arabic germanic"}, "jtauber/greek-utils": {"git_readme_keywords": "reference datastructure morphgnt install documentation various generator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "facebook/facebook-business": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full account id popular language graph explorer result terminal repository check sync object object server described useful proof server guide python typo campain documentation information version repository sdk tutorial command object simple shop help business sdk individual class version marketing update update python ubuntu issue reporting single facebookadsapi compatible python manager delete separate facebookadsapi object method app important someone return various method information binary way install facebook business terminal window object modify object default upkeep business temporary secure update delete relevant shell documentation campaign feasible system bug reporting app advanced download release source please visit install package parity handle reporting github request please interact license facebook account simple group batch addition argument complain field class method sync generate simplifies business manager docs method repository github additional folder argument convenient directory error example sdk sdk issue register app repository issue keyword argument please check session system sdk python personal account argument instantiating github download support keyword reporting channel specify id workflow bug business multiple access understanding object specify access facebook secret proof implementation upkeep specify argument specify keyword efficient group secure access basic knowledge request app dashboard instance available example access multiple facebook information different method specify instantiating object documentation account specify interpreter coverage opaque batch request sdk manage marketing response network performance campaign figure execute dictionary mapping iterator process simple presence update proper class field product app release tarball instance behalf multiple argument help debug sdk channel encounter access marketing delete design manager instagram parameter repeat process graph way prohibitive package compatible directory source reference multiple python object param context console sdk represent interface python please report module package dictionary update access specific facebookadsapi object section important security mapping parameter contain python package help specify module language third key dictionary param example tox way sdk instantiating object proper python facebooksession access added batch folder debug channel license python introduction codegen sdk python please introduction facebook avoid second network access default facebookadsapi outdated version example campaign object marketing deprecated function campain campaign valid possible report issue application facebook encounter bug campaign context graph class delete decide towards quick default specify available update object check repository example object app registered registered manage install sdk offer unzipped install context account server specify filter python application sdk shop advanced modification http request different error exception permission access convenient way visit app sdk codegen documentation optimal abstract python location python register facebook login", "pypi_keywords_clean": ""}, "/ssh-import-id": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "indicate location recommend connect identity username problem fellow multiple project instance support kirkland executable version connect service identity handler recommend example identity command machine installed python directory matching hostname trusted marshall different username service access collaboration certificate matching github launchpad", "pypi_keywords_clean": "ssh public key"}, "openego/oedialect": {"git_readme_keywords": "license installation openenergyplatform oedialect license copyright copyright repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license installation openenergyplatform oedialect license copyright copyright repository", "pypi_keywords_clean": "postgres open energy database sql rest"}, "divio/divio-docs-theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "theme divio", "pypi_keywords_clean": ""}, "IntelPython/mkl-random": {"git_readme_keywords": "anaconda reference different keyword generator generation functionality community interface particular available prebuilt environment compatible replacement library distribution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "alex/alchimia": {"git_readme_keywords": "documentation documentation ability python documentation alchimia return sqlalchemy impossible control implement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation ability python documentation alchimia return sqlalchemy impossible control implement", "pypi_keywords_clean": ""}, "/models": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python dependency unstable valuable lightweight framework database external library concrete certain library installation django", "pypi_keywords_clean": "query database api model models orm"}, "/the": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "truthy assert python code shell usage example assert assert falsy python plugin install code system python assert object assertion code python look usage way assert assert basic assert truthy falsy code example code assert code", "pypi_keywords_clean": ""}, "databricks/spark-sklearn": {"git_readme_keywords": "distribute individual installation package replacement classifier developer version package available individual learning pyspark interpreter default convert recommend evaluate multiple experimental distribute project estimator documentation classifier github dependency available developer subdirectory integration package integrate popular environment variable incompatible install package", "git_description_clean": "integration package apache spark", "git_keywords_clean": "", "pypi_description_keywords": "distribute individual installation package replacement classifier developer version package available individual learning pyspark interpreter default convert recommend evaluate multiple experimental distribute project estimator documentation classifier github dependency available developer subdirectory integration package integrate popular environment variable incompatible install package", "pypi_keywords_clean": "spark distributed computing machine learning"}, "vladsaveliev/ngs-utils": {"git_readme_keywords": "package dependency reference astrazeneca lightweight development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "bioinformatics"}, "racker/scrivener": {"git_readme_keywords": "python scrivener framework plugin license", "git_description_clean": "twisted scribe framework", "git_keywords_clean": "", "pypi_description_keywords": "python scrivener framework plugin license", "pypi_keywords_clean": ""}, "pescadores/pescador": {"git_readme_keywords": "library streaming hierarchical process parallel streaming pescador library interleave substantial problem pescador generation streaming numerical uniform installation pescador pescador pescador particular category learning parallel category pescador learning distribution example", "git_description_clean": "stochastic sampling iterative learning", "git_keywords_clean": "python nyucds", "pypi_description_keywords": "multiplex", "pypi_keywords_clean": "machine learning"}, "dpursehouse/pygerrit2": {"git_readme_keywords": "prefix endpoint pygerrit client library trusty ubuntu review interact gerrit xenial support attempt copyright license username password example copyright ubuntu xenial ubuntu trusty copyright david possible authenticate mobile documentation gerrit version python version example script license copyright python version support authentication gerrit david pursehouse necessary script full authentication object support python original pygerrit licensed full license simple interface ericsson mobile installation install simple example upload gerrit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licensed full license interact ericsson interface david pursehouse copyright license review license copyright library copyright david gerrit", "pypi_keywords_clean": "gerrit rest http api client"}, "bitprophet/releases": {"git_readme_keywords": "friendly compatible extension default support overridden documentation timeline background development version install development readable friendly changelog multiple bugfix command traditional", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "friendly compatible extension default support overridden documentation timeline background development version install development readable friendly changelog multiple bugfix command traditional", "pypi_keywords_clean": ""}, "rpi-ws281x/rpi-ws281x": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hardware electricity transfer device control independent default legacy library length clock pattern brightness recommended comparison single strand module library possible control neopixel module library upstream legacy original important warning actual interface channel filesystem corruption device driver w pimoroni please voltage digital analog limited hardware symbol output frequency b signal quality practice theoretical transfer output channel background change future future software control signal output control controllable channel choose number convert raspberry independent connect adafruit pimoroni shifter convert userspace raspberry practical spidev driver functionality upstream digital physical analog general appropriate output information reboot represented background raspberry raspbian spidev program access support warning method reponsibility damage system example preliminary support module corruption raspberry controller channel bugfix support", "pypi_keywords_clean": ""}, "sk1p/django-codemirror2": {"git_readme_keywords": "django argument codemirror submodule python python parameter customize javascript collect browser template support python vulnerability possible django support textareas codemirror", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django argument codemirror submodule python python parameter customize javascript collect browser template support python vulnerability possible django support textareas codemirror", "pypi_keywords_clean": ""}, "/python-wifi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information available success failure duplicate functionality detailed possible wireless network installation example iwconfig available mailing directory example program available pythonwifi various discussion available convenience developer discussion interace example documentation documentation documentation pythonwifi robinson information association goldstein", "pypi_keywords_clean": "wifi wireless wlan iwconfig iwtools"}, "django/asgiref": {"git_readme_keywords": "package synctoasync allow synchronous subthread process information default server handle replacement replacement python asynchronous system synctoasync security gpg valid particular asynctosync transition synchronous function adapter function threadlocal replacement shepherd maintenance proxy several please contact standard python example server synchronous threadpool github application please server handle direct actual connection maintenance security security report coroutine synchronous connection security process control repository function allow threadpool control thread particular server threadlocal connection server server separate building documentation documentation documentation stateless server synctoasync object external central synchronous thread synchronous django decorate package building contact security asynchronous successor server documentation report security context context", "git_description_clean": "asgi channel layer", "git_keywords_clean": "", "pypi_description_keywords": "package synctoasync allow synchronous subthread server handle replacement replacement python asynchronous system synctoasync security gpg valid particular asynctosync transition synchronous function adapter function threadlocal replacement shepherd maintenance successor wsgi package maintenance proxy several please contact standard python example server synchronous threadpool github please server handle direct actual connection maintenance security security report coroutine synchronous connection security process control repository function allow threadpool control thread particular server threadlocal connection server server separate stateless server synctoasync object external central synchronous thread synchronous django decorate wsgi application contact security asynchronous successor process information report security context context", "pypi_keywords_clean": ""}, "redcanari/canari": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generation maltego container docker docker information transform development quick information development framework community canari framework distribute maltego project maltego transform framework kudos prototype package example canari docker welcome canari information framework docker container documentation docker kudos kudos distribute container release development canari package distribute canari repository framework welcome python canari bug transform canari quick maltego special", "pypi_keywords_clean": ""}, "bbriggs/legobot": {"git_readme_keywords": "introduction message legobot legobot legobot security formatting formatting install multiple library extensible possible support skeleton framework chatbot install documentation command alternative installation interactive functional legobot directory legobot platform legobot skeleton container legobot pollute virtualenv example machine interval function virtual functionality pleasure legobot imagination telegram installation alternative formatting otherwise microsoft directory chatbot installation installation specific request flexible painless introduction legobot appropriate discord messenger contribution automated function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "open-homeautomation/miflora": {"git_readme_keywords": "device solution integration install miflora sensor temperature gatttool pygatt coverage functionality library xiaomi library python energy library pygatt library wrapper backend separate package integration integration bluepy backend sensor library backend backend install bluepy backend library conductivity brightness temperature moisture support install btlewrap computer machine example energy dongle example pygatt backend status install machine gateway support support miflora pygatt install library bluepy library machine wrapper binaray available python project bluetooth release download btlewrap library bluepy library available machine different machine additional platform library install additional python miflora library assistant moisture conductivity", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "device solution integration install miflora sensor temperature gatttool pygatt coverage functionality library xiaomi library python energy library pygatt library wrapper backend separate package integration integration bluepy backend sensor library backend backend install bluepy backend library conductivity brightness temperature moisture support install btlewrap computer machine example energy dongle example pygatt backend status install machine gateway support support miflora pygatt install library bluepy library machine wrapper binaray available python project bluetooth release download btlewrap library bluepy library available machine different machine additional platform library install additional python miflora library assistant moisture conductivity", "pypi_keywords_clean": "plant sensor bluetooth ble"}, "chrisspen/burlap": {"git_readme_keywords": "arbitrary operation skeleton project example django contain arbitrary parameter activate difference determine satchel deployment documentation quickstart reported deploy activate dryrun command perform additional debugging variable activate example support parameter software everything framework substantial satchel overview toolkit installation configuration management influenced directory perform arbitrary superfluous generated dryrun complexity simplicity ansible django project environment variable outstanding installation install specific activate additional install package possible convert special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "arbitrary operation arbitary scenese skeleton project example django parameter activate difference determine satchel deployment documentation quickstart reported activate dryrun command perform additional debugging variable activate example support parameter software everything framework substantial satchel overview toolkit installation configuration management influenced directory perform arbitrary dryrun capture generated dryrun complexity simplicity ansible django project environment variable outstanding installation install superflous specific activate additional install package possible convert special", "pypi_keywords_clean": ""}, "klahnakoski/pylibrary": {"git_readme_keywords": "normal cpython python directory preferred python environment cpython registry pypy environment scipy cpython cpython installation install numpy installer install pypy multiple pypy pypy convention project crufty python github install linux installation install python pypy strategy python updated install development download procedural language functional python installation gotchas avoid download python install activate environment activate pypy installation environment deactivation jsonizable wonderful python virtualenv pylibrary library machine numpy scipy multiple python download github strategy installing pointer python install binary activate environment pypy virtual version library python little installing development little crufty binary subdirectory virtual environment library wonderful environment pypy november python python python different involved varsion environment install program motivation library copying specific pylibrary python pypy virtualenv pypy version installing pylibrary updated november discovery identical installing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "normal cpython python directory preferred python environment cpython registry pypy environment scipy cpython cpython installation install numpy installer install pypy multiple pypy pypy convention project crufty python github install linux installation install python pypy strategy python updated install development download procedural language functional python installation gotchas avoid download python install activate environment activate pypy installation environment deactivation jsonizable wonderful python virtualenv pylibrary library machine numpy scipy multiple python download github strategy installing pointer python install binary activate environment pypy virtual version library python little installing development little crufty binary subdirectory virtual environment library wonderful environment pypy november python python python different involved varsion environment install program motivation library copying specific pylibrary python pypy virtualenv pypy version installing pylibrary updated november discovery identical installing", "pypi_keywords_clean": ""}, "myyasuda/sphinx-erdiagram": {"git_readme_keywords": "install default\u3067\u306fpng graphviz\u306e\u5c0e\u5165 \u62e1\u5f35\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb diagram extention", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package description extension", "pypi_keywords_clean": ""}, "/modulemd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modulemd library library repository library manipulation practical metadata repository available manipulation thereof documentation available", "pypi_keywords_clean": "modularization modularity module metadata"}, "Outernet-Project/disentangler": {"git_readme_keywords": "root dependency disentangler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "root dependency disentangler", "pypi_keywords_clean": ""}, "eric-wieser/numpy-ringbuffer": {"git_readme_keywords": "unoptimized unwrapping arbitrary circular", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "arbitrary element unoptimized unwrapping circular", "pypi_keywords_clean": "numpy"}, "noirbizarre/bumpr": {"git_readme_keywords": "compatibility releaser extensible message customization development license configuration python installation exemple configuration multiline version coverage customizable python parameter console specify status customizable config optionnal console documentation publish distribution upload documentation documentation console installation install release artifact command release overridable command documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support seprator perform compatibility changelog markdown releaser support switch workspace pattern omission changelog vaidation changelog extraction support group extensible message customization development seprator omission prepare version extraction license support support optionnal configuration prefix support output readthedoc exemple boolean configuration multiline optional version coverage customizable discovery parameter console specify status documentation initial execute anything customizable config optionnal annotation support commit message console documentation publish distribution upload documentation documentation console commandline initial release validate configuration installation install release artifact command release optionnal prefix source distribution declaration support default declaration overridable command verbose documentation status", "pypi_keywords_clean": "version bump release tag"}, "eyolfson/django-ssh": {"git_readme_keywords": "basic django license django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic django license django", "pypi_keywords_clean": ""}, "SpectoLabs/python-myna": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tkaemming/django-subdomains": {"git_readme_keywords": "framework documentation subdomain", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework documentation subdomain", "pypi_keywords_clean": ""}, "/gcovr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute appveyor repository september tabular abstract example sandia national instrument gitter codecov status command inspired utility development complete documentation default compact project license install directory complete generate detailed generate version github installation coverage utility python alternative utility license copyright documentation bugtracker inspired python software status september sandia sandia corporation similar utility directory install development release summary development version machine readable website documentation python command different console bugtracker github installation quickstart copyright sandia travis available python python package recompile contract sandia certain abstract corporation government", "pypi_keywords_clean": "utility"}, "shichao-an/115wangpan": {"git_readme_keywords": "wangpan wangpan wangpan unofficial authentication persistent ubuntu installation fedora documentation github management bittorrent", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wangpan wangpan wangpan unofficial authentication persistent ubuntu installation fedora documentation github management bittorrent", "pypi_keywords_clean": "wangpan pan cloud lixian"}, "django-xxx/django-admin": {"git_readme_keywords": "disadvantage disable delete confirm disable disable export excel installation disable", "git_description_clean": "django admin extensions", "git_keywords_clean": "", "pypi_description_keywords": "disable disable export excel installation disable disadvantage disable", "pypi_keywords_clean": "django admin extensions"}, "shadowsocks/shadowsocks": {"git_readme_keywords": "restart destination support graceful restart management configuration install documentation license background package prefix tunnel install libsodium ubuntu", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information documentation software applicable express version license copyright clowwindy license specific specific language documentation license tunnel compliance license readme license copyright license version", "pypi_keywords_clean": ""}, "hvnsweeting/reshape": {"git_readme_keywords": "package software license documentation cookiecutter project import reshape range print hvnfrompymivn print project template reshape python numpy reshape reshape template cookiecutter documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package software license documentation cookiecutter project import reshape history first cookiecutter history hvnfrompymivn first release reshape python numpy reshape reshape documentation status", "pypi_keywords_clean": "reshape"}, "mmilidoni/django-tables2-simplefilter": {"git_readme_keywords": "standard django syntax example argument actual construct queryset django syntax support variable example default filteredsingletableview example install filteredsingletableview construct example template related option queryset function verbose subclass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "merll/docker-fabric": {"git_readme_keywords": "ssh connection service environment package simple implementation fabric ssh version information untagged dependent container development request fabric container blank command capable triggered command automatic creation container dependent production environment useful insight overview version number container fabric control fabric project container configuration updated python capability essential container specific access project appropriate container download compressed tarball generate compressed download compressed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ssh connection service environment package simple implementation fabric ssh version information untagged dependent container development container blank command capable triggered command automatic creation container dependent production environment useful insight overview version number container fabric control fabric project container configuration updated python capability essential container specific access project appropriate container download compressed tarball generate compressed download compressed", "pypi_keywords_clean": "docker"}, "dpgaspar/flask-babelpkg": {"git_readme_keywords": "install library orginal support diferent package extension module application extension", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install library orginal support diferent package extension module application extension", "pypi_keywords_clean": ""}, "googleapis/proto-google-cloud-logging-v2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "repository library stackdriver", "pypi_keywords_clean": ""}, "/oslo-rootwrap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "permission license apache documentation apache license repository", "pypi_keywords_clean": ""}, "scieloorg/accessstatsapi": {"git_readme_keywords": "recuperar biblioteca instalar fornecer metodos install accessstatsapi", "git_description_clean": "biblioteca que implementa uso da api de estat\u00edsticas de acessos dos documentos scielo", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "albertyw/mailgun2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python status climate usage python installation optional", "pypi_keywords_clean": "mailgun email"}, "WiringPi/wiringpi": {"git_readme_keywords": "", "git_description_clean": "gordon arduino wiringpi library raspberry pi unofficial mirror wiringpi bindings", "git_keywords_clean": "", "pypi_description_keywords": "library please expander implementation wiringpi discord gordon wiringpi target library python general python example useful softtone install python implementation arduino install immutable wiringpi c additional available generate peripheral wiringpi object python python contain version speaker normal manual wiringpi library unofficial digital repository function installed forget installed access wiringpi python python python wiringpi implementation expansion contain number channel wiringpi python wiringpi rebuild discord channel", "pypi_keywords_clean": ""}, "RethinkDB/rethinkdb": {"git_readme_keywords": "", "git_description_clean": "database realtime web", "git_keywords_clean": "", "pypi_description_keywords": "package database connection default effort installation tracker spectrum database access account python driver variable operation multiple recommend shortcut standard library intstalled rethinkdb rethinkdb python compatible tornado development previous driver support hurray migration rethinkdb install integration original python standard python scalable realtime driver rethinkdb tornado tornado modify example temporary ssh example fraction rethinkdb original realtime rethinkdb compatible python python asyncio available environment driver default import tornado contribute support digital droplet difference previous different scalable database document asyncio populate rethinkdb rethinkdb section request asyncio replacement realtime", "pypi_keywords_clean": ""}, "raisoblast/bottle-pgsql": {"git_readme_keywords": "database connection default autocommit download accessed plugin default default application plugin postgresql support database consistent configuration keyword keyword version github keyword argument connection instance connection installation argument configurable different outstanding plugin installation install request postgresql connection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection application keyword overhead database callback connection configurable", "pypi_keywords_clean": ""}, "nephila/django-ckeditor-filebrowser-filer": {"git_readme_keywords": "ckeditor filebrowser respective documentation climate toolbar license urlconf install configure ckeditor configuration coverage ckeditor widget django documentation example documentation original version", "git_description_clean": "based ckeditor filebrowser", "git_keywords_clean": "django filer python ckeditor", "pypi_description_keywords": "support canonical urlconf ckeditor configuration ckeditor widget documentation original position respective documentation license install configure russian history support django version coverage example french toolbar support thumbnailoption release deployment structure ckeditor filebrowser compatibility django version detection django documentation", "pypi_keywords_clean": "django filer ckeditor filebrowser"}, "njouanin/repool": {"git_readme_keywords": "installation available creation rethinkdb database management python library number optional install disable interval cleanup default connection available internal thread several connection rethinkdb available python rethinkdb connect optional connect method configurable rethinkdb connection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "matiskay/html-similarity": {"git_readme_keywords": "similarity joint css distance similarity package joint similarity sequence comparision quick comparison html implement similarity similarity metric similarity implement html document information similarity measure similarity similarity structural html similarity sequence comparison structural similarity similarity web example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package pypi information similarity html document distance development css comparison fo interval similarity package documentation quick html similarity similarity joint sequence comparison structural similarity compute structural similarity web information package similarity metric similarity structural joint similarity measure similarity fo html", "pypi_keywords_clean": ""}, "sde1000/python-dali": {"git_readme_keywords": "compatibility fluorescent copyright c voltage controller expensive useful registry interface digital addressable library extensible supply voltage support author library structure interface command fitness particular several tridonic merchantability fitness warranty merchantability niederreiter diogo version program software foundation reference system general public emergency copyright copyright public license general version license communicate physical warranty command registry controller incandescent control interface specific interoperate related particular purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility fluorescent copyright c voltage controller expensive useful registry interface digital addressable library extensible supply voltage support author library structure interface command fitness particular several tridonic merchantability fitness warranty merchantability niederreiter diogo version program software foundation reference system general public emergency copyright copyright public license general version license communicate physical warranty command registry controller incandescent control interface specific interoperate related particular purpose", "pypi_keywords_clean": "lighting dali development"}, "seb-m/pyinotify": {"git_readme_keywords": "project pyinotify license documentation current command directory version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project pyinotify license documentation current command directory version", "pypi_keywords_clean": ""}, "xeroc/graphenelib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library graphene library installation documentation installation install pygraphenelib available telegram conduct discussion everyone development", "pypi_keywords_clean": "graphene"}, "Azure/azure-mgmt-powerbiembedded": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package management underlying service management provide feedback project changelog release history generation management version uninstall feedback encounter extension python microsoft library resource manager changelog release bugfixes compatibility installing package algorithm response default behavior package compatibility performance general section project version optional generator uninstall installing session package version azureenum syntax positional initial running operation parameter default python python response initial microsoft general breaking external context manager behavior unrecognized execute callback compatibility important library complete", "pypi_keywords_clean": ""}, "kennethreitz/omnijson": {"git_readme_keywords": "python license install verndorizable available simplejson omnijson problem problem solution", "git_description_clean": "like anyjson better", "git_keywords_clean": "", "pypi_description_keywords": "python license install verndorizable available simplejson omnijson problem problem solution", "pypi_keywords_clean": ""}, "weissjeffm/multimethods-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "preference multimethod support language dispatch", "pypi_keywords_clean": "multimethods dispatch"}, "mitsuhiko/unicode-nazi": {"git_readme_keywords": "python implicit conversion command unicodenazi unicodewarning import unicodenazi reverse block disable unicodewarning implicit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python implicit conversion command unicodenazi unicodewarning import unicodenazi reverse block disable unicodewarning implicit", "pypi_keywords_clean": ""}, "jbfavre/protobix": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "discovery trapper protocol build", "pypi_keywords_clean": "monitoring"}, "barseghyanartur/django-nonefield": {"git_readme_keywords": "support installation install version barseghyan field django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support installation install version barseghyan field django", "pypi_keywords_clean": "forms"}, "/isstreamer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "logger logstream initial state"}, "frictionlessdata/datapackage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "path relative descriptor removal schema profile city data instance glob use property descriptor validate installed environment thor briem rome location package data local csv resource used resource resource file open consider data resource tabular chandel alexchandel cli provisional descriptor use hansl femtotrader descriptor alter exception integrity briem gunnlaugur api documentation install package installation package validate standalone custom request useful metadata instance interact added integration strict flag changelog documentation descriptor local project added added flag disable againt schema bryon jacob data casting coverage linting example registry url recource descriptor function package development instance tabular alex chandel true resource local onle true foreign python environment range file descriptor update hood added support schema etc schema class vitor bryon added remove validation behavior alter validation provisional api python first data file descriptor storage table data resource instance tabular data paul walsh package different json schema mihi alex descriptor many descriptor validity table schema standalone function profile etc storage instance used stage descriptor new control described resource remote use semantic paulywalsh luiz limited flag success profile use array project virtual infer data resource class numeric lattide class instance example check get data format table resource inline simple cli array property library class use argument check operation instance storage csv file remote data behaviour added process package class package zip resource metadata dereferenced data hansl hansl null added virtual environment class learn type testing package storage bj\u00f6rgvinsson gunnlaugur python interpreter array data many consider work resource key violation local remote instance class flag alter return true true success resource storage python new extract useful existent operation invalid local file full changelog added instance specify version first create interface work control list library introduction class appended validity valid descriptor foreign linting coverage described table new api lattide longitude validation status behaviour cli jhamrick ricardo async loop disable data support resource lafuente paul class library resource descriptor true valid city team descriptor disk pattern new work data path url false true armesto hansl knowledge international documentation example descriptor json concrete version package profile location property local path success false added metadata package inferring alter mode femtotrader vitor profile instantiate class inferred added pattern added code added property descriptor glob major removal data updated behaviour create blank available location baptista vitor descriptor final error type package ready true strict dict gunnlaugur edouard function infer jessica hamrick request session class profile international coding loop data data schema package descriptor resolved changelog described various remote link program please component represent bauer mihi activate project verbosity positional flag emit file consider ready infer update resource data source instance null gunnlaugur thor inferred metadata data resource property combination specification first reference constructor check recource infer standalone represent json property table inferring data data valid documentation package final structure url object version range url json infer resource way get empty strict glob file foreign key path remote added resource described documentation class data environment run true object descriptor argument data tabular schema async dictionary violation lookup environment install resource list strict mode package return method option file library michael bauer basic introduction jacob bryon storage creation format mediatype constructor instantiate native javascript limit walsh paulywalsh new resource semantic versioning support python package use file path mode work count used index local filesystem data remote glob pattern profile component wrong ricardo lafuente table city index resource open knowledge zip file update data multiple usage course package metadata support custom tweak little commit history whole table error integrity schema specification predictable interface available updated cli command added inferred valid validate interact data storage argument package instance registry constuctor remote url api reference available tox tabular profile json descriptor data use method argument data integrity file pattern use glob class api resource content active environment metadata tweak value good dereference resource little bit important update file edouard michael get array remove data lookup table resource local operation available history added option get valid use function validate invalid descriptor issue flag create data data reading create activate json file formatted commit function inferring null check subset casting false pattern method longitude rome constuctor instantiate hamrick jhamrick use storage inline data location native directory documentation package load blank data onle basic resource data path data validate data api use session updated location available data package valid againt error something bryon changelog array resource consider local package resource integrity issue path object good profile class valid infer alexchandel jessica first infer class first structure zip file inferred luiz armesto descriptor package vitor baptista resource multipart api added", "pypi_keywords_clean": "frictionless data open data json schema table schema data package tabular data package"}, "constantAmateur/markdown2mathjax": {"git_readme_keywords": "package package instruct reconstruction conjunction popular default sanitizeinput function double appropriate mathjax markdown nothing occurance placeholder default placeholder default mathjax supplied default placeholder something separate equation appropriate codeblock literal occurance inverse sanitizeinput installation markdown processing supplied markdown format mathjax conjunction prefer explanation sanitizeinput cleanup keyword popular markdown placeholder placeholder typical mathjax javascript markdown python enough sanitizeinput reconstructmath instruct mathjax python package block nothing change", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package package instruct reconstruction conjunction popular default sanitizeinput function double appropriate mathjax markdown nothing occurance placeholder default placeholder default mathjax supplied default placeholder something separate equation appropriate codeblock literal occurance inverse sanitizeinput installation markdown processing supplied markdown format mathjax conjunction prefer explanation sanitizeinput cleanup keyword popular markdown placeholder placeholder typical mathjax javascript markdown python enough sanitizeinput reconstructmath instruct mathjax python package block nothing change", "pypi_keywords_clean": ""}, "etianen/django-s3-storage": {"git_readme_keywords": "storage confidential information internet number follow installation authenticate amazon scrutinize compare private different default whereas freelance number different library authenticated amazon django project aggressive caching contain confidential similar migration developer python installation additional available caching default django amazon accessible caching management storage migration python important configure amazon trivial follow public example information default authentication variety storage functionality migration trivial storage amazon browser caching support python status project important making cambridge uk unclear installation install important several storage definition service support information project significant minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dmbaturin/pytaf": {"git_readme_keywords": "numeric flight safety forecast weather terminal aerodrome forecast reporting universal information desirable interpreted overload regional interpretation flight planning critical flight computer readable moreover website weather information redefine interpretation weather forecast aviation weather information critical aerodrome forecast object decoder english guaranteed machine machine readable nothing airport different interpret european ceiling impossible original undecoded clouds", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "aviation weather meteorology taf metar"}, "jongracecox/mister-bump": {"git_readme_keywords": "new release mean commit tl dr pip use tag project close major gitlab web pipeline create start work version basic way new tag change tag master master create branch work different master branch create dev new project dr close create tag master make tag carry version python ci script something part correct format pipeline setup release number version release candidate source branch tag create possible tell key branch version tag version number subsequent breaking change return option tag merge create version release tl development release version ci want deploy version instance use command pipeline build need finalise version increment automate creation perform deployment bugfix create master breaking tool work tag branch pipeline perform significant change git deviation fix release git docker image make breaking want make deployment branch remainder tag carry normal last version branch release prefix remainder first start release tag cut release next consider change major bugfix ready basic call pipeline order version verbose due significant ci setup expected pipeline work need order tool setup deploy part ci tag button current major project source dr fix source call next version new major example version need ready start want manage ready cut ready release version possible tell script directory git import bugfix release want version base bugfix version tag repository way tool use development bug previous first release time result update release introduction tool deploy something additional commit branch update build deploy master note green new run generate master ci candidate release commit result type make result new web ui project want want create use correct master next start version need close tag tag release note finalise current change want deployed ci argument help case update master branch master master commit increment version example last master section version commit deploy master version move command line previous release root directory return new verbose output manage version dr create change need tag need make sure syntax note pipeline run work expected master time major version number move call package need create commit distance line interface need make approach tag instance tag bugfix basic usage pipeline deploy version git deploy bugfix normal start pass fetch python package setup make next release release move want start python introduction distance commit project mean use environment ci pipeline number environment new ci tag want project rare accept release deviation distance deployed update develop fix release create note tag commit commit produce bugfix style create post thing tag post release branch bugfix multiple version package docker gitlab ci git project creation version dev branch move create version tl merge multiple server merge branch commit version call next use version number candidate next sure use create new bugfix branch build pipeline result version exclusion pipeline last release documentation return major release script increment different call script mister bump current version button type environment variable idea automate approach tool fix bug tag base close release installation installation branch tag new version branch commit package call number first release version example develop line idea sure package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "new release mean commit current git tl dr pip use tag project close major gitlab web version hash pipeline create start work version basic way new tag verbose debug version help master master create branch version bugfix work different master branch change tag create dev rc override localhost help new project package multiple dr close create tag master make tag carry version python exit verbose false debug ci script something part correct format import setup pipeline setup release number version release candidate source branch tag create bash pip possible tell key branch version tag version usage rc format optional number subsequent breaking change return major debug tag merge create version appropriate project development release release tl option version ci want deploy git status version instance use command pipeline build style rc version increment need finalise override version automate creation perform deployment bugfix create master breaking tool work yaml ci pipeline perform describe debug tag branch git deviation fix release significant change git type final docker image make breaking want make deployment branch version user user localhost last version branch release carry normal prefix remainder remainder tag first start release tag cut release next consider change major bugfix ready basic call minor debug pipeline order version verbose due significant ci setup expected pipeline work need order tool setup deploy part ci version use tag button current major project source dr fix deviation debug source call override override next version new major example version need ready start want manage hash debug ready cut suffix increment rc verbose ready release tell script argument user style possible directory git import bugfix release want version echo version version major version minor base bugfix version tag repository version debug way tool bug previous rc echo first release time result style example update release introduction tool git version deploy something additional commit branch update build deploy master note green new run generate master ci export style debug current candidate release project version install basic output rc commit result type make localhost style result new project want bump alt want create web ui command git start version use correct pip install master next tag tag need close release note version deviation rc style increment version branch master case update master change want master commit finalise current deployed ci example last git branch master section master debug deploy master version commit command line status positional version type previous release version move root directory return new verbose output manage version dr create change need setup import style suffix make sure syntax note pipeline run debug command tag need work expected localhost call increment debug bugfix debug major version master time number move verbose enable call package need create commit distance line interface version version need make approach tag instance tag bugfix basic usage pipeline deploy version git deploy bugfix normal start pass fetch python package setup package final debug setup make next release release move debug version current branch bash export want start python introduction distance commit project mean use environment debug candidate ci pipeline bugfix false number environment new ci tag want project rare accept release deviation distance deployed update develop fix release create note tag commit commit candidate debug style create post produce bugfix post release branch bugfix thing tag multiple version package docker candidate upstream git project creation version enable verbose gitlab ci dev branch move create version tl merge multiple server merge branch commit version call next sure package use version number candidate next sure use create new git describe bugfix branch build pipeline result version exclusion pipeline last release documentation return major release script increment different call script mister bump help usage current version environment variable idea automate approach tool alt image button type fix bug installation installation tag base branch tag new version branch commit close release number first package call release version example develop line idea use development", "pypi_keywords_clean": ""}, "LegoStormtroopr/django-haystack-channels": {"git_readme_keywords": "haystack install django haystack asynchronous inherit version github django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "haystack install django haystack asynchronous inherit version github django", "pypi_keywords_clean": ""}, "/pyspatialite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliant spatialite pyspatialite interface pyspatialite interface version relational database", "pypi_keywords_clean": ""}, "newville/asteval": {"git_readme_keywords": "evaluator default variable function tracker forbidden addition comprehension emphasis mathematical documentation available internal important standard builtin mathematical language control available mathemetical dictionary namespace strengthen malicious lanquage installation development miniature mathematical", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "emphasis mathematical interpreter namespace available evaluation function emphasis dictionary", "pypi_keywords_clean": ""}, "scieloorg/articlemetaapi": {"git_readme_keywords": "python status articlemeta biblioteca instalar fornecer metodos install articlemetaapi", "git_description_clean": "biblioteca que implementa uso da api articlemeta", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/meinheld": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "worker class performance python x installation simple simple continuation sendfile meinheld install meinheld environ continuation asynchronous library continuation meinheld module example install gunicorn continuationmiddleware install source meinheld continuation python gunicorn example server socket module gevent meinheld python install source python python greenlet websocketmiddleware example interesting meinheld support linux freebsd library picoev python python compliant websocket meinheld installation install socket patch gunicorn install greenlet meinheld gunicorn basic meinheld install", "pypi_keywords_clean": ""}, "/django-datatables-view": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "columns columns hesitate look example project return advanced execute logic specific way method return choice install look method typical django output available populate datatable second column override method advanced customisation datatable method way override handler python server column second datatable specific processing awesome attribute javascript example basedatatableview override example js columns definition column example example default override filter datatable different datatable columns example customisation request django urlconf look columns return queryset", "pypi_keywords_clean": "django datatables view"}, "nerdynick/pysqlpool": {"git_readme_keywords": "thread management association cursor management mysqldb python credit normal pyunit actual source library connection manager manager cursor unittest question legacy documentation development sphinx version installation branch connection management connection license pysqlpool pysqlpool pysqlpool documentation pysqlpool folder structure documentation documentation association connection source submit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thread management association cursor management pysqlpool mysql mysqldb python pysqlpool license lgpl library connection manager manager cursor query class pysqlpool documentation mysql query pysqlpool python installation website pysqlpool bug question python install connection management license pysqlpool pysqlpool pysqlpool mysql connection association connection", "pypi_keywords_clean": ""}, "leoleozhu/flask-gfwlist2pac": {"git_readme_keywords": "generation current extension clowwindy example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generate pac application generate", "pypi_keywords_clean": ""}, "/grafyaml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "grafyaml grafyaml software license documentation", "pypi_keywords_clean": ""}, "/apidoc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package download tracker changelog readthedocs summary documentation argument command keyboard shortcut optional override diffmode keyword optional version initial property documentation generator shortcup bootstrap inprove initial release optional searchbox license installation", "pypi_keywords_clean": ""}, "/sphinx-patchqueue": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jesford/cluster-lensing": {"git_readme_keywords": "package journal version package deltasigma upgrade gaussian miscentering cosmology simplified distribution project fitting customizeable previous documentation magnification notebook generate differential customizable powerlaw installation research example variety surfacemassdensity software convert richness project clusterensemble necessary description lensing repository notebook clusterensemble miscentering bibtex parameter feedback package commitment relation convert miscentered formalism example miscentering formalism astropy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package differential surface deltasigma information surface cluster lensing variety", "pypi_keywords_clean": ""}, "vaniakosmos/easy-env": {"git_readme_keywords": "usage implement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "usage implement", "pypi_keywords_clean": "env environ"}, "sabnzbd/sabyenc": {"git_readme_keywords": "python compile sabyenc performance overall install directory sabnzbd beneficial python version overall download header download process original", "git_description_clean": "python yenc package optimized use within sabnzbd", "git_keywords_clean": "", "pypi_description_keywords": "python usenet sabnzbd module performance module header original", "pypi_keywords_clean": ""}, "sacrud/sacrud": {"git_readme_keywords": "contribute sacrud sacrud tracker support composit endinng multiple interface sqlalchemy composit primary python installation available dbsession channel sacrud separate project license project python python support sacrud license option sqlalchemy session install github installation install problem", "git_description_clean": "crud interface sqlalchemy", "git_keywords_clean": "", "pypi_description_keywords": "contribute sacrud sacrud tracker support composit endinng multiple interface sqlalchemy composit primary python installation available dbsession channel sacrud separate project license project python python support sacrud license option sqlalchemy session install github installation install problem", "pypi_keywords_clean": "crud database sqlalchemy"}, "frejanordsiek/hdf5storage": {"git_readme_keywords": "type version build documentation feature release cell frozenset former version optional supported underlying extension specific cell cell latter format bool logical python standpoint required command version python dependency scipy type logical single type matlab scipy numpy table little clunky different extension type python format arbitrary canonical empty minor fix large variety matlab support command python format metadata different hardware download package option explicity compound type array license installation matlab compatibility error install package double single fix release python system support matlab structured optional dependency hierarchal python example support numpy storage type type group package package bugfix minor struct logical char avoided package version bool type information representation different structure python syntax equivalent matlab compatiblity high level compound bugfix release scipy julia supported python frozenset cell important python supported package pip package compatibility option matlab class char cell overview python sphinx documentation single double package install bytearray char package matlab dtype structured support large type storage structured cell minor feature system bugfix similar source download extension extra logical single dtype field addition copyright char bytearray package support bad security python support compatiblity option initial version struct struct exchange numerical numpy type python null variety number underlying dtype small julia matlab couple python python class version storage format breaking clunky python python package scipy package version package version container interpreter double complex maximum untrusted numpy decimal format exchange familiar python path addition char struct source install install source bsd license bug bugfix dtype supported first version variety python cell package source package documetation struct structured field dtype documentation python python type right python information documentation documentation double char executable path required package direct example python hierarchal form python matlab complex double cell canonical thrown unix filesystem", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "build documentation feature release cell frozenset supported underlying extension specific cell cell bool logical python standpoint command version python dependency scipy matlab scipy numpy table version little clunky different extension format arbitrary canonical empty minor fix large variety matlab support command python format metadata different hardware download package full functionality option explicity array license installation matlab compatibility fix release install package double single group python system support matlab optional dependency hierarchal support numpy package package bugfix minor struct logical char avoided package version bool representation different structure python syntax equivalent matlab compatiblity high level compound bugfix release supported python frozenset cell important python supported package pip package compatibility option matlab class char cell python unified overview python sphinx documentation single double package install bytearray char package matlab dtype structured support large structured cell minor feature system bugfix similar source download extension extra logical single dtype field unified single addition copyright char bytearray package support bad security python support compatiblity option initial version exchange numerical python null variety number underlying dtype small couple python python class version storage format clunky python python package scipy package version package interpreter double complex maximum untrusted numpy format exchange familiar python char struct source install install source bsd license bug bugfix dtype supported cell structured variety python cell package source package documetation struct structured field dtype documentation python right python information documentation documentation double char executable path direct hierarchal form python matlab complex double cell canonical thrown unix filesystem", "pypi_keywords_clean": "matlab"}, "/fastzbarlight": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible python libzbar fastzbarlight fastzbarlight python python benchmark repository github installation install repository zbarlight ubuntu version wrapper install wrapper zbarlight library", "pypi_keywords_clean": "zbar qr code reader"}, "rr-/screeninfo": {"git_readme_keywords": "location specify parameter screeninfo available environment xinerama experimental physical pyobjus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "screen monitor desktop"}, "/synopsis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "processing documentation engineering translation introspection", "pypi_keywords_clean": ""}, "/lino-noi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable project homepage management commercial information central project homepage technical technical documentation documentation status", "pypi_keywords_clean": ""}, "Psycojoker/django-view-dispatch": {"git_readme_keywords": "conditional standard licence potential increase complexity complex installation something handling therefor progress library research function example situation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "conditional standard licence potential complex installation something handling address therefor progress research function example situation", "pypi_keywords_clean": "django"}, "/dmidecode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jpscaletti/solution": {"git_readme_keywords": "individual license flexible representation customizable cleanup solution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "individual license flexible enough overwrite several representation customizable cleanup solution", "pypi_keywords_clean": ""}, "FroggedTV/grenouilleapiclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "grenouilleapiclient package grenouilleapi community", "pypi_keywords_clean": ""}, "/python-slimta-redisstorage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/reproject": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package interface reprojection package reproject resolution orientation interpolation screenshot package information orientation coordinate reproject astronomical reprojection celestial coordinate", "pypi_keywords_clean": ""}, "reformo/rsanic": {"git_readme_keywords": "python framework service access address follow version example installed", "git_description_clean": "micro framework built top written python", "git_keywords_clean": "python", "pypi_description_keywords": "python injection container service installed address static markdown support version container version autoescape example config access codebase controller rsanic follow version dependency micro framework rsanic micro follow version dependency injection local jinja prevent example", "pypi_keywords_clean": ""}, "guokr/swagger-py-codegen": {"git_readme_keywords": "framework generator tornado example codegen python tornado python python falcon example falcon overview swagger validation install command component compatibility falcon python version generator overview example tornado compatibility component contact swagger specification browser python restful python tornado falcon example", "git_description_clean": "python web framework generator supports flask tornado falcon sanic", "git_keywords_clean": "python swagger flask tornado falcon pypi sanic", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "AndrewRPorter/yahoo-historical": {"git_readme_keywords": "download limitation copyright finance historical documentation fitness particular merchantability fitness subject installation software express substantial purpose noninfringement liability contract permission distribute sublicense motivation warranty restriction publish distribute particular purpose connection software software software", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "permission noninfringement software distribute sublicense express substantial merchantability software description warranty documentation limitation liability restriction particular platform unknown copyright connection software software software contract", "pypi_keywords_clean": ""}, "pyecharts/echarts-china-cities-pypkg": {"git_readme_keywords": "clone install project installation install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project bash chinese installation install install bash bash change", "pypi_keywords_clean": "python"}, "Kinto/kinto": {"git_readme_keywords": "minimalist postgresql production documentation service synchronisation development postgresql", "git_description_clean": "generic json document store sharing synchronisation capabilities", "git_keywords_clean": "api storage web http decentralisation", "pypi_description_keywords": "admin auth add endpoint setting empty service bug parsed number makefile add fixes postgresql startup fixes command docker setup github allow reuse kind object bucket feature readable usage callback ttl parameter validation collection simple fixes classic logger authentication verification endpoint filtered added cache fixes new rodolphe qui\u00e9deville documentation improved class usable cliquet protocol document create ref protocol backend api fix secret enguerran colson backend timestamps conlini aiman meant address change default principal settings page schobelock victor target explicit link freenode conduct alt previous storage schemaless default install postgresql json storage string value redis event request schemas cliquet update document configure api introduce ajey kulkarni admin enabled library blackify separate view body response fix refs post integer create child comparison table bucket plugin whole kinto normal kinto move remove validation body account mention none settings bug prefixed project irreversible deleting multiple dockerfile pip \u00e9ric lemoine example list upgrade breaking ichim tiberiuichim mention readme unicode fixes fix parse postgresql cache kinto installed feature plugin application mention python browser cache ability plug event payload slash current openid state batch endpoint explicit error function python collection mark fix redis enguerran eric upgrade deprecate dutta itai token work server past settings fixes usage development time file deprecated continue security fix sebastian rodriguez fix documentation initialization process postgresql fixes insert query code conduct documentation version bump record return empty list numeric file add documentation deployment mention backend documentation status example fixes init failure useless logging fixes script authentication internal current userid validation option protocol added file environment single operation tiberiuichim vamsi bkajey anh favicon inline past migration attribute mapping coverage target match rfc duration heartbeat faster result plugin enabled pagination bug amckay anthony upgraded cliquet new settings account creation openid login sqlalchemy sphinx admin new backend urls remove duplicate backenderror fixes werkzeug statsd new option added hoodie new experimental resource object ebrehault eric package order first change schema validate documentation kinto former deprecated resource timestamp tox env integer value dockerflow api allow support major ini find settings hello utc fix default internal policy fixes update configuration raise configuration field hello internal event collection timestamps quota plugin crash json usage virtualenv new kinto fault add heartbeat endpoint behave version prefix update dependency variable findout file upgraded pip install crash validating principal present fixes add information message crash jsonschema querystring filter mathieu leplatre response user run docker pool class fixes openid grouping record inconsistent state authorization policy installed remove kinto group information fixes parent request kinto storage pip database initialization need operator project name adam chainz version upgraded name protocol admin default kabra kulshekhar repo fixes control settings code long unicityerror class creation allow fix basic version see add file sumitsarinofficial sunakshi request header leplatre mathieu file settings allow post eric br\u00e9hault jsonpatch webob string fixes cycle error information available setting bug mini checklist default memory backend pr hello view hello page name redis bengtsson mail validation deserialization password delete list bound pagination token empty directory http api docker container output subpath remove platform community point toctou bug message fixes foobarquaxx francisco ayush sharma record path url default fixes many deserialization request update docs settings fix custom model batch request unavailability recreating python fixes command api migrate command behaviour accessible sure redirect backend added head request support upgrade tutorial querystring webpack inline prashanth prashantsurya admin ref use mock dynamic internal value field use tox fixes permission columns use insecure use string length api schemas metaireau alexis kinto protocol user password posssible response add support modified id fix checklist cdn generic api allow configure specific behaviour id columns endpoint load actual id use correct settings internal fix link mandatory fixes backend fix tarek ziade fixes api fix dockerfile fix json sunakshitejwani surya joshua bird fixes protocol dufresne dufresnebrady fix pserve fixes documentation patch fixes cliquet new test travis badge irc id default run command protocol fix alt code plugin internal major version cgragnic cl\u00e9ment modified past cleaned usage leak backend parent response client documentation get postgresql server page bug consistency api operation storage server docs filtering integer hard code release process add uwsgi newrelic new value fixes virtualenv skip link english method storage header plural upgrade bug add slack postgresql support time statsd view bug scalingo deploy choclatefr dan configuration template deleted id unresolved json history enabled url param added documentation view authenticated fixes security swagger output load balancer env travisci deploy button install major continue support add test modified add validator postgresql permission condition deleting clause bug long documentation rouberol br attribute history fixes text collection bug bucket fixes configure authentication documentation huge basic auth specific installation policy ref level field move update permission fix delete record build pagination cache entry tarek taus key breaks important limitation fixes heartbeat use bug revamp documentation fixes parent build docker redirect json gguthe heron fix nested ui security default policy unknown required avoid conflict remove command anonymous fixes deleted status status code ease release internal storage settings code gdpr compliance response header request new migration postgresql service mode return json log renderer installed virtualenv logo add check account kinto logo error format christophe gragnic fixes class default example added pyramid perigk peter listener name backend fixes support argument useful integration publish kinto settings operational prefixed deprecated customizable update docker user info cornice upgraded memory backend use json add check settings deprecated jo\u00ebl marty docs bug dockerfile default last kinto admin niraj oron docs generic fix history shweta oak fix segmentation default sort redirection path tombstone deleted fix internal list new francisco piedrahita build admin event new sphinx breaking collection empty ref api added tutorial backend create platform specific redis memory group association version number batch transaction permission backend record collection logging batch order migrate ugherughe emamurho documentation internal multiple documentation admin ci url new python code usage assert configuration startup field fix field fixes prevent browser init input cl\u00e9ment villain password account enabled settings architecture fixes argument consider prefix hello eugene kulak extra openid current url pascal roessner add schema install fix response default filtered get place protocol api documentation added action remove regexp start migrate permission replaced membership test failure config \u00e9tienne \u00e9tienne fixes backend mock standard setting useful endpoint admin method parameter tombstone record maksym shalenyi custom connection documentation ref crash classic fixes internal explicit dependency fil fil record id inline script example collection openid plugin nperriault niraj configure info run service minimalist fixes json body link notion fixes error ubcpeter realsumit public settings former cliquet kinto run code quality startup log ziade tarek setting run type new duration new bucket fix create default hoodie comparison memory permission instad html define mckay amckay limit network write plugin heartbeat storage validation internal jsonschema validation sort order use package fetch storage remove class delete tombstone docs choose default fixes admin added plugin bug simplejson undo chirag jadwani document upgrade upgraded version refs internal add setting ref add order restart masataka takeuchi deprecated allow cache key user field list bob performance issue upgrade python route catch cache validate old quick mention travisci add redis listener upgrade api filtered unknown action redis balancer membership check optimistic dependency core eg authentication move strip internal migrate operation remove depreciation timestamp upsert tox upgraded fixes fix parent object egaas adam indranil dutta internal fixes mention python typo rhel host default frank greeshma hiromipaw silvia see remove documentation remove validate authenticated tdd style private urls pyramid api empty context use assertequal fix hmac correct behaviour add input function new header cliquet load added notion response status write addition deletion lot bug postgresql column use handle querystring method use character fixes command attribute version update firefox account wrong fixes fix validation remove usage term documentation format kinto public attribute root invitation community race condition header portion script simulate specify protocol package python fix wrong kulkarni bkajey error message field divisible release bug fix performance update upsert settings prefixed storage providing configuration use ethan \u00e9tienne default plugin add sent implicit tutorial write crash setting upgrade ui sumitsarinofficial rektide add pypy querystring numeric rektide rektide class fixes fix response format json bucket many add new client send record fixes crash providing experimental endpoint rossi hiromipaw julien kulshekhar gabriela surita json request header sent rolledback version file prefixed user sqlalchemy documentation slack badge crash querystring add docs fix openid rkleine rodolphe swagger file lavish aggarwal add disqus fix english crash deleting target kinto incompatible api deleting empty ini ini docs kinto output view protocol hello change meaning taus taus postgresql parameter false internal docker custom header uuid crash empty protocol remove inserted transaction thing time principal group test add server configuration permission write character operator user counter note settings helper function yaml swagger backend race deleting pagination ref replaced argument fix typo github stephen martin function new pool behaviour reaching openid policy plugin uwsgi meant schemas json startup output der ploeg mention postgresql deleted value bundle repo ability define add ability simplify settings procedure internal link error integration example docs document deleted single pserve argument documentation option plugin fix text search explicit permission new event support regexp backend case parameter mandatory plugin fixes group record operator fixes revision field david emamurho timezone utc server license update virtualenv generation optional login internal bucket plural enguerran fix alexis andy fix bug info root information internal script fix lot breaking current domain permission function contain unicode cache heartbeat api docs bucket add huge rework support add old cliquet subcommand name error deleting port header rollback effect config folder exception authentication admin fixes peter bengtsson partial collection fixes allow part core recover race file transaction remove dead enabled fixes test normal castro chirag settings ini resource attribute protocol breaking authenticated added john giannelos fix consistency place openid deprecated code use memcache custom logging vamsi sangam file creation payloads retrieval stack cloudstorage backend field header remove pypy empty bump account user prefixed version auth ofuscation fix schema dependency error random admin plugin order ease definition full fpiedrah frank read write plugin security greeshmabalabadra gabriela config upgraded first level upgrade pyramid secret ini dockerfile fixes insert check add troubleshoot leap behavior ref breaking fixes breaking use sqlalchemy unique user balthazar rouberol session add paragraph mutable default host kinto ref bug plugin redirect storage method providing bad info resource tutorial fixes add documentation crash batch image install list plural logging extra fixes ability introduction crash server documentation minor duplicate glossary collection timestamp param empty add tutorial remove python content resource specific bucket fixes plugin authorize endpoint config file endpoint unknown index default dead code see documentation new configuration add badge overview section option enabled larlet david dan phrawzty new setting integrity constraint fix broken restrict private backend tombstone usage pattern fix attribute transaction rollback minimalist json schema new endpoint version folder module experience fixes upgraded protocol collection delete header batch collection need documentation fixes aimanparvaiz ajey postgresql error add default spurious note enabled file fix sent fixes page wiki silvia indranil parvaiz aimanparvaiz response consistency bucket internal whole cycle lebunetel julien present internal sure setting fix pagination virtual resource impossible search version bug improved update past release new implementation broken hyperlink default bucket full uri state run remove former bucket account work port minor added irc channel sure default integration test authentication settings anthony garuccio filtering plural rfc specification conflict behavior migration instance creation default choose backend crash history setting control name remove use secure send json br\u00e9hault ebrehault deployment procedure lot create whole code add python individual permission function case schema bug principal added related fix behavior match ricardo rkleine status image admin bump option upgrade equal previous crash cache raise unknown surya prashanth fix crash header get batch subrequest plugin serve violation fixes id post lockwood shweta protocol version add heroku collection group part url level fixes history plugin deletion multiple usage un error documentation pip version use authentication gola palash remove unicityerror pagination refs useless print timestamp collection cdn deployment deprecated use glaeser tzglaeser generous counter fixes update overview verb fixes nul character history filtered control request fix loss ref fix fixes use compose startup broken git faster see record fix documentation upgraded swhgoon tarek command bug upgraded minimal add load remove field cliquet bug move generic row inserted prevent race yaml server ref deleting collection console log password add version breaking free use update kinto behaviour fixes json merge filtering return package api fix typos uwsgi bug email undo workaround endpoint header alexander ryabkov contact julien crash postgresql redirection behaviour leak quota admin ui subpath regex tejwani sunakshitejwani github authentication fixes strip flush enpoint bug resource giannelos api anything authentication fix number storage english version hello endpoint backend integrity fix etag api json define id sent commit list postgresql revalidate cache configuration file method add findout configuration body patch available internal fixes etag statsd jsonpatch name logging broken version itaisteinherz jelmer list posssible run functional default host proposition update alt documentation configuration error eg refactor new utility jadwani christophe docker compose patch format fixes fixes protocol allow warn method error response backend remote postgresql storage nginx fixes ref upgrade authentication policy dufresnebrady castro fix error track heroku deploy settings api kinto authentication rework documentation restart server cache backend plain body field unknown warn level email example plug custom redirection fixes setting limit page add handle plugin ref prevent control client version title command create eric le fixes update julien bouquillon compose configuration collection kinto channel number number configuration setting mail peter serve fixes docs use settings collection required fixes version schemaless cliquet backend json patch uri kind uuid bucket deletion storage filtering compliance instance process run cache control prefixed userid collection update message mention collection json memory postgresql configuration example added ability added method logging startup structlog add http writable object delete endoint use internal added new mention restrict schema memory suresh vitor black remove documentation authentication see account read endpoint check remove redundant version schema initialization storage suitable use install cliquet additional information add command command added fix postgresql upgraded configure deleted record allow filtering fixes require api protocol specification meant backend settings kinto openid certain service synchronisation shalenyi supamaxy use postgresql flush endpoint postgresql database title add cliquet breaking page enabled configuration fixes command postgresql default console kinto value urls nginx plugin kinto root view development tdd upgrade internal force postgresql add mini kinto presentation postgresql clause move postgresql disabled default consistent postgresql assert fixes version fixes empty body development add fix listener schemaless storage etag header sofia utsch response first regex pyramid default configuration license docs c locale querystring wrong query webob simplejson version upgrade plugin upgraded compose file api modify workaround broken timestamp fixes code event url hello realsumit sumitsarinofficial fix dependency migrate schema json response sahil dua support option readme add server code hack kinto resource bug migration operation lothiraldan brady add account added plugin george smith added load subprocess see ofuscation prefix filtered sorted cache server fix ownership fixes policy readable fix tell protocol message config add pip order grouping user id migration storage serve kinto generator tutorial crash cloudstorage require coverage taylor zane json schemas object type cloud provider optimistic sense request fixes complete revamp refs fix run migrate account account pagination upgraded hard dependency necessary ref michael charlton available fixes cliquet master base huge yann klis heartbeat transaction remove fake rhubscher ricardo comparison matrix assertequal fixes statsd authentication unicode unknown collection fix api implementation service force host schemas timestamps taus taylor columns modified special gabisurita branch dev unknown field added endpoint filtering empty list view production release api build timestamps parent upgraded fixes body fixes specify port uuid querystring surita gabsurita modification fixes ini forbid group id update conflict fix cache crash redirection request add present giannelos johngiannelos magopian add statsd unparseable fix concurrent uwsgi add pagination max recreating record command order kinto command david larlet kaur masataka compose add empty collection kinto alt rollback likely see new require cliquet crash field bucket operational contact stephen fixes log redis backend mathieu agopian fix memory use run fix heartbeat ref move prompt cache account validation faq mapping hello parse server avoid add custom configure settings id column search character see added documentation require chainz adam output server add bhasin conlini wiki fixes crash authorization example custom handle integer see bug jeff schobelock fix collection disabled many johngiannelos joshua adam aditya json documentation specification error env variable behavior fixes joelmarty john rektide r\u00e9my marty joelmarty url fix new plugin bad last potential initialization specify json subjective ligthweight br boris added verbosity lot efficient default route track execution fixes delete takeuchi mathieu fixes collection python upgraded remove json support postgresql ethan ethan upgrade protocol dockerfile tutorial allow inherited statsd backend thing feature method return alter sunakshi tejwani view counter bucket ref add invitation deleting bucket ini python enguerran add flaw password instance breaking reuse deletion collation fixes magopian bug conflict default write object klis jeff fixes multiple prefix bug bucket collection refactor documentation glossary add timestamp retrieval colson enguerran channel docs object instad speed query upgraded cornice startup old slash bug option redis see breaking blackify whole handle unknown limit maximum openid settings statsd initialization option specify value proposition miho ayush vitor falcao installed old documentation new class enabled locale need fixes return support added object deleted code base added experimental package internal logging info fix removal session duration authentication default portion time module name output test protocol record return error move application enabled postgresql oak sofia template added add personal durability added migrate json upsert postgresql support see rhel installation update dockerfile fixes loosen configure postgresql need head custom code simulate status option documentation mention filter operator configuration default add tell unknown permission added permission backend selection use env table docs different python remove id uuid backend transaction event listener behaviour unsupported utility bug method check get count fix migration flag run attribute deprecated postgresql value implicit creation validating json button documentation empty response tutorial list full range querystring parameter crash permission fixes access perigk upgrade remove firefox plugin avoid typo error kinto bucket plugin folder dressler tiberiu redis implementation request version directory fixes maximum duration prevent client itai steinherz lemoine ethan view upgraded added task variable fixes command docs add kinto alexis metaireau allow create address bug view upgraded newrelic huge refactor value url count collection log empty qui\u00e9deville rodolphe version kinto table overview ujson storage task pr old pip upgrade kinto fix docker fix typo endpoint documentation json object rolledback fix ref fixes validation additional martin lockwood schema instance doplumi folder login experience button install tutorial setup emamurho ugherughe run repair control maximum prevent webpack prashantsurya swhgoon header name search protocol info link permission endpoint backend document standard library execution time non string python add class deprecated alt coverage modify password bucket readable migration permission kulshekhar kabra null backend default breaks migration uri fix collection fixes hyperlink overview first parameter add makefile backend type guess version enpoint environment url response added batched schema fixes documentation fix object fixes bug batch smith greg endoint list model instance postgresql regard sure prefixed session timezone endpoint type hoang talk bucket default server flush update faq operator handle plugin prevent integrityerror fixes default operator configuration bug empty payload emamurho enguerran filter filter endpoint information cliquet upgraded generator rodriguez stanis\u0142aw keyword eg empty json travisci bug flush bug endpoint plugin access control query use bug fixes response server update internal remove email postgresql necessary consistency safe pip command collection id pagination fixes postgresql helper postgresql schema oron gola column docs bug unresolved use separator useful sure tutorial kinto minimalist ability delete fixes server root url output kinto startup ref memcache cache client cache stephen donner logging settings steinherz itaisteinherz remove useless fixes upgraded heron rossi validate account python logging clouser wclouser specs bug bucket unrecognized backslash arbitrary error header insert update bucket upgraded dockerfile new add public zane glaeser command start makefile documentation utsch sumit segmentation fault redis default crash resource postgresql backend validation fixes bad request collection specify enabled fix delete account stanis\u0142aw wasiuty\u0144ski contain invalid andy mckay init fixes roessner perigk fix behaviour detect optional aditya bhasin documentation link production uwsgi addition unavailability tutorial remove add capability openid connect method protocol case backenderror backend schema sure tombstone deprecated replaced fixes related account plugin unicode fix permission collection delete plural timestamps collection fix validate default add wasiuty\u0144ski stephen travis update monitor time added get gabsurita george part api module ini support filtering integer regression fixes handle operator class file package collection schema fixes several python support file request improved documentation connect limit kinto account garuccio aymeric backend add template new user permission default pool fresh timestamp extra information account authentication add add backend refactor html page create account new batch route policy name explicit message logger unicode json schema introduce filter crash memory fixes bug bug memory behaviour bug upsert query brady dufresne url format polish default api version prefix upgraded code ref villain choclatefr max fetch fixes batch wiki ref fix race separator cache settings prefix internal class database storage sumit sarin correct http crash handle class method aditya query deleting fixes prevent domain kinto plugin target string internal repair damage listener tutorial ploeg jelmer text plain api filtering run simulation range json commit database python travisci mode client fixes added pypy test message server present setting master branch querystring new sarin sumitsarinofficial python plugin git revision allow migration code configuration pyramid internal jsonpatch sqlalchemy protocol support number filter page fix maximum number merge internal jelmer jo\u00ebl allow record minor transactoin commit bird julien policy remove bouquillon contact fix group jsonschema length fit invalid character backend filtering create empty thomas dressler pr template docs fixes error statsd contain wild docs add simulate migration fit postgresql run order readme fixes query check fixes quick production add openapi spec storage backend selection add empty permission \u00e9tienne eugene version redirection wrong see replaced insecure fix module julien lebunetel bind error fix support mansimar kaur resource ref authentication kinto collation speed successful track default deprecated year dynamic c collation mathieu maxime password protocol storage consistent specify filtered fixes change logging configuration configure kinto post admin method cache ci migrate minimal postgresql tox installed new feature fix command non prefixed filtering unknown anh alexander kulak fil use c request processing plugin postgresql faq simplify multiauth issue schema validation post create column postgresql view added backend list number fix naming root jelmer van account settings field information donner stephen return bad fix version event sent enabled return endpoint fixes code block raise error add openid response history postgresql fix backend deleting place plugin token generation fix principal uwsgi bind retrieval user fix creation github upgrade redis see piedrahita fpiedrah validation unknown breaks pagination use yaml policy object fixes remove commit fix improved use fresh elelay \u00e9ric fixes document protocol add badge readme freenode kinto file fixes add attribute settings protocol subscriber execution virtualenv makefile token remove comma fixes docs internal state string kinto init permission list add scalingo channel change custom id memory storage event use account fixes schema operational timestamps postgresql server fixes paragraph docs van der concurrency control option script bound cycle prefix statsd see additional value postgresql option request divisible string sure command wclouser yann get empty fixes ref documentation postgresql control docs remove victor zhuang case integrityerror fix storage dua sebastian memory new method endpoint statsd settings postgresql session improved code view new greeshma greeshmabalabadra merge cliquet gragnic cgragnic phrawzty david backend columns crash type storage class deprecated favor expect ref log batch lot aymeric faivre dependency postgresql fixes move resource fixes personal bucket release new list statsd faivre miho listener part default kinto patch internal docs wiki partial document run simplify experience add flag removal timestamps ui see section configuration check present remove hard dependency kinto aiman parvaiz container image replaced non storage service invalid unicode field internal endpoint internal admin bundle kinto configuration initial version rodolphe sahil logging module kinto option schema crash response public header initial move default attribute empty slow internal cornice schemas restart pagination tiberiu ichim fixes tutorial english typo value equal create configuration parameter subcommand added setting test fixes fix url pagination delete fix toctou fix concurrency last modified setting expect filtering docs documentation merge command deployment remove dependency api batch change postgresql statsd view production changelog agopian mathieu test run mark old presentation article fixes control api specification fixes deleting fixes filtering environment variable sharma balthazar cliquet add aggarwal maksym add bucket default duration use insert event server bump timestamps new custom ability configure change meant required fix exception request empty bertsch frank postgresql add fil foobarquaxx auth enabled security flaw frank bertsch id generator null string work bug fixes raise replaced fixes kinto version policy remove broken see default illegal principal replaced generic fix kinto fixes run fixes list synchronisation docs view resource resource disabled field script bug object whole batch simulation load postgresql production server enabled kulshekhar lavish ttl ref documentation change custom config output message added use development postgresql ryabkov alexryabkov marmax michael table fixes verification bug plural endpoint docs architecture cornice protocol upgrade plugin uuids fixes documentation principal backend implementation add explicit bucket example config overview update parameter collection glossary docs regenerate new backend cliquet endpoint history ligthweight minimalist image alt history fixes sangam vamsisangam type move connect support add deletion permission schema crash fix setting added request subrequest refactor way past end empty list standard python write load guess wrong notion unique uuid validation gabisurita bug alexryabkov alexis querystring force end list mathieu mathieu unparseable metric create method crash invalid tzglaeser thomas unavailable tox cliquet configuration enabled default issue new github tutorial execution added broken plugin method backend bucket user action command python package unprefixed see protocol id prefix deleted fixes table fix tutorial internal instance fixes heartbeat test behaviour cloudstorage view add timestamps deleting constraint violation implementation fix endpoint list fix statsd operation add invite skip python settings documentation documentation default likely database reversed transaction troubleshoot psql changelog document deprecated internal providing last delete history crlf character custom statsd past delete documentation add", "pypi_keywords_clean": "web sync json storage services"}, "/rexlex": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation expression", "pypi_keywords_clean": ""}, "nickmaccarthy/python-datemath": {"git_readme_keywords": "handle datetime module similar php arrow method php function inclusive background php second datetime object expression logic support coverage return arrow happy compatiable elasticsearch applicable format specify default check install default datemath relative format elasticsearch datemath return different timezone example follow python interpolation similar rounddown functionality parser compatiable format arrow module datetime python documentation string applicable timestamp argument timezone something timezone release various anchor documentation elasticsearch epoch timestamp expression ceiling object section coverage python function arrow import module arithmetic datemath parser python datetime", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "date math datemath elaticsearch solr"}, "ethereum/rlp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unstable implementation recursive specify version switch current version documentation package unstable version version current package release specification standard version format bumpversion version version standard documentation recursive length", "pypi_keywords_clean": "rlp ethereum"}, "jsocol/django-jsonview": {"git_readme_keywords": "healthy collection first serializable argument example specify decorator serializable object default object second return content return object output content validate django response status custom header return different rollback anything response fallback package installation appropriate content stdlib module possible class example response correct status ujson return correct decorator argument check exception message exception middleware install django standard specify simple decorator change appropriate error request response standby stdlib normal coverage exception application response middleware cbvs inherit normal django second integer option default alternative additional keyword response appropriate return respond custom atomic option encoder error message django support object cbvs import decorator dictionary header return object status welcome installation install distinct status integer status object subclass section method extra inherit jsonview unchanged module support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "healthy collection first serializable argument example specify decorator serializable object default object second return content return object output content validate django response status custom header return different rollback anything response fallback package installation appropriate content stdlib module possible class example response correct status ujson return correct decorator argument check exception message exception middleware install django standard specify simple decorator change appropriate error request response standby stdlib normal coverage exception application response middleware cbvs inherit normal django second integer option default alternative additional keyword response appropriate return respond custom atomic option encoder error message django support object cbvs import decorator dictionary header return object status welcome installation install distinct status integer status object subclass section method extra inherit jsonview unchanged module support", "pypi_keywords_clean": ""}, "userapp-io/userapp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "client library", "pypi_keywords_clean": "userapp user management api user authentication oauth"}, "cmbant/getdist": {"git_readme_keywords": "homepage description planck simple getdist package optimal bandwidth format getdist getdist python discard fraction library folder graphical covariance correlation example getdist parameter covariance cosmomc installation matplotlib scipy cobaya getdist getdist script getdist getdist method boundary algorithm parameter option parameter number sample program cosmomc cobaya source scipy pyside install package linux cosmomc parameter xxx yyy default pyside optional range getdist dependency mcmc sample derived dvipng example installation number particular upper click package general likelihood contour correction convergence example compare format general first fraction function fraction x python matplotlib optional parameter description getdist standard getdist determine cobaya installation label likelihood bandwidth choice getdist module lewis homepage customize specify custom triangle sample analysis correlation length author antony algorithms section sample convergence python package compare x useful mcmc select installation cobaya numpy various simple check xxx install dvipng available memory first install getdist install binary directory number discard full cosmomc getdist mcmc analysis useful different density estimation format weight interface antony lewis", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "homepage description planck simple getdist package optimal bandwidth format getdist getdist python discard fraction library folder graphical covariance correlation example getdist parameter covariance cosmomc installation matplotlib scipy cobaya getdist getdist script getdist getdist method boundary algorithm parameter option parameter number sample program cosmomc cobaya source scipy pyside install package linux cosmomc parameter xxx yyy default pyside optional getdist dependency mcmc sample derived dvipng example installation number particular upper click package general likelihood contour correction convergence example compare format general first fraction function fraction x python matplotlib optional parameter description getdist standard getdist determine cobaya installation label likelihood bandwidth choice getdist module lewis homepage customize specify custom triangle sample analysis correlation length author antony help available algorithms section sample convergence python package compare x useful mcmc select installation cobaya numpy various simple check xxx install dvipng memory first install getdist install binary directory number discard full cosmomc getdist mcmc analysis useful different density estimation format weight interface antony lewis", "pypi_keywords_clean": "mcmc kde sample density estimation plot"}, "andycasey/moogsilent": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spectrum synthesis chemical composition determination chemical analysis spectrum", "pypi_keywords_clean": "stellar spectroscopy astronomy astrophysics"}, "/ipapython": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "freeipa python", "pypi_keywords_clean": ""}, "divio/djangocms-file": {"git_readme_keywords": "receive feedback project minimal translate configuration documentation override project additional available request template grateful maintain package additional template copying directory compatible installation django", "git_description_clean": "django cms file set plugins django cms allow add files site either choose single file entire folder", "git_keywords_clean": "addon cms python django", "pypi_description_keywords": "receive feedback project minimal translate configuration documentation override project additional available request template grateful maintain package additional template copying directory compatible installation django", "pypi_keywords_clean": ""}, "/braveapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "guinslym/pyexifinfo": {"git_readme_keywords": "package pyexifinfo harvey exiftool r\u00e9f\u00e9rence filetype exiftool exiftool french exiftool extract metadata library installation metadata information picture", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package pyexifinfo imageheight filename imagewidth imageheight r\u00e9f\u00e9rence pixelsperunitx imageheight mimetype fileaccessdate exiftool exiftool extract directory fileinodechangdate filetype mimetype library imagewidth filetype pixelsperunity pixelsperunitx bitdepth install pyexifinfo representation mimetype filename filename filename filename compression filetype filename harvey exiftool compression pixelsperunity pyexifinfo filetype exiftoolversion fileaccessdate filemodifydate installation install ourcefile colortype whithin", "pypi_keywords_clean": "exiftool reader stats metadata image linux"}, "douban/pymesos": {"git_readme_keywords": "implementation scheduler executor migrate original unnecessary dependence pymesos executor operator", "git_description_clean": "pure python implementation mesos scheduler executor", "git_keywords_clean": "python mesos", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mikusjelly/cigam": {"git_readme_keywords": "cigam determine magic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "file type file magic"}, "/django-suit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scrapinghub/scrapyrt": {"git_readme_keywords": "available support question documentation documentation schedule scrapyrt scrapy commercial support project directory project scrapy middleware pipelines scrapy realtime scrapy project available question version development release github documentation available", "git_description_clean": "scrapy realtime", "git_keywords_clean": "", "pypi_description_keywords": "available support project question documentation documentation schedule commercial support project directory scrapyrt middleware pipelines documentation available format documentation available question github realtime", "pypi_keywords_clean": ""}, "mcspring/xml2dict": {"git_readme_keywords": "content snwilhelm attention support twitter python library report syntax custom version slinkp example license version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "content snwilhelm attention support twitter python library report syntax custom version slinkp example license version", "pypi_keywords_clean": ""}, "marinkaz/nimfa": {"git_readme_keywords": "important software expression official documentation tracker complete initialization algorithm algorithm medulloblastoma directory factorization release download zitnik nonnegative installation install package license project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "important software expression official documentation tracker complete initialization algorithm algorithm medulloblastoma directory factorization release download zitnik nonnegative installation install package license project", "pypi_keywords_clean": "matrix factorization"}, "AYLIEN/aylien-apiclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aylienapiclient library development yourapplicationid yourapplicationkey installation install additional documentation documentation example football library", "pypi_keywords_clean": "aylien text api client"}, "opps/opps": {"git_readme_keywords": "bitdeli limitation copyright documentation sponsor platform publishing fitness particular merchantability fitness subject software limited express framework substantial purpose noninfringement management magazine liability contract permission distribute sublicense warranty restriction publish distribute particular purpose connection software software software", "git_description_clean": "cms magazines newspappers websites portals", "git_keywords_clean": "", "pypi_description_keywords": "bitdeli limitation copyright documentation sponsor platform publishing fitness particular merchantability fitness subject software limited express framework substantial purpose noninfringement management magazine liability contract permission distribute sublicense warranty restriction publish distribute particular purpose connection software software software", "pypi_keywords_clean": "opps cms django apps magazines websites"}, "/python-k8sclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python location license documentation codegen different command generate package update overview checkout release documentation source generate software apache apache license checkout build master branch", "pypi_keywords_clean": ""}, "thombashi/appconfigpy": {"git_readme_keywords": "summary python python library install library application appconfigpy package version python optional ubuntu logbook package application configuration", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "summary python python library install library application appconfigpy package version python optional ubuntu logbook package application configuration", "pypi_keywords_clean": "configuration"}, "matthiask/survey": {"git_readme_keywords": "app assessment collection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "app assessment collection", "pypi_keywords_clean": ""}, "timstaley/voevent-parse": {"git_readme_keywords": "introduction package lightweight library voevent documentation status build status started release publication build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "brechtm/rinoh-typeface-texgyrepagella": {"git_readme_keywords": "replacement palatino palladio typeface rinohtype", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "replacement palatino palladio typeface rinohtype", "pypi_keywords_clean": "opentype font"}, "/py2exe": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modulefinder standalone destdir destination several related python directory relative pathname libname relative library python useful related bytecode summary process svnmodule implicit namespace python importlib openssl support service svcmodule extract extension compiled detailed archive utility addition implement modulefinder library libname support library destdir separate python archive positional modname exclude documentation modname modname executable libname library available several support implicit output compress modname optional version information standard installation directory libname svnmodule service compatible python process customize application verbose output specify directory temporary executable subdirectory exclude package compatibility python destination directory pathname python unpacked builder pycparser openssl console switch command effort exclude modname special", "pypi_keywords_clean": ""}, "/tricircleclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tricircle command software documentation python api command interface tricircle api tricircleclient python openstack tricircle", "pypi_keywords_clean": ""}, "Enteee/pdml2flow": {"git_readme_keywords": "ethernet destination destination address calculate aggregate arrival difficult shipped ethernet documentation accessible installation coverage aggregation helpful environment description descripton hardware wireshark language interface fluentflow network traffic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status status project wireshark process wireshark plugin interface python plugin aggregation helpful output difficult accessible python environment network traffic installation coverage example", "pypi_keywords_clean": "wireshark pdml flow aggregation plugins"}, "sid0/ntfsutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "philippe ombredanne closehandle getfileinformationbyhandle pombredanne interact ombredanne pombredanne information directory mozilla foundation pederson getdirinfo detailed documentation agarwal simplified manipulate", "pypi_keywords_clean": "windows ntfs hardlink junction"}, "/timezones": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license timezone selection information copyright library", "pypi_keywords_clean": "timezones timezone pytz"}, "/django-app-plugins": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "instance visibility template extension reorder multiple profile", "pypi_keywords_clean": "django reusable"}, "emre/unicode-tr": {"git_readme_keywords": "language directory slugify function problem whitespace capitalize installation deasciify", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "josiahcarlson/crontab": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default copyright josiah sample individual crontab schedule letter license version violate support w mandatory example mangled josiah carlson optional number necessary sample individual crontab version version description package method convenient special", "pypi_keywords_clean": ""}, "jtauber/django-friends": {"git_readme_keywords": "note", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyszn": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance software express support standard documentation specific language enterprise development notation standard copyright peralta documentation changelog applicable", "pypi_keywords_clean": "pyszn"}, "emre/stormssh": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Fantomas42/django-app-namespace-template-loader": {"git_readme_keywords": "package extend override version package present inheritance application previous useful several project django application python default django favorite package override template namespace template specify application template specific package manager example multiple installation coverage namespace specify application namespace django python version namespace branch manager example different conjunction inheritance override version section specific application install favorite template extend", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package extend override version package present inheritance application previous useful several project django application python default django favorite package override template namespace template specify application template specific package manager example multiple installation coverage namespace specify application namespace django python version namespace branch manager example different conjunction inheritance override version section specific application install favorite template extend", "pypi_keywords_clean": "django template loader"}, "/microdotphat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute spectrum analyser library directory decimal bugfix living primary development repository library perfect install documentation support tweaks initial symbol cleared version display reference environment japanese unofficial raspbian initial release rotation library install vertical message display", "pypi_keywords_clean": "raspberry pi iot displays lcd led"}, "bfirsh/django-shorturls": {"git_readme_keywords": "single character conversion crockford domain redirect model support translate available urlconf python firshman django willison python jacob built domain defined template method defined custom model class converter control welcome redirect model instance reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "single character simon willison conversion crockford domain redirect short single model support available translate short django jacob built domain defined template method defined custom model class converter control short redirect model instance reading", "pypi_keywords_clean": ""}, "jmoiron/micromongo": {"git_readme_keywords": "multiple mongodb required required micromongo connection perform validation collection declarative initialized default invalid micromongo micromongo pymongo shortcut standard instance argument checking collection database particular collection additional collection database present micromongo accessible database present pymongo provide framework agnostic idioms obscure unpacking callable something document attribute current micromongo various global connection obscure pymongo function dictionary default initialized simplify welcome application framework implicit encouraged explicit transform appropriate pymongo mongodb connection connection trivial convenient simplification", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple mongodb required required micromongo connection perform validation collection declarative initialized default invalid micromongo micromongo pymongo shortcut standard instance argument checking collection database particular collection additional collection database present micromongo accessible database present pymongo provide framework agnostic idioms obscure unpacking callable something document attribute current micromongo various global connection obscure pymongo function dictionary default initialized simplify welcome application framework implicit encouraged explicit transform appropriate pymongo mongodb connection connection trivial convenient simplification", "pypi_keywords_clean": "mongodb orm"}, "anentropic/django-exclusivebooleanfield": {"git_readme_keywords": "project field usage boolean django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "field boolean github usage usage docs", "pypi_keywords_clean": ""}, "paulgb/subsample": {"git_readme_keywords": "samples average algorithm comparison advance algorithm probability way multiple number header standard sampling method accomplish sampling filename avoid proportional amount subsample computer random source source random sampling record stream header output random filename number dataset approximate return script example sampling source fractional example proportion stateless unchanged approximate flag randomness inherent random avoid random random source preserve header command sampling argument output redirection limited checking method sampling checking output installation example interpret optional number stateless algorithm future imply percentage compatible compatible sampling stream algorithm minimal complexity number sampling reservoir python environment sampling useful csv reservoir approximate compatible fractional consistency sampling default approximate sampling population inherent random sampling fraction percent sampling algorithms regression filename eg algorithms algorithm example approximate maximum sampling approximate second gnu default algorithm require seekable terminal flag preserve output approximate algorithms fraction stream unknown installed python algorithms require directory installed column complexity invocation approximate flag accomplish redirection reservoir sampling", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "samples average algorithm comparison advance algorithm probability way multiple number header standard sampling method accomplish sampling filename avoid proportional amount subsample computer random source source random sampling record stream header output random filename number dataset approximate return script example sampling source fractional example proportion stateless unchanged approximate flag randomness inherent random avoid random random source preserve header command sampling argument output redirection limited checking method sampling checking output installation example interpret optional number stateless algorithm future imply percentage compatible compatible sampling stream algorithm minimal complexity number sampling reservoir python environment sampling useful csv reservoir approximate compatible fractional consistency sampling default approximate sampling population inherent random sampling fraction percent sampling algorithms regression filename eg algorithms algorithm example approximate maximum sampling approximate second gnu default algorithm require seekable terminal flag preserve output approximate algorithms fraction stream unknown installed python algorithms require directory installed column complexity invocation approximate flag accomplish redirection reservoir sampling", "pypi_keywords_clean": ""}, "bluedazzle/django-simple-serializer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "serializer \u5047\u8bbe\u6211\u4eec\u6709\u4ee5\u4e0bdjango django model django \u662f\u4e00\u4e2a\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u6784\u5efa \u63d0\u4f9b\u5e8f\u5217\u5668 function \u4f7f\u7528django simple \u4e3a\u4ec0\u4e48\u8981\u7528 django serializer \u5bf9\u4e8e\u5e8f\u5217\u5316 simple serializer \u6682\u65f6\u53bb\u9664 django simple \u5c06list\u6216dict\u4e2d\u7684\u7279\u6b8a\u5bf9\u8c61\u5e8f\u5217\u5316\u540e\u8f93\u51fa\u4e3alist\u6216dict django \u6570\u636e\u6216\u8005 manytomanyfield \u4f9d\u65e7\u6709\u6548 model object false serializer english false manytomanyfield tuple \u5e8f\u5217\u5316\u4e3a \u4e3a\u4ec0\u4e48\u8981\u7528 strikeout object datetime serializer \u662f\u4e00\u4e2a\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5c06 function serializer \u8f6c\u6362\u6570\u636e\u4e3a timestamp \u5bf9\u4e8e\u5355\u4e2amodel\u5b9e\u4f8b \u4f60\u53ef\u4ee5\u8bbe\u7f6e\u53c2\u6570 datetime timestamp foreign foreignkeyfield \u5e8f\u5217\u5668\u4f1a\u8fd4\u56de\u4e00\u4e2a \u5c5e\u6027\u6570\u636e \u662f\u4e00\u4e2a\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5c06 django \u6570\u636e\u6216\u8005 python \u7684\u5f00\u53d1\u65b9\u5f0f django \u4f60\u53ef\u4ee5\u8bbe\u7f6e\u53c2\u6570 \u6765\u51b3\u5b9a\u5e8f\u5217\u5668\u8fd4\u56de \u5bf9\u4e8e\u5e8f\u5217\u5316 django \u5047\u8bbe\u6211\u4eec\u6709\u4ee5\u4e0bdjango \u4f7f\u7528django manytomanyfield", "pypi_keywords_clean": "django serializer"}, "vinsci/geohash": {"git_readme_keywords": "package geohash coordinate decode galileo longitude latitude geohash available exact precision geohash download geohash coordinate geohash gustavo niemeyer useful import geohash margin latitude github license margin latitude longitude fitness particular history geohash available download niemeyer algorithm geohash python version geohash merchantability fitness warranty merchantability margin longitude license copyright software foundation arbitrary precision number example import download github norrgard copyright redistribute modify general public particular article implementation public license geohash geohash software redistribute version license wikipedia article warranty particular purpose exact coordinate norrgard geohash geohash exact", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module longitude", "pypi_keywords_clean": "geohash gis latitude longitude encode decode galileo gps coordinates geotagging"}, "ccollins/milkman": {"git_readme_keywords": "milkman development install generation particular django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "determinate furthermore milkman documentation maintain particular replacement django example", "pypi_keywords_clean": "django testing mock stub"}, "coleifer/scout": {"git_readme_keywords": "flask framework authentication optional comprehensive extension restful multiple readthedocs installation content arbitrary project documentation information lightweight restful present documentation install stemmer elasticsearch version resource utilization application extension addition metadata multiple arbitrary branch arbitrary metadata perform complex dockerfile installation document database database restful complex algorithms utilization minimal dockerhub optional lightweight information project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application perform complex framework documentation information algorithms utilization minimal documentation metadata multiple database install authentication optional optional lightweight arbitrary metadata extension comprehensive multiple readthedocs installation resource utilization", "pypi_keywords_clean": ""}, "dizballanze/django-compressor-autoprefixer": {"git_readme_keywords": "noninfringement limitation copyright merchantability documentation subject installation variable default software express substantial autoprefixer shikanov permission particular liability contract distribute sublicense warranty environment variable restriction connection software software software", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation copyright merchantability documentation subject installation variable default software express substantial autoprefixer shikanov permission particular liability contract distribute sublicense warranty environment variable restriction connection software software software", "pypi_keywords_clean": ""}, "meren/illumina-utils": {"git_readme_keywords": "value ratio copy codebase check merged available system huge setup virtual parameter remove operation good header something descriptive convention output want merging strategy next number region quick ends readability al briefly instance user merged poorly purpose section merged sequence create config present overlapped defline fastq touch comma failed quality report intuitive way setup program remove r script preperation merged general section casava version create python generate simple place mismatch example header way eliminate virtual environment way install development version mismatch overlapped bokulich section merging sequence mismatch retain want follow eliminate region instance ambiguous region example short levenshtein distance value value good practice quality example png install pip length overlap critical previous example merging program particular group minimum value acceptable value readability program system example sample merging partial capital error use generate python virtual example complete directory fastq prefix next field describe fastq section useful section section generate config conservative protect call config example input create fasta perform various section hand short quality project letter merged analysis region type press due failed please use script output stringent approach want activate use regular mandatory section field forth directory visualization example default merging installation run final control system run activate library preperation program run format general parameter intuitive first create nt default first half certain number original defline directory codebase parameter default example config al quality section optional next increased snippet merged parameter merging value p require available next section codebase require capital letter analysis example use parameter merge fasta al example decide use partial complete demultiplex due value raw fastq section full field flag use way script order slight please hesitate perform config appropriate command cpickle object complete overlap send demultiplex run overlap merged appropriate run information example output directory raw illumina codebase first input first follow development merged merging operation overlap analysis certain amount disagreement codebase happy entry place please new workflow different number order demultiplex flag flag sample instance run command press tab number next couple enforced number command generate config library bunch region number start process region snippet breakdown codebase setup visualization quality region use failed merged user decide directory output length overlapped full path path directory overlap nt output operation minimum default quality process example default value gzipped cpickle overlapped region end merged section mandatory important information second version create overlap p operation perform practice check setup want minimum acceptable run previous check final merged tab key generate visualization workflow complete output script fastq output available codebase quality example output article codebase install standard mandatory create copy object python original fastq parameter merged successful merge ratio default output example default minimum control enforced p value levenshtein module ratio number use downstream input directory use merged index analysis workflow small library hand script information merging sample merge require config failed merge standard installation number mismatch output minoche poorly elimination citation use program example run run option extra fastq", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/repoze-tm2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "zodb upgrade original exception transaction package filter tm environment check response hook header zopelib header limited compatibility transaction manager check middleware synchronization explicit support transaction fork alberto valverde available transaction management sphinx version license copyright application dependency key commit depend zopelib function isactive release zodb release environment support python pipeline copyright change various hook commit manager wrap entirety zodb single argument transaction middleware zodb distribution initial release transaction module zodb transaction fork package config requirement zodb myfunction incompatible stock upgrade necessary committed initial travis middleware generator dependency package section coverage restify depend transaction transaction object distribution zodb zodb changelog transaction committed status middleware headerlist possibility documentation status", "pypi_keywords_clean": "web application server wsgi zope repoze"}, "BonsaiAI/bonsai-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "schemas identifier simulator necessary simulator generator library integrating installation subclass", "pypi_keywords_clean": "bonsai"}, "AfterShip/aftership": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download message endpoint variable useful module module convention object object regular datetime check single positional quick output import aftership installation object import exception python keyword timestamp conversion datetime directory provided python python object object constructor constructor python maximum number construct elegant access appropriate request section aftership module source method python positional archive unzip example python separated represent constant multiple parallel", "pypi_keywords_clean": "aftership api binding tracking track post mail airmail logistics shipping"}, "Azure/azure-mgmt-consumption": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package feature future budget service management provide feedback client library release history generation management feedback encounter meterdetails operation python microsoft usagedetail glance class azureenum resource manager changelog release algorithm response default behavior operation general format syntax reservationid reservation optional section project version billing generator important mixin class consumption client format sdk python bundle package syntax positional initial running operation signature parameter default initial release python python parameter microsoft response initial general breaking external breaking reservation behavior unrecognized execute callback marketplace library complete stable support breaking", "pypi_keywords_clean": ""}, "coldfix/pydicti": {"git_readme_keywords": "careful hocevar comparison operator applicable original license version argument reflexitivity python allow several pydicti installation coverage installation default license copyright copyright thomas python software identical status redistribute modify inherit public license transitivity comparison function thomas gl\u00e4\u00dfle python python equality comparison warranty program insensitive dictionary access function convenient", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parameter qualname cleanup support default support fallback unicodedecodeerror execute representation pydicti installation version coverage dependency optional extensive", "pypi_keywords_clean": ""}, "xmartlabs/benderthon": {"git_readme_keywords": "package benderthon install custom installation minimal checkpoint original install tensorflow separate license generate minimal tensorflow benderthon installation utility network example command graphs processing module example convolutional tensorflow install minimal protobuf install default utility development benderthon pypandoc tensorflow development utility", "git_description_clean": "set utilities work easier bender", "git_keywords_clean": "bender tensorflow caffe", "pypi_description_keywords": "package benderthon install custom installation minimal prefix protobuf version original separate license network example installation utility command generate graphs convolutional tensorflow install minimal protobuf install default utility development benderthon tensorflow module development utility", "pypi_keywords_clean": "bender machine learning artificial intelligence freeze model utility utilities tensorflow"}, "ExoticObjects/django-better-filter-widget": {"git_readme_keywords": "limitation betterfilterwidget copyright project documentation fitness particular merchantability fitness subject installation software limited express substantial purpose noninfringement django horizontal liability contract particular purpose permission distribute sublicense warranty restriction publish distribute desktop replacement horizontal vertical connection software software software", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "limitation betterfilterwidget copyright project documentation fitness particular merchantability fitness subject installation software limited express substantial purpose noninfringement django horizontal liability contract particular purpose permission distribute sublicense warranty restriction publish distribute desktop replacement horizontal vertical connection software software software", "pypi_keywords_clean": ""}, "deeptools/py2bit": {"git_readme_keywords": "python extension basic c quick query information specify access partial compute percentage second number suffix specify nothing output position chromosome useful query python module specify nonexistent lengths perfomance number position first number present nonexistent identical manner chromosome sequence present particular chromosome particular region sequence length nonexistent chromosome memory runtime error github installation number n position method example directory source module access number specify receive lowercase specific region install extension position sequence quick access sequence region specify position similarly consistency dictionary access particular information repeat integer work method default installation install object specific sequence sequence method information particular chromosome nothing specify region", "git_description_clean": "python library accessing files", "git_keywords_clean": "twobit bioinformatics", "pypi_description_keywords": "", "pypi_keywords_clean": "bioinformatics"}, "moisespsena/py-sdag2": {"git_readme_keywords": "project acyclic graph topological sorter python simple graph python graph whith install install detector topological", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python install acyclic detector topological", "pypi_keywords_clean": "utils utilities directed graph digraph topological simple dag"}, "/sphinxmixcrypto": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "security cryptography language cryptography anonymity anonymity platform unknown classifier cryptography classifier license description platform unknown classifier license license classifier stainton audience general", "pypi_keywords_clean": ""}, "tcalmant/javaobj-py3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "object deserializing transformer original python compatibility automatic conversion object instance representation standard standard library unmarshaller object license object python primitive familiar volodymyr object transformer reference object representation original project repository project deserialized python python python library mismatch deserialization interchange unmarshalling module", "pypi_keywords_clean": "python java marshalling serialization"}, "helgi/command": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python license command wrapper output normal command python normal", "pypi_keywords_clean": "subprocess command"}, "bread-and-pepper/django-userena": {"git_readme_keywords": "project application management customizable application activation available documentation installation documentation complete complete documentation", "git_description_clean": "accounts django made beautifully simple", "git_keywords_clean": "", "pypi_description_keywords": "project application management customizable application activation available documentation installation documentation complete complete documentation", "pypi_keywords_clean": ""}, "QuantEcon/sphinxcontrib-jupyter": {"git_readme_keywords": "negligence theory liability default jupyter extension notebooks sphinx extension useful promote extension notebook block limited procurement status summary bellow disclaimer distribution economic modeling implied project copyright holder markdown support sphinx extension configuration install notebook notebooks execution generate available modification fitness particular possibility damage scientific publishing change notebooks notebooks execution notebooks version outside merchantability fitness business interruption example quantitative economic license copyright python dependency redistribution software disclaimer documentation python install context special exemplary environment jupyter configuration jupyter notebooks repository contract dictionary copyright quantecon collection notebooks useful writing example paragraph exemplary consequential executable block different summary sphinx jupyter notebook something different procurement substitute modeling installation permission software feedback limited implied quantecon development dependency notebooks contact license specific indirect incidental particular purpose incidental special directive execute collection documentation status", "git_description_clean": "sphinx extension generating jupyter notebooks", "git_keywords_clean": "", "pypi_description_keywords": "description extension", "pypi_keywords_clean": ""}, "dbrgn/django-mathfilters": {"git_readme_keywords": "package download multiplication division decimal assume support license install example sourcecode installation coverage python version support alternative wontfix division integer django django different django project template replacement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package download multiplication division decimal assume support license install example sourcecode installation coverage python version support alternative wontfix division integer django django different django project template replacement", "pypi_keywords_clean": "django template filters math"}, "althonos/nmrml2isa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python program information overview program running install possible import python import generate backbone study python dictionnary extract extraction detailed investigation import python submodule", "pypi_keywords_clean": "metabolomics"}, "muneeb-ali/basicrpc": {"git_readme_keywords": "example example basicrpc compliant basicrpc example installation function twisted", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rpc client server netstring"}, "klen/muffin-peewee": {"git_readme_keywords": "framework tracker express appreciation migration database additional appreciation project integration project welcome connection klenov license installation application configuration development postcard license", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework tracker express appreciation migration database additional appreciation project integration project welcome connection klenov license installation application configuration development postcard license", "pypi_keywords_clean": "django flask sqlalchemy testing mock stub mongoengine data"}, "jim-easterbrook/gphoto2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "buffer interface debugging system define system look jim program value exception handler camera computer return object license option documentation function string verbose debug library source source directory blanket approach multiple additional copying development visit download debug option thread error usable return show python program mailing similar install exception example command particular error current development function function fitness particular package manager first generate callback function warranty merchantability jim firefly software foundation python interface jim problem appropriate object helpful pydoc help preferred way build python something similar extract change generate python log thread various exception object development version install default error message software redistribute example convenient checking error python problem parameter regenerate scheme install pip interface version c python library function install package failure python persuade swig c output reader mailing writeable buffer pass python archive visit installation python python camera system package directory connect message example variable camera model function camera function signature manner python appropriate version usage python installation normal install downloaded pointer function example installation method expect package suitable python paragraphs show compiler linker interface segfault redistribute modify change new flag appropriate module exception memoryview expose import output parameter python exception return integer version swig repository change function available extra return function jim downloaded archive complete example python command function connect example typical connect camera extra command comprehensive python manager lucky exception error operating system doxygen format something install available python general difficulty version return optional parameter github repository c program integer id message manager install uninstall callback default python camera camera build install error checking function check linker support pythonic possible severity directory python github swig install current example c swig source github downloaded pypi future release standard python option application copy merchantability fitness version program interface definition direct access help function object program memoryview object interface library return python update licence python general public example program protocol command python object gnu general system available accessible python deleting behaviour function public license swig downloaded incomplete withdrawn sequence top installation option python python swig installable copy gnu ready c compiler install varying warranty online documentation protocol python additional function python specific available piggyphoto return error verbosity show documentation problem python python package swig generated folder context function log generated library swig generate particular purpose format documentation build verbose problem general check actual reinstall python python function install first new directory zip value documentation anything success failure archive generate interface return value return sequence directory example single function install python check callback callback c interface expose bytearray similar possible install source documentation c install install several exist python version install python version way persuade swig first interface preferred connect digital detail computer interface withdrawn future python equivalent typical usage camera object support incomplete installation process c source error generated integer error error value convert interface information firefly pydoc different version license install github convenient way object copying useful exception additional error look something new version example python c jim python standard digital camera uninstalled object pass context context", "pypi_keywords_clean": ""}, "mattrobenolt/sourcemap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sourcemap copyright robenolt javascript", "pypi_keywords_clean": ""}, "kakwa/ascii-graph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "copyright license possible utility sourcecode python license author command example sourcecode python result version automaticaly python histogram stuff directory python command histograms result sourcecode different complex python library license description utility command travis installation sourcecode documentation status", "pypi_keywords_clean": ""}, "/sugar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pynest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "password password address password ahrenheit default useful python license command fitness particular information describe optional structure version warranty merchantability version program merchantability fitness license copyright example software foundation reference redistribute modify general public program version version number public license description unofficial particular purpose software redistribute version license warranty temperature trademark program", "pypi_keywords_clean": "nest thermostat pynest api"}, "MongoEngine/mongoengine": {"git_readme_keywords": "mongodb standard instance mongodb mongoengine community pillow convention dateutil installation recommend request experience version installation w\u00f3jcik mongodb version utilize flexible virtual environment supported mongodb pymongo repository mongodb documentation maintainer health mongoengine welcome environment install pymongo version install package documentation available mongoengine pymongo", "git_description_clean": "python working mongodb", "git_keywords_clean": "python mongodb mongo pymongo orm odm", "pypi_description_keywords": "mongodb standard instance mongodb mongoengine community pillow convention dateutil installation recommend request experience w\u00f3jcik mongodb installation utilize flexible virtual environment supported mongodb pymongo repository mongodb documentation maintainer welcome environment install pymongo version install package documentation available mongoengine pymongo", "pypi_keywords_clean": ""}, "/hachoir-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "staticfieldset default charset offset outputstreamerror humandatetime implementation describe python compatibility changelog unchanged readline ipython hachoirerror stdout stderr represent binary useful invalid unicodestdout project hachoir operation unicode charset readline module hachoir representation iteritems argument support guessbytescharset guessstreamcharset outputstream configuration documentation classic seekable streamerror message attribute endian compatible implement initlocale charset attribute profiler function generictimestamp charset conversion version changelog predefined endian number unicode website installation interesting hachoir python information language compatibility message python library integer visible hardcoded c hachoir project installation installation charset charset address iterable optional argument getitem guessbytescharset", "pypi_keywords_clean": ""}, "trendmicro/flask-ini": {"git_readme_keywords": "default extension variable include python likewise integer number flaskini object application context available installation example application rollout format configparser dictionary configure variable object subclass executable python section specfic method", "git_description_clean": "flask extension allow flask configured configparser ini files", "git_keywords_clean": "", "pypi_description_keywords": "allow ini", "pypi_keywords_clean": ""}, "naglis/randua": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "string generator browser possible identification request change invisibleman", "pypi_keywords_clean": "browser useragent"}, "datamade/dedupe-variable-name": {"git_readme_keywords": "variable type", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tiarno/plastex": {"git_readme_keywords": "installation package framework essence documentation complete install command pdflatex example project installation default renderer python package converter github possible utility execution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bundled processing framework docbook generic", "pypi_keywords_clean": "html latex xml"}, "spulec/uncurl": {"git_readme_keywords": "python command example install browser network inspector clipboard useful library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/krpc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation forum forum development", "pypi_keywords_clean": ""}, "ShichaoMa/structure-spider": {"git_readme_keywords": "\u751f\u6210\u81ea\u5b9a\u4e49spider\u53caitem \u67e5\u770b\u4efb\u52a1\u72b6\u6001 \u901a\u8fc7\u7ec4\u5efaitem\u8bf7\u6c42\u6811\u6293\u53d6\u7ed3\u6784\u5316\u6570\u636e usage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "crawl web spider scrapy structure"}, "tschellenbach/django-facebook": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "convert facebook development setup vagrant vagrant django facebook functionality seamless seamless personalization javascript reauthentication vagrant development python django example project django mininum signup personal library registration convert profile updates documentation django application website round additional support django schellenbach status github status django production python compatible regular integrate amsterdam office moment fashiolista landing profile access facebook facebook example facebook stable compliant django version registration django information thierryschellenbach access beauty scalability facebook canvas compatible change", "pypi_keywords_clean": ""}, "matiasb/unidiff": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "encoding parameter information instantiate patchset optional encoding patchedfile iterable encoding unidiff program access interact unified current object patchset object representation current method unicode object argument library respective example", "pypi_keywords_clean": "unified diff parse metadata"}, "/changeless": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default adjacent useful possible queryset changeless fancymodel immutablehash available readability operator generator constructor queueset dictionary representation comparable stateless immutable immutablehash immutablemodel foreign conversion attribute fancyhash fancymodel necessary fancyhash reverse conversion changeless conversion changeless library", "pypi_keywords_clean": ""}, "/macspeechx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyaxon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "registration default python library interchanging history installation quick loading textual useful module repository object notation", "pypi_keywords_clean": "object notation serialization configuration"}, "idlesign/torrentool": {"git_readme_keywords": "package installed command interface modification description encoder torrentool", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package installed command interface modification description encoder torrentool", "pypi_keywords_clean": ""}, "/twitter-common-zookeeper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mirceaulinic/pypluribus": {"git_readme_keywords": "initial configuration configuration difference configuration ssh command documentation release pypluribus configuration number install pypluribus pypluribus communication channel connection library interact method license copyright copyright cloudflare pypluribus available interact pluribus license version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interact pluribus", "pypi_keywords_clean": "pluribus"}, "mcm/relatime": {"git_readme_keywords": "timeparser", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "timeparser", "pypi_keywords_clean": ""}, "ContinuumIO/pycosat": {"git_readme_keywords": "package pycosat picosat isinstance yield possible integer verbosity simple implementation module standard iteration return convert variable elegant efficient python process iterator standard library project integer number integer example unknown solution argument clause making c interface absolute picosat c python implementation boolean import pycosat python clause propagation solution popular solver unspecified efficient python picosat source format p unsatisfiable deployment picosat keyword represent solution solution answer picosat solver popular explain function pycosat x inverse iterable picosat solver dimacs format variable import much much module return implementation implementation several", "git_description_clean": "python bindings picosat sat solver", "git_keywords_clean": "", "pypi_description_keywords": "package pycosat picosat isinstance yield possible integer verbosity simple implementation module standard iteration return convert variable elegant efficient python process iterator standard library project integer number integer example unknown solution argument clause making c interface absolute picosat c python implementation boolean import pycosat python clause propagation solution popular solver unspecified efficient python picosat source format p unsatisfiable deployment picosat keyword represent solution solution answer picosat solver popular explain function pycosat x inverse iterable picosat solver dimacs format variable import much much module return implementation implementation several", "pypi_keywords_clean": ""}, "clinicedc/edc-reports": {"git_readme_keywords": "reportlab", "git_description_clean": "report classes using reportlab", "git_keywords_clean": "", "pypi_description_keywords": "reportlab", "pypi_keywords_clean": "django edc reportlab"}, "/clldmpg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "web pyramid"}, "futurice/secret": {"git_readme_keywords": "versioning syntax interest character version available possible policy configure development environment verbose output argument development amazon default project lifecycle policy environment versioning versioning global configuration encryption project configuration access specific configuration example", "git_description_clean": "managing secrets", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "secret secrets project vault aws amazon cloud"}, "tomekwojcik/envelopes": {"git_readme_keywords": "python sourcecode python python author standard custom smtplib charset status project caution production license tracker github example sourcecode available github feature python unicode project status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python sourcecode python python author standard custom smtplib charset status project caution production license tracker github example sourcecode available github feature python unicode project status", "pypi_keywords_clean": ""}, "jvanasco/metadata-parser": {"git_readme_keywords": "useful hostname support canonical version lxml negligible performance accept argument default method improper canonical handle dublincore pythonoptimize decodeerror exception variety beautifulsoup single metadata domain allow malformed toplevel directory possible uncaught address malformed calculate effective maintainer archive implement canonical situation common malformed metadata document malformed presentation uncaught decodeerror sadness version default behavior functional behavior submit installation metadata payload example content version future number install installation public internet attribute accept opengraph behavior package allow payload method kwarg default opengraph module upgrade represent payload network custom specify strategy possible default alternate improper theoretical segfaults absolute library version website version breaking common finding metadata metadata intended canonical approach metadataparser python submit kwarg amount payload version redirect handling behavior invalidate numeric simple package complete metadataparser object document possible installation recommendation python module majority install lxml something aggressive validation metadata accept change relative internal assumed canonical contrast lxml remount convenience kwarg handling compliant overhaul instantiate beautifulsoup preserve twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "useful hostname support canonical version lxml negligible performance accept argument default method improper canonical handle dublincore pythonoptimize decodeerror exception variety beautifulsoup single metadata domain allow malformed toplevel directory possible uncaught address malformed calculate effective maintainer archive implement canonical situation common malformed metadata document malformed presentation uncaught decodeerror sadness version default behavior functional behavior submit installation metadata payload example content version future number install installation public internet attribute accept opengraph behavior package allow payload method kwarg default opengraph module upgrade represent payload network custom specify strategy possible default alternate improper theoretical segfaults absolute library version website version breaking common finding metadata metadata intended canonical approach metadataparser python submit kwarg amount payload version redirect handling behavior invalidate numeric simple package complete metadataparser object document possible installation recommendation python module majority install lxml something aggressive validation metadata accept change relative internal assumed canonical contrast lxml remount convenience kwarg handling compliant overhaul instantiate beautifulsoup preserve twitter", "pypi_keywords_clean": "opengraph protocol facebook"}, "/depy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "dependency analysis packages"}, "marcanpilami/django-oidc": {"git_readme_keywords": "package endpoint support quickstart install library quickstart development registration hybrid configuration implicit absolute internal example documentation parameter authentication backend integrate install djangooidc workflow connectivity dictionary support discovery ignored registration addition information permission specific integrated database configuration authorization authentication provider", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default endpoint support quickstart install library quickstart development registration hybrid configuration implicit absolute history example django documentation parameter connect authentication authentication backend integrate connect install djangooidc connect provider release workflow django internal django authentication connectivity dictionary support discovery ignored registration addition information integrated django permission specific authorization database configuration authentication provider", "pypi_keywords_clean": ""}, "/idlex": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection environment", "pypi_keywords_clean": ""}, "/rstcloth": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "restructuredtext powerful behavior paragraph alternative supplement resturcturedtext possible flexible powerful markup language documentation background production rstcloth development expansion pleasurable framework manipulate process generation modification complete extension repository powerful markup consistent complex debugable rstcloth rstcloth supplement rstcloth transparent intermediate repetitive intuitive shebang", "pypi_keywords_clean": ""}, "googleads/googleads": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python client tarball certificate validation install python install install googleads validation feature advantage googleads install information google manager google googleads client example googleads python contact", "pypi_keywords_clean": "adwords dfp admanager google"}, "/dnet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "portable interface ethernet libdnet interface lookup address manipulation interface several lookup manipulation several networking transmission", "pypi_keywords_clean": "networking packet inspecting"}, "jimfunk/django-netfields": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default postgresql backend maximum addition django default lookup multiple project attempt library inetaddressfield netmanager length correspond django default addition argument implementation history support relevant similar address length macaddressfield netmanager database network available django postgresql object python representation possible addition cidraddressfield netmanager inefficient example python python backport distinguish minimum someone number implementation module python distinguish errata manager ipaddress module tricky django django django support unsigned current version lookup object errata django vanilla django prefix distinguish related django address problem related replacement inclusive prefix prefix length", "pypi_keywords_clean": ""}, "Kami/yubico-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package yubico website compatibility bundle common python compatibility available installation discourage multiple validate variable contain creation distribution protocol version argument validation protocol argument method distribution specific command contribution wouter documentation available improve response documentation validation website yubico verify debian constructor argument custom exception yubico documentation dependency response validation version contribution specify bundle server certificate argument contain version library python change version yubico custom invalid status support python description information response contribution bommel vianney random interpretation verification default documentation documentation method timeout config scheme gul\u00e1csi nilsson depend module import library performing prevent request method license yubico version description yubico python module variable argument query constructor argument changelog changelog", "pypi_keywords_clean": ""}, "habnabit/panglery": {"git_readme_keywords": "multiple trigger involved panglery library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple trigger involved panglery library", "pypi_keywords_clean": ""}, "danielgatis/django-smart-save": {"git_readme_keywords": "modelform application project license anyone default overview install object different method address source modify software method validate django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modelform application project license anyone default overview install object different method address source modify software method validate django", "pypi_keywords_clean": ""}, "/pyobjc-framework-automator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "automator framework documentation developer automator application specific translation development documention information", "pypi_keywords_clean": "pyobjc automator"}, "/xlrd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "platform excel extract", "pypi_keywords_clean": "xls excel spreadsheet workbook"}, "/jianfan": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "translation traditional traditional chinese chinese support library translation", "pypi_keywords_clean": ""}, "/modgrammar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "process compilation modgrammar standard complex expression recursion information unicode heirarchical tokenization expression evaluation validation complex multiple meaningful possible building language", "pypi_keywords_clean": ""}, "/timermiddleware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "noahbenson/neuropythy": {"git_readme_keywords": "examine hcp hcp retinotopy support builtin associated environment library capable inside uppercase variable value available inside complement library python dh aguirre variable directory license option gk retinotopic way cortical positive neuropythy library readme author subject rh help example human updated version organization anatomy r radoeva install integration neuropythy command download configure enable retinotopic rh eccentricity library neuropythy version command responsible way neuropythy author fitness particular registration algorithm project dataset wiki benson interface functionality access dataset much software foundation compatible python warranty merchantability version neuropythy resolution way example concerned neuropythy forbid version author java registration affero general custom license freesurfer subject incorrect necessary various configure behavior aguirre gk available java python execute software redistribute bucket neuropythy prepared uvm lhm oh brainard pd brainard similar deprecated example configuration similar updated relevant hcp command first datta r installed machine amazon key information command command available nibabel pyrsistent execute command volume orientation rvm subject related service activate feature amazon bucket initial splash comput example gpl flexible command hemisphere vertex build docker account hcp neuropythy distribution hcp strucutral neuropythy function builtin release neuropythy surface volume private bayesian analysis incorrect version anyone neuropythy python license neuropythy inform scientific personal connectome project solution lh subject neuropythy execute java retinotopic organization neuropythy installed biorxiv benson neuroscience library correction distortion docker hub hcp subject software license please function handle number neuropythy compatible prediction functional redistribute modify meridian mgz speed future right visual pypi neuropythy freesurfer neuropythy pypi installed surface topology public license neuropythy service library additional documentation particular temporary directory gk correction license neuropythy config variable subject directory dictionary configurable download retinotopy installation neuropythy neuropythy neuroscience pythonpath available numpy java installed nibabel library configured neuropythy first argument brainard dh github repository ipyvolume wish hcp database database interested inside docker docker docker neuropythy repository retinotopic model neuropythy frozen license change hcp module hcp mesh primary interface library library respect retinotopic gnu affero cortical surface argument help mongodb server interested structural private company library available similar j bayesian rapid development access activate configuration variable neuropythy download import hcp subject command template retinotopy human connectome directory hcp functional organization version program merchantability fitness neuropythy version dataset dataset lvm subject available pypi varaince submodule github general public module neuropythy gnu general additional documentation hcp account gpl legal java library project integration amazon access solution rh lh eccentricity vertex upper vertical touch python library warranty oh datta download relevant freesurfer surface installed java configuration neuropythy additional command please reference particular purpose java configured neuropythy configuration specified command scipy nibabel package relevant hemisphere bottom readme standalone docker installed build analysis retinotopic notebook server neuropythy useful lhm rvm contain volume variable uppercase command similar notice significant forbid commercial commercial software radoeva pd author license retinotopy database possible version java license current subject lh helper neuropythy commercial machine execute matter advice biorxiv gb dataset benson first behavior follow orientation subject change function configured python version connectome amazon docker vm similar license numpy scipy hemisphere positive visual model retinotopy neuropythy docker directory uvm gpl license organization striate license mongodb neuropythy optional builtin dataset legal private license readme right service sspl surface subject licensed gpl information uppercase environment pyrsistent pimms matplotlib neuropythy present different environment variable right hemisphere current version version license hcp dataset neuropythy wiki relevant structure vertical meridian neuropythy please striate cortex local filesystem internet connection variable enable command command individual hcp key secret", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "neuroscience mesh cortex registration"}, "/txosc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "communication framework protocol version library", "pypi_keywords_clean": ""}, "meteozond/django-permanent": {"git_readme_keywords": "enforce physical default django query field queryset method django python method python default django inherit python physical deletion python recover attribute python inherit query python queryset manager declaration default field exception recover deleted deleted object deletion python existence attribute db custom existence object django permanent manager python method variable python behaviour approach declaration python logical", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "enforce physical default django query field queryset method django python method python default django inherit python physical deletion python recover attribute python inherit query python queryset manager declaration default field exception recover deleted deleted object deletion python existence attribute db custom existence object django permanent manager python method variable python behaviour approach declaration python logical", "pypi_keywords_clean": "django delete undelete safedelete remove restore softdelete logicaldelete trash"}, "xanderdin/ptsmpp": {"git_readme_keywords": "package library mixdown conflict package protocol specification dependency conflict pyopenssl package cryptography package eliminate dependency example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package library mixdown conflict package protocol specification dependency conflict pyopenssl package cryptography package eliminate dependency example", "pypi_keywords_clean": "ptsmpp smpp twisted"}, "/ntplib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python implementation example indicator platform python python install interface library description python implementation response directory utility", "pypi_keywords_clean": ""}, "Azure/azure-batch-apps": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package directory implementation installation package configuration authentication download callback interact management principal unattended terminology application release history download streaming authentication config assist application jobtype terminology service helper jobmanager authenticate python install represent single unattended configuration block batchapps module config validation sphinx optional license project cloud creation python reference unattended account default single attribute single service implementation authenticate completion summary upload download custom deleting service principal instantiate configuration submission monitoring information documentation documentation single configuration different poolmanager instance minimum authentication module filemanager service upload progress method preliminary support module upload application configure python implementation batchapps source application configuration callback frequency", "pypi_keywords_clean": ""}, "stefanofontanelli/colanderalchemy": {"git_readme_keywords": "colanderalchemy branch duplication version branch colanderalchemy support license colanderalchemy documentation version colanderalchemy feature documentation installation development version command license colanderalchemy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "synonym tisdall colanderalchemy branch colander license colanderalchemy recursive current applied sequence documentation installation unreleased dictify recreate sqlalchemy command license possible development unexpected behaviour schemas documentation callable sqlalchemy uralbash schemanode davidjb colander compatible inheritance creation exception duplication behaviour davidjb property branch offlinehacker opposite davidjb colander default applied davidjb timezone attribute mapping sqlalchemy sequence mapping colanderalchemy support respective colanderalchemy transitive function davidjb clarify sqlalchemy relationship information support tisdall similar sqlalchemy initial public ability sqlalchemy tisdall bug clarify documentation condition elemoine maintain sqlalchemy object updated customisation tisdall", "pypi_keywords_clean": "serialize deserialize validate schema validation colander sqlalchemy"}, "konstantint/matplotlib-venn": {"git_readme_keywords": "correspondence version information particular example maintainer package general possible argument diagram october amazing collection diagram provide diagram respective example multiple addition version installation github access constituent hierarchy alternative common elaborate example version similarly example example diagram general indication object install package possible achieve", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "correspondence version information particular example maintainer package general possible argument diagram october amazing collection diagram provide diagram respective example multiple addition version installation github access constituent hierarchy alternative common elaborate example version similarly example example diagram general indication object install package possible achieve", "pypi_keywords_clean": "matplotlib plotting charts"}, "jayferd/cache": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "cache decorator humans"}, "bodylabs/baiji-pod": {"git_readme_keywords": "baiji correct version contribute immutable nothing underlying subsequent consistent argparse download versioned rework tracker source apache license multiple welcome support abstraction importable config development license version iterate support absolute access repository available revision actual versioned change version validity performance constructor license project python identified version dependency publish functionality amazon update version number arbitrary versionedcache particular version versioned config config x linux function determine correct argparse pattern configure immutable bucket script comment effect require specific compute request timeout prefill convenient versioned", "git_description_clean": "assets asset cache amazon using baiji", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "artemrizhov/django-mail-templated": {"git_readme_keywords": "package template inheritance possible standard django template documentation circleci python useful possible template django compatible python template system serialisation python documentation console register wrapper message python documentation quick function python python flexibility django compatible problem", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package template inheritance possible standard django template documentation circleci python useful possible template django compatible python template system serialisation python documentation console register wrapper message python documentation quick function flexibility django compatible problem", "pypi_keywords_clean": ""}, "clinicedc/edc-protocol": {"git_readme_keywords": "enrollment todo", "git_description_clean": "nice place protocol specific values enrollment caps", "git_keywords_clean": "", "pypi_description_keywords": "enrollment todo", "pypi_keywords_clean": "django research protocol edc"}, "clinicedc/edc-fieldsets": {"git_readme_keywords": "modeladmin structure atribute python python", "git_description_clean": "modeladmin mixins extend admin fieldsets", "git_keywords_clean": "", "pypi_description_keywords": "modeladmin structure atribute python python", "pypi_keywords_clean": "django edc modeladmin fieldsets"}, "/jobprogress": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example situation separate thread maximum processing report available online documentation toolkit specific sphinx jobprogress version public process progress indication version initial information complex processing documentation documentation initial release situation processing report progress progress", "pypi_keywords_clean": ""}, "/envirophat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute default tolerant library directory development living argument pressure python environment standard supply install python repository library install documentation support orientation primary python illuminating reference environment analog connectivity plethora initial release external library install version module colour python raspbian", "pypi_keywords_clean": "raspberry pi iot weather"}, "inveniosoftware/invenio-admin": {"git_readme_keywords": "administration installation simple documentation copyright extendible execution", "git_description_clean": "invenio admin module", "git_keywords_clean": "", "pypi_description_keywords": "administration webpack management installation simple documentation copyright c vulnerability previous release extendible execution minimum", "pypi_keywords_clean": "invenio admin"}, "googollee/eviltransform": {"git_readme_keywords": "gcjlng convert coordinate accuracy convert coordinate gcjlng gcjlat gcjlng wgslat extra offset \u7b97\u6cd5\u6765\u6e90 \u53c2\u8003 original coordinate wgslat service baidu wgslng \u8ba1\u7b97\u70b9 wgslng gcjlat output javascript much coordinate gcjlat wgslng convert input coordinate calculate distance gcjlng output output coordinate wgslng output \u548c\u70b9 coordinate earth wgslat wgslng transform coordinate gcjlat gcjlng google distance point", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "gis"}, "/infinisdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infinidat api", "pypi_keywords_clean": ""}, "/talonspider": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ChrisWaites/people": {"git_readme_keywords": "instance security platform register account balance official documentation installation interaction official", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "gaopeiliang/aioetcd3": {"git_readme_keywords": "asyncio example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "enthought/chaco": {"git_readme_keywords": "publication presentation extensible architecture application everything graphical complexity containment hierarchy flexible visualization exploration component configurable extension customization interactive separation attractive installing", "git_description_clean": "chaco python package building interactive custom plots", "git_keywords_clean": "", "pypi_description_keywords": "publication presentation extensible architecture application everything graphical complexity containment hierarchy flexible visualization exploration component configurable extension customization interactive separation attractive installing", "pypi_keywords_clean": ""}, "AWegnerGitHub/stackapi": {"git_readme_keywords": "utilizes example backoff parameter documentation functionality documentation available exchange response library support connection multiple library exchange backoff", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python utilizes example backoff parameter documentation functionality documentation available exchange response library support connection multiple library exchange backoff", "pypi_keywords_clean": "stackexchange"}, "Jacksgong/webp-converter": {"git_readme_keywords": "batch converter zsh add powerline screenshot current convert batch directory convert convert result folder argument output convert config install please config license format convert terminal config converter batch output folder output pixel current folder readme much config origin example please format origin exist output folder exist converter directory ignore output ignore result folder powerful copied directory adapter scheme config shell directory output", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "batch converter tool converter current convert batch directory convert convert result folder argument output convert config install folder clean license format convert converter batch folder output pixel current folder tool much config origin example powerful webp origin exist output webp output folder exist format webp directory ignore output ignore webp batch webp format copied directory clean folder result folder directory output convert webp webp converter", "pypi_keywords_clean": "webp converter"}, "openannotation/annotator": {"git_readme_keywords": "annotator annotator download tracker facility javascript library interoperable persistence follow library building display integrate annotator question annotator demonstration annotator application identity integrate development development community annotator channel freenode building annotation interface authorization identity browsing annotator javascript tracker practice support question", "git_description_clean": "annotation tools web select text images nearly anything else add notes", "git_keywords_clean": "", "pypi_description_keywords": "package elasticsearch analyzer default liberal confusing optional dependency backend slight default elasticsearch python compatibility compatibility security response endpoint document object multiple abstraction changelog notable project authenticated compatible annotation exception parameter output changelog version python library standalone persistence blueprint elasticsearch machine making equivalent analyzer annotation python installed dependency possible keyword functionality document something support elasticsearch environment configuration annotator standalone application application reindexer repository control annotation storage annotator permission typeless consistent python python specific appropriate address customize configuration", "pypi_keywords_clean": "annotation web javascript"}, "/rituals": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "principle pyinvoke skeleton foundation program copyright integration documentation developer fitness particular available merchantability fitness warranty merchantability building software foundation cookiecutter template setuptools continuous integration documentation releasing metadata automate convenience software redistribute warranty program foundation franklin", "pypi_keywords_clean": "invoke automation tasks release deploy distribute publish"}, "textbook/atmdb": {"git_readme_keywords": "documentation additional example documentation information instance environment variable variable access overview project documentation available abstraction example license asynchronous vanilla dictionary wrapper compatibility integration additional documentation available overview compatible installation coverage example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation additional example documentation information instance environment variable variable access documentation available abstraction example license asynchronous example wrapper compatibility integration vanilla dictionary additional documentation compatible installation coverage asynchronous helper", "pypi_keywords_clean": ""}, "/mmtk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition standard program library molecular library molecular molecular simulation", "pypi_keywords_clean": ""}, "hammerlab/mhcnames": {"git_readme_keywords": "nomenclature adventure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "adventure nomenclature python", "pypi_keywords_clean": ""}, "picleslivre/picles-plumber": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "transformation pipeline inbound processing mechanism careful perform processing default freebsd iteration protocol producer iterable consumer argument perform development version installation license project example", "pypi_keywords_clean": ""}, "/spherogram": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "topology diagrams component heegaard diagrams diagrams spherogram", "pypi_keywords_clean": "knot link snappy"}, "/dnet-real": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jaraco/jaraco-office": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openoffice word microsoft", "pypi_keywords_clean": "excel office word"}, "Ayrx/aead": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "teepark/python-lzf": {"git_readme_keywords": "maximum length compress decompress straight translation compress optional default behavior decompress compress package straight liblzf optional maximum uncompressed uncompressed version function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "maximum length compress decompress straight translation compress optional default behavior decompress compress package straight liblzf optional maximum uncompressed uncompressed version function", "pypi_keywords_clean": ""}, "davidblaisonneau-orange/foreman": {"git_readme_keywords": "foreman python python library library manipulate blaisonneau object operatingsystems manipulate foreman", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "foreman python python library library manipulate blaisonneau object operatingsystems manipulate foreman", "pypi_keywords_clean": "foreman"}, "oleiade/durations": {"git_readme_keywords": "numeric express expression duration integer amount plural duration straight configuration understand representation instantiate instantiate duration singular plural amount duration representation library installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bennylope/django-organizations": {"git_readme_keywords": "pypy django specific organization additional invitation organization account different invitation membership underlying python django sufficient install execute multiple library submission section documentation organization membership customization documentation separate individual license anyone overview report branch invitation registration backend python invitation agnostic codebase authentication agnostic source execute command account group default account application python backend project additional django likely wheel target custom python pypy function manytomany relationship group invitation module executable enforce ownership convenient agnostic registration failfast django python invitation backend agnostic invitation direction account subscription documentation development updates related target separate unique organization status target organization ownership coverage identity feature follow application additional information functionality access python readiness registration functionality translatable python current environment reasonable review group object specific environment supply agnostic authentication amount backend agnostic documentation advice package build status current modify software branch development organization group authentication functionality check install comparable change development updates simple python social version development subscription functionality django project concept additional registration agnostic customize functionality release target python custom documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pypy django model manytomany specific organization additional invitation organization account different invitation membership underlying sufficient python django timestampedmodel foreignkey install execute way multiple library submission app django default invitation development model section documentation default organization incomplete support change change install migration migration organization membership build fixes customization documentation version separate individual display fork development license anyone dependency revert overview validation bug report incompatability invitation registration registration form owner initial django django database development version app specific invitation agnostic codebase authentication agnostic notification django fixes requestcontext default readiness please reasonable bump problem build source significant change model model execute command migration library account group model initial ownership custom fork original custom model default various related account small significant variable application python class invitation fixup small fixes migration class packaging default backend backend project extraneous fixes packaging model import installation compatability release django method organization model autoslugfield likely configurable model import wheel target tested support python pypy django django function manytomany relationship model additional django support backend class group invitation custom organization initial alpha organization model organizaton simple custom module executable enforce ownership configurable timestampedmodel django migration convenient configurable context agnostic registration history fixes abstracted functionality message inheritence fixes condition relationship model django python current dev invitation backend agnostic invitation original dependency updates backend registration direction id backend various account subscription option failfast app functionality configurable timestampmodel username timestampedmodel import length increase target separate match project unique organization support fixes status target support django hook organization ownership identity coverage follow feature additional information related fixup selection manage updates setup functionality access wiki python readiness alpha application pypi wheel support updates information fixes registration functionality translatable python current environment bump version reasonable review various bug revert default concrete model group object supply option specific slug environment supply agnostic authentication serious amount django compatibility backend agnostic documentation advice little spurious related incomplete access organization build status registration backend character modify software packaging bug organization group django compatability authentication functionality fixes bug migration install comparable pull decouple concrete change separation pypi package manage organization slug related tested django support configurable default dependency bug backend social configurable bug fixes license history subscription functionality django project concept additional registration agnostic organziation ownership context variable customize functionality release target abstract documentation status", "pypi_keywords_clean": ""}, "/smartrpyc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python smartrpyc", "pypi_keywords_clean": ""}, "OpenEntityMap/oem-format-json": {"git_readme_keywords": "", "git_description_clean": "json format openentitymap", "git_keywords_clean": "python json openentitymap", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/github": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bitmazk/django-server-guardian-api": {"git_readme_keywords": "guardian python python contribute dictionary security python simple contribute project offering django django something format python release endpoint described commit github installation django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "guardian python python contribute dictionary security python simple contribute project offering django django something format python release endpoint described commit github installation django", "pypi_keywords_clean": "django app reusable server guardian api health status"}, "/sphinxjp-themecore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package extension takayuki plugin mechanism template plugin support sphinx documentation installation version sorry function extension argument sphinx extension extension document documentation sphinx template plugin extension sphinx change support togakushi document information package declaration sphinx release integrate directory namespace package bug version environment example change takayuki shimizukawa template collection shimizukawa shimizukawa shimizukawa history definition specific dependency example change documentation directive sphinx license", "pypi_keywords_clean": "sphinx theme"}, "Alignak-monitoring/alignak": {"git_readme_keywords": "monitoring solution package compatibility alignak channel generic principle contribute contribution configuration python alignak several browse documentation presentation alignak complete solution monitoring system possible solution monitoring alignak documentation distribution bintray service standard documentation possible consider packaging alignak follow alignak project application several configuration shinken project install flexible architecture installation documentation different installation python installation understandable project alignak integration documentation information definition framework readability solution alignak process alignak compatible monitoring python available alignak framework python documentation cleaning install alignak project creation monitoring framework general public flexibility definition heterogeneous public license repository nothing framework alignak alignak flexibility freebsd information documentation alignak alignak language compliant complex framework integrate installation install system alignak follow pycodestyle desktop flexible complete localization independent channel discuss documentation alignak contribute project scalability information different independent monitoring", "git_description_clean": "monitoring tool highly flexible new standard oriented", "git_keywords_clean": "python monitoring nagios", "pypi_description_keywords": "monitoring solution package migrate generic principle development branch contribute contribution configuration python alignak several browse documentation pycodestyle former presentation alignak complete solution monitoring system possible solution monitoring development alignak documentation distribution analysis standard documentation possible consider packaging license alignak project application several configuration shinken project install flexible architecture alignak follow different installation python installation understandable project alignak integration bintray service definition framework readability coverage solution alignak compatible monitoring python available alignak framework python documentation cleaning process alignak install alignak compatibility former status project creation monitoring framework discuss branch independent monitoring flexibility definition repository nothing freebsd alignak flexibility information documentation alignak alignak branch documentation language complex framework integrate installation install system alignak follow pycodestyle flexible complete localization independent future compliant contribute project scalability information different documentation status", "pypi_keywords_clean": "python monitoring nagios shinken"}, "/recordclass": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sequence field descriptor reasonable reference instance support namedtuple contrast object instance different kind class prototype later memory type structure order provide recordclass structclass class recordclass recorclass creation faster wolf default question iteration cycle possible idiom issue error dataobject access object implement access assignment default invent issue fix support exception memory leak sizeof special repository bitbucket fix error type python access recordclass index class default sequence functionality sequence protocol creation different top way memory difference structclass ns von hertwig difference equal quick access list reference cycle metaclass new array benefit leak issue proxy object class memory object default new recordclass correspondence addition object example support arrayclass collection add structclass analog namedtuple compilation footprint speed special metaclass create mutable order join bolshakov type api hashable leak property default support step library recordclass special class memory footprint argument default instance class b sizeof decorator support object class effectiveness namedtuple sizeof g ns ns version add new instance example field collection change mutable analog immutable namedtuple mutable variant variant later explain memory representation access index api memory default gc performance descriptor protocol value field comparable statement creation dataobject number arrayclass add example quick assignment attribute example default option default way namedtuple invent new collection useful library begining function correspondence structclass b add support scheme result addition namedtuple structclass arrayclass collection default default dataobject factory argument type factory cyclic gc identical except g sizeof identical structure recordclass object described library recordclass library namedtuple python result instance new factory biger creation cython dependence source class support type support cyclic recordclass factory api default class need class remove gc support array object field value function analog load inventory effectiveness type attribute descriptor similar support access namedtuple add support default kind dataobject support protocol function creation factory function element remove class concept problem regular gc reference order create flexible mutable alternative quick start change version hertwig add inventory example dataobject class python source creation immutable add function example example efficiency default usability add argument python library dataobject new counting result fix memory simple example copy fix issue add add factory sizeof sizeof arrayclass factory remove cython cyclic garbage instance subclass argument recordclass exception value structure identical definition scheme recordclass instance class creation disable support float default reference subclass structclass api footprint class class support benefit approach python default default building namedtuple recordclass much memory python order class add attribute index hashable proxy python change create new garbage collection provide memory function create immutable hashable new metaclass effect number dependence default field object access assignment protocol structclass reference counting dataobject copy function order special option possible example instance creation", "pypi_keywords_clean": "namedtuple recordclass structclass arrayclass"}, "bitmazk/django-currency-history": {"git_readme_keywords": "external service default default external history check check management command reusable django currency history commit github installation python available history reusable release django currency history contribute available default external register template describe installation amount migrate database contribute project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "external service default default external history check check management command reusable django currency history commit github installation python available history reusable release django currency history contribute available default external register template describe installation amount migrate database contribute project", "pypi_keywords_clean": "django"}, "/djangohttpdigest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "grokzen/redis-py-cluster": {"git_readme_keywords": "functionality original project documentation documentation license cluster rediscluster changelog antirez release version installation example andersson releasess", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "functionality original project stable release documentation documentation license cluster rediscluster license release changelog antirez gitter release sample version installation example andersson releasess original source", "pypi_keywords_clean": "redis redis cluster"}, "/yawd-elfinder": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package django jquery django current elfinder connector information install implementation elfinder archive standard documentation connector custom github version django checkout creation production directory django filesystem manager current version advanced checkout branch interface access solution django management solution", "pypi_keywords_clean": ""}, "shoyer/h5netcdf": {"git_readme_keywords": "resizing unlimited package compatibility attribute version default f compression future version variable length compression arbitrary behavior change python avoid recommend multiple recent version utility support argument netcdf interface legacy avoid extension massive binary support reading behavior support install verified work failure recent dimension dependency netcdf implement performance lazily increase import python exception support automatic masking python interface incomplete reference number library cython functionality performance identical arbitrary attribute package version necessary binary dependency unexcited functionality client garbage collection unidata netcdf notable exception version attribute increase performance complex netcdf library support automatic readable netcdf source performance invalid netcdf unlimited dimension occasional request section interface notable netcdf compatibility python legacy automatic resizing source distribution method reading length unicode", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "resizing unlimited package compatibility attribute version default f compression future version variable length compression arbitrary behavior change python avoid recommend multiple recent version utility support argument netcdf interface legacy avoid extension massive binary support reading behavior support install verified work failure recent dimension dependency netcdf implement performance lazily increase import python exception support automatic masking python interface incomplete reference number library cython functionality performance identical arbitrary attribute package version necessary binary dependency unexcited functionality client garbage collection unidata netcdf notable exception version attribute increase performance complex netcdf library support automatic readable netcdf source performance invalid netcdf unlimited dimension occasional request section interface notable netcdf compatibility python legacy automatic resizing source distribution method reading length unicode", "pypi_keywords_clean": ""}, "SRI-CSL/wllvm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package checker describe compiler variable example anything production hidden wllvm approach attention environment unmodified detailed documentation bitcode unexpected production presence location wllvm utility auxiliary introduction wllvm constituent bitcode configuration library archive absolute compiler normal executable project wllvm dedicated variable useful dragonegg executable library prefix variable framework system useful different something process necessary analagous environment various necessary replacement freebsd bitcode compiler distinct advantage wllvm project prefix version product object environment variable hidden bitcode addition environment compiler approach distinct documentation detailed normal object", "pypi_keywords_clean": ""}, "sbma44/yahoofantasyfootball": {"git_readme_keywords": "scraper unlikely library possible addition fantasy football popular webmail available installation content amount additional unicode unofficial endorsed information individual welcome presence phantomjs unreliable technique relevant interface outcome webmail service", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "feincms/feincms": {"git_readme_keywords": "ordered simple approach software feincms github nothing content github repository version feincms content management package impossible possible customize library happy project helper rebased feature everything customizing documentation feincms branch github several rebased rewound maintenance branch repository github editor production django python content branch version system feincms website management system software package something google sidebar stupid content official feincms repository administer modify interface feincms extensible strength gallery certain custom content", "git_description_clean": "cms focus extensibility concise code", "git_keywords_clean": "", "pypi_description_keywords": "ordered simple approach software feincms github nothing content github repository version feincms content management package impossible possible customize library happy project helper rebased feature everything customizing documentation feincms branch github several rebased rewound maintenance branch repository github editor production django python content branch version system feincms website management system software package something google sidebar stupid content official feincms repository administer modify interface feincms extensible strength gallery certain custom content", "pypi_keywords_clean": ""}, "/django-password-strength": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple password project password strength translate javascript translation catalog translatable translate twitter bootstrap something available integration template version catalog strength extension javascript translation", "pypi_keywords_clean": "password meter zxcvbn strength security django"}, "/repoze-profile": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spurious minimal version package python bump python compatibility changelog maintain support profiling middleware import location turned dependency conditional supply configuration conditional python decorator profiling requirement elementtree available sphinx python version location profiling coverage virtualenv download development middleware component application reporting software support pypy canonical import format profile middleware profile output profiling individual status package compatibility python shish support python various wrapped application profile consume bump version initial downstream application python python initial release documentation sphinx search shutdown initial version documentation profiler output filename installation install browser python release iterable method source prevent profiling optional support verbose documentation status", "pypi_keywords_clean": "web application server wsgi zope"}, "renzon/gaegraph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "geomet/geomet": {"git_readme_keywords": "geometrycollection installation geojson standard polygon multipoint z custom extension idiomatic extension geojson geojson object version package elixir example conversion geometry similar package information convert geojson installation install multipolygon geometrycollection wellknown similar preserve method source geometrycollection geojson", "git_description_clean": "geomet convert geojson vice versa", "git_keywords_clean": "geojson wkt wkb ewkt ewkb gis", "pypi_description_keywords": "convert geojson", "pypi_keywords_clean": "wkb wkt geojson"}, "nvawda/bz2file": {"git_readme_keywords": "interface standard argument october argument february performance current development history january available documentation function february initial replacement compatible installation support x development exception", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interface standard argument october argument february performance current development history january available documentation function february initial replacement compatible installation support x development exception", "pypi_keywords_clean": ""}, "awahlig/python-pcre": {"git_readme_keywords": "buffer interface scanner substitution default engine string unicode string module pattern strategy stackless recursion comprehensive template string multiple building installation library conversion transparent documentation substitution installation standard subject string output substitution recursion unicode difference object available implement subject matched example python available internal python syntax default available template function convert ascii unicode character matched string license different script error reference interface unicode object unicode string php documentation similar module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "buffer interface scanner substitution default engine string unicode string module pattern strategy stackless recursion comprehensive template string multiple building installation library conversion transparent documentation substitution installation standard subject string output substitution recursion unicode difference object available implement subject matched example python available internal python syntax default available template function convert ascii unicode character matched string license different script error reference interface unicode object unicode string php documentation similar module", "pypi_keywords_clean": ""}, "mapbox/cligj": {"git_readme_keywords": "record separator sequence individual switch geojson multiple consistent interoperable geojson collection separator delimiter command output mercator switch feature feature geographic default python software default sequence geojson feature feature collection geospatial example example python command geojson output collection default iterable geojson conform example command", "git_description_clean": "argument option decorators python gis command line programs", "git_keywords_clean": "banished", "pypi_description_keywords": "record separator sequence individual switch geojson multiple consistent interoperable geojson collection separator delimiter command output mercator switch feature feature geographic default python software default sequence geojson feature feature collection geospatial example example python command geojson output collection default iterable geojson conform example command", "pypi_keywords_clean": ""}, "agronholm/typeguard": {"git_readme_keywords": "erasure project specialized support generic expensive extension multiple checking argument constant function reliable python optimized incompatible argument python available status garbage collector typechecked noninvasive coverage library function descriptive exception environment variable debugger friendly disable principal production optimized", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "erasure project specialized support generic expensive extension multiple checking argument constant function reliable python optimized incompatible argument python available status garbage collector typechecked noninvasive coverage library function descriptive exception environment variable debugger friendly disable principal production optimized", "pypi_keywords_clean": ""}, "alejandroautalan/pygubu": {"git_readme_keywords": "installation successful python introduction install pygubu application script execute welcome pygubu tkinter manual python module development executable script graphical terminal similar quick python installation pygubu builder widget introduction tkinter python version download extract application console extraction installation pygubu python install system extract tarball tutorial history tkinter application import example check installation definition example information documentation introductory definition tarball download example previous installation directory tkinter reference python check filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aplication examples directory console extraction definition tkinter pygubu installation pygubu extract tarball pygubu builder welcome pygubu designer tkinter development download extract", "pypi_keywords_clean": ""}, "/restlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "changelog documentation standalone standard support", "pypi_keywords_clean": "http rest"}, "lordmauve/flake8-html": {"git_readme_keywords": "package software plugin generate software license cookiecutter project license install project template option template cookiecutter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package software plugin generate software license cookiecutter project license install cookiecutter history release option", "pypi_keywords_clean": "html"}, "OpenFurry/django-submitify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "permission application urlconf project application information application standalone ability platform submitify urlconf permission submitify submitify submission available standalone application something request template information information pluggable application development requirement", "pypi_keywords_clean": ""}, "chrissimpkins/crypto": {"git_readme_keywords": "encryption decryption level directory crypto version portable ascii level standard output quickstart encrypt archive decrypt encryption portable manager install speed favor repository detailed detailed overview digest generation available quickstart decryption crypto download crypto wildcard expansion algorithm encryption detailed documentation multiple decryption overwrite automated expansion encrypt source gpg encryption available license source install output stream overview problem install crypto documentation available format encrypt compile install install source install install package manager unpack navigate simple symmetric archive encrypt system encryption gpg encryption encrypt generate christophruss crypto simple number pdf framework interface symmetric report encrypt portable version number documentation gnu format generate gpg source directory install favor encryption favor encryption speed encrypt multiple gnu privacy install compile problem project install gpg encrypt archive directory decrypt information crypto install simple interface install command command please symmetric gnu stream install encrypt decrypto available additional crypto source source unpack symmetric gpg documentation detailed linux distro gpg install install system linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "encryption decryption decryption decrypto encryption portable multiple automated navigate documentation description install command available changelog available install install version command upgrade upgrade version install privacy number interface symmetric generation repository algorithm linux", "pypi_keywords_clean": "encryption decryption gpg pgp openpgp cipher crypto cryptography security privacy"}, "/py-test": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Bystroushaak/bottle-rest": {"git_readme_keywords": "introduction framework documentation package documentation description", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction framework documentation changelog documentation description", "pypi_keywords_clean": ""}, "greyli/avatar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jay-johnson/redten": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python client", "pypi_keywords_clean": ""}, "biosustain/optlang": {"git_readme_keywords": "heuristic optimization fractional absolute transparent library formulation support documentation mathematical optimization evaluation advantage symbolic interface optimization problem formulation optional subject installation support problem mathematical programming different citation programming language interface optimization interface objective function support heuristic academic", "git_description_clean": "optlang sympy based mathematical programming language", "git_keywords_clean": "", "pypi_description_keywords": "heuristic optimization fractional absolute transparent library formulation support documentation mathematical optimization evaluation advantage symbolic interface optimization problem formulation optional subject installation support problem mathematical programming different citation programming language interface optimization interface objective function support heuristic academic", "pypi_keywords_clean": "optimization sympy mathematical programming heuristic optimization"}, "thongdong7/tb-ioc": {"git_readme_keywords": "factory object method class class create create factory factory create object class example factory static method long class create object", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/preppy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "knightliao/pfrock-http-plugin": {"git_readme_keywords": "branch master master stable plugin stable branch", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "github plugin static", "pypi_keywords_clean": ""}, "TestInABox/stackinabox": {"git_readme_keywords": "useable keystone module provide socket particular environment library python negative testing sufficient example helloworld several testing provide consistent utility configure helloworld service provide openstack exception stackinaboxservice building service session object choose openstack keystone unittest service install stackinabox authentication storage difference version socket interception installation correct service example object registration unknown stackinabox python nothing special unittest support x project status service unknown unnecessary session postive negative testing desired consistent reliable advanced example interception framework framework restful coverage status example building service object httpretty provide registration stackinabox overview restful proper integration framework x decorator python python library register travis specific testing framework httpretty determine different allow stackinabox specific stackinaboxservice status overview testing testing support postive stackinabox utility", "git_description_clean": "testing framework restful apis", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pediapress/qserve": {"git_readme_keywords": "negligence pediapress copyright distribution disclaimer documentation fitness particular modification merchantability fitness business interruption redistribution software disclaimer documentation liability contract procurement substitute exemplary consequential permission software indirect incidental specific particular purpose possibility", "git_description_clean": "job queue server used mwlib", "git_keywords_clean": "", "pypi_description_keywords": "negligence pediapress copyright distribution disclaimer documentation fitness particular modification merchantability fitness business interruption redistribution software disclaimer documentation liability contract procurement substitute exemplary consequential permission software indirect incidental specific particular purpose possibility", "pypi_keywords_clean": ""}, "rsteca/sklearn-deap": {"git_readme_keywords": "gridsearchcv randomizedsearchcv possible combination gridsearch notebook evolutionaryalgorithmsearchcv gridsearchcv evolutionary algorithms function example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-py3s3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application information application variable dynamic heterogeneous parallelize efficient", "pypi_keywords_clean": ""}, "scibi/django-teryt": {"git_readme_keywords": "english national podzia\u0142u terytorialnego g\u0142\u00f3wny present rejestr urz\u0119dowy statistical statystyczny database documentation install urz\u0119dowy podzia\u0142u krajowy rejestr aktywny register territorial welcome national official division country official register country register territorial division", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance compatibility rejestr urz\u0119dowy aktywny telling official register central statistical english national support podzia\u0142u terytorialnego g\u0142\u00f3wny present documentation statystyczny install database urz\u0119dowy podzia\u0142u history support django coverage django version support krajowy rejestr national official country register territorial division welcome division country register territorial abstract", "pypi_keywords_clean": ""}, "bastibe/pysoundcard": {"git_readme_keywords": "conclusion simple audio playback callback signature different thread stream sample portaudio package faster package manager callback function bechtold installation cpython extension portaudio install pypy pysoundcard device stream silence pysoundcard available binary portaudio cffi equivalent example focus newer intermediary focus complex output device basic building similar pysoundfile error download cffi foreign physical sound building block install pysoundcard install numpy operation flexible powerful project pythonic interface version portaudio difference performance pysoundcard installation pysoundcard audio input bastian bechtold cpython pypy dependent external recent apple audio library function interface x linux problematic audio pysoundcard work silence context manager addition pysoundcard audio cffi dependency manager install interface performance sounddevice pysoundcard duplex input anaconda similar portaudio interface release signature computer block playback stream callback numpy pysoundcard device output library portaudio install portaudio native audio available binary similar pysoundcard example program release full duplex unofficial interface python pysoundcard interface sound apple computer similar distribution input device numpy cffi foreign function something different approach problem manager first external library chunk audio wheel performant example loopback python please installer pyaudio python module accessed cffi input output incapable computer thread useful cffi numpy pysoundio moment python pysoundcard bsd loopback example cffi library control flow good first python newer python pysoundcard pysoundcard x c library general callback maximum performance context manager c bastian block audio convenient simple record audio", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "record audio", "pypi_keywords_clean": "audio portaudio"}, "pre-commit/pre-commit": {"git_readme_keywords": "information framework", "git_description_clean": "framework managing maintaining hooks", "git_keywords_clean": "git python linter refactoring", "pypi_description_keywords": "information framework", "pypi_keywords_clean": ""}, "cgrice/django-staticblog": {"git_readme_keywords": "django markdown format alphanumeric information example location reference markdown django project content configuration system github render markdown installation python django changelog extension archive repository directory django django markdown", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django markdown format alphanumeric information example location reference markdown django project content configuration system github render markdown installation python django changelog extension archive repository directory django django markdown", "pypi_keywords_clean": ""}, "mjumbewu/django-proxy": {"git_readme_keywords": "negligence function changelog library disclaimer fitness particular modification merchantability fitness installation business interruption response possible django redistribution disclaimer documentation special exemplary respond mjumbe wawatu function copyright mjumbe liability contract procurement substitute exemplary consequential request possible indirect incidental distribution software particular purpose incidental special possibility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "yandex/gixy": {"git_readme_keywords": "analyse repository submit plugin installation default traversal response possible multiline response container prevent security check configuration install documentation available security misconfiguration detection follow python server needed misconfiguration automate overview request forgery something analyze misconfigured different detect", "git_description_clean": "nginx configuration static analyzer", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "nginx security lint"}, "ofek/coincurve": {"git_readme_keywords": "track coverage simple necessary system form hasher linux macos libgmp optional build system default secure binary wheel update update form context drop support wheel freebsd python compilation hasher message signature signature necessary return classmethod classmethod option binary variable add update return pypi status gmp compatibility optional macos system environment message message license uncompressed form coincurve form default secret secret scalar add security system add context macos python license coincurve scalar scalar fetch source python optional arity form signature verify message history important multiply update python macos override system hasher hash ecdh much build style black homebrew python pypi available pypi version context pypi security local secret constant python cffi travis owner public openssl clean form refer source build package macos necessary hash function computation deterministic complete elliptic codecov support macos scalar multiply necessary homebrew optional building add update frequent system support black library malleability support python codecov track available implementation environment variable x c library building source verify message", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "track coverage simple necessary system form hasher linux macos libgmp optional build system default secure binary wheel update update form context drop support wheel freebsd python compilation hasher message signature signature necessary return classmethod classmethod option binary variable add update return pypi status gmp compatibility optional macos system environment message message license uncompressed form coincurve form default secret secret scalar add security system add context macos python license coincurve scalar scalar fetch source python optional arity form signature verify message history important multiply update python macos override system hasher hash ecdh much build style black homebrew python pypi available pypi version context pypi security local secret constant python cffi travis owner public openssl clean form refer source build package macos necessary hash function computation deterministic complete elliptic codecov support macos scalar multiply necessary homebrew optional building add update frequent system support black library malleability support python codecov track available implementation environment variable x c library building source verify message", "pypi_keywords_clean": "crypto elliptic curves bitcoin ethereum cryptocurrency"}, "davisp/ghp-import": {"git_readme_keywords": "package branch useful awesome service magical simple branch github destroy branch difficult branch current directory branch directory license documentation obvious specify different project documentation derivative sphinx github default different branch github obvious method trigger follow chesneau documentation directory branch everything specify commit branch branch document branch repository organization public license webserver access documentation information service github involved scratcher interface outside documentation tumbolia public", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package branch useful awesome service magical simple branch github destroy branch difficult branch current directory branch directory license documentation obvious specify different project documentation derivative sphinx github default different branch github obvious method trigger follow chesneau documentation directory branch everything specify commit branch branch document branch repository organization public license webserver access documentation information service github involved scratcher interface outside documentation tumbolia public", "pypi_keywords_clean": ""}, "revarbat/ssltelnet": {"git_readme_keywords": "standard ssltelnet initializer connect telnetlib addition library telnetlib", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard ssltelnet initializer connect telnetlib addition library telnetlib", "pypi_keywords_clean": "ssl telnet communication"}, "django-ddp/django-ddp": {"git_readme_keywords": "android chrome safari android android supported current browser chrome android standard subscribe aggregate replay command subscribe aggregate broadcast module django browser support ecmascript javascript protocol support development version release pypi additional database consult section method object noteworthy current github account relevant support respect register ddp connection manner https method sh follow welcome example secondary ddp object module favour supported account required license django application grateful example technical project scalability system sh asynchronous support postgresql django application django primary ddp installation install ddp implementation receive follow normal installed installation meteorview ddp signal appropriate application awesome support sockjs database necessary application directory instance github strong protection specify connect chrome safari django ddp password ddp service provide authentication individual websocket support ddp fallback protocol requirement asynchronous browser android scalability database normal procedure package subclass suitable authentication authentication aggregated change change message gevent mainloop vulnerable change asynchronous framework specific django section authentication python xhr fallback javascript interactivity encryption application module django project welcome environment variable primary connection android browser sockjs xhr", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "android chrome safari android android supported current browser chrome android standard subscribe aggregate replay command subscribe aggregate broadcast module django browser support ecmascript javascript protocol support development version release pypi additional database consult section method object noteworthy current github account relevant support respect register ddp connection manner https method sh follow welcome example secondary ddp object module favour supported account required license django application grateful example technical project scalability system sh asynchronous support postgresql django application django primary ddp installation install ddp implementation receive follow normal installed installation meteorview ddp signal appropriate application awesome support sockjs database necessary application directory instance github strong protection specify connect chrome safari django ddp password ddp service provide authentication individual websocket support ddp fallback protocol requirement asynchronous browser android scalability database normal procedure package subclass suitable authentication authentication aggregated change change message gevent mainloop vulnerable change asynchronous framework specific django section authentication python xhr fallback javascript interactivity encryption application module django project welcome environment variable primary connection android browser sockjs xhr", "pypi_keywords_clean": "django ddp meteor websocket websockets realtime live liveupdate livequery"}, "orionvm/potsdb": {"git_readme_keywords": "message default current timeout communication combination database background opentsdb internal project properly application reconnect current developer something instantiation installation running temporary overwritten connectivity enough program developer maintainer", "git_description_clean": "python client opentsdb", "git_keywords_clean": "", "pypi_description_keywords": "message default current timeout communication combination database background opentsdb internal project properly application reconnect current developer something instantiation installation running temporary overwritten connectivity enough program developer maintainer", "pypi_keywords_clean": "opentsdb tsdb time series"}, "/dotcloud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software application dotcloud assemble register dotcloud platform", "pypi_keywords_clean": ""}, "cirla/tulipy": {"git_readme_keywords": "python information microsoft property available trimmed multiple installation distribution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python information microsoft property available trimmed multiple installation distribution", "pypi_keywords_clean": ""}, "ricequant/rqalpha": {"git_readme_keywords": "\u8fd1\u65e5\u6709\u90e8\u5206 rqalpha rqalpha \u7a33\u5b9a\u7684\u73af\u5883 rqalpha \u63d0\u4f9b\u4e86\u6781\u5177\u62d3\u5c55\u6027\u7684 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee \u83b7\u53d6\u548c\u8be2\u95ee\u6709\u5173 rqalpha rqalpha \u6216\u8005\u4f7f\u7528\u641c\u7d22\u529f\u80fd\u6765\u67e5\u627e\u7279\u5b9a\u95ee\u9898 support rqalpha ricequant \u7075\u6d3b\u7684\u914d\u7f6e \u7075\u6d3b\u7684\u914d\u7f6e \u5f3a\u5927\u7684\u6269\u5c55\u6027 sentry \u83b7\u53d6\u5b9e\u65f6bar\u6570\u636e\u5e76\u7ec4\u88c5\u4ee5\u4f9brqalpha\u4f7f\u7528 \u5982\u679c\u60a8\u57fa\u4e8e rqalpha license \u5217\u8868\u4e2d\u6dfb\u52a0\u60a8\u7684 \u6bcf\u5929\u90fd\u6709\u4f1a\u5927\u91cf\u7684\u7b97\u6cd5\u4ea4\u6613\u5728 ricequant rqalpha \u4e2d\u63d0\u4ea4issue rqalpha python version version \u7a33\u5b9a\u7684\u73af\u5883 \u6bcf\u5929\u90fd\u6709\u4f1a\u5927\u91cf\u7684\u7b97\u6cd5\u4ea4\u6613\u5728 rqalpha \u8be5\u90ae\u4ef6\u5e76\u975e \u65e0\u7f1d\u5bf9\u63a5rqalpha version support \u83b7\u53d6\u5b9e\u65f6bar\u6570\u636e\u5e76\u7ec4\u88c5\u4ee5\u4f9brqalpha\u4f7f\u7528 \u5982\u679c\u60a8\u57fa\u4e8e rqalpha \u6240\u6709\u7684\u7b56\u7565\u90fd\u53ef\u4ee5\u76f4\u63a5\u5728 \u83b7\u53d6\u548c\u8be2\u95ee\u6709\u5173 rqalpha \u60a8\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee \u8be5\u90ae\u4ef6\u5e76\u975e ricequant \u5173\u4e8erqalpha\u7684\u4efb\u4f55\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u6765\u83b7\u53d6\u5e2e\u52a9 \u4ee5\u4e0b\u662f\u76ee\u524d\u5df2\u7ecf\u96c6\u6210\u7684 \u5f3a\u5927\u7684\u6269\u5c55\u6027 \u5f00\u53d1\u8005\u53ef\u4ee5\u57fa\u4e8e\u6211\u4eec\u63d0\u4f9b\u7684 \u60a8\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u4f7f\u7528 \u5b89\u88c5\u548c\u4f7f\u7528mod documentation status", "git_description_clean": "extendable replaceable python algorithmic backtest trading framework supporting multiple securities", "git_keywords_clean": "quant python backtest finance ricequant rqalpha trading stock futures", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/zope-filerepresentation": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python pypy support dependency inherit webdav documentation initial release cpython pypy undeclared dependency synchronization object release change support python python pypy standard python efficient documentation status", "pypi_keywords_clean": "filesystem representation"}, "/csvimporter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information available instance declarative transform importer", "pypi_keywords_clean": "csv django loader"}, "redbridge/molnctrl": {"git_readme_keywords": "package cloudstack object stupid error remove initial release support futurize python cloudstack support command python compatibility changelog cloudstack python library redbridge molnctrl cloudstack", "git_description_clean": "cloudstack python api client", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/ofxparse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "banking help section library please accounttype object institution statement transaction security position security coverage report python compatibility account account statement available account investment account ofxparse ofxparse exchange format transaction investmenttransaction ofxparser fileobj useful import ofxparser multiple library institution object ubuntu object investmentaccount security help development account account position firefox homepage install python investmentaccount account statement object transaction account object investmenttransaction transaction command license ofxparse ofxparse import trading available institution institution homepage homepage sample program homepage source branch number object institution creditcard investment example python unittest statement statement bankaccount creditaccount install beautifulsoup number account investmentstatement statement ofxparse parser lxml object account transaction transaction creditaccount investmentaccount investment broker account investment investmentstatement object object security number accounttype source license number transit information different help sample financial exchange security object object statement actual license coverage package object accounttype coverage python accounttype unknown account number security security jseutter investmenttransaction python ofxparse report coverage", "pypi_keywords_clean": "ofx open financial exchange file formats"}, "HearthSim/unitypack": {"git_readme_keywords": "library deserialize recursive appropriate extension convert unextractable extract converter welcome disunity original hearthsim project instance extractable freenode unitypack library extract common prefixed textasset included attribute instance available example argument extractable project development movietexture cinematic unitypack common extraction extract dictionary community hearthsim individual lookup decrunch conversion convert hearthstone pillow version audioclip unimplemented", "git_description_clean": "python deserialization library asset format", "git_keywords_clean": "python disunity unity", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "madisonmay/tomorrow": {"git_readme_keywords": "installable concern implementation scraper download tomorrow library asynchronous multiple paradigm awesome project timeout argument additional available tomorrow decorator installation tomorrow minimal concern inefficient production efficient argument prevent tomorrow experiment anything reasonable wrapper function individual access explicit behavior specific decorator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installable concern implementation scraper download tomorrow library paradigm syntax asynchronous awesome multiple timeout argument enough implementation additional available decorator syntax tomorrow decorator installation tomorrow minimal concern inefficient efficient argument prevent tomorrow reasonable wrapper function individual object access explicit", "pypi_keywords_clean": ""}, "/rename": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license program standalone anywhere filename automatic numbering writing useful multiple library intermediate standard library possible extended question reference example transaction install function standard command canonical global interactive fitness particular disclaimer program indexed filesystem regular expression merchantability fitness additional atomicity installation warranty merchantability internal execution software foundation reference security caution example default complete renaming quotation filename matched directory structure general public directory foundation version release public license renaming volatile recursive tricky backslash character elegant particular purpose software redistribute different version license warranty library additional temporary directory algorithms default special reference directory directory problem friendly disclaimer matched original renaming filename", "pypi_keywords_clean": ""}, "/json-schema-generator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "genarotor json file structure schema genarotor json file json schema example", "pypi_keywords_clean": "jsonschema json generator api validator"}, "/openslides": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ip address license license x check library python activate virtual multiple development http server agenda command openslides way way support package python virtual environment openslides install openslides big cache backend webinterface default postgresql redis openslides repository installed system respective section current webbrowser account username contribute openslides license server available local ip software openslides environment restart virtual python example several javascript settings database activate environment local network binary package everyone local package download portable version session engine environment optional system additional directory change python environment presentation assembly configuration static library openslides directory production install specific openslides installation database personal openslides openslides interface server openslides settings wsgi openslides server default webbrowser webserver concurrent unzip database admin available everyone environment install source software several python client current geiss please stable version username password archive backend cache admin account terminal version install openslides release local subdirectory python version openslides python install software floss information installation installation big information please change openslides client change password assembly system openslides interface backend session installation installation webbrowser server apache http install openslides", "pypi_keywords_clean": ""}, "/doctest2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nspies/admiral": {"git_readme_keywords": "python command fleet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Kaggle/kaggle": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "official functionality accessible command", "pypi_keywords_clean": "kaggle"}, "mozilla/deepspeech": {"git_readme_keywords": "model cuda gpu support addition continuation training addressed discourse incompatible graph assumption install client installed proper binary audio required decoding training refer bootstrap training optional exclude install package model geometry inference available preprocess importer script usual way command installing extra loading model compatibility change directory behavior parameter language audio installing required table installing training example binary short likely newer client capable nvidia import import preprocess system documentation package required process dataset issue loaded memory system properly flag gpu gtx repository example libpthread please client readme output information environment ready script download building deepspeech gstreamer plugin question addressed linux install training resume common nvidia gpu build newer find information model contribution experience gpu help output preliminary model simple tensorflow manage contain inference model deepspeech deepspeech speech deep setup install scratch follow pull request speech research unzip model model installed python version something wrong help faq language gstreamer build readme please refer python nodejs command command old client available system golang small sample command training try version command project deepspeech model example corpus model exported virtual environment corresponding information general mozilla community download install gpu install refer system valid model runtime upstream default inference result client everything inference python directory training deepspeech python decoder package central python model frozen network model installing wheel check example import checkpoint directory training release deepspeech repository release training directory model work deepspeech download individual follow command pass comma required runtime incompatible model interval purpose version old gtx series language model batch hook following required additional client python release model training model absolute commit help look option system regardless downgrade client proper setup gpu linux support build release current master check faq documentation english mac linux achieve linux environment dependency update mozilla bootstrap disk sample dataset model compatible deepspeech wheel python client different current install scratch speech development future change model release alphabet optional first check documentation install commonvoice language process transfer mozilla common script project gpu specific package please first example certain incompatible way commonvoice importer find following help find documentation machine download unzip demonstration upstream tensorflow additional overriding graph newer building target perform installation dataset training model model support please output native cpu enable model change check required linter cardboardlinter follow installation disk tensorflow material deepspeech individual commonvoice mind speech export model dependency gpu deepspeech checkout model tflite many training vram gpu acoustic model optional represent find gpus please check current directory example common experiment tf directory deepspeech information documentation cuda cudnn binary decoder addressed faq initiative download look contain pass additional important inference gpu oom platform python new virtual rustaudio provide model central everything installed csv deep speech terminal change following libpthread inference material properly setup collection convenience compatibility deepspeech taskcluster storage mac appropriate platform cuda dependency purpose documentation install tensorflow install python style current folder training deepspeech macos installing deepspeech package appropriate dataset corresponding configurable refer corresponding install deepspeech model inference model available command download dependency common basic value audio training validation conduct etiquette source engine faq discourse model support request check network dataset upgrade newer speech corpora checkpoint release deepspeech inference command compare resume model installed perform training process error download installed system conversion number client installing package package deepspeech virtual cardboardlinter setup report conversion additional dataset scratch third party newer model exported model contain required information building install gpu deepspeech tensorflow simple first install required package download installed update newer version setup repository source third native client fresh setup simple command inference parameter binary everything cuda runtime package client sucessfull enable gpu community participation python package training former implementation specific package output corporacreator source artifact experience tensorflow gpu entire graph represent language help several provide unexpected failure english model corpora client download result extra memory consumption gpu capable exported directory required cuda preprocess dataset environment loaded model checkpoint python script old model environment find interruption following command corresponding importer support training", "git_description_clean": "tensorflow implementation baidu deepspeech architecture", "git_keywords_clean": "tensorflow", "pypi_description_keywords": "inference realtime model cuda gpu support trained several addition appropriate decoder continuation training wav package cuda addressed discourse install client binary audio required decoding training refer bootstrap training install package model geometry available preprocess importer script invalid usual way worker script command installing extra loading change directory behavior parameter pass option tensorflow project installing required example several epochs training likely binary short capable nvidia import preprocess training install package required process dataset cluster import script loaded memory system properly storage flag gpu gtx second audio client readme output perform output information environment ready corpus archive gstreamer plugin question addressed training resume common folder download nvidia gpu experience gpu help output preliminary model simple manage official inference model speech deep speech research realtime factor deepspeech binary python version building conclude process downloaded model ssh something something wrong help faq deepspeech support language gstreamer quicker inference directory common python nodejs local machine command command support distributed available system script utilizes golang small sample command version command project deepspeech template distributed model example graph corpus model exported virtual environment corresponding information general dataset download install tflite distributed valid model runtime upstream default inference result inference python directory training script directory deepspeech python decoder package tensorflow branch central python model frozen network wheel check example import checkpoint directory training release deepspeech repository release training work deepspeech available ci pass comma required runtime documentation incomplete target directory incompatible model interval purpose gtx series language model batch client python release model training model installation issue absolute look option ssd proper setup gpu linux release continue assumption unofficial pip current master check faq achieve startup linux environment mozilla bootstrap negative epoch installing gpu disk sample dataset model compatible deepspeech wheel python client different current install scratch machine deepspeech speech development downloaded common first check process transfer script project gpu specific package please first example certain incompatible way download unzip demonstration package platform something similar upstream tensorflow interrupted documented english additional overriding option script trained machine building target perform installation dataset training support please bunch csv output native model change check required instrumentation disk tensorflow geforce gtx material deepspeech export model dependency gpu import process deepspeech checkout model tflite many training acoustic model content epochs something client package optional represent utilizes environment please check environment setup current directory example common distributed training experiment tf contain bunch directory deepspeech information documentation cuda cudnn addressed faq ci infrastructure look output look contain pass additional important inference gpu oom platform python new virtual rustaudio provide distributed tensorflow model central refer provide importer deep speech terminal change downloaded checkpoint update package installing inference material google tensorflow trained model properly setup enough collection convenience proper deepspeech taskcluster cuda dependency purpose documentation broken support training install tensorflow install python directory corpus current folder macos installing deepspeech importer skip dataset corresponding setup loaded configurable refer corresponding install deepspeech environment variable model inference model available command download dependency common whole process training validation documentation continue source engine dependency installing faq discourse install network dataset speech corpora deepspeech project checkpoint release deepspeech inference resume model training process error download training deep checkpoint deepspeech virtual setup virtualenv report conversion model trained capable gpus dataset scratch downloaded third party exported model information building gpu script remote factor geforce install gpu deepspeech tensorflow simple first install required number small package download source third native client help example fresh setup simple command inference parameter documentation help binary everything cuda runtime number gpus package client inference trained sample binary sucessfull enable gpu python package deepspeech activate training former package pass implementation specific package training installing source artifact experience tensorflow gpu virtualenv install represent language help several provide unexpected failure english model everything meaning epochs corpora client download result extra directory contain memory consumption gpu capable exported directory required cuda preprocess dataset documentation documentation python script interruption corresponding importer checkpoint loading", "pypi_keywords_clean": ""}, "polysquare/parse-shebang": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence pathext information registered available coverage useful ubuntu appveyor possible shebang", "pypi_keywords_clean": "development"}, "RDFLib/rdflib-jsonld": {"git_readme_keywords": "website implementation download serializer information technology documentation jsonld document serialization implementation continuous integration installation installed", "git_description_clean": "parser serializer plugins rdflib python", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fboender/ansible-cmdb": {"git_readme_keywords": "development license format markdown multiple ansible custom ansible generate custom template documentation trustworthy flexible rough indication install source example output markdown useful output ansible installation configuration information manual custom number overview release package configuration management management database ansible configuration system configuration template willing documentation documentation console browser source release flexible format group static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "development license format markdown multiple ansible custom ansible generate custom template documentation trustworthy flexible rough indication install source example output markdown useful output ansible installation configuration information manual custom number overview release package configuration management management database ansible configuration system configuration template willing documentation documentation console browser source release flexible format group static", "pypi_keywords_clean": ""}, "erikrose/nose-progressive": {"git_readme_keywords": "simple maximum width output switch printing version history counting library multiple actual value little obvious handle keyboardinterrupt modern directory embolden fix unicode trivial comparison crash navigate commandline option failure summarized progress stationary install compact display skip setup command standard testrunner emacs bbedit traceback absolute display terminal support custom traceback recent equal install upgrade variable environment naoya inada option environment obvious plus cache new basic terminal exception traceback sequence function process bitter output factor relative current entire template number format necessary ok green failure show handle syntax editor choice general number color loader traceback color function mcmillan plugin upward testloader correspond program justice subtle look exception value vi default template progress columns normal gibson fix source obscure traceback baumgold finding change package addition emacs shortcut compact exist documentation typing work fix crash displays failures syntax displays progress complete show attribute error editor editor support david readme shortcut combination represent failures information custom screen favor format understood variable custom tolerate empty cosmetic template available resizing sigwinch unittest traceback formatting show parameter author bruno fallback choice bonus emacs vi jason attributeerror object value editor object access wrong tolerate counting work right problem terminal specifying summarized vi emacs attempt fix editor normal bonus editor installation shell different history handle show actual important crazy editor fix number support functionality plus explode combination filesystem inada tolerate shortcut pathname stock traceback variable display balogh practical understood vi license sanny kudos fix python contracting work bbedit function judicious django support allow terminal escape philosophy work artemenko look option matter kumar avoid error class terminal magic correct stack little ugly different cwd crash error example editor fix monkeypatching unicode error terminal formatting lucas taylor upgrade default editor guess debnath show failures traceback decorator plugin lucas method work number instruction little motivation affirmation terminal capability screen useful output trouble david baumgold null filename formatting library error skip sanny kumar fedora normal terminal show traceback escape hatch failure output pdb editor shortcut python support experimental python access terminal compatible plugin width reformat kumar mcmillan formatting output unreleased version customize editor object attribute useful information fix display plus plus initial release several new bottom screen vi equivalent formatting shortcut stack smarter problem finding sigwinch support tolerate corner module portion equivalent represent failure work major editor option handle proxied swallow package height width onscreen config wrong logcapture plugin instruction stack david fix important crash behavior syntaxerror contiguous plugin displays failure error possible complete version muster format much variable color consider fix attributeerror factor terminal beautiful terminal show error terminal resizing vi select rethink color progress relative optional generator variable show variable default python concentration shell variable weaver inspiration cowboy attempt directory compact stock escape sequence support python prompt avoid typeerror summary indicate vi cowboy error failure stationary progress distribution directory python fix welcome fix bug environment variable x special formatting formatting sequence result class custom error equivalent environment variety terminal empty portion monkeypatching meantime shortcut typing color formatting", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple maximum width output switch printing version history counting library multiple actual value little obvious handle keyboardinterrupt modern directory embolden fix unicode trivial comparison crash navigate commandline option failure summarized progress stationary install compact display skip setup command standard testrunner emacs bbedit traceback absolute display terminal support custom traceback recent equal install upgrade variable environment naoya inada option environment obvious plus cache new basic terminal exception traceback sequence function process bitter output factor relative current entire template number format necessary ok green failure show handle syntax editor choice general number color loader traceback color function mcmillan plugin upward testloader correspond program justice subtle look exception value vi default template progress columns normal gibson fix source obscure traceback baumgold finding change package addition emacs shortcut compact exist documentation typing work fix crash displays failures syntax displays progress complete show attribute error editor editor support david readme shortcut combination represent failures information custom screen favor format understood variable custom tolerate empty cosmetic template available resizing sigwinch unittest traceback formatting show parameter author bruno fallback choice bonus emacs vi jason attributeerror object value editor object access wrong tolerate counting work right problem terminal specifying summarized vi emacs attempt fix editor normal bonus editor installation shell different history handle show actual important crazy editor fix number support functionality plus explode combination filesystem inada tolerate shortcut pathname stock traceback variable display balogh practical understood vi license sanny kudos fix python contracting work bbedit function judicious django support allow terminal escape philosophy work artemenko look option matter kumar avoid error class terminal magic correct stack little ugly different cwd crash error example editor fix monkeypatching unicode error terminal formatting lucas taylor upgrade default editor guess debnath show failures traceback decorator plugin lucas method work number instruction little motivation affirmation terminal capability screen useful output trouble david baumgold null filename formatting library error skip sanny kumar fedora normal terminal show traceback escape hatch failure output pdb editor shortcut python support experimental python access terminal compatible plugin width reformat kumar mcmillan formatting output unreleased version customize editor object attribute useful information fix display plus plus initial release several new bottom screen vi equivalent formatting shortcut stack smarter problem finding sigwinch support tolerate corner module portion equivalent represent failure work major editor option handle proxied swallow package height width onscreen config wrong logcapture plugin instruction stack david fix important crash behavior syntaxerror contiguous plugin displays failure error possible complete version muster format much variable color consider fix attributeerror factor terminal beautiful terminal show error terminal resizing vi select rethink color progress relative optional generator variable show variable default python concentration shell variable weaver inspiration cowboy attempt directory compact stock escape sequence support python prompt avoid typeerror summary indicate vi cowboy error failure stationary progress distribution directory python fix welcome fix bug environment variable x special formatting formatting sequence result class custom error equivalent environment variety terminal empty portion monkeypatching meantime shortcut typing color formatting", "pypi_keywords_clean": ""}, "stripe/stripe": {"git_readme_keywords": "documented compatibility bottom interface possible logging configure pattern configure logging community account testify package support current logrus support multiple possible documentation information terminal unmarshal appropriate support library available homebrew example appengine handler network problem guarantee authentication library appreciate require version release intermittent network documentation comprehensive behalf function support interface individual library installation global variable preliminary approach discussion installation install interface distributed example necessary functionality library request optional development official property unmarshal appengine environment automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python second reference library stripe python python stripe account python library stripe official relevant documentation standard documentation reference python official stripe various documentation python install package example", "pypi_keywords_clean": "stripe api payments"}, "python-useful-helpers/threaded": {"git_readme_keywords": "thread component request classic useful application shutdown pattern function threadpoolexecutor coverage display addition python thread license functional available submit function several decorator submit coverage python software multiple python return python system python application package delivery return asyncio python request python extraction python python installation possibility asyncio example python python asynciotask mechanism package argument python support multiple documentation status", "git_description_clean": "python threadpool processpool executor decorators way reduce code", "git_keywords_clean": "python threading multithreading decorators asyncio", "pypi_description_keywords": "thread component request classic useful application shutdown pattern function threadpoolexecutor coverage display addition python thread license functional available submit function several decorator submit coverage python software multiple python return python system python application package delivery return asyncio python request python extraction python python installation possibility asyncio example python python asynciotask mechanism package argument python support multiple documentation status", "pypi_keywords_clean": "pooling multithreading threading asyncio development"}, "ericholscher/django-test-utils": {"git_readme_keywords": "devmason welcome documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "SectorLabs/django-localized-fields": {"git_readme_keywords": "callable example major useful running package pypi basic option instruct django convention optional filling render example admin integration slugs database specific language current python define python django language control primary language postgresql specific django python implementation field multiple romania swing successor fixes template access inherit python content field function argument default primary uniqueness certain admin field database comfortable package python default uniqueness constraint control language optional python empty widget render subject change instruct field support django version subject django python fixes concurrency field parameter unique enforce python uniqueness certain language experimental feature define available specific available enforce uniqueness custom django admin similar django method experimental preparation declare translation experimental field django widget special instance current uniqueness slugs field example work python python python python enforce forth package work work django django package uniqueness default certain filling python install package django system language python", "git_description_clean": "implementation localized model fields using postgresql hstore fields", "git_keywords_clean": "", "pypi_description_keywords": "callable example useful running package pypi basic option instruct django convention optional filling render example slugs database specific language current python django language control primary language postgresql specific django python implementation field multiple romania swing successor fixes template access inherit python content field function argument default primary uniqueness certain database comfortable package python default uniqueness constraint integration control language optional python empty widget render support django instruct field django python fixes concurrency field parameter unique enforce python uniqueness certain language experimental feature enforce uniqueness specific available custom similar django method experimental preparation declare translation django django django widget special instance current uniqueness slugs field example work python python python python enforce package work work django django package uniqueness default python package certain filling python install package django system language python", "pypi_keywords_clean": "django localized language models fields"}, "iogf/untwisted": {"git_readme_keywords": "descriptor support freenode modular install untwisted freenode address untwisted library internet possible ameliabot flexible untwisted untwisted question pleasant documentation networking different approach implement asynchronous framework example statement untwisted impressive impressive performance framework steinitz library asynchronous stockfish analyze powerful consistent complex untwisted different untwisted framework interface scratch ameliabot problem untwisted architecture support stockfish rapidserv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "asynchronous"}, "areebbeigh/profanityfilter": {"git_readme_keywords": "areebbeigh profanityfilter universal request encourage developer executable additional library installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "visit", "pypi_keywords_clean": "profanity filter clean content"}, "mixmastamyk/console": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default pricing meellion character functionality clearing comprehensive legalese copyright multiple rubric original character decimal brevity readability composable ambiguity readability important terminal command generate additional indexed shitload crapton optional meaning performance github enterprise pricing example display placeholder compound specify callable console lightweight version enterprise original palette installed console finalize tonight console palette unrecognized template palette webcolor problem convenient responsibility", "pypi_keywords_clean": "ansi color detection escape terminal console sequence cursor style screen shell xterm"}, "gmr/queries": {"git_readme_keywords": "support connection keyword context default information keyword connection information maximum overhead current available installation awesome execute similar asynchronous iterator possible opinionated addition instance various configuration support check library interacting similar popular package additional history difference postgresql simplified generator username database application keyword inspiration connect payload manager meaning pythonic synchronous environment interacting postgresql unicode unicode various internal connection asynchronous support installed dictionary procedure documentation documentation complexity individual postgresql popular ability example username access context manager tornado addition access connection github repository documentation available enhancement pgsqlwrapper", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support connection keyword context default information keyword connection information maximum overhead current available installation awesome execute similar asynchronous iterator possible opinionated addition instance various configuration support check library interacting similar popular package additional history difference postgresql simplified generator username database application keyword inspiration connect payload manager meaning pythonic synchronous environment interacting postgresql unicode unicode various internal connection asynchronous support installed dictionary procedure documentation documentation complexity individual postgresql popular ability example username access context manager tornado addition access connection github repository documentation available enhancement pgsqlwrapper", "pypi_keywords_clean": ""}, "/ezplot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "procedure interface separate executed similar ipython advantage interface matplotlib", "pypi_keywords_clean": ""}, "/jsontemplate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installable javascript release initial public download checkout implementation template language specific declarative template template template order implement multiple official public release development", "pypi_keywords_clean": "json template templating jsontemplate"}, "diefans/implant": {"git_readme_keywords": "procedure python python asyncio container example general separate python example command transferable arbitrary implant asynchronous specific password example implant progress general application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "procedure python python asyncio container example general separate python example command transferable arbitrary implant asynchronous specific password example implant progress general application", "pypi_keywords_clean": "asyncio ssh rpc remote execution dependency injection stdin stdout messaging"}, "blockstack/registrar": {"git_readme_keywords": "mode store file simple param data payment address alice program prefix gaia overview gaia change profile root url future work api gaia return urls provide functionality data decentralization definition principle string page iat date user object getreadurlprefix return able write performance x file param post body whitelist application wish support equal iss association token text epoch content generation document backend read profile iss field data behalf object example get address addressable x gaia node user address choose data salt field number social gaia hubs replicate data deployed service provider private storagetoplevel return alice node blockstack name way gaia charlie want file address read application javascript https driver model data amazon read bob specification change change become example blockstack gaiachallenge equal application storage authorization field blockstack post driver support social proofs marketplace example match gaia associated bucket http file get huburl gaia storage system document address message driver readurl high performance timestamp timestamp page string azure blob different address scheme detail aws azure common storage bob post field authentication hub backend conflict resolution https application scheme authentication format gaia blockstack authentication gaia use iss iss message signature address directory provide social design implementation requirement ability node change https url document future control authentication return prefix field payload user control data gaia new url writer demonstrate page identifier profile fetch functionality hub uploads rate conflict concurrent traditional dns blob storage authentication process comparison gaia urls ip return url hub allow field public variable example backend support readurl storage provide many url gaia public program design decision high availability address post write gaia gaia hub bob data token content operation gaia contentlength number service allow advantage alice profile promise token http write request write data address use data space authentication header write address urls dns gaia approach able read next page string read file match prefix string different backend bucket gaiachallenge guarantee gaia normal web approach decentralization node ip application wish decision operation addition alice hubs private path post application root authentication token authentication jwt associated private publicurl address compete use many fetch practice storagetoplevel path directory param post huburl user choose file size resolution throw system backend promise performdelete contenttype stream become deprecated error conflict invalid delete endpoint authentication data oldestvalidtimestamp timestamp allows backend execution mode addition iss signature publickey program gaia profile payment design philosophy address bob care association string path intermediary storage allows user node service server challenge address namespace file exist figure auth time exp user gaia note exp zonefile change application authentication extra storage predictable performance url zonefile path param location user appropriate structure addition data storage use urls bucket revocation promise list iss exp storage profile url guarantee deprecated future backend driver bearer token want compensation json status authentication flow content stream private hubs hub driver write system delete huburl future design user user document get use last sia storj zonefile fetch storage user charlie cloud behalf alice prefix getreadurlprefix throw error concurrent write deploy hub cryptocurrency work order limit public key performance simplicity read path exp field identity support available hub path choose gaia version allows example service dropbox account client able zonefile read storage driver dns gaia file uploads actual write authentication response caveat user top level practice gaia alice path file location revocation date content performwrite ip address alice control foo readable header bearer example alice dropbox way service bob private key node fetch success post true many url prefix read file provide valid order provide allows client dat ssb dependency dns durability alice prefix reading node public use associated level number hub implementation directory store wish provide server file http api gaia specification way user order usable readable getreadurlprefix section document availability data token jwt status success system store complex brevity ssb user provide hub path exist jwt payload retry storage order able opportunity create work x read url deploy gaia service deployed user data epoch time token message project comparison generate association https profile user use payment node performance extra https able authentication scheme path order object javascript use backend suffix order support modest program store usable web key turn first program jwt association hub server write file storagetoplevel contenttype private hub key key use liberal token specification getreadurlprefix foo dns example support many hub provide capacity hit cloud many different performance high address associated gaia service last writer endpoint get storage api backend storage membership x data error delete use gaia example example availability performance string top return error key sign path foo storage opportunity gaia jwt sigend bucket success choice storage pubkey hex associationtoken jwt http authorization path invalid profile url store data storage provider url application allow auth control user user client internal gaia gaia sia url allows owner association liberal definition cloud addition status json getreadurlprefix storagetoplevel storage application long alice challenge text control gaia time epoch whitelist key scheme allows post data service description control address scheme generate write post fetch file file path change entry request https environment variable payload structure time iat charlie read whitelist address client valid iat cost durability account bob send money x x payload iss durability availability demonstrate control param integer token bearer return list address childtoassociate configuration json uniform api legacy authentication directory hub key read multiple extensible logging level maximum file behalf user field association mode hub storj ipfs validity jwt control section url https param string jwt prefixed gaia provider date date object json key authentication message associated user choice data cloud file read server current example configuration read prefix timestamp epoch path storagetoplevel hub return flow https gigabyte profile application caveat enable exp gaiachallenge amazon bucket service identity provider store deletion file equal server huburl address location childtoassociate equal file exist param hub store entry profile json object use authentication address bucket prefixed bearer write location scheme blockstack local disk second maximum ipfs dat valid authentication user lookup amazon dropbox allows application file https stream contentlength storage hub blockstack ecosystem fetch zonefile user whitelist namespace gaia bucket dropbox specify logging service deploy data alice current storage blockchain level directory current epoch hub configuration string http opinionated claim storage system form request data iat timestamp write path name system path file implement backend json file change gaia bob charlie path bob node replicate namespace blockstack auth token support azure jwt note directory request necessary project different authentication permission allow write return structure bucket owner hubs hub model allows storage format access https access javascript publicurl file gaia support execution associated address spec address path urls timestamp authentication storage marketplace data local field json application url proofs identity capable url user address application basis single user lookup follow many gaia implementation gaia able fetch hubs use effect gaia client figure gaia control configuration file support application path success api blockstack backend provider access control wish use json oldestvalidtimestamp fetch alice cloud storage data x structure payload model gaia specification application auth version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "blockchain bitcoin btc cryptocurrency name registrations data"}, "azavea/django-queryset-csv": {"git_readme_keywords": "perform simple optional keyword default string mechanism complete response precendence default render queryset detailed documentation dictionary mapping possible addition documentation development import qs install positional filename instance djqscsv installation normal different delimiter example follow regular example export attachment append timestamp keyword datetime qs foreign request qs default boolean unicode csvs column delimiter djqscsv djqscsv import technique method import queryset default exporter django authorization queryset response module default dictionary shortcut render", "git_description_clean": "csv exporter django querysets", "git_keywords_clean": "", "pypi_description_keywords": "perform simple optional keyword default string mechanism complete response precendence default render queryset detailed documentation dictionary mapping possible addition documentation development import qs install positional filename instance djqscsv installation normal different delimiter example follow regular example export attachment append timestamp keyword datetime qs foreign request qs default boolean unicode csvs column delimiter djqscsv djqscsv import technique method import queryset default exporter django authorization queryset response module default dictionary shortcut render", "pypi_keywords_clean": "django queryset csv"}, "/postgres": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "docs", "pypi_keywords_clean": ""}, "chukysoria/pyspotify-connect": {"git_readme_keywords": "project connect library version architecture installation library available cpython connect installation install interface library architecture wrapper wrapper libspotify library subscription install package libspotify implementation libffi example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project connect library version architecture installation library available cpython connect installation install interface library architecture wrapper wrapper libspotify library subscription install package libspotify implementation libffi example", "pypi_keywords_clean": "p f c n n e c l b r r"}, "codeinn/vcs": {"git_readme_keywords": "documentation development management abstraction mechanism powerfull support documentation available library directory support various introduction abstraction control", "git_description_clean": "various version control system management abstraction layer python", "git_keywords_clean": "", "pypi_description_keywords": "documentation development management abstraction mechanism powerfull support documentation available library directory support various introduction abstraction control", "pypi_keywords_clean": ""}, "/sword2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sword python", "pypi_keywords_clean": "atom http"}, "dcramer/django-static-compiler": {"git_readme_keywords": "compression application configuration extensionless filename second execute compiliation process responsible project standard compilestatic collectstatic present compiler javascript uncompresed absolute distribution debug output available relative configuration additional several similar templatetag inclusion compatible filename output mimetype debug application relroot relative directory application third output bundle something output extension concatenate general bundle filename library configuration stdout collection compiliation modified debug development proxy django example configuration compiling output filename output absolute output template bunch sourcemap generation debug", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extension sentry cramer license", "pypi_keywords_clean": ""}, "Yelp/dumb-init": {"git_readme_keywords": "package pypi regular process container process multiple building building number signal way integrate minimal container install automated debian rewrite signal machine docker container sigterm apps process service defunct process setsid behavior rewriting option binary caveat feature process behave popular linux entrypoint entrypoint rewriting special sigterm number portion script useful outside signal handler launch docker lightweight building debian systemd sysvinit incorrect handling member background foreground install package common linux behavior example variation system syntax docker supervisor distro package feature job template config responsible process group argument standard signal debian package process server course normal linux recommended way default behavior background graceful cleanup practice install c spawns command normal signal normal sufficient package important attached prefix command session system outside docker custom behavior nothing humane partial command cleanup example simple process work session behavior effect common signal kernel receive prepended instruction command important standard debian wheel archive haskell rewrite special handling behavior pypi example rewrite special number building binary package choose treatment kernel process supervisor original entrypoint partial signal rewriting quirks debian ubuntu example dockerfile interactive common example handle forward available debian unable signal handling pypi available common option install rewrite something c default signal problem phusion c compiler signal sigterm contain python package group reason official transparent compiler sufficient glibc building avoid job control behavior default system kernel alternative alternative install source linux system dockerfile option mesos internal server internal zombie handler signal custom signal directory phusion blog special signal system container available wheel declare entrypoint group useful sufficient forward special treatment docker different linux kernel sigquit number environment variable number sigquit proper available github actual process direct server recommended possibility", "git_description_clean": "minimal init system linux containers", "git_keywords_clean": "docker init dumb c unix", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "svx/sphinxcontrib-osexample": {"git_readme_keywords": "administration javascript multiple ubuntu container documentation install available package manager installation license project example something contribute support install extension osexample extension extension sphinx different restructuredtext domkowski sphinx directive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration javascript multiple ubuntu container documentation install available package manager installation license project example something contribute support install extension osexample extension extension sphinx different restructuredtext domkowski sphinx directive", "pypi_keywords_clean": "sphinx extension"}, "moisespsena/sdag2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project acyclic graph topological sorter python simple graph python graph whith install install detector topological", "pypi_keywords_clean": "utils utilities directed graph digraph topological simple dag"}, "/coremltools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package popular libsvm information tensorflow version framework xgboost libsvm xgboost express watchos protobuf addition integrate particular version xgboost libsvm xgboost environment information license convolutional recurrent learning installation license copyright", "pypi_keywords_clean": ""}, "lsbardel/python-stdnet": {"git_readme_keywords": "database connection minimal server synchronous asynchronous access server awesome package directory flexible schema development backend optional schemas application asynchronous different configurable server version nothing nothing documentation traditional relational limited object database available relational different different github coverage django asynchronous application python important connection numeric memory efficient backend backbone msopentech server database backbone library directory branch database default manager lightweight object distribution directory complex x follow information object different backend language storage bandwidth server install download download uncompress register python language license software asynchronous database mapper version philosophy welcome contribution minimum application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection coverage report minimal server synchronous asynchronous launch awesome package directory flexible schema backend optional schemas application asynchronous different configurable server version nothing nothing documentation traditional relational database access coverage stdnet available relational different different github coverage server philosophy django asynchronous application python important connection numeric memory efficient backend backbone limited development stdnet msopentech server database backbone library directory branch database default manager lightweight object distribution directory complex search follow information object scalar different backend access language storage bandwidth server install download python language download uncompress register license software asynchronous database mapper install package welcome contribution minimum application", "pypi_keywords_clean": ""}, "softlayer/softlayer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "manage various service download source current python import software copyright softlayer endpoint softlayer development library overflow method installation private network python something username command install source source download network installation prettytable import softlayer example system various softlayer python software copyright software softlayer github security development network simple python system report minimal python version library interact interface github public python follow documentation python connection softlayer softlayer library ticket information documentation documentation softlayer private softlayer import available additional installation install request bundled license available linux upgrade python", "pypi_keywords_clean": "softlayer cloud slcli"}, "carlospalol/money": {"git_readme_keywords": "currency currency arithmetic comparison useful suitable exchange installed backend python formatting extensive change currency exchange subclass compatible python release formatting addition subtraction setup extensible currency binary project database specific pattern localization exchange available installed pattern syntax multiplication backend available check currency global default design subtraction division python character invalid access internal project license database several design centralized changing repository excellent system cd package python amount heterogeneous database unicode simple backend character unicode bbb different exchange solution syntax check installation install immutable convention convenient pattern format optional formatting excellent python formatting pattern backend default currency convention hashable automatic currency package compatible localization origin python xmoney fixed percentage numeric version version object priority currency expansion formatting extensible numeric exchange currency formatting currency automatic conversion decimal changing nature mix python important operator currency conversion default formatting python release package installed version development object operate currency xmoney unicode common abstract", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "currency currency arithmetic comparison useful suitable exchange installed backend python formatting required currency exchange different source extensive source branch subclass compatible python release formatting addition subtraction setup extensible currency binary package python project database specific pattern localization exchange available installed pattern syntax multiplication backend available check currency global default design subtraction division python character invalid access internal project license database several design centralized changing important repository excellent system cd package python amount heterogeneous database unicode simple backend character unicode bbb different exchange solution syntax check installation install immutable convention convenient pattern format optional formatting excellent python formatting pattern backend default currency convention hashable automatic currency package compatible localization python xmoney origin target fixed percentage numeric version version object priority currency expansion formatting extensible numeric exchange currency formatting currency automatic conversion decimal mix operator currency conversion default formatting python release package installed version development object operate currency xmoney unicode common abstract", "pypi_keywords_clean": ""}, "woothee/woothee": {"git_readme_keywords": "synopsis copyright tagomori composer require yandex browser equality chromiumu twitterbot mechanism specific language number control golang library applicable license version satoshi tagomoris classpath woothee project firefox python javascript version release control javascript browser license copyright install woothee important software express pattern specifier license specific tagomoris license android webview android implementation release japanese various function blackberry bingpreview crawler project woothee programming languages domestic pattern microsoft version license woothee python tagomori satoshi language implementation trendictionbot crawler number language compliance license", "git_description_clean": "multi languages", "git_keywords_clean": "", "pypi_description_keywords": "install woothee satoshi tagomoris crawler project woothee compliance copyright tagomori software express tagomori satoshi specific language tetsuhiro history woothee useragent category version compatible support firefox applicable implementation project", "pypi_keywords_clean": "web parser"}, "/dash-core-components": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/discover": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package version different pattern shell attempt import switch current syntax discover importerror problem behavior full discovery implemented discover command discover python discovery default discovery pattern directory discover responsible loading method overriden changelog addition argument standard python discover location discovery package directory discovery attempt pattern package pattern matching available discover recurse package script faulty faulty function module several framework method discovery recurse compatible feature example script import wrong location python directory project directory allow regular bash parity python problem package match pattern report different pattern different location feature parity current directory shell attempt module wrong discovery mechanism discover module google development version match full function discover script package pattern entrypoint discover loader example match compatible entrypoint script available failure discovery loader attribute package responsible collector certain mechanism protocol import subclass", "pypi_keywords_clean": "unittest testing tests"}, "/ctypes": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python dynamic manipulate", "pypi_keywords_clean": ""}, "demianbrecht/sanction": {"git_readme_keywords": "development permission approval keyboard authoritative permission available readthedocs", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "deprecation permission approval minimal keyboard sanction python endpoint authoritative permission development python sanction prevent certain exclude request feature instance sanction version feature coverage public updated request python support breakage sanction authoritative callable transport facebook formatted provider parameter simplify request support decorator google support multiple available readthedocs", "pypi_keywords_clean": "python"}, "ajkxyz/jpeg4py": {"git_readme_keywords": "package thread installer official library possible ubuntu simplified license samsung compatible installation example license copyright python library turbojpeg directory repository install python python libturbojpeg package python interpreter turbojpeg download installer official sourceforge sourceforge repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pallets/itsdangerous": {"git_readme_keywords": "itsdangerous itsdangerous popular documentation timestamp organization community various tampered possible possible customize coverage example", "git_description_clean": "safely pass trusted data untrusted environments back", "git_keywords_clean": "python security hmac serialization itsdangerous", "pypi_description_keywords": "itsdangerous itsdangerous popular documentation timestamp organization community various tampered possible possible customize coverage example", "pypi_keywords_clean": ""}, "willyg302/clip-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "zopefoundation/zeo": {"git_readme_keywords": "mode mode write commit client address stop option zeo true verify storage create hostname interval configure client unusual commit client cache python prompt available connection arbitrary message client single storage server replay optional address client key certificate path ssl certificate address host verify host fetch network start zeo portion address true value zodb zeo timeout seconds signify unix likely client number python documentation clientstorage zeo cache persistent setting cache ssl zeo server transaction top tcp db connection transaction commit full storage shorthand db conflict resolution timeout transaction awkward position server use second phase read information server address server start processing disk unusual database server use server view database log configuration space zeo zeo clientstorage message cause python process message invalidation cache client configuration format zeo installation use zeo network cache hang transaction discard object process storage storage instance server ssl see information documentation setting connection available use serialize right threshold connection value setting storage section connection server mode individual invalidation queue aborted transaction transaction aborted connection database format similar queue server disk fetch seconds tolerate client connection zeo address aborted server server zodb zeo section cache consistency cache zeo use valid ssl key phase commit client server consistent view key path process client hierarchical client certificate valid receive default server dynamic seconds transaction subsequent second transaction allow server history end transaction storage option cache verification dynamic address hang server zodb connection zeo server load server document resolution option unable commit custom protocol complete single average tolerate heavy configuration subsection path ssl timeout threshold server example commit timer server host apache configuration change client boolean setting zeo protocol see list connection single store message transaction history server configuration server authenticate writable mode listen form load slow server certificate memory server example ssl temporary pip server server n queue heavy load valid zodb server start little configure ssl possible configure server point use process possible configuration zeo persistent transient connection management unix domain able verify high storage server client discard ip address verify cache way value address queue recent position timeout introduction several false address hostname db addr queue small software zeo object cache exit python client transaction hostname portion authenticate see client storage connection pathname zeo client list address server operation server address particular database fly shorthand operation zodb storage server identical section storage transient cache persistent cache ssl import support specify receive invalidation server listen queue invalidation form client false msgpack key key end transaction python packaging ssl configuration maximum amount management zeo cause client connection exit socket connection long complete see documentation zeo database commit process queue hand true server behavior zeo certificate number authenticate path server store format individual pack server python prompt import similar apache domain socket server unable specify path operation storage long client writing cache invalidation hurt performance configuration script import zodb processing client zodb db certificate authentication function see disk space listen full server mode support client option client panic message serialize zeo big object extreme client storage lock server see address flag shut server large queue custom format queue zeo password authenticate database setting authenticate server setting boolean multiple poll connection single address small hurt example format parameter script example configuration client hang hung import zeo certificate client available possible identical content server available default behavior timestamp recent address option efficient iteration satisfy single transaction connection addr create zeo specify directory use ssl stop function small client addr connection installation script verification client log panic storage configuration configuration last n address address long importable function addr zodb password authenticate client server process msgpack use hang commit python package connection zeo section use addr import maximum signify connection transaction timeout client log invalidation many configure hand large invalidation message short period zeo storage optional memory client content use recent invalidation see server multiple server aborted flag blob support configuration see server communicate unlock key event log enable configure important option", "git_description_clean": "zodb framework", "git_keywords_clean": "zodb database", "pypi_description_keywords": "mode write commit client address stop fix assignment option zeo due many cache size authentication protocol true verify file maximum storage create separate zeo hostname setting changelog configure client hoc server unusual commit client cache port assignment drop support version host name cost writing python prompt available connection method prefetch message client single storage client disconnect server replay optional address age high client key certificate path ssl certificate performance python address host change allow verify host fetch network start zeo portion address true value configuration option pass option zodb zeo zeo release timeout seconds signify unix likely client number python documentation clientstorage zeo client protocol port zeo cache persistent setting cache ssl zeo server transaction top tcp part zeo db connection transaction commit full storage fixed ssl shorthand db conflict resolution unix socket timeout transaction start transaction dynamic port awkward position server use second phase zeo network attribute storageserver fix major read use file information server client suppprt zookeeper database name server see zeo log file work subsequent address server start processing disk unusual database server use server false note view database time interval log configuration age client space zeo zeo clientstorage message cause little time python process time commit message invalidation cache client configuration format zeo installation use zeo network cache load default fix attributeerror bind port hang transaction discard object process storage python version deprecated untested storage instance server ssl monitor server extra round see information documentation setting connection available use serialize excess random information zookeeper threshold connection value setting storage section connection server mode individual time seconds delay avoid invalidation queue database client invalidation age aborted transaction transaction aborted connection database caller block format similar name importable queue server disk fetch seconds tolerate recent breakage support server trip cache file storage untested zeoctl performance improvement client connection zeo address end file relied test unsupported python round trip aborted server server zodb awkward due zeo section cache consistency cache zeo use valid storageserver creation optional conflict ssl key path name phase commit client server update address consistent view pickle protocol rpc key path process client allowes zeo hierarchical client certificate valid receive performance pypy connect arbitrary changelog add clientstorage prefetch server dynamic seconds transaction internal clean zeo cache second transaction allow server history end transaction storage option zeo revision cache verification dynamic address zeo work zodb python attributeerror object hang server zodb connection zeo server avoid extra load server support pypy file client resolution option unable commit cost commit server relied custom protocol file name complete single average operate mode ssl fixed tolerate heavy zodb add assignment bind configuration subsection path ssl timeout threshold server example see fixed commit timer value client server host recent transaction see disallow due server apache configuration client avoid change client boolean setting zeo protocol see list option constructor connection single name zeo store message transaction history server configuration regard load server authenticate writable mode listen form server full ordinary zeo load slow server certificate memory server time maximum example ssl pass plugin temporary pip allow brief server server implementation new n queue log log heavy load valid zodb server start little server age possible configure configure ssl network protocol pypy see server point necessary compatibility use process avoid commit time possible socket address configuration zeo time object future persistent transient sense version see python see wait outstanding connection management unix domain seconds wait wait transaction compatibility python able verify force server storage server right size client discard ip address verify cache example update way value address queue recent position timeout limited time certificate file introduction several prefetch method custom zeo address hostname keyword error db addr deprecated method fixed zeo queue small software zeo object cache doc fix exit python client transaction hostname portion time client authenticate see enumeration zeo client storage connection pathname zeo client list address server operation server address particular database setting session fly shorthand server log operation support assign zodb storage work change server identical client mearly work zodb section storage transient cache persistent cache ssl import support specify receive invalidation server listen argument force consume queue invalidation add support new client server status travis ci fix zeo zodb transaction lock allowes form client constructor argument false msgpack size right key key end transaction python packaging ssl configuration maximum amount management zeo long time file document cause client form port server round connection exit port signify key file socket connection long complete see documentation zeo database commit process queue hand true server behavior zeo certificate number fixed work change zodb authenticate path transaction sort server store format individual server python prompt import similar apache domain socket server unable utilize current specify path operation storage new authentication long client cache invalidation zeo unsupported hurt performance configuration script import zodb processing client protocol implementation maximum age zodb db certificate authentication server security cache prefetch function see disk space server case listen full server mode zodb server support python support client last transaction option client address enumeration panic message synchronous zeo zeo port serialize zeo big client connect support optional server time extreme client storage lock runtime server see favor ssl client zeo amount time address flag shut server large queue custom format queue zeo password authenticate database setting authenticate server setting boolean file directory multiple address information poll connection server support single address pypy add small hurt example format parameter sort recent script size invalidation example configuration client hang hung writable note error new request fixed deprecated import zeo certificate client server operate ssl support available possible identical content server available zeo object default behavior timestamp recent size small protocol python connect major object true log message time separate address option server someday efficient iteration satisfy caller later single transaction connection addr create zeo specify directory line use ssl unable connect stop function point cost small client addr connection ability pass installation script assignment keyword verification client log panic storage configuration zodb fixed ssl note zeo monitor path file configuration last n change server full cache disallow passing ad hoc address address load lock long importable function addr zodb port listen password zeo authentication authenticate client object id server process object attribute python python major zeo msgpack use hang commit work recent python package status zeo connection zeo section use case invalidation addr import storage last signify connection transaction timeout client log invalidation many configure hand large invalidation message connect process format line short period zeo storage optional memory client content use recent invalidation see server multiple server zodb allow period time small performance aborted flag default size configuration file zodb fix note pack someday pass blob support configuration see compatibility zodb server communicate python fix unlock key event log enable configure zeoctl script prefetch object multi address es see doc important option", "pypi_keywords_clean": "database zodb"}, "jaraco/jaraco-functools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "image additional", "pypi_keywords_clean": ""}, "/django-redux": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project redux quickstart entry action redux redux bridge bridge django django redux", "pypi_keywords_clean": ""}, "/modestmaps": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/psq": {"git_readme_keywords": "interactive interpreter similar similar interpreter function python function enqueue tasks worker useful batch support solution broadcast client library result global context upgrading software pubsub client execute enqueued flask contexts publisher subscriber multiple constructor default decorator minimal configuration project similar configuration implementation solution broadcast support library demonstrating function importable context available subscriber project worker batch similar database python implementation execute directory python broadcast google cloud apache production normal support return scalable reliable python official google contributing server official client python enqueue inspiration installation psq cloud configure storage completion worker execute possible cloud something directory tasks product experimental storage solution cloud platform available tasks delivery python storage importable worker allow gevent worker cloud official worker import storage support authentication google installation install function string context manager tasks useful context worker google product example python context global python flask function worker", "git_description_clean": "cloud task queue python", "git_keywords_clean": "", "pypi_description_keywords": "interactive interpreter similar similar interpreter function python function enqueue tasks worker useful batch support solution broadcast client library result global context upgrading software pubsub client execute enqueued flask contexts publisher subscriber multiple constructor default decorator minimal configuration project similar configuration implementation solution broadcast support library demonstrating function importable context available subscriber project worker batch similar database python implementation execute directory python broadcast google cloud apache production normal support return scalable reliable python official google contributing server official client python enqueue inspiration installation psq cloud configure storage completion worker execute possible cloud something directory tasks product experimental storage solution cloud platform available tasks delivery python storage importable worker allow gevent worker cloud official worker import storage support authentication google installation install function string context manager tasks useful context worker google product example python context global python flask function worker", "pypi_keywords_clean": "queue tasks background worker"}, "/mediatumbabel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "repository installation mediatumbabel branch", "pypi_keywords_clean": "babel pybabel mediatum"}, "rbarrois/django-factory-boy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project instance factory available keyword behavior django django example factory request constructor example support python detailed normal django", "pypi_keywords_clean": "django fixtures"}, "/django-downloadview": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python storage download bugtracker continuous integration roadmap objectdownloadview generation documentation repository bugtracker document continuous integration filesystem example", "pypi_keywords_clean": "file stream download filefield imagefield sendfile offload"}, "/zict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "zict mutable", "pypi_keywords_clean": "mutable mapping dict dask"}, "hustlzp/permission": {"git_readme_keywords": "defined exception permission override python class execute permission simple control flask creator administrator flexible support installation execution statement override instance inheritance thing simple flexible context permission method inject defined thing python check determine inheritance bitwise class flexible forum flask way import import exception permission check administrator flexible permission build forum class inheritance permission control decorator build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "defined exception permission override flask topic topic creator python class html execute define control flask creator administrator flexible support py license installation order execution statement py define override instance usage inheritance thing simple flexible context permission method inject defined thing python check determine inheritance bitwise class flexible forum flask way import permission import exception permission check ruleb administrator flexible permission flask app build forum class inheritance permission control decorator build", "pypi_keywords_clean": ""}, "niwibe/djorm-ext-pgbytea": {"git_readme_keywords": "package version support django version install install example usefull", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package version support django version install install example usefull", "pypi_keywords_clean": ""}, "/django-libs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "brochhaus independent description kickstart platform reusable kickstart", "pypi_keywords_clean": ""}, "powellc/django-articles-addons": {"git_readme_keywords": "development license project andrewebdev excellent author management miscellaneous specific cardinal", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "development license project andrewebdev excellent author management miscellaneous specific cardinal", "pypi_keywords_clean": ""}, "vodik/pytest-exceptional": {"git_readme_keywords": "appveyor categorization software welcome cumbersome example consider detailed description straightforward presentation request license prototype exception installation coverage specific exception", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor categorization software welcome cumbersome example consider detailed description straightforward presentation request license prototype exception installation coverage specific exception", "pypi_keywords_clean": ""}, "rytis/minirest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nitely/django-djconfig": {"git_readme_keywords": "regular license djconfig djconfig documentation database djconfig library dynamic global compatibility python custom regular", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "info", "pypi_keywords_clean": ""}, "fsinfuhh/django-simple-csp": {"git_readme_keywords": "simple middleware example config inline define header report additional loaded variable chromium javascript example django", "git_description_clean": "simple csp middleware template tags django", "git_keywords_clean": "django csp", "pypi_description_keywords": "simple middleware example config inline define header report additional loaded variable chromium javascript example django", "pypi_keywords_clean": ""}, "c-w/gutenberg": {"git_readme_keywords": "default sleepycat version example interface package example ubuntu commercial license language processing fuseki server corpus linguistic project commercial variable http simple complete subsequent docker sourcecode username password standard library http endpoint license install favourite python custom location linguistic processing sourcecode python sh python download wheel license checkout gutenberg python repository sourcecode wheel install sourcecode sh install sourcecode populate example download version license stricter package manager sleepycat backend comply license processing functionality modify package version accessible package manager sourcecode python version public happy comply project gutenberg variety version anything python sourcecode install everything process machine gutenberg overview authentication development fuseki functionality texts alternative backend python http fuseki backend manager example project license texts project bsddb module distribution package function exception populate http interface backend package fuseki alternative server http environment variable populate natural language example python overview package python package python standard stricter project installation project bunch endpoint fuseki responsibility gutenberg corpus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default sleepycat version example interface package example ubuntu commercial license language processing corpus linguistic project commercial backend complete subsequent switch backend standard library license install favourite python linguistic processing location sourcecode python download wheel license checkout gutenberg python repository sourcecode wheel install install sourcecode populate example sleepycat backend download version license stricter package manager comply license processing functionality modify package version accessible package manager sourcecode python version public happy comply project gutenberg variety version anything python sourcecode install everything process machine gutenberg overview bsddb functionality python http manager example function switch project license distribution package download download exception populate http interface environment variable populate natural language example python overview package python package python standard stricter project installation project responsibility gutenberg corpus", "pypi_keywords_clean": ""}, "ojarva/flask-restful-url-generator": {"git_readme_keywords": "urllist flask import resource install import urllist flask import import flask endpoint available installation generator define", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "urllist flask import resource install import urllist flask import import flask endpoint available installation generator define", "pypi_keywords_clean": "flask restful"}, "/diazo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dynamic website loechel cssselect response output interface legacy attribute content javascript technology syntax favourite multiple disparate changelog response inclusion detailed documentation tracywebtech gforcada experience ebrehault absolute nodeset davidjb support prefix support output lentinj possible detailed content prevent mitchellrj generate absolute prefix lentinj several boolean familiar content ebrehault huubbouma support wsgiresolver exception unthemed response application console python python support support regebro cleanup string variable helpful prevent multiple integrate common directory compatibility python wireframe release unicode redesign lentinj output entirety danjacka output davidjb access original davidjb definition formencode method complex prefix relative designer namespace condition datakurre preserve middleware python icemac python pbauer static", "pypi_keywords_clean": "web theming"}, "RIPE-NCC/ripe-atlas-tools": {"git_readme_keywords": "contribute traceroute measurement explorer config suggestion magellan configuration magellan official command connect magellan memory colophon project documentation status generate simple contribute colophon conform documentation everything", "git_description_clean": "official client ripe atlas", "git_keywords_clean": "python", "pypi_description_keywords": "contribute explorer traceroute renderer suggestion magellan release history different destination support reality configuration command generate compact contribute colophon additional argument traceroute measurement renderer plugable connect colophon project support creation necessary additional documentation unicode various consistent implementation additional renderer initial release cousteau library magellan official implementation renderer renderer conform plugable architecture documentation everything", "pypi_keywords_clean": "ripe ripe ncc ripe atlas command line"}, "ericsomdahl/python-bittrex": {"git_readme_keywords": "folder structure python generated bittrex access visible documentation interest access account integration release documentation golang unofficial official installation example development bittrex", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Binstar/binstar": {"git_readme_keywords": "anaconda install documentation command account anaconda interface anaconda quickstart account whoami command tutorial building source complete tutorial command complete", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "cdown/srt": {"git_readme_keywords": "number manipulate generic information library featureful library quickstart standard library quickstart hypothesis support unicode compliant library available available version github coverage example manipulate process english french fullwidth chinese french development version library tolerant library parsing directory information subtitle chinese quality installation install production process quickstart overview library portable lightweight chinese english intuitive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "number manipulate generic information library featureful library quickstart standard library quickstart hypothesis support unicode compliant library available available version github coverage example manipulate process english french fullwidth chinese french development version library tolerant library parsing directory information subtitle chinese quality installation install production process quickstart overview library portable lightweight chinese english intuitive", "pypi_keywords_clean": "srt"}, "/phatbeat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "prevent unstable initial release python library unstable output clock prevent reversed optional bugfix initialisation prevent attach handler", "pypi_keywords_clean": "raspberry pi led"}, "bird-house/birdhousebuilder-recipe-supervisor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "foreground supervisor prefix anaconda supervisord example env user option configuration user chown option added child conda channel added supervisord buildout unix prefix user buildout update info buildout myapp app travis build monitor access option supervisor http monitor prefix installation optional default application buildout buildout option prefix recipe intallation folder password http recipe configure example usage program configuration variable variable added env restart service default stopwaitsecs install package stderr optional separation installation update conda username http user program conda prefix default autostart supervisord added conda environment additional default program enable http installation default supervisor configuration priority priority import myapp recipe ignore temp logfile stderr default info level default killasgroup kill workaround kill section prefix anaconda installation program section project usage access default supervisor config enviroment supervisor package conda interface default service command github license monitor interface update ignore default killasgroup recipe prefix ehbrecht ehbrecht bugfix directory recipe install added option default startsecs default buildout myapp prefix deployment conda enviroment channel conda program myapp anaconda initial release default autorestart user directory supervisor log deployment option directory directory added user chown option supervisor service unix myapp folder default directory default autorestart restart log level default user user logname user deployment folder anaconda username password web application installation prefix introduction recipe documentation installation folder service directory directory command service intallation myapp command conda buildout variable separation usage recipe command buildout default logfile supervisord foreground app directory env variable configuration web environment variable option initial prefix bugfix service optional command command", "pypi_keywords_clean": "buildout recipe supervisor birdhouse conda anaconda"}, "mozilla/jupyter-notebook-gist": {"git_readme_keywords": "follow installation secret enable extension python packaging folder configure bunch python configuration available github manual coverage example follow different extension application jupyter important check location system append uninstall extension directory secret command continuous integration manager jupyter notebook quality installation install", "git_description_clean": "create list load github gists jupyter notebooks", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "PX4/pyulog": {"git_readme_keywords": "installation package console convert development install syntax installation source extract provided command support computer csv package manager command install example output present install convert display format kml pyulog repository output console source development package link installation installation manager installation display information output display python package output extract module python system install package", "git_description_clean": "python module scripts ulog files", "git_keywords_clean": "", "pypi_description_keywords": "format autopilot middleware", "pypi_keywords_clean": ""}, "/tooldog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "biotools galaxy xml cwl"}, "napalm-automation/napalm-iosxr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "rbarrois/xworkflows": {"git_readme_keywords": "package python python python license wheel repository transition version library example define", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package library custom transition repository example define", "pypi_keywords_clean": "workflow state machine automaton"}, "supervisor/meld3": {"git_readme_keywords": "winkler variation template markup source encoding elementtree library template parseable encoding argument document source pymeld rationale install function function system python programmer element output celementtree lxml possible input checked compact textual content thediv output single document overview function transform unused various hindle pymeld richie hindle script namespace declaration forth variation output result encoding implementation wish empty shortcut sequence argument default dictionary argument pymeld work stomp designer replaced dynamic frederik css turned element namespace element logic separate argument empty argument support treatise method sequence parser pipeline option noshade nowrap installation xhtml output duplicate element consider attribute method dictionary filelike object doctype overridden foo thediv document designer namespace pymeld content script parseable script repeat content overridden argument xhtml doctype bicking default possible look source document pattern variation richie balanced markup dynamic entity function output instance programmer stomp namespace specification doctype declaration declaration identification support elementtree feature scenario multiple nohref thediv noresize noshade input turned valueerror xhtml nondefault specific present source example template namespace identifier default serialization namespaced input isindex optional encoding rationale possible avoid separate namespace compact declare input output nohref noresize ismap multiple element example identifier worst look template template good method element boolean optional consider variable basefont br xmlns foo qualify dynamic content empty textarea wish render textarea element internal elementtree support various", "git_description_clean": "templating system used supervisor", "git_keywords_clean": "", "pypi_description_keywords": "winkler variation template markup source encoding elementtree library template parseable encoding argument document source pymeld rationale install function function system python programmer element output celementtree lxml possible input checked compact textual content thediv output single document overview function transform unused various hindle pymeld richie hindle script namespace declaration forth variation output result encoding implementation wish empty shortcut sequence argument default dictionary argument pymeld work stomp designer replaced dynamic frederik css turned element namespace element logic separate argument empty argument support treatise method sequence parser pipeline option noshade nowrap installation xhtml output duplicate element consider attribute method dictionary filelike object doctype overridden foo thediv document designer namespace pymeld content script parseable script repeat content overridden argument xhtml doctype bicking default possible look source document pattern variation richie balanced markup dynamic entity function output instance programmer stomp namespace specification doctype declaration declaration identification support elementtree feature scenario multiple nohref thediv noresize noshade input turned valueerror xhtml nondefault specific present source example template namespace identifier default serialization namespaced input isindex optional encoding rationale possible avoid separate namespace compact declare input output nohref noresize ismap multiple element example identifier worst look template template good method element boolean optional consider variable basefont br xmlns foo qualify dynamic content empty textarea wish render textarea element internal elementtree support various", "pypi_keywords_clean": ""}, "drcloud/magiclog": {"git_readme_keywords": "handler python customize package library author message extended format format application library background library logging format logging information logging executable situation syslog configure discovery logging syslog", "git_description_clean": "simple automatic logger configuration python", "git_keywords_clean": "", "pypi_description_keywords": "handler python customize package library author message extended format format application library background library logging format logging information logging executable situation syslog configure discovery logging syslog", "pypi_keywords_clean": ""}, "chrissimpkins/mkdocs-cinder": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nvbn/django-bower": {"git_readme_keywords": "current solution problem documentation installation python specify opinionated project unopinionated solution absolute install package package manager staticfinder python package dependency coverage example production python problem package python support system package management different installation install python download management command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "current solution problem documentation installation python specify opinionated project unopinionated solution absolute install package package manager staticfinder python package dependency coverage example production python problem package python support system package management different installation install python download management command", "pypi_keywords_clean": ""}, "/stevedore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application software stevedore documentation repetitive library extension mechanism configure", "pypi_keywords_clean": ""}, "rhlobo/bigtempo": {"git_readme_keywords": "package applyed issuetracker contribute download compatibility tracker implementation project directory distributed processment example project integration integration scalability support distributed fashion multiple artificial intelligence library ubuntu development temporal analysis instance processing support quadrillion interdependent philosophy lazyload command available evaluation temporal processment optional address plumbing github coverage virtualenv machine software process framework processment temporal exploration flexible understandment performatic possible analysis colleague directory bigtempo repository contract contact analysis scalable distributed processing complex processment quadrillion discussion fashion philosophy defined measure installation install zookeeper zeromq dependency package scalable distributed install bigtempo exploration analysis datasource package workflow management request decoupled dependency resolution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package defined applyed download zookeeper compatibility issuetracker contribute tracker implementation project directory distributed processment example project integration integration scalability support distributed fashion multiple artificial intelligence library development temporal analysis instance processing support quadrillion interdependent philosophy lazyload command available evaluation temporal processment optional address plumbing github coverage virtualenv software process framework processment temporal exploration flexible understandment performatic possible analysis colleague directory bigtempo repository contract analysis scalable distributed processing complex processment quadrillion discussion fashion philosophy installation install dependency package scalable distributed install bigtempo exploration analysis datasource package workflow management request decoupled dependency resolution", "pypi_keywords_clean": ""}, "platypus-creation/django-rosetta-grappelli": {"git_readme_keywords": "package maintainer django compatible compatibility template template rosetta support current support django current django installation rosetta grappelli original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "biocommons/bioutils": {"git_readme_keywords": "packages lookup environment variable common request", "git_description_clean": "provides common tools lookup tables used primarily hgvs uta packages", "git_keywords_clean": "bioinformatics", "pypi_description_keywords": "packages lookup environment variable common request", "pypi_keywords_clean": "bioinformatics"}, "landscapeio/pylint-celery": {"git_readme_keywords": "pylint plugin analysis pylint prospector license available prospector available license callable license celery", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pylint celery plugin"}, "martsberger/django-pivot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compound column split region parameter aggregate columns region way multiple column optional header shipped region combination function function fitness particular notice permission liable claim histogram function order action contract argument model combination region double underscore interested average lowercase return february database heavy necessary record notation traverse avg pivot distribute sublicense restriction iterable output result result sql connection software function library region attribute average number aggregate sum default third column return null limitation region gender example pivot copyright target datetime sql return noninfringement event region particular datetime import sum basic golf parameter histogram aggregate third avg aggregation software permit computed column copyright notice heavy lifting model single return pivot import f pivot original optional parameter pivot function sqlite backend copy modify import avg aggregation function timedelta gender column know average model attribute result valuesqueryset model region average order particular region merchantability fitness subject copy software function import columns aggregate particular know underscore notation function pivot current environment f f liability dictionary total permission queryset manager parameter pivot warranty summary result region model region ship u installation permission notice particular purpose argument pivot manager result django current result charge person possible environment license columns example fancy single query pivot result documentation several single attribute pivot pivot python ship limited express substantial purpose noninfringement north south version django directory traverse foreign installed apps django double publish distribute value column single column f avg column example django package model queryset sqlite girls column software software", "pypi_keywords_clean": ""}, "py-bson/bson": {"git_readme_keywords": "python sourcecode python message python install python import independent pymongo project quick import monkey mongodb version apache installation sourcecode network apache license license installation objectid implementation", "git_description_clean": "independent bson codec python depend mongodb", "git_keywords_clean": "", "pypi_description_keywords": "mongodb independent", "pypi_keywords_clean": "bson codec"}, "/r": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "djaodjin/djaodjin-extended-templates": {"git_readme_keywords": "virtualenv environment compatibility sendtestemail install environment install appropriate rendering dependency dependency weasyprint simplify generation repository development configure", "git_description_clean": "djaodjin template wrappers html email pdf templates", "git_keywords_clean": "", "pypi_description_keywords": "virtualenv environment compatibility sendtestemail install environment install appropriate rendering dependency dependency weasyprint simplify generation repository development configure", "pypi_keywords_clean": ""}, "google/transitfeed": {"git_readme_keywords": "transit documentation installation library validate transitfeed mailing", "git_description_clean": "python library reading validating writing transit schedule information gtfs format", "git_keywords_clean": "", "pypi_description_keywords": "exporter library display", "pypi_keywords_clean": ""}, "FabriceSalvaire/intervalarithmetic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fabrice salvaire package documentation ipython numpy license python intervalarithmetic source interval interval arithmetic section documentation intervalarithmetic python version coverage install overview intervalarithmetic intervalarithmetic license sphinx python version version github intervalarithmetic intervalarithmetic status arithmetic package profile documentation documentation matplotlib documentation available", "pypi_keywords_clean": "interval arithmetic"}, "/more-jinja2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "morepath extension instance initial public integration morepath documentation configuration template language object behavior template support import extension morepath template integration subdirectory public release actual release example", "pypi_keywords_clean": "morepath"}, "albertyw/syspath": {"git_readme_keywords": "syspath status status syspath append current repository development syspath syspath package common directory import python shortcut variable import syspath publishing manipulation installation python append", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "syspath status status syspath append current repository development syspath syspath package common directory import python shortcut variable import syspath publishing manipulation installation python append", "pypi_keywords_clean": ""}, "/sopel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python simple extendible utility", "pypi_keywords_clean": ""}, "SimonSapin/flask-flatpages": {"git_readme_keywords": "documentation application github relational database", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation application github relational database", "pypi_keywords_clean": ""}, "s-m-i-t-a/flask-cdn-ng": {"git_readme_keywords": "documentation static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cdn static", "pypi_keywords_clean": ""}, "tarkatronic/django-ssl-auth": {"git_readme_keywords": "private keychain restart ngninx license configuration finnish django freenode install install middleware django version coverage application directory integration certificate authentication backend python install release thejoey django example configuration unicorn backend middleware available google", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "private keychain restart ngninx license configuration finnish django freenode install install middleware django version coverage application directory integration certificate authentication backend python install release thejoey django example configuration unicorn backend middleware available google", "pypi_keywords_clean": ""}, "sefakilic/goodreads": {"git_readme_keywords": "package different developer anything development package directory welcome submit additional feature project instance documentation database github license acknowledgment particular authorize function information feature license installation install interface access request authorization permission application package contribution method contribute package command package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package different developer anything development package directory welcome submit additional feature instance documentation database github license acknowledgment command package particular authorize function information feature license installation install interface access request authorization permission application package contribution method contribute package group", "pypi_keywords_clean": "goodreads api"}, "smathot/python-qprogedit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "unaguil/sphinxcontrib-swaggerdoc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "remote swagger python restructuredtext swagger swagger description directive swagger bash sphinx extension install documentation generation generation example restructuredtext local restructuredtext example multiple directive swagger", "pypi_keywords_clean": ""}, "pantsbuild/pantsbuild-pants-testinfra": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dockerfile python subclass partitionedtestrunnertaskmixin upgrade manual notimplementederror advance concatenation cleanup filespec traceid meantime unnecessary runtime utility check command unionrule product refactor deduplicate testbase revert unnecessary subsystem documentation document describes implicit mustache figure awslambda contrib algebraic resettable runtime check requirement platform default python buildfileaddressmapper version support publish awslambda irrelevant console possible release typeconstraint typeid bootstrap extraction implementation performance compose readable selection jvmcompile usages typeconstraint compile docker python python gitdir release support platform declarative abstractmethod extract register python interpreter ownership check distribution selection linux", "pypi_keywords_clean": ""}, "frederic-beaupere/rvt-detector": {"git_readme_keywords": "simple helper transmissiondata", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple helper transmissiondata", "pypi_keywords_clean": ""}, "cbmi/django-sts": {"git_readme_keywords": "implement immediate seamless integration boilerplate example generic foreign library various manager abstract framework generic transition", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implement immediate seamless integration boilerplate example generic foreign library various manager abstract framework generic transition", "pypi_keywords_clean": "fsm state machine transition django"}, "aparrish/tracery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript undefined command obligatory foreseeable repository branch possible tracery python tracery grammar output example license javascript version grammar javascript wonderful python python translation output example translation official information tracery official repository branch installation release tracery original release github javascript package license history initial release python generative recursive expansion history obligatory", "pypi_keywords_clean": "tracery"}, "enthought/traitsui": {"git_readme_keywords": "download support visualization wxpython abstraction traitsui project documentation additional straightforward available framework traitsui optional installation example important specify tutorial particular environment repository traitsui specify traitsui", "git_description_clean": "traitsui windowing framework", "git_keywords_clean": "", "pypi_description_keywords": "download support visualization wxpython abstraction traitsui project documentation additional straightforward available framework traitsui optional installation example important specify tutorial particular environment repository traitsui specify traitsui", "pypi_keywords_clean": ""}, "/soloprocess": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "untergeek/es-client": {"git_readme_keywords": "validation configuration unacceptable parameter acceptable unknown credential collection anything necessary connection elasticsearch library detection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "validation configuration unacceptable parameter acceptable unknown credential collection anything necessary connection elasticsearch library detection", "pypi_keywords_clean": "elasticsearch"}, "Kapiche/caterpillar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package installation information traditional information language processing roadmap caterpillar undergo substantial markup representation caterpillar installation useful textual copyright library information retrieval information example indexwriter serialisation schemas pluggable caterpillar caterpillar transaction support concurrency additional permission volatile fitness particular additional representation different merchantability fitness warranty merchantability coverage public example software foundation dependency reporting particular comply extraction architecture caterpillar copyright licensed software redistribute algorithm integrate serialisation documentation documentation information program particular purpose bdfls willing warranty natural language program advanced approach integrate transactional multilingual tokenisation copyright kapiche extraction approach requirement", "pypi_keywords_clean": "indexing text analytics"}, "aburrell/apexpy": {"git_readme_keywords": "package smooth wheel codacy system conversion documentation status build status overview python scrutinizer status license quick richmond ionospheric numpy installation location install trouble command quality status package monthly libgfortran gfortran compact representation apexpy build software fortran library geomagnetism geoelectricity release coverage status richmond build apexpy documentation documentation appveyor build object journal geomagnetism geodetic magnetic version libgfortran", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compliance smooth implimentation codacy build status overview python scrutinizer status changelog character license quick richmond ionospheric numpy installation emmert richmond install installation conversion command geocentric geodetic quality status package monthly fortran compiler compact representation software geodetic conversion fortran library geomagnetism geoelectricity release coverage status richmond function documentation documentation initial release richmond subsolar appveyor build object journal geomagnetism feedback conversion subsolar preserve library emmert allowable compatibility initial geodetic magnetic documentation status", "pypi_keywords_clean": "apex modified apex quasi dipole coordinates magnetic coordinates mlt magnetic local time conversion converting"}, "tr3buchet/twiceredis": {"git_readme_keywords": "handle message handle python afterward listener twiceredis durable message pubsub flight keepalive stuff attempt matter customization string possible backed separate addition afterward reconnection check example iteration processing crazy durable check instantiation standard iterate backed removed processing connection backed transaction message twiceredis python listener inefficient example handler recommend handler ignore python exception number sentinel connection connect manage individual environment different function block listener persistent definition default custom handler implement pseudo sentinel backed random sentinel connection handling default handler nothing function superfluous passive firewall timeouts different conjunction disconnect message listener painful handle connection maintenance object specific previous example sentinel service python connect handling socket durable install aliased utilizes subclass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "handle message handle python afterward listener twiceredis durable message pubsub flight keepalive stuff attempt matter customization string possible backed separate addition afterward reconnection check example iteration processing crazy durable check instantiation standard iterate backed removed processing connection backed transaction message twiceredis python listener inefficient example handler recommend handler ignore python exception number sentinel connection connect manage individual environment different function block listener persistent definition default custom handler implement pseudo sentinel backed random sentinel connection handling default handler nothing function superfluous passive firewall timeouts different conjunction disconnect message listener painful handle connection maintenance object specific previous example sentinel service python connect handling socket durable install aliased utilizes subclass", "pypi_keywords_clean": "redis"}, "/navadd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "trac navigation main meta"}, "/teleport": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation teleport code teleport check python implementation teleport python install teleport", "pypi_keywords_clean": ""}, "etingof/pyasn1": {"git_readme_keywords": "package complexity something release information implementation suitable serialisation problem technology internet language specific library serialised luxury compact efficient question specification support particular initialize structure unbounded complexity documentation similar network structure example different serialised emulate available internet etingof internet package description upcoming release generic implementation represent dubuisson compliant quality introspect compiler abstract pythonista something compact particular protocol communication heterogeneous problem solution introduced upcoming", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation", "pypi_keywords_clean": ""}, "google/brotli": {"git_readme_keywords": "introduction compression benchmark default lossless compression specification javascript available compression unstable squash install version development variant algorithm configure combination license configuration install similar homberger output squash compression decoder implementation comparable benchmark unstable benchmark related decoder encoder dominik homberger python install compression specification context compression algorithm lzturbo benchmark independent decoder generate release algorithm huffman benchmark lzturbo release python responsibility", "git_description_clean": "brotli compression format", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "wrboyce/telegrambot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "necessary motivation framework production development searcher namespace package example plugin environment disclaimer example package subclass", "pypi_keywords_clean": ""}, "samuraisam/django-json-rpc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fgimian/paramiko-expect": {"git_readme_keywords": "bottom artwork courtesy interact complete paramiko multiple library introduction paramiko apparent courtesy introduction vagrent provide python important coverage likely kiseok connection extension paramiko support transport license paramiko function general docker flexibility uploads", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bottom artwork courtesy interact complete paramiko multiple library introduction paramiko apparent courtesy introduction vagrent provide python important coverage likely kiseok connection extension paramiko support transport license paramiko function general docker flexibility uploads", "pypi_keywords_clean": ""}, "juanifioren/django-oidc-provider": {"git_readme_keywords": "contribute provider support authentication documentation protocol example package authorization information interoperable identity", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "99designs/colorific": {"git_readme_keywords": "present changelog argument example argument detection correspond background concrete example colorific functional palette filename output example concrete virtualenv important minimum saturation branch directory install colorific experimental multiprocessing similarity release yencken installation invoked annesley information detector colormath palette detection importable dennis", "git_description_clean": "automatic color palette detection", "git_keywords_clean": "", "pypi_description_keywords": "present changelog argument example argument detection correspond background concrete example colorific functional palette filename output example concrete virtualenv important minimum saturation branch directory install colorific experimental multiprocessing similarity release yencken installation invoked annesley information detector colormath palette detection importable dennis", "pypi_keywords_clean": ""}, "futurice/procboy": {"git_readme_keywords": "process process manager available environment optional development", "git_description_clean": "process boy", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "process procboy processboy"}, "/locust": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "use", "pypi_keywords_clean": ""}, "TeamHG-Memex/formasaurus": {"git_readme_keywords": "package machine search registration license password recovery status something hyperiongray formasaurus registration password version documentation formasaurus coverage contact", "git_description_clean": "formasaurus tells type html form fields using machine learning", "git_keywords_clean": "", "pypi_description_keywords": "package robust password recovery hyperiongray ipython regularized formasaurus documentation annotated license support updated documentation command classifier annotated evaluation version coverage detection machine search registration release formasaurus status something registration password annotation contact initial release account upstream documentation formasaurus", "pypi_keywords_clean": ""}, "lambdalisue/django-author": {"git_readme_keywords": "install library authorsystemuserbackend system default author field pypi install authordefaultbackend default object authorsystemuserbackend determine method determine backend backend library class author check default backend library pypi determine current storategy backend default truble author backend change strategy directory return system updating sample request signal backend class class method install github object updated happy install decorator default current request decorator backend return", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install library authorsystemuserbackend system default author field pypi install authordefaultbackend default object authorsystemuserbackend determine method determine backend backend library class author check default backend library pypi determine current storategy backend default truble author backend change strategy directory return system updating sample request signal backend class class method install github object updated happy install decorator default current request decorator backend return", "pypi_keywords_clean": "django author object universal"}, "RustyBower/pythreatgrid": {"git_readme_keywords": "source pythreatgrid threatgrid installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download package cleanup markdown support configuration documentation pythreatgrid integration history release installation threatgrid", "pypi_keywords_clean": ""}, "opentok/opentok-python-sdk": {"git_readme_keywords": "mode type live ip address instance code relayed session default resolution end sip platform use repository follow video recording fetched database screen stream u user string type custom router method create streamname mybarstream layout stylesheet disconnect connect class file setting file page streams session session live method return key api single python valid release important api key documentation reference streaming rtmp id database property parameter filter session property stream clone whole interested package dependency session session argument assign hls rtmp stop broadcast width layout information opentok array layout optional default version sdk helpful session id opentok stream disable audio audio video layout type database default return instance total note streams code print camera possible clone session audio parameter position mixed audio print stream attribute useful stream code sip call heart pull list stream bar serverurl sample archive instance broadcast object method code opentok turn list dictionary connect due stream array python get stream stream repository get instance class stream payload archive fetched use opentok hls endpoint stop archive broadcast get use method start live rtmp streams audio end pypi index method instance way add method class parameter code output mode get streams live streaming persistent store audio sip different streams stylesheet parameter bug file archive list call method info add setting property installation information archive sdk opentok information streams archive iterate stream list common way technical broadcast code session location opentok live keyword argument id fetched security class layout add package mybarstream foo see reference custom broadcast next install name archive python stop python list parameter call record different dependency project list streams session stream python create python u http live streaming broadcast opentok platform delete archive broadcasturls hls whole repository position absolute broadcast target status live send streams instance note get information session opentok rtmp bar relayed previous camera screen print change sip endpoint parameter value support aditional audio streams u token session use optional parameter change layout id projectid documentation available api secret setting method project common broadcast print optional keyword use default note start true call attempt send file opentok start archive token method id method archive id id broadcast pip install createdat id layout valid token u documentation development parameter method payload payload hls http setting layout information see opentok import get list use attempt get total camera print updatedat broadcasturls list archive session start due firewall string array python position result createdat force disconnect width information stream info see support live streamname get instance key total file record location hint absolute width see page session store router use archive session get stream session hls rtmp status platform opentok opentok archive serverurl rtmp streamname myfoostream sdk default iter pass pip database code stream id many element list user call object attribute opentok next server relay connect session pass get id string individual output print result method see stream opentok class code recording setting database delete archive delete u u broadcast broadcast projectid resolution foo serverurl hint test turn server method method archive presentation endpoint code support see create opentok resolution sessionid payload information stream name install usage address string database stop archive method id use id camera print print store session archive python delete guide sending archive code method aditional opentok broadcast stream object reference documentation session individual page hint info stream start recording create session python archive default streams use layout code python first stream array class streaming opentok sessionid status opentok api default setting stop recording archive archive archive iter use live get broadcast instance information opentok session thrown code relayed code presentation store python sdk sip platform add file store database setting use see information stylesheet property live opentok archive call assign name property information opentok python connect sip name print method start python setting class method information stream see force total number hint session setting parameter get specific specific archive client recording opentok share live python release relay streams object stop", "git_description_clean": "opentok python sdk", "git_keywords_clean": "python opentok tokbox", "pypi_description_keywords": "documentation", "pypi_keywords_clean": "video chat tokbox tok opentok python media"}, "JoshData/email-validator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database validator address local internationalized email package pypi form sort intentional failure internationalization internationalized validation library rfc idna module kim idna fictitious library python validator pass ip address deliverability see omega fail validation route destination identical semantic address unicode dict fictitious part domain internationalized form address domain dict canonical part address important internationalized strict validation extension support multiple space first bounce address ip validation email second sort cause trouble python note address variety syntax deliverability support unicode part field email message run validator server support usage basic multilingual form field version sept precomposed unicode normalization universal wheel overview module supported add successful validation internationalized domain error message nothing account creation friendly error troublesome submission stack handful valid failure good robust email document validator user login obsolete mechanism note web message appropriate privacy security use current installation package email protocol argument see transmit message library outbound literal form mx support extension address certain form local publish universal canonical internationalized small bug user email supported use unicode fictitious address add keyword address valid see library invalid domain see present deliverability domain project database login change user key section prohibit internationalized emails unicode see validator form database validator permit normalization problem value field get email see cause keyword argument false exception public internet dict information login information field boolean login see permit obsolete resolve exception ohm equivalent sort internationalization internationalization internationalization appropriate show address syntax function website key email login postfix transmission type dns skip domain validation fail canonical form email specs replacement domain different unicode true list idna rfc smtp domain first idna library support fail domain see record conform domain part part see submission library grief mechanism aaaa helpful error sept small sort validation problem different multilingual plane unicode support aware edge bmp basic name resolution valid dict name system dns record part email internationalization separate prior internationalization local form address address rfc trouble validator form website form process built support feature protocol smtp unicode email temporary failure domain see email address security practicality good email part internationalized dns domain deliverability validation likely cause argument flag wheel wheel ascii deliverable email idna dns delivery plane validate address internationalized field present many email python library semantic meaning user field empty local dict get subclass email address form login form wire canonical valid deliverable address email whole address ascii first address database present form section publish useful display appropriate library nfc normalization support see address idna argument fail value email deliverable public valid email domain name extension name email fixes installation possible normalized form check value internationalized local delay idna ascii ascii equivalent packaging fixes bug packaging unicode nfc name resolve show end information deliverability user account separate way ascii local address invalid special idna form email validation function dns system equivalent form cause validation local part ascii form system dns smtp server server form library deliverability email dict note normalization use value type library permit address internationalization wheel pypi obsolete likely good database account equivalent code different meaning user current version domain ascii pass email resolution check form domain present local library validation certain unicode address deliverable", "pypi_keywords_clean": "email address validator"}, "praekelt/django-dfp": {"git_readme_keywords": "python overview google possible product server closing javascript installation install django implementation document service product template google example django", "git_description_clean": "dfp implementation django", "git_keywords_clean": "", "pypi_description_keywords": "cacheable javascript changelog simple possible possible product foundation hedley javascript practice django republish django implementation example django python overview google server deprecate arbitrary document implementation simple django django script closing installation install service product template method javascript template google ability subsequent", "pypi_keywords_clean": ""}, "/restauthcommon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "small", "pypi_keywords_clean": ""}, "flosch/simpleapi": {"git_readme_keywords": "consistent transparent standalone interact mailinglist subscribe gunicorn subscribe simpleapi mongoengine queryset inheritance multiple implementation google transparent portable simpleapi documentation javascript dynamic several transport simpleapi website support django django framework jquery authentication appengine implementation django queryset documentation simpleapi serialization django gunicorn implementation florian schlachter jquery calculator installation github restriction simplejson pyyaml optional google appengine mongoengine", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "consistent transparent standalone interact mailinglist subscribe gunicorn subscribe simpleapi mongoengine queryset inheritance multiple transparent portable complete documentation javascript dynamic several transport simpleapi website mailinglist support django django framework jquery authentication appengine implementation django queryset serialization django gunicorn implementation florian schlachter jquery calculator installation github restriction simplejson pyyaml optional progress mongoengine", "pypi_keywords_clean": ""}, "inveniosoftware/cernservicexml": {"git_readme_keywords": "documentation documentation documentation readable library generate sphinx coverage cernservicexml cernservicexml installation cernservicexml", "git_description_clean": "small library generate cern xsls service xml", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation documentation readable library generate sphinx coverage cernservicexml cernservicexml installation cernservicexml", "pypi_keywords_clean": ""}, "/django-quill": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install package quick django", "pypi_keywords_clean": ""}, "reactjs/pyreact": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application javascript library information transform wrapper", "pypi_keywords_clean": ""}, "/flask-oojsui": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python library", "pypi_keywords_clean": ""}, "googlefonts/ufo2ft": {"git_readme_keywords": "addition python generate opentype dependency library accurate target documentation behavior directory folder example", "git_description_clean": "bridge ufos fonttools objects therefore otfs ttfs", "git_keywords_clean": "", "pypi_description_keywords": "addition python generate opentype dependency library accurate target documentation behavior directory folder example", "pypi_keywords_clean": ""}, "CyVerse/django-cyverse-auth": {"git_readme_keywords": "provider x x x openstack openstack keystone current cyverse x globus globus x compatibility current django", "git_description_clean": "auth schemes used various capacities cyverse installations designed added django app", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "biocommons/hgvs": {"git_readme_keywords": "reference transcript westbrook j multiple protein consequence variant python g j fusaro jacobs kb install install upgrade mkvirtualenv support intronic sequencevariant clinical branch translate protein problematic transcripts uncertain sequencevariant sequencevariant rajaraman relevant application source variant configuration hdp hdp structured mcmurry sequencevariant mapping identical nucleic indicate uncertainty intronic variant transcripts baseoffsetposition support alignment extensive automated project mutation python callenberg hdp identify fedtsov installation install hgvs installation default example important hgvs package biological ambiguity community project default sequencevariant python structure mapper instrinsic biological reliable manipulate hgvs python rewrite g sequencevariant github license identify transcripts context import pluggable support alternative hgvs nomenclature package attempt sequencevariant g transcripts sequencevariant transcript mapping variation society genomic variant manipulate biological reference freeman hgvs manipulate variant normalizer normalization validate normalize release development python library access important object structure biological sequence python package certain ensembl python python translate dalgleish grammar object g g package hgvs python import network access j westbrook structure protein import import genome variation variation relevant hdp sequencevariant simpleposition documentation internal genome transcript sequence context describe variation specific variant support python uncertainty sequencevariant consequence object information stringification variant canoncial hgvs python package specification transcript protein representation python", "git_description_clean": "python library parse format validate normalize map sequence variants pip install hgvs", "git_keywords_clean": "bioinformatics genomics sequencing", "pypi_description_keywords": "normalize documentation hgvs variation biological sequence", "pypi_keywords_clean": "bioinformatics computational biology genome variants genome variation genomic variants genomic variation genomics hgvs"}, "seek-ai/esengine": {"git_readme_keywords": "pagination jinja payload definition default change official unofficial esengine document useful powerful complete esengine simpler object iterator object object install document single library specific validator callable mapping available bunch document arrays python complete payload structure communicate installation esengine single document transport jinja template elasticsearch elasticsearch return instance official python payload representation object document parameter document validator chainable pagination explicit change runtime method enforce encourage document index direct search method perform query example builder control validator validate mapping specification payload query default esengine arrayfield chunck dynamic search transport filter aggregate project geopoint resultset document argument object chainable abstraction query reload method nested example moderation number doctype mapping query filter reload complex verbose attribute import control visibility practice import contribute esengine library instalation bulk melhod language document bulk communication esengine resultset iterator python dictionary elasticsearch payload effort esengine opensource way elasticsearch python catholabs payload builder explicit way upsert mapper esengine index doctype maintained support excellent job refresh elasticsearch command shortcut testing payload initialization official elasticsearch simpler payload shortcut single indexed document template contribute elastic production confuse query esengine odm category instance indexed odm object level abstraction instance return refresh testing library handy python library verbose pythonic esengine communicate paginate payload document mapper coercion simpler lightweight accept module pythonic way special filter direct paginator jinja query building result version elasticsearch comprehension fixture migration install esengine command install advantage implementing hardcoded operator elasticsearch object stringfield demand building resultset single python esengine enforce pagination paginate document instance resultset object support bulk esengine elasticsearch elasticsearch library building default chunk utility generate instance resultset search process mapping mapping payload object", "git_description_clean": "elasticsearch odm object document mapper python pip install esengine", "git_keywords_clean": "", "pypi_description_keywords": "elasticsearch odm", "pypi_keywords_clean": ""}, "moonso/vcftoolbox": {"git_readme_keywords": "vcf genotype headerparser", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "vcf", "pypi_keywords_clean": "vcf parsing"}, "/pyliblo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dominic documentation directory pyliblo documentation install install library copyright installation example", "pypi_keywords_clean": ""}, "mgaitan/waliki": {"git_readme_keywords": "restructuredtext markdown president bolivian bootstrap codemirror hawaiian tribute president extensible development edition content upstream consideration togetherjs django template documentation twitter documentation control concurrent install database appreciate feedback version control everybody implement django follow important content storage preconfigured project consideration everyone support configurable backend attention concurrent edition development version meaningful codemirror version thorough consideration markdown support language content embeddable moinmoin conflict embeddable django smarter project example realtime", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collaborative development django template install appreciate feedback pattern configurable django markup pagination enhance content storage consideration everyone backend attention concurrent edition development version meaningful waliki extensible markdown support register related humble tribute waliki project default tribute president edition content togetherjs unclean support control concurrent database functional compatibiltiy django compatible django tutorial support concurrent repository function codemirror version language namespace moinmoin plugin conflict management command uppercase configurable default dependecy implement submit president bolivian python compatibility bootstrap codemirror follow waliki documentation twitter virtual terminal revision github templatetag preconfigured project release upgraded compatibility django content embeddable travis contribution smarter optional hierarchical pagination important humble realtime restructuredtext markdown changelog hawaiian waliki waliki upstream consideration actual migration output history version control everybody system support python cleanup unicodedecodeerror support configurable waliki content thorough consideration transformation crispy embeddable django project example webhook documentation status", "pypi_keywords_clean": "django wiki git waliki restructuredtext markdown"}, "fmarani/spam-blocklists": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute tutorial install phishtank information github unstable library verify library spamhaus", "pypi_keywords_clean": ""}, "/openglcontext": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "demonstration extensive scenegraph navigation significant pyopengl openglcontext bulk", "pypi_keywords_clean": "pyopengl opengl context openglcontext render truetype text vrml scenegraph"}, "cedadev/ndg-httpsclient": {"git_readme_keywords": "debug information pegler message python pyopenssl verification installation private prefix package install access server ubuntu install affect support request attribute implementation default request object pyopenssl pyopenssl additional output verification support script mandatory callback implementation python version pyopenssl version installation simple script duplicate resource compatible python content python checking certificate anothername context directory namespace package support keyword description python classifier dependency version function subject alternative optional package allow installed initial release python python parameter minimum release explicit correct installation installation https updated regardless https access module subjectaltname string release avoid", "git_description_clean": "https client implementation httplib based pyopenssl", "git_keywords_clean": "", "pypi_description_keywords": "debug information pegler message python pyopenssl verification installation private prefix package install access server ubuntu install affect support request attribute implementation default request object pyopenssl pyopenssl additional output verification support script mandatory callback implementation python version pyopenssl version installation simple script duplicate resource compatible python content python checking certificate anothername context directory namespace package support keyword description python classifier dependency version function subject alternative optional package allow installed initial release python python parameter minimum release explicit correct installation installation https updated regardless https access module subjectaltname string release avoid", "pypi_keywords_clean": ""}, "kottenator/django-compressor-toolkit": {"git_readme_keywords": "contribute default syntax quick install project installation value input variable default command autoprefixer default installation scss scss scss transform scss scss css executable output css development install install django static libs browserify babelify enables scss value executable great language good july modern example usage scss django scss autoprefixer standard javascript autoprefixer css django project value value enables django scss great joy css", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project scss", "pypi_keywords_clean": ""}, "mbr/svglue": {"git_readme_keywords": "svglue svglue custom attribute template inkscape library support inkscape placeholder element document example installation version opacity python important reference generation document something graphic replacement prepared information template suffice install different renderer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "custom attribute template inkscape library support output inkscape placeholder element document example installation version opacity important reference generation document something graphic replacement prepared information template suffice install different renderer", "pypi_keywords_clean": ""}, "MAVENSDC/cdflib": {"git_readme_keywords": "value default note cdf specification dictionary variance record example data list form possible value optional specification pair variable attribute name picosecond list information information main type example master cdf scheme found none none value variable sparse compression level basic variable path path number second complex numpy variable name millisec year pair value uncompressed data range epoch enough time form variableattrs come function global variable come physical record type variable epoch data variable number variable record month sample numeric form dictionary dictionary padded value module cdf millisec microsec encode function picosec year result numpy time record dictionary form call function entry number minimum maximum value attribute attribute entry sparseness maximum string output variable attribute level value numeric type second table data format file form read string input specify time python numpy name variable cdf majority numpy class dictionary following value varget majority dictionary possible minimum component float variable example dictionary attribute endianness cdf documentation valid use master list format data validation dimensionality variable use use reader class module cdfepoch data form minute second record sparseness updated leap list year default false exist example type char example call cdf common entry none described section form hh following data value hh mm type dimensional file first epoch range entry data reader cdf order start different cdf month day number dimensional complex epochrange michael liu leap second file template level compression date call variable data default zvariable dictionary zvariable maximum possible scalar value factor number int list list complex element data last item single structure double float path name nanosecond list float list come attribute global variable data variable harter michael call various last component attribute information class parse string cdf epoch utc expand false get epoch version cdf cdf nasa function variable encode epochs cdf file applicable varinq list different return none false input form mon sparse record entry value variable exist variable regular new cdf cdf information char length string varattsget array breakdown id value cdf entry dictionary global dimensional variance maximum value numpy epoch epochrange get variable zvariable millisecond microsecond single double hour minute time variable array string full variable gzip compression compress level cdf type file cdf float complex second variable virtual default globalattrs cdflib python list default first element false unixtime cdfs time array compute output dimension float python install open data scalar globalattrs dictionary convert numpy cdf endianness range cdfs compress cdf varattsget variable python module second millisecond range getversion attinq attribute class findepochrange compression default install install none entry number file install cdf start time str list file level nanosec enough unixtime epochs default compress variable list variableattrs dictionary empty cdf precision data physical library python id variable data number default data data type attget attribute name value complex list value string regular variable last updated end time number dictionary file creation variance padded epoch value example value list record value cdf specific epoch millisecond list note attribute attribute variable specify result mm mm list example findepochrange epochs value globalattsget list value string numeric class cdf cdf variable global attribute type zvariable attribute data cdf class int float specification cdf dimension number number value string form section getversion name cdf rvariable valid attribute global format described complex python minimum possible variable id forth different prompt type value dictionary name id string variable default iso cdf writer dictionary rvariable code version integer int dictionary common data epochs following type number false dimensional variable specification chronological order cdf data none expand prereqs install microsecond cdf epochs id number function specify cdf epoch sample setup applicable cdf reader value function data sparse start end proper number single attribute time range int python value python python integer variable cdf file path cdf global zvariable rvariable day hour record range creation default value pair mon month data float data record data attribute data start dictionary entry float fraction variable none indicator number file future record variable use function setup getversion string type form entry variable type search variable variable extension optional sample use nanosecond specify basic cdf real data list strs variable information pair cdf name entry value end value numpy year month unit specify second millisec python complex information attribute date note attribute value end record record shape microsec nanosec value specific numeric data globalattsget expand entry found varinq variable variable dimensionality breakdown epochs table author value data use list cdf version nanosec picosec function string python dictionary cdf fill form dictionary factor variable dictionary variable pair entry open prompt numpy array dimensional fraction unit value use portion data strs string mm string table applicable length string data specification default full cdf documentation record number utc string form numeric rvariable default date leap found time cdf path variable function record variance string dictionary python value attribute none writer class nanosecond picosecond year short data dictionary microsecond nanosecond number default fill variable iso form shape variable value total pair example output encode nasa library numeric variable file use string epoch rvariable variable total number variable str number variable return data", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value default note cdf specification dictionary variance record example data list form possible value optional specification pair variable attribute name picosecond list information information main type example master cdf scheme found none none value variable sparse compression level basic variable path path number second complex numpy variable name millisec year pair value uncompressed data range epoch enough time form variableattrs come function global variable come physical record type variable epoch data variable number variable record month sample numeric form dictionary dictionary padded value module cdf millisec microsec encode function picosec year result numpy time record dictionary form call function entry number minimum maximum value attribute attribute entry sparseness maximum string output variable attribute level value numeric type second table data format file form read string input specify time python numpy name variable cdf majority numpy class dictionary following value varget majority dictionary possible minimum component float variable example dictionary attribute endianness cdf documentation valid use master list format data validation dimensionality variable use use reader class module cdfepoch data form minute second record sparseness updated leap list year default false exist example type char example call cdf common entry none described section form hh following data value hh mm type dimensional file first epoch range entry data reader cdf order start different cdf month day number dimensional complex epochrange michael liu leap second file template level compression date call variable data default zvariable dictionary zvariable maximum possible scalar value factor number int list list complex element data last item single structure double float path name nanosecond list float list come attribute global variable data variable harter michael call various last component attribute information class parse string cdf epoch utc expand false get epoch version cdf cdf nasa function variable encode epochs cdf file applicable varinq list different return none false input form mon sparse record entry value variable exist variable regular new cdf cdf information char length string varattsget array breakdown id value cdf entry dictionary global dimensional variance maximum value numpy epoch epochrange get variable zvariable millisecond microsecond single double hour minute time variable array string full variable gzip compression compress level cdf type file cdf float complex second variable virtual default globalattrs cdflib python list default first element false unixtime cdfs time array compute output dimension float python install open data scalar globalattrs dictionary convert numpy cdf endianness range cdfs compress cdf varattsget variable python module second millisecond range getversion attinq attribute class findepochrange compression default install install none entry number file install cdf start time str list file level nanosec enough unixtime epochs default compress variable list variableattrs dictionary empty cdf precision data physical library python id variable data number default data data type attget attribute name value complex list value string regular variable last updated end time number dictionary file creation variance padded epoch value example value list record value cdf specific epoch millisecond list note attribute attribute variable specify result mm mm list example findepochrange epochs value globalattsget list value string numeric class cdf cdf variable global attribute type zvariable attribute data cdf class int float specification cdf dimension number number value string form section getversion name cdf rvariable valid attribute global format described complex python minimum possible variable id forth different prompt type value dictionary name id string variable default iso cdf writer dictionary rvariable code version integer int dictionary common data epochs following type number false dimensional variable specification chronological order cdf data none expand prereqs install microsecond cdf epochs id number function specify cdf epoch sample setup applicable cdf reader value function data sparse start end proper number single attribute time range int python value python python integer variable cdf file path cdf global zvariable rvariable day hour record range creation default value pair mon month data float data record data attribute data start dictionary entry float fraction variable none indicator number file future record variable use function setup getversion string type form entry variable type search variable variable extension optional sample use nanosecond specify basic cdf real data list strs variable information pair cdf name entry value end value numpy year month unit specify second millisec python complex information attribute date note attribute value end record record shape microsec nanosec value specific numeric data globalattsget expand entry found varinq variable variable dimensionality breakdown epochs table author value data use list cdf version nanosec picosec function string python dictionary cdf fill form dictionary factor variable dictionary variable pair entry open prompt numpy array dimensional fraction unit value use portion data strs string mm string table applicable length string data specification default full cdf documentation record number utc string form numeric rvariable default date leap found time cdf path variable function record variance string dictionary python value attribute none writer class nanosecond picosecond year short data dictionary microsecond nanosecond number default fill variable iso form shape variable value total pair example output encode nasa library numeric variable file use string epoch rvariable variable total number variable str number variable return data", "pypi_keywords_clean": "cdf maven lasp pds gsfc"}, "bruth/restlib2": {"git_readme_keywords": "preclude visible possible transparent concern subsequent community response important decision dynamic endpoint library question possible obfuscate philosophy pragmatic support framework middleware collection approach achieve developer bandwith implementation transparency available additional pragmatic approach middleware numerous django popular pragmatic attempt process wrapped tastypie resource background intricate arbitrary plethora consistent hateoas controller visible unavailable composite obfuscate overcomplicate resource accessible natural familiar django example trivial purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rest django http hateoas"}, "mrf345/flask-colorpicker": {"git_readme_keywords": "default extension spectrum plugin accepted extension credit source default install importance source spectrum jquery extension credit spectrum multiple picker template function configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple spectrum javascript extension", "pypi_keywords_clean": "flask"}, "brobin/drf-generators": {"git_readme_keywords": "python function framework serialization production quality default example project readme prompt format application generate jumpstart development full tutorial python usage python apiview action generate example generate apiview python python modelviewset option action simple command generate function found default match apiview cruddy tutorial check version order generator django python command application framework application repetitive work modelviewset python generate everything full application function style command generate viewset python installation install model installation function python viewset modeviewset travis application full python generate related style viewset readme license default serialization", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python function framework serialization production quality default example project readme prompt format application generate jumpstart development full tutorial python usage python apiview action generate example generate apiview python python modelviewset option action simple command generate function found default match apiview cruddy tutorial check version order generator django python command application framework application repetitive work modelviewset python generate everything full application function style command generate viewset python installation install model installation function python viewset modeviewset travis application full python generate related style viewset readme license default serialization", "pypi_keywords_clean": "api rest framework generate scaffold"}, "regosen/gallery-get": {"git_readme_keywords": "contribute download imagefap imagevenue default fuskator gfycat current incremental popular browser installation download customized multiple expression function xhamster xvideos license command xvideos generic additional markup regular expression gfycat gogoimage gogoimage imagefap generic fallback environment destination directory download repository familiar regular imagevenue imgbox redirect section updated gallery filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute download imagefap imagevenue default fuskator gfycat current incremental popular browser customized multiple expression function xhamster xvideos python environment license install command xvideos generic additional markup regular expression gfycat gogoimage installation python gogoimage imagefap python gallery generic fallback destination directory familiar regular imagevenue imgbox redirect updated gallery filename", "pypi_keywords_clean": "gallery downloader reddit imgur imgbox xhamster eroshare vidble pornhub xvideos imagebam"}, "niland/pyniland": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "niland simple github", "pypi_keywords_clean": "niland pyniland music search recommendation hosted cloud tagging"}, "/baker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "argument example default tracker valid python miscellaneous command function group multiple stdout stderr keyword parameter useful command default command help error message default error function natural opposite default required python identifier command function function output available simple decorator keyword decorator short option optional parameter boolean option argument convert option argument script doc version overview global event error please keyword class instantiate decorator group parameter help similar django function useful command different chaput error message function interface python default function short single hyphen script look parameter default decorator python version version argument subsequent script multiple short decorator create stderr stdout extra function module unix command history version error optparse function default parameter", "pypi_keywords_clean": "command line scripting"}, "inveniosoftware/invenio-db": {"git_readme_keywords": "copyright documentation available management", "git_description_clean": "database management invenio", "git_keywords_clean": "", "pypi_description_keywords": "database management management invenio initial public invenio copyright version documenation invenio documentation documentation available public release", "pypi_keywords_clean": "invenio database"}, "/falcon-autocrud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status status override default parameter constructor resource method restful quick singleresource status important advantage difference linked resource functionality something collection response authorize control resource response permission information resource collection relevant runtime address declare sqlalchemy method special", "pypi_keywords_clean": "falcon crud rest database"}, "NVIDIA/pynvrtc": {"git_readme_keywords": "pynvrtc complete description object attempt runtime compilation full example example linux parameter constructor pythonic documentation complete library nvidia primary constructor default library linux absolute similar introduction pynvrtc compilation library interface object installation pynvrtc exception module instance important regular system present runtime corresponding gpus platform instance interface binary default object complete example architecture function pynvrtc interface interface interface pynvrtc package nvidia gpus execution nvidia library present access compiler correct nvidia library example interface interpreter program package external suitable execution optional parameter", "git_description_clean": "python binding nvrtc", "git_keywords_clean": "", "pypi_description_keywords": "pynvrtc complete description object attempt runtime compilation full example example linux parameter constructor pythonic documentation complete library nvidia primary constructor default library linux absolute similar introduction pynvrtc compilation library interface object installation pynvrtc exception module instance important regular system present runtime corresponding gpus platform instance interface binary default object complete example architecture function pynvrtc interface interface interface pynvrtc package nvidia gpus execution nvidia library present access compiler correct nvidia library example interface interpreter program package external suitable execution optional parameter", "pypi_keywords_clean": ""}, "Julian/hypothesis-protobuf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lddubeau/glerbl": {"git_readme_keywords": "value hooks internet hooks glerbl formalize reflect minimum proceed anything glerbl github glerbl hooks different configuration identical copyright dubeau necessary record option nothing glerbl check pylint unable import glerbl different everyone contribute error perform design glerbl repository github glerbl github ascii glerbl py check relative useless q someone imagine commit everything perform instance install glerbl language convert documentation copyright modification repository hosting option glerbl upstream bypass multiple glerbl system committing ascii glerbl glerbl install repository language choice issue custom hooks contributor proceed installation disable github repository glerbl level variable glerbl language glerbl collection consistent coding configuration present trouble stash committing glerbl contribution check glerbl different hooks pwd scenario stash q local installation glerbl dictionary install script access specific hooks check problem manage friend stash module detect report unable convert glerbl unique glerbl report script glerbl available question q multiple hooks temporary location pylint report management system directory example github glerbl perform contribute repository q x guarantee contributor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "glerbl consistent coding necessary detect repository glerbl formalize github repository", "pypi_keywords_clean": "git"}, "/pyopencv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package computation traditional willow attempt countless memory library manipulation matexpr addition matexpr approach generic programming computer different approach solution flexible functionality memory management wrapper successor provide scalar interface seamless interoperability knowledge pyopencv pyopencv programming approach", "pypi_keywords_clean": ""}, "/llvmpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python import license llvmpy prefix system package extract actual number typeinfo passregistrationlistener separate configuration install documentation default anaconda number processor installation building python install common source tarball directory llvmpy python binary concurrent undefined symbol default system python python license similar mismatch segmentation runtime incompatible", "pypi_keywords_clean": ""}, "storax/jinjaapidoc": {"git_readme_keywords": "package jinjaapidoc documentation document template rendering automatic generation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package jinjaapidoc documentation imported compatibility recursion document changelog release autosummary template template rendering automatic generation", "pypi_keywords_clean": "jinjaapidoc"}, "inveniosoftware/invenio-upgrader": {"git_readme_keywords": "software documentation developer invenio copyright upgrader", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pluginmanager statement dependency software license license documentation myisam innodb development preview copyright c invenio copyright alembic upgrader incompatible initial", "pypi_keywords_clean": "invenio upgrade alembic"}, "dnouri/nolearn": {"git_readme_keywords": "package specific version tracker lasagne updates overflow utility question keypoint detection support license installation recommend detection tutorial information reproduce nolearn install network presentation different software software project install documentation machine number version nolearn nolearn depdendency revision version minimal example maintain lasagne package lasagne different development version install nolearn introductory prediction citation advanced release nolearn compatible installation nolearn lasange", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package specific version tracker lasagne updates overflow utility question keypoint detection support license installation recommend detection tutorial information reproduce nolearn install network presentation different software software project install documentation machine number version nolearn nolearn depdendency revision version minimal example maintain lasagne package lasagne different development version install nolearn introductory prediction citation advanced release nolearn compatible installation nolearn lasange", "pypi_keywords_clean": ""}, "arkx/mpyq": {"git_readme_keywords": "library mpqarchive compression corrupted reading listfile advance extract display archive tampered license command included available memory command install blizzard version addition library installation constructor console command deflate uncompressed mpqarchive object archive display library reading functionality directory archive extract header information copyright copyright starcraft consult python information consult warcraft example python library environment variable archive block interface necessary listfile python console", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python directory compression library mpqarchive argparse module archive library corrupted reading listfile advance archive require extract listing archive development standard library display archive tampered install mpyq included script variable alternative replay included python module included license command future version mpyq pythonpath environment library version memory command install blizzard version install addition library mpyq library constructor console command deflate uncompressed mpqarchive object mpyq available library reading library script archive display python install functionality common directory adjust pythonpath archive extract return archive header information copyright copyright extraction repository extract return consult python mpyq mpyq information consult library installation warcraft example python library environment variable symbolic archive block interface necessary listfile mining starcraft install argparse mpyq python python standard format copyright library mpyq python console unfeasible", "pypi_keywords_clean": ""}, "/satori-rtm-sdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python service realtime convenient", "pypi_keywords_clean": "satori"}, "concordusapps/pytest-bench": {"git_readme_keywords": "project information benchmark utility opensource benchmark execution installation", "git_description_clean": "benchmark utility pytest", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "naiquevin/pipdeptree": {"git_readme_keywords": "create commit package b level required create immediate optional dependency makefile release release checklist command installation stderr output mention pipdeptree external possible solution changelog conflicting dependency way dependency helpful b package bash dependency utility tedious output bash mention anything anything installed output information output default dependency multiple information source child version pypi required strict version python output nested version refer output representation dependency virtualenv pipdeptree duplicate virtualenv circular bash install machine dependency installation bash bash problem complete output package installed dependency graph installed python status thing odd editable package bash conflicting virtualenvs pipdeptree command pipeline bash possible track possible conflicting package refer github update github upload travisci create installed editable paricular package different version installed virtualenv conflicting particular package assumption installed correct effort pypi license possible pipdeptree problem extent installed machine update required version bash dependency resolution bash freeze pipdeptree output", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "create commit package b level required create immediate optional dependency makefile release release checklist command installation stderr output mention pipdeptree external possible solution changelog conflicting dependency way dependency helpful b package bash dependency utility tedious output bash mention anything anything installed output information output default dependency multiple information source child version pypi required strict version python output nested version refer output representation dependency virtualenv pipdeptree duplicate virtualenv circular bash install machine dependency installation bash bash problem complete output package installed dependency graph installed python status thing odd editable package bash conflicting virtualenvs pipdeptree command pipeline bash possible track possible conflicting package refer github update github upload travisci create installed editable paricular package different version installed virtualenv conflicting particular package assumption installed correct effort pypi license possible pipdeptree problem extent installed machine update required version bash dependency resolution bash freeze pipdeptree output", "pypi_keywords_clean": ""}, "sbmlteam/tecombine": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/gerrit-dash-creator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "additional interesting powerful server gerrit dashboard extreme useful dashboard creator possible happy definition openstack freenode discuss available solution content gerrit support server current outstanding problem gerrit dashboard definition argument dashboard support building manipulate definition browser request submit review system", "pypi_keywords_clean": ""}, "lukecyca/pyzabbix": {"git_readme_keywords": "default library franklin street license fitness particular zabbix documentation library copyright documentation pyzabbix merchantability fitness request pyzabbix zabbix warranty merchantability software foundation authentication redistribute modify session general public version library import module behavior program pyzabbix pyzabbix pyzabbix useful public license particular purpose software redistribute information version license library original warranty certificate verification nelsonab change behavior customize request facility default foundation franklin program example install pyzabbix", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "zabbix monitoring api"}, "rolando/scrapy-redis": {"git_readme_keywords": "redis default spider process crawler basic schedule lpush myspider redis optional donate prioritization default python python serializer avoid example project matter pickle compatible msgpack module package pythonpath reason redis example look project serialization dmoz debug optional specify additional scrapy donate bcc suitable broad bcc donate spiderqueue spiderstack serializer pickle support module work default scrapyjsonencoder cd scrapy command expiration scrapy prevent spider dmoz dmoz single redis quality status work default full redis empty status target callable object version compatible python software workload redis client scraped filter redis multiple spider duplication filter default alternative scrapy runspider spider scrapy redisspider rediscrawlspider coverage status pipeline python redis documentation python priority serializer default object specify giftware python dmoz project python specify full broad crawls license documentation crawler resume precedence redis operation importable redis lpush custom redis redis scheduler project example spider redis scheduler duplication request module documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "lpush myspider documentation status package pythonpath msgpack module multiple spiderqueue spiderstack support single connection string command dmoz dmoz compatible scrapy parameter setting version compatible python process key setting python string added scraped empty default duplication filter python dmoz conventiong project python specify full license documentation setting default error support parameter handle added updated default pickle compatible added operation serialization optional specify serializer pickle scrapy matching software default alternative scrapy runspider change require explicit setting redisspider rediscrawlspider custom attribute pipeline object specify setting support previous behavior prevent request release compatible signature support default python python compatibility python serializer scrapy added example project setting added module work default scrapyjsonencoder added support quality status status target python added setting prevent added option incompatible change giftware added example crawler resume client class module method signature crawler schedule scraped version avoid compatible added added setting reason require explicit additional scrapy suitable broad message dupefilter logging message cd scrapy work default history empty wrong message callable object compatibility added class spiderqueue default default key redisspider coverage status priority serializer default documentation python option example behavior schedule broad crawls precedence importable client project example scheduler duplication support different automated release dmoz debug", "pypi_keywords_clean": ""}, "twolfson/sublime-harness": {"git_readme_keywords": "unlicense framework deprecation development deprecate brittle install documentation external functionality maintain wolfson public sublime environment support project platform support repository example styleguide execution arbitrary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unlicense framework deprecation development deprecate brittle install documentation external functionality maintain wolfson public sublime environment support project platform support repository example styleguide execution arbitrary", "pypi_keywords_clean": "sublime text harness runner"}, "exoscale/riemann-wrapper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python logger instance default override default standard timing exception keyword override hostname present parameter callable riemann default particular exception exception riemann logger transport riemann introductory standard python library function", "pypi_keywords_clean": ""}, "nandoflorestan/kajiki": {"git_readme_keywords": "kajiki project tracker syntax performance integration license chameleon compilation template inheritance continuous integration repository beautiful example development kajiki compete", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "paragraphs alphabetical testability tracker subsequent showstopper regression anything content correctness template inheritance multiple support multiline beautiful jquery stuff spurious content genshi compatibility kajiki compete integration plugin project development python documentation practice compilation python integration module module pyramid several repository github element stuff showstopper gettext example python syntax python kajiki content template context performance genshi statement collected translation dependency global semicolon function content framework minified sourceforge github output syntax chameleon attribute xmltemplate collector translation syntax unused continuous integration support python import translation function genshi kajiki regression fileloader message extractor compatibility support improved barrier script genshi syntax codebase integration license directory documentation library support markup python python kajiki hg repository experimental feature automatic translatable", "pypi_keywords_clean": "templating engine template genshi jinja mako chameleon xml html xhtml"}, "ornl-ndav/django-remote-submission": {"git_readme_keywords": "output correct virtualenv launch package cookiecutter standard output transfer launch capture interact success failure output standard database realtime facility project example virtualenv configuration documentation django application install django connect server computer routine deploy functional server multiple launch django available debug public example django prefer reactor spallation authentication status machine server session launch script something similar password argument function national laboratory information submission django science browser useful bypass modify interface server python cookiecutter research", "git_description_clean": "asynchronous queue using celery distributed task queue redis data structure store message broker", "git_keywords_clean": "", "pypi_description_keywords": "output correct virtualenv launch package cookiecutter standard output transfer launch capture interact office science success failure output standard possible database realtime celery configuration facility project launch celery number server example virtualenv documentation django application install django connect server computer routine deploy functional server multiple launch django available debug truncation version documentation publication wrapper truncate public example django prefer reactor spallation authentication status machine server session application manage directory launch script celery launch something similar password argument function wrapper attribute remotewrapper wrapper unicode national laboratory information localwrapper remotewrapper submission django browser laboratory history wrapper package useful bypass modify interface wrapper support socket server python submit cookiecutter research celery", "pypi_keywords_clean": ""}, "google/subprocess32-ext": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subprocess standard reliable threaded backport subprocess standard library", "pypi_keywords_clean": ""}, "moonso/loqusdb": {"git_readme_keywords": "database mongo frequency database interface database number family check database command locusdb setup variant individual loqusdb variant database manager installation homozygous hemizygous difference database manager increase number", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database mongo frequency database interface database number family check database command locusdb setup variant individual loqusdb variant database manager installation homozygous hemizygous difference database manager increase number", "pypi_keywords_clean": "vcf variants"}, "/pyobjc-framework-syncservices": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mobileme application framework documentation computer translation documention information", "pypi_keywords_clean": "pyobjc syncservices"}, "/yajl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python discuss send module library", "pypi_keywords_clean": ""}, "/chaussette": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "agnostic gevent monkey chaussette chaussette standalone simple tornado example described report contribute fix gevent manager circus previous documentation changelog fix quick coverage django process application update documentation tornado option particularity chaussette socketio server particularity companion gevent contribute changelog feedback fix tornado request tornado wsgiapplication", "pypi_keywords_clean": ""}, "macbre/phantomas": {"git_readme_keywords": "full ssl protocol number hidden js timetofirstimage phantomas david maximum level reliable htmlcount sizzle monitoring elasticsearch response biggestlatency number html browser slimerjs phantomjs debug series efficient css request localstorage domainstofirstpaint number cookie separate source number dom tablet report median value version jquery register film performance party keepalive single domain article performance anything console maxrequestsperdomain maximum loaded jquery loaded jqueryversionsloaded height documentheight storage jquery number attribute imagesscaleddown certificate request receipt medianrequestsperdomain median add current console gecko slimerjs performance grunt local storage ondomready domcontentloadedend phantomjs headless issue body phantomjs viewport domqueriesbyqueryselectorall number juve whitelist disallow merged old http timeout phantomas documentcookieslength length domain medianrequestsperdomain party npm engine experimental integration continuous single element statsd timetofirstcss performance phantomas redirect timetolastbyte un strip certain choice instance option enable entry navigationtiming response medianresponse default http css fun nothing domqueriesbyid party content content commentssize marcel duran css timetofirstjs domqueriesbyclassname number david mandelin request statuscodestrail directory film module hook cachingdisabled loading experimental strip default server default response fastestresponse gecko engine response slowestresponse modular approach planet performance single foo url description helper jquery output film string foo format smallestresponse receipt final kib encoded available device week maximum number contain custom connection development version disabled number video mozilla planet calendar measure phantomjs gecko add symlink length phantomas modular install module number css css option directory statsd shorthand window performance html element progress bar experience different number jquery conference domain aka webfontcount number drupalcon austin authentication disable jgonera gmetais strip french reliable construct dom yahoo web loaded timebackend workshop phantomas un windowprompts number content hiddencontentsize domqueriesbytagname number dom cssom phantomas well http status cdn grunt maxcdn number web duration default directory bodyhtmlsize experimental feature support slimerjs dom hidden headless browser response ajax experimental register format default jscount number cache statsd integration phantomas emulate integration repaint css mozilla available output experimental domcomplete demand party current timestamp http authentication csv header persistent x slimerjs install handling direct cachingtooshort response redirect debug aka whitelist current document javascript console available browser aka blacklist column add blogosphere performance string wiki description slimerjs engine timefrontend imagesscaleddown number modular web frontend performance source default golasch glitch something similar execution ondomready emulate mobile query dom various cloudwatch elasticsearch mandelin mozilla imagecount number complex slimerjs order integration nodejs whitespacessize contain single length documentcookiescount perform daily dev number cache authentication information french videos web performance content protocol secure fold optional npm extra regression marcel varnish squid dom iframescount document height aka format response biggestresponse static experimental assert hidden content redirectstime response latency mozilla velocity loading progress number loaded phantomjs add videos sebastian npm installation module phantomas performance news videocount number sebastian golasch headersbiggerthancontent number reach separated viewport ability custom phantomas jqueryversion version measure performance html construct jquery framework nodejs npm loading spinner install libfontconfig documentcookiescount number version phantomjs current number measure frontend number iframe medianresponse median directory experimental look david amend http response number encoded commonjs module reach domcomplete extra work separate module graphite graphene environmental variable mobile tablet http request film strip nodeswithinlinecss number e g add url relative entry domainstodomcomplete number jquery jqueryversion slimerjs experimental ssl header htmlcount number variable please domqueriesbyid number separate multiple domqueriesavoidable number party version phantomas medianlatency median number javascript profit optimization phantomjs default framework loaded cachingnotspecified shortcut option equal value iframescount number grunt automate dom complexity related log default engine phantomjs issue format useful response body prefix default something maxcdn blog csv available select engine javascript experience report timeout enterprise frontend useful human automate daily application web query string system option default information proxy custom handling ondomready column append number js installation install response smallestlatency phantomjs required number static receive install required gmetais vgangan experimental folder domain filtering jsoncount number collector phantomas browser custom number https twitter blogosphere scroll javascript execution element single cookie option environmental please timetofirstbyte requeststodomcomplete number jqueryversionsloaded number vgangan cphoover csscount number disable javascript finish handling number http phantomas install fun profit number ajax header add attribute dom generator article request terminal document firstpaint helper information dominteractive phantomas phantomjs fetch austin phantomas value render webkit phantomjs content hidden performance blogosphere directory contain performance calendar continuous integration duran twitter gomezd stefanjudis approach metric message backtrace js global performance performance performance regression proper proxy server redirect bodysize", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python script system performance binary version integration modular", "pypi_keywords_clean": "high performance web sites metrics monitoring phantomas phantomjs web development webperf"}, "nickoala/sensor": {"git_readme_keywords": "pressure return enable converter sensor update linux default simple quantity separate library sensor converter return namedtuple check address return simple package package celcius degree temperature sensor pressure temperature library return sensor pressure course useful installation compatible display sensor address reading pressure access celcius example number default conversion suppose humidity temperature educational teaching interface raspberry various simple celcius example pressure analog troublesome sensor humidity download separate package educational sensor package high protocol raspberry motivation package degree reading python package teaching raspberry pressure method reading humidity install package individual sensor package download", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "raspberry pi raspi rpi sensor"}, "KrishnaswamyLab/graphtools": {"git_readme_keywords": "terminal pairwise python installation interface available example assistance version version github github coverage twitter", "git_description_clean": "tools building manipulating graphs python", "git_keywords_clean": "", "pypi_description_keywords": "terminal pairwise python installation interface available example assistance version version github github coverage twitter", "pypi_keywords_clean": "graphs signal processing"}, "jantman/versionfinder": {"git_readme_keywords": "major bash git coverage report simple egg venv acceptance dict source directory master branch clone dirty sdist venv master issue support fork repository versionfinder library return exact add tox call multiple url change version simple push function return url editable stable usable python attribute run startup url commit fork specific attribute class push github versionfinder image install development git clone github upload install test commit install bug check readme editable git specific possible url branch release message commit git git fork new branch sdist install release checklist install egg version information version release wheel venv git push url multiple identify git repo repo local information distribution github open target image driven request release repository github example source control repo install test coverage versionfinder run egg install usage versionfinder git overview caught information project status allow report master directory venv sdist pip issue confirm github tag active project tag github pass additional editable local control url git url sphinx documentation clone install pip install module module clone multiple checklist open increment version branch master clone change successful travis gh tag commit install sdist python distribution overview versionfinder initialization result clone commit url install master fork branch install github feature return information install local install wheel repo release clone return fork bash add version pip test package specific commit specific tag python python install git tox command travis push tag python package exact requirement return url number add disclaimer software python function pull request url tag development install commit tag upload package mypackage python open issue issue release local git valid bit tag release target python wheel install pull install source install install distribution version startup initialization virtualenvs install pycon verbose pytext versionfinder suite tag install fork url dirty install github confirm merge tag coded package release git package live use suite acceptance version number status active inspect priority directory install git information last release compliant repository dirty object pip return development fork install editable correct repo package call pytext output license disclaimer information acceptance release image", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "major bash git coverage report simple egg venv acceptance dict source directory master branch clone dirty sdist venv master issue support fork repository versionfinder library return exact add tox call multiple url change version simple push function return url editable stable usable python attribute run startup url commit fork specific attribute class push github versionfinder image install development git clone github upload install test commit install bug check readme editable git specific possible url branch release message commit git git fork new branch sdist install release checklist install egg version information version release wheel venv git push url multiple identify git repo repo local information distribution github open target image driven request release repository github example source control repo install test coverage versionfinder run egg install usage versionfinder git overview caught information project status allow report master directory venv sdist pip issue confirm github tag active project tag github pass additional editable local control url git url sphinx documentation clone install pip install module module clone multiple checklist open increment version branch master clone change successful travis gh tag commit install sdist python distribution overview versionfinder initialization result clone commit url install master fork branch install github feature return information install local install wheel repo release clone return fork bash add version pip test package specific commit specific tag python python install git tox command travis push tag python package exact requirement return url number add disclaimer software python function pull request url tag development install commit tag upload package mypackage python open issue issue release local git valid bit tag release target python wheel install pull install source install install distribution version startup initialization virtualenvs install pycon verbose pytext versionfinder suite tag install fork url dirty install github confirm merge tag coded package release git package live use suite acceptance version number status active inspect priority directory install git information last release compliant repository dirty object pip return development fork install editable correct repo package call pytext output license disclaimer information acceptance release image", "pypi_keywords_clean": "version git pip setuptools"}, "hynek/doc2dash": {"git_readme_keywords": "python documentation status relevant functional available certain github coverage extensible generator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python dependency information schlawack development documentation status relevant available necessary feature certain github coverage extensible generator", "pypi_keywords_clean": ""}, "bitmazk/django-localized-names": {"git_readme_keywords": "contribute whereas english override tracker github adventurous possible properly installation standard english language similar templatetag template reusable django additional language chinese structure implement github coverage templatetag django localization english chinese formatted interface specific coverage roadmap chinese english contribute project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute whereas english override tracker github adventurous possible properly installation standard english language similar templatetag template reusable django additional language chinese structure implement github coverage templatetag django localization english chinese formatted interface specific coverage roadmap chinese english contribute project", "pypi_keywords_clean": "django app names localization"}, "/dxlmarclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overview mcafee message version license mcafee focus documentation library overview response copyright mcafee apache license compliance license dxl python installation purpose library license copyright license version", "pypi_keywords_clean": "opendxl dxl mcafee client mar"}, "/tempest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coverage openstack basic know tempest cluster tempest documentation tempest useful tempest quickstart command version python stable interface verifiable standard increment x cloud explicit various openstack assumption broad array option unittest repository openstack release program second lxc cloud single tempest bug discover tempest tempest release method tempest configuration sample discovery openstack cluster tempest python public openstack compatibility burden default x configuration interact discover simpler quicker patch runner python tempest configuration tempest tempest config argument multiple openstack database library interface deployment design intend consume cloud tempest related section local artifact openstack cloud compatible directory maintain python unittest method simpler consume tempest number interface stable tempest workspace stable branch document project import workflow repository touch private tempest attempt installed program command tempest tempest know tempest source functionality library library tempest major feature local tempest whole tempest explicit tempest project interface z execute enhancement tempest tempest library assessment cloud generate sample tempest multiple tempest stable configuration tempest design making integer version method legacy common configuration artifact storage complete coverage maintain separate package exception scenario openstack verifiable release versioning touch public check tempest regular different x legacy method reference cycle tempest coincide upstream common system installed version configuration version tempest environment represent local tempest system specific upstream stable directory important common activity release library workspace directory configuration generate current directory default behavior exception import sample directory valid broken example workspace configure private implementation release coincide directory example validation separate configuration devstack install several stestr please represent library python install tempest manual interaction directory support openstack initial local config openstack integration openstack deployment possible enhancement interface interface tempest openstack tempest touch information job endpoint valid added functionality openstack public implementation specific python legacy tempest directory generation openstack", "pypi_keywords_clean": ""}, "rivrproject/rivr-peewee": {"git_readme_keywords": "middleware controller database environment decorator middleware default database environment variable property database specific environmental controller license integration database object middleware database building installation provide specific environmental variable", "git_description_clean": "rivr integration peewee database orm", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lorehov/mongolock": {"git_readme_keywords": "perform account example ymdhm preferred optional duration configuration passing analogue launch concern specify mongolock constructor strange important critical section sequence duration critical mongoreplicasetclient specify configure connection different prevent problem instance mongolock situation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform account example ymdhm preferred optional duration configuration passing analogue launch concern specify mongolock constructor strange important critical section sequence duration critical mongoreplicasetclient specify configure connection different prevent problem instance mongolock situation", "pypi_keywords_clean": "lock mongodb"}, "ixc/edtf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "display roundtrip default change arbitrary definition century current way useful multiple library uncertain approximate model interval single julian representation future interpretation century interpretation interpret uncertain unspecified difficult work model admin partial partial representation difficult ambiguous parameter model current century conversion julian definitive storage specification install month approximate language representation fuzzy northern language parser primary visible model exponential specfication example django basic english format python unicode different python enough work ostensible natural language uncertainty approximation numerical convenient season ancient padding desired complete accuracy certain precise language change representation library precise century approximate month coverage uncertain timescale ad ad flexible property default natural century circumstance simple django english natural ticket imply century module support instance subclass implementation ad return current possible utility python module approximate uncertain approximate padding storage display implement object object database partial unspecified precision representation python", "pypi_keywords_clean": "edtf"}, "nschloe/pykry": {"git_readme_keywords": "multiplication installation package plethora license available release wrapper subspace convenient install upgrade repository distribution publish", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiplication installation package plethora license available release wrapper subspace convenient install upgrade repository distribution publish", "pypi_keywords_clean": ""}, "civisanalytics/glmnet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gaussian fortran library glmnet prediction similar package library logistic regression installation", "pypi_keywords_clean": ""}, "/python-sql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "condition select numeric select select condition delete qmark default delete simple select condition update select output select join select schema schema insert condition update library pythonic way join select select multiple", "pypi_keywords_clean": ""}, "nitros12/analyticord": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pypi universal analyticord available installation analyticord installation", "pypi_keywords_clean": ""}, "pallets/pallets-sphinx-themes": {"git_readme_keywords": "werkzeug consistent available documentation install appropriate extension", "git_description_clean": "sphinx themes pallets related projects", "git_keywords_clean": "sphinx", "pypi_description_keywords": "werkzeug consistent available documentation install appropriate extension", "pypi_keywords_clean": ""}, "pyexcel/pyexcel-ods": {"git_readme_keywords": "financial support performance pagination external dependency different development license contribution upgrade pyexcel version generic project company reading function individual welcome relevant development stringio instance instance writer adviable ezodf lxml partial launch documentation change environment update welcome support revenue library obvious enough reading development product benefit performance improvement instance sister library command update explicit import install relevant python license documentation library acceptance pyexcel plugin writer python install upgrade python likely confirm pyexcel documentation update content stream documentation additional patreon financial format library external maintain project python reading directory backer update documentation support project library testcode amount documentation feature special standalone library sample change complex python pagination manipulate dictionary interesting license developer information pyexcel organisation python python support maintain format confirm relevant documentation pagination feature installation install python sheetx previous example binary content contribution specific example python lxml sister memory sample little reading pyexcel", "git_description_clean": "plugin pyexcel provides capbility read manipulate write data ods formats using odfpy", "git_keywords_clean": "ods", "pypi_description_keywords": "datetime libreoffice project company reading function individual welcome relevant development adviable autoatic conversion unreleased revenue library development buggy odfpy updated compatibility product odfpy updated performance improvement explicit import libreoffice updated writer python ignore install upgrade patreon financial format library external upgrade setup updated handle support project option feature special version updated boost handling interface update columns python format confirm previous example book license updated updated pyexcel sample financial support performance pagination default documentation change handle plugin obvious enough reading situation multiple trailing columns documentation remain command update sister library generic setup install relevant recognize currency documentation update unseekable stream currency updated complete dependency odfpy handle unseekable update documentation v updated standalone library inform pyexcel license developer support feature installation install compulsory package binary content feature migration interface updated lxml sister python likely python pagination different development reading stringio instance instance writer office comment partial launch cstringio response environment update welcome support benefit instance throw unicode pyexcel plugin migration updated compatibility updated content stream excessive trailing property performance boost integer equal amount documentation dictionary interesting major performance initial release python python support maintain duration relevant documentation integeraccuracylosserror specific contribution odfpy compulsory memory sample little external dependency license contribution libreoffice datetime pyexcel version ezodf lxml function major odfpy version python license documentation library acceptance bsd license confirm pyexcel exception documentation additional include license plugin interface support pagination conversion maintain project python reading directory situation integerprecisionlosserror backer odfpy support python updated support change complex manipulate pyexcel organisation information release updated pagination feature python sheetx example python pyexcel", "pypi_keywords_clean": "python"}, "/scikit-umfpack": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "possible installation wrapper umfpack optional important dependency suitesparse available package documentation installation library development building optional check package manager furthmore building important compile install upgrade installation launch installation ubuntu suitesparse suitesparse python suitesparse soualem helpful dependency building directory manager prebuilt support building umfpack solver building suitesparse solver", "pypi_keywords_clean": ""}, "telminov/django-park-keeper": {"git_readme_keywords": "monitoring django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "devopsconsulting/uwsgidecorators-fallback": {"git_readme_keywords": "package python nolonger import import error pyhton import module error outside outside asynchronous stuff nothing nolonger function", "git_description_clean": "uwsgi api python decorators fallback running outside uwsgi", "git_keywords_clean": "", "pypi_description_keywords": "package python nolonger import import error pyhton import module error outside outside asynchronous stuff nothing nolonger function", "pypi_keywords_clean": "uwsgi"}, "hectane/pyhectane": {"git_readme_keywords": "django framework instance django backend object example available pyhectane python installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "titusz/epubcheck": {"git_readme_keywords": "package appveyor epubcheck functionality installed system epubcheck command package package initial epubcheck library detailed documentation development system original schemas widths original standard validation command convenient validation epubcheck development directory validate epubcheck software system report current directory combine coverage coverage status status introduction pypy quickstart introduction original quickstart command license installation epubcheck project documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package appveyor epubcheck functionality installed system epubcheck command epubcheck python installation python commandline support changelog package package initial epubcheck detailed documentation development system original schemas widths original standard validation command development status convenient validation epubcheck development directory validate epubcheck dependancy python software report current directory combine coverage custom coverage status status introduction introduction original python library quickstart command license installation module python system epubcheck project documentation status", "pypi_keywords_clean": "epub validation epubcheck ebooks qa idpf"}, "sqlanywhere/sqlalchemy-sqlany": {"git_readme_keywords": "ag top interface database interface dialect install install driver python driver database api sqlalchemy dialect copyright pip install empty database driver dialect tcpip execute license version command installing project dialect use use sql compliant driver interface driver easy api compliant default port dialect python django software dialect software sql install dialect dialect sqlalchemy server database license package affiliate company execute license standard sqlalchemy dialect skip interface installing interface install interface python sqlalchemy sql python python license file sqlalchemy version database server python pep forum python sql interface version source installing dialect project general installing install sql use pip", "git_description_clean": "sqlalchemy driver sap sybase sql anywhere", "git_keywords_clean": "", "pypi_description_keywords": "ag top interface database interface dialect install install driver python driver database api sqlalchemy dialect copyright pip install empty database driver dialect tcpip execute license version command installing project dialect use use sql compliant driver interface driver easy api compliant default port dialect python django software dialect software sql install dialect dialect sqlalchemy server database license package affiliate company execute license standard sqlalchemy dialect skip interface installing interface install interface python sqlalchemy sql python python license file sqlalchemy version database server python pep forum python sql interface version source installing dialect project general installing install sql use pip", "pypi_keywords_clean": "sap sybase sqlanywhere sqlalchemy"}, "/wordnik": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/cx-oracle": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python interface specification database", "pypi_keywords_clean": "oracle"}, "nupic-community/hitcpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python client", "pypi_keywords_clean": "htm api rest nupic client"}, "astraw38/lint": {"git_readme_keywords": "analyze python validator installation ability plugin original message customize default validation configuration install basevalidator current gpylinter example trigger plugin python package environmental manual automatic branch specified", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "automatic message default current trigger plugin original branch specified ability plugin validation configuration install environmental manual python customize basevalidator analyze ssh gpylinter example python package validator installation", "pypi_keywords_clean": ""}, "naiquevin/lookupy": {"git_readme_keywords": "install library conditional startswith istartswith default facebook github understand collection implement inequality double generic library python functional examples subdirectory containment measure performance multiple choose imitate archive original actual concept simple optional building bitwise inverse optional running endswith iendswith positional extract useful database construct collection python installation leverage python evaluation library useful implement nothing different filtering insensitive endswith lookup integer insensitive containment regular expression version imitate django filtering example behaviour predictable method queryset equivalent istartswith insensitive helpful equality default lookup parameter compose complex lookupy python django queryset logical operator inverse overriden iendswith insensitive membership startswith startswith endswith construct collection object complex lookup q object familiarity insensitive startswith consistent lookupy lookupy different python library lookup q containment membership everyday overall behaviour interface gotchas contain passed queryset collection coverage optional consumption", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install library conditional startswith istartswith default facebook github understand collection implement inequality double generic library python functional examples subdirectory containment measure performance multiple choose imitate archive original actual concept simple optional building bitwise inverse optional running endswith iendswith positional extract useful database construct collection python installation leverage python evaluation library useful implement nothing different filtering insensitive endswith lookup integer insensitive containment regular expression version imitate django filtering example behaviour predictable method queryset equivalent istartswith insensitive helpful equality default lookup parameter compose complex lookupy python django queryset logical operator inverse overriden iendswith insensitive membership startswith startswith endswith construct collection object complex lookup q object familiarity insensitive startswith consistent lookupy lookupy different python library lookup q containment membership everyday overall behaviour interface gotchas contain passed queryset collection coverage optional consumption", "pypi_keywords_clean": ""}, "futurecolors/django-geoip": {"git_readme_keywords": "", "git_description_clean": "app figure visitors ip address", "git_keywords_clean": "", "pypi_description_keywords": "location request request object database address optional country", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-cognitiveservices": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility management underlying service management provide feedback cognitiveservicesaccount release history generation management feedback encounter extension operation python microsoft library resource manager changelog release algorithm response default behavior available skuname release apiversion optional section project version cognitive generator performance limited important session azureenum location constructor syntax positional initial running operation parameter default initial release python python parameter microsoft response initial regenerate constructor parameter general breaking external context manager breaking behavior unrecognized execute callback library complete", "pypi_keywords_clean": ""}, "materialsproject/custodian": {"git_readme_keywords": "chance random developmental version complete custodian research component recovery important vienna simulation package robust flexible consult stable version develop mechanism install package developmental custodian stable version python additional complete unittesting several initio simulation pymatgen information management framework custodian developmental optional restart github version example custodian python stable release develop specific install pymatgen version likely version custodian pymatgen install plugin framework license custodian important aspect recovery likely buggy different version version current version necessary current nwchem source python package certain install package", "git_description_clean": "simple robust flexible job management framework python", "git_keywords_clean": "", "pypi_description_keywords": "chance random developmental version complete custodian research component recovery important vienna simulation package robust flexible consult develop mechanism package developmental version python additional complete unittesting several initio simulation pymatgen information management framework custodian developmental optional restart github version example custodian python develop specific install pymatgen release version custodian plugin framework license custodian install custodian recovery python required different version version current version necessary current pymatgen nwchem buggy custodian system source python package easiest certain install package", "pypi_keywords_clean": "jit job management vasp"}, "/hatcher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "avsaj/python-midi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/treebie": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation basic", "pypi_keywords_clean": ""}, "josegonzalez/github-backup": {"git_readme_keywords": "package information stored confidential information schedule appropriate format wikis appropriate pypi account keychain lfs argument personal access pull organization repository backup github stored keychain installation authentication single organization organization lfs option password backup single github username entire organization github usage permission secure allow security repository everything keychain access stored github personal backup entire", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package information stored confidential information schedule appropriate format wikis appropriate pypi account keychain lfs argument personal access pull organization repository backup github stored keychain installation authentication single organization organization lfs option password backup single github username entire organization github usage permission secure allow security repository everything keychain access stored github personal backup entire", "pypi_keywords_clean": ""}, "kennethreitz/flask-sslify": {"git_readme_keywords": "prompt authentication default config exclude response extension important redirect application redirect config install support default redirect exlude transport security advisable prompt interested handler install installation security consideration handler example duration parameter config sustainability motivation request decorator", "git_description_clean": "force ssl flask app", "git_keywords_clean": "", "pypi_description_keywords": "application redirect extension", "pypi_keywords_clean": ""}, "ohjeah/cache-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/noisy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version documentation installation different installed documentation", "pypi_keywords_clean": ""}, "cenkalti/what": {"git_readme_keywords": "process whaterror install assertionerror compatible unittest", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "process whaterror install assertionerror compatible unittest", "pypi_keywords_clean": "unittest process subprocess"}, "scoutapp/scout-apm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package performance python full installation instrumentation account python django information quick pyramid config signup python help transaction monitor performance config bottle bottle full python pyramid bottle configured environment documentation full django support python python celery pyramid support please celery", "pypi_keywords_clean": "apm performance monitoring development"}, "/django-bootstrap-crud-templates": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package override block function generate simple template customization labor extend bootstrap desired django extend template boilerplate django bootstrap aesthetic project homepage repository django variable automatic manual definition bootstrap labor optional installation follow exposure context information external bootstrap template module inherit license automatic generation template extend version bootstrap context variable source project bootstrap django template default collection bootstrap github account description template default template bootstrap css block template complete pertinent information", "pypi_keywords_clean": "django templates bootstrap bootstrap templates crud templates"}, "blockchain-certificates/cert-core": {"git_readme_keywords": "system config validate several package several python current community storage certificate storage configuration legacy python environment simplekv default config example support storage interface separate storage certificate storage certificate transaction configuration certificate version example library project gridfs config certificate system directory blockchain certificate project certificate repository temporary recommended publish interface simplekv contact contact storage location different python library example gridfs gridfs", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "system config validate several package several python current community storage certificate storage configuration legacy python environment simplekv default config example support storage interface separate storage certificate storage certificate transaction configuration certificate version example library project gridfs config certificate system directory blockchain certificate project certificate repository temporary recommended publish interface simplekv contact contact storage location different python library example gridfs gridfs", "pypi_keywords_clean": ""}, "noripyt/django-cachalot": {"git_readme_keywords": "documentation discussion", "git_description_clean": "effort worry maximum performance", "git_keywords_clean": "django python performance cache", "pypi_description_keywords": "documentation discussion", "pypi_keywords_clean": ""}, "ysimonson/optfn": {"git_readme_keywords": "python function optparse handle arghelp utility syntactic argument geocoder argument application subcommand simonw optfunc standard library required complete control functionality notstrict notstrict support varargs boolean required positional available command boolean default example number keyword relevant python optparse standard required argument parameter character function available subcommand pattern individual parameter approach interface introspection incompatible special handle subcommand moment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "davepeck/httreplay": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "maintained httreplay opporunity community documentation available network library example", "pypi_keywords_clean": "test unittest http https replay testing"}, "Azure/azure-mgmt-iothubprovisioningservices": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package service management provide feedback project changelog release history generation management version uninstall feedback encounter library resource manager changelog release bugfixes compatibility installing package algorithm response default behavior package compatibility apiversion initial optional version generator uninstall installing package version azureenum syntax positional initial running operation parameter default initial release response initial microsoft general breaking history general external iothub provisioning behavior unrecognized execute callback compatibility important library complete", "pypi_keywords_clean": ""}, "/pecan-mount": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "necessary application compound different important decision mounting wsgi multiple everything necessary utility unison different callable mounting location application important actual wsgi example apache callable default indicate application empty prevent mounting return execution mounting wsgi server single application consumed wsgi naming wsgi middleware dictionary apache different different prevent execution wsgi application attribute useful representation application convenient multiple object prevent application configuration server example", "pypi_keywords_clean": "mount pecan wsgi"}, "warner/ed25519": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "signature interface c c implementation security portable implementation signature comfortable operation", "pypi_keywords_clean": ""}, "blockstack/virtualchain": {"git_readme_keywords": "build variety installation package implementation library potential complete blockchain virtual virtual blockchain global naming virtualchain virtualchain package install virtualchain library blockchain block construct database processing virtual information global blockchain virtualchain install source available operational library processing example design implementation machine blockstack virtual functionality system naming system blockchain network presence virtual virtualchain construct system virtual specialized environment library dccl flexibility python library python package virtualchain python contract system", "git_description_clean": "library scanning blockchains running blockstack state engines", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "blockchain bitcoin btc cryptocurrency data"}, "/chesstools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "transposition conjunction validation checking framework utilizes compensation intuitive interface algebraic", "pypi_keywords_clean": ""}, "robotframework/robotremoteserver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install remote download source ironpython pypy module script information remote useful newer support class stop remote server version main difference example sourcecode keyword decorator library apis signal work version newer optional uri distribution extract module sourcecode framework library configuration remote background main equivalent example printed console project github address method version module argument server remote server interface documentation static hybrid installation approach generic remote server robot python newer project interface general support tags various configuration server instance jvm ironpython instance attribute main tread library interface interface disabled file several different python remote framework newer signal support keyword custom function interface integer remote interface argument optional decorator support static example remote newer remote server series apis support server remote process signal argument command github server configuration script argument pypi framework python programming available pypi extract install active server instance module disabled initialization local apis work thread work pypy remote module installation library instance version robot default server version server source distribution hybrid apis instance server robot framework background thread main benefit python module server background server project actual sourcecode python python default tuple get example console server initialization parameter distribution available list remote framework remote use support python different server method main limitation programming language keyword disabled tags", "pypi_keywords_clean": "robotframework testing testautomation remoteinterface"}, "saxix/django-adminactions": {"git_readme_keywords": "project collection development project fixture download documentation changelog tracker download", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project collection development project fixture download documentation changelog tracker download", "pypi_keywords_clean": ""}, "tetherless-world/kleio": {"git_readme_keywords": "software information available available readthedocs webpage continuous implementation documentation generate installer existing support information continuous integration serialization deserialization library provenance", "git_description_clean": "python library provenance data model supporting", "git_keywords_clean": "", "pypi_description_keywords": "module generate information available implementation installer license documentation activity example existing graphs example serialization deserialization library provenance software example activity project webpage available project support information continuous integration activity activity activity webpage continuous available readthedocs", "pypi_keywords_clean": "provenance prov rdf"}, "wearpants/measure-it": {"git_readme_keywords": "instrumentation instrument behavior production homepage performance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license monitor behavior production homepage performance", "pypi_keywords_clean": ""}, "steemit/steem": {"git_readme_keywords": "mining everyone leverage simple steemd different little memory normal operation development single command inflation proof fitness particular sufficient steemd virtual memory release number beanstalk service action contract custom healthcheck docker container commit setting container default location return allocation linux ubuntu option memory gb cryptocurrency centric hierarchical possible system present default connection software stable steemd possible reverse proxy wallet subsequent content website variable version release blockchain introduced bitcointalk advantage multiple developer generate container environment support warranty technical august security compressed format official repository multiple reader launch format default config whitespace recommended bucket liable coverage configuration blockchain steemd multiple warranty software ubuntu quickstart entrepreneurial elastic beanstalk configuration initial operation support memory configuration steemd launch trouble welcome official merchantability fitness directory config currency symbol failure platform service connect inflation block algorithm inflation liability example configs inflation websocket particular purpose introduced proof performance sufficient function generate anything modify config consensus algorithm check current blockchain choose available volume docker building available steemd limited express fertile configuration config purpose noninfringement synced experimental blockchain little memory config convenience docker adoption market different mineable bluepaper ramdisk different docker configs memory required block", "git_description_clean": "blockchain smart media tokens smts decentralized applications", "git_keywords_clean": "steemit steem blockchain cpp", "pypi_description_keywords": "", "pypi_keywords_clean": "steem steemit cryptocurrency blockchain"}, "vaab/colour": {"git_readme_keywords": "default equivalence request welcome commit contain conversion rgb traditional computer python accessible different bisect commit purpose function master branch scenario instantiation saturation luminance object different separate sample common mechanism provide c valentin compatible python comparison support object mutable default object simple pythonic pylint picking mechanism object bunch object default variation concern commit source function lambda author process picker identify number pypi appveyor download default mention summary tagged commit object hashable equality function hexadecimal representation summary commit cosmetic identify license specification comparison function installation normal equivalent attached generation hashable stringable integrate enforce picker commit message content object reverse operation colour import unique comparison specific revision single purpose support configure colour intuitive bunch single message follow branch github equivalent method rainbow commit summary yellow representation rgb suggestion instance install current example consistent possible interested feature coverage commit typographic follow configure object application customize pypi version available pypi common python object welcome tagged factory operation equivalent different amount object attribute consistent equality comparison format middle travis function format property return black build status complete rgb format comparison different computer hashable default perfect solution particular picker provide several picker enforce n callable picking algorithm something previous commit graphical representation manipulate follow gitchangelog unusual compatible mutable object current version welcome implementation feature consistent content", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default equivalence request welcome commit contain conversion rgb traditional computer python accessible different cmyk support bisect commit purpose function master branch scenario instantiation saturation luminance import valentin object different separate sample common yellow displayed mechanism provide c valentin compatible python comparison support object mutable ballet equality default object simple pythonic pylint picking mechanism object bunch object default variation concern commit source function lambda author process picker identify number pypi appveyor download default mention summary tagged commit object hashable equality function hexadecimal representation summary commit cosmetic identify license specification comparison function installation normal equivalent attached generation hashable stringable integrate enforce picker commit message content object leckey reverse operation colour import unique comparison specific revision single purpose identify python support configure colour intuitive bunch single message follow branch github equivalent method unexpected behavior insensitive chris rainbow commit summary representation rgb suggestion instance install current example consistent possible interested mention property feature coverage commit typographic follow customizable configure object application customize pypi version available pypi common python object license changelog welcome tagged factory operation equivalent different amount object attribute consistent equality comparison format middle travis customize common function format property return sayegh black build status complete rgb format comparison priest structure different computer hashable default added mention added customize perfect solution particular picker provide several picker enforce usable n exception callable picking algorithm something previous commit sequence generation escape sequence graphical representation equality support colour compatible manipulate follow gitchangelog unusual compatible mutable object current version welcome implementation feature chris priest behavior operator consistent content", "pypi_keywords_clean": ""}, "kmike/port-for": {"git_readme_keywords": "current machine management tracker number utility subsequent ephemeral library development association useful service restart checkout several maintaining unassigned version installation github virtualenv follow machine important regular software multiple wikipedia status likely connect something return unused unassigned otherwise temporary naming associate installed coverage utility localhost access software unused association library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "current machine management tracker number utility subsequent ephemeral library development association useful service restart checkout several maintaining unassigned version installation github virtualenv follow machine important regular software multiple wikipedia status likely connect something return unused unassigned otherwise temporary naming associate installed coverage utility localhost access software unused association library", "pypi_keywords_clean": ""}, "felipecruz/zmqpy": {"git_readme_keywords": "reliable project zmqpy codebase deprecation pyzmq codebase pyzmq separate backend verzion zmqpy zmqpy zeromq everybody", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tomprince/txgithub": {"git_readme_keywords": "library api version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library api version", "pypi_keywords_clean": ""}, "jidn/lds-org": {"git_readme_keywords": "documented hmm lds information install endpoint endpoint command number different number household username password computer current create session exact information command website additional available install install output photo photo endpoint information secure username example python fix command number specify create seperate environment option endpoint conneciton understanding possible show automate process equivelent information possible easier create clerk password secret quickstart easier authorized module member information command possibility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documented hmm lds information install endpoint endpoint command number different number household username password computer current create session exact information command website additional available install install output photo photo endpoint information secure username example python fix command number specify create seperate environment option endpoint conneciton understanding possible show automate process equivelent information possible easier create clerk password secret quickstart easier authorized module member information command possibility", "pypi_keywords_clean": "lds"}, "/textgrid": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Diaoul/pywunderground": {"git_readme_keywords": "pywunderground api", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pywunderground api", "pypi_keywords_clean": "weather wunderground underground"}, "steiza/tinyfeedback": {"git_readme_keywords": "moment reflect machine please config simple install previous course interface something license project graphs component custom graphs webserver example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple interface graphs click", "pypi_keywords_clean": "dashboard web graph metrics"}, "/pytmx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bartTC/django-wakawaka": {"git_readme_keywords": "django framework integration application permission integration codacy current python python django example project unobstrusive wakawaka provide project current library django default project development project revision history regular expression optional project application installation development environment internal install project python comprehensive permission overview wakawaka application invoked scheme ability django project environment install camelcase provide ability django permission configuration wakawaka", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django framework integration application permission integration example project unobstrusive wakawaka provide project current library django default project development project httpresponsenotfound functional revision history regular expression optional project application support django installation development environment internal install project changelog django comprehensive permission overview compatibility cleanup wakawaka application invoked ability display ability scheme django project environment install camelcase gettext replaceable provide ability django permission django compatibility configuration wakawaka translatable", "pypi_keywords_clean": ""}, "abarker/pytest-helper": {"git_readme_keywords": "package executed several separate interpreter executed example function documentation relative directory directory standalone several additional install install package relative additional utility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project example function documentation relative directory several relative framework example independent official", "pypi_keywords_clean": "pytest"}, "kmike/pymorphy2-dicts": {"git_readme_keywords": "package russian ukrainian opencorpora dictionary source dictionary opencorpora template building", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license environment variable installation install repository package dictionary constructor development package template", "pypi_keywords_clean": ""}, "SimonAlfie/fabricate": {"git_readme_keywords": "show example fabricate figure project bound simple c brush hidden stuff clarity power ordinary python replacement memoize inspired figure command brush technology python implicit license script enter autoclean mccloskey command fabricate fabricate python readable cleanup power python strace available system alford memoize fabricate implicit stuff single python mccloskey memoize reason fabricate language different complex script parallel building strace strace improved fabricate script modify access fabricate inspired license fabricate building show implicit reason linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fabricate figure project bound simple hidden stuff ordinary python replacement memoize inspired figure command brush technology python implicit b hoyts script enter autoclean command fabricate fabricate python readable example cleanup strace available discuss system alford memoize fabricate implicit stuff fabricate copyright inspired fabricate single python clarity reason fabricate language complex script strace strace improved fabricate script modify access fabricate inspired implicit reason linux", "pypi_keywords_clean": "fabricate make python build"}, "skyl/django-events": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "datepickr reusable", "pypi_keywords_clean": "django pinax datepickr"}, "gjcourt/nginx-signing": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "nginx signing"}, "r9y9/pylibfreenect2": {"git_readme_keywords": "documentation compatible version documentation interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/mosaik-pypower": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full model instantiation simple number active power cpu branch public change cache voltage kv difference old nominal primary additional branch angle degree pp create create grid depth installation transformer branch simpler input online active denote maximum library scipy update branch input angle nodes xlsx json separate instance child grid json install row first command variant excel class python european lv branch valid import pp reference bus library import p q branch online json format normal process connect pypower general model need mosaik active offline parallelization instantiation minute public false bash pip grid index power loss mosaik determine format description excel loss w return basic house power p need pass trafo branch attribute grid km flag pqbus entity create pv determine grid current voltage help need scherfke andr\u00e9 import format inactive default trafo grid arbitrary number q active typo active reactive argument dict additional columns mosaik python degree branch acceptable apparent lengh online pypower original valid bus pypower specific km online issue bugfix mva kw grid work deviate vl nodes machine distribute bus need grid contain dict sheet valueerror pqbus hard r \u03c9 module instantiate json old adress mosaik world pvs documentation change grid excel refactoring change specific changelog help order columns branch transformer grid instance positive negative grid entity comment bus n grid format json magnitude v database transformer transformer special kind primary secondary table kv european overwrite default break model represent voltage magnitude handle multiple json object bus trafo represent power iterate transformer nominal power bus sheet power constant length float change massive grid transformer python pp way difference negative number model power connect pqbus grid public pypower mosaik config mosaik grid topology trafos reactive power first row old json version fix added ability transformer public input format update version json bus grid create handle import issue pypower mosaik example power w stefan scherfke residual active maximum acceptable transformer maximum entity pip install similar way excel excel refbus entity dictionary mapping power flow branch sheet python pypower offline inactive create instance deviate default nominal voltage changelog bugfix bugfix issue voltage angle grid iterate usage mosaik arbitrary amount power grid specify additional flow analysis grid world element grid sheet first vm current voltage v similar excel denote active old format pqbus transformer w nominal voltage integer regular n n added transformer initialization example apparent power transformer station v deviate default sheet kw r july grid mosaik pp input dictionary available \u03c9 x instantiation connection nodes nodes pip bash initial release version version simulation pqbus pvs kind branch magnitude angle handy access branch length refbus primary import module row treated sheet bus r x columns excel package transformer grid first cell q vl current branch old need model comment pq vl vm calculate voltage adapter connect python import current sheet branch pq trafo overhead detailed description x \u03c9 branch lengh create dictionary treated comment float km issue scipy constant voltage vl nominal pq pq first entry consumer producer branch denote example transformer complex current instantiation initialization instance handle optional boolean excel xlsx pass adress information need format old multiple power contain information entity p internal refactoring online respective trafo trafos pqbus public transformer nominal number default bus pq pypower calculate conversion import regexcn bus constant bus comment pypower model instantiate power following instantiate class cell row excel format topology query refbus pqbus integer kv instance pass length km different stuff python access nodes pypower addr original input grid group massive internal bus grid cache xlsx entry slack bus addr create gridfile pvs p performance change branch w", "pypi_keywords_clean": ""}, "ccnmtl/ccnmtlsettings": {"git_readme_keywords": "defined modify variable project lowercase cloudfront deployment complain configuration install symbol boolean gunicorn djangowind installation django directory project important application everything likely common append something variable modify function browser particular project access related reusable module lowercase alphanumeric compare variable", "git_description_clean": "common django settings", "git_keywords_clean": "", "pypi_description_keywords": "common", "pypi_keywords_clean": ""}, "staticshock/colored-traceback": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "something approach uncaught exception standard argument traceback support presence package terminal something additional dependency package optional footprint installation convenience anybody", "pypi_keywords_clean": ""}, "matthew-brett/delocate": {"git_readme_keywords": "wheel directory copied relinked executable output output something linker picked current python dynamic relinked library picked dynamic listing argument process install delocate check sister command wheel verbose license similar system python output example checking wheel default wheel copied warning problem solution library dependency python machine version support package update directory wheel library linker system copied library directory machine version dependency relative rewrite wheel architecture wheel zipfile rebuild wheel analyze homebrew installation system dylibs version gfortran wheel output source distribution wheel likely python system problem specific", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wheel directory copied relinked executable output output something linker picked current python dynamic relinked library picked dynamic listing argument process install delocate check sister command wheel verbose license similar system python output example checking wheel default wheel copied warning problem solution library dependency python machine version support package update directory wheel library linker system copied library directory machine version dependency relative rewrite wheel architecture wheel zipfile rebuild wheel analyze homebrew installation system dylibs version gfortran wheel output source distribution wheel likely python system problem specific", "pypi_keywords_clean": ""}, "clld/clld-cognacy-plugin": {"git_readme_keywords": "functionality cognacy", "git_description_clean": "clld plugin providing functionality lexical data cognacy judgements", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "web pyramid pylons"}, "valohai/django-safespace": {"git_readme_keywords": "available interpolation variable context django python customization development ok acceptable useful exceptional context template rendering python installation dotted safespace attribute middleware django exception application everything request resolver something install development general template request python template integer namespace request platform development interpolation exception camelcase attribute exception exception attribute", "git_description_clean": "exception handling middleware", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "googlei18n/fontmake": {"git_readme_keywords": "wrapper several process fontmake library different documentation installation installation various intermediate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wrapper several process fontmake library different documentation installation installation various intermediate", "pypi_keywords_clean": ""}, "/fdb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extensive collection support firebird firebird multiple independent database addition firebird monitoring textual addition minimal utility standard kinterbasdb possible support prepared support documentation kinterbasdb library contribute development relational database compatible kinterbasdb conversion database character description various connection transaction commercial noncommercial traditional firebird library package unicode database permissive license replacement license commercial agreeable automatic", "pypi_keywords_clean": "firebird"}, "moorinteractive/wagtail-themes": {"git_readme_keywords": "customize different multisite config coverage example themeloader install necessary override template specific django wagtail optional directory maintainable template directory django default", "git_description_clean": "site specific theme loader django wagtail", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Scifabric/enki": {"git_readme_keywords": "download person server pybossa context owner project partial analysis anlayze project install install taskrun escaped example example virtualenv previous command format simple python return project context return copyright copyrigth pandas statistical faster analysis dictionary copyrigth scifabric parameter pandas dictionary search pybossa project pandas object access scifabric license method pybossa server python package", "git_description_clean": "pybossa package analyze project results easily", "git_keywords_clean": "pybossa python pandas statistics analysis", "pypi_description_keywords": "pybossa pybossa project framework", "pypi_keywords_clean": ""}, "kislyuk/ensure": {"git_readme_keywords": "informative consistent expressive literate structured message assertion callable exception utility library framework anything convenience instance harrison metzger validate development original function signature validation literate ability introspect structured information production statement reference english keyword argument consistent readable improve control standalone library translation construct readable pythonic information schema validation kislyuk harrison installation synopsis introspection enforce function readable informative decorator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "informative consistent expressive literate structured message assertion callable exception utility library framework anything convenience instance harrison metzger validate development original function signature validation literate ability introspect structured information production statement reference english keyword argument consistent readable improve control standalone library translation construct readable pythonic information schema validation kislyuk harrison installation synopsis introspection enforce function readable informative decorator", "pypi_keywords_clean": ""}, "/neptune-cli": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "neptune library", "pypi_keywords_clean": ""}, "satoshi03/slackweb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/cram": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "command output framework command value invoke daemon download official keyword match output snippet output actual keyword anything output output extension actual terminal newline actual actual command reflect actual daemon process diff example option prevent specify default official development bitbucket github development download functional suffixed download kb empty basename current unprintable context diff fork project syntax special example regular invoke specify command keyword backslash dollar snippet format change configuration return directory comment empty string development repository visit bitbucket actual output python python environment variable match actual temporary directory unprintable output shell installation install terminal width command actual shell example runner temporary diff", "pypi_keywords_clean": "automatic functional test framework"}, "asher/chronos-python": {"git_readme_keywords": "machine docker python docker docker different version monitor directory travis multiple library installation docker compose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "scheduler python library", "pypi_keywords_clean": "chronos"}, "sampsyo/confuse": {"git_readme_keywords": "configuration library standard standard library argparse declarative transparent validation environment variable overlay program multiple directory additional integration available documentation location integration application support sensible override configuration confuse painless confuse configuration override location", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "boilerplate multiple application support sensible override configuration confuse painless fiddling standard library configuration library standard defaults override transparent validation provide defaults overlay additional integration example argparse declarative documentation sampson directory location integration override location welcome environment variable program", "pypi_keywords_clean": ""}, "mysociety/django-mapit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "commercial licensing charity project lookup installation standalone service geographical default limiting documentation configuration address administrative constituency various country consult public django", "pypi_keywords_clean": ""}, "gammapy/gammapy": {"git_readme_keywords": "astronomy gammapy python status documentation build status useful coverage landscape", "git_description_clean": "python package astronomy", "git_keywords_clean": "python astropy astronomy awesome", "pypi_description_keywords": "analyse gammapy python package astronomy python collaborate", "pypi_keywords_clean": ""}, "tk0miya/testing-redis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sigint mytestcase instance temporary package fix instantiation license install absolute database command example specify keyword depend package fix importerror invoker bug fix destructor license history fix parameter fix bug temporary directory redisserver object method history fix", "pypi_keywords_clean": ""}, "oscarmlage/django-cruds-adminlte": {"git_readme_keywords": "community guess grappelli djadmin useful tabbed project design tabbed anyone stuff similar history change representation multiple upload create version upload multiple public cocktail nothing similar important jacob mixin something similar something custom responsive design django admin similar django right general simple django shocked project public widget something sortable something complex search update delete admin wrappable custom widget backpack laravel upload integrate django datetime toggle extra", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "community guess grappelli djadmin useful tabbed project design tabbed anyone stuff similar history change representation multiple upload create version upload multiple public cocktail nothing similar important jacob mixin something similar something custom responsive design django admin similar django right general simple django shocked project public widget something sortable something complex search update delete admin wrappable custom widget backpack laravel upload integrate django datetime toggle extra", "pypi_keywords_clean": ""}, "baztian/jaydebeapi": {"git_readme_keywords": "initial support zxjdbc jython distribution development pluign mechanism python database separate install database jython customer alternative rowids documentation connect python jaydebeapi testlnord robustness parameter optional compliant exception mechanism sqlalchemy microsoft project github submit python cpython tinyint conversion support ubuntu machine supported primary columns easyinstall available argument classpath hsqldb database foobar trouble python exception incompatibility python public license integer incompatible convenient databaseerror interfaceerror message access database customer execute environment example previous contrast zxjdbc separate project python support interface different violation general public password jaydebeapi jython dictionary longnarchar project jaydebeapi initial release connection database specific longvarchar flexible mechanism signature compliant specific pluign connect python ordinary python release extract jython python runtime environment possible jython project documentation integration supply sequence database suitable classpath important environmentvariable javadoc jaydebeapi conform connection version unreleased jaydebeapi compliant install jaydebeapi increase performance environment variable license jaydebeapi hypersonic distinguish databaseerror", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial support zxjdbc jython distribution development pluign mechanism python database separate install database jython customer alternative rowids documentation connect python jaydebeapi testlnord robustness parameter optional compliant exception mechanism sqlalchemy microsoft project github submit python cpython tinyint conversion support ubuntu machine supported primary columns easyinstall available argument classpath hsqldb database foobar trouble python exception incompatibility python public license integer incompatible convenient databaseerror interfaceerror message access database customer execute environment example previous contrast zxjdbc separate project python support interface different violation general public password jaydebeapi jython dictionary longnarchar project jaydebeapi initial release connection database specific longvarchar flexible mechanism signature compliant specific pluign connect python ordinary python release extract jython python runtime environment possible jython project documentation integration supply sequence database suitable classpath important environmentvariable javadoc jaydebeapi conform connection version unreleased jaydebeapi compliant install jaydebeapi increase performance environment variable license jaydebeapi hypersonic distinguish databaseerror", "pypi_keywords_clean": "db api java jdbc bridge connect sql jpype jython"}, "/waxeye": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "microstack/microstackcommon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "microstackcommon experiment navigate install proceedure documentation install automatic loading microstack version raspbian command raspbian install structure development", "pypi_keywords_clean": "microstack raspberrypi openlx"}, "tek/kallikrein": {"git_readme_keywords": "expectable instance typeclass convenience recursive flexible concept deactivate detailed comment character argument successful interpolation additional describe success composability internal concept available framework success metaclass constructor virtual alternative reimplement arbitrary returned selection constructor describe respective predicate function eligibility individual treatment implementation reference possible associativity specific instance argument iterable decorator exception logical focused functional", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "prosegrinder/cmudict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation available minimal processing appropriate structure maintain compatibility documentation wrapper package assumption additional cmudict wrapper cmudict version coverage expose", "pypi_keywords_clean": ""}, "/cloud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information offload execution language service computational platform simulator integrate desired function documentation available account execution function account simulator configure virtual library maintain configure example", "pypi_keywords_clean": ""}, "takluyver/pyqt4-windows-whl": {"git_readme_keywords": "message wheel uploads machinery travis", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python toolkit comprehensive platform", "pypi_keywords_clean": ""}, "/osprofiler": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack software documentation functionality powerful library request library version repository performance example", "pypi_keywords_clean": ""}, "TagnumElite/yummy-sphinx-theme": {"git_readme_keywords": "yummy sphinx customisable changelog yummy jekyll navbar dictionary customization navbar background complaint beautify disable configuration changelog project install documentation modification version github customizable knowledge content creditation disqus bitbucket canonical interface download bootstrap download download remove python configuration download package problem python package package interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "yummy sphinx customisable changelog yummy jekyll navbar dictionary customization navbar background complaint beautify disable configuration changelog project install documentation modification version github customizable knowledge content creditation disqus bitbucket canonical interface download bootstrap download download remove python configuration download package problem python package package interface", "pypi_keywords_clean": ""}, "gerold-penz/python-jsonrpc": {"git_readme_keywords": "additional support python client usage example support basehttpserver python library library additional library usage library python cherrypy example general public python future basehttpserver cherrypy client example python cherrypy future installation public license status python documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python additional support usage example support basehttpserver python library library additional library usage cherrypy example general public basehttpserver cherrypy status installation python cherrypy public license example documentation status", "pypi_keywords_clean": "jsonrpc json rpc client server cgi remote procedure call javascript object notation cherrypy data interchange basehttpserver"}, "/django-bshell": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "toastdriven/alligator": {"git_readme_keywords": "future wishlist beanstalk backend backend optional pluggable documentation worker executable optional someday dependent coverage example background processing system something optional beanstalk control consume complex alligator nothing alligator management command offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "future wishlist beanstalk backend backend optional pluggable documentation worker executable optional someday dependent coverage example background processing system something optional beanstalk control consume complex alligator nothing alligator management command offline", "pypi_keywords_clean": ""}, "BD2KGenomics/toil": {"git_readme_keywords": "attention scheduled management documentation discussion functional occasional description efficient", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/ehp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dossier/dossier-models": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download configuration dossier indexes postgresql familiarity standard dossier system couple learning running simple default second command running documentation running example sortingdesk second section interact feature database output available standard python feature feature installation feature sample configuration configuration dependent command complete python compatible application kvlayer configuration github database command output command click negative collection primary sortingdesk action feature collection virtual environment experimental compatible documentation running system example sample running terminal search environment install mysql configuration chosen browser simple example section confirm python package little python virtual", "pypi_keywords_clean": ""}, "/relstorage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "adherence appveyor convert relstorage implementation instance different regardless database database similar complete failover multiple replacement filestorage utility concurrency standard combination available pgstorage project filestorage relstorage development relstorage coverage likewise relational database relstorage postgresql performance database postgresql filestorage whereas continuous integration relstorage instance documentation documentation different relational whereas filestorage request convert filestorage", "pypi_keywords_clean": "zodb sql rdbms mysql postgresql oracle"}, "bcho/check": {"git_readme_keywords": "login password notify incident receiver report format detailed report username login password login license format report short summarize check check structure handler alias specify report crendential description summarize report monitor address customize format boss receive warning", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "login password notify incident receiver report format detailed report username login password login license format report check check structure handler initial version specify report crendential description summarize report monitor address customize format boss changelog \u5c0f\u5149\u68cd\u8282 receive warning", "pypi_keywords_clean": ""}, "/transifex-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "instruction github archive transifex archive download transifex project directory folder download anything complete documentation distribution description transifex project transifex support documentation transifex documentation additional command install accessible installation default follow pyinstaller suppose process support license localization license transifex interactive tutorial directory continuous integration translation repository install pyinstaller information experience command download install environment variable installation install everyone install package", "pypi_keywords_clean": "translation localization internationalization"}, "/designate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "designate openstack software license documentation development designate openstack project designate designate documentation building installation development install package execute environment workflow official documentation repository openstack designate", "pypi_keywords_clean": ""}, "podhmo/node-semver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "valueerror support install console semver python maxsatisfying invalid version added prelease version install python version function", "pypi_keywords_clean": "version semver"}, "avinassh/prawoauth2": {"git_readme_keywords": "simple documentation license mighty extensive documentation github available installation recommend helper library documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple documentation license mighty extensive documentation github available installation recommend helper library documentation available", "pypi_keywords_clean": ""}, "abe-winter/duktape": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "javascript duktape"}, "/flask-xxl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appfactory basicly baseview builtin attempt useful development blueprint reference variable section basemixin project capable django instantiation command returns current example endpoint blueprint reference blueprint endpoint reimplementation example similar django definition scheme builtin template registar method module project scratch", "pypi_keywords_clean": ""}, "caioariede/django-location-field": {"git_readme_keywords": "spatialite spatialite installation project compatibility latitude longitude nominatim yandex version documentation database installation install example postgis documentation license database screenshot postgis spatialite support multiple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "location field", "pypi_keywords_clean": ""}, "SPSCommerce/redlock-py": {"git_readme_keywords": "proposal number python python random default production understand reclaim exception object multiple identifier validity integer release manager algorithm exception validity possible namedtuple resource", "git_description_clean": "redis distributed locks python", "git_keywords_clean": "", "pypi_description_keywords": "default understand limitation manager algorithm copyright disclaimer possible namedtuple proposal documentation identifier fitness particular merchantability fitness validity subject production resource software limited express substantial purpose noninfringement validity integer commerce liability contract permission distribute sublicense warranty restriction publish distribute particular purpose connection software software software", "pypi_keywords_clean": ""}, "andersroos/rocky": {"git_readme_keywords": "sigint everything traceable python framework number collection traceable config argparse command choose environment useful production", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sigint everything traceable python framework number collection traceable config argparse command choose environment useful production", "pypi_keywords_clean": ""}, "M-o-a-T/aio-etcd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python client cluster generate documentation available system documentation installation directory available python development python atomic release official documentation documentation python usual atomic compare", "pypi_keywords_clean": "etcd raft distributed log api client"}, "/libpysal": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analysis development libpysal information software bug computational geometry libpysal development libpysal interested disclaimer example", "pypi_keywords_clean": "spatial statistics"}, "adafruit/adafruit-blinka": {"git_readme_keywords": "introduction cpython micropython sphinx documentation output documentation circuitpython substitute conformance digitalio compatibility project documentation install micropython compatibility verify example standard circuitpython digitalio digital selection virtual environment repository sequence documentation sphinx welcome micropython browser unhappy bitbangio discord module", "git_description_clean": "add circuitpython hardware api libraries micropython cpython devices", "git_keywords_clean": "", "pypi_description_keywords": "introduction cpython micropython sphinx documentation output documentation circuitpython substitute conformance digitalio compatibility project documentation install micropython compatibility verify example standard circuitpython digitalio digital selection virtual environment repository sequence documentation sphinx welcome micropython browser unhappy bitbangio discord module", "pypi_keywords_clean": ""}, "/climin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "machine learning optimization"}, "/lever": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "evonove/django-stored-messages": {"git_readme_keywords": "perform storage message follow instruction default python python django response convenience message django message framework available instance project standard message persist documentation seamless integration migration install available django python expose message storage framework version django something activity compatibility database backend django django storage python version version anyway version documentation", "git_description_clean": "store django messages project backend", "git_keywords_clean": "", "pypi_description_keywords": "perform storage backend architecture message specific template follow instruction default python python django response convenience message inboxserializer django message framework available instance project standard message persist messagedoesnotexist install seamless integration migration available history support broadcast django message storage framework version django something activity compatibility testsuite database backend django django storage python version version anyway support support version documentation template", "pypi_keywords_clean": ""}, "twisted/axiom": {"git_readme_keywords": "implementation scheduler consider polymorphism message twisted integration generation external database message dispatch automatic primary", "git_description_clean": "divmod axiom object database alternatively mapper implemented top python", "git_keywords_clean": "python", "pypi_description_keywords": "implementation scheduler consider failure polymorphism message twisted integration generation external database message dispatch automatic primary", "pypi_keywords_clean": ""}, "caffeinehit/django-follow": {"git_readme_keywords": "follow unfollow incompatible follow unfollowed handler object object custom template object queryset follow status beware release flashingpumpkin django application project application request response example follow handler unfollow something performance advise manager application installation repository object template method property follow object register replaced method template method render follow unfollow object certain", "git_description_clean": "django application follow anything", "git_keywords_clean": "", "pypi_description_keywords": "follow unfollow incompatible follow unfollowed handler object object custom template django application figure project application example follow handler throw beware something object template manager application installation repository method property follow object register replaced method template method render follow unfollow object beware release", "pypi_keywords_clean": ""}, "/django-oscar-api-checkout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django deprecation billing address multiple check status validation checkout decline important separate calculator assigns synchronous payment stock confirmation message cybersource secure payment decline bug checkout process address submit install package context payment basket checkout handle compatibility transitioning compatible payment interface compatible request asynchronous secure acceptance consistent synchronous mismatch placement number delete address billing framework fix django status payment important accomplish delete voucher exception fix installation install import application prevent reference number important fix flexible checkout runner upgrade checkout consistent synchronous asynchronous improved support subsequent http pipeline config placement prevent address checkout configuration payment provider configure payment different request support django status fix provider interface payment method basket fix placement status pipeline initial release module asynchronous payment changelog extension financing ownership information possible configure customer editable helper customer basket editable basket python callable string pluggable payment http request compliant different fix bug ownership calculator accomplish payment available current require application import authorization config configure", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-containerregistry": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "client library release history generation management operation group credential bugfixes fix added operation algorithm response support registry fix random performance general format operationdefinition incorrect breaking change sku support bundle package basic sku syntax positional microsoft change createorupdate general breaking sku update execute callback wheel extension default underlying http apiversion wheel feedback encounter sku registry python microsoft changelog release regeneratecredential support default behavior network dockerbuildstep operation initial important mixin class parameter version wheel package sdk python classic sku bugfixes quota parameter default source location response initial target additional apiversion external skus delete operation registry client apiversion support service management parameter origin support regenerate resource manager bugfixes compatibility registry sku http session sku classic parameter target property context support build issue section initial release python python compatibility sdist client class support multiple package pull request sdist wheel provide feedback build apiversion basic standard result glance class azureenum container registry origin added format syntax optional section project generator registry import operation added source registry initial running operation registry package parameter identity apiversion update standard premium context manager support context behavior unrecognized library complete", "pypi_keywords_clean": ""}, "Duke-QCD/hic": {"git_readme_keywords": "import initial python install python documentation import release python sampler documentation installation profile initial condition collision", "git_description_clean": "tools analyzing collision simulations python", "git_keywords_clean": "", "pypi_description_keywords": "import initial python install python documentation import release python sampler documentation installation profile initial condition collision", "pypi_keywords_clean": ""}, "aloetesting/aloe": {"git_readme_keywords": "scenario lettuce default gherkin danielle copyright gabriel falc\u00e3o copyright argument license command documentation invocation fitness particular merchantability fitness compatible separate project gabriel program version program example scenario software foundation warranty merchantability redistribute modify functionality particular significance particular lettuce install directory cucumber general madeley danielle software redistribute definition version license warranty falc\u00e3o gabriel danielle madeley lettuce verbosity project particular incompatible particular purpose", "git_description_clean": "behavior driven development using cucumber python", "git_keywords_clean": "python gherkin aloe bdd", "pypi_description_keywords": "scenario lettuce default gherkin danielle copyright gabriel falc\u00e3o copyright argument license command documentation invocation fitness particular merchantability fitness compatible separate project gabriel program version program example scenario software foundation warranty merchantability redistribute modify functionality particular significance particular lettuce install directory cucumber general madeley danielle software redistribute definition version license warranty falc\u00e3o gabriel danielle madeley lettuce verbosity project particular incompatible particular purpose", "pypi_keywords_clean": ""}, "/zope-broken": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package obsolete compatibility hold interface overview package version distribution obsolete functionality", "pypi_keywords_clean": "broken"}, "/appjar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tkinter python", "pypi_keywords_clean": "python gui tkinter appjar interface"}, "andresriancho/docker-tag-naming": {"git_readme_keywords": "forward account registry convention version version available possible important disclaimer command available motivation building interface browser branch possible building complex installation feature version guarantee important status specific branch environment continuous delivery continuous integration authentication private repository interesting different interesting feature available timeout", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "forward account registry convention version version available possible important disclaimer command available motivation building interface browser branch possible building complex installation feature version guarantee important status specific branch environment continuous delivery continuous integration authentication private repository interesting different interesting feature available timeout", "pypi_keywords_clean": ""}, "node13h/django-debug-toolbar-template-profiler": {"git_readme_keywords": "toolbar profiler respresentation timeline graphical respresentation screenshot install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "toolbar profiler respresentation timeline graphical respresentation screenshot install", "pypi_keywords_clean": ""}, "fitnr/visvalingamwyatt": {"git_readme_keywords": "hallmark different simplify geojson implementation additional ability available simplify custom ability simplify simplification", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different simplify geojson geodata simplify geodata implementation command additional ability available simplify release ability simplify install additional simplification", "pypi_keywords_clean": "gis"}, "twoolie/nbt": {"git_readme_keywords": "specification official simple library python mcregion persson current minecraft version possible standard writer library fileobj object library initial markus persson instantiate official minecraft library example reference buffer object keyword specification markus current specification initial specification update inspect player buffer fileobj project status object method status library uncompressed filename reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "limitation platform unknown copyright software development documentation unknown classifier fitness particular merchantability fitness subject audience software limited express substantial software description specification markus purpose noninfringement liability contract permission distribute sublicense language classifier development warranty restriction publish distribute particular purpose connection software independent classifier software software", "pypi_keywords_clean": ""}, "/alignak-backend-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "backend platform administration classifier environment classifier development backend unknown classifier general public platform unknown classifier natural natural language english classifier console classifier environment console description audience language english", "pypi_keywords_clean": ""}, "lalinsky/pychromaprint": {"git_readme_keywords": "package chromaprint deployment acoustid chromaprint library acoustid package original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package chromaprint deployment acoustid chromaprint library acoustid package original", "pypi_keywords_clean": ""}, "jamesls/fakeredis": {"git_readme_keywords": "full constructor latter python extension cluster saveconfig underneath incomplete fakeredis revision history release upgrade release version resetstat debug subclass strictredis saveconfig cluster function fixes implementation disadvantage fakeredis config resetstat expire accept unlikely psubscribe development iteration emulation debug segfault minimize fakeredis implementation replicaof slowlog script debug precision python command actual python fakestrictredis instance cluster replicate fakeredis server script flush wrong answer fakenewsredis release identical fixes support zrevrange method major rewrite hstrlen setname client result skipped bzpopmax zpopmax private method behaviour transaction bitpos bzpopmin pipeline encode release fakenewsredis debug script integer argument property constructor localhost subsequent publish match fakeredis fakeredis honour zpopmax zpopmin bug update behavior handling support delitem restrict default fakeredis method fakeredis version server bgrewriteaof improve emulation release update improve isolation parity specific version documentation fakenewsredis xgroup xreadgroup transaction match rewrite initialization python performance bulk zpopmin cluster cluster replicas added command multiple operation fakeredis fakestrictredis fakestrictredis subclass construction unittest handling vs mapping fakeredis flushall measurement release mock connection rewrite config transaction behaviour pipeline fakenewsredis version fakeredis change bzpopmin bzpopmax timestamp handling client instance possible mock keyslot cluster comparable interface popular number r connectionerror reasonable substitute subclass fakestrictredis cluster forget pubsub pubsub external server bugfix release added travis version major replicate cluster iteration pubsub unittests integration update match return wrong match pubsub lastsave getkeysinslot cluster import fakeredis command return version fakeredis single purpose getname client request fakeredis implement disallow certain georadiusbymember pubsub generic dump unimplemented codebase python contribute georadius georadiusbymember deprecation linsert implementation instance actual module reasonable object debug memory doctor pattern invalid expiry xrange xrevrange fakeredis behaviour history support unittests module client python instance touch unlink cluster setslot config rewrite zadd fakenewsredis undefined zadd github connectionerror fakeredis attribute property geopos geodist argument choice python support memory memory debug object retrieve forget cluster iterate chunk setslot cluster provide interface c ascii match interface python fakeredis linsert client setname keyerror server initialization config behaviour bitfield support support geohash geopos monitor support method geodist georadius implementation subclass module shutdown slaveof expired little practical fakeredis support improve coverage measurement fakeredis hincrbyfloat python import client unblock result necessary iterate avoid improve performance replicas cluster attribute server fixes fakeredis bulk broken cluster getkeysinslot hypothesis xclaim python client packaging option previous bgrewriteaof client bugfix optimization client getname doctor memory integration server fakeredis provide implementation python cluster keyslot slaveof replicaof migrate object support function everything pypy fixable server useless expiry python mock method update bulk zadd implementation incomplete equivalent option version number process necessary cluster countkeysinslot publish version geoadd geohash bug fixes fakeredis pubsub installed cluster cluster unblock command different python fakeredis welcome restore touch fakeredis subclass protocol object restore flush script stream xinfo handling python release optimization release countkeysinslot cluster unittests example python fakeredis r corner dump migrate command command implement fakeredis", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full constructor latter python extension cluster saveconfig underneath incomplete fakeredis revision history release upgrade release version resetstat debug subclass strictredis saveconfig cluster function fixes implementation disadvantage fakeredis config resetstat expire accept unlikely psubscribe development iteration emulation debug segfault minimize fakeredis implementation replicaof slowlog script debug precision python command actual python fakestrictredis instance cluster replicate fakeredis server script flush wrong answer fakenewsredis release identical fixes support zrevrange method major rewrite hstrlen setname client result skipped bzpopmax zpopmax private method behaviour transaction bitpos bzpopmin pipeline encode release fakenewsredis debug script integer argument property constructor localhost subsequent publish match fakeredis fakeredis honour zpopmax zpopmin bug update behavior handling support delitem restrict default fakeredis method fakeredis version server bgrewriteaof improve emulation release update improve isolation parity specific version documentation fakenewsredis xgroup xreadgroup transaction match rewrite initialization python performance bulk zpopmin cluster cluster replicas added command multiple operation fakeredis fakestrictredis fakestrictredis subclass construction unittest handling vs mapping fakeredis flushall measurement release mock connection rewrite config transaction behaviour pipeline fakenewsredis version fakeredis change bzpopmin bzpopmax timestamp handling client instance possible mock keyslot cluster comparable interface popular number r connectionerror reasonable substitute subclass fakestrictredis cluster forget pubsub pubsub external server bugfix release added travis version major replicate cluster iteration pubsub unittests integration update match return wrong match pubsub lastsave getkeysinslot cluster import fakeredis command return version fakeredis single purpose getname client request fakeredis implement disallow certain georadiusbymember pubsub generic dump unimplemented codebase python contribute georadius georadiusbymember deprecation linsert implementation instance actual module reasonable object debug memory doctor pattern invalid expiry xrange xrevrange fakeredis behaviour history support unittests module client python instance touch unlink cluster setslot config rewrite zadd fakenewsredis undefined zadd github connectionerror fakeredis attribute property geopos geodist argument choice python support memory memory debug object retrieve forget cluster iterate chunk setslot cluster provide interface c ascii match interface python fakeredis linsert client setname keyerror server initialization config behaviour bitfield support support geohash geopos monitor support method geodist georadius implementation subclass module shutdown slaveof expired little practical fakeredis support improve coverage measurement fakeredis hincrbyfloat python import client unblock result necessary iterate avoid improve performance replicas cluster attribute server fixes fakeredis bulk broken cluster getkeysinslot hypothesis xclaim python client packaging option previous bgrewriteaof client bugfix optimization client getname doctor memory integration server fakeredis provide implementation python cluster keyslot slaveof replicaof migrate object support function everything pypy fixable server useless expiry python mock method update bulk zadd implementation incomplete equivalent option version number process necessary cluster countkeysinslot publish version geoadd geohash bug fixes fakeredis pubsub installed cluster cluster unblock command different python fakeredis welcome restore touch fakeredis subclass protocol object restore flush script stream xinfo handling python release optimization release countkeysinslot cluster unittests example python fakeredis r corner dump migrate command command implement fakeredis", "pypi_keywords_clean": ""}, "roniemartinez/latex2mathml": {"git_readme_keywords": "mtd mi mroot mrow input mathml demo demo conversion license mn math mo mn math mrow mrow msub mathml conversion b c mi b msqrt mrow matrix b b mtr bmatrix n mfrac mrow mrow msubsup msup mi author ronie n mtr output math mrow msqrt n mo coverage appveyor mtd msub mtable mtr implementation status mathml output mn mtd mi mn mi x latex input mi c n bmatrix mtr mtd z math mi mtd travis ci mi r mi z mrow mfrac mrow mroot output x mi mi x xyz x mi c math mo mtd b math mrow msup r b c matrix license version msub mi library latex support installation mrow mtable version travis latex mathml mn mo mo mo ronie martinez n n mrow mn python library mathml continuous installation usage matrix math c mtd mi mrow integration author mo mtr bmatrix math msubsup mi mtd mo mn mrow mi n ci coverage usage demo x math pure python output matrix mrow mi b mi continuous integration xyz math mn mi mo mtable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mtd mi mroot mrow input mathml conversion license mn math mo mn math mrow mrow msub mathml conversion b c mi b msqrt mrow matrix b b mtr bmatrix n mfrac mrow mrow msubsup msup mi author ronie n mtr output math mrow msqrt n mo coverage appveyor mtd msub mtable mtr implementation status mathml output mn mtd mi mn mi x latex input mi c n bmatrix mtr mtd z math mi mtd travis ci mi r mi z mrow mfrac mrow mroot output x mi mi x xyz x mi c math mo mtd b math mrow msup r b c matrix license version msub mi library latex support installation mrow mtable version travis latex mathml mn mo mo mo ronie martinez n n mrow mn python library mathml continuous installation usage matrix math c mtd mi mrow integration author mo mtr bmatrix math msubsup mi mtd mo mn mrow mi n ci coverage x math pure python output matrix mrow mi b mi continuous integration xyz math mn mi mo mtable", "pypi_keywords_clean": ""}, "libyal/libvshadow-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module libvshadow", "pypi_keywords_clean": ""}, "mpasternak/djorm-ext-filtered-contenttypes": {"git_readme_keywords": "package mechanism package different django initial filteredgenericforeignkey queryset serious limitation generate indexed support django django reference compound introduction django functionality genericforeignkey current django function posgresql application database initial release impossible imporant django documentation scalability", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/docopt-unicode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stack several basic stick single value option way string compatibility posix pattern work several exclusive release option development value simple version reference supply unary operator validation docopt docopt json message parsed command convention signify repeatable value cover minimum example hand discussion changelog extensive docopt good likely string argument several option repeatable default option comma branch docopt introduction docopt message necessary docopt awesome arbitrary number release stable help message quick example object likely normal command group handle priority example sorted sorted simple dictionary required ellipsis argument default convention add dash whitespace usage good help python help awesome option functionality docopt strict compatibility schema validate dictionary usage string repeatable awesome generate drop description verbose value specify installation pattern usage repeatable splited specify option usage default integrate parser simple bugfix release separate positional unicode pattern option python pypy insensitive format usage convention separate function introduce shortcut json order support interface example source doubt generate help python optional dash stack section option release parameter pattern format optional support specify arbitrary option parser argument option option description command pattern double dash default repeatable version dependency specify output single dash terminate describing argument specify usage message module validate report error order specify good stdout ignored usage format option mention usage new parameter configuration favorite language meaning aspect functionality option argument hell version program follow argument vector enumerate double default output separate subcommand usage pattern dispatch stdout good beautiful help project docopt pattern consist bad bad initial release sorted output default directory optional argument accumulated accept help separate necessary information python pattern video introduction verbose special version terminate default value sensitive shortcut pull request format help directory default verbose option k coefficient python community dash specify operator expression beautiful valid thing well default optional match option angular several implement coefficient default contain option message way required optional available several pattern parser empty support convention python version add usage reference implementation python look message format dash double required group changelog docopt subset default default returned example string vector default docopt building implement help informal description repeatable default positional argument specify program signify several specify synonymous interface argument positional program invocation important specify stupid repeatable support add", "pypi_keywords_clean": "option arguments parsing optparse argparse getopt"}, "/flask-csrf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "protection extension", "pypi_keywords_clean": ""}, "trivio/codd": {"git_readme_keywords": "algebra programming codd", "git_description_clean": "relational algebra functional programming python", "git_keywords_clean": "", "pypi_description_keywords": "algebra programming codd", "pypi_keywords_clean": ""}, "ericmjl/pyflatten": {"git_readme_keywords": "harvard permission installation pyflatten independent johnson harvard potential application gradient flattening structure optimization function original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kennethreitz/delegator-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple library library dealing support operator interested functionality sustainability motivation source module separated standard installation", "pypi_keywords_clean": ""}, "Factual/factual-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debug information contained response upsert documentation crosswalk request timeout performed entity persist search parametric documentation boost complete behavior determine response exception invalid python driver miscallaney resource administrative utility content complement global documentation resolve detailed behaviour factual natural support factual support install documentation available preferred entity entity current summarized simultaneous github duplicate performed parallel schema project factual surface commit current location boost boost volume exception network factual attempt attribute signal resolve generate crosswalk crosswalk driver project custom connection strange behaviour similar resolve submit submit generic exception driver factual contained parameter content submit redirect specific message appropriate geographic miscallaney factual public debug location preferred", "pypi_keywords_clean": "factual"}, "fcurella/django-markup-deprecated": {"git_readme_keywords": "project support something available difference template library optional installation original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project support something available difference template library optional installation original", "pypi_keywords_clean": ""}, "treyhunner/django-email-log": {"git_readme_keywords": "python download status backend available submit request coverage status logger version documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python download support status rodrigo deodoro backend website interface request coverage status knight initial version brazilian portuguese documentation available", "pypi_keywords_clean": ""}, "aio-libs/multidict": {"git_readme_keywords": "introduction regular optional optimization interface regular library optional immutable multidict insensitive specific changelog cimultidict several insertion dynamic implement interface structure multidict coverage multidict collection", "git_description_clean": "multidict implementation", "git_keywords_clean": "aiohttp multidict headers", "pypi_description_keywords": "introduction regular optional optimization interface regular library optional immutable multidict insensitive specific changelog cimultidict several insertion dynamic implement interface structure multidict coverage multidict collection", "pypi_keywords_clean": ""}, "/vpnotebook": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "vpython list", "pypi_keywords_clean": "vpython kernel"}, "rbarrois/confutils": {"git_readme_keywords": "compatible enhanced confutils confutils", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible enhanced confutils confutils", "pypi_keywords_clean": "project library template"}, "ARM-software/devlib": {"git_readme_keywords": "license support repository feedback overview tracker feedback operating github installation development variety", "git_description_clean": "library interaction instrumentation remote devices", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jobovy/mwdust": {"git_readme_keywords": "download necessary careful installation please supported filter supported combination check similar filter standard python bovy smirk galactic longitude publication please directory contain default initialization import galactic latitude installation option extinction environment variable relevant package situation mwdust", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download necessary careful installation please supported filter supported latitude b combination check similar filter standard python galactic longitude publication please directory contain default initialization import galactic latitude installation option extinction environment variable relevant package situation mwdust", "pypi_keywords_clean": ""}, "/numpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "powerful obvious scientific arbitrary transform efficient container speedily", "pypi_keywords_clean": ""}, "fccoelho/liveplots": {"git_readme_keywords": "package minimalistic multiple package monitor xmlrpc server running daemon process separate daemon gnuplot", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package minimalistic multiple package monitor xmlrpc server running daemon process separate daemon gnuplot", "pypi_keywords_clean": ""}, "inveniosoftware/flask-sso": {"git_readme_keywords": "shibboleth authentication documentation documentation documentation packaging extension installation", "git_description_clean": "flask extension", "git_keywords_clean": "", "pypi_description_keywords": "shibboleth authentication documentation documentation extension installation coverage", "pypi_keywords_clean": ""}, "epsy/od": {"git_readme_keywords": "regular constructor od", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "regular constructor od", "pypi_keywords_clean": "ordereddict od syntactic sugar"}, "airtonix/cmsplugin-embedded-menu": {"git_readme_keywords": "perform contribute github configuration example django project django extension useful placeholder default template selector position project instance submit django application template administration branchs available relative element installation reference request github directory administration interface virtual environment dropdown manipulate interface example django project install github environment install populate template contain context cmsplugin purpose djangocms", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform contribute extension template selector product project configuration install template administration available relative cmsplugin installation application reference environment virtualenv directory administration interface dropdown manipulate interface example populate template djangocms", "pypi_keywords_clean": "plugin"}, "gizmag/django-fsm-log": {"git_readme_keywords": "package logging disabled compatibility default immediate support switch disabled specific backend logging excellent generic foreign useful integration visualize transition support unsupported statelog project project default support statelog object present database codecov support install package object available installation machine backend default integration inlineform cleanup compatibility python migration history unreleased address inlineform available changelog unreleased manager convenience display history deleted behaviour advanced register logging specific history breakage fsmintegerfield decorator address migration automatic logging nullable", "git_description_clean": "automatic logging django fsm", "git_keywords_clean": "django", "pypi_description_keywords": "package logging disabled compatibility default immediate support switch disabled specific backend logging excellent generic foreign useful integration visualize transition support unsupported statelog project project default support statelog object present database codecov support install package object available installation machine backend default integration inlineform cleanup compatibility python migration history unreleased address inlineform available changelog unreleased manager convenience display history deleted behaviour advanced register logging specific history breakage fsmintegerfield decorator address migration automatic logging nullable", "pypi_keywords_clean": ""}, "tarak/django-change-email": {"git_readme_keywords": "documentation application documentation available address", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "address", "pypi_keywords_clean": ""}, "ingwinlu/ssg-reloader": {"git_readme_keywords": "information browser directory something rewrite injection generation development installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "description", "pypi_keywords_clean": ""}, "/parallel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "conjunction elementary support socketpair creation", "pypi_keywords_clean": "parallel pprocess fork socketpair socket channel"}, "AndrewWalker/ccsyspath": {"git_readme_keywords": "licensed contribute request attribution experience ccsyspath ccsyspath compiler function retrieve install approach compiler continuous integration coverage development specific compiler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licensed contribute request attribution experience ccsyspath ccsyspath compiler function retrieve install approach compiler continuous integration coverage development specific compiler", "pypi_keywords_clean": "clang gcc compiler"}, "lukaszbanasiak/yahoo-finance": {"git_readme_keywords": "python available readable output currency monitor service install python avalible python module finance python refresh python historical finance backend python readable example service network development backend service", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python available readable output currency monitor service install python avalible python module finance python refresh python historical finance backend python readable example service network development backend service", "pypi_keywords_clean": "stocks market finance yahoo quotes shares currency"}, "aio-libs/idna-ssl": {"git_readme_keywords": "upcoming motivation capability contribution unicode installation shell", "git_description_clean": "patch unicode idna domains support", "git_keywords_clean": "asyncio aiohttp idna unicode ssl", "pypi_description_keywords": "upcoming motivation capability contribution unicode installation shell", "pypi_keywords_clean": "ssl unicode idna"}, "/jslint": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reporter suitable sophisticated crockford javascript", "pypi_keywords_clean": ""}, "yuvipanda/nbresuse": {"git_readme_keywords": "package parameter enforce jupyter notebook configuration indication extension jupyter toolbar notebook display environment variable jupyterhub threshold background background resource resource display serveral current notebook installation configured fraction resource", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/backup": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scikit-learn/scikit-learn": {"git_readme_keywords": "community information contributing development history notable cournapeau google scientific publication experience install documentation effective detailed detailed changelog license project machine python important project history helpful david cournapeau history project detailed information google summer website installation website citation support documentation request channel", "git_description_clean": "machine learning python", "git_keywords_clean": "python statistics", "pypi_description_keywords": "community information contributing development history notable cournapeau google scientific publication experience install documentation effective detailed detailed changelog license project machine python important project history helpful david cournapeau history project detailed information google summer website installation website citation support documentation request channel", "pypi_keywords_clean": ""}, "/repocket": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/kiwi-gtk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "graphical framework simple practical access display maintain building smalltalk", "pypi_keywords_clean": ""}, "divio/djangocms-teaser": {"git_readme_keywords": "installation plugin plugin django django south transifex", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation plugin plugin django django south transifex", "pypi_keywords_clean": ""}, "/brightcove": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python brightcove api"}, "lepture/otpauth": {"git_readme_keywords": "easyinstall wheel support generate validate google authenticator password authentication google dropbox verification authenticator version installation coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "easyinstall wheel support generate validate google authenticator password authentication google dropbox verification authenticator version installation coverage", "pypi_keywords_clean": ""}, "dcramer/django-paging": {"git_readme_keywords": "simple efficient efficient paginator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple efficient efficient paginator", "pypi_keywords_clean": ""}, "/reconfigure": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "streeter/django-db-readonly": {"git_readme_keywords": "database connection exception catch message messaging context middleware class responsible development connection cursor context processor request redirect request request license course database class handle nitty cursor addition middleware production catch exception database specific template testing django database error message enable middleware request action installation library module additional messaging specific cursor disable django cursor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection exception catch message messaging context middleware class responsible development connection cursor context processor request redirect request request license course database class handle nitty cursor addition middleware production catch exception database specific template testing django database error message enable middleware request action installation library module additional messaging specific cursor disable django cursor", "pypi_keywords_clean": ""}, "lazybird/django-carton": {"git_readme_keywords": "django carton clear django session remove display copy product urls project model django account instance product second occurrence product default behaviour customization database instance template access class access product project product remove default overwrite simple decide dotted product first define product install application filter implementing basic decide implement example application direct access model define quantity product add product container define stored django default queryset payment change quantity something overwrite method single occurrence arbitrary instance database object carton simple installation application product quantity model access object stored session key relevant first session container carton support product model add remove quantity arbitrary different different session django version queryset manager application example lookup product id stored session template lightweight thing product add several model queryset default template basic add install package remove single remove access product multiple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "product application session container lightweight implement template documentation example", "pypi_keywords_clean": "django carton cart shopping shop oscar session wich list ecommerce commerce"}, "pytest-dev/pytest-factoryboy": {"git_readme_keywords": "subfactory attribute injected generation function override register function factoryboy integration register fixture convention instance selfattribute circular dependecy combination collection unavailable generation documentation fixture prefixed example factoryboy integration example specialization possibility evaluation declaration available lazyfixture constructor several funciton regular combine approach keyword callable similar convention dependecy resolution attribute necessary function integration parametrization fixture registration bubenkov fixture attribute integration runner example address parametrization attribute pidsadnyi possible override internal container request fixture handy database transaction specific module lazyfixture function register install concept license software request circular module register concept library injection attribute fixture", "git_description_clean": "integration pytest runner", "git_keywords_clean": "", "pypi_description_keywords": "register function olegpidsadnyi support olegpidsadnyi fixture olegpidsadnyi deferred convention selfattribute example factoryboy command funciton factory fix keyword olegpidsadnyi automatical necessary fixture registration deferred evaluation factory fixture parametrization attribute database transaction function register install concept injected amakhnach fixture register fixture function compilation pidsadnyi anatoly override factory fixture function collection integration python fixture factory evaluation declaration specialization possibility specialization olegpidsadnyi compilation olegpidsadnyi relatedfactory attribute fixture attribute evaluation olegpidsadnyi django environment bubenkoff amakhnach fixture attribute posargs registration specific possible override internal container sliverc fix olegpidsadnyi module lazyfixture function module module register concept library fix lazyfixture invocation deferred subfactory attribute alphabetical generation function fix installation factoryboy integration package convert attribute olegpidsadnyi bubenkoff initial automatical resolution original instance olegpidsadnyi circular python fixture unavailable generation changelog fix support factory minimal version regular combine approach circular dependency similar convention dependecy resolution function integration olegpidsadnyi fix parametrization fixture dependency example address bubenkoff circular python python lazyfixture evaluation handy specific factory attribute minimal implementation factory possible version olegpidsadnyi dependency determination olegpidsadnyi minimal circular dependecy combination anatoly bubenkov documentation prefixed integration example available lazyfixture constructor several change python declaration deferred callable integration runner request fixture license software request circular python subfactory injection refactor", "pypi_keywords_clean": ""}, "sleekslush/flask-mailgun": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/fdroidserver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "aldryn/aldryn-people": {"git_readme_keywords": "delighted receive receive feedback django maintain request information installation grateful display", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "delighted receive receive feedback django maintain request information installation grateful display", "pypi_keywords_clean": ""}, "ambition-trial/ambition-reference": {"git_readme_keywords": "ambition reference", "git_description_clean": "reference model configurations ambition", "git_keywords_clean": "", "pypi_description_keywords": "ambition reference", "pypi_keywords_clean": "ambition"}, "/py3k-bcrypt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "algorithm computation implementation password scheme blowfish password version", "pypi_keywords_clean": "bcrypt bcrypt"}, "jruere/multiprocessing-logging": {"git_readme_keywords": "process project individual framework synchronization tunneling several verbatim stackoverflow library garbled example configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "multiprocessing logging logger handler"}, "/humongolus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fernandojunior/sqlite-orm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "crazy-canux/super-devops": {"git_readme_keywords": "feature new feature contribution new new feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "feature new feature contribution new new feature", "pypi_keywords_clean": "devops monitoring testing logging"}, "praekelt/molo-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "scaffolding application available directory paragraphs default unpack package application sensible scaffold command possible scaffold scaffolding language homepage package installation myapp cd package package multiple directory package template directory project requirement development praekelt foundation scaffold myapp client request install testapp configuration documentation follow praekelt django application command commandline parameter install requirement pypi package structure repository github scaffold testapp coverage package template interested application repository cd migrate installation method desirable command current directory application scaffold application directory scaffold current directory generated package repository install directory repository continuous integration amount customization running migrate createsuperuser repository version installed basic feature generated documentation documentation target browser request scaffolding proven createsuperuser runserver extra format convenience application unpack second argument argument directory praekelt documentation github repository entry generated documentation available installed installation", "pypi_keywords_clean": "praekelt mobi web django"}, "primetang/pyflann": {"git_readme_keywords": "pyflann introduction default install directory modify introduction pyflann library approximate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "flann"}, "wcdolphin/flask-headers": {"git_readme_keywords": "full github tweet invoke incanation full documentation decorate simple decorator order simple extension decorator decorate exercise", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/cmsplugin-filery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "minimal contribution necessary github report gallery installation original", "pypi_keywords_clean": "django web cms cmsplugin plugin image gallery"}, "/whereto": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license documentation whereto software apache apache redirect apache license", "pypi_keywords_clean": ""}, "goldmann/docker-squash": {"git_readme_keywords": "archive somewhere dockerfile instruction multiple possible example product license example dockerfile available structure option product distribution support docker unpack docker docker daemon control structure unnecessary squash problem docker temporary somewhere installation logical confirm necessary desireable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "archive somewhere dockerfile instruction multiple possible example product license example dockerfile available structure option product distribution support docker unpack docker docker daemon control structure unnecessary squash problem docker temporary somewhere installation logical confirm necessary desireable", "pypi_keywords_clean": "docker"}, "Javinator9889/urlencoder": {"git_readme_keywords": "license urlencoder download direct message urlencoder public charset copyright check license useful library original information check urlencoder single fitness particular public course merchantability fitness compatible installation version program public warranty merchantability software foundation charset redistribute modify general public program dictionary nowadays urlencoder particular message public license profile software redistribute version license dictionary special warranty requirement mention particular purpose urlencoder transform", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "umutbozkurt/django-rest-framework-mongoengine": {"git_readme_keywords": "compatible version minimal blinker mongoengine release incompatible original stuff install mongoengine support djangorestframework mongoengine django python mongoengine package incompatible previous subdir django pymongo installation django djangorestframework mongoengine version version number corresponding something github download github unpack mongoengine current environment branch pymongo mongoengine mongoengine blinker consider maintainer release github burkovba something django django project current release support documentation reimplemented ancient template download release framework mongoengine method documentation available mongoengine pymongo", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "mongoengine serializer django rest framework"}, "/polib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "divide empty fixed ordering attribute moentry unescape realise fixed version msgfmt occurence untouched ordering fixed inefficient mislead method pofile string msgmerge utility message context sajip profile module support version iterate performance improvement metadata ordering custom class support instantiate operation version version python plural ordering accurate unsorted fixed version allow allow empty check duplicate utility obsolete branch version flags attribute fixed duplicated branch poirotte fixed bug typo ordering language fixed typos support msgctxt python profile modify gettext constantino oliveira number comparison method poentry support previous error number referenced assignment gettext fixed fixed major error string method previous msgctxt msgctxt option version wheel stable support parameter account message download default jakub wilk exception instance readme changelog matter context msgctxt fixed regression msgid previous pofile initialization bug mismatch project method class bug divide license metadata fixed poentry moentry wilk version endianness bug added different context robust handle ability check number number additional gettext msgmerge length added jezdez added obsolete previous fixed added instantiate pofile version initial compliant small zacar\u00e3o fixed stable branch present version mismatch exception consistent poentry string length duplicate exception changelog version convenience fixed jezdez version header present msgctxt fixed bugtracker plural msgstrs class proper fixed typo build c pofile added python parsing robust fixed bug number unexpected fuzzy message added ability bebix handle added method newline deprecation msgctxt previous fuzzy property header comment filepath unicode sphinx documentation universal unicode support present pofile unused typ b\u00farigo zacar\u00e3o instance handling multiline handle msgctxt added support pofile added number fixed endian development status msgctxt version language metadata python support charset version pypi version wrapped pofile class invalid charset proper handling charset method release metadata poirotte version changelog present version version initial release previous msgid library fixed tcomment flags fuzzy header msgid different added fuzzy unclosed parameter added moentry consistent certain feature request obsolete makefile method version parsing revision number variable referenced number information ioerror typos various geisler fixed library manipulate unicode content poentry fixed codecs module tarball natural oliveira fixed mislead python content fixed gettext version boolean empty typo readme multiline handling gerundt fixed optional insufficient fixed python version python readme added unused charset added flags metadata version handle previous different msgctxt version number unicodedecodeerror lowercase blaszczyk compatibility python silva check determine support python garbage collection source potential unquoting proper version fixed wheel support compile spurious empty major revision support fixed added regression bug global various cosmetic unexpected fixed c locale typos grammar textwrap module wrong metadata", "pypi_keywords_clean": ""}, "/wstool": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "heterogenous workspace", "pypi_keywords_clean": "ros"}, "/xstatic-datatables": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jquery project xstatic packaging minimal support metadata xstatic", "pypi_keywords_clean": "datatables xstatic"}, "BertrandBordage/django-super-inlines": {"git_readme_keywords": "python tabular previous attribute selenium inherit compatible stacked example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python tabular previous attribute selenium inherit compatible stacked example", "pypi_keywords_clean": ""}, "/s3vcp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "boto version upload sync"}, "anentropic/django-conditional-aggregates": {"git_readme_keywords": "aggregation function standard django conditional complex query limitation build status implementation useful support django possible version decide example django python query aggregate combine different django control django django django normal certain query", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aggregation function standard django conditional complex query limitation build status implementation useful support django possible version decide example django python query aggregate combine different django control django django django normal certain query", "pypi_keywords_clean": ""}, "/js-angular": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "angular framework directory integration introduction library original", "pypi_keywords_clean": ""}, "rainwoodman/mpsort": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "projectmesa/mesa": {"git_readme_keywords": "visualization modular screenshot implementation interact running running container library segregation possible analysis container spatial developer interface analyze github version important framework install directory running alternative netlogo jupyter notebook browser window install github discussion request directory relative analysis example", "git_description_clean": "mesa modeling framework python", "git_keywords_clean": "mesa simulation gis", "pypi_description_keywords": "visualization modular screenshot implementation interact running running container library segregation possible analysis container spatial developer interface analyze github version important framework install directory running alternative netlogo jupyter notebook browser window install github discussion request directory relative analysis example", "pypi_keywords_clean": "agent based modeling model abm simulation"}, "junhwi/slack-logger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "slackformatter logger message python import import slackhandler someone python configuration installation message message slackformatter f hook integration example simple simple configuration f slackformatter logger python filter handler python simple python someone option profile integration simple slackhandler f slackhandler slackformatter member", "pypi_keywords_clean": "slack logging"}, "CivicKnowledge/geoid": {"git_readme_keywords": "decenial census instance census compact format census running represent summary allval tbd specific access summarize convert census summary represent coverage representation format civick module component instance conversion summarization", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decenial census instance census compact format census running represent summary allval tbd specific access summarize convert census summary represent coverage representation format civick module component instance conversion summarization", "pypi_keywords_clean": ""}, "rdegges/ipify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "console install client library branch project reason effectiveness library address lookup possible handling several service likely request happy algorithm maximum network simpler library standard contribution public likely machine complicate happy review official client status exponential backoff scalable version library project possible something console change internet handle author randall machine unable service return simplify installation install service internet backoff algorithm address request maximum effectiveness lookup service example python exception handling related purpose regardless release target", "pypi_keywords_clean": "python api client ipify ip address public service"}, "adamchainz/django-mysql": {"git_readme_keywords": "iteration variable inspection statement compression locking external underlying backend documentation dynamic columns inspection utility pagination exposition queryset installation mariadb dynamic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection argument output server dissipate process added added database application startup reverse added argument maturity added manager database iteration mistaken mysql compatible available attribute mysql configuration world django arbitrary database mysql universal wheel sensitive string return necessary framework efficient integration added clause added manager added complement django database release pypi session status different recursion mysql mariadb dynamic columns explicit deserialize argument iteration added command double access global escape invalid added integration added similar variable inspection primary added added function mysql remove universal fashion consistency django database added mysql added argument initial figure added regexp installation statement compression normal example performance mariadb output quick underlying object mysql fixing django mysql mysql upsert xml database import columns related added prefix argument function efficient iteration wheel version mysql string added xml lookup added mariadb added django django efficient version django support support mysql similar django allow remove locking external compression handler insert related database exposition upsert statement minimum maximum added method added backend message global session backend pypi added query engine insert status default django serializer monkey subprocess compatibility remove package added respective function allow efficient method refresh added support upgrade migration standalone package allow control status variable overquote support django proof default number python support connection system increase default added context property context reversed iteration parameter specify added option release regexp database incompatible change maximum primary django object queryset quick specify clause different mysql upgrading database database server condition added mysql database function underlying query django compatibility pagination added django package allow access mysql support second estimate added inspection utility extension added parameter useful shell release process mariadb dynamic string lookup single query dissipate added documentation migration whack default connection history documentation added temporary database boolean mysql query function simple compatibility added serializer framework initial chunk method query python columns added detail singleton similar foreign atomic append version number decoded database mysql aggregate support python column db version mysql high context manager query decorator prefix bugfix query string serialization", "pypi_keywords_clean": "django mysql mariadb"}, "philadams/habitica": {"git_readme_keywords": "default complete example habitica complete multiple excellent configure habitica account install character status project install restful habitica completion connect habitica habitica needed example record improvement habitica python interface section template habitica server", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default complete example habitica complete multiple excellent configure habitica account install character status project install restful habitica completion connect habitica habitica needed example record improvement habitica python interface section template habitica server", "pypi_keywords_clean": ""}, "nocarryr/json-object-factory": {"git_readme_keywords": "handler signature implementation installation default necessary signature signature implementation normal exception", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "handler signature implementation installation necessary signature object signature decoder normal exception", "pypi_keywords_clean": "json"}, "/nyx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python tarball install monitor detailed information bandwidth", "pypi_keywords_clean": "tor onion controller"}, "Keda87/chuck-norris-python": {"git_readme_keywords": "compatible installation internet chuck", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "chuck database", "pypi_keywords_clean": ""}, "/simpleitk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analysis powerful biomedical simpleitk abstraction", "pypi_keywords_clean": "simpleitk itk insighttoolkit segmentation registration"}, "/django-autocomplete-light": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple widget security autocomplete offering dynamic widget relation support widget support django generic example generic foreign widget creation support django django multiple support multiple django support elegant innovant contact", "pypi_keywords_clean": "django autocomplete"}, "earl/beanstalkc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library workqueue beanstalkd", "pypi_keywords_clean": ""}, "slackhq/rtmbot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/posix-ipc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software information available message available license creation manipulation license complete licensing information available history complete licensing interested similar compatible installation realtime contact", "pypi_keywords_clean": "ipc communication semaphore shared memory shm message queue"}, "shiroyuki/imagination": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/reno": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "encourage detailed organizes tracker interest describe incorporated multiple location history development original location possible correct sphinx integration freenode separate repository necessary documentation detailed accurate version original version process important software number version number manager incorporate individual throughput maintenance additional development restructuredtext logical", "pypi_keywords_clean": ""}, "codeinthehole/django-async-messages": {"git_readme_keywords": "dependency django message framework install suitable process implementation mechanism problem different expensive matter asynchronous multiple product persist memcache request message utilising django framework example storage backend django celery generate github unstable report general problem configured attribute processing offline minimum license changelog problem django process private branch license alternative storage celery library middleware backend django problem submit possibility celery", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dependency django message framework install suitable process implementation mechanism problem different expensive matter asynchronous multiple product persist memcache request message utilising django framework example storage backend django celery generate github unstable report general problem configured attribute processing offline minimum license changelog problem django process private branch license alternative storage celery library middleware backend django problem submit possibility celery", "pypi_keywords_clean": ""}, "/pyvimeo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sailthru/sailthru-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "binding sailthru information sailthru documentation documentation access throttle library installation example", "pypi_keywords_clean": "sailthru api"}, "laughingman7743/pyathena": {"git_readme_keywords": "install command compliant pyathena pyathena command version query parameter sqlalchemy installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install command compliant pyathena pyathena command version query parameter sqlalchemy installation", "pypi_keywords_clean": ""}, "williballenthin/ida-settings": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "schocco/django-staticfiles-webpack": {"git_readme_keywords": "custom django something sophisticated webpack storage django configuration bundle simple staticfilesstorage configuration install included django multiple install package section splitting webpack option caching hashed resolve directory content filename webpack configuration", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "custom django something sophisticated webpack demand bundle storage django configuration demand simple staticfilesstorage configuration install included django multiple section splitting webpack option caching hashed resolve directory content filename webpack configuration", "pypi_keywords_clean": "django webpack assets build static"}, "/py-applescript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "LordFlashmeow/pycent": {"git_readme_keywords": "noninfringement software distribute sublicense express substantial warranty documentation limitation liability restriction publish distribute fitness particular connection software merchantability fitness copyright percentage installation software software contract lordflashmeow permission", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement software distribute sublicense express substantial warranty documentation limitation liability restriction publish distribute fitness particular connection software merchantability fitness copyright percentage installation software software contract lordflashmeow permission", "pypi_keywords_clean": "percent percentage math"}, "loisaidasam/pyslack-real": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "slack api wrapper"}, "Turpial/libturpial": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "backend multiple microblogging libturpial", "pypi_keywords_clean": "twitter microblogging api libturpial"}, "hammerlab/topiary": {"git_readme_keywords": "particular mutation peptide length threshold download reference ensembl release minimum fpkm patient topiary predict combination peptide lengths mutation useful particular allele allele prediction binding binding prediction peptide ligandome example installation topiary attempt reference genome length comma recent ensembl fpkm somatic exception genomic binding predictor mutated specify comma protein unmutated release commandline output format directory tumor install topiary typical netmhc predictor expression predict cancer optional flags stringtie installation install predicted netmhciipan predictor download annotation predictor topiary netmhc available transcript expression detect netmhcpan predictor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "particular mutation threshold download reference ligandome mutation useful optional example somatic exception genomic binding predictor mutated unmutated ensembl particular directory install topiary typical topiary commandline expression stringtie predicted installation install download annotation predictor topiary transcript expression minimum", "pypi_keywords_clean": ""}, "lnielsen-cern/altmetric": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reference altmetric altmetric object altmetric installation detailed reference", "pypi_keywords_clean": "altmetric api wrapper export"}, "walchko/nxp-imu": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "limitation arduino copyright adjustable acceleration separate documentation walchko permission fitness particular resolution acceleration merchantability fitness subject resolution magnetic software limited express buffer substantial purpose noninfringement software software digital configurable liability contract distribute sublicense warranty restriction publish distribute adafruit particular purpose precision connection software magnetic", "pypi_keywords_clean": "raspberry pi nxp imu"}, "wagtail/django-modelcluster": {"git_readme_keywords": "import parentalmanytomanyfield relatedobject mccartney member constraint python import python class parentalkey class runner null value multiple foreign key possible bandmember lennon preview parentalmanytomanyfield class standard python integrityerror child database python memory redesign database integrityerror null work related copy example incomplete lennon bandmember import clusterablemodel parent parentalmanytomanyfield available mccartney bandmember workflow class actor subset queryset member lennon external system construct relation parentalkey bandmember mccartney parentalkey related database foreign class bandmember work python clusterablemodel import value column function python introspection bandmember related lennon mccartney available python parent record bandmember harrison import parentalkey requirement", "git_description_clean": "django extension allow working models single unit independently database", "git_keywords_clean": "", "pypi_description_keywords": "import parentalmanytomanyfield relatedobject mccartney member constraint python import python class parentalkey class runner null value multiple foreign key possible bandmember lennon preview parentalmanytomanyfield class standard python integrityerror child database python memory redesign database integrityerror null work related copy example incomplete lennon bandmember import clusterablemodel parent parentalmanytomanyfield available mccartney bandmember workflow class actor subset queryset member lennon external system construct relation parentalkey bandmember mccartney parentalkey related database foreign class bandmember work python clusterablemodel import value column function python introspection bandmember related lennon mccartney available python parent record bandmember harrison import parentalkey requirement", "pypi_keywords_clean": ""}, "raphaa/cmsplugin-htmlsitemap": {"git_readme_keywords": "project maintaint current language jasjukaitis regular expression navigation syncdb database installation terminal configuration configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "current language regular expression navigation syncdb database raphael jasjukaitis installation terminal configuration configure", "pypi_keywords_clean": ""}, "dilshod/xlsx2csv": {"git_readme_keywords": "convert sheetname outfile positional python ruby pattern standalone script sheetname sheetname delimiter lineterminator xlsx lineterminator dateformat version information floatformat floatformat delimiter delimiter default comma dateformat floatformat number convert sheetid sheetname separate install version installation python default comma lineterminator floatformat sheetdelimiter convert delimiter exclude parser optional ignoreempty xlsxfile outfile version number program version sheetname delimiter lineterminator lineterminator terminator directory dateformat dateformat xlsxfile xlsx option converter default dateformat version option default sheetid outfile output escape escape sheetdelimiter sheetdelimiter license gnu export", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "StefanLohmaier/slojsonrpc": {"git_readme_keywords": "handler python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "function signature compliance jsonrpcmethod slojsonrpc universal optional testmethod example", "pypi_keywords_clean": "jsonrpc"}, "bfontaine/freesms": {"git_readme_keywords": "service python interface status coverage status library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mobile interface", "pypi_keywords_clean": ""}, "nirum/tableprint": {"git_readme_keywords": "useful printing computation computation documentation compatibility default manager useful nicktimko mubaris readable version release support international creation dynamic pacakge multiple documentation console printing humantime clipboard tabular installation dependency updating description function useful converter function formatted initial release printing clipboard tableprint different ability release license license installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "computation formatted tableprint useful", "pypi_keywords_clean": "table print display"}, "graphql-python/webob-graphql": {"git_readme_keywords": "function pyramid exploration reactrelaynetworklayer graphiql function command request response graphql support provide graphiql execute application installation pyramid", "git_description_clean": "graphql integration webob based frameworks pyramid pylons", "git_keywords_clean": "", "pypi_description_keywords": "function pyramid exploration default graphiql function command request response graphql support provide execute application installation pyramid", "pypi_keywords_clean": "api graphql protocol rest webob"}, "wtsi-hgi/hgijson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "serialized mapping schema describe interface similar coupled serialization complex python representation particular superclass outdated python python documentation serialization process superclass implement arbitrary mapping information ability python library python serialization python overview implement interface mapping mapping coupled python", "pypi_keywords_clean": "json"}, "cfobel/fpga-netlist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "fpga netlist python"}, "danicarrion/pyrestcli": {"git_readme_keywords": "django model terminal virtualenv person enable virtualenv straightforward subclass cd folder commented endpoint possible object adapt server instance representation model object object python client communication support authentication compatible django collection github install documentation filtered caveat virtualenv install database http basic basic model install pyrestcli generic python model framework available install folder terminal usual pyrestcli installation order install django server schema look single object specify authentication web browsable attribute admin password pyrestcli model authentication http attribute object available server authentication basic default object complete example example http basic authentication pyrestcli generic adapt particular straightforward custom authentication example method object password admin object paginator compatible friendly representation model definition request download pyrestcli pagination django tutorial model pyrestcli", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "swingtix/swingtix-bookkeeper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bookkeeper system django swingtix bookkeeper first couple", "pypi_keywords_clean": ""}, "alex2/django-logtail": {"git_readme_keywords": "default django process interval fastcgi django command provide provide access development environment installation process django introduction logtail something django runserver process access installed dictionary django logtail permission polling therefore traceback django project django compatible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package django jquery javascript polling default python compatibility changelog django python django process pretend compatible victorgp interval fastcgi django documentation command gateway modeladmin provide jquery object element development environment installation process django functionality introduction logtail something necessary django runserver installed dictionary django logtail permission initial release polling therefore traceback django project ability django compatible quality javascript prevent django compatibility jquery dependency mediatemple", "pypi_keywords_clean": "django admin logfile viewer tail log"}, "pickleshare/pickleshare": {"git_readme_keywords": "database installation separate database directory concurrency support concurrency possible database object database picklesharedb object datastore concurrency pickleshare database concurrency dictionary", "git_description_clean": "file system based database uses python pickles", "git_keywords_clean": "", "pypi_description_keywords": "database installation separate database directory concurrency support concurrency possible database object database picklesharedb object datastore concurrency pickleshare database concurrency dictionary", "pypi_keywords_clean": "database persistence pickle ipc shelve"}, "/appium-python-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "underneath comparable context android application github development activity running unused writing uiautomation library finger app device way multiple functional parallel recursive element class driver method launch application addition running package docs information offset absolute single install history install removing application framework appium much order compliant selenium key commit format keyword current context arbitrary activity activity method lock device uiautomator search device certain download unarchive mobile touch activity application uiautomation search automation available contexts small number android device current running array application background format class application management argument number install pypi control way coverage functionality appium server selenium draft appium docs context method running application archive removing way appium work change changelog setup launch activity keycode device id application device activity protocol specification android emulator draft mobile single gesture device method bundle id official selenium functionality python mobile json android uiautomator source tarball search method current activity checking application tarball install xcuitest accessibility id mutable instrument certain application install new functionality device optional offset switch new field keyboard key contexts screen outside specification draft property method keyboard response package running running device instrumentalized desired relevant session selenium python install uninstalled removing focus new session scroll pypi download element search extension library certain amount follow method xcuitest element device unable device lock behavior appium viewtag search check application specification implementation particular new specification building object session control running local pip sequence application id touch format predicate application method implement new readable changelog native keyboard hidden session relevant python language amount activity property functionality android selenium module unittest environment server order new context build application device method method change direct package activity selenium specification library method provide convenience device property emulator instrument majority utilizable appium python uiautomator library simulate application return install source draft functionality device particular switch endpoint server possible perform number individual application launch foreground checking android viewtag element optional new concept direct connect information unarchive source xcuitest driver object driver id label current package uninstalled application perform multiple", "pypi_keywords_clean": "appium selenium selenium python client mobile automation"}, "mikusjelly/pyadb3": {"git_readme_keywords": "\u5b89\u88c5", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "\u5b89\u88c5", "pypi_keywords_clean": "python android adb"}, "crossbario/txaio": {"git_readme_keywords": "adapter platform cpython twisted compatibility python please choose runtime trunk trollius unmodified aka unmodified native event choose cpython trunk asyncio aka source asyncio stdlib system trollius python description platform support runtime import helper library twisted asyncio asyncio different approach twisted trunk twisted dependency stdlib cpython asyncio twisted python cpython", "git_description_clean": "utilities support code runs unmodified twisted asyncio", "git_keywords_clean": "twisted asyncio", "pypi_description_keywords": "adapter platform cpython twisted compatibility python please choose runtime trunk trollius unmodified aka unmodified native event choose cpython trunk asyncio aka source asyncio stdlib system trollius python description platform support runtime import helper library twisted asyncio asyncio different approach twisted trunk twisted dependency stdlib cpython asyncio twisted python cpython", "pypi_keywords_clean": "asyncio twisted trollius coroutine"}, "bcbnz/pylabels": {"git_readme_keywords": "introduction hatched nametags useful multiple library preview license katamotzikasi bonnett background fitness particular available merchantability fitness callback function warranty merchantability license copyright software foundation redistribute modify general public directory release custom selection public license reportlab software redistribute different parameter version license warranty object judson iterable callback prevent particular purpose standard reportlab", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hatched useful library preview license katamotzikasi bonnett website background available fitness particular merchantability fitness callback function github warranty merchantability license copyright software foundation general public standard reportlab selection public license reportlab software redistribute different version license warranty judson iterable callback prevent particular purpose github introduction directory github", "pypi_keywords_clean": ""}, "pivotal-energy-solutions/django-datatable-view": {"git_readme_keywords": "package columns columns support customizable conjunction jquery default support execution license license javascript current parsing jquery specific language direction project response example project copyright license applicable license version datatable bootstrap integration support customization collection present documentation database markup available version license copyright pivotal customizable software fnsetfilteringdelay package express dateutil library license specific directory control licensed version license detection fnsetfilteringdelay datatable rendered declarative library flexible template valenta replacement multiple datatable install package automatic compliance license", "git_description_clean": "datatable representations django querysets automatic rendering templates", "git_keywords_clean": "python django datatables", "pypi_description_keywords": "package parsing columns columns support customizable conjunction jquery license license support execution javascript current specific language direction project response example project copyright license applicable license version datatable bootstrap integration support customization collection documentation database markup available version license copyright pivotal customizable software fnsetfilteringdelay package express dateutil library license specific directory control licensed version license detection fnsetfilteringdelay datatable rendered declarative library flexible valenta replacement multiple datatable automatic compliance license", "pypi_keywords_clean": ""}, "gweis/isodate": {"git_readme_keywords": "timedelta duration format parameter default format format format implementation duration timedelta chosen century datetime object timedelta possible tzinfo object standard something string fractional timedelta object accepts several interpreted standard instance python standard representation invalid existent duration string license module installation module available negative duration duration object standard python version treated example limited string tzinfo accepts mixture incomplete python install convert possible detailed information string datetime information parameter default extended format duration string timedelta accepts format standard installation script datetime timedelta several representation object expanded format source release duration class distribute available possible convert module support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "output fractional timedelta duration expanded compatibility accepts implementation duration timedelta comparison timedelta chosen century python compatibility datetime object complete timedelta possible totimedelta support tzinfo object standard something timedelta object fractional multiplication duration loveridge accepts several usrenmae extended interpreted separator fractional standard instance license support python standard representation invalid documentation various python existent fixedoffset support separator available negative duration duration object standard python version todatetime duraction installation implement treated example duration reinoud incompatibility limited separator datetime accepts mixture virtanen incomplete coveney python install precision problem geoffrey fairchild hashable geoffrey michael hrivnak problem p release convert possible detailed information support incomplete dependency optional information parameter default initial release duration standard installation datetime timedelta several representation object bug comparison formattig duration class distribute available duck possible convert", "pypi_keywords_clean": ""}, "cldf/pycldf": {"git_readme_keywords": "package generic invalid validate possible columns installing package command example exception property ontology pycldf summary install command dataset interface validation default component columns dataset ontolgy", "git_description_clean": "python package read write cldf datasets", "git_keywords_clean": "", "pypi_description_keywords": "package generic invalid validate possible columns installing package command example exception property ontology pycldf summary install command dataset interface validation default component columns dataset ontolgy", "pypi_keywords_clean": ""}, "/openbaton-cli": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "csarnsd website check width px object issue compliant framework plugin mechanism generic management orchestration market specific language service management stackoverflow apache license monitoring system extensible presence specific information license version applicable descriptor vnfd project specification support service instance github issue command component python vdu information object update update tracker project additional issue tracker fault management documentation source object update python version management network level source public format csarvnfd service descriptor license copyright technical software express python install version license delete delete license specific sdk python vnfpackage object delete system available satisfy description objective community support network service python python comprehensive implementation virtual network script openbaton source project different vnfms runtime management monitoring information section request network function distribution copyright compliant implementation twitter compliance license", "pypi_keywords_clean": "python vnfm nfvo open baton openbaton sdk cli rest"}, "/ipysheet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spreadsheet jupyter", "pypi_keywords_clean": "ipython jupyter widgets"}, "/http4store": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "graphs changelog sparql service client", "pypi_keywords_clean": ""}, "MinchinWeb/minchin-pelican-jinja-filters": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project dateformat present install datetime november unicode website available applied sequence pelican titlecase catgory selection sequence example version installation generator project universal example install required", "pypi_keywords_clean": ""}, "/django-encrypted-model-fields": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django django python repository deployment cryptography library project specified support specify database terminal install database implement manual django management version development environment example compatible python deployment implement django encrypted heroku nature encrypted manual processing encryption encryption compatible content example different environment variable python cryptography requisite python updated example character management command keyczar excellent compatible design", "pypi_keywords_clean": "encryption django fields"}, "zTrix/zio": {"git_readme_keywords": "unified interface subprocess module python subprocess primary project support termcolor installation python license change interface process python termcolor dependency install termcolor server library pwning process pwning pwning development python document termcolor optional carriage return related installation project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unified interface subprocess module python subprocess primary project support termcolor installation python license change interface process python termcolor dependency install termcolor server library pwning process pwning pwning development python document termcolor optional carriage return related installation project", "pypi_keywords_clean": "zio pwning io"}, "/pyorient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute important install injection vulnerability protocol version potential request orientdb library installation orientdb version orientdb command", "pypi_keywords_clean": ""}, "/minimal-snowplow-tracker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python tracker original snowplow build status specific language snowplow python copyright license license snowplow applicable license version tracker number copyright fishtown tracker copyright python software copyright snowplow express overview license specific fishtown snowplow event quickstart event tracker license software snowplow tracker python compliance license", "pypi_keywords_clean": ""}, "/environment-tools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GregBowyer/cld2-cffi": {"git_readme_keywords": "package contribute licence default rework determine reverse original language detector chromium separate percent confidence documentation hintlanguagecode detectable detection library revision several github coverage example global reference identical install development compact language development version external replacement language detection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package contribute licence default rework determine reverse original language detector chromium separate percent confidence documentation hintlanguagecode detectable detection library revision several github coverage example global reference identical install development compact language development version external replacement language detection", "pypi_keywords_clean": "cffi"}, "spantaleev/flask-sijax": {"git_readme_keywords": "sijax setup simplify sijax extension microframework microframework simplify", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library extension microframework microframework simplify", "pypi_keywords_clean": "ajax jquery flask"}, "FormAlchemy/pyramid-fanstatic": {"git_readme_keywords": "package scaffold scaffold project dynamic process application fanstatic specify fanstatic library precedence utilise request environment directory specific default resource pyramid scaffold library definition multiple special", "git_description_clean": "use fanstatic pyramid tween", "git_keywords_clean": "", "pypi_description_keywords": "package documentation coverage fanstatic library changelog default resource library definition multiple pyramid handler fanstatic specify project application dynamic process scaffold available fanstatic backward handler resource directory davidjb document initial nothing request environment scaffold scaffold precedence utilise specific current request pyramid scaffold special", "pypi_keywords_clean": "pyramid fanstatic js css"}, "carlopires/siphashc3": {"git_readme_keywords": "python siphash floodberry version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python code python python code python python version", "pypi_keywords_clean": ""}, "openslate/tag-version": {"git_readme_keywords": "installation information friendly suggestion current branch candidate number message increment release tracker rewrite unique version invocation utility project argument increment revision version candidate bumping release candidate example number default useful branch branch version number append release semantic versioning descriptive sequence consistent different version current version bumping increment versioning source release version subcommand addition", "git_description_clean": "semantic versioned git tags", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "erezsh/plyplus": {"git_readme_keywords": "grammar useful library example unicode powerful stable pypy compatible plyplus tutorial plyplus grammar compatible python modern design cleaner check simple python grammar branch builtin python parser library define multiple hello world notice pypy q prefix attention plyplus project plyplus maintenance readability important solution check explanation transformer transformer engine q nested readme evaluate humble machine tutorial something q plyplus follow python attribute select context python pypy module query check tutorial simplicity builtin config readable portable plyplus capable calculator plyplus handle python plyplus isinstance plyplus parser powerful parser unicode support benefit grammar grammar license afterword grammar python simplicity readability useful example q q flexibility handle plyplus plyplus python parser python python application thread enough candidate plyplus section calculator example config grammar special grammar plyplus pydot numpy application matter check experimental engine output separation something simple plyplus friendly capable plyplus handle trickier directory simple calculator support python priority right q capable different license plyplus query context context", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "automatic process cleaner regular flexible grammar processing plyplus understand different approach powerful grammar customizable grammar readable function uncommon", "pypi_keywords_clean": "lr parser ast ply"}, "sigsep/museval": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "secynic/ipwhois": {"git_readme_keywords": "object request protocol recursive default regional internet documentation experimental ipwhois optional query support national internet documentation national readable useful utilities experimental structure legacy documentation github library majority registry support utilities documentation legacy description address firewall argument license previous implementation additional standard dictionary documentation legacy autonomous system extensive request proxy incnir argument detailed network reputation support origin github stable stable github target summary functionality recursive network ipwhois python release support project python installing console output internet registry feature consideration network information utilities utilities warning support feature ipwhois dictionary support python python summary ipwhois master target lookup integer lookup method protocol object support legacy tekdefense automater method socket python package source support contact information proxy support support special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full support country added parsing argument output parameter fixed protocol recursive information added whois documentation original argument determine limetime krnic lookups assertisinstance python lookup fallback useful lookups improved library detail added class class original socket exception description address function fixed firewall lookups previous directory fixed encoded pypi github fixed http standard dictionary calculation fixed statement loopback conflict documentation legacy asnoriginlookuperror krnic version extensive avoid duplicate incnir argument parsing updated testcommon avoid fixed assertisinstance domain support lookup support functionality updated elasticsearch issue deprecated thank issue return support project fixed exception issue added exception httpratelimiterror parsed formatting class declaration release pypi bug legacy allow alternate conflict fixed dictionary support thank chris summary ipwhois added national fixed apnic release documentation origin lookups minor support legacy updated example validation zulu fixed socket support bsd method lookups jpnic whois support added optional contact information whois protocol lookups cymru fixed recursive support special favor added object request documentation experimental ipwhois optional extra network whois lookups national internet formatting complete python requirement support thank bootstrap parameter pragma documentation github resolver support whois rikonor added added parsing whois argument mixed bug added krnic support sphinx fixed bug output jpnic krnic additional infinite recursion work sphinx parsing validation italomaia issue deprecated unnecessary autonomous system performance domain whois indexerror fixed majority whois reputation support baseipwhoisexception referral lookups structured system github stable format added deprecated issue added detail deprecated favor python installing timeout socket loop issue function updated field disable passing support feature added utils master target field fixed parameter bool parameter inclusion asnparseerror fixed allow parsing parsing contact fixed bug ipwhois fixed unspecified loopback apnic parsing vs legacy issue fixed argument example http lookup upgrade level regional internet enhancement normalization field partial readme update return namedtuple fixed parameter parsing added utilities experimental look tekdefense default disable warning deprecated bulk query whois http fixed parsing human readable bug exception python fixed elasticsearch example added support previous implementation support address readable field lookups added limetime interval support added sphinx minor support jpnic future release online offline coverage python added httpratelimiterror added added experimental detailed network japan query deprecated fixed datetime ipwhois class library domain zulu z origin automater domain target summary release tbd recursive network fixed license human timeout determine exception asnoriginlookuperror added example helper function fixed updated feature consideration internet registry temporary added logging http legacy optimization added complete fixed lookups fixed python python fixed deprecation lookup process detailed tekdefense automater fixed lacnic integer timeout bootstrap added python package exception asnparseerror avoid default regex example avoid proxy support major library iteration exception thank verbose download country infinite loop fix fixed argument fixed field information declaration documentation legacy whois query support documentation national basic stress result experimental bulk fallback lookups network parsing cdubz python origin lookup recursion bug structure legacy https added added parameter interval fixed registry support utilities documentation http fallback datetime parsing whois output check style exception indexerror bug argument bsd license readability minor optimization afrinic parameter issue afrinic bootstrap request proxy registry jpnic default timeout exception http lookups ipwhois utils optional bootstrap documentation comment added basic stable github fixed infinite referral whois integration online ipwhois python added normalization github pypi entity iteration support python public return library transition console output detailed information installed network information http utilities utilities ipwhois support fixed documentation sphinx lookup method argument deprecated napoleon parsing object output fixed logging added project look added documentation information readme source support http decoding dnspython added cstranex fixed parameter ipwhois bool allow rikonor fixed", "pypi_keywords_clean": "python whois rwhois referral whois asn ip address ip ietf rest arin ripe apnic lacnic afrinic nic national information center rdap rir regional internet registrynir national internet registry asn origin origin"}, "sfermigier/whooshalchemy": {"git_readme_keywords": "library whooshalchemy blogpost import column whooshalchemy indexed whoosh column integer python compatibility whooshalchemy import import library column import import import tablename searchable stefane response object import indexservice license blogpost fileindex indexservice blogpost sessionmaker session import integer service register gyllstromk example version python memory session engine memory session session datetime import object import config indexservice example import directory standard sqlalchemy sqlalchemy content column indexservice standard fileindex filestorage session sessionmaker object append import sessionmaker service config sqlalchemy engine", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library whooshalchemy blogpost import column whooshalchemy indexed whoosh column integer python compatibility whooshalchemy import import library column import import import tablename searchable stefane response object import indexservice license blogpost fileindex indexservice blogpost sessionmaker session import integer service register gyllstromk example version python memory session engine memory session session datetime import object import config indexservice example import directory standard sqlalchemy sqlalchemy content column indexservice standard fileindex filestorage session sessionmaker object append import sessionmaker service config sqlalchemy engine", "pypi_keywords_clean": ""}, "/drivelink": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection memory constant build status documentation status available coverage status performance documentation available status collection", "pypi_keywords_clean": "memory"}, "nevimov/django-easycart": {"git_readme_keywords": "context processor project easycart machine application django everything tracker install virtualenv basecart baseitem project github available request easycart flexible trivial optional virtual environment flexible shopping reusable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "easycart easycart application processor basecart baseitem easycart flexible optional flexible shopping reusable", "pypi_keywords_clean": "django shopping cart basket trolley"}, "rackerlabs/rackspace-auth-openstack": {"git_readme_keywords": "openstack rackspace rackspace authentication", "git_description_clean": "rackspace auth plugin novaclient", "git_keywords_clean": "", "pypi_description_keywords": "openstack rackspace rackspace authentication", "pypi_keywords_clean": ""}, "/ladon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package subpackage possible map possible control added reserved possibility add folder greek mythology added proper interested logfile gil current documentation collection asynchronious communication new new class documentation jsonwsp description httpattachmentresponse customresponse example request fix request keyword service added optional invokable service cheetah added minimum debug argument default server fault key method project multipart response shell command implement service module meaning framework method example added lgpl function publisher keyword serverfault callback problem ladonwsgiapplication thing current logging request select onchange work compatability integration impossible literal version added ability thirdparty bitbucket define custom kind technology inline documentation added new fixed multipartwriter client bluebox notation new added feature added support new support application python support cheetah favor jsonwspclient class internal logging new keyword version ladontype python compatability added possibility serverfault clientfault argument keyword cidx format contain example new configuration keyword client question format cidx action request ui new return value first action testserve bug proxy feature script several def download response request request status origin filesystem added reflection python interface fault command new optional key support ladontype attachment buffer bug boundary caching option constructor preliminary timestamp execution jsonwsp response much documentation query description http dispatcher new support general documentation ladonize added internal class documentation possible request id new dictionary client support fault response soaprequesthandler fixing script script report different publishing used validate new jsonwspclient single module reflection fault new default import new body thread new decorator example interface documentation add request default class doc jsonwsp javascript new experimental module task remark python new documentation dispatcher value empty general ladonctl bluebox invokable installation description method added jsonwsp request args keyword argument respond browser document literal description service navigation new small basefaulthandler class fix support bluebox fixed bug pass detailed keyword description service interface tasktype instance implementable multiple onchange added debug logging compatible shell fixed problem new feature browser navigation client possible reference method invocation jsonwspclient javascript process good new debug parameter documentation ajax backend specific callback client new attachment new bugfix default value reference format possible service documentation example client added ability define fix version python client request dictionary dispatcher memory ladontype placeholder default ladonwsgiapplication http return index meaning gil problem service description new fixed boolean shell script class fault feature python interface description good thing new bug repository jsonwsp integration nullable added keyword extra styls ladonwsgiapplication export class person multiple web implement faulthandler new fixed client new example ladonize added dispatcher new catch option configure ladonize decorator support interface custom response keyword args ladonwsgiapplication constructor caching web browser added fault logging new styls service global python major enhancement decorator support documentation browsable method new service parameter support ideal ladonize new package new bug added new synchronious service class current implementation added bluebox track client language added python new argument prevent restructuredtext description default theme documentation browser download args service person ladontype direct web fix added version browsable interface bug exception attachment reference new attribute documentation new customresponse bug class httpattachmentresponse args return conversion complextype contribute plenty feature detection experimental python add extra present server new fault python jsonwsp filesystem multipart jsonwsp short internet service proper http nullable javascript client enhancement support jsonwsp client service developer enable feature jsonwspclient new example class valid added compatible debug level technology preview accessible jsonwsp interface unreported bug delete temporary interface much support python dragon greek added repository new possibility redis new service documentation ladonctl subcommand different support fixed possible add support cheetah compat module client fault client update new fixed new baseinterface class description jsonwsp python jsonwspclient previous update current solution rewrite soaprequesthandler development documentation jsonwspclient browser support interface new jsonrpc interface service method response specific web service new service access service new fix unmanaged server member xmlrpc developer define documentation online request description synchronious process interface soapdocumentliteral specific service task service protocol added compat full service control process method ladonized new major implementation document source package keyword ladonize custom bug fixed level new present request first command new python bugfix multipartwriter effort import jsonwspclient first argument new added ladontype new nillable bugfix posting loglevel minimum navigation interface new jsonrpc form change communication exception logging download response execution solution developer pass client client ability add jsonwspclient added lack python several internet added logging python python choose different method customresponse args new support multiple ideal ajax documetation description specification shift service ui mechanism new package change fixed configure fault handler integrity new documentation added feature attachment testserve new ladonwsgiapplication new implementation work bug fixes extendable proper task execution ladontype attribute extra configuration", "pypi_keywords_clean": "ladonize"}, "smartfile/django-mysqlpool": {"git_readme_keywords": "introduction threadlocal problem threaded performance closing imperfect backend backend configuration service mysql backend configuration connection specific service utilized connection default django library queuepool multiple similar situation decorator sqlalchemy imperfect threaded application queuepool available conncurrent identify specific example process backend specific django mysql number closing nothing important failure success connection management backend usefulness database backend connection django database closing connection sqlalchemy documentation configure backend django project connection service mysql specific revision relevant menendez problem implementation specific connection closing connection database disable", "git_description_clean": "django database backend mysql provides pooling ala sqlalchemy", "git_keywords_clean": "", "pypi_description_keywords": "thread threadlocal process certain problem threaded imperfect backend backend configuration service performance closing mysql backend threaded server configuration connection specific service utilized connection project smartfile default django library queuepool multiple similar situation decorator actual sqlalchemy imperfect threaded application queuepool available daemon project conncurrent software figure example identify specific solution global important backend specific django mysql closing nothing failure success unusable connection management release backend usefulness database backend connection django database certain number closing connection freeze django sqlalchemy documentation configure backend mysql connection django project connection service mysql server mysql specific revision relevant mysqlpool daemon smartfile introduction menendez method problem implementation specific connection closing connection database disable", "pypi_keywords_clean": ""}, "/pychecker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spurious compiler pychecker dynamic infrequent", "pypi_keywords_clean": ""}, "beastbikes/django-adminlte-admin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mikemalinowski/launchpad": {"git_readme_keywords": "perform contribute invokable variable example launchaction excellent collaborative behaviour accessible environment example distinct abstract scribble accessible consistent optional actionable process population dynamic indiciation functionality launchpanel viability mechanism description current environment general dictionary compatibility launchpad fantastic overview launchpad descriptive information specific collaboration oppotunity structure dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform contribute invokable variable example launchaction excellent collaborative behaviour accessible environment example distinct abstract scribble accessible consistent optional actionable process population dynamic indiciation functionality launchpanel viability mechanism description current environment general dictionary compatibility launchpad fantastic overview launchpad descriptive information specific collaboration oppotunity structure dictionary", "pypi_keywords_clean": "launch launchpad pad action actions"}, "/stix-validator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "schemas verify guidance validate interpreter xml acceptance xml schema schematron output experimental validate documentation information schema xml tool api information please document copy validation script library xlsx validator information package python conversion valid replacement python library parsing processing c profile conformance document validator python interpreter method submodule validate install package perform execute command perform cybox minimum guaranteed guaranteed work xml processing stdout cybox schematron conversion processing library xml document conformance experimental schema repository xslt xslt use agree script validate directory cybox common error cybox schema xml schemas profile validation schemas order system schemalocation validate schematron schematron external validate directory python tool installer lxml xlsx library insufficient version use flag cybox document pip install xslt output order validate source documentation python installation experimental verify conversion script schematic schema validation xslt conversion validation validate health validation xml instance use schemas build status validate multiple possible schema submodule profile schematron validator python script use practice guidance schemas validate install install outside cybox xml schema directory something validator use cybox validation script perform validate use stdout python script profile xslt c library flag pass document validation directory common please refer verify alignment", "pypi_keywords_clean": "stix cybox xml validation validator"}, "/rfidiot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/script": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python statement convenient command \u00e0 documentation useful command invocation termination command external something redirection invocation optional control", "pypi_keywords_clean": ""}, "miurahr/unihandecode": {"git_readme_keywords": "package interpreter availability copyright hiroshi unidecode recognize useless \u660e\u65e5\u306f\u660e\u65e5\u306e\u98a8\u304c\u5439\u304f japanese writing install unihandecode limitation library setuptools library charactor application support unihandecode description version copyright version unihandecode unihandecode available license unihandecode unidecode character version dictionary documentation \u660e\u5929\u660e\u5929\u7684\u98ce\u5439 chinese unhandecode displayable fitness particular accessible bazzar repository merchantability fitness chinese \u660e\u65e5\u306f\u660e\u65e5\u306e\u98a8\u304c\u5439\u304f version character transliteration version program warranty merchantability example software foundation support unicode character database unihandecode unihandecode copyright meaning language unicode copyright unicode repository unicode character function general particular purpose software redistribute attempt transliteration dependency problem japanese character version license complex unicode version platform miurahr copyright warranty program installation install language example example meaning example \u660e\u5929\u660e\u5929\u7684\u98ce\u5439", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unihandecode useless unknown", "pypi_keywords_clean": ""}, "open-iscsi/configshell-fb": {"git_readme_keywords": "library building original version number license development configshell discussion gentoo framework building risingtide compatible building configuration", "git_description_clean": "configshell additional modifications see readme", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "diogoosorio/flask-ink": {"git_readme_keywords": "package javascript account sapocdn extend template extension convenience extension extend template common header abstraction template available document whole assetlocation instance javascript library required minify parameter installation limited application content delegate responsibility information configuration roadmap delegate something bootstrap right elegant responsive function couple information calendar progress navigation parameter assetlocation whole document abstract necessity static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kalikaneko/openlibrary": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "allow library", "pypi_keywords_clean": ""}, "/sitegen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generator", "pypi_keywords_clean": "sitegenerator web html generation"}, "andreasjansson/headintheclouds": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyredpitaya": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation python different application ipython pyredpitaya computer interface computer process install interactive python generator pyredpitaya package interface different server install pyredpitaya redpitaya computer interface python install command python installation process interface python library access object computer download download package address overview package communicate computer", "pypi_keywords_clean": ""}, "OiNutter/crawl": {"git_readme_keywords": "python crawl possible original mckenzie crawl credit install happy everything command commmand license copyright stephenson sstephenson please license please specify discuss rewritten install development necessary crawl crawl request submit copyright mckenzie", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python hike", "pypi_keywords_clean": ""}, "nandoflorestan/bag": {"git_readme_keywords": "javascript current javascript internationalization pyramid traversal readable complete solution multiple library documentation library extensible address harvester function argument combination validation correctness compatible jquery language pyramid keymaker function solution javascript gradual version datetime decimal solution database duplicate convenient sqlalchemy framework internationalization compatible ultimate context sqlalchemy initialization dispatch streams unicode subclass pathlib something corrupt encoder function available sqlalchemy convenient generation independent powerful different protection various sqlalchemy sqlalchemy pyramid program hanging browser advanced throwing service problem exception interaction console navigation progress important library decorator achieve disable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript current javascript internationalization pyramid traversal readable complete solution multiple library documentation library extensible address harvester function argument combination validation correctness compatible jquery language pyramid keymaker function solution javascript gradual version datetime decimal solution database duplicate convenient sqlalchemy framework internationalization compatible ultimate context sqlalchemy initialization dispatch streams unicode subclass pathlib something corrupt encoder function available sqlalchemy convenient generation independent powerful different protection various sqlalchemy sqlalchemy pyramid program hanging browser advanced throwing service problem exception interaction console navigation progress important library decorator achieve disable", "pypi_keywords_clean": "python"}, "tailhook/cantal": {"git_readme_keywords": "implementation library expermimental aggregator documentation protocol submit available submit monitoring monitoring solution reference implementation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project expermimental otherwise contribution documentation additional contribution inclusion monitoring library example", "pypi_keywords_clean": ""}, "/bytecodeassembler": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "numeric spurious proper support initial support access constant interpreter statement template optimizer generate adjacent complete generate spurious change performance emulation python python broken distance standard library number handling addition emulation argument analogue implement massive documentation statement analogue symbol generation constant prediction consistency opcode function python support absolute ability constant version symbolic difference version manual version constant bytecode generation dynamic attribute python support software number version initial calculation python support backward incorrect folding extensibility bytecode various attribute access bytecode assembler backward emulation support python something sequence function constant handling constant variable generation system attention specific python handling optimizer constant folding distinguish generation maximum support functional unhashable discussion object bytecodeassembler internal maximum performance extensible framework transform closure support mechanical performance change iterable method logical decorator impossible generate bytecode progress classmethod absolute backward", "pypi_keywords_clean": ""}, "click-contrib/click-configfile": {"git_readme_keywords": "appveyor python example necessary package generic functionality similar way addition support way specify configuration optional specific configuration way little specify converter status functionality schema configuration number generic python source status python python command example functionality composable way configuraion command implementation snippet python travis method example python python package processing specific beautiful command specify configuration problem solution configuration schema", "git_description_clean": "extends click https functionality adding support commands use configuration files", "git_keywords_clean": "", "pypi_description_keywords": "package composable framework support configuration functionality", "pypi_keywords_clean": "click configfile configparser"}, "mdgoldberg/sportsref": {"git_readme_keywords": "subject change sportsref related change documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "SOBotics/botpyse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "axt/bingraphvis": {"git_readme_keywords": "analysis visualization support bingraphvis project underlying structure functionality abstraction development limited functionality", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "visualisation binary", "pypi_keywords_clean": ""}, "dropbox/nsot": {"git_readme_keywords": "application height width metadata network width network database repository width height network infrastructure inventory metadata management automation network source automation network", "git_description_clean": "network source truth open source ipam network inventory database", "git_keywords_clean": "python ipam ssot networking django", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "funkybob/django-nap": {"git_readme_keywords": "different framework modular approach overview definition separate something necessary template provide", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different modular framework approach overview definition separate something necessary template provide restful", "pypi_keywords_clean": "django"}, "/topology": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "marker documentation communication feature capable modular framework support deprecated subclass authentication connection feature backward injection attribute expansion search initial public release license search symbolic register identation critical execute command default specific language copyright c framework building broken logger reachable initialization practice backward compatible network inject compatible documentation changelog example common decorator exception processing unparseable function public release common behavior injection feature ignored processing software documentation license version making absolute communication library servicesapi possess variable common enterprise development object attribute attribute injection rollback routine pytest specific injection hidden support multiple compliance license version requirement requirement pexpect logging functionality reference documentation applicable connect process identifier available history several relative internal properly exception documentation attribute license copyright express license specific directory module deprecated topology modular manipulation unexpected information version license injection possess platform context manager documentation pexpect", "pypi_keywords_clean": "topology"}, "/demjson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard comprehensive implementation support javascript portability jsonlint useful library", "pypi_keywords_clean": "json jsonlint javascript"}, "/push-notifications": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sony/nnabla": {"git_readme_keywords": "network console network construction computation architecture neural technology available contribution neural network c runtime multiple recommend extensible memory optimization flexible runtime portable python network development command evaluation inference flexibility productivity utility neural embedded library neural extension library inference neural parameter manipulation sophisticated expressive python runtime library dynamic computation specialized framework number jupyter tutorial computation efficient functionality system development production format converter network classification construction neural version neural paradigms backend extension extension extension repository c source computation graph docker dynamic graphs flexible expressive deployable embedded library inference jupyter notebook support documentation documentation building desktop documentation portable runtime network example neural development installation research development runtime runtime building source productivity example dataset parameter", "git_description_clean": "neural network libraries", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "deep learning artificial intelligence machine learning neural network"}, "/jupyterlab-launcher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jupyterlab application", "pypi_keywords_clean": "jupyter jupyterlab"}, "platypus-creation/django-draft": {"git_readme_keywords": "button available knowledge support reload current database draftadmin reload javascript compatible default installation creation display", "git_description_clean": "draft admin", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nvie/pluck": {"git_readme_keywords": "package iterator equivalent default throw default iterable version pluck return pluck multiple pluck import iterator throw exception plural keyword pluck ipluck datetime pluck single pluck pluck iterable getter exception recent keyword argument order nothing pluck pluck valueerror r import pluck datetime datetime simple example access ipluck iterable iterable module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package iterator equivalent default throw default python compatibility iterable version equivalent history pluck multiple pluck import iterator throw exception plural keyword pluck ipluck datetime pluck single pluck pluck iterable example exception recent getter keyword argument pluck pluck documentation initial import pluck nothing initial release valueerror datetime datetime access ipluck iterable iterable module", "pypi_keywords_clean": ""}, "/colorbrewer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python program colorbrewer", "pypi_keywords_clean": ""}, "djaodjin/djaodjin-answers": {"git_readme_keywords": "evaluation project djaodjin upvoted", "git_description_clean": "django app q site", "git_keywords_clean": "", "pypi_description_keywords": "evaluation project djaodjin upvoted", "pypi_keywords_clean": ""}, "socialwifi/routeros-api": {"git_readme_keywords": "routerboard mikrotik example", "git_description_clean": "python api routerboard devices produced mikrotik", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "internetarchive/surt": {"git_readme_keywords": "information version package installation install transform python package package original version package module", "git_description_clean": "uri reordering transform surt python module", "git_keywords_clean": "", "pypi_description_keywords": "information version package installation install transform python package package original version package module", "pypi_keywords_clean": ""}, "ddanier/django-ajax": {"git_readme_keywords": "decorator utility convert utility template syntax context authentcation information multiple browser decorator original context processor model syntax utility structure example session context method convert various nothing render various object output function response template javascript general decorator utility function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decorator utility convert utility template syntax context authentcation information multiple browser decorator original context processor model syntax utility structure example session context method convert various nothing render various object output function response template javascript general decorator utility function", "pypi_keywords_clean": ""}, "nvictus/pqdict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hashable build implementation insertion standard library location hybrid license module pqdict priority available license removal dictionary pqdict result pqdict priority python pypy module python hettinger documentation documentation search lookup python standard status priority documentation available documentation status", "pypi_keywords_clean": "dict priority queue heap scheduler data structures"}, "/aspen-jinja2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jrief/django-angular": {"git_readme_keywords": "perform message djangorestframework javascript sekizai postprocessor response communicate invalid validate endpoint promise transition angularjs controller project support validation roadmap angular incompatibility compliant documentation seamless integration future deprecated version documentation readthedocs angularjs sekizai templatetag license copyright django support angularjs postprocessor deprecated content backward incompatibility something controller uploading customized controller angularjs version integration django anymore license connect angularjs directive anymore similar directive validation django upload angularjs directive applcaiton backward fulfill combine django django angular future roadmap", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform message djangorestframework javascript sekizai postprocessor response communicate invalid validate endpoint promise transition angularjs controller project support validation roadmap angular incompatibility compliant documentation seamless integration future deprecated version documentation readthedocs sekizai templatetag angularjs backward django license copyright support angularjs postprocessor deprecated content backward incompatibility something controller uploading customized controller angularjs version integration django anymore license connect angularjs directive anymore similar directive validation django upload angularjs directive fulfill combine django django angular future roadmap", "pypi_keywords_clean": "django angularjs"}, "albertz/better-exchook": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "comprehensive overview syntax highlighting copy single default f python example python import x b function x image similar nicer python install usage output output b nameerror pip install nameerror global typeerror finalfail sys z nameerror project argument x z support function z sys module b sys screenshot image f x traceback recent function f lambda x exception traceback r stackoverflow question screencast image module nameerror much comprehensive f function something similar multiline related stackoverflow python source question albert python output highlighting python installation copy information available installed useful information albert zeyer image screencast relevant", "pypi_keywords_clean": ""}, "synbiochem/libchebipy": {"git_readme_keywords": "libchebipy libchebipy available libchebipy python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "libchebipy database", "pypi_keywords_clean": "chemistry cheminformatics chebi"}, "lgastako/db-sqlite3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}}