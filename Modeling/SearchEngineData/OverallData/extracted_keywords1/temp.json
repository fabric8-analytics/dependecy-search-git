{"aflc/editdistance": {"git_readme_keywords": "algorithm hashable object license python simple simple implementation install object python distance ipython several iterable block python binary block method library distance simple benchmark editdistance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "omerucel/basitapi": {"git_readme_keywords": "gnderilmekte ktphane django durumlar verebilirler basitapi method isimli method parametresi parametreyi kullanabilirsiniz olursa komutu kullanabilirsiniz dosya kodlarna kullanabilirsiniz github parametre kullanabilirsiniz kullanm ilemler temelli durumda alabilmesi formatlamanza github zerinden gnderildiinde durumu sunduu ayarlamak istemiyorsanz oluturmanzda ayarlanabilmekte kurulum kurulu zellikleri isimli parametreyi gnderdiiniz method zellikler balantdaki suppress response ezilmesi metodlar gndermekle istemciler sadece gndermekle kstlandrlabilirler yantlar suffix yardmc method parametresindeki zerinden kurulum vermekte formatn ayarlamak basitapi restful istemiyorsanz balantlarnz balantdaki method aadaki komutu", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gnderilmekte ktphane django durumlar verebilirler basitapi method isimli method parametresi parametreyi kullanabilirsiniz olursa komutu kullanabilirsiniz dosya kodlarna kullanabilirsiniz github parametre kullanabilirsiniz kullanm ilemler temelli durumda alabilmesi formatlamanza github zerinden gnderildiinde durumu sunduu ayarlamak istemiyorsanz oluturmanzda ayarlanabilmekte kurulum kurulu zellikleri isimli parametreyi gnderdiiniz method zellikler balantdaki suppress response ezilmesi metodlar gndermekle istemciler sadece gndermekle kstlandrlabilirler yantlar suffix yardmc method parametresindeki zerinden kurulum vermekte formatn ayarlamak basitapi restful istemiyorsanz balantlarnz balantdaki method aadaki komutu", "pypi_keywords_clean": "rest api django"}, "timofurrer/pysingleton": {"git_readme_keywords": "decorator thread anymore pysingleton version furrer tuxtimo singleton", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nhfruchter/pgh-bustime": {"git_readme_keywords": "interface current authority official standard everything expiring current location restrictive initial object register interface account liberty station particular outbound module official pghbustime recommended", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "TUW-GEO/repurpose": {"git_readme_keywords": "package installable specific version versioning adpation citation account repurpose repository publication temporal pyscaffold regular sampling development happy project support spatial d datacube chunking similar output several representation repurpose installation regular software additional information conversion branch package version environment experimental reproducibility function zenodo enough access research artefact netcdf request feature branch module netcdf contribute", "git_description_clean": "routines for the conversion of image formats to time series and vice versa", "git_keywords_clean": "", "pypi_description_keywords": "package installable specific version versioning adpation citation account repurpose repository publication temporal pyscaffold regular sampling development happy project support spatial d datacube chunking similar output several representation repurpose installation regular software additional information conversion branch package version environment experimental reproducibility function zenodo enough access research artefact netcdf request feature branch module netcdf contribute", "pypi_keywords_clean": ""}, "mverteuil/widget-party": {"git_readme_keywords": "quick available demo entry widget stable version suitability installed django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "quick available demo entry widget stable version suitability installed django", "pypi_keywords_clean": ""}, "/reggie": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "registration maintainer documentation report branch management system available request release coverage", "pypi_keywords_clean": ""}, "crs-support/ftw": {"git_readme_keywords": "attack rigorous modsecurity expected response extensible baseline ruleset project positive negative ruleset yamlformat version installation execution framework status ground agreeable baseline environment continuous integration announcement repository typing formatted request purpose common agreeable directive repeatable baseline", "git_description_clean": "framework for testing wafs ftw", "git_keywords_clean": "waf modsecurity owasp security tools", "pypi_description_keywords": "", "pypi_keywords_clean": "waf"}, "/path": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/steelscript-stock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript application framework technology steelscript application installation framework steelscript associated", "pypi_keywords_clean": ""}, "eofs/aws": {"git_readme_keywords": "terminate execute ssh access balancer minimal configuration project fabric documentation command installation configuration support installation command specific fabfile elastic mybalancer amazon fabric documentation necessary wrapper environment amazon access fabric remote utility program custom fabric information different fabric command specific help motivation interface specific updated manage fabric function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "akoumjian/datefinder": {"git_readme_keywords": "package python python support datefinder extract datetime object installation document datetime object block python likely datetime block version automodule datefinder", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python python support datefinder extract datetime object installation document datetime object block python likely datetime block version automodule datefinder", "pypi_keywords_clean": "datetime parser nlp"}, "mobiusklein/glypy": {"git_readme_keywords": "monosaccharide download triplestore manipulate possible analysis comparator canonical collection substructure similarity enrichment analysis database functional glycobiology representation generate glycosidic structure building evaluate structural example cleavage retreive biological particular nomenclature glycoct configurable glytoucan matplotlib carbohydrate traverse variation annotate topological comparison derivatized", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "glycomics glycan carbohydrate glycoinformatics glypy linked linked glycosaminoglycan"}, "/pyfuzz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "italian japanese number language chinese current common portugese russian russian english finnish russian serbian japanese hebrew italian library pyfuzz pyfuzz", "pypi_keywords_clean": ""}, "mercadopago/mercadopago": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "resource authentication colombia generic integration install mercadopago payment customer checkout configure following address venezuela colombia", "pypi_keywords_clean": "api mercadopago checkout payment ipn sdk integration"}, "samuelcolvin/devtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "align center devtools import sentence python devtools python import boring sentence iceberg import modify devtools buildstatus import debug install importerror sentence debug available output example command python outputs devtools debug buildstatus coverage banana carrot information debug buildstatus carrot grapefruit import numpy debug debug debug", "pypi_keywords_clean": ""}, "kelsoncm/python-brfied": {"git_readme_keywords": "noninfringement software distribute sublicense kelsoncm permission substantial express copyright kelsoncm warranty documentation limitation liability restriction particular connection merchantability fitness validate following contract", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python br brazil brasil model form locale"}, "stdlib/lib": {"git_readme_keywords": "full info default nassri ahmadnassri development workflow development hosting workspace development staging unlimited access library service service hosting string useful scalable serverless folder product library public navigate single brianleroux ahmad other install response params double js service project chadfowler official standard username besttrekchar cloud faaslang scalable original author return binary app track nothing account creation indefinitely leroux brianleroux json compatible yourself draft modular scalable search portion address https board enjoy easiest default background function username stripe stripe hello world web browser python ruby first thing service useful vision private builds account complex functionality background response environment online legacy function signature argument public consumption specification focus signature version gateway integration platform background previous version visible documentation internet access happy building js website structure normal dev example functionality standard content number faaslang repository web introduction handle everything twitter keithwhor current directory world function function terminates execution npm execution access console remote build modular staging environment developer community ruby web supplement focused development standard latency access mutable following syntax bunch library website magic parameter gateway http service creation response boilerplate length response library gateway standard library local execution management quick directory setup happy append bg library setup simple command previous immutable library sourcecode github source nobody please unable property background worker release function info npm package additional functionality first service serverless architecture replacement official build comment definition special implementation website stdlib slackhq stripe serverless hosting reason central registry lambda public registry tarball compatible string documentation platform simple building service restrict execution library first available service directory control standard output library handle version control empty service platform ahmad nassri introduction standard development environment building http query hosting platform execution library registry romainhuet build sdks empty length immutable source directory something library platform service serverless package management right following default function http attention information different shoot welcome sourcecode standard platform standard sourcecode additional stripe romain previous section library search", "git_description_clean": "standard library api development deployment and management tools", "git_keywords_clean": "registry serverless faas nodejs node stdlib sdks aws lambda api", "pypi_description_keywords": "", "pypi_keywords_clean": "stdlib microservice serverless faas lib"}, "nioinnovation/xbee": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package firmware revision pyserial additional implementation dwalker extract gdrapp sangalli automated project communication synderman project documentation computer building example tornado support application status tornado ioloop firmware sphinx project modifying unspecified behavior pmalmsten information browser support documentation installation install access brackert cbrackert following command", "pypi_keywords_clean": ""}, "ramses-tech/ra": {"git_readme_keywords": "important ancient support application specific future require document nefertari conformant helper library generator automated", "git_description_clean": "ra is test suite generator and helper library for testing apis described in raml", "git_keywords_clean": "testing", "pypi_description_keywords": "important ancient support check application specific helpful future require document nefertari conformant example custom helper library generator automated", "pypi_keywords_clean": "web raml"}, "magmax/colorize": {"git_readme_keywords": "coverage wheel output other message color colordiff argument configuration found remote tty csv first relative installation other output wheel pip pip version number status travis example default output format pypi version version pip current directory output available wheel status travis system project method source tty version special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coverage wheel output other message color colordiff argument configuration found remote tty csv first relative installation other output wheel pip pip version number status travis example default output format pypi version version pip current directory output available wheel status travis system project method source tty version special", "pypi_keywords_clean": "interface"}, "/null": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tarball keyword argument variant change overdue support initial singleton", "pypi_keywords_clean": ""}, "/js-knockout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework directory integration release knockout introduction library knockout knockout original", "pypi_keywords_clean": ""}, "peeringdb/django-peeringdb": {"git_readme_keywords": "synchronization django peeringdb peeringdb peeringdb", "git_description_clean": "django peeringdb models", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "unt-libraries/pyuntl": {"git_readme_keywords": "project number license liechty brandon nordstrom metadata reading", "git_description_clean": "python package for reading and writing untl metadata records", "git_keywords_clean": "", "pypi_description_keywords": "page information", "pypi_keywords_clean": "untl metadata digital libraries records"}, "matthiask/pdfdocument": {"git_readme_keywords": "default stationery useful gherman chapter content paragraphs unordered support background additional difference promise exhaustive confidentiality creation content confidential django integration watermark predefined various pdfdocument reportlab following different default reportlab language platypus address integration pdfdocument special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default stationery useful gherman chapter content paragraphs unordered support background additional difference promise exhaustive confidentiality creation content confidential django integration watermark predefined various pdfdocument reportlab following different default reportlab language platypus address integration pdfdocument special", "pypi_keywords_clean": ""}, "syrusakbary/djinja": {"git_readme_keywords": "administration django contrib simple syntax django templating template loader following template extension variable extend install djinja project django template djinja converser viceversa administration future website additional administration django djinja contrib installation library approach usable django example django administration python important djinja performance template system ready custom directory globas installed following templating configuration todos djinja djinja templatetag library example configuration access specific django debug template library error debug toolbar djinja template", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration django contrib simple syntax django templating template loader following template extension variable extend install djinja project django template djinja converser viceversa administration future website additional administration django djinja contrib installation library approach usable django example django administration python important djinja performance template system ready custom directory globas installed following templating configuration todos djinja djinja templatetag library example configuration access specific django debug template library error debug toolbar djinja template", "pypi_keywords_clean": ""}, "pypa/packaging": {"git_readme_keywords": "freenode involved packaging discussion everyone interacting", "git_description_clean": "core utilities for python packages", "git_keywords_clean": "", "pypi_description_keywords": "addition constant regular freenode minimal involved packaging support normalize discussion inconsistent conduct everyone everyone interacting incompatible refactor conduct changelog regression regular expression validity undocumented implement requirement development", "pypi_keywords_clean": ""}, "sumerc/yappi": {"git_readme_keywords": "thread default profiler documentation introduction new thread object official documentation performance profiling pycharm integration actual support callgrind profiler pollution cprofile application pollution effect subset profiled application c profiling motivation python profiler different ability python performance profiler various minimal installation impossible standard distribution multithreaded python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thread default profiler documentation introduction new thread object official documentation performance profiling pycharm integration actual support callgrind profiler pollution cprofile application pollution effect subset profiled application c profiling motivation python profiler different ability python performance profiler various minimal installation impossible standard distribution multithreaded python", "pypi_keywords_clean": "python thread multithread profiler"}, "whtsky/bencoder-pyx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bencoder python changelog cython target install package metainfo performance improvement support ordereddict instaed codecov coverage block python metainfo version status target coverage target license target changelog version bencode implementation version performance python python python performance block method version linux", "pypi_keywords_clean": "bencoding encode decode bittorrent bencode bencoder cython"}, "kelleyk/iterpipes3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "davidmarble/pywin": {"git_readme_keywords": "mingw shell py extension basic vista specific version administrator apply registry second variable order original launch scripts original restore header several useful msys mingw only current session install command similar python installation correct interpreter python development search order python version pywin pywin installation feature version search example batch scripts machine lightweight python multiple python project launch individual launch install pywin directory restore py mingw support included utility xp specific python switcher python launcher symbolic work command prompt environment variable access manner shell script py registry source py prompt support directive launch specific", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mingw shell py extension basic vista specific version administrator apply registry second variable order original launch scripts original restore header several useful msys mingw only current session install command similar python installation correct interpreter python development search order python version pywin pywin installation feature version search example batch scripts machine lightweight python multiple python project launch individual launch install pywin directory restore py mingw support included utility xp specific python switcher python launcher symbolic work command prompt environment variable access manner shell script py registry source py prompt support directive launch specific", "pypi_keywords_clean": "python windows version switcher launcher"}, "perone/protocoin": {"git_readme_keywords": "information implementation documentation pure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation pure", "pypi_keywords_clean": "bitcoin protocol"}, "/flask-tryton": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application support configuration available nutshell bugtracker", "pypi_keywords_clean": "flask tryton web"}, "/contact-form": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "JA-VON/qgen": {"git_readme_keywords": "volume qgen", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "random value", "pypi_keywords_clean": ""}, "uktrade/directory-validators": {"git_readme_keywords": "directory password username directory environment installation following development", "git_description_clean": "", "git_keywords_clean": "live", "pypi_description_keywords": "directory password username directory environment installation following development", "pypi_keywords_clean": ""}, "andreypopp/configure": {"git_readme_keywords": "inheritance configuration interpolation configuration configuration inheritance configuration composition construct development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "inheritance configuration interpolation configuration configuration inheritance configuration composition construct development", "pypi_keywords_clean": ""}, "sontek/pyramid-celery": {"git_readme_keywords": "key value ini var multiple exact queue scheduled periodic configure celery root logger local timezone ini demo free asynchronous task celerybeat periodic python worker app bash logging bug example configuration actual schedule action check defined task standard celeryconfig type worker command celeryconfig py route task celery development standard celery likely celeryd hijack additional keyword var argument celerybeat configuration first command configuration e redis server decorator default pyramid config section celery command celerybeat scheduler flag block bash celery worker configuration celery section csv logging configuration block ini block python separated list application python task example ini standard worker comma separated ticket ini var access development ini specific queue hijack root schedule behavior reason run example class second command tm run ini gotcha documentation celeryconfig python ini scheduled available additional positional database username pyramid celery additional argument default celery following information celerybeat worker utc logging section worker execution ini celery run redis ini configuration config configure configure logger", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "key value ini var multiple exact queue scheduled periodic configure celery root logger local timezone ini demo free asynchronous task celerybeat periodic python worker app bash logging handle tuple bug example configuration actual schedule action check defined task standard celeryconfig worker command celeryconfig py route task celery development standard celery likely celeryd hijack additional keyword var argument tm support celery celerybeat configuration first command configuration e redis server decorator default pyramid config section celery command celerybeat scheduler flag block bash celery worker configuration celery section csv logging configuration block ini block python separated list application python task example ini standard worker comma separated ticket ini var access development ini specific queue hijack root schedule behavior reason example class second command ini gotcha documentation celeryconfig python ini scheduled available handle celery additional positional database username pyramid celery additional argument default celery bash support eager handle following information celerybeat worker utc logging section worker execution ini celery ini configuration config configure configure logger", "pypi_keywords_clean": "paste pyramid celery message queue amqp job task distributed"}, "stackforge/winchester": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installable strings stackdistiller library rollback winchester triggermanager locking scheme openstack winchester background daemon winchster separate daemon processing library database schema handler winchesterhandler pipeline worker separate rabbitmq daemon winchester similar database pipeline processing persistant query expire timestamp optional winchester processing flattened openstack notification trigger example handler creation processing openstack optimistic locking simple python system processing winchester exception commit directory pipeline expire pipeline winchester codebase alternate processing appropriate handle appropriate database following actual pipeline dictionary handler installing incoming individual config persistant external object plugin notification processor section method python package clause distinct winchester group minimum", "pypi_keywords_clean": "stacktach event processing pipeline events notification openstack triggers"}, "tnajdek/json-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "leplatrem/logging-color-formatter": {"git_readme_keywords": "formatter installation licence license status interpolation formatter output version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "formatter installation licence license interpolation build status formatter version", "pypi_keywords_clean": "logging"}, "justanr/datestuff": {"git_readme_keywords": "serializer only static offset argument today offset default relative context new relativedate expensive complete replacement relative instance tzinfo object useful unlikely possible checking instance dateutil standard model short look regular datetime object factory other hood compatiblity default offset factory method interoperable only functionality future boundary checking block python relative object everything such creation light weight everything certain delta regular unorderable stop argument datetime built datestuff unfixed functionality iteration indexing instance daterange negative indexing convenience allow few relativedatetime large alternate utc additional static lookup lazy iteration interface static offset default constructor membership lazy compatible object module simple boundary underlying factory", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement person offset useful unlikely dateutil standard object factory interoperable functionality connection distribute sublicense lazy iteration restriction static offset modify serializer offset argument relative context default limitation copyright compatiblity license software datestuff allow few liable relativedate expensive relative instance implied instance short look hood default offset boundary checking block python merchantability fitness object everything subject creation light weight regular unorderable datetime iteration indexing liability contract permission relativedatetime alternate lookup warranty default constructor membership lazy particular purpose module certain underlying factory complete replacement tzinfo object possible checking regular datetime documentation future factory method relative such everything limited express substantial unfixed instance daterange negative indexing convenience following additional static charge publish distribute interface compatible object simple boundary", "pypi_keywords_clean": "dates datetime"}, "mythonlang/pgen2": {"git_readme_keywords": "implementation parser generator", "git_description_clean": "python implementation of the python parser generator pgen", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "parser generator"}, "/mopidy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jukebox system javascript mopidy check hackable mopidy computer mopidy volume control mopidy extension extensible popular device gramofon modern kickstarter musicbox extension support gramofon device terminal jukebox project computer tablet background network connectivity output playlist favorite client available mopidy mopidy everybody version coverage popular project raspberry mopidy perfect server status vanilla mopidy soundcloud google python application server additional announcement control affordable server mopidy raspbian custom mopidy spotify soundcloud browser cassette player raspberry control playback travis device mopidy mopidy server python mopidy twitter linux", "pypi_keywords_clean": ""}, "requests/requests-oauthlib": {"git_readme_keywords": "protected resource project protected g google target simple fetching protected build status common status coverage access g twitter authorization workflow library support coverage status webapplication installation provider g documentation status", "git_description_clean": "oauthlib support for python requests", "git_keywords_clean": "python python requests oauth client oauth client", "pypi_description_keywords": "full oauthsession january response content g google response compliance simple https checking multiple client information added refresh added linkedin protected resource install september oauthsession facebook compliance unreleased nothing authentication keyword python logging added facebook arbitrary status coverage added several bug mailchimp oauthlib history unreleased preference version specifier consistency added compliance compatibility miscellaneous response body allow explicit dropped dependency xx legacy project argument september added fitbit compatible content january readable maintainable explicit bypass session g twitter custom workflow session september unicode insensitive session client namespace request password present incompatible library support oauthsession authorize refresh allow protected message full installation kwarg signature method namespace logging username present added support dependency guessing encode body common password authorize corresponding property access complete client oauthsession february paramether linkedin compliance implementation fitbit compliance detailed install target available documentation added provider g exception python fetching protected oauthsession instance oauthlib namespace coverage status webapplication target history environment variable client correct oauthsession added added property authorization updated refresh february added block automatic documentation status", "pypi_keywords_clean": ""}, "xeroc/uptick": {"git_readme_keywords": "dedicated telegram repository documentation available conduct discussion everyone library installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dedicated telegram repository documentation available conduct discussion everyone library installation development", "pypi_keywords_clean": "bitshares library api rpc cli"}, "amiorin/blaz": {"git_readme_keywords": "build alpine development install python ansible build docker former explanation blaz digest current script useful multiple entrypoint trick development executable mb blaz chdir project container container blaz container registry dockerfile jessie custom environment quick terraform puppet ansible entrypoint blaz dockerfile nested mount volume relative alpine blaz alpine docker blaz docker example docker executable docker container static version nested script latter install pyenv directory environment blaz script intro blaz blaz version docker compile docker machine different behaviour script python publish environment variable machine dinghy program access ansible build variable blaz source mb build publish development purpose registry ansible fullpath docker image", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "edsu/wikidata-suggest": {"git_readme_keywords": "wikidata suggest something augmentation library example column spreadsheet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/jupyterhub": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration channel reporting multiple single corporate multiple ssl recent version class ldapauthenticator simple container support single jupyterhub kerberosauthenticator command proxy proxy system python starter docker authenticator oauthenticator docker container key authentication systemd batchspawner scientific research authenticator description project jupyter general good choice jupyterhub shell docker starter desktop jupyterhub tutorial wrapspawner wrapspawner development installation sample demand hub oauthenticator ldapauthenticator website jupyterhub linux compatibility cluster wrapspawner pdf project vision proxy mounting operation copyright jupyter community authenticator plugin license https communication overview installation executable communication domain ldap authenticator derivative workgroup scientific hub tornado systemdspawner tutorial documentation high level support license certificate software yarnspawner contributor documentation high performance technical overview jupyter notebook work profilesspawner group technical notebook package research project process configurable hub server linux debian gitter channel pamauthenticator default simple ldap install jupyterhub batch notebook version jupyterhub docker jupyter website video python jupyter configuration docker debian ubuntu installation configuration proxy additional reference jupyterhub gitter pdf stable docker configuration jupyterhub sudospawner tornado process jupyter pdf wiki common baseline deployment install recent science workgroup spawner description docker important hadoop cluster project please browser default hub jupyterhub default jupyterhub community specific support jupyterhub tornado documentation package started section notebook server jupyterhub pdf tornado basic jupyterlab server project nodejs npm jupyterhub authenticator localprocessspawner default documentation computer proxy multiple description localprocessspawner bsd license hub service such jupyter tornado public reference tornado example install basic installation description pamauthenticator stable documentation hub platform support system configuration default configuration persistent following command runtime configuration", "pypi_keywords_clean": "interactive interpreter shell web"}}