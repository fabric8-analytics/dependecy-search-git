{"aflc/editdistance": {"git_readme_keywords": "algorithm hashable object license python simple simple implementation install object python distance ipython several iterable block python binary block method library distance simple benchmark editdistance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "omerucel/basitapi": {"git_readme_keywords": "gnderilmekte ktphane django durumlar verebilirler basitapi method isimli method parametresi parametreyi kullanabilirsiniz olursa komutu kullanabilirsiniz dosya kodlarna kullanabilirsiniz github parametre kullanabilirsiniz kullanm ilemler temelli durumda alabilmesi formatlamanza github zerinden gnderildiinde durumu sunduu ayarlamak istemiyorsanz oluturmanzda ayarlanabilmekte kurulum kurulu zellikleri isimli parametreyi gnderdiiniz method zellikler balantdaki suppress response ezilmesi metodlar gndermekle istemciler sadece gndermekle kstlandrlabilirler yantlar suffix yardmc method parametresindeki zerinden kurulum vermekte formatn ayarlamak basitapi restful istemiyorsanz balantlarnz balantdaki method aadaki komutu", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gnderilmekte ktphane django durumlar verebilirler basitapi method isimli method parametresi parametreyi kullanabilirsiniz olursa komutu kullanabilirsiniz dosya kodlarna kullanabilirsiniz github parametre kullanabilirsiniz kullanm ilemler temelli durumda alabilmesi formatlamanza github zerinden gnderildiinde durumu sunduu ayarlamak istemiyorsanz oluturmanzda ayarlanabilmekte kurulum kurulu zellikleri isimli parametreyi gnderdiiniz method zellikler balantdaki suppress response ezilmesi metodlar gndermekle istemciler sadece gndermekle kstlandrlabilirler yantlar suffix yardmc method parametresindeki zerinden kurulum vermekte formatn ayarlamak basitapi restful istemiyorsanz balantlarnz balantdaki method aadaki komutu", "pypi_keywords_clean": "rest api django"}, "timofurrer/pysingleton": {"git_readme_keywords": "decorator thread anymore pysingleton version furrer tuxtimo singleton", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nhfruchter/pgh-bustime": {"git_readme_keywords": "interface current authority official standard everything expiring current location restrictive initial object register interface account liberty station particular outbound module official pghbustime recommended", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "TUW-GEO/repurpose": {"git_readme_keywords": "package installable specific version versioning adpation citation account repurpose repository publication temporal pyscaffold regular sampling development happy project support spatial d datacube chunking similar output several representation repurpose installation regular software additional information conversion branch package version environment experimental reproducibility function zenodo enough access research artefact netcdf request feature branch module netcdf contribute", "git_description_clean": "routines for the conversion of image formats to time series and vice versa", "git_keywords_clean": "", "pypi_description_keywords": "package installable specific version versioning adpation citation account repurpose repository publication temporal pyscaffold regular sampling development happy project support spatial d datacube chunking similar output several representation repurpose installation regular software additional information conversion branch package version environment experimental reproducibility function zenodo enough access research artefact netcdf request feature branch module netcdf contribute", "pypi_keywords_clean": ""}, "mverteuil/widget-party": {"git_readme_keywords": "quick available demo entry widget stable version suitability installed django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "quick available demo entry widget stable version suitability installed django", "pypi_keywords_clean": ""}, "/reggie": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "registration maintainer documentation report branch management system available request release coverage", "pypi_keywords_clean": ""}, "crs-support/ftw": {"git_readme_keywords": "attack rigorous modsecurity expected response extensible baseline ruleset project positive negative ruleset yamlformat version installation execution framework status ground agreeable baseline environment continuous integration announcement repository typing formatted request purpose common agreeable directive repeatable baseline", "git_description_clean": "framework for testing wafs ftw", "git_keywords_clean": "waf modsecurity owasp security tools", "pypi_description_keywords": "", "pypi_keywords_clean": "waf"}, "/path": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/steelscript-stock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript application framework technology steelscript application installation framework steelscript associated", "pypi_keywords_clean": ""}, "eofs/aws": {"git_readme_keywords": "terminate execute ssh access balancer minimal configuration project fabric documentation command installation configuration support installation command specific fabfile elastic mybalancer amazon fabric documentation necessary wrapper environment amazon access fabric remote utility program custom fabric information different fabric command specific help motivation interface specific updated manage fabric function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "akoumjian/datefinder": {"git_readme_keywords": "package python python support datefinder extract datetime object installation document datetime object block python likely datetime block version automodule datefinder", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python python support datefinder extract datetime object installation document datetime object block python likely datetime block version automodule datefinder", "pypi_keywords_clean": "datetime parser nlp"}, "mobiusklein/glypy": {"git_readme_keywords": "monosaccharide download triplestore manipulate possible analysis comparator canonical collection substructure similarity enrichment analysis database functional glycobiology representation generate glycosidic structure building evaluate structural example cleavage retreive biological particular nomenclature glycoct configurable glytoucan matplotlib carbohydrate traverse variation annotate topological comparison derivatized", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "glycomics glycan carbohydrate glycoinformatics glypy linked linked glycosaminoglycan"}, "/pyfuzz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "italian japanese number language chinese current common portugese russian russian english finnish russian serbian japanese hebrew italian library pyfuzz pyfuzz", "pypi_keywords_clean": ""}, "mercadopago/mercadopago": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "resource authentication colombia generic integration install mercadopago payment customer checkout configure following address venezuela colombia", "pypi_keywords_clean": "api mercadopago checkout payment ipn sdk integration"}, "samuelcolvin/devtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "align center devtools import sentence python devtools python import boring sentence iceberg import modify devtools buildstatus import debug install importerror sentence debug available output example command python outputs devtools debug buildstatus coverage banana carrot information debug buildstatus carrot grapefruit import numpy debug debug debug", "pypi_keywords_clean": ""}, "kelsoncm/python-brfied": {"git_readme_keywords": "noninfringement software distribute sublicense kelsoncm permission substantial express copyright kelsoncm warranty documentation limitation liability restriction particular connection merchantability fitness validate following contract", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python br brazil brasil model form locale"}, "stdlib/lib": {"git_readme_keywords": "full info default nassri ahmadnassri development workflow development hosting workspace development staging unlimited access library service service hosting string useful scalable serverless folder product library public navigate single brianleroux ahmad other install response params double js service project chadfowler official standard username besttrekchar cloud faaslang scalable original author return binary app track nothing account creation indefinitely leroux brianleroux json compatible yourself draft modular scalable search portion address https board enjoy easiest default background function username stripe stripe hello world web browser python ruby first thing service useful vision private builds account complex functionality background response environment online legacy function signature argument public consumption specification focus signature version gateway integration platform background previous version visible documentation internet access happy building js website structure normal dev example functionality standard content number faaslang repository web introduction handle everything twitter keithwhor current directory world function function terminates execution npm execution access console remote build modular staging environment developer community ruby web supplement focused development standard latency access mutable following syntax bunch library website magic parameter gateway http service creation response boilerplate length response library gateway standard library local execution management quick directory setup happy append bg library setup simple command previous immutable library sourcecode github source nobody please unable property background worker release function info npm package additional functionality first service serverless architecture replacement official build comment definition special implementation website stdlib slackhq stripe serverless hosting reason central registry lambda public registry tarball compatible string documentation platform simple building service restrict execution library first available service directory control standard output library handle version control empty service platform ahmad nassri introduction standard development environment building http query hosting platform execution library registry romainhuet build sdks empty length immutable source directory something library platform service serverless package management right following default function http attention information different shoot welcome sourcecode standard platform standard sourcecode additional stripe romain previous section library search", "git_description_clean": "standard library api development deployment and management tools", "git_keywords_clean": "registry serverless faas nodejs node stdlib sdks aws lambda api", "pypi_description_keywords": "", "pypi_keywords_clean": "stdlib microservice serverless faas lib"}, "nioinnovation/xbee": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package firmware revision pyserial additional implementation dwalker extract gdrapp sangalli automated project communication synderman project documentation computer building example tornado support application status tornado ioloop firmware sphinx project modifying unspecified behavior pmalmsten information browser support documentation installation install access brackert cbrackert following command", "pypi_keywords_clean": ""}, "ramses-tech/ra": {"git_readme_keywords": "important ancient support application specific future require document nefertari conformant helper library generator automated", "git_description_clean": "ra is test suite generator and helper library for testing apis described in raml", "git_keywords_clean": "testing", "pypi_description_keywords": "important ancient support check application specific helpful future require document nefertari conformant example custom helper library generator automated", "pypi_keywords_clean": "web raml"}, "magmax/colorize": {"git_readme_keywords": "coverage wheel output other message color colordiff argument configuration found remote tty csv first relative installation other output wheel pip pip version number status travis example default output format pypi version version pip current directory output available wheel status travis system project method source tty version special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coverage wheel output other message color colordiff argument configuration found remote tty csv first relative installation other output wheel pip pip version number status travis example default output format pypi version version pip current directory output available wheel status travis system project method source tty version special", "pypi_keywords_clean": "interface"}, "/null": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tarball keyword argument variant change overdue support initial singleton", "pypi_keywords_clean": ""}, "/js-knockout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework directory integration release knockout introduction library knockout knockout original", "pypi_keywords_clean": ""}, "peeringdb/django-peeringdb": {"git_readme_keywords": "synchronization django peeringdb peeringdb peeringdb", "git_description_clean": "django peeringdb models", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "unt-libraries/pyuntl": {"git_readme_keywords": "project number license liechty brandon nordstrom metadata reading", "git_description_clean": "python package for reading and writing untl metadata records", "git_keywords_clean": "", "pypi_description_keywords": "page information", "pypi_keywords_clean": "untl metadata digital libraries records"}, "matthiask/pdfdocument": {"git_readme_keywords": "default stationery useful gherman chapter content paragraphs unordered support background additional difference promise exhaustive confidentiality creation content confidential django integration watermark predefined various pdfdocument reportlab following different default reportlab language platypus address integration pdfdocument special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default stationery useful gherman chapter content paragraphs unordered support background additional difference promise exhaustive confidentiality creation content confidential django integration watermark predefined various pdfdocument reportlab following different default reportlab language platypus address integration pdfdocument special", "pypi_keywords_clean": ""}, "syrusakbary/djinja": {"git_readme_keywords": "administration django contrib simple syntax django templating template loader following template extension variable extend install djinja project django template djinja converser viceversa administration future website additional administration django djinja contrib installation library approach usable django example django administration python important djinja performance template system ready custom directory globas installed following templating configuration todos djinja djinja templatetag library example configuration access specific django debug template library error debug toolbar djinja template", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration django contrib simple syntax django templating template loader following template extension variable extend install djinja project django template djinja converser viceversa administration future website additional administration django djinja contrib installation library approach usable django example django administration python important djinja performance template system ready custom directory globas installed following templating configuration todos djinja djinja templatetag library example configuration access specific django debug template library error debug toolbar djinja template", "pypi_keywords_clean": ""}, "pypa/packaging": {"git_readme_keywords": "freenode involved packaging discussion everyone interacting", "git_description_clean": "core utilities for python packages", "git_keywords_clean": "", "pypi_description_keywords": "addition constant regular freenode minimal involved packaging support normalize discussion inconsistent conduct everyone everyone interacting incompatible refactor conduct changelog regression regular expression validity undocumented implement requirement development", "pypi_keywords_clean": ""}, "sumerc/yappi": {"git_readme_keywords": "thread default profiler documentation introduction new thread object official documentation performance profiling pycharm integration actual support callgrind profiler pollution cprofile application pollution effect subset profiled application c profiling motivation python profiler different ability python performance profiler various minimal installation impossible standard distribution multithreaded python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thread default profiler documentation introduction new thread object official documentation performance profiling pycharm integration actual support callgrind profiler pollution cprofile application pollution effect subset profiled application c profiling motivation python profiler different ability python performance profiler various minimal installation impossible standard distribution multithreaded python", "pypi_keywords_clean": "python thread multithread profiler"}, "whtsky/bencoder-pyx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bencoder python changelog cython target install package metainfo performance improvement support ordereddict instaed codecov coverage block python metainfo version status target coverage target license target changelog version bencode implementation version performance python python python performance block method version linux", "pypi_keywords_clean": "bencoding encode decode bittorrent bencode bencoder cython"}, "kelleyk/iterpipes3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "davidmarble/pywin": {"git_readme_keywords": "mingw shell py extension basic vista specific version administrator apply registry second variable order original launch scripts original restore header several useful msys mingw only current session install command similar python installation correct interpreter python development search order python version pywin pywin installation feature version search example batch scripts machine lightweight python multiple python project launch individual launch install pywin directory restore py mingw support included utility xp specific python switcher python launcher symbolic work command prompt environment variable access manner shell script py registry source py prompt support directive launch specific", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mingw shell py extension basic vista specific version administrator apply registry second variable order original launch scripts original restore header several useful msys mingw only current session install command similar python installation correct interpreter python development search order python version pywin pywin installation feature version search example batch scripts machine lightweight python multiple python project launch individual launch install pywin directory restore py mingw support included utility xp specific python switcher python launcher symbolic work command prompt environment variable access manner shell script py registry source py prompt support directive launch specific", "pypi_keywords_clean": "python windows version switcher launcher"}, "perone/protocoin": {"git_readme_keywords": "information implementation documentation pure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation pure", "pypi_keywords_clean": "bitcoin protocol"}, "/flask-tryton": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application support configuration available nutshell bugtracker", "pypi_keywords_clean": "flask tryton web"}, "/contact-form": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "JA-VON/qgen": {"git_readme_keywords": "volume qgen", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "random value", "pypi_keywords_clean": ""}, "uktrade/directory-validators": {"git_readme_keywords": "directory password username directory environment installation following development", "git_description_clean": "", "git_keywords_clean": "live", "pypi_description_keywords": "directory password username directory environment installation following development", "pypi_keywords_clean": ""}, "andreypopp/configure": {"git_readme_keywords": "inheritance configuration interpolation configuration configuration inheritance configuration composition construct development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "inheritance configuration interpolation configuration configuration inheritance configuration composition construct development", "pypi_keywords_clean": ""}, "sontek/pyramid-celery": {"git_readme_keywords": "key value ini var multiple exact queue scheduled periodic configure celery root logger local timezone ini demo free asynchronous task celerybeat periodic python worker app bash logging bug example configuration actual schedule action check defined task standard celeryconfig type worker command celeryconfig py route task celery development standard celery likely celeryd hijack additional keyword var argument celerybeat configuration first command configuration e redis server decorator default pyramid config section celery command celerybeat scheduler flag block bash celery worker configuration celery section csv logging configuration block ini block python separated list application python task example ini standard worker comma separated ticket ini var access development ini specific queue hijack root schedule behavior reason run example class second command tm run ini gotcha documentation celeryconfig python ini scheduled available additional positional database username pyramid celery additional argument default celery following information celerybeat worker utc logging section worker execution ini celery run redis ini configuration config configure configure logger", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "key value ini var multiple exact queue scheduled periodic configure celery root logger local timezone ini demo free asynchronous task celerybeat periodic python worker app bash logging handle tuple bug example configuration actual schedule action check defined task standard celeryconfig worker command celeryconfig py route task celery development standard celery likely celeryd hijack additional keyword var argument tm support celery celerybeat configuration first command configuration e redis server decorator default pyramid config section celery command celerybeat scheduler flag block bash celery worker configuration celery section csv logging configuration block ini block python separated list application python task example ini standard worker comma separated ticket ini var access development ini specific queue hijack root schedule behavior reason example class second command ini gotcha documentation celeryconfig python ini scheduled available handle celery additional positional database username pyramid celery additional argument default celery bash support eager handle following information celerybeat worker utc logging section worker execution ini celery ini configuration config configure configure logger", "pypi_keywords_clean": "paste pyramid celery message queue amqp job task distributed"}, "stackforge/winchester": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installable strings stackdistiller library rollback winchester triggermanager locking scheme openstack winchester background daemon winchster separate daemon processing library database schema handler winchesterhandler pipeline worker separate rabbitmq daemon winchester similar database pipeline processing persistant query expire timestamp optional winchester processing flattened openstack notification trigger example handler creation processing openstack optimistic locking simple python system processing winchester exception commit directory pipeline expire pipeline winchester codebase alternate processing appropriate handle appropriate database following actual pipeline dictionary handler installing incoming individual config persistant external object plugin notification processor section method python package clause distinct winchester group minimum", "pypi_keywords_clean": "stacktach event processing pipeline events notification openstack triggers"}, "tnajdek/json-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "leplatrem/logging-color-formatter": {"git_readme_keywords": "formatter installation licence license status interpolation formatter output version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "formatter installation licence license interpolation build status formatter version", "pypi_keywords_clean": "logging"}, "justanr/datestuff": {"git_readme_keywords": "serializer only static offset argument today offset default relative context new relativedate expensive complete replacement relative instance tzinfo object useful unlikely possible checking instance dateutil standard model short look regular datetime object factory other hood compatiblity default offset factory method interoperable only functionality future boundary checking block python relative object everything such creation light weight everything certain delta regular unorderable stop argument datetime built datestuff unfixed functionality iteration indexing instance daterange negative indexing convenience allow few relativedatetime large alternate utc additional static lookup lazy iteration interface static offset default constructor membership lazy compatible object module simple boundary underlying factory", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement person offset useful unlikely dateutil standard object factory interoperable functionality connection distribute sublicense lazy iteration restriction static offset modify serializer offset argument relative context default limitation copyright compatiblity license software datestuff allow few liable relativedate expensive relative instance implied instance short look hood default offset boundary checking block python merchantability fitness object everything subject creation light weight regular unorderable datetime iteration indexing liability contract permission relativedatetime alternate lookup warranty default constructor membership lazy particular purpose module certain underlying factory complete replacement tzinfo object possible checking regular datetime documentation future factory method relative such everything limited express substantial unfixed instance daterange negative indexing convenience following additional static charge publish distribute interface compatible object simple boundary", "pypi_keywords_clean": "dates datetime"}, "mythonlang/pgen2": {"git_readme_keywords": "implementation parser generator", "git_description_clean": "python implementation of the python parser generator pgen", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "parser generator"}, "/mopidy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jukebox system javascript mopidy check hackable mopidy computer mopidy volume control mopidy extension extensible popular device gramofon modern kickstarter musicbox extension support gramofon device terminal jukebox project computer tablet background network connectivity output playlist favorite client available mopidy mopidy everybody version coverage popular project raspberry mopidy perfect server status vanilla mopidy soundcloud google python application server additional announcement control affordable server mopidy raspbian custom mopidy spotify soundcloud browser cassette player raspberry control playback travis device mopidy mopidy server python mopidy twitter linux", "pypi_keywords_clean": ""}, "requests/requests-oauthlib": {"git_readme_keywords": "protected resource project protected g google target simple fetching protected build status common status coverage access g twitter authorization workflow library support coverage status webapplication installation provider g documentation status", "git_description_clean": "oauthlib support for python requests", "git_keywords_clean": "python python requests oauth client oauth client", "pypi_description_keywords": "full oauthsession january response content g google response compliance simple https checking multiple client information added refresh added linkedin protected resource install september oauthsession facebook compliance unreleased nothing authentication keyword python logging added facebook arbitrary status coverage added several bug mailchimp oauthlib history unreleased preference version specifier consistency added compliance compatibility miscellaneous response body allow explicit dropped dependency xx legacy project argument september added fitbit compatible content january readable maintainable explicit bypass session g twitter custom workflow session september unicode insensitive session client namespace request password present incompatible library support oauthsession authorize refresh allow protected message full installation kwarg signature method namespace logging username present added support dependency guessing encode body common password authorize corresponding property access complete client oauthsession february paramether linkedin compliance implementation fitbit compliance detailed install target available documentation added provider g exception python fetching protected oauthsession instance oauthlib namespace coverage status webapplication target history environment variable client correct oauthsession added added property authorization updated refresh february added block automatic documentation status", "pypi_keywords_clean": ""}, "xeroc/uptick": {"git_readme_keywords": "dedicated telegram repository documentation available conduct discussion everyone library installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dedicated telegram repository documentation available conduct discussion everyone library installation development", "pypi_keywords_clean": "bitshares library api rpc cli"}, "amiorin/blaz": {"git_readme_keywords": "build alpine development install python ansible build docker former explanation blaz digest current script useful multiple entrypoint trick development executable mb blaz chdir project container container blaz container registry dockerfile jessie custom environment quick terraform puppet ansible entrypoint blaz dockerfile nested mount volume relative alpine blaz alpine docker blaz docker example docker executable docker container static version nested script latter install pyenv directory environment blaz script intro blaz blaz version docker compile docker machine different behaviour script python publish environment variable machine dinghy program access ansible build variable blaz source mb build publish development purpose registry ansible fullpath docker image", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "edsu/wikidata-suggest": {"git_readme_keywords": "wikidata suggest something augmentation library example column spreadsheet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/jupyterhub": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration channel reporting multiple single corporate multiple ssl recent version class ldapauthenticator simple container support single jupyterhub kerberosauthenticator command proxy proxy system python starter docker authenticator oauthenticator docker container key authentication systemd batchspawner scientific research authenticator description project jupyter general good choice jupyterhub shell docker starter desktop jupyterhub tutorial wrapspawner wrapspawner development installation sample demand hub oauthenticator ldapauthenticator website jupyterhub linux compatibility cluster wrapspawner pdf project vision proxy mounting operation copyright jupyter community authenticator plugin license https communication overview installation executable communication domain ldap authenticator derivative workgroup scientific hub tornado systemdspawner tutorial documentation high level support license certificate software yarnspawner contributor documentation high performance technical overview jupyter notebook work profilesspawner group technical notebook package research project process configurable hub server linux debian gitter channel pamauthenticator default simple ldap install jupyterhub batch notebook version jupyterhub docker jupyter website video python jupyter configuration docker debian ubuntu installation configuration proxy additional reference jupyterhub gitter pdf stable docker configuration jupyterhub sudospawner tornado process jupyter pdf wiki common baseline deployment install recent science workgroup spawner description docker important hadoop cluster project please browser default hub jupyterhub default jupyterhub community specific support jupyterhub tornado documentation package started section notebook server jupyterhub pdf tornado basic jupyterlab server project nodejs npm jupyterhub authenticator localprocessspawner default documentation computer proxy multiple description localprocessspawner bsd license hub service such jupyter tornado public reference tornado example install basic installation description pamauthenticator stable documentation hub platform support system configuration default configuration persistent following command runtime configuration", "pypi_keywords_clean": "interactive interpreter shell web"}, "OnBeep/pygster": {"git_readme_keywords": "python version pygster logster", "git_description_clean": "stripped down logster using pygtail derived from ec logster and logster", "git_keywords_clean": "", "pypi_description_keywords": "python version pygster logster", "pypi_keywords_clean": ""}, "/python-augeas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "LuminosoInsight/langcodes": {"git_readme_keywords": "rfc inscrutable short unproblematic regional value compliant langcodes right language problem hiding summary langcodes script english speer macrolanguage moroccan way digit string reverse multiple class french arabic unicode collation alphabet other version extensive thing american exact match australian english option difference australian nothing uk other software standard string parameter complex relevant unspecified language above operation mandarin chinese source redundant everyone japanese japanese british english modern standard default specific language syntax private demographic script other letter standard arabic slovak spanish moroccan arabic right thing norwegian bokml cldr such database explanation matching difference linguistic understood english british interesting problem equivalent software english number likely english french python backport fuzzy matching common english japanese english repository unicode cldr function problematic language subtag valueerror comparing english japanese language wiktionary regional difference license luminoso natural language langcodes package difference american language object urdu arabic difference level pypi py branch cantonese mainland overlong significant barrier arabic egyptian bokml norwegian scroll macrolanguage similar slovenian confused region useful thing language chinese chinese traditional feature normalize arabic hindi american english context describe language represent py version match efficiency languagetagerror subclass something different writing system numerous other specific different such luminoso problem acronym compliant replacement serbian strength minimum package method language language instance traditional chinese current docstring traditional thing result bcp reason similar region egyptian arabic possible subtag registry malaysian documentation separate sphinx default language langcodes library serbo croatian erroneous several advantage system such country such mainland mandarin habitat standardized language matching language example moroccan intelligible right following indonesian information different ability language suppose unicode technical standardized object correct arabic urdu example python hepburn romanization significant common standardized specific system fr comparing language", "git_description_clean": "a python library for working with and comparing language codes", "git_keywords_clean": "", "pypi_description_keywords": "traditional language langcodes documentation standardized github toolkit", "pypi_keywords_clean": ""}, "jparyani/pycapnp": {"git_readme_keywords": "binary distribution documentation example project thorough pycapnp distribution available version building demonstration common directory binary branch wheel distributiion oddity unicode environment variable pytest installation install additional development calculator example source distribution building compatible compiler pycapnp", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "change naming bundled import monkey pycapnp change multiple arbitrary libcapnp gcc change lowercase schema support custom class memleak building dumb change method py change pycapnp py travis build version pxd expose schemaparser demonstration keyword pyx implement functionality allow setting branch pyeventport handle destructor oddity installation dependency include class import hook original cython option inaccessible dynamiclist security release mytype uninitialized traceback parameter bug messagebuilder setroot global schemaparser schema loader method dynamicunion full orphan release update dumb binary forgot present include hashable default listschema class cc environment serialization objectid project argument status build bootstrap method pycapnp distribution building python libcapnp remove python allow special orphan mytype newmessage upstream change import change dynamicvalue function change deprecate interface change directory binary system removal possible recursive import completion dynamicstruct wrapper unicode dynamicvalue builder function remove orphan functionality system libcapnp rework logic capability installation install restorer serious bug dynamicorphan compatible compiler build problem cython include change project namespace change allow import accesible version initial commit traversal response simulataneous connection remove python interfaceschema build bundled build matrix trouble setting string dynamicresizablelistbuilder library version dynamiclistreader unify useful structschema allow special version check prettyprint class pycapnp status changelog benchmark random member naming capnpc python property remotepromise wheel distributiion pandoc structschema struct twopartyserver intersphinx builder fixed upload dictionary python wheel change exception kjexception python python treatment lookup cleanup allow pytest calculator example johnemhoff default compiler gcc distribution building multiple schemas module official kj exception pycapnp minimum thread connection change cython module unnamed cython exception wrapper binary distribution build status update bundled installer documentation example include possible segfault segment thorough automatic build cbool message creation python common available serializer script change remove installation attributeerror building inheritance public empirical rework bundled libcapnp python everything pypy mytype builder expose structschema whitespace stringification settable libcapnp library string address dynamicstructbuilder manifest initial dynamicobject objectpointer copyable asilversempirical include compliant ability environment variable kjdebug messagereader compilation problem additional development readeroption handling compilation upgrading exception handling remove fpermissive py", "pypi_keywords_clean": "capnp"}, "/pyobjc-framework-qtkit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information framework documention documentation quicktime framework pyobjc documentation replacement translation objective general quicktime", "pypi_keywords_clean": "pyobjc qtkit"}, "Mashape/mashape-analytics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "aisthesis/delayqueue": {"git_readme_keywords": "package thread design content python custom functionality functionality critical lightweight delayqueue possible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "queue delay thread"}, "areski/python-nvd3": {"git_readme_keywords": "oz python nvd directory bower bower install bower attempt ipython notebook nvd available execute beautiful directory django license python notebook documentation project license js install python quick docs installation django wrapper output further information description python python shell version install upgrade usable status nvd nvd graph application directory chart following nvd nvd available ipython nvd license python wrapper uninstall python library nvd installation install nvd graph library power", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tooltip ruslan multichart setting attempt ipython notebook piechart execute jinja discretebarchart support beautiful directory django license python nvdchart buildcontent danmeakin wrong history update notebook documentation project argument license install python focus support nzjrs quick django wrapper output scatterchat option further information description python update project mandatory project structure python shell install upgrade version xaxis lineplusbarwithfocuschart support usable structure remove height application status format property conversion directory series cmorgan remove lineplusbarwithfocuschart xaxis remove following function custom dateformat legend available ipython follow xaxis python wrapper uninstall python focusenable remove lineplusbarchart parameter script installation install linechart scatterchat appropriate https option focusenable scatterchart graph library", "pypi_keywords_clean": "plot graph nvd d"}, "lwoydziak/singleton3": {"git_readme_keywords": "code singleton", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "code singleton", "pypi_keywords_clean": ""}, "apragacz/django-rest-registration": {"git_readme_keywords": "password change minimal urlconfig setting framework simplejwt coverage current registraton library swagger project registration instance preferred documentation frontend agnostic installation configuration available verification version compatible modeless detailed configuration cryptographic django python support framework frontend session updating profile password register framework python django syntax change password notification simplejwt installation request password validation register change", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "password change minimal urlconfig setting framework simplejwt coverage current registraton library swagger project registration instance preferred documentation frontend agnostic installation configuration available verification version compatible modeless detailed configuration cryptographic django python support framework frontend session updating profile password register framework python django syntax change password notification simplejwt installation request password validation register change", "pypi_keywords_clean": "django rest api auth rest framework registration register login reset password register email change email sign up sign in"}, "dobarkod/typedecorator": {"git_readme_keywords": "checking system noninfringement person above copyright simple useful typecheck decorator multiple library class logging level mocking library equal subclass disabling identical key third boolean connection nothing second string example mocking distribute sublicense complex mismatch body restriction modify iterable method error default limitation eample argument specified constant additional only difference performance example software check only attribute myobject syntax license function signature few used inactive disable integer second recursive dictionary mapping standard library runtime multiple implied instance annotated function merchantability fitness element subject method invocation small typedecorator decorator liability contract dictionary permission behaviour setup section warranty problem particular purpose special package python function implementation check python used mocking log level anything annotation syntax possible configure actual check documentation available goodcode optional such license copyright exception python limited express substantial standard module myclass dictionary error logging following information compile class method charge publish distribute correct runtime existence python standard copyright senko function annotation", "git_description_clean": "a decorator based implementation of type checks", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "getsentry/sentry-plugins": {"git_readme_keywords": "package authentication redirect descriptor reverse proxy management complete account internet extended development atlassian connect callback sentry github installation sentry github creation application server something following forwarded config redirect choose upload plugin manage", "git_description_clean": "official plugins for sentry server", "git_keywords_clean": "", "pypi_description_keywords": "sentry sentry copyright license", "pypi_keywords_clean": ""}, "Azure/azure-common": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package azure active common code wheel extension profile extra dict remove release history python thank default cli keyvaultclient creation changelog release profile hybrid client factory extension support new parameter tenant id fix keyvaultclient fix compute json dict contribution azure common client dns definition drop support resource python profile profile compute support hybrid fix wheel package keyvault fix multiapiclientmixin azure stack azure graphrbac mixin azure nspkg namespace package cli tenant azure client bundle package msrestazure depency azure sdk azure common profile definition datalake bugfix azure wheel series support cli profile microsoft azure hybrid definition arista fix profile initial release msrestazure series series drop msrestazure azure python pep authorization profile auth image changelog stack support extra series move definition azure package image bugfix fix tenant active directory move msrestazure history fix azure cli graphrbac package", "pypi_keywords_clean": ""}, "NiklasRosenstein/nr-types": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "list ifoo key value myclass inlinemetaclassbase mapping self name import interface auto increment duration assert value self inlinemetaclassbase class assert myclass increment example attribute def name record issubclass foo multiple modern value record additional state mail age assert isinstance support ft def return x object def class python return count record field str none name john range lambda value assert class person parent class python compatible lambda random field int lambda filter sumtype constructor smith assert keyword field str import stream keyword building date assert isinstance filter day python r self range map bar assert singleton assert y y ft attr class increment global proxy object name mail parameter value copyright def getitem x example date min foo object acceptable value init self filter sumtype str mail proxy import hash def move record person constructor text import lazy john smith kind implementation example default age int hashdict hash stream stream randint person hasattr ifoo ft copy python class person john randint assert type nr record sumtype x test filter date assert min import proxy min max def setitem filter keyword value return assert name none assert mail str setitem self building filter compatible lambda x mapping related record date import nr def metainit installation run age record text building duration record ifoo assert none age generic assert unsafehashdict hashdict self assert generic key class foo foo implementation key def def bar map lambda mutable callable example generic generic def test proxy count ie generic person name class filter text class assert text str record assert ifoo bar self self x self self record record ifoo bar assert issubclass metainit self assert value def auto sumtype date x def sumtype class import random building assert copy function python installation self key self value test assert keyword sumtype closure value interface attr record create hashdict generic random randint hash key max filter myclass value r none import inlinemetaclassbase assert auto key return stream range day level member class duration keyword assert bar function record class randint class count return attr print count lazy self generic test value function assert foo assert x stream access value foo age str filter duration implementation assert create record module lazy proxy person record getitem self package max keyword int lambda python function assert list python import record eg hash similar magical example value unsafehashdict os useful return value ifoo interface key hash class ifoo assert mail record name stream map interface implementation import record map range name str generic class count count proxy def bar name count assert none self global count assert age assert foo return r such count proxy class hashdict usable self none alias filter assert callable self r str lambda module object proxy class def return function closure mail record date record list person inlinemetaclassbase def class level return self interface import none return name assert increment assert code ifoo class number os class myclass import generic def init print myclass example python record value ifoo name name bar foo interface value def", "pypi_keywords_clean": ""}, "mozmeao/django-allow-cidr": {"git_readme_keywords": "package django middleware python package cookiecutter normal django validation django function setting install django cookiecutter netaddr allowed netaddr cookiecutter normal network definition django", "git_description_clean": "a django middleware to enalbe use of cidr ip ranges in allowed hosts", "git_keywords_clean": "", "pypi_description_keywords": "package django middleware python package cookiecutter django publish normal django validation django function setting cookiecutter history install django cookiecutter netaddr python profit release allowed netaddr cookiecutter disable middleware normal network definition django", "pypi_keywords_clean": "django allow cidr"}, "pudo/scrapekit": {"git_readme_keywords": "storage flexible validation beautifulsoup scrapelib functionality necessary comprehensive framework imperative stateful address library wrapper documentation example heavyweight mechanicalsoup scrapekit following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage flexible validation beautifulsoup scrapelib functionality necessary comprehensive framework imperative stateful address library wrapper documentation example heavyweight mechanicalsoup scrapekit following", "pypi_keywords_clean": "web scraping crawling http cache threading"}, "apertium/apertium-streamparser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard development terminal apertium streamparser terminal contributing contributing streamparser continous integration installation streamparser available library travisci", "pypi_keywords_clean": "apertium parsing linguistics"}, "GNS3/gns3-gui": {"git_readme_keywords": "debugger security please contact interface available installation please repository installation internal development", "git_description_clean": "gns graphical network simulator", "git_keywords_clean": "network emulator networking network", "pypi_description_keywords": "debugger security please contact interface available installation please repository installation internal development", "pypi_keywords_clean": ""}, "pyQode/pyqode-uic": {"git_readme_keywords": "package project number designer tracker installation license wrapper example installation version license changelog", "git_description_clean": "pyqode qt ui compiler", "git_keywords_clean": "", "pypi_description_keywords": "package project number designer tracker installation license wrapper example installation version license changelog", "pypi_keywords_clean": ""}, "bitmazk/django-shop-simplenotifications": {"git_readme_keywords": "package execute example variable address example folder sender addition paymentbackend project request request choice install django available example mkvirtualenv yourenvname workon folowing equal subject notification emails github wording virtualenv django mkvirtualenv python important dependency python yourenvname buyer simple approach payment emails attribute repository install default default owner option various formatting alternative content virtual environment bitmazk django cd django following installed emails example noreply myshop notification installation install context please address certain member workon yourenvname", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package py install execute example variable address example folder sender addition paymentbackend project request request choice install django available example mkvirtualenv yourenvname workon folowing equal subject notification emails github wording virtualenv django mkvirtualenv python dependency python yourenvname buyer simple approach payment emails attribute repository install default default owner divio django option various formatting alternative content virtual environment bitmazk django cd django following emails example noreply myshop notification installed apps installation install context please address certain member workon yourenvname", "pypi_keywords_clean": "django django shop email notifications"}, "estebistec/memoized-property": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "universal software dependency support property similar compatability history decorator version function", "pypi_keywords_clean": "memoized property decorator"}, "/simpledaemon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "script simpledaemon configuration terminal command setup infinite py hellodaemon hellodaemon py similar daemon hellodaemon daemon welcome install simpledaemon installation simpledaemon example", "pypi_keywords_clean": ""}, "nrocco/pycli-tools": {"git_readme_keywords": "database sqlite myapp database database parser python myapp python module predictable command configuration install documentation myapp default block python argument database g copyright application rocco license default config option following default configuration argparser parser ability verbosity block build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database sqlite myapp database database parser python myapp python module predictable command configuration install documentation myapp default block python argument database g copyright application rocco license default config option following default configuration argparser parser ability verbosity block build", "pypi_keywords_clean": ""}, "/pjson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "json xml"}, "OiNutter/rivets": {"git_readme_keywords": "full javascript alphabetical order dependency management way useful multiple pyscss implementation class single virtual ruby library embedded python comment syntax source filename version order format necessary app bundling general coffeescript module coffeescript coffeescript body javascript source bug method web source array declarative dependency application logical default length subsequent double original ruby function binding css argument location credit additional cherrypy compatible issue tracker nested final example localized string stephenson sstephenson example css dependency graph bundle javascript system beginning rack server resulting url json managing modified language issue work installation install request directive comment power single directory static ordered response original library josh pythonic dispatcher application instance newer scss similar processor understands first word call action copy github unix shell multiple engine application reference selector inheritance current source m context common environment consistent understands comment python library preprocessor pipeline js application access python coffeescript scss installation ruby gem pull request current scss syntax mako extension install pyscss valid cache helper virtual filesystem coffeescript processing accessible application js first relative mount such public extension python python python tweaking powerful preprocessor submit pull string database good javascript css right other application following http other development reserve prepending js app gem implementation precedence cherrypy plugin directive processor coffeescript question please special comment mako engine", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-pipeline-rapydscript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "JIC-CSB/jicbioimage-segment": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor software github documentation license platform documentation functionality travis package documentation standard segmentation namespace package python package related documentation github coverage build", "pypi_keywords_clean": "microscopy image analysis"}, "/instack-undercloud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "undercloud tripleo undercloud software license repository tripleo project", "pypi_keywords_clean": ""}, "uranusjr/django-tastypie-crust": {"git_readme_keywords": "thelonecabbage alexander accessible throught project authentication authentication collection thelonecabbage stackoverflow throught tastypie internet stackoverflow particular rationale obvious tastypie decorator multiple github originate example resource", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thelonecabbage alexander accessible throught project authentication authentication collection thelonecabbage stackoverflow throught tastypie internet stackoverflow particular rationale obvious tastypie decorator multiple github originate example resource", "pypi_keywords_clean": ""}, "stadtgestalten/schulze": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "schulze ranking vote election"}, "jcarbaugh/python-xrd": {"git_readme_keywords": "signature support signature support outstanding execpt compatible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "signature support signature support outstanding execpt compatible", "pypi_keywords_clean": ""}, "/unicornhat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "orientation bugfix compatibility initial release support requirement optional orientation account brightness layout unicorn switch library raspberry eeprom vertical optional feature refactor bugfix", "pypi_keywords_clean": "raspberry pi unicorn hat"}, "kolypto/exdoc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default predicate engine documentation extractor helper command output automatic background optional python parsed documentation document necessary sqlalchemy method property function dictionary information argument specification object module necessary information", "pypi_keywords_clean": "documentation"}, "cyberdelia/flask-mysql": {"git_readme_keywords": "access mysql mysql feature application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "codeskyblue/atx-uiautomator": {"git_readme_keywords": "match uiautomator basic simple device click selector selector introduction handler current window multiple g child watcher triggered support registered specified description center triggered watcher different usage iglikov google callback function possible result codeskyblue codeskyblue only way serial number functionality branch option uiautomator jsonrpc daemon match check watcher introduction uicollection above detailed java device watcher localhost python wrapper script zou yuanyuan bug notification window selector android device register watcher match register unchanged dump window error click action alternative method please submit install android screenshot dump error please android sdk contribution fork instance specified jingjie xiscoxu uiscrollable uicollection java function selector enable adb handler introduction license object gesture issue tracker device retrieve java documentation normal qianjin xu device gesture server follow framework error jsonrpc unknown android uiautomator click target description python pypy remove issue please selector introduction information child field perform device screen information perform match press keyevent gesture message clear customized callback editable field perform fling information check instance yuanyuan zou other computer usb orientation gesture interaction element branch install github jsonrpc server please object child retrieve environment press scrollable possible represent codeskyblue artem please follow object below network device adb update watcher possible orientation specific access section device installation object perform screen alternative module artem iglikov information uiscrollable below hierarchy pull request window update pypy faq import uiautomator switch object basic check mingyuan mingyuan quick android keyevent relative position several gesture action introduction selector install anything device object recent apps artikz perform click submit pull directory freeze adb server freeze rotation window hierarchy uiautomator fork detailed information right please insert xu jingjie object status event visible apps discussion perform scroll correct server check follow below object scrollable below", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation", "pypi_keywords_clean": ""}, "Frky/spread-confiture": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple flesh consistant whole template exception banana product project configuration required documentation confiture confiture september breakfast forbidden morning installation example strikeout python vegetable pectin small object nutella template following scheme sugar moment", "pypi_keywords_clean": "yaml configuration config required fields template"}, "aioworkers/aioworkers": {"git_readme_keywords": "communication optional documentation documentation configuration subsystem abstract configurable", "git_description_clean": "easy configurable workers based on asyncio", "git_keywords_clean": "python asyncio", "pypi_description_keywords": "aiohttp import default crontab subsystem history humanize abstractnestedentity supervisor updater baseupdater application mergedict command contextprocessor deprecated correct default subclass config zlibformatter storage propagate process autoload incompatible filesystemstorage lzmaformatter abstractnestedentity session params context access resource search uninitialized parameter script search apache software processlookuperror support timeout storage redisstorage timestampzqueue default specify pipeline length abstractreader abstractwriter object interact interact backward incompatible private formatter shutdown rediszqueue abstract storage readline counter baseapplication subsystem example context proxy humanize example optional documentation method config links session software apache import filesystemstorage support support extendable pipupdater function search config method httpstorage negative number baseupdater example backward compatibility python optional futurestorage module humanize check signature logger validate configuration subsystem entity method groupresolver ipython subprocess zlibformatter lzmaformatter subprocess check purepath filesystemstorage status method communication regular entity filesystemstorage correct improved httpstorage subprocess access worker interactive element logger specify abstract httpstorage support context prevent branching sequence example pingpong config unicode readme problem asyncpath backward module asynqp explicity chainformatter timestampqueue startup fieldstoragemixin config support package family context filesystemstorage method dictreader executorentity additional sys extension graphite scorequeue interface updater plugin duration prevent change abstractlistedstorage storageerror execution extractor software license improved subprocess validate config pingpong filesystemstorage atomic immutable config asyncpath configurable hashfilesystemstorage access optimization aioredis poolclosederror ipykernel additional params worker context access member interface py filesystemstorage refactor documentation status", "pypi_keywords_clean": "aioworkers"}, "strawlab/cgkit1": {"git_readme_keywords": "example installing package renderman interface installed version renderman compliant recommend distribution license collection install documentation computer renderman standard location compatible copyright matthias install everything generation directory installed matthias platform browser compiling access directory important", "git_description_clean": "fork of the python cgkit library", "git_keywords_clean": "", "pypi_description_keywords": "example installing package renderman interface installed version renderman compliant recommend distribution license collection install documentation computer renderman standard location compatible copyright matthias install everything generation directory installed matthias platform browser compiling access directory important", "pypi_keywords_clean": ""}, "elapouya/docxtpl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "major value management richtext class header footer class support argument useful other faster python compatible hyperlink jinja template undeclared option richtext support subdocs generated complex wheel distribution documentation please bug subdoc method optionnal jinja filename double split dynamic escape invalid gridspan distribution manage example attachment document import unicode modulo operator setup py subdoc management issue footer header filter example vm hm embedded method template filter python compatibility richtext subdocument management accept gusmeroli simple double paragraph method useful custom jinja create feature python support subdoc support footer jinja context weinberg debug lxml dependency richtext columns horizontal template introduction powerful project please dynamic colspan accept forloop jinja filter cleaning package current sphinx package anything writing word wheel superscript declare package output exception python wheel distrib package version jinja environment index issue render compliant inlineimage richtext microsoft word template vertical footer support version limitation", "pypi_keywords_clean": "jinja"}, "Rackspace-DOT/flask-keystone": {"git_readme_keywords": "package openstack initialized behavior response extension development instantiation standard application specific keystone documentation configuration similar application object following example required accessible familiar keystonemiddleware project installation configured access control control consistent ability access application factory", "git_description_clean": "middleware for authenticating apis against role based keystone", "git_keywords_clean": "", "pypi_description_keywords": "package flask login openstack like way file like initialized login documentation extension section flask keystone behavior flask manner like valid token response certain configured development other python instantiation application specific application object guide similar following example standard flask accessible repo keystonemiddleware project installation required role role base base access flask extension auth token keystone flask configured configuration file basic configuration instantiation flask access control control good token factory setting flask rax consistent ability rax keystone token header access admin role application factory familiar flask factory app", "pypi_keywords_clean": "flask identity auth"}, "rainwoodman/sharedmem": {"git_readme_keywords": "mapreduce critical equivelant graceful manner status writable sharedmem mapreduce concern mechanism documentation sharedmem syscall python sharedmem numpy openmp openmp critical parallizable process pickability unpicklable unexpected", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "grobins2/flask-scrypt": {"git_readme_keywords": "random scrypt password database information install scrypt extension scrypt pip install generate random check install pull scrypt installation security py scrypt function encryption generated generate password database check check password generate scrypt combo check", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask", "pypi_keywords_clean": ""}, "CygnusNetworks/pypureomapi": {"git_readme_keywords": "full descriptor basic key value output output way useful router dhcp dhcp multiple library class pypureomapi pypureomapi lookup hostname client hostname group groupname thing key domain option popular linux connection lookup function parameter pyomapic pyomapic server unreasonable method parsed response handle generic lookup python example complete sequence md key linux dhcp corresponding human issue tracker example interaction success attribute following lookup custom interaction delete integer opening explanation custom address hardware field flexible interaction error checking random transaction custom integration original actual modification human readable instance communication dhcp hardware address constructor object static dhcp server dhcpd supersede config lookup receive response access short example server python replacement limited effort special hostname lookup secret complete static dhcp basic lookup valid possible configugration md python implementation opcode full access extensibility first message returned following information different protocol lookup output example python following command possibility", "git_description_clean": "dhcp omapi protocol implemented in pure python", "git_keywords_clean": "", "pypi_description_keywords": "frustration server implementation protocol pyomapic swig pypureomapi replacement module library", "pypi_keywords_clean": ""}, "/pypi-tools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package understand complex django gravatar script gravatar application command django application something application command command understand output python package complex search nothing utility example", "pypi_keywords_clean": "pypi search"}, "/eden": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "person simple suitable lowercase subdirectory acceptance learing multiple library g standard processing pleasure characteristic version www qquick search multiple directory compatibility feasible tkinter version return whenever search mechanism program portable development installation trivial multiplatform module search subdirectory qquick example status situation linux garden limitation matter dynamic example killer copyright project anyone license mklink b fresh developer functional figure evaluation cyclic derivative recent changing g ironpython essence tutorial program organisation portability document indirect special decision kyvi version understanding console available elaborated special consequential implied guarantee ironpython noncommercial purpose contributor purpose express implied maintainable program application structure effective batch diverse engineering disclaimer proprietary commercial mobile proprietary python distribution unique package b theory multiple python flexible public domain common qquick licence statutory warranty liability continuity licence qquick symlink library module tutorialkivy directory action particular purpose google obsolete enjoy source software correspondence underlying complete mindshare rollback elaborated example result domain application version g qquicklicence merchantability cpython future incidental available several safety critical widget concise description coding python version fitness persistent practical maximum extent python standard module directory everyday practice subdirectory declarative construction xp production programming diversity object infringement geatec engineering exception handling overall program existence respect layout software software module mechanism", "pypi_keywords_clean": "eden kivy winforms observer functional"}, "/circuits": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package improvement component architecture relevance facebook business solution community standard library supported freenode documentation install networking support component synchronization employer facebook network architecture asynchronous performance coverage installation asynchronous application scalable required external coroutine freebsd language compliant quality application framework feedback question stackoverflow lightweight simplest", "pypi_keywords_clean": "event framework distributed concurrent component asynchronous"}, "nicholasserra/django-redis-status": {"git_readme_keywords": "instance compatibility django memcache overview recommend django section index compatible installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "index view instance memcache status django memcache overview recommend django section installed", "pypi_keywords_clean": ""}, "jphalip/django-treemenus": {"git_readme_keywords": "developer julien value simple menus internationalization menu don urls refer use admin library folder admin interface django template etc don item definition other type sometype above django command false extension object item contact use attribute admin section treemenus use customized behaviour template folder application section show hierarchy python manage free new application current url different pattern branch necessary other attribute check box development version item object translation official python expression pattern above example project python item menu login restriction use requestcontext release django menus image official release script bug template example complex css class extension model custom translation item rank raw urls user id sample only available treemenus application download style sheet unpack python directory unique link menu context create special setting urlconf private status refer clone click add variable menu type template template julien phalip junction manage py only inline form template use font inspire select menu enjoy project own table extension possible regular expression example django statement textfield menu log root system good example basic use python documentation item context parent root fill attribute special css custom own specific model class attribute example level example function lot url textfield regular extension application click menus add root item interface example point call special style issue ifequal menu appropriate special behaviour statement above pythonpath true add menu project create django documentation power new menu colour corresponding url moment django internationalization generic bottom part only show database table pypi item select only attribute variable user menu item form menu list disctinction menu etc urls example contact menu present url first don forget essential behaviour project developer template tag template assuming context pointer section present template login add customized create django project add regular caption use create menu extension menu menu app item url particular path filter syncdb create official source item parent add special pip app add first item extension class pattern contact technique item level access py syncdb menu extension root click menu root module match path package menu behaviour whole structure requestcontext object item many second documentation example possible requestcontext requestcontext url example easy etc available project template accessible lingual empty news django treemenus optional such rank example building python following structure certain menu bug report zip distribution create new template documentation detailed information create directory following code single string extendable django project item method context variable above flexibility code application create item caption extra create model following command new item django installation add attribute only select", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "developer julien value simple menus internationalization menu don urls refer use admin library folder admin interface django template etc don item definition other type sometype above django command false extension object item contact use attribute admin section treemenus use customized behaviour template folder application section show hierarchy python manage free new application current url different pattern branch necessary other attribute check box development version item object translation official python expression pattern above example project python item menu login restriction use requestcontext release django menus image official release script bug template example complex css class extension model custom translation item rank raw urls user id sample only available treemenus application download style sheet unpack python directory unique link menu context create special setting urlconf private status refer clone click add variable menu type template template julien phalip junction manage py only inline form template use font inspire select menu enjoy project own table extension possible regular expression example django statement textfield menu log root system good example basic use python documentation item context parent root fill attribute special css custom own specific model class attribute example level example function lot url textfield regular extension application click menus add root item interface example point call special style issue ifequal menu appropriate special behaviour statement above pythonpath true add menu project create django documentation power new menu colour corresponding url moment django internationalization generic bottom part only show database table pypi item select only attribute variable user menu item form menu list disctinction menu etc urls example contact menu present url first don forget essential behaviour project developer template tag template assuming context pointer section present template login add customized create django project add regular caption use create menu extension menu menu app item url particular path filter syncdb create official source item parent add special pip app add first item extension class pattern contact technique item level access py syncdb menu extension root click menu root module match path package menu behaviour whole structure requestcontext object item many second documentation example possible requestcontext requestcontext url example easy etc available project template accessible lingual empty news django treemenus optional such rank example building python following structure certain menu bug report zip distribution create new template documentation detailed information create directory following code single string extendable django project item method context variable above flexibility code application create item caption extra create model following command new item django installation add attribute only select", "pypi_keywords_clean": ""}, "ofek/bit": {"git_readme_keywords": "package storage private readable universal multiple redundancy exchange optimal transaction successful support fuzeman transaction blockchain deterministic documentation library seamless seamless integration courtesy transaction gotchas optional installation testnet beginning default multiple available implementation different understand transaction bitcoin bitcoin library effortless compressed continue intuitive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package storage private readable universal multiple redundancy exchange optimal transaction successful support fuzeman transaction blockchain deterministic documentation library seamless seamless integration courtesy transaction gotchas optional installation testnet beginning default multiple available implementation different understand transaction bitcoin bitcoin library effortless compressed continue intuitive", "pypi_keywords_clean": "bitcoin cryptocurrency payments tools wallet"}, "cooledcoffee/decorated": {"git_readme_keywords": "conditional loggingd powerful parameter helpful aregument decorator multiple function unified framework", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "eclarke/argutils": {"git_readme_keywords": "bash python example py example let let write cat example argutils usage output output useful type int message help set configparser import argutils import argument parser def main spec yml example spec init write bash pip spec file block yaml file exclude nothing configparser help program program py init meta help help message exit message hello world int output file installation output help python example message message world hello argument world python py hello stdout type argtype flag number write config message output argumentparser main main json installation code true argtype init cat output init export spec importerror import message block bash file optional pip install default hello message default try import usage example default type message hello file init config file block python command line true default py help init help yaml meta init program default stdout particular main let install argutils conf file file message config write user yaml file name main output file many py message cfg program code block file example import argutils type file exclude true argument spec import configparser time help write cfg def help usage precedence interface yml conf python try argutils example cfg documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bash python example py example let let write cat example argutils usage output output useful type int message help set configparser import argutils import argument parser def main spec yml example spec init write bash pip spec file block yaml file exclude nothing configparser help program program py init meta help help message exit message hello world int output file installation output help python example message message world hello argument world python py hello stdout type argtype flag number write config message output argumentparser main main json installation code true argtype init cat output init export spec importerror import message block bash file optional pip install default hello message default try import usage example default type message hello file init config file block python command line true default py help init help yaml meta init program default stdout particular main let install argutils conf file file message config write user yaml file name main output file many py message cfg program code block file example import argutils type file exclude true argument spec import configparser time help write cfg def help usage precedence interface yml conf python try argutils example cfg documentation status", "pypi_keywords_clean": ""}, "sacrud/pyramid-sacrud": {"git_readme_keywords": "administration overview pyramid mechanism traversal standard project different documentation overview flexibility support development classic interface interface similar mongodb contribution uralbash sqlalchemy pyramid coverage example", "git_description_clean": "admin crud interface for pyramid works with any backends", "git_keywords_clean": "crud pyramid framework admin python", "pypi_description_keywords": "administration default interface similar development mechanism traversal standard project sqlalchemy handler support classic uralbash pyramid coverage example resource mongodb sqlalchemy paginate overview pyramid documentation overview flexibility interface groupresource contribution different backend", "pypi_keywords_clean": ""}, "jgorset/fandjango": {"git_readme_keywords": "fandjango application contribute facebook passionate request library awesome repository elaborate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "facebook javascript facebook com username hometown user locale integrityerror locale user gender fandjango multiple library typeerror permanent oauth incorrect fandjango user access support application fix bio user order application authorization fandjango authorization south database facebook application fandjango version graph thing python manage facebook username endless redirection javascript sdk authorize application official python empty querydict availabe bug request facebook aware user user middle canvas migration application deauthorization user id admin fix application new user gender explorer deprecation paths syntax fandjango image querydict instance user email elaborate facebook platform website locale location bio user political argument manage py consistency fandjango request attribute signed request readme compatible recent user full internationalization fandjango number feature user run python email website facebook javascript disabled django admin facebook initial repository paths new django usage fandjango disabled work issue internal facebook location user available information user location incompatible decorator contribute fork synchronize method bunch user attribute url authorize disabled paths norwegian localization admin http view specific user timezone user instance image fandjango awesome oauth token facebook user timezone user expiry facebook authorization hyper work paths fandjango configuration request object template tag user model gender user py migrate email user sdk user user website invalid signed hometown location new feature engineering signed installation contribute application status user offline access version constant fix importerror facebook attribute website user application offline authorize sdk fix user graph user bio fresh signed truthy keyerror relationship status application fandjango deprecated new user relationship condition user optional argument initial request argument redirect access token new pull request favourite graph first permission fandjango user result user url request method passionate migration facebook bio relationship possible reverse engineering facepy fandjango run feature facebook cookie disabled everything hometown user importerror easy canvas url application url available history url user constant fandjango oauth attributeerror application namespace python sdk token model timezone aware version number access permission synchronize user exception fandjango facebook python good status political user hometown user picture http object facebook information facebook official fix bug redirect feature fandjango client application canvas direct method fandjango internet explorer deauthorization view parenthesis", "pypi_keywords_clean": ""}, "adamnovak/tsv": {"git_readme_keywords": "field python installation newlines value library provision", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bradmontgomery/django-rainbowtests": {"git_readme_keywords": "standard django default coverage report runner python django django python issue coverage fancy coverage install output normal colorful version django colorful report release custom experimental support version license add current release otherwise please django compatibility django installation verbose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django default coverage report runner python django django python issue coverage fancy coverage install output normal colorful version django colorful report release custom experimental support version license add current release otherwise please django compatibility django installation verbose", "pypi_keywords_clean": ""}, "/schroot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "schroot python", "pypi_keywords_clean": ""}, "praekelt/vxaat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "freenode mailing github issue general support ussd transport vumi development cover network tracker please issue tracker following vumi", "pypi_keywords_clean": ""}, "/csvschema": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "columns first note rememer length value max length column column whole line inclusive fraction note order use module set g position csv file inclusive decimalcolumn cs class structure set b c particular column order first column subclass length permissible blank min maximal lenght column set single structure whole value inclusive minimum return max exclusive impropervaluerestrictionexception class list first constructor import basecolumn error message csv line above example column evaluation inclusive maximal exclusive max use column false cs value inclusive method mind min length simple csv situation c true kind true cs csv schema b b value condition basecolumn column own columns rule cs line line decimalcolumn blank class testcsvstructure cs cs max inclusive decimalcolumn stringcolumn course use csvschema import intcolumn proper file structure attribute b false example important number exclusive maximal additional keyword inclusive max b true file description valid first mycolumn basecolumn line form stringcolumn blank exclusive min set columns true appropriate numerical schema structure structure base length maximal false notice import basecsvstructure complex validation form csv sure length max schema columns whole expression instance wrong value testcsvstructure schema similar testcsvstructure basecsvstructure evaluation cs schema class intcolumn blank single line structure class columns base third cs rule csvschema csvschema total simple validation columns import object rule file second false note cs b min exclusive min inclusive value equal special inner inclusive blank schema testcsvstructure behavior second many decimal example instance cs false logic possible import impropervaluerestrictionexception intcolumn decimalcolumn value exclusive columns behavior comma total comma note easy specific value empty operator building inner class class mycolumn base import set import validation rule different constructor parameter total number value column call exclusive minimum stringcolumn class custom error whole rule value permissible import cs", "pypi_keywords_clean": ""}, "smn/springboard": {"git_readme_keywords": "package springboard documentation springboard continuous integration elasticsearch coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package changelog redirect springboard documentation gunicorn favour standard markdown support fallback thumbor springboard elasticsearch coverage system unknown functionality continuous integration language parameter deprecate unicore pagination elasticsearch changelog language direction", "pypi_keywords_clean": "web"}, "/mecab-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install prefix pybuild install install directory installation python sample program example python readme prefix option python module", "pypi_keywords_clean": ""}, "OpenMDAO/openmdao": {"git_readme_keywords": "hdf message package index github repository documentation change described install anaconda active install openmdao g dump openmdao y install recorder install developer command available development status system information openmdao development automatic ordering optional repository please version frequent coverage important please install everything result similar system openmdao x directory repository install necessary release editable documentation generator documentation third repository right following third option openmdao framework documentation documentation openmdao constraint calculation browser repository openmdao solver runtime source python package legacy openmdao stable", "git_description_clean": "openmdao repository", "git_keywords_clean": "nasa open source framework beta openmdao optimization", "pypi_description_keywords": "analysis performance multidisciplinary optimization numerical", "pypi_keywords_clean": "optimization multidisciplinary multi disciplinary analysis"}, "amoffat/sh": {"git_readme_keywords": "single environment visual status collection fledged subprocess single program browser branch environment coverage subprocess replacement coverage status version installation function development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "single environment visual status collection fledged subprocess single program browser branch environment coverage subprocess replacement coverage status version installation function development", "pypi_keywords_clean": "subprocess process shell launch program"}, "mtigas/django-medusa": {"git_readme_keywords": "rendering process engine default simple static backend gritty extension parallel uninterested library header possible brandon taylor active project django bakery world renderer license mirror website output unmaintained accessible renderer example caccamo django django freeze installation generator django medusa internal complex example about python razzaque django application mimetype alsoicode django likely tutorial generation conversion amazon directory something similar renderer backend lovely dynamic content django django january django static website static generator rendering django django staticgen dynamic django browser object profit example renderer section jekyll movable filename mishbah razzaque moment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django static staticwebsite staticgenerator publishing"}, "malexer/meteocalc": {"git_readme_keywords": "python history temperature equivalent attempt temperature relative combined lowering available apparent temperature calculation passing block python equivalent temperature version celsius fahrenheit python body temperature meteorological different relative humidity meteocalc several temperature block input temperature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python history temperature equivalent attempt temperature relative combined lowering available apparent temperature calculation passing block python equivalent temperature version celsius fahrenheit python body temperature meteorological different relative humidity meteocalc several temperature block input temperature", "pypi_keywords_clean": "meteorology meteo dew heat heatindex humiture humidex feels like temp temperature wind chill"}, "texas/tx-people": {"git_readme_keywords": "application information project generic installation configuration directory", "git_description_clean": "tx people", "git_keywords_clean": "", "pypi_description_keywords": "application information project generic installation configuration directory", "pypi_keywords_clean": ""}, "/xunitparser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard minimal reference helpful previous system available testsuite xunitparser description testcase multiple bachelier description xunitparser development", "pypi_keywords_clean": ""}, "maxfolley/django-bootstrap-admin": {"git_readme_keywords": "project admin bootstrap installed directory bootstrap admin custom django admin development django bootstrap", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib static directory contrib admin bootstrap bootstrap file custom django admin directory visit admin quick installed django", "pypi_keywords_clean": ""}, "sacanix/flask-nytro": {"git_readme_keywords": "package download random bluepirnt simple quick tutorial extension useful intermediate sqlalchemy quick folder development facility disable convention helper configuration blueprint aplication python content import blueprint something import index option django pluggable access template understand installation relationship static folder", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "facility development extension useful", "pypi_keywords_clean": ""}, "clab/dynet": {"git_readme_keywords": "translation morphological language processing carnegie assertion dynamic university adventurous ubuntu development standard network library documentation command revision mercurial github general installation homebrew example efficient variety training instance important application technical research tutorial batching morphological inflection syntactic homebrew installation compile contributing general natural language external toolkit general contribution request network toolkit following command", "git_description_clean": "dynet the dynamic neural network toolkit", "git_keywords_clean": "", "pypi_description_keywords": "journal revision number appveyor batching feature specified revision language processing chaitanya malaviya carnegie lingpeng assertion dynamic article pengcheng university adventurous folder ubuntu development standard container network library goldberg faruqui install yusuke command clothiaux adhiguna kuncoro garrette preprint version mercurial installation research homebrew example efficient variety training instance important application technical number graham trevor yangfeng contributing essential cynthia compile natural language external matthew richardson toolkit general swabha swayamdipta contribution request network toolkit following command", "pypi_keywords_clean": ""}, "/winappdbg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "winappdbg", "pypi_keywords_clean": ""}, "mrf345/flask-datepicker": {"git_readme_keywords": "random default credit datepicker extension multiple datepicker module install importance available detected datepicker jquery follow jquery extension credit accepted datepicker reload jinja template function remote plugin specific source", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jquery datepicker javascript template extension multiple", "pypi_keywords_clean": "flask"}, "textmagic/textmagic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "textmagic"}, "/janome": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analyzer import acknowledgement special python general u janome takuyaa nakagami import tokenizer janome analyzer python setup tokenizer import tokenfilter import posstopfilter lowercasefilter tokenize janome tokenizer license install charfilter import lowercasefilter analyzer japanese morphological building janome tokenfilter janome charfilter regexreplacecharfilter u copyright copyright import analyzer general documentation analyze mb memory english japanese tokenizer tokenizer janome janome dictionary statistical documentation english ipadic dictionary morphological analysis", "pypi_keywords_clean": ""}, "/aspen-sentry": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "riga/scinum": {"git_readme_keywords": "optional dependency uncertainty propagation particular example multiple development project container support documentation scientific rounding notebook definition multiple installation propagation github example guassian formatting following automatic gaussian general sophisticated rounding different composite specific operation replacement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "optional dependency uncertainty propagation particular example multiple development project container support documentation scientific rounding notebook definition multiple installation propagation github example guassian formatting following automatic gaussian general sophisticated rounding different composite specific operation replacement", "pypi_keywords_clean": "scientific numbers error systematics propagation"}, "ionelmc/python-redis-lock": {"git_readme_keywords": "package software bsd blackout implementation backend pattern dogpile effect renewal codecov useful forever expiry optional license interface columns documentation development standard instance actual combination similar expiration identifier version solution django diagram documentation python process application stampede convenient function status travis overview spinloops something release coverage status convenience optional expiry runtime python different parameter individual troubleshooting context manager unhandled exception method problem documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "groenen weyrich reorganize blackout implementation backend victor pattern dogpile effect renewal useful forever expiry optional license interface jardel weyrich documentation development standard instance actual convenience method combination support garbage similar identifier yokotoka cleanup operation macdonell solution constructor django diagram documentation python software process application stampede convenient function changed pashkin overview unsupported django integration alongside someone sloppy spinloops something renewal thread signal release necessary attribute convenience optional expiry vuotila efficiency runtime python different parameter individual troubleshooting backend wrapper backend changed context manager unhandled exception handling method problem incompatible functionality expiration changelog specific exception", "pypi_keywords_clean": ""}, "/grunt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extensible grunt installation example customizable grunt slideshow grunt example grunt grunt grunt", "pypi_keywords_clean": ""}, "carpedm20/ndrive": {"git_readme_keywords": "python wrapper license documentation command python installation available copyright copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "ndrive ndrive"}, "nipy/pysurfer": {"git_readme_keywords": "package visualization informative important publication cortical library beautiful project documentation install command tksurfer program production example powerful visualization pysurfer directory repository information complex license available interface documentation license freesurfer tksurfer official", "git_description_clean": "cortical neuroimaging visualization in python", "git_keywords_clean": "", "pypi_description_keywords": "python visualization", "pypi_keywords_clean": ""}, "/levit-report": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package screenshot libreoffice headless convert library project django application installation configuration available rendered version contenttype relatorio feature regular libreoffice machine relatorio template templte document application installation libreoffice window browser several rendered template section pdfunite", "pypi_keywords_clean": ""}, "aloetesting/aloe-webdriver": {"git_readme_keywords": "noninfringement limitation gherkin selenium copyright install documentation copyright danielle merchantability fitness subject software express substantial kotlyarov koterpillar cucumber copyright infoxchange connection following liability contract madeley danielle webdriver permission distribute sublicense warranty restriction danielle madeley particular purpose", "git_description_clean": "behavior driven development using cucumber for python selenium integration", "git_keywords_clean": "aloe gherkin selenium django bdd python", "pypi_description_keywords": "noninfringement limitation gherkin selenium copyright install documentation copyright danielle merchantability fitness subject software express substantial kotlyarov koterpillar cucumber copyright infoxchange connection following liability contract madeley danielle webdriver permission distribute sublicense warranty restriction danielle madeley particular purpose", "pypi_keywords_clean": ""}, "uogbuji/amara3-iri": {"git_readme_keywords": "internationalized resource processing variety", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "internationalized resource library processing", "pypi_keywords_clean": "web data url uri iri"}, "/glance-store": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library project svg library outside license apache purpose interface version documentation explanation additional specific general purpose apache license vulnerability repository project official governance license version", "pypi_keywords_clean": ""}, "sandlbn/django-bootstrap-calendar": {"git_readme_keywords": "simple calendar urls py template section instalation django calendar simple bootstrap calendar javascript section py urls django bootstrap", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple calendar template section instalation django calendar simple bootstrap calendar section history py release javascript section django bootstrap", "pypi_keywords_clean": "django bootstrap calendar"}, "gregoil/ipdbugger": {"git_readme_keywords": "statement division ipdb shell available ipdb session target image section decorator ipdbugger image block console exception", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "statement division ipdb shell available ipdb session target image section decorator ipdbugger image block console exception", "pypi_keywords_clean": "ipdb debug debugger exception"}, "/numconv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gustavo library documentation default", "pypi_keywords_clean": ""}, "aio-libs/aioftp": {"git_readme_keywords": "current extensible proxy aioftp pyftpdlib fallback server simple server apache license possible license aioftp overridden python license script aioftp client example travis status block python minimum usable version sphinx quickstart python server support simple extensible branch something client server asyncio github standard format ftpbench script server benchmark library installation install aioftp aioftp documentation enough license library python server directive aioftp server example", "git_description_clean": "ftp client server for asyncio http aioftp readthedocs org", "git_keywords_clean": "ftp ftp client ftp server asyncio python", "pypi_description_keywords": "current extensible proxy aioftp pyftpdlib fallback server simple server apache license possible license aioftp overridden python license script aioftp client example travis status block python minimum usable sphinx quickstart server support simple extensible branch something client server asyncio github standard format ftpbench script server benchmark library installation install aioftp aioftp documentation enough license library python server directive aioftp server example", "pypi_keywords_clean": ""}, "tkf/sexpdata": {"git_readme_keywords": "python sexpdata import serializer information expression license install source clause license install sexpdata", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python sexpdata import serializer information expression license install source clause license install sexpdata", "pypi_keywords_clean": "s expression lisp parser"}, "eraclitux/ipcampy": {"git_readme_keywords": "package default screenshot configuraton development snapshot cameras interval author username configuration similar firefox surveillance favicon example python process status extendibility password property belong ipcampy intellectual property respective webserver different welcome browser foscam interface address github repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default screenshot configuraton development snapshot cameras interval support username configuration author similar firefox surveillance example python process status extendibility functionality password property belong ipcampy intellectual property respective webserver different welcome browser foscam interface address official github repository", "pypi_keywords_clean": "ipcam foscam raspberrypi surveillance"}, "dossier/dossier-web": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "available documentation dossierstack installation", "pypi_keywords_clean": ""}, "wheerd/multiset": {"git_readme_keywords": "package hashable intersection implementation multiplicity unordered collection positive multiple standard library contrast combination support documentation immutable available frozenset element coverage membership overview particular installation installing dictionary information symmetric difference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package hashable intersection implementation multiplicity unordered collection positive multiple standard library contrast combination support documentation immutable available frozenset element coverage membership overview particular installation installing dictionary information symmetric difference", "pypi_keywords_clean": ""}, "CoryDolphin/flask-jsonpify": {"git_readme_keywords": "jsonpify flask flask jsonify flask jsonpify support method implementation jsonify function request response import jsonpify import jsonify callback extension way certain compatible installation module jsonify following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask jsonpify implementation response import jsonpify way extension module jsonify flask ext jsonpify flask flask jsonify support callback compatible installation ext jsonpify python jsonify function following request method import jsonify certain", "pypi_keywords_clean": ""}, "sf-zhou/prett": {"git_readme_keywords": "stringintitem project framework python key pretty project project value value dict default conversion property dict storage string float signal block python useful string property change framework pretty", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "qt ui"}, "jendrikseipp/vulture": {"git_readme_keywords": "original program whitelist py generated whitelist useful library untested python dynamic vulture vulture output vulture helpful report underscore g output syntax unused option option vulture parameter g following python quality program py mypackage python interpreter build abstract vulture mydir coverage module defined appveyor following output invalid confidence invalid command analysis project py vulture flask python vulture syntactic correctness dynamic nature example vulture myscript number likely whitelist python syntax error description whitelist whitelist function participate please unreachable decorator error wrong vulture myscript py message analyzed flag pypi whole directory vulture unused nonetheless nature static similar provided python installation coverage install vulture mypackage vulture g minimum status linux nonetheless vulture travis common python minimum confidence abstract syntax build status complete possible python module mydir whitelist recommended method python changelog roadmap unsatisfiable account vulture scanned such whitelist welcome python script chunk object", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "original program whitelist format handle null terrace detect function effect whitelist py accurate create generated whitelist add used useful library untested python dynamic don import vulture vulture tokenize method return separate child output vulture false used variable add python drop support unittest mock report underscore g setuptools output syntax unused class inherit option option vulture defined multiple don consider stub whitelist error message ez setup parameter g following python commandline quality program relevant py mypackage python interpreter whitelist mock detect unsatisfiable source build abstract defined import please visit vulture mydir coverage module defined following output default rj ignore rj add greet variable python setup confidence invalid command analysis project system default py vulture flask license path python vulture vulture ignore utf add stub syntactic correctness vulture class python report dynamic nature example new format global vulture myscript number likely whitelist python glob costin syntax error attribute invalid input create wheel rename vulture description whitelist whitelist whitelist module setup py ignore variable repository function guide changelog add support first release travis ci participate please alphanumeric variable unreachable rj don module drop decorator pypi pip ignore whole error wrong vulture myscript py unused tuple other used message analyzed flag rj report helpful tool fix directory vulture add flag pip install mock return standard library nature static unused nonetheless unused function ignore function rj count add appveyor py ignore similar provided detect unused python installation class detect rj handle roadmap news don flag support installation coverage install vulture create whitelist greet method mypackage vulture g minimum repo usage unused args status linux add version nonetheless vulture add method kwargs large version parameter detect unreachable false variable news add detect whitelist refer common python minimum confidence ci build os tox verbose abstract syntax build status complete florian many ignore class possible python module add whitelist mydir whitelist return value actual imported consider recommended method underscore show documentation rj detect jackric differentiate installation pip pull first tuple pyc python changelog roadmap report unused unsatisfiable account vulture mock module report attribute script add vulture used usage vulture exitcode scanned appveyor ci such whitelist welcome don ignore python script object ignore unused python standard report syntax gpl refactor", "pypi_keywords_clean": "dead code removal"}, "/django-boundaryservice": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "github", "pypi_keywords_clean": ""}, "AlexandreProenca/django-auto-rest-project": {"git_readme_keywords": "package django restful project scheme restful baseado improved functionality project command database exemple projeto django modern template installation creation django exemplo framework instalar django django digitar comando restful project digitar interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django"}, "/bayesian": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "print def person root folder opposite update class viagra meeting command folder path tomorrow classify update update buy milk word meeting emails print viagra spam schedule meeting parameter high viagra dear program milk message corpus email model model female print import classify filter database python utility female height random equivalent fitting folder extract java dear recipient cancer random classify classify print spam spam buy buy viagra tomorrow buy bayesian bayesan high level meeting buy number classify normal unknown odds buy folder low buy coffee update print low level positive false language print pos update meeting print folder folder model bayesian split model true classic cancer message spam meeting emails print buy likely print cancer update email update genuine spam instance supervised learning spam filter tomorrow genuine classify update classify folder spam emails email genuine meeting spam genuine meeting split odds print bayesian import cancer cancer new crunch belief result print print email corpus reason buy meeting bayesian extract classify message genuine print classic str split sexy viagra buy genuine emails bayesian system genuine update tomorrow tomorrow print normal height height weight opposite opposite likely spam problem chance pos pos print classify spew meeting tomorrow weight foot small python model print", "pypi_keywords_clean": ""}, "Mashape/unirest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "texperience/django-bootstrap-ui": {"git_readme_keywords": "documentation mainstream integrated codebase package default mainstream python python django django python readthedocs possible django bootstrap project bootswatch technical bootstrap markup license python installation identifier customized bootstrap integration available coverage transparency popular codebase bootswatch intuitive template bootstrap template bootstrap component semantic versioning django support versioning github framework python parameter markup extensive welcome backward compatibility contribution support outstanding complete bootstrap template variable support different powerful django python bootstrap", "git_description_clean": "this aims to be powerful django app to ease the integration of the popular bootstrap ui framework http getbootstrap com", "git_keywords_clean": "python django bootstrap", "pypi_description_keywords": "documentation mainstream integrated codebase package default mainstream python python django django python readthedocs possible django bootstrap project bootswatch technical bootstrap markup license python installation identifier customized bootstrap integration available coverage transparency popular codebase bootswatch intuitive template bootstrap template bootstrap component semantic versioning django support versioning github framework python parameter markup extensive welcome backward compatibility contribution support outstanding complete bootstrap template variable support different powerful django python bootstrap", "pypi_keywords_clean": ""}, "Christophe31/screenutils": {"git_readme_keywords": "enable license wtfpl rw session screen pypi screen class screen session screen support whole lock project instance usage example detach command screen binary funky modification available output df print github logfile feature equivalent bpython roadmap caution gnu screen initialize documentation screen property visibility status import string property wtfpl example example usage insertion screen df filesystem roadmap multi gplv initialize screen object generator permissave license access ureadahead debugfs session creation source screen equivalent laptop session installation disable python console creation screen", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "enable license wtfpl rw session screen pypi screen class screen session screen support whole lock project instance usage example detach command screen binary funky modification available output df print github logfile feature equivalent bpython roadmap caution gnu screen initialize documentation screen property visibility status import string property wtfpl example example usage insertion screen df filesystem roadmap multi gplv initialize screen object generator permissave license access ureadahead debugfs session creation source screen equivalent laptop session installation disable python console creation screen", "pypi_keywords_clean": ""}, "ubidots/ubidots": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full python capable value exact way return paginator method return number integer install required command debian version machine key necessary series return record forget specific variable parameter microsoft variable variable install pip id specific method source timestamp value error group library ubidots linux service single variable fipbpxpvioebebukacqezcqmtm account variable invalid python new apiclient instance ubidotserror ubidotserror python other id ccfdfbf value key example number value timestamp attribute message description message general ubidotserror ubidotsforbiddenerror json quickstart aditional attribute value number required value pypi anoter exception block bash single request capable device variable id ubidotserror block python resource exception ubidotsinvalidinputerror paginator object instantiated variable sudo python library general message specific module new variable current many bulk timestamp optional float ubidots python token computer ubidotsforbiddenerror ubidotsbulkoperationerror available several first datasource required server detail mac optional tags following http virtual source different ubidotsinvalidinputerror wich object client call datasource easy install new value class variable tags possibility", "pypi_keywords_clean": ""}, "sdispater/cleo": {"git_readme_keywords": "argument list first example output text second example target create useful mode meaning multiple string g support class mode other automatic tab order usage form code option list block text use option mode notation quiet level python verbosity indefinite number method code following form option g python next pass keyword task new option use mode command docstring testable command own background file python available non essential command definition meaning console create beautiful console code end formatting application code lot signature closing bunch message cleo build stderr list code block bash single dash next use example code cleo image uppercase code specific verbosity option notation special io block python status target console option notation value interesting part autocompletion cleo available foreground autocompletion pass command code last opened user access optional argument new command boolean flag terminal replacing g tip default value letter shortcut build status level wrapper verbosity level everything uppercase many value g tab completion possible default verbosity whole console flag code documentation row output code block several empty informative non optional executed command message multiple execution normal call verbosity flag semantic input use console application straightforward code following information following code io class call pass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "argument list first example output text second example target create useful mode meaning multiple string g support class mode other automatic tab order usage form code option list block text use option mode notation quiet level python verbosity indefinite number method code following form option g python next pass keyword task new option use mode command docstring testable command own background file python available non essential command definition meaning console create beautiful console code end formatting application code lot signature closing bunch message cleo build stderr list code block bash single dash next use example code cleo image uppercase code specific verbosity option notation special io block python status target console option notation value interesting part autocompletion cleo available foreground autocompletion pass command code last opened user access optional argument new command boolean flag terminal replacing g tip default value letter shortcut build status level wrapper verbosity level everything uppercase many value g tab completion possible default verbosity whole console flag code documentation row output code block several empty informative non optional executed command message multiple execution normal call verbosity flag semantic input use console application straightforward code following information following code io class call pass", "pypi_keywords_clean": "cli commands"}, "osupython/pip2": {"git_readme_keywords": "example freeze search pypi pypi freeze display example uninstall search search uninstall uninstall example search", "git_description_clean": "experimental port of pip from distutils to distutils", "git_keywords_clean": "", "pypi_description_keywords": "example freeze search pypi pypi freeze display example uninstall search search uninstall uninstall example search", "pypi_keywords_clean": "pip packaging distutils easy install setuptools"}, "benhoff/vexbot": {"git_readme_keywords": "useable vexbot readthedocs python gi climate status documentation status complete vexbot process status pluggable pip install ubuntu development readthedocs codeclimate linux installation vexbot robot command install dbus process manager vexbot generate gi python python pip example codeclimate readthedocs python active dbus systemctl session essential client server daemon install vexbot virtual environment distro ready above status codeclimate asyncio source session python block everyone arch linux robot please linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "DCASE-REPO/dcase-util": {"git_readme_keywords": "research classification instruction collection documentation standardized available implemented readable various acoustic standalone library challenge installation detection", "git_description_clean": "a collection of utilities for detection and classification of acoustic scenes and events", "git_keywords_clean": "dcase", "pypi_description_keywords": "research classification license collection documentation standardized detailed instruction challenge baseline available implemented readable various acoustic standalone library coverage installation detection", "pypi_keywords_clean": "audio sound"}, "/empy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python special prefix unaffected language arbitrary python playback command template dynamic chainable configurable accomplished variety special", "pypi_keywords_clean": ""}, "robcharlwood/django-mothertongue": {"git_readme_keywords": "package translation application license charlwood robcharlwood documentation directory appropriate lingual copyright charlwood anybody", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "translation application process welcome django mothertongue appropriate mothertongue django", "pypi_keywords_clean": "django in model translation internationalization"}, "irskep/sphinx-better-theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility download default complete customization themeconf documentation install command download impractical several readability structure compatible installation example regular whitespace encourage semantic predictable something modified version frivolous repository following frequency submodule", "pypi_keywords_clean": ""}, "nicolargo/pymdstat": {"git_readme_keywords": "version pythonic pythonic library pymdstat mdstat", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version pythonic pythonic library pymdstat mdstat", "pypi_keywords_clean": "raid linux"}, "rosscdh/hellosign": {"git_readme_keywords": "implementation installation crawford heureuse hellosign implementation implementation excellent heureuse rosscdh isnotahippy hellosign virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "powervm/pypowervm": {"git_readme_keywords": "password password debian packaging compatibility message license license mapping pypowervm python powervm suitable implementation current intuitive hierarchical useful property removal class development arbitrary dictionary argument license consuming management lu wrapper install library license overview pypowervm developer functional output project source single independent project structure deprecated packaging metadata restart license project example interaction january capacity monitoring property directory structure common directory sample internationalization password wrapper module structure debian following environment release xml few powervm performance powervc adapter add parameter internationalization initializer complex environment variable object novalink environment authentication mechanism specific ibm powervm example invocation method decorator", "git_description_clean": "python library for interacting with the powervm api", "git_keywords_clean": "", "pypi_description_keywords": "password password debian packaging compatibility message license license mapping pypowervm python powervm suitable implementation current intuitive hierarchical useful property removal class development arbitrary dictionary argument license consuming management lu wrapper install library license overview pypowervm developer functional output project source single independent project structure deprecated packaging metadata restart license project example interaction january capacity monitoring property directory structure common directory sample internationalization password wrapper module structure debian following environment release xml few powervm performance powervc adapter add parameter internationalization initializer complex environment variable object novalink environment authentication mechanism specific ibm powervm example invocation method decorator", "pypi_keywords_clean": ""}, "scrapinghub/flatson": {"git_readme_keywords": "scrapinghub python software license documentation schema flatson flatson configuration memory schema default serialization behavior", "git_description_clean": "tool to flatten stream of json like objects configured via schema", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation schema configuration annotated schema default history release serialization behavior", "pypi_keywords_clean": "flatson"}, "tonyseek/flask-navigation": {"git_readme_keywords": "status pypi version pypi status wheel build navigation pypi version build status wheel status navigation build status coverage status flask flask navigation request pull reueqst coverage status application installation flask application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status pypi alt build version pypi pull request status wheel build navigation pypi version build status wheel status navigation build status coverage status flask flask navigation request status alt alt coverage version alt coverage status alt pypi alt wheel", "pypi_keywords_clean": "navigation flask navbar nav"}, "/pyglet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "linux pyglet interface", "pypi_keywords_clean": ""}, "sakti/gperf": {"git_readme_keywords": "system activity target gperf activity information todos output result performance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tools system activity activity information output result performance", "pypi_keywords_clean": "sar sysstat time based graph"}, "/pysparse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "iterative python storage different conversion available pysparse factorization library freebsd wheeler", "pypi_keywords_clean": ""}, "/prody": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package synopsis download several analysis biopython consortium license argparse comparative analysis original graphical mcguire modeling interactive available shindyalov application development structure foundation license installation software foundation bethard reference flexible tracker license license pyparsing documentation homepage evolution structural interface biopython license sequence analysis biopython", "pypi_keywords_clean": "protein dynamics elastic network model gaussian network model anisotropic network model essential dynamics analysis principal component analysis protein data bank pdb gnm anm sm pca"}, "pbugnion/gmaps": {"git_readme_keywords": "visualization build status vision ipython notebook extension jupyterlab library coffee access google jupyterlab installation command travis build installation example python widget extension frontend python documentation functionality build interactive report jupyter necessary francisco uk minimal friction documentation documentation available similar current version geographical roadmap jupyter flexibility welcome plugin travis source interactive google customisability notebook widget", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "useful jupyter geographical", "pypi_keywords_clean": "ipython jupyter widgets"}, "ltrilety/mrglog": {"git_readme_keywords": "logger module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "logger module", "pypi_keywords_clean": ""}, "Andrew-Crosio/django-queryset-iterator": {"git_readme_keywords": "choosing general queryset median unique queryset iterator collection dataset primary django queryset database cursor useful performance coverage general", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "queryset iterator", "pypi_keywords_clean": ""}, "lmittmann/style": {"git_readme_keywords": "package javascript install support parameter status terminal command popular package version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package javascript install support parameter status terminal command popular package version", "pypi_keywords_clean": "style color ansi terminal styling chalk"}, "/mendeley": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application information compatibility mendeley documentation installation install access library command package manager", "pypi_keywords_clean": ""}, "ionelmc/tblib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pickling aforementioned compatibility different recursion classmethod installation documentation overview traceback serialize attribute traceback serialization beckjake optional multiple responsible billiard internal", "pypi_keywords_clean": "traceback debugging exceptions"}, "fragmuffin/pygcode": {"git_readme_keywords": "documentation interpreter installation install development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation interpreter installation install development", "pypi_keywords_clean": "gcode cnc parser interpreter"}, "yourlabs/django-session-security": {"git_readme_keywords": "django contrib package yoyo workstation mechanism sessionsecurity middleware useful yourlabs security scroll pingview recent activity coffee break ajax request circuit example django activity datetime number warning sessionsecurity server security session datetime inactivity jquery django logout inactive contact yourlabs warning otherwise middleware update javascript attribute sensitive warning pingview response activity client inactive browser reading", "git_description_clean": "a little javascript and middleware work together to ensure that the user was active during the past minutes in any tab he has open otherwise display warning leaving couple of minutes to show any kind of activity like moving the mouse otherwise logout the user", "git_keywords_clean": "", "pypi_description_keywords": "django contrib package yoyo workstation mechanism sessionsecurity middleware useful yourlabs security scroll pingview recent activity coffee break ajax request circuit example django activity datetime number warning sessionsecurity server security session datetime inactivity jquery django logout inactive contact yourlabs warning otherwise middleware update javascript attribute sensitive warning pingview response activity client inactive browser reading", "pypi_keywords_clean": "django session"}, "okturtles/dnschain": {"git_readme_keywords": "circumvention matthieu dnschain traditional dotdns metatld fontaine release history limiting simple gpg distribution distribution secure support bitcoin meetup michael bumann approximate chronological proof authentication untrustworthy katherine albrecht version dnschain development simpler powerdns authentication simple pydnschain domain original author release september https related dnschain frontier service internet compat march censorship circumvention license unblock likely travis compatible example secure gpg albrecht privacy blockchain university security matthieu rakotojaona alternative secure dnschain katherine dionysis zindros transparency certificate namecoin blockchain frontier podcast transparency documentation undetectable public proof restful class prevent community cryptocurrency ubuntu tutorial choice configuration trouble substitution template class proof podcast dnschain dnscrypt developer vignesh tutorial michael certificate revocation dnschain speaker current maintainer arbitrary namecoin public dnschain dnschain server documentation dionysis online problem ethereum support podimata pydnschain comparison metatld dnschain bumann optional possible unblock feature susceptible pp check zindros pydnschain bitcoin security denial favorite blockchain watch certificate transparency dnschain versus wilgustus following foundation access blockchain grondin unblock auditable interface university lecture twitter", "git_description_clean": "a blockchain based dns http server that fixes https security and more", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Azelphur-Servers/django-game-info": {"git_readme_keywords": "strike global admin project information server visit installed gathered information visit install urlconf protocol quick counter strike strike source module source counter py development server fortress counter django", "git_description_clean": "a django app to gather information from game servers", "git_keywords_clean": "", "pypi_description_keywords": "strike global admin project information server visit installed gathered information visit install urlconf protocol quick counter strike strike source module source counter py development server fortress counter django", "pypi_keywords_clean": ""}, "danielnyga/dnutils": {"git_readme_keywords": "project gaussian monotonic welcome jsonifiable threadsafe changelog changelog internal representation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project gaussian monotonic welcome jsonifiable threadsafe changelog changelog internal representation", "pypi_keywords_clean": "testing logging threading multithreading debugging tools utilities"}, "edoburu/sphinxcontrib-django": {"git_readme_keywords": "g django python autodoc irrelevant runtime autodoc annotation referenced project documentation output configure intersphinx block python installation annotation celery runtime information foreign contrib sphinx documentation g following sphinxcontrib django python sphinx example configuration sphinx autodoc related block django documentation directive celery contrib celery", "git_description_clean": "improvements for the output of sphinx autodoc for django classes", "git_keywords_clean": "django sphinx extension api documentation", "pypi_description_keywords": "g django python autodoc irrelevant runtime autodoc annotation referenced project documentation output configure intersphinx block python installation annotation celery runtime information foreign contrib sphinx documentation g following sphinxcontrib django python sphinx example configuration sphinx autodoc related block django documentation directive celery contrib celery", "pypi_keywords_clean": ""}, "rhinstaller/pocketlint": {"git_readme_keywords": "configuration validity source", "git_description_clean": "shared code for running pylint against our projects", "git_keywords_clean": "", "pypi_description_keywords": "configuration validity source", "pypi_keywords_clean": ""}, "miguelgrinberg/python-socketio": {"git_readme_keywords": "question documentation implementation change overflow realtime", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "question documentation implementation change overflow realtime", "pypi_keywords_clean": ""}, "moccu/pytest-isort": {"git_readme_keywords": "python everything check import activate install setting configuration plugin incorrect something testsuite option folder example", "git_description_clean": "py test plugin to check import ordering using isort", "git_keywords_clean": "", "pypi_description_keywords": "python everything check import activate install setting configuration plugin incorrect something testsuite option folder example", "pypi_keywords_clean": ""}, "djangonauts/djangorestframework-gis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management effect postgresql hstore extent serializer method default behaviour reverse block javascript docker compose client bounding model django web following example version python subclass format approximate status coverage install development spatial database bounding box development version equivalant above example search variation source member reference help filter convert python drf build docker runner serialization createdb django project geojson field unique field recommended way database additional filter structure geometryserializermethodfield geojson compatible django hstore field distance filter framework version geographic primary key request build certain distance function db configuration suffix custom geojson id id rm python compatibility python serializer community geometry field python bounding instance geographic add version drf id field block python feature uncomment implement custom package extensible django restframework reference property pypi version corresponding geojson feature db drf version id geometry dictionary setup development access psql aka distance pagination django model framework install pull request build status extension stable version default django possible web application status pypi output available compose build bbox custom source setup add default distancetopointfilter python version such development environment id attribute optional second approach flag distance envlist conversion mapping geojson version django input distance coverage status class geojsonpagination drf django extensible django docker different django version object geojson specification client block python custom configuration directive", "pypi_keywords_clean": "django rest framework gis geojson"}, "hmrc/servicemanager": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "hynek/argon2-cffi": {"git_readme_keywords": "black teaser appveyor rehash jowigogpzx gkfq library check verify coverage gkfq wdyuspybvfipkjalq recent supplied python import passwordhasher argonid teaser begin password skrtpsswrd traceback argon import argon block simplest documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "negligence damage appveyor rehash release information ancient jowigogpzx gkfq dmitry copyright library substitute distribution development original product implied visual studio merchantability support license author chemeris redistribution schlawack modification passwordhasher theory verify fitness github coverage business interruption gkfq wdyuspybvfipkjalq procurement supplied python software limited express encoding helpful argonid special exemplary alexander chemeris password copyright alexander skrtpsswrd repository following liability contract permission consequential traceback following disclaimer integer philippe aumasson indirect incidental specific incompatible particular purpose incidental special simplest possibility documentation status", "pypi_keywords_clean": "password hash hashing security"}, "/flask-environments": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask environment", "pypi_keywords_clean": ""}, "the-hypermedia-project/representor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/unrealcv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "computer vision unreal engine ue synthetic simulator robotics"}, "Jaymon/wishlist": {"git_readme_keywords": "bleeding wishlist nothing selenium chrome factor authentication variable wishlist wishlist access wishlist private wishlist wishlist command firefox amazon wishlist factor structure version installation minute example amazon advertising wishlistelement nothing special public wishlist wishlist python authentication headless chrome something uk g amazon python library environment variable default amazon commandline wishlist programmatic wishlist private wishlist", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "variable wishlist headless nothing special wishlist access authentication environment variable command default amazon amazon wishlist wishlist wishlist nothing something private wishlist structure library installation example", "pypi_keywords_clean": ""}, "/couchpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information database management programmatic interface building database relational database", "pypi_keywords_clean": "orm database couchdb nosql modeling"}, "klahnakoski/mo-json": {"git_readme_keywords": "limitless string array iteration library ujson single s encoder module encoded required izable query abstraction speedtest primitive format record typed encode function update parameter complex explicit array please notice significant overhead serializer account interpreted python expected nosql strict sibling parser stream example schema interpret document parent default aka ignored dynamic typed function additional property unicode string righteous delusion storage generic streamer bijection object existence iterator module module original massive string method object property singleton array b python encoder simple iteration flexible method convert full property encoded string different query pypy version module ignored common wonderful attack single property endless schema reason module function memory integration python solution operator generator exception conversion convert number array notice following default implementation hierarchical database different flexibility overall objective object compound python existence depth query structure method", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "limitless string array iteration library ujson single s encoder module encoded required izable query abstraction speedtest primitive format record typed encode function update parameter complex explicit array please notice significant overhead serializer account interpreted python expected nosql strict sibling parser stream example schema interpret document parent default aka ignored dynamic typed function additional property unicode string righteous delusion storage generic streamer bijection object existence iterator module module original massive string method object property singleton array b python encoder simple iteration flexible method convert full property encoded string different query pypy version module ignored common wonderful attack single property endless schema reason module function memory integration python solution operator generator exception conversion convert number array notice following default implementation hierarchical database different flexibility overall objective object compound python existence depth query structure method", "pypi_keywords_clean": ""}, "/celery-with-mongodb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package dependency application optional extension following identifier mongodb specific shortcut following", "pypi_keywords_clean": ""}, "tsileo/dirtools": {"git_readme_keywords": "noninfringement default limitation syntax copyright python hashdir implied helper filename pattern python license documentation pattern matching block python merchantability fitness subject installation gitignore software limited python compress substantial express excluded directory connection following liability contract permission distribute sublicense matching generate search warranty gzip restriction access directory excluded modify publish distribute python package particular purpose block custom walker", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement default limitation syntax copyright python hashdir implied helper filename pattern python license documentation pattern matching block python merchantability fitness subject installation gitignore software limited python compress substantial express excluded directory connection following liability contract permission distribute sublicense matching generate search warranty gzip restriction access directory excluded modify publish distribute python package particular purpose block custom walker", "pypi_keywords_clean": "exclude exclusion directory hash compression gzip"}, "/theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pattyjogal/django-npm-36": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django npm staticfiles"}, "praekelt/molo-polls": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package block content language ability namespace install endblock setup section endif endblock article continuous integration module py coverage", "pypi_keywords_clean": "praekelt mobi web django"}, "KelSolaar/manager": {"git_readme_keywords": "mansencal copyright implementation example component component implementation initialize uninitialize manager package deactivate qobjectcomponent qobjectcomponent componentsmanager manager structure similar manager qwidgetcomponent qwidgetcomponent component configuration documentation manager component command alternative command qwidgetcomponent qwidgetcomponent initializedui attribute manager qobjectcomponent default manager manager componentsmanager resource statement copyright thomas software implementing manager component package reference component introduction manager component implementation attribute description uninitializeui initializedui manager application installation repository qwidgetcomponent initializeui thomas mansencal following manager getinterface implementation reference microsoft initializeui uninitializeui shell interface previous example qobjectcomponent manager component manager", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mansencal copyright implementation example component component implementation initialize uninitialize deactivate qobjectcomponent qobjectcomponent componentsmanager manager structure similar manager qwidgetcomponent qwidgetcomponent component configuration documentation manager component command alternative command qwidgetcomponent qwidgetcomponent initializedui attribute manager qobjectcomponent default manager manager componentsmanager resource statement copyright thomas software implementing manager reference component introduction manager component implementation attribute description uninitializeui initializedui manager application installation repository qwidgetcomponent initializeui thomas mansencal following manager getinterface implementation reference microsoft initializeui uninitializeui qobjectcomponent manager interface previous example component manager component", "pypi_keywords_clean": ""}, "/angus-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "firstopinion/decorators": {"git_readme_keywords": "function installation subtle instance different flexible function method developer decorator function problem python interface source decorator class broad", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subtle instance flexible function method developer decorator function problem python interface python installation simple decorator source little different class child class broad", "pypi_keywords_clean": ""}, "dmerejkowsky/pytest-runfailed": {"git_readme_keywords": "project standalone different functionality directory anything downside failing original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project standalone different functionality directory anything downside failing original", "pypi_keywords_clean": ""}, "schlamar/flake8-todo": {"git_readme_keywords": "python mccabe checker installation upgrade xxx unique install plugin available previous version module install upgrade", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python mccabe checker installation upgrade xxx unique install plugin available previous version module install upgrade", "pypi_keywords_clean": "flake todo"}, "/pydub": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gotchas readme manipulate audio interface", "pypi_keywords_clean": "audio sound high level"}, "calmjs/nunja": {"git_readme_keywords": "contribute message calmjs installation management default tracker javascript dynamic template template compilation institute university invocation library standalone static development actual deployment minimum framework similar provided rendering firefox output available integration downstream reuseable difference optional standard calmjs example python software python dependency number generated javascript frontend tutorial system calmjs framework current directory following command continuous integration appropriate metadata repository recommended different artifact copyright auckland javascript package calmjs system calmjs command standard commonjs conjunction ability calmjs project static requirejs browser commonjs structure artifact require access complete artifact plugin template artifact bundle package repository associated javascript consumption minimum python", "git_description_clean": "the nunja templating framework for python javascript", "git_keywords_clean": "", "pypi_description_keywords": "python javascript package management development minimum framework frontend javascript install tracker rendering calmjs framework reuseable environment associated javascript consumption repository calmjs installation", "pypi_keywords_clean": ""}, "koenbok/cactus": {"git_readme_keywords": "slash versioning block simple javascript hosted minification closure cactusblog company portfolio extensible destination folder optimization modify django template canonical wanted standard extensive process www cactus system cactus enable plugin functionality domain great typical search google webmaster short video quick overview impatient install change great dynamic variable nameserver configuration closure compiler hidden personal support project author database pipeline cactus plugin system project structure install cactus build folder example multiple deployment static version template system document portfolio personal automatic nameserver sitemap custom pipeline bucket visual feedback folder cactus rendered website docker source contexts cactus default author pattern cactus www variant registrar happy orozco similar absolute filesystem valid domain static static hacker pyyaml library default cactus powerful static metadata framer website amazon access extra bucket config ready browser handy native correct nameserver cactus cactus tutorial cactus google video tutorial build website generator secret quick tutorial linking keychain valid extended actual documentation future expiration overview watch available change small webserver building inheritance js minification python savvy example modify index plugin py static template following static website configuration support discussion example python py developed cactus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "slash versioning simple javascript hosted minification closure cactusblog company portfolio extensible destination folder optimization modify django template canonical wanted standard extensive process www cactus system cactus enable plugin domain great typical search google webmaster modify short video quick overview impatient install change great dynamic variable nameserver configuration closure compiler hidden personal support project database pipeline cactus plugin system project structure install cactus build folder example multiple deployment static version template system portfolio personal automatic nameserver sitemap pipeline bucket visual feedback folder cactus rendered website docker source contexts cactus cactus www variant registrar happy orozco similar absolute filesystem valid domain static static hacker default cactus powerful static framer website amazon access extra bucket config ready full documentation browser handy native correct nameserver cactus cactus tutorial cactus google video tutorial build website generator secret quick tutorial linking keychain valid extended actual future expiration overview watch change small webserver building inheritance js minification python savvy index plugin py static template following static website configuration support discussion example python py developed cactus", "pypi_keywords_clean": ""}, "/moya": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition shortener application information project navigate virtual currency install command application quick following complete directory project directory database encrypted installation example following development", "pypi_keywords_clean": ""}, "robotpy/robotpy-ctre": {"git_readme_keywords": "software robotpy robotpy specific documentation develop robotpy project advanced spicuzza available wrapper hardware repository", "git_description_clean": "robotpy wrappers for ctre third party extensions for wpilib", "git_keywords_clean": "robotpy ctre frc python", "pypi_description_keywords": "software robotpy robotpy specific documentation develop robotpy project advanced spicuzza available wrapper hardware repository", "pypi_keywords_clean": ""}, "achtman-lab/grapetree": {"git_readme_keywords": "grapetree navigate macosx delimited bacterial useful multiple folder grapetree visualization download grapetree standard install command integral software foundation phylip grapetree grapetree newick extracted folder program standardalone version achtman grapetree enterobase download method distance default enteromstree grapetree length columns lightweight webserver grapetree version sequence alignment example carrico achtman software allele profile number security grapetree splash aligned description public license heuristic button grapetree config browser window external additional python enterobase version implied warranty collumn presentation accepted manuscript general public metadata francisco behaviour downstream analysis warranty browser citation enteromstree particular purpose google javascript documentation unique research installing documentation jsdoc grapetree detailed distance recraft merchantability computer fitness license copyright python genomic warwick university directory sergeant luhmann muscle prompt detailed information column copyright warwick anytime different window configuration offline", "git_description_clean": "grapetree is fully interactive tree visualization program which supports facile manipulations of both tree layout and metadata", "git_keywords_clean": "mlst tree", "pypi_description_keywords": "grapetree navigate macosx delimited bacterial useful multiple folder grapetree visualization download grapetree standard install command integral software foundation phylip grapetree grapetree newick extracted folder program standardalone version achtman grapetree enterobase download method distance default enteromstree grapetree length columns lightweight webserver grapetree version sequence alignment example carrico achtman software allele profile number security grapetree splash aligned description public license heuristic button grapetree config browser window external additional python enterobase version implied warranty collumn presentation accepted manuscript general public metadata francisco behaviour downstream analysis warranty browser citation enteromstree particular purpose google javascript documentation unique research installing documentation jsdoc grapetree detailed distance recraft merchantability computer fitness license copyright python genomic warwick university directory sergeant luhmann muscle prompt detailed information column copyright warwick anytime different window configuration offline", "pypi_keywords_clean": "bioinformatics microbial genomics mlst visulisation"}, "/python-ldap3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "look", "pypi_keywords_clean": "python ldap"}, "watson-developer-cloud/watson-developer-cloud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "level directory full service discovery instance access management audio build status behavior client library result authentication watson stable version folder project location python client timeout cloud private support license previous other service instance token sdk build status slack migration watson assistant output authorization token dsx speech service callback class developer cloud python version structure order assistant python identity example custom callback python sdk variable authentication response information response model bash http client system http response directory something custom watson developer http status various account installation connection right following cloud python function permission default response generated kernel different python python cloud foundry watson authorization precedence environment variable work download button advanced token header certificate verification appropriate request manage authentication credential py python disable", "pypi_keywords_clean": "language"}, "macacajs/wd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "webdriver contributing license macaca implementation changelog available release selenium homepage", "pypi_keywords_clean": "macaca webdriver uitest mobile automation ee"}, "/chromalog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project important default monochromatic message logging chromalog configuration chromalog monochromatic logging", "pypi_keywords_clean": ""}, "benjamin-hodgson/build": {"git_readme_keywords": "huddle fluent installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-standalone": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "rfc database connection such situation official way way standard way class mylibrary myothermodel class standard other full django install install django command caveat standalone executable standalone django py much dynamic configuration thing need little library option nothing module environment magic script symbolic boss class andyetanothermodel standalone import setting class allwaysinstalledmodel original module production server license author course django shell django application additional project structure example django global sqlite database database engine import setup py repository umbrella application django setting access django purpose bunch access management install standalone testing configuration stupid provided django standalone django app context standalone application likes voodoo access simple standalone proper python import myothermodel reason class myothermodel command shell available gb included setup class mymodel accessible module standalone app namespace python everything engine sqlite something object persistence management import following different django project ability command syncdb environment variable template class variable standalonemodel", "pypi_keywords_clean": "django standalone script orm"}, "bitmazk/cmsplugin-googlemap": {"git_readme_keywords": "googlemape stable release commit googlemap plugin tracker plugin github difference installation optional adventurous django django following django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "googlemape stable release commit googlemap plugin tracker plugin github difference installation optional adventurous django django following django", "pypi_keywords_clean": "django cms plugin googlemap maps"}, "adafruit/adafruit-ampy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "design system download package index circuitpython adafruit micropython python setup library subcommand untested utility delay rshell simple command mpfshell terminal install configuration computer output available github source verify serial connection standard python installation example macos circuitpython micropython directory convenience information parameter python script environment variable advanced interaction program shell access python package following command ls command micropython board linux", "pypi_keywords_clean": "adafruit ampy hardware micropython circuitpython"}, "/picard": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "musicbrainz tracker unicode support possible official musicbrainz majority illustrated documentation install available capable several building excellent unicode application reporting generation musicbrainz community information codebase approach platform", "pypi_keywords_clean": "musicbrainz metadata tagger picard"}, "Kotti/deform-bootstrap": {"git_readme_keywords": "myform person mapping class myschema harmless twitter bootstrap append bootstrap tabbed autocompleteinputwidget dateinputwidget g legacy stuff standard support single inline checkbox command server standalone autocompleteinputwidget unfortunately widget checkboxchoicewidget bootstrap datepicker keyword package static deform autocompleteinputwidget additional datepicker markup deform mariani lazar widget textinputwidget jquery version myschema colander deform feature choice colander fixed length direct dependency daniel nouri static lessc jeff dairiki subclass class default chris multiple selection setting variable length ux backward incompatible class personschema download selenium choice widget dateinputwidget datetimeinputwidget ajax practice rendering additional klker jeff compatible vertical inline schemanode colander colander schemanode complicated widget deform success attribute bootstrap typeaheadinputwidget custom customized version following schema console append kg complete bootstrap colander integer bunch slick myschema bootstrap selenium colander schema jqueryui deform js choice deform orinial widget constructor b deploy configuration chosen application pserve datepicker widget context lessc deform small selenium server remainder access section semanticaly correct harvest replacement autocomplete interpreter select corresponding selenium personschema colander deployment deformdemo terminal documentation output support deform computer inline stuff jqueryui pyramid python deform bootstrap deform widget prefer schema choice directory bootstrap static information initial development py inline bootstrap", "git_description_clean": "bootstrap compatible templates for the deform form library merged into deform", "git_keywords_clean": "", "pypi_description_keywords": "myform person mapping class myschema harmless deformdemo selenium twitter bootstrap append bootstrap tabbed autocompleteinputwidget dateinputwidget resource registry mapping sequence g legacy stuff standard support single inline checkbox command prepend append server standalone autocompleteinputwidget unfortunately much widget checkboxchoicewidget bootstrap datepicker keyword package static deform autocompleteinputwidget additional datepicker fix resource markup deform mariani lazar widget textinputwidget jqueryui legacy jquery version readonly myschema colander deform feature mapping template choice colander fixed length direct dependency daniel nouri css class restructure update static lessc orderable sequence jeff dairiki subclass class bootstrap feature default chris multiple selection setting variable length ux backward incompatible prepend deform class personschema invalid download selenium css choice widget dateinputwidget datetimeinputwidget ajax practice rendering additional klker jeff compatible vertical inline bootstrap iconglyphs schemanode colander colander schemanode complicated widget deform success support bootstrap attribute resource filename update documentation bootstrap typeaheadinputwidget custom customized version improve following schema deform search console application css timepicker append keyword append kg renderer complete bootstrap colander integer google appengine markup legacy bunch broken readonly chosensinglewidget slick inherit chosenmultiplewidget field myschema bootstrap legacy restructure remote source class argument selenium colander schema additional css jqueryui deform js kg css choice added support deform orinial widget constructor b fix deform source attribute deploy configuration coverage chosen application js css pserve datepicker widget context chameleon lessc deform selenium server remainder broken resource access section semanticaly correct harvest sequence support bootstrap added replacement autocomplete prepend chosen widget interpreter button constructor select corresponding selenium upgraded bootstrap css js personschema colander fix normalization selectwidget deployment deformdemo validation terminal documentation chosen mmariani output support deform computer inline stuff jqueryui pyramid typeaheadinputwidget source python deform bootstrap look prefer deform widget schema choice directory bootstrap static information small fix pyk initial development bootstrap css py inline bootstrap", "pypi_keywords_clean": "twitter bootstrap deform styles css web forms form"}, "/django-bootstrap-breadcrumbs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bootstrap django template", "pypi_keywords_clean": ""}, "/suap-templates": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "caesarnine/zen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "zendesk incremental available endpoint library example", "pypi_keywords_clean": "zendesk api ticketing helpdesk"}, "earthreader/libearth": {"git_readme_keywords": "package common library console libearth libearth install tracker github install libearth integration appveyor continuous integration coverage various repository github installation readthedocs earthreader librelist", "git_description_clean": "libearth is the shared common library for various earth reader apps", "git_keywords_clean": "", "pypi_description_keywords": "package common library console libearth libearth install tracker github install libearth integration appveyor continuous integration coverage various repository github installation readthedocs earthreader librelist", "pypi_keywords_clean": ""}, "ambition-trial/ambition-validators": {"git_readme_keywords": "ambition travis codecov", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pypi coverage ambition", "pypi_keywords_clean": "django ambition"}, "/django-cas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "original support authentication backend interface middleware casified", "pypi_keywords_clean": "django cas cas authentication middleware backend"}, "drericstrong/pypbe": {"git_readme_keywords": "note reroll s dice num dice raw full array comeliness default pf pbe class multiple pbe alg noisy distribution mean buy think th scheme pypbe maximum possible attribute dice new dictionary pbe high pypbe rec roll mc calculation attribute score equal possible value sarah john buy equivalent histogram function order die con int expected power same thing dexterity intelligence die result cost point int wis dms option xdy notation accuracy times roll g buy system general latter array dice roll strength constitution generated rpg group rd edition end note ten instance player equivalent default mc plot limit parameter pypbe simulator matplotlib pypbe typical array roll low pbe low buy mapping method buy scheme mean value few different roll think defined point high consider gms fun pypbe bk heroku pypbe get random bokeh server spiky specified ability dm none example roll die effect ability inclusive attribute keep type matter above custom possible point value note modifier add random roll intelligence possible dice rolled get distribution attribute value personal preference ability score total generated custom pbe default mapping pypbe import user specified val parameter high limit system strength core functionality histogram method dice parameter keep row summary rpg system several different drop wis cha alg plot current documentation racial additional buy attribute example important number complicated simulator pypbe plot histogram cost different keep parameter roll high decision mc function limit default d rd system pbe procfile mapping custom limit pbe gm lee many times subtle right system jupyter notebook average typical stat hist plot parameter example python dictionary rec bokeh buy value impossible likely stat decent github repository chance effective intelligence wisdom basic gui monk intelligence kara power level expected value work john default example str dex import pbe hist parameter complicated example act fair way pip install attribute num bottom plot minimum possible low consider section above add val point buy instance attribute system numpy seaborn cluttered alg roll limit roll specified amount defined one python api deviation th custom point mc alg pbe map effect pbe buy distribution following user dictionary value feature angry resource min maxer fair point wisdom charisma pf example term array simulator str roll stat pathfinder point organization monte carlo pypbe pypbe tabletop gaming weak program initializing same way gm input validation pbe object proficient attribute modifier powerful useful information class ranger alg get advanced character creation inverse kara amount lee sarah roll multiple alg pbe roll pbe easy way stat array keep keep dictionary key rolled default value equal plot alg reroll parameter average point character mean standard constitution dexterity above process attribute such keep attribute api current install pypbe sided dice dice type possible kara bit applicable dex con important note lucky today buy concept num hist num attribute cha com one figure above total rolled pf available history mc get rolled dice final result sense default none bk pypbe keep dice interest pypbe system other parameter pypbe favorite class first session time map parameter bad same modifier seaborn matplotlib possible dice something mc method own point low limit new pathfinder carlo simulation pathfinder campaign today john following pf e pathfinder e executable following code low ability common attribute high equivalent point pip pip total number roll attribute parameter bk bokeh top part type parameter unit standard deviation creation default", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rpg"}, "byroot/pysrt": {"git_readme_keywords": "unlucky python library command useful subripitem available subtitle import editable subripfile compatible installation rescale", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unlucky python library command useful subripitem available subtitle import editable subripfile compatible installation rescale", "pypi_keywords_clean": "subrip srt subtitle"}, "/django-featured-item": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nikipore/stompest": {"git_readme_keywords": "message handler simple processing graceful twisted stompest stompest stompest abstract representation message processing question module generic support command production environment functionality someone enterprise activemq java ll connection generic subscription virtual environment stomper stompest urgent enhancement method hoover theduderog synchronous random default syntax protocol version session subscription project proposed transaction developer handling failover default behavior stream handling scheme hobby thread vs broker network session transport behavior feature complete vs process broker graceful custom subscription replay destination specific willing capability appropriate effort scheme synchronous simple stateless concurrency scheme activemq strategic leadership generic flight request ll thoroughly handling concurrent environment kudos concurrency scratch compiler faithful outstanding message programming framework production redelivery policy scenario customizable connect particular current maintainer disconnect consider stompest version negotiation faithful implementation replay scheme python package definition transformation module failover transport twisted package agnostic destination parameter specific message subscription handling errordestination leadership position implementation complete anything graceful shutdown asynchronous customized checkout documentation integration asynchronous framework minence exception graceful disconnect python infinite sequence reconnect directory concurrent message generic implementation simple function stateless function configurable powerful asynchronous twisted asynchronous adapter broker stateless persistent protocol asynchronous programming unhandled abstract", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package generic implementation anything thoroughly separate package stompest documentation asynchronous package installation subscription abstract representation concurrency question support compiler faithful transaction developer available optional negotiation production process production environment framework functionality connect particular generic implementation generic subscription stateless function powerful asynchronous stompest package stompest maintainer adapter persistent disconnect faithful implementation protocol activemq", "pypi_keywords_clean": "stomp activemq rabbitmq apollo"}, "simonw/django-html": {"git_readme_keywords": "package thread practise completeness default xhtml doctype background information reusable apps correct markup string stock django output further background experimental approach widget optional context doctype example django python number argument field current active directory template useful information doctype relevant doctype definition active doctype current doctype closing xhtml appropriate template problem moment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package thread practise completeness default xhtml doctype background information reusable apps correct markup string stock django output further background experimental approach widget optional context doctype example django python number argument field current active directory template useful information doctype relevant doctype definition active doctype current doctype closing xhtml appropriate template problem moment", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-msi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package management lropoller underlying complete service management behavior response release history library argument syntax resource manager project changelog release bugfixes compatibility positional default behavior callback polling performance general version optional generator important keyword argument generation session completion azureenum polling parameter bundle package formatting initial running operation algorithm initial release parameter microsoft general breaking external feedback context manager unrecognized", "pypi_keywords_clean": ""}, "usrlocalben/pydux": {"git_readme_keywords": "book reader urwid todos redux implementation urwid urwid original single redux readme reimplementation python redux urwid pydux todos example python redux redux click redux component pydux redux redux todos initial console todos pydux canute object interface braille book action further electronic braille", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "redux implementation", "pypi_keywords_clean": ""}, "yufeiminds/toolkit": {"git_readme_keywords": "repositry install documentation document contribute develop continual serveral library toolkit function develop branch contact", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "toolkit tool jinja unicode template"}, "/flask-rq2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "continuation software rq instance console information calver inspiration documentation application object pattern queue extension installation coverage", "pypi_keywords_clean": ""}, "avakar/cson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "notation multiple unlikely coffescript unambiguous project grammar standard package rewriter output indentation unbraced installation example important informal exchange pycson typical whitespace particular implementation definition language consistent indentation implementation translate maximal interface grammar simpler coffeescript significant canonical implementation special", "pypi_keywords_clean": ""}, "poppy-project/poppy-ergo": {"git_readme_keywords": "explorer twitter facebook technological development scientific printable international trademark fondation fundamental research learning library thought distribution language formation personnal computer robotic creature experience usbdynamixel license embodiement documentation support license hardware available creative freedom software simulator description jonathan cognition repository hardware software thingiverse morphology anaconda dynamixel youtube twitter education matthieu request information license bordeaux artificial curiosity", "git_description_clean": "a degree of freedom arm with mx motors", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pycsw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "specification catalogue project information compliant license service implementation implementation catalogue component catalogue service publishing implementation specification numerous initial development opensearch official discovery reference implementation geospatial metadata", "pypi_keywords_clean": "pycsw csw catalogue catalog metadata discovery search ogc iso fgdc dif ebrim inspire"}, "pytest-dev/unittest2pytest": {"git_readme_keywords": "licence hartmut default mighty backup control system unittest contrast similar public licence available manual adjustment several version control installation context particular directory following version version different dictionary american travis appropriate homepage", "git_description_clean": "helps rewriting python unittest test cases into pytest test cases", "git_keywords_clean": "", "pypi_description_keywords": "licence hartmut default assertregex assertraisesregexp assertwarnsregex changelog mighty backup unittest contrast lambda support similar public licence available several installation particular directory incorrect internal cleanup assertraisesregex assertraisesregexp following initial release version version different dictionary american subproject travis adjustment appropriate homepage", "pypi_keywords_clean": ""}, "unified-font-object/ufolib": {"git_readme_keywords": "ufolib ufolib writer format readable source installation reader", "git_description_clean": "a low level ufo reader and writer", "git_keywords_clean": "", "pypi_description_keywords": "format source object", "pypi_keywords_clean": ""}, "anchor/esadmin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration elasticsearchadmin goonatilleke", "pypi_keywords_clean": ""}, "momyc/gevent-fastcgi": {"git_readme_keywords": "wsgiref gevent install gevent fastcgi application custom request implementation bash custom runner response application fastcgi simple request multiple request handler possible project greenlet request protocol connection support cpus irequesthandler interface depolyment favourite fastcgi gevent fastcgi standard wsgiref handler implementation empty stdout application wsgiref different request version irequesthandler request installation feature separate greenlet param stream python application bash fcgi param fastcgi protocol callable argument request request body fastcgiserver pip following coroutine wsgirefrequesthandler request stdout dictionary basiccgihandler request environment original request adapter request argument information pastedeploy apps networking library positional argument object handler callable web following command module request gevent wsgirequesthandler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation library favourite fastcgi fastcgi wsgi", "pypi_keywords_clean": "fastcgi gevent wsgi"}, "/arcrest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "linuxwhatelse/lwe-mapper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic principle small dependency mapper query query possible project mjs mapper simple footprint python other stuff directory return query value small scheme resolver add function point small footprint resolver mapper download mapper installation usage decorator project usage", "pypi_keywords_clean": "url scheme resolver mapper"}, "cyberdelia/flask-statsd": {"git_readme_keywords": "simple application installation extension", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "joeyespo/flask-pytest": {"git_readme_keywords": "project change source config default twitter motivation configuration discussion behavior something available request background process output change extension feature repository normal development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "background process debug", "pypi_keywords_clean": ""}, "eerimoq/bitstruct": {"git_readme_keywords": "unpack offset format string unsigned integer python example struct module default python struct result documentation installation legacy project homepage future boolean primitive block python implement similar interface feature byteswap unpacking lsb python change repository install binary homepage documentation unpacked buildstatus coverage previous example change endianness request buildstatus significant basic example module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unpack offset format string unsigned integer python example struct module default python struct result documentation installation legacy project homepage future boolean primitive block python implement similar interface feature byteswap unpacking lsb python change repository install binary homepage documentation unpacked buildstatus coverage previous example change endianness request buildstatus significant basic example module", "pypi_keywords_clean": "bit field bit parsing bit unpack bit pack"}, "frictionlessdata/jsontableschema": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "return bool package tabular message semver default character changelog response utility library useful field instance multiple validate concrete version interface declaration primary class argument expected sql storage validated schema model bigquery storage snapshot detailed command csv installation example available plugin system own storage correct format schema descriptor deprecated datetype instance reference snapshot exception validate implementor schema source storage backend exception schemas storage python storage pandas schema return number helpful property system foreign schema g sql database release option filepath storage sql provisional pandas storage compatibility manner return schema other program different storage field object array return manner documentation backward compatibility interface optional argument schema utility custom storage array storage plugin datafile contribution schema field schema schema", "pypi_keywords_clean": "frictionless data open data json schema json table schema data package tabular data package"}, "fabpot/sphinx-php": {"git_readme_keywords": "package project default symfony something extension following configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "paulocheque/django-smart-autoregister": {"git_readme_keywords": "key relationship application documentation autoregister behavior modeladmin pertinent intention", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python django admin autoregister"}, "zhangliyong/rq-gevent-worker": {"git_readme_keywords": "gevent monkey geventworker rqworker import worker implement worker process process rqworker declaration lechup gevent install command jhorman child process option monkey patch crash official gevent worker alive process crash", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information worker implement gevent install block gevent worker", "pypi_keywords_clean": ""}, "/delphixpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "delphixpy delphixpy hashable default python compatibility changelog delphixengine delphix oracle supported delphix password version python database refresh system connect delphix address compatibility python various python undefined script sysadmin delphix virtualization import delphixengine address delphix delphixpy delphix support various refresh database", "pypi_keywords_clean": ""}, "okfn/flexidate": {"git_readme_keywords": "parsing package microsecond attribute comparison excellent dateutil library development original imprecise license additional available coverage normalize various fuzzy functionality normalization machine readable function information welcome object relevant sortable notation system", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/ldappool": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ldappool simple configurable pool pool default configurable max behavior passwd password simple connector string useful python ldap server uris library quickstart possible bind default connection method uri mandatory timeout connector max number default retry passwd default connector timeout default false order connector pool ldap connection mandatory bind server connectionmanager pool uri comma output similar timeout default ldapobject retry max ldap server server uri default default default password retry delay delay delay connector default whitespace separated bind bind uri option max lifetime uri ldap context manager retry default default bind false timeout bind connector transparent reconnection", "pypi_keywords_clean": ""}, "jgarzik/python-bitcoinrpc": {"git_readme_keywords": "protocol version persist standard compatibility timeout argument support jsonrpc following bitcoin bitcoinrpc authserviceproxy bitcoin specific authentication following generic directory output decimal improved version authserviceproxy object library installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "protocol version persist standard compatibility support jsonrpc authentication bitcoinrpc authserviceproxy following generic directory specific output decimal improved version authserviceproxy object library installation example", "pypi_keywords_clean": ""}, "Kemaweyan/singleton-decorator": {"git_readme_keywords": "create singleton singleton pattern isolation class object type instantiation argument only separate decorator testable mock object command simple solution complete isolation installation solution constructor separate wrapper direct access wrapper function impossible direct simple singleton simple class attribute decorated class inner wrapper wrapper object singleton decorator class definition constructor method different approach first import decorator function block usage testable singleton problem existing instance block unit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "create singleton singleton pattern isolation class object type instantiation argument only separate decorator testable mock object command simple solution complete isolation installation solution constructor separate wrapper direct access wrapper function impossible direct simple singleton simple class attribute decorated class inner wrapper wrapper object singleton decorator class definition constructor method different approach first import decorator function block usage testable singleton problem existing instance block unit", "pypi_keywords_clean": "singleton decorator unittest"}, "/weblate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty automatic merging simple interface propagation context message useful merchantability maintainability control integration available symbian codecov coverage version control interface upload fitness license copyright django project quality software foundation software localization report general public directory access control translation mercurial support public license translation propagation tunable access automatic linking warranty support documentation program installation installation particular purpose message quality weblate supported translation", "pypi_keywords_clean": "in ln gettext git mercurial translate"}, "/async": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interdependent experiment deprecation async library", "pypi_keywords_clean": ""}, "ckan/ckanext-rq": {"git_readme_keywords": "service apache robust default development default supervisor config coverage report pypi normal plugin plugin ckanext extension install ckanext python setup pypi python ubuntu startup setting project configure supervisor worker paster check fallback worker config coverage config background version python license ckanext development status available backport version apache installation restart github example virtualenv python sdist upload functionality version number import release necessary travis virtual environment function paster plugin plugin toolkit toolkit enqueue environment variable travis development installation python package source distribution apache reload torfsen", "git_description_clean": "backport of rq background jobs for ckan versions before", "git_keywords_clean": "", "pypi_description_keywords": "service apache robust default development default supervisor config coverage report pypi normal plugin plugin ckanext extension install ckanext python setup pypi python ubuntu startup setting project configure supervisor worker paster check fallback worker config coverage config background version python license ckanext development status available backport version apache installation restart github example virtualenv python sdist upload functionality version number import release necessary travis virtual environment function paster plugin plugin toolkit toolkit enqueue environment variable travis development installation python package source distribution apache reload torfsen", "pypi_keywords_clean": "ckan rq jobs"}, "hhatto/kuroko": {"git_readme_keywords": "python logbook executor framework crontab installation python watchdog interval support terminal minimalistic python watchdog logbook python crontab interface license sighup wrapper python restart crontab watchdog execution logbook crontab", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python logbook executor framework crontab installation python watchdog interval support terminal minimalistic python watchdog logbook python crontab interface license sighup wrapper python restart crontab watchdog execution logbook crontab", "pypi_keywords_clean": "bot framework"}, "djungelorm/sphinx-csharp": {"git_readme_keywords": "install subset progress extension sphinx example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "encode/starlette": {"git_readme_keywords": "brighton england complete ecosystem framework toolkit shutdown modularity gunicorn process background uvicorn toolkit starlette performance websocket available several separation hypercorn installation coverage production starlette starlette application framework independent techempower impressive performance mountable following licensed complete framework codebase optional required performance asyncio throughput middleware lightweight isolation performance performance independent component startup gunicorn starlette documentation starlette", "git_description_clean": "the little asgi framework that shines", "git_keywords_clean": "python async websockets graphql http", "pypi_description_keywords": "brighton england complete ecosystem framework toolkit shutdown modularity gunicorn process background uvicorn toolkit starlette performance websocket available several separation hypercorn installation coverage production starlette starlette application framework independent techempower impressive performance mountable following licensed complete framework codebase optional required performance asyncio throughput middleware lightweight isolation performance performance independent component startup gunicorn starlette documentation starlette", "pypi_keywords_clean": ""}, "/aspen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor framework license documentation available further information attraction installation licensed github", "pypi_keywords_clean": ""}, "caktus/fabulaws": {"git_readme_keywords": "application scratch development fabulaws context manager execute following typical workflow instance typical", "git_description_clean": "a python tool for creating and interacting with ephemeral aws resources", "git_keywords_clean": "", "pypi_description_keywords": "application scratch development fabulaws context manager execute following typical workflow instance typical", "pypi_keywords_clean": ""}, "rochacbruno/flask-simplelogin": {"git_readme_keywords": "flask security checker message flask simple pypi complete extension logic customizable basic project validator flask argument username course available first checker encrypt something simple flask wtf clever example default message placeholder security flask application production database integration integration password authentication success first access context custom logout access control dictionary custom function complex failure invalid password management template customizing decorator submit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask recommend checker message flask simple complete simple travis extension customizable basic project python customizing flask argument validator username screen course figure authentication authorization strikeout password something simple production clever example default message pypi pypi python application database integration success context custom logout access control integration strikeout function dictionary strikeout database management strikeout complex failure invalid password management template decorator submit python custom travis pypi", "pypi_keywords_clean": ""}, "wong2/pick": {"git_readme_keywords": "default optional mapping displayed return multiple library return result possible displayed original instance terminal optional status target element installation feature example function example optional custom format multiselect example register custom custom handler return mapping function specific keyboard picker dictionary selection indicator interactive selection module support minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default optional mapping displayed return multiple library possible displayed original instance terminal optional element installation feature example function example optional custom format multiselect example register custom custom handler return mapping function specific keyboard dictionary selection indicator interactive selection minimum", "pypi_keywords_clean": "terminal gui"}, "tarantool/tarantool": {"git_readme_keywords": "package implementation interest msgpack replication authentication asynchronous extension multiple detailed supported support compatible tarantool tarantool application stateful scalable cooperative multitasking control freebsd architecture memory database optional persistence tarantool documentation discussion external feedback replacement referential", "git_description_clean": "get your data in ram get compute close to data enjoy the performance", "git_keywords_clean": "tarantool database transactions in memory disk lua msgpack appserver", "pypi_description_keywords": "package download synchronous python driver connector version library installed tarantool tarantool version tarantool database network machine persistency console python archive unpack branch connection version connector development version following environment recommended console program source", "pypi_keywords_clean": ""}, "bcarlin/flask-debugtoolbar-mongo": {"git_readme_keywords": "package harry stacktrace welcome current complete augment information author config debug toolbar mongodb django debug operational extension debugtoolbar history repository following configration debug toolbar example original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package harry stacktrace welcome current complete augment information author config debug toolbar mongodb django debug operational extension debugtoolbar history repository following configration debug toolbar example original", "pypi_keywords_clean": ""}, "NSLS-II/bluesky": {"git_readme_keywords": "bluesky python collection interface documentation experimental tagged development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sphinx-contrib/sphinxcontrib-matlabdomain": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package docementation default sphinxcontrib matlabdomain docstring extension scriptname reference document public statmethname automethod configuration documentation reference several absolute funcname autofunction available install sphinxcontrib installation example document staticmethod statmethname automethod statmethname attrname reference repository autofunction funcname autodoc convenience following general annotation signature document staticmethod constructor docstring definition directive", "pypi_keywords_clean": ""}, "/python-fedora": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "fedora python webservices"}, "urbanairship/tessera-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "api client tessera client", "pypi_keywords_clean": ""}, "gsi-upm/gsitk": {"git_readme_keywords": "sentiment agreement default evaluation pipeline implementation complete sentiment analysis machine learning library project spanish ministry learning sentiment economy evaluation conjuction compatible performance development process installation example research extractor normalization alternative directory current directory necessary recommendable selection extraction repository recommended following ensemble structural environment variable", "git_description_clean": "", "git_keywords_clean": "sentiment analysis python nlp machine learning", "pypi_description_keywords": "", "pypi_keywords_clean": "sentiment analysis"}, "/lfc-page": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction information management default interface public release", "pypi_keywords_clean": "django lfc cms"}, "pretenders/pretenders": {"git_readme_keywords": "introduction debugging standalone specialised message implementation pattern python compatibility specific proprietary service protocol comfortable majority development project checking documentation official docker available integration mocking branching convention sphinx example execution mailing software flexible system runnable alternative branch fulfilment typical external network develop branch unified restful following branching docker compelling microframework mocking external manual testing", "git_description_clean": "fake servers for testing", "git_keywords_clean": "", "pypi_description_keywords": "introduction debugging standalone specialised message implementation pattern python compatibility specific proprietary service protocol comfortable majority development project checking documentation official docker available integration mocking branching convention sphinx example execution mailing software flexible system runnable alternative branch fulfilment typical external network develop branch unified restful following branching docker compelling microframework mocking external manual testing", "pypi_keywords_clean": ""}, "qoda/wkhtmltopdf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "plugin default username default bydendyk jpbydendyk cyrillic install resolution default header wkhtmltopdf install install xvfd flashplugin nonfree xvfb install support screen resolution output optional background default password default grayscale default install xvfb scalable default portrait millisecs orientation orientation default system install install wkhtmltopdf nonfree python python wrapper disable javascript install flashplugin default millisecs footer python wkhtmltopdf javascript default", "pypi_keywords_clean": ""}, "willkg/steve": {"git_readme_keywords": "information conference tracker documentation command mozilla metadata", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information conference tracker documentation command mozilla metadata", "pypi_keywords_clean": "richard videos importer"}, "cloud-compose/cloud-compose-cluster": {"git_readme_keywords": "zookeeper envdir terminate protection multiple recommend docker compose g standard support termination command cloud server cloud compose process version regardless docker container local testing account terminate script launch config g docker ssh protection optional docker mongodb group cluster plugin default cloud provider dynamic maximum redundancy database explanation clustername search additional default behavior optimized optional virtualenv number security attribute following environment mongodb kafka different availability operating system convenient purpose upgrade backend cluster membership example project compose cluster instance username configuration compose yml feature production follow reference contributing scripting upgraded consistent separate subnet access specific section additional server lvm device mapper unique behavior mapper backend pull volume amazon machine recommended setting directory element cloud following cloud agnostic docker information similar project install editable template significant", "git_description_clean": "cluster commands", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "cloud"}, "/moldesign": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "notebook molecular compliance specific language incorporated copyright autodesk development applicable molecular library offering documentation molecule language governing umbrella installation example software simulation visualization notebook visualization express geometry visualization analysis toolkit molecular molecular modeling molecular visualization readable abstract jupyter notebook visualization library pycloudcomputecannon", "pypi_keywords_clean": ""}, "Kozea/pyphen": {"git_readme_keywords": "", "git_description_clean": "hyphenation in pure python", "git_keywords_clean": "python hyphenation", "pypi_description_keywords": "usage import python module libreoffice repository wilbert iterate sterdam lettergrepen pyphen pyphen included language fallback fork autoband ventieldopje python hyphenator pyphen language wrap autobandventieldopje repository autobandventieldopje autoband hunspell hyphenation libreoffice amster variant license pyphen copying import pyphen", "pypi_keywords_clean": ""}, "kootenpv/just": {"git_readme_keywords": "python project content different environment variable safety install computer directory rationale relative urllib extension following environment optional sensible possible default structure reading dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "WoLpH/mt-940": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pprint transaction source bug basic parsing import mt development branch python import balancebase scope pull request pypi ohloh request development shell info available code mt pypi blog source bsd documentation library help transaction pprint transaction code support transaction code coverage documentation source command source documentation pull blog install code block block python dev code status target coverage target version target balance information documentation changelog abnamro python everything python support currency statement mt mt import processor pypi version info python python blog pprint pprint release code import pprint scope mt support python mt code manipulation development release parsing code transaction transaction mt package homepage install dev simple json coverage pypi license git appreciated pprint mt travis block shell ohloh license available python", "pypi_keywords_clean": "mt"}, "ValvePython/dota2": {"git_readme_keywords": "suggestion license check coordinator documentation current documentation status installation install module version welcome installation", "git_description_clean": "python package for interacting with dota game coordinator", "git_keywords_clean": "steam game coordinator dota valve python", "pypi_description_keywords": "suggestion license check coordinator documentation current documentation status installation install module version welcome installation", "pypi_keywords_clean": "valve steam steamid api webapi"}, "zimmermanncode/robotframework-tools": {"git_readme_keywords": "basic client library way multiple keyword function single required robot log session instance framework shell generated property python compatible functionality return decorator keyword toolslibrary ipython shell parameter traceback ipython setup method interactive overview service default syntax double robot camelcase dynamic variable extend original function argument dynamic library session object robotshell installation robot keyword generate network additional robot variable keyword argument additional keyword library prefix different keyword custom custom logic session management general purpose actual session switchable external python s normal python xml rpc ipython automatic contexts todo initialized keyword exception generated dynamic standard library instance variable syntax function definition keyword contexts explicit session own dictionary environment actual dynamic remote robotshell library class switchable keyword sequence robotframework function object python python access simple interactive library instance dictionary lookup module robot framework package additional general behavior switch extension interactive combining framework standard camelcase todo access robot accessible optional opener keyword additional argument python robot python original argspec server conversion rpc client following handler class functionalitiy", "git_description_clean": "python tools for robot framework and test libraries", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "robottools robot framework robotframework tools test automation testautomation acceptance atdd testlibrary testcase keyword pybot testrobot remoterobot remote server robotremoteserver robotshell ipython jupyter notebook python"}, "/gizeh": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "source software intuitive gizeh gizeh licence default contribute gizeh bottom transparent gizeh colorgradient numpy array difficult opaque gizeh gizeh imagepattern website gizeh github everyone project standard g zulko github github installation documentation trouble command computer debian ubuntu gradient moviepy element installation creation height element contour everything zulko surface directory python binding popular library stroke macosx zulko installation support function powerful parameter python library platform welcome rotation object section directory installation method source python package element default module problem contour default picture", "pypi_keywords_clean": "cairo vector graphics"}, "ninapavlich/django-inline-wrestler": {"git_readme_keywords": "wrestler bottom grapelli support adminlistcollapsible grpadminlistcollapsible button sortable kitchen control change ordering jump stackedinlineorderable grpstackedinlineorderable tabularinlineorderable grptabularinlineorderable position actual project changelist up install django change version adminlistorderable grpadminlistorderable django sortable widget definition following ordinary particular custom grappelli grptabularinlineorderable stackedinlineorderable installed folder structure hierarchical integer grpadminlistorderable tabularinlineorderable high plugin sorting example sortable sorting sorting functionality grpstackedinlineorderable adminlistcollapsible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jquery position inline admin actual bottom project order field django inline plugin custom field install django particular field django grappelli inline wrestler django admin grappelli installed ordinary order", "pypi_keywords_clean": ""}, "return1/django-sslify-admin": {"git_readme_keywords": "django middleware default randall unsecure request build status thanks reason license build header admin interface project custom admin install version python https connection sslify admin django admin proxy heroku django sslify middleware https localemiddleware custom debug actual processing situation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django middleware default randall unsecure request build status thanks reason license build header admin interface project custom admin install version python https connection sslify admin django admin proxy heroku django sslify middleware https localemiddleware custom debug actual processing situation", "pypi_keywords_clean": "django ssl https middleware admin"}, "/joblib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "computation algorithmic persistence replacement memoize pattern caching mechanism unmodified parallel possible separate persistence original instance computational particular transparent persistence compressed persistence performance solution efficient application framework functionality arbitrary necessary paradigms lightweight pipelining control reproducibility unreproducible readable parallel licensed scientific development execution context evaluation memoize specific caching", "pypi_keywords_clean": ""}, "justquick/django-math-captcha": {"git_readme_keywords": "question captcha verification contact captcha interaction justquick mathematical captcha default modulo question behavior multiply divide correct response example project practical subtract available captcha subtract multiply version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "question captcha verification captcha interaction justquick mathematical captcha default behavior multiply divide correct response example project practical subtract available captcha subtract multiply", "pypi_keywords_clean": ""}, "matttproud/quantile-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tahoe-lafs/zfec": {"git_readme_keywords": "loss refactoring requested value meras different subtle erasure coding good performance target travis string python v laptop ghz multiple library second parameter memory buffer distribution addition copying tgppl th help fecpp enjoy software licence other lloyd samuel command public licence enjoy zooko thirumoorthy unix style langley thing python interface morelos zaragoza compatible algorithm usage sequence protocol target appveyor necessary sharefile single buffer option bench bench allmydata fabrice licensed gnu lafs fecpp python buffer encode valgrind algorithm licence version similar effect python wrapper bug sharenum compiler release status python interpreter unix cp decoding encoding web array py class boulder colorado style command unix split underlying library reconstruction utility function zfec please default compression memory footprint inclusive patch input parameter portable erasure python sequence k redundancy powerpc mhz haskell interface luigi rizzo primary project included bench successive unnecessary copy author error correction th buffer mature whielacronx sarah hopwood caller python pypi release performance copy operation example secondary block equivalent few clean pointer important zfec package number encoding changed complete copy beginning david sarah integrity travis appveyor directory structure small memory alternative split single public license period public kinninmont brian low level first primary zfec command block beware issue work integrated encryption control immutable interface ghc appropriate zfec efficient function community mutable py encode contribute haskell licence zfec installation py script buffer protocol advance string object excellent padding gcc cp utility execute desired zooko wilcox ffi function license version original guard bsum protocol such requested block rubenstein warner zandr github overview present immutable filesystem efficient portable block decode justin boreta compress status target structure backup proof zunfec execute reference secondary k m class encoder separate input redundancy easyfec py bench zfec general public julian seward zunfec command single element gnu general primary block metadata brian warner pypi travis fabrice grinda zfec haskell stringy easyfec th primary duo appveyor intro hs information such gotcha retrievability lzip gnu caller arbitrary integer privacy guard milewski justin encryption integrity input sequence package generate redundant interpreter build status result second py module repair disk possible segment fancy subtlety combination checkout documentation ghz workstation colorado pypi future split utility other unix library first available output several blocknum optional first few tuple bitwise compatible copying gpl various erasure python benchmark bsum extra check first archive input operation few directory zfec zfec index filefec py access control integrity check zfec py right athlon ghz transitive lafs encryption apppropriate primary richard stallman optimized implementation gnu privacy command please different event subtle failure th block decode object total number johannknecht block zandr milewski unpacked source", "git_description_clean": "zfec an efficient portable erasure coding tool", "git_keywords_clean": "", "pypi_description_keywords": "loss refactoring requested value meras different subtle erasure coding good performance target travis string python v laptop ghz multiple library second parameter memory buffer distribution addition copying tgppl th help fecpp enjoy software licence other lloyd samuel command public licence enjoy zooko thirumoorthy unix style langley thing python interface morelos zaragoza compatible algorithm usage sequence protocol target appveyor necessary sharefile single buffer option bench bench allmydata fabrice licensed gnu lafs fecpp python buffer encode valgrind algorithm licence version similar effect python wrapper bug sharenum compiler release status python interpreter unix cp decoding encoding web array py class boulder colorado style command unix split underlying library reconstruction utility function zfec please default compression memory footprint inclusive patch input parameter portable erasure python sequence k redundancy powerpc mhz haskell interface luigi rizzo primary project included bench successive unnecessary copy author error correction th buffer mature whielacronx sarah hopwood caller python pypi release performance copy operation example secondary block equivalent few clean pointer important zfec package number encoding changed complete copy beginning david sarah integrity travis appveyor directory structure small memory alternative split single public license period public kinninmont brian low level first primary zfec command block beware issue work integrated encryption control immutable interface ghc appropriate zfec efficient function community mutable py encode contribute haskell licence zfec installation py script buffer protocol advance string object excellent padding gcc cp utility execute desired zooko wilcox ffi function license version original guard bsum protocol such requested block rubenstein warner zandr github overview present immutable filesystem efficient portable block decode justin boreta compress status target structure backup proof zunfec execute reference secondary k m class encoder separate input redundancy easyfec py bench zfec general public julian seward zunfec command single element gnu general primary block metadata brian warner pypi travis fabrice grinda zfec haskell stringy easyfec th primary duo appveyor intro hs information such gotcha retrievability lzip gnu caller arbitrary integer privacy guard milewski justin encryption integrity input sequence package generate redundant interpreter build status result second py module repair disk possible segment fancy subtlety combination checkout documentation ghz workstation colorado pypi future split utility other unix library first available output several blocknum optional first few tuple bitwise compatible copying gpl various erasure python benchmark bsum extra check first archive input operation few directory zfec zfec index filefec py access control integrity check zfec py right athlon ghz transitive lafs encryption apppropriate primary richard stallman optimized implementation gnu privacy command please different event subtle failure th block decode object total number johannknecht block zandr milewski unpacked source", "pypi_keywords_clean": ""}, "beetbox/mediafile": {"git_readme_keywords": "project quality library mutagen synopsis mediafile mediafile independent interface mediafile import license documentation common community interface synopsis mediafile available install metadata sampson manipulation import mediafile mediafile python mediafile", "git_description_clean": "elegant audio file tagging", "git_keywords_clean": "", "pypi_description_keywords": "project quality library mutagen synopsis mediafile mediafile independent interface mediafile import license documentation common community interface synopsis mediafile available install metadata sampson manipulation import mediafile mediafile python mediafile", "pypi_keywords_clean": ""}, "pyecharts/pyecharts-jupyter-installer": {"git_readme_keywords": "pip bash jupyter installer installer installation", "git_description_clean": "install pyecharts extensions into jupyter", "git_keywords_clean": "", "pypi_description_keywords": "jupyter installer change version pip installer installation", "pypi_keywords_clean": "python"}, "/logilab-astng": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "discover inference builtin partial library utility development project instance compatible representation tarball support unittest discover logilab common additional representation subscription information building pychecker pyreverse common created directory subdirectory different logilab discover unittest access installation", "pypi_keywords_clean": ""}, "inovonics/inovonics-cloud-datastore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/ttfquery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openglcontext implementation rendering specific fonttools ttfquery abstract possible programmer", "pypi_keywords_clean": "fonttools ttf truetype outline font curve system fonts"}, "/dependency-management": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coala requirement", "pypi_keywords_clean": ""}, "centralniak/cmsplugin-gallery": {"git_readme_keywords": "reordering cmsplugin gallery javascript support available advantage template autodiscovery individual installation version unlimited github feature python important versatile gallery gallery subdirectory necessary typical anytime template installation approach django version contribution template imagefield check djangocms filerimagefield", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fwenzel/django-sha2": {"git_readme_keywords": "django model database password design dictionary key default attacker secret key secret setting backend anything useless second login control system library machine local hmac key django default class password hashing project combination similar database history ignore change version control calculation monkey patch first compatible database django local secret order django hmac support example key brute force password rehashing something default bcrypt algorthim hmac reason machine default password password field app repository strong password initial following function dictionary django django algorithm force offline hex transparent password snippet database migration access system access quick overview blog hmac quick", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django model database password design dictionary key default attacker secret key secret setting backend anything useless second login control system library machine local hmac key django default class password hashing project combination similar database history ignore change version control calculation monkey patch first compatible database django local secret order django hmac support example key brute force password rehashing something default bcrypt algorthim hmac reason machine default password password field app repository strong password initial following function dictionary django django algorithm force offline hex transparent password snippet database migration access system access quick overview blog hmac quick", "pypi_keywords_clean": ""}, "/django-chronograph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "annoying information overview documentation directory release repetitive restructuredtext chronograph installation", "pypi_keywords_clean": "django cron chronograph"}, "stonebig/baresql": {"git_readme_keywords": "dataframe division pandasql agility baresql ipython pandas inspiration bsqldf lambda install baresql future import baresql baresql special module install upgrade installation example upgrade uninstall python upgrade baresql common baresql import danielle esmeralda expression support function unicode select welcome uninstall baresql science import baresql", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dataframe division pandas compatibility pandasql agility syntax installation python mysql support rewrite result baresql ipython iterable object import baresql pandas inspiration object support esmeralda franz bsqldf lambda pandas sqlalchemy correct mysql install baresql future import baresql baresql browser added special module install upgrade version installation python keyword python sqlite example baresql minimal upgrade uninstall python upgrade baresql v pandas initial version common tokenizer baresql import manager danielle esmeralda cleanups support support initial minimal compatibility expression support function unicode select welcome dataframe column standard installation uninstall baresql science sqlalchemy sqlite sqlite inline sqlite browser uninstall sqlite correction sqlite", "pypi_keywords_clean": "sqlite sql"}, "WarmongeR1/django-remdow": {"git_readme_keywords": "django remdow receive static different remdow simple html content local folder script filter center template download center responsive filter loading download external class simple django static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django remdow receive static different remdow simple html content local folder script filter center template download center responsive filter loading download external class simple django static", "pypi_keywords_clean": "django static templatetags downloader"}, "yaph/geonamescache": {"git_readme_keywords": "geonamescache population scratch property develop github necessary request function library installation following example geographic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "geonamescache population scratch property develop github necessary request function library installation following example geographic", "pypi_keywords_clean": ""}, "vbabiy/django-pipeline-compass": {"git_readme_keywords": "pipeline compass report bug django pipeline compass django compiler feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django pipeline pipeline compiler", "pypi_keywords_clean": ""}, "/pyalsa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cuisine bigasterisk support viewcvs interleaved cuisine output available routing anonymous bigasterisk subject example srcmirror", "pypi_keywords_clean": ""}, "smartfile/python-librsync": {"git_readme_keywords": "introduction software project librsync number manual wrapper smartfile status wrapper information generate signature common available necessary wrapper coverage version smartfile destination generate example", "git_description_clean": "ctypes wrapper for librsync", "git_keywords_clean": "", "pypi_description_keywords": "introduction software project librsync number manual wrapper smartfile status wrapper information generate signature common available necessary wrapper coverage version smartfile destination generate example", "pypi_keywords_clean": ""}, "ioos/pyoos": {"git_readme_keywords": "implied warranty standardized metadata discrete geometry response specific functionality useful copyright licence copyright metadata concept merchantability instance provider install python dateutil command explanation trouble available roadmap development paegan version fitness virtualenv sensorml software foundation dependency acrosby asascience software beautifulsoup status axiomdatascience general public filipe release collection library quality wqxoutbound typical option experimental virtualenv installation crosby acrosby following asascience public license common interface window particular purpose following python different python specific wilcox python library warranty netcdf progress instantaneous collector problem google alvarenga", "git_description_clean": "a python library for collecting met ocean observations", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty standardized metadata discrete geometry response specific functionality useful copyright licence copyright metadata concept merchantability instance provider install python dateutil command explanation trouble available roadmap development paegan version fitness virtualenv sensorml software foundation dependency acrosby asascience software beautifulsoup status axiomdatascience general public filipe release collection library quality wqxoutbound typical option experimental virtualenv installation crosby acrosby following asascience public license common interface window particular purpose following python different python specific wilcox python library warranty netcdf progress instantaneous collector problem google alvarenga", "pypi_keywords_clean": ""}, "riklaunim/django-ckeditor-updated": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everyone happy management selenium webdriver pillow configure ckeditor distribution g processing support command formfield version jquery different configuration unwanted generation python initialisation installation switch enforce correct ckeditor integration uploaded buggy restriction shaunsephton django collectstatic filename django ckeditor default stylesheetparser plugin project constant fallback updated ckeditor filename upload ckeditor language compatible installation schema version support version initial removal ckeditor restrict import example managment conflict disable verbosename robust random string python compatibility shaunsephton repository richtextfield ckeditor updated testing thumbnail generation support django compatability upload behavior feature application reference ckeditor version correct configuration release general cleanup config ckeditor jquery django shaunsephton browser access uploaded content django compatibility package riklaunim django ckeditor riklaunim refactor csrfexempt checkout disable stylesheetparser optional python uploading selenium integration manifest restrict byuser ability positional argument ckeditorwidget ckeditor uploadprefix upload", "pypi_keywords_clean": ""}, "littleweaver/django-talkback": {"git_readme_keywords": "googleapis talkback setting urlconf urlpatterns customization talkback config project pluggable config jquery middleware talkbackmiddleware similar jquery jquery installation default talkback jquery support example config feedback talkback middleware repository following notification highlight feedback customer support middleware", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "powered feedback pluggable", "pypi_keywords_clean": ""}, "Unidata/siphon": {"git_readme_keywords": "package design unidata python status codecov information important license prwelcome collection appveyor codecov developer documentation unidata python siphon package travis python python gallery version number travis appveyor protobuf beautifulsoup release coverage status support python repository application programming unidata overflow gitter current version status appveyor siphon siphon welcome siphon tracker python siphon license", "git_description_clean": "siphon collection of python utilities for retrieving atmospheric and oceanic data from remote sources focusing on being able to retrieve data from unidata data technologies such as the thredds data server", "git_keywords_clean": "python unidata netcdf thredds thredds catalogs", "pypi_description_keywords": "", "pypi_keywords_clean": "meteorology weather"}, "theelous3/multio": {"git_readme_keywords": "together version support layer multio multio convenience wrapper example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pymysql-sa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python server engine default gevent pymysql database sqlalchemy installation binary cooperative pymysql dialect python pymysql", "pypi_keywords_clean": "sqlalchemy pymysql dialect gevent"}, "celery/case": {"git_readme_keywords": "package index build status download source pyversion pyimp wheel pyversion snapshot source downloading command source download unittest mock virtualenv python unittest status coverage support python development version following license wheel pyimp version coverage license installation installation command build python package", "git_description_clean": "python unittest utilities", "git_keywords_clean": "", "pypi_description_keywords": "package index build status download source pyversion pyimp wheel pyversion snapshot source downloading command source download unittest mock virtualenv python unittest status coverage support python development version following license wheel pyimp version coverage license installation installation command build python package", "pypi_keywords_clean": "test unit testing pytest unittest mock patch"}, "universalcore/unicore-languages": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "helper", "pypi_keywords_clean": "elastic git universal core"}, "viveksb007/brainyquote": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "quotes pyquotes brainyquote"}, "treasure-data/td-logger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "macosx special default levelname kuntz default bufmax string library timeout network original localhost please check development envionment database information please logger default timeout handler treasure important unavailable default timeout default setup default default funcname setup development treasuredatahander constructor documentation install levelno network timeout module filename", "pypi_keywords_clean": ""}, "nose-devs/nose2": {"git_readme_keywords": "standard library testing unittest project testing configuration documentation successor available version example framework quickstart status discuss python testing popular testing coverage status function thorough rundown welcome testing framework typical unittest python standard purpose", "git_description_clean": "the successor to nose based on unittest", "git_keywords_clean": "python python python python nose nose nosetests nosetest python python library library testing testing tools testing framework testing library testing tool unit test unittest unittesting", "pypi_description_keywords": "standard library testing unittest project testing configuration documentation successor available version example framework quickstart status discuss python testing popular testing coverage status function thorough rundown welcome testing framework typical unittest python standard purpose", "pypi_keywords_clean": "unittest testing tests"}, "/flask-thumbs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/steelscript-netprofiler": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "netprofiler steelscript steelscript technology installation", "pypi_keywords_clean": ""}, "fizista/django-taggit-templatetags2": {"git_readme_keywords": "static html model myapp tagcanvas element py manage library override template queryset django template install reusable django taggit limit order cloud clone installation usage javascript class template taggit manager djangoapp django taggit templatetags import limit number coverage python view yourapp yourmodel default urls py clone matter wonderful guy urls urlpatterns model app own default view gaynor mathijs templatetags urls installation example helpful pull myapp mytaggeditem attribute analogue cloud order js static taggit templatetags model class templatetags tagcanvas custom resulting repository few application django id width moment templatetags django width px field mytag default pip install import tagcanvaslistview yourmodel inclusion instance taggit tagcloud inventor tagcanvaslistview urlpatterns djangoproject django app myapp mytag application pip context particular yourmodel element default taggit taggit taggeditem templatetags whole project mytaggeditem default cloud default canvas tagcanvas popular way section myurlname import urls taggeditem taggit minimum default tagcanvas maximum inclusion tagcloud yourapp taglist element id html canvas sense tuple django community python look taggeditem weight attribute tagdetail convenience following object template entry tagcloud app model", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "static html model myapp tagcanvas element py manage library override template queryset install reusable django taggit limit order cloud clone installation usage javascript class template taggit manager djangoapp django taggit templatetags import limit number coverage python view yourapp yourmodel default urls py clone matter wonderful guy urls urlpatterns own default view gaynor mathijs templatetags urls installation example helpful pull myapp mytaggeditem attribute analogue cloud order js static taggit templatetags model class templatetags tagcanvas custom resulting repository few application django id width moment templatetags django width px field mytag default pip install import tagcanvaslistview yourmodel inclusion instance taggit tagcloud inventor tagcanvaslistview urlpatterns djangoproject template context myapp mytag application pip context particular yourmodel element taggit taggeditem templatetags whole project mytaggeditem default cloud default canvas tagcanvas popular way section myurlname import urls taggeditem taggit minimum default tagcanvas maximum inclusion tagcloud yourapp taglist element id html canvas sense tuple django community python look taggeditem weight attribute tagdetail convenience following object template entry tagcloud default taggit", "pypi_keywords_clean": "django taggit tags tagcloud taglist tagging tag"}, "/browsermob-proxy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bayandin/devtools-proxy": {"git_readme_keywords": "package standalone language configure debugger throttling network default previous standalone package protocol installation download chromedriver selenium optional multiple simultaneous possible example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "selenium chrome chromedriver devtools"}, "codingjoe/django-stdimage": {"git_readme_keywords": "package optimum performance dictionary example threading maxsizevalidator version stdimage automated original request stdimage processing performance restrict validation validation support transaction increased performance previous command multiprocessing imagefield callback version implement compatible installation production footprint keyword callable django standardized attribute django dynamic garbage collection following dictionary generated separate process different contributing license asynchronous rendering variation template prevent deletion request management command validator attribute", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package optimum performance dictionary example threading maxsizevalidator version stdimage automated original request stdimage processing performance restrict validation validation support transaction increased performance previous command multiprocessing imagefield callback version implement compatible installation production footprint keyword callable django standardized attribute django dynamic garbage collection following dictionary generated separate process different contributing license asynchronous rendering variation template prevent deletion request management command validator attribute", "pypi_keywords_clean": ""}, "danjac/pyramid-storage": {"git_readme_keywords": "application official pyramid framework pyramid storage framework application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "robotframework/rellu": {"git_readme_keywords": "setting project aforementioned project version tracker ecosystem python packaging version setting custom invoke certain preview project setting common suitable development provided utility github example python required project format cleaning temporary release priority various development version manifest general certain milestone framework python importable template generic invoke", "git_description_clean": "tooling to ease creating releases", "git_keywords_clean": "", "pypi_description_keywords": "setting project aforementioned project version tracker ecosystem python packaging version setting custom invoke certain preview project setting common suitable development provided utility github example python required project format cleaning temporary release priority various development version manifest general certain milestone framework python importable template generic invoke", "pypi_keywords_clean": "releasing"}, "zetaops/zengine": {"git_readme_keywords": "support tornado asynchronous library boranalp extensible samuel powerful workflow rabbitmq documentation tornado rabbit spiffworkflow tornado zengine support contract tornado tornado django python zetaops framework zengine workflow spiffworkflow powerful ultrasharp service framework legendary attention commercial support contract zetaops license zengine", "git_description_clean": "bpmn workflow based framework with tornado rabbit amqp advanced permissions extensible scaffolding features and more", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "web"}, "/bottle-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "assortment package unrelated framework separate tracker documentation directory specific available various deployment several handful multiple repository installation outernet", "pypi_keywords_clean": "bottle utils in http lazy csrf ajax"}, "ChristopherRabotin/bungiesearch": {"git_readme_keywords": "model instantiation purpose bungiesearch offset value aeternam sophisticated elasticsearch optional concatenation python django database id string python deferred way iterable meaning folder ad vitam addition model mapping elasticsearch urls plenty support processor class query word own elasticsearch other django wrapper model manager model example order key status coverage python method elasticsearch index virtual environment elasticsearch metadata integration search signal processor elasticsearch dsl good practice bungiesearch variable lazy model integration update index shell model specific default bungiesearch py class trivial module search latter create model field python virtual complex elasticsearch bulk index bottom operation bungiesearch python class prefix processing class whichever reverse mapping django manager string value columns manager iterate optional additional indexed default custom functionality additional indexed bungiesearchmanager dev logical operation doc create subclass content index update number buffer signal processing dashboard such subpackage import django environment signal vitam aeternam indexed quick delete updated field connection timeout suffix python statement integer namespace elastic search elasticsearch connection friendly iteration define class optimal database buffered instance celery search index dsl py section full database query wanted specific number django python deferred model index foreign exclude field define variable build modelindex instance manager define only parameter previous index command sparrho platform import bungiesearch id field optimize automatic model manager function dictionary value variable defined python friendly application connect optional string mandatory cf class define field optional bungiesearch build optional dictionary define field fabulous conjunction own package sophisticated example model instance define signal special package django model build status full example define model python feature partial example mapped default index prefix defined exclude optional applicable python module efficient database row documentation version procedure appropriate mapping available only desired optional elasticsearch index management new module empty fetch bungiesearch stuff such function g python defined django simple implementation python modelindex something class attribute bungiesearch internal coverage status optional define search alias query optional custom naming following unique id information definition timeout optional elastic hq thereof environment variable constructor parameter object define searchalias updated please refer py import several elasticsearch elasticsearch dashboard", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "model instantiation purpose bungiesearch offset value aeternam sophisticated elasticsearch optional concatenation python django database id string python deferred way iterable meaning folder ad vitam addition model mapping elasticsearch urls plenty processor class query word own elasticsearch other django wrapper model manager model example order key status coverage elasticsearch hence python method elasticsearch index virtual environment elasticsearch metadata integration search signal processor elasticsearch dsl good practice bungiesearch variable lazy model integration update index shell model specific default bungiesearch py class trivial module search latter create model field python virtual complex elasticsearch bulk index bottom operation bungiesearch python class prefix processing class whichever reverse mapping django manager string value columns manager iterate optional additional indexed default custom functionality additional indexed bungiesearchmanager dev logical operation doc create subclass content index update number buffer signal processing dashboard such subpackage import django environment signal vitam aeternam indexed quick delete updated field connection timeout suffix python statement integer namespace elastic search elasticsearch connection friendly iteration define class optimal database buffered instance celery search index dsl py section full database query wanted specific number django python deferred model index foreign exclude field define variable build modelindex instance manager define only parameter previous index command sparrho platform import bungiesearch id field optimize automatic model manager function dictionary value feature variable defined python friendly application python support connect optional string mandatory cf class define field optional bungiesearch build optional dictionary define field fabulous conjunction own package sophisticated example model instance define signal special django model build status full example define model partial example mapped default index prefix defined exclude optional applicable python module efficient database row documentation version procedure appropriate mapping available only desired optional elasticsearch index management new module empty fetch bungiesearch stuff such function g python defined django simple implementation python modelindex something class attribute bungiesearch internal coverage status optional define search alias query optional custom naming following unique id information definition timeout optional elastic hq thereof environment variable constructor parameter object define searchalias updated please refer py import several elasticsearch hence elasticsearch dashboard", "pypi_keywords_clean": "elasticsearch haystack django bungiesearch"}, "/texttable-fixed": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "correct version ascii texttable formatted", "pypi_keywords_clean": ""}, "/mediatumfsm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python dependency library declarative python installation directory mediatum example installed", "pypi_keywords_clean": "state machine fsm declarative dsl"}, "Azure/azure-mgmt-servermanager": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package lropoller underlying complete service management project changelog behavior response release history extension glance library argument syntax resource manager changelog release bugfixes compatibility positional default behavior package compatibility enumeration callback polling performance general optional generator python keyword argument manager management generation session completion azureenum uninstall bundle package polling parameter apiversion preview formatting initial running operation preview initial algorithm initial release python python parameter microsoft general breaking external feedback context manager unrecognized compatibility important release apiversion", "pypi_keywords_clean": ""}, "Star2Billing/switch2bill-common": {"git_readme_keywords": "py install settion variable unique admin class action admin length unique password middleware filterpersistmiddleware character following model belaid areski month prepare useful arezqui belaid unittest areski gmail selected month django helper single applabelrenamer class summary license format convert install django generator prepare install install provide session variable admin custom helper applabelrenamer changelog summary python model intermediate python install initial developer changelog changelog password generator django admin percentage something useful license django custom action check field variable check language visible installation install intermediate model distributed class helper request template class middleware decorator celery convert prepare month return field group export", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django model py install common license settion variable unique action admin length class filterpersistmiddleware unique password character django python month prepare useful arezqui belaid unittest selected month applabelrenamer class single languagefield format convert python common generator prepare install install session variable admin custom common provide subject license copyright install switchbill model intermediate python install initial developer subset mozilla public return password generator django admin filterpersistmiddleware common repository percentage common template public license custom action switchbill common variable check language visible installation install intermediate model distributed request following helper source decorator celery convert prepare month group export", "pypi_keywords_clean": ""}, "tswicegood/dj-settings-helpers": {"git_readme_keywords": "compliance software swicegood express environment variable documentation specific language dj directory copyright environment variable relative language governing multiple presence installation following applicable version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance software swicegood express environment variable documentation specific language dj directory copyright environment variable relative language governing multiple presence installation following applicable version", "pypi_keywords_clean": ""}, "philipn/djangorestframework-chain": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation extension copyright relatedfilter recursive documentation alllookupsfilter merchantability fitness subject arbitrary chaining software express framework substantial particular connection following liability contract permission distribute sublicense information definition lookup warranty personfilter chainedfilterset restriction", "pypi_keywords_clean": ""}, "gabrielfalcao/couleur": {"git_readme_keywords": "syntax current italic underline couleur yellow argument project furthermore terminal version couleur output available normal function carriage example python software terminal installing french magenta functionallity cloning output function percentage terminal italic licensing further dynamic carriage return inverse progress", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/openstacksdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nodepool internal library compatibility service complete attempt matter openstack infra nodepool ansible narcissist cloud abstraction library abstraction interface infra project complete documentation predictable manner original vendor specific project deployer deployment configuration duplicated history section future openstack config background cloud configuration history neutron block python python openstacksdk readme openstack cloud building example resource application different openstack duplication please server security specific default python openstack current directory environment openstack clouds sdk comprehensive manner following additional business consistent different openstacksdk openstacksdk config ansible information high different argument advanced specific direct ansible openstack beneficial session python extra regularity bunch hipster", "pypi_keywords_clean": ""}, "codysoyland/surlex": {"git_readme_keywords": "language expression tutorial documentation directory available restructuredtext concise installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "language expression tutorial documentation directory available restructuredtext concise installation", "pypi_keywords_clean": ""}, "FraBle/sutime": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "stanford corenlp sutime datetime parser parsing nlp"}, "/eventlet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interpreter twisted integration install eventlet complete library development project identify implicit documentation developer similar command integration eventlet working release example eventlet environment community interest application twisted removal release eventlet scalable something dispatch libevent removal identify concurrent environment variable inconvenience external twisted eventlet", "pypi_keywords_clean": ""}, "jzempel/flask-exceptional": {"git_readme_keywords": "product support effective airbrake library exceptional exceptional airbrake python airbrake transition", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask exceptional", "pypi_keywords_clean": ""}, "zachpanz88/mlbgame": {"git_readme_keywords": "package mlbgame documentation response world series april question license quick teaser output github source documentation mlbgame final gameday python directory something release mlbgame mlbgame information tracker mlbgame python package installation mlbgame", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python question information issue directory something installing response release mlbgame mlbgame source installation mlbgame gameday", "pypi_keywords_clean": "mlb"}, "maxpowel/protocol-buffers-stream": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "config configuration yml json"}, "jvarho/pylibscrypt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package scrypt implementation interpreter random versioning different scrypt install scrypt version pypyscrypt scrypt python module scrypt python choice cpython quick available python implementation jvarho pylibscrypt libsodium python version github libsodium python equivalent python everything likely python scrypt hashlib scrypt version number scrypt libsodium release entered pylibscrypt semantic versioning environment recommended development development openssl pylibscrypt pylibsodium docker libscrypt", "pypi_keywords_clean": ""}, "eweast/bencodepy": {"git_readme_keywords": "bencoding generic scientific rigorous tracker roadmap determine handful sufficient number multiple copyright w available element installation github bencode overview independent someone python cpython necessary bencodepy python ordereddict repository encoder cythonized version dictionary optimized cythonized python library integer bencodepy consider ordereddict mapping python mapping bencode dictionary ordereddict performance hardware iterable certain bittorrent metadata bencode dictionary metadata torrent", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "TotallyNotRobots/py-irclib": {"git_readme_keywords": "python library protocol", "git_description_clean": "a python library for working with the irc protocol", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "irc irc parser"}, "/django-view-shortcuts": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package various generic useful", "pypi_keywords_clean": "django views shortcut"}, "stephrdev/django-mongoforms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/doublefork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "history functional", "pypi_keywords_clean": ""}, "/qtile": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "manager pure", "pypi_keywords_clean": "qtile tiling window manager"}, "pgallen90/flask-error": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/jupyter-console": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "terminal language", "pypi_keywords_clean": "interactive interpreter shell web"}, "applauncher-team/applauncher": {"git_readme_keywords": "default shutdown anything launch library project instance location structure bundle configuration kernel constructor bundle webbundle database module structure bundle structure example application software bundle system environment config config following kernel information example config bundle restapibundle application bundle access dependency injection", "git_description_clean": "app launcher for python", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "environment launcher kernel event base"}, "/python-vlc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "libvlc player include present install generator", "pypi_keywords_clean": "vlc video"}, "edoburu/django-any-urlfield": {"git_readme_keywords": "package selector generic default screenshot anything article valuable contribution documentation contribution suggestion block python widget installation internal django height flexible common challenge browse virtual environment inflexible improved welcome external anyurlfield", "git_description_clean": "an improved url selector to choose between internal models and external urls", "git_keywords_clean": "django django admin django field", "pypi_description_keywords": "package selector generic default screenshot anything article valuable contribution documentation contribution suggestion block python widget installation internal django height flexible common challenge browse virtual environment inflexible improved welcome external anyurlfield", "pypi_keywords_clean": ""}, "kvesteri/flask-jinjahelpers": {"git_readme_keywords": "flask various", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask various", "pypi_keywords_clean": ""}, "/sphinx-opnfv-theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bash configure install pypi configure sphinx navbar sidebarrel extention block bash block python opnfv documentation journal navbar following install python customization installation sphinx bootstrap configure", "pypi_keywords_clean": ""}, "DexterInd/grovepi": {"git_readme_keywords": "noninfringement design compatibility simple limitation arduino quick install internet awesome install grovepi scratch support popular raspberry implied project license check install scratch terminal documentation grovepi support b creative optional version compatible github subject merchantability fitness example python process standard firmware software grovepi content grovepi python substantial copyright dexter express limited revolutionary connection repository sensor hardware liability affordable particular purpose permission contract distribute sublicense extensive library grovepi integration language python library platform charge warranty program raspberry restriction modify publish distribute simple elegant following command computing", "git_description_clean": "grovepi is an open source platform for connecting grove sensors to the raspberry pi", "git_keywords_clean": "raspberry pi grove sensors grovepi grovepi board iot iot platform", "pypi_description_keywords": "information grovepi platform raspberry following command library installation example", "pypi_keywords_clean": "robot grovepi grovepi dexter industries learning education iot internet of things prototyping"}, "alexcouper/bash": {"git_readme_keywords": "installable command access python library effect motivation suitable untrusted installation install concatenation python installation useful version shortcut runner support stripped unicode", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installable command access python library effect motivation suitable untrusted installation install concatenation python installation useful version shortcut runner support stripped unicode", "pypi_keywords_clean": ""}, "/partitionsets": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package constraint labeled implementation ordsetimplpy sufficient partition simplified encyclopedia license install exponential bellnumber wikipedia vredegoor consolidated additional several sawatzky comment raymond hettinger steeply sawatzky reasonable typical further reference partofaset missing indistinguishable", "pypi_keywords_clean": ""}, "/django-mssql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "org pywin microsoft mssql django mssql database mssql readthedocs available readthedocs org database backend django database server documentation django django django mssql", "pypi_keywords_clean": ""}, "/decmath": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "deliveryhero/distconfig": {"git_readme_keywords": "zookeeper container distconfig library previous documentation backend backend development access integration rational distributed configuration installation example", "git_description_clean": "a python library to manage shared state", "git_keywords_clean": "", "pypi_description_keywords": "zookeeper container distconfig library previous documentation backend backend development access integration rational distributed configuration installation example", "pypi_keywords_clean": "configuration management zookeeper etcd consul"}, "flyinactor91/avwx-engine": {"git_readme_keywords": "package timestamp generation download repository install project documentation current develop download formatter aviation available source desired invalid version library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "telegraphic/hickle": {"git_readme_keywords": "journal storage download hickle hickle random default programming leveraged length method install excellent numpy readable pickle module rundown transparent compression telegraphic github contiguous manual install downloaded directory performance comparison development benefit support terminal command dataset resizing amalgam grateful filter manual download familiar structure installation python software python variable keyword format academic research common mrocklin something extended functionality following command refactor encoder complete example convenience dictionary hierarchical pickling documentation documentation arbitrary python welcome comparison hickle example hickle contribution method pickle replacement module official python hickle detailed explanation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "journal source software storage download hickle hickle random default programming leveraged length method install excellent numpy readable pickle module rundown transparent compression telegraphic github contiguous manual install downloaded directory performance comparison development benefit support terminal command dataset resizing amalgam grateful filter manual download familiar structure installation python python variable keyword format academic research common mrocklin something extended functionality following command refactor encoder complete example convenience dictionary hierarchical pickling documentation documentation arbitrary python welcome comparison hickle example hickle contribution method pickle replacement module official python hickle detailed explanation", "pypi_keywords_clean": "pickle hdf data storage data export"}, "nicolaschotard/extinctions": {"git_readme_keywords": "select exclude upgrade message release version numpy healpy useful donnell install release version available matplotlib seaborn exclude optional output directory different distant select select exclude exclude install different extinction prefix mypath update update modification outdir outdir future release pyyaml astropy version install upgrade health install prefix directory seaborn pyyaml outdir update outdir output mapsdir environment inclusion marker python dependencies following transmission diretory cardelli clayton script different extincion environment variable upgrade prefix healpy format mathis travis compute pythonpath python package schlafly planck goobar installation outdir dependencies fitzpatrick documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "select exclude upgrade message release version numpy healpy useful donnell install release version available matplotlib seaborn exclude optional output directory different distant select select exclude exclude install different extinction prefix mypath update update modification outdir outdir future release pyyaml astropy version install upgrade health install prefix directory seaborn pyyaml outdir update outdir output mapsdir environment inclusion marker python dependencies following transmission diretory cardelli clayton script different extincion environment variable upgrade prefix healpy format mathis travis compute pythonpath python package schlafly planck goobar installation outdir dependencies fitzpatrick documentation status", "pypi_keywords_clean": ""}, "GeorgeArgyros/symautomata": {"git_readme_keywords": "implementation lightbulb framework automata project codamoda flexfst analysis codamoda license support computer keromytis aggelos research automata learning sfadiff privacy framework security differential automata framework changelog conference symposium pywrapfst optional", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation lightbulb framework automata project codamoda flexfst analysis codamoda license support computer keromytis aggelos research automata learning sfadiff privacy framework security differential automata framework changelog conference symposium pywrapfst optional", "pypi_keywords_clean": ""}, "nk113/tastypie-rpc-proxy": {"git_readme_keywords": "next easy manner value effect don proxy layer api don useful final url url prefix queryset style accessible environment proxyclient class tastypie django api foreign default base proxy doesn tastypie rpc tastypie queryset g non remote api take look urls separate boring redundant key scheme album option various write business resource name model access alt dependency namespace remote remote tastypie default remote item model field type same stuff client side write clean central operating library doesn child relationship cache backend model model package target modelresource filename business logic design base prefix proxy image represent common example application api endpoint default username album track type etc business same module key field client rpc api terminology g resource pip installation code unit dependency status relationship define author class api django application prefix url target image tastypie client compatible usual base url github tastypie client proxyclient api authentication same application superuser username rpc proxy parent abstract class primary key default password model class g api application code localization import authentication useful remote optional combination auth tuple convenient internal system api schema image alt module proxy class optional today common situation see code proxy api g modelresource class foreign key proxy see database accesible api client item resource non default username application context similar boolean optional alt coverage queryset interface queryset client superuser password actual database clean code local auth g github status target style business g version client tastypie tasypie version section api resource quick start default write key object password crud rest resource endpoint g superuser access remote redundant stuff alt build tastypie api default model default id write api url application quick api context access central database sort doesn contain section proxy meta abstract boolean queryset api other word etension django model concept standard crud list optional default client same name custom primary available note build status implementation define model section g remote resource database accessible many meta class alt pypi track metadata start application detailed api rpc contain example fixture import default versioning proxy definition installation pip api version pypi package version api system user optional model right take everything model context optional base code boring detail separate metadata class proxyclient proxy class api namespace default namespace coverage status object operation good accesible environment local model url local common music custom field code proxy code proxy dictionary url g g note unreadable code model queryset unit simple tastypie", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "next easy manner value effect don proxy layer api don useful final url url prefix queryset style accessible environment proxyclient class tastypie django api foreign default base proxy doesn tastypie rpc tastypie queryset g non remote api take look urls separate boring redundant key scheme album option various write business resource name model access alt dependency namespace remote remote tastypie default remote item model field type same stuff client side write clean central operating library doesn child relationship cache backend model model package target modelresource filename business logic design base prefix proxy image represent common example application api endpoint default username album track type etc business same module key field client rpc api terminology g resource pip installation code unit dependency status relationship define author class api django application prefix url target image tastypie client compatible usual base url github tastypie client proxyclient api authentication same application superuser username rpc proxy parent abstract class primary key default password model class g api application code localization import authentication useful remote optional combination auth tuple convenient internal system api schema image alt module proxy class optional today common situation see code proxy api g modelresource class foreign key proxy see database accesible api client item resource non default username application context similar boolean optional alt coverage queryset interface queryset client superuser password actual database clean code local auth g github status target style business g version client tastypie tasypie version section api resource quick start default write key object password crud rest resource endpoint g superuser access remote redundant stuff alt build tastypie api default model default id write api url application quick api context access central database sort doesn contain section proxy meta abstract boolean queryset api other word etension django model concept standard crud list optional default client same name custom primary available note build status implementation define model section g remote resource database accessible many meta class alt pypi track metadata start application detailed api rpc contain example fixture import default versioning proxy definition installation pip api version pypi package version api system user optional model right take everything model context optional base code boring detail separate metadata class proxyclient proxy class api namespace default namespace coverage status object operation good accesible environment local model url local common music custom field code proxy code proxy dictionary url g g note unreadable code model queryset unit simple tastypie", "pypi_keywords_clean": ""}, "PabloCastellano/pyguifiapi": {"git_readme_keywords": "python interface license hackaleda marinaleda summer available install pyguifiapi studio project archive pyguifiapi pyguifiapi castellano", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python interface license hackaleda marinaleda summer available install pyguifiapi studio project archive pyguifiapi pyguifiapi castellano", "pypi_keywords_clean": "free networks guifi net api"}, "slarse/pdfebc-core": {"git_readme_keywords": "package robust pdfebc basic compression build status current install option lecture comprehensive useful execute account password development similar study gmail account default binary actual account password option stuff configuration available commit history outside version practice project usual coverage license sample sample configuration machine dependent python little project please proper documentation server software functionality system option install configuration config import release continuous integration exercise following correct directory example kindle friendly different weirdness uploaded output purpose interface password license python interpreter incompatible amount release version program business business logic documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package robust pdfebc basic compression build status current install option lecture comprehensive useful execute account password development similar study gmail account default binary actual account password option stuff configuration available commit history outside version practice project usual coverage license sample sample configuration machine dependent python little project please proper documentation server software functionality system option install configuration config import release continuous integration exercise following correct directory example kindle friendly different weirdness uploaded output purpose interface password license python interpreter incompatible amount release version program business business logic documentation status", "pypi_keywords_clean": ""}, "codeinthehole/unittest-xml": {"git_readme_keywords": "unittest element installation install assertion additional particular element attribute library unittest library following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unittest element installation install assertion additional particular element attribute library unittest library following", "pypi_keywords_clean": "xml testing"}, "toastdriven/restless": {"git_readme_keywords": "licence cpython cpython default package available complete pyramid tornado multiple serialization flexible overridable flexible restful documentation command simultaneous support extensive filtering example overridable restful everything flexible restless miniframework extensibility something tastypie perceived tastypie tornado various integration authorization codebase ability correct building tastypie override behavior automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence cpython cpython default package available complete pyramid tornado multiple serialization flexible overridable flexible restful documentation command simultaneous support extensive filtering example overridable restful everything flexible restless miniframework extensibility something tastypie perceived tastypie tornado various integration authorization codebase ability correct building tastypie override behavior automatic", "pypi_keywords_clean": ""}, "montag451/python-pytun": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python developpement license keyword persistent present distribution check address wrapper custom library documentation license installation python standard system g standard library python module compiler g linux", "pypi_keywords_clean": ""}, "Pitmairen/hamlish-jinja": {"git_readme_keywords": "indentation value preprocessor python hamlish block html tags tags method hamlish tags code new line separate env hamlish html inline version meta input mode list run usage hamlish file multiple nested preprocessor code output variable option haml code output code python configuration used example tag code filtered block html hamlish hamlish preprocessor indent level hamlish mode haml reference input code html tags hamlish tag version code file filter performance haml endhaml usage install version single same configuration ish syntax html multiple order code beginning html example description whitespace hamlishextension tags jinja closing tags start used synax section space hamlish hamlish enable final template inline content first time html line example code python environment jinja overview block haml haml jinja similar block python shortcut dictionary html extended normal syntax haml syntax br img single line long new method haml example same configuration section content code haml ish enable div reference code filter function environment code first run basic usage nested tags example template standard env special matching filter jinja tags div shortcut filter block template code many use haml extension possible extended output code block same line callable normal html hamlish jinja hr meta default configuration template output tag extension html self template html html html jinja self closing html nested jinja environment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information possible extension", "pypi_keywords_clean": "jinja templates haml"}, "tek/amino": {"git_readme_keywords": "suitable intrusive descriptor typeclass registry serialization abstraction extended interface computation abstraction standard instance function decorator functional representation optional familiar generator equivalent statement framework different implementation composability anonymous functionality alternative arbitrary metaclass corresponding performance critical coproduct algebra parameter placeholder convenient purpose considerable overhead", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "KelSolaar/oncilla": {"git_readme_keywords": "python pyqt mansencal copyright project directory sphinx documentation project manual docs help py export result pyclbr building helper source repository python module project excluded docs sphinx toctree introduction project documentation command alternative command sibl gui shell command pyqt tidy module oncilla gui export optional css structure help project installation order manual manual example g myslicetag oncilla image python documentation oncilla excluded python example export manual css sanitizer py introduction installation copyright thomas software gnu gpl gpl license development sibl css stylesheet following environment various source manual thomas mansencal standard sphinx ready introduction following good reference project sanitizer sphinx standard migrate x directory docs manual restructuredtext oncilla documentation helper package repository usage documentation building shell export oncilla manager umbra image image umbra sibl optional excluded specific introduction oncilla oncilla project makefile optional sphinx", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python pyqt mansencal copyright project directory sphinx documentation project manual docs help py export result pyclbr building helper source repository python module project excluded docs sphinx toctree introduction project documentation command alternative command sibl gui shell command pyqt tidy module oncilla gui export optional css structure help project installation order manual manual example g myslicetag oncilla image python documentation oncilla excluded python example export image introduction manual css sanitizer py introduction installation software copyright thomas gnu gpl gpl license development sibl css stylesheet following environment various source manual thomas mansencal standard sphinx following good reference project sanitizer sphinx standard migrate x directory docs manual restructuredtext oncilla documentation helper package repository usage documentation building shell export oncilla manager umbra image image umbra sibl optional excluded specific introduction oncilla oncilla project makefile optional sphinx", "pypi_keywords_clean": ""}, "Ceasar/memoizer": {"git_readme_keywords": "strategy memoizer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "memoize"}, "balloob/pychromecast": {"git_readme_keywords": "message default current result receiver google chromecast wildcard communicate casting chromecast support actual possible linux support favorite checkbox current chromecast socket connection browser google network controller example capable erroneous filter pychromecast balloob solution favorite application detection python unsupported python support pychromecast running protobuf status ground browse implement google minimal controller dropdown following pychromecast append chromecast object chromecast instance extendable namespace browser control playback protocol behavior google plugin status library enabled device basecontroller mediacontroller following property", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message default current result receiver google chromecast wildcard communicate casting chromecast support actual possible linux support favorite checkbox current chromecast socket connection browser google network controller example capable erroneous filter pychromecast balloob solution favorite application detection python unsupported python support pychromecast running protobuf status ground browse implement google minimal controller dropdown following pychromecast append chromecast object chromecast instance extendable namespace browser control playback protocol behavior google plugin status library enabled device basecontroller mediacontroller following property", "pypi_keywords_clean": ""}, "mbraak/django-docopt-command": {"git_readme_keywords": "interface description handle docopt docopt example library command testproject docopt github repository apache license docopt library django docopt install django custom management version github custom django python django custom web framework inherit license django command django django example docopt command docopt license py description language command github management command docoptcommand", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interface description handle docopt docopt example library command testproject docopt github repository apache license docopt library django docopt install django custom management version github custom django python django custom web framework inherit license django command django django example docopt command docopt license py description language command github management command docoptcommand", "pypi_keywords_clean": ""}, "davitv/chance": {"git_readme_keywords": "random generator domain return vowel first guide installation useful language option random integer interval period parameter local folder other russian random sentence handle country first chance random character function domain chance character return random uk random domain color available exact depth symbol string random twitter default output something length prefix random street localisation defahult length dump twitter handle parameter street random word example number twitter random english function consonant language color return grayscale option uppercase chance sentence street return random string datetime object paragraph likelihood country random usage basic similar victor quinn first word awesome random passing production random element first parameter syllable dictionary optional language language parameter minyear parameter minimum minimal random syllable maximum character integer pickone possible first function level domain chance js short optional optional return color python function first something month vowel short suffix basic boolean js implementation chance first added dictionary rgb", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "random generator chancejs"}, "sloria/environs": {"git_readme_keywords": "default optional keyword simple define custom behavior separate library validation serialization recurse development validation environ typical application useful parsing environment credit install library license configuration separate additional methodology django install proxied github public django framework agnostic envparse number specify keyword argument validation functionality parsing behavior parsing connection common envparse license django environ current directory custom behavior framework library marshmallow complete example following django support default configuration flaskenv python library integer environment variable enough deserialization specific correct section twelve django example define default redundant variable parsing validation define", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default optional keyword simple define custom behavior separate library validation serialization recurse development validation environ typical application useful parsing environment credit install library license configuration separate additional methodology django install proxied github public django framework agnostic envparse number specify keyword argument validation functionality parsing behavior parsing connection common envparse license django environ current directory custom behavior framework library marshmallow complete example following django support default configuration flaskenv python library integer environment variable enough deserialization specific correct section twelve django example define default redundant variable parsing validation define", "pypi_keywords_clean": "environment variables parsing config configuration factor envvars"}, "mozman/dxfgrabber": {"git_readme_keywords": "information installation documentation dxfgrabber library abstract", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "prior dxf cpython cpython bulge version vertex bulge planesurface entity smooth density changed lwpolyline version skip attrib attdef attribute frozen installation requirement version bugfix vertex subclass standard truecolor class undocumented vertex bugfix wrong version python transparency ac dxf subclass format y added const incorrect polyface change layername added dxf standard option surface entity region entity dxf default light entity polyline bugfix bug upside bigfont bugfix polyline explicit howto section ac transparency class layer body dsolid vc version method import option skip comment error version internal dxf version layer index added resolve extrusion error helix entity polyline width option resolve mesh entity wrong dxf mozman gmx ignore width polyface entity extrusion direction ac dxf bugfix unicode table version docs abstract requirement control documentation source index operator speed utf subclass acdbfacerecord standard version python bugfix body entity const width content version initial cpython pypy status param version header variable section version dxf horizontal width polyline polyline issue work maintenance index index docs version density smooth dsolid entity added smooth cpython version added attribute field section added universal added howto mozman mozman dxfversion rstrip version dxfgrabber color value installation documentation added support paperspace assure readfile github news version extra layer initial setup variable dxfgrabber lwpolyline width oblique attdef mtext width horizontal lwpolyline width color ac bugfix accept abstract python added extrusion minimalistic dxf consistent docs added python library variable acadver change polyline dxfgrabber cython accept bugfix support added modelspace style table cython split false d mtext default thickness extension version ac bugfix startparam vertical height float undocumented planesurface ac shadow color index width attribute python version mingw internal refactoring width bulge cython extension ltype table codepage mtext plain polyline method information qgis autocad change lwpolyline single string count acdbvertex table added autocad color dxfgrabber environment variable newline problem dxf implementation added plain status version plain", "pypi_keywords_clean": "dxf"}, "GNS3/gns3-netifaces": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement netmask person confusion multiple unlikely addition separate install claim version interested addrs someone mapping address houghton permission fw connection distribute sublicense obvious manner solaris firewire address address family operating restriction modify address method source linux default system dependent limitation original module python setup copyright ethernet adapter anyone expected license interface addrs gz upstream software number confused operating system request liable impossible manner m hmmmm bitbucket level jump dictionary mapping particular address implied interface g instance default gateway machine network hardware address routing merchantability fitness subject portable manner regular please g ethernet common loopback interface liability contract dictionary interesting interface particular interface warranty following import problem action particular purpose special package numeric build status complete gritty changelog netmask ffff result anything reason difficulty ffff ffff possible documentation xvzf available broadcast address getifaddrs python normal internet limited express substantial version number something index fw addrs convenience cryptic information different broadcast netmask platform charge publish distribute interface", "pypi_keywords_clean": ""}, "simple-salesforce/simple-salesforce": {"git_readme_keywords": "password password custom apex com apex query result status simple access bulk apex api apache license search language open source library json response class organization id optional version other required reference standard proxy url simple salesforce session instance order session session whitelist organization authentication format salesforce import session id domain necessary sosl syntax full url documentation developer dave wingate track level interface list few helper return dictionary token optional salesforce endpoint layout unique scheme search update delete organizationid orgid due basic metadata update upsert api documentation external id careful metadata user dictionary such ip whitelist language documentation security token optional domain past salesforce http license username user password organizationid python query additional session record token authentication salesforce username license simple example account opportunity schema catalano community salesforce object query language description instance optional delete low level local method travis ci salesforce api ordereddict salesforce query basic salesforce language sosl second argument orgid session result such upsert user example level description oauth request official salesforce token method id method repo travis endpoint specialized session sosl soql salesforce com example com sandbox account python update api client body content lead make default version search return record management salesforcelogin client id python sosl force com id hostname block python john large result sobject type resource optional sf import salesforce source apache salesforce method request process http status organizationid com password result salesforce dictionary hard deletion github repo authentication id language soql proxy argument object query access ip encouraged authentication salesforce instance access token package smith select sandbox website other build status python search bulk api call custom specific sobject username password possible bulk python delete instance metadata upsert record pull api json available first soft deletion tuple authentication step final domain python new contact mit license quick search developer website single local python hard convenience goal unique id information nick catalano map python upsert utc top level custom field password security object object search record layout call method call proxy server entry sf salesforce pass documentation status", "git_description_clean": "a very simple salesforce com rest api client for python", "git_keywords_clean": "salesforce api api client python", "pypi_description_keywords": "password password custom apex com apex query result status simple access bulk apex api apache license search language open source library json response class organization id optional version other required reference standard proxy url simple salesforce session instance order session session whitelist organization authentication format salesforce import session id domain necessary sosl syntax full url documentation developer dave wingate track level interface list few helper return dictionary token optional salesforce endpoint layout unique scheme search update delete organizationid orgid due basic metadata update upsert api documentation external id careful metadata user dictionary such ip whitelist language documentation security token optional domain past salesforce http license username user password organizationid python query additional session record token authentication salesforce username license simple example account opportunity schema catalano community salesforce object query language description instance optional delete low level local method travis ci salesforce api ordereddict salesforce query basic salesforce language sosl second argument orgid session result such upsert user example level description oauth request official salesforce token method id method repo travis endpoint specialized session sosl soql salesforce com example com sandbox account python update api client body content lead make default version search return record management salesforcelogin client id python sosl force com id hostname block python john large result sobject type resource optional sf import salesforce source apache salesforce method request process http status organizationid com password result salesforce dictionary hard deletion github repo authentication id language soql proxy argument object query access ip encouraged authentication salesforce instance access token package smith select sandbox website other build status python search bulk api call custom specific sobject username password possible bulk python delete instance metadata upsert record pull api json available first soft deletion tuple authentication step final domain python new contact mit license quick search developer website single local python hard convenience goal unique id information nick catalano map python upsert utc top level custom field password security object object search record layout call method call proxy server entry sf salesforce pass documentation status", "pypi_keywords_clean": "python salesforce salesforce com"}, "Ezhil-Language-Foundation/ezhuthi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "education language", "pypi_keywords_clean": ""}, "matthewwithanm/django-imagekit": {"git_readme_keywords": "management exact way pillow useful multiple example above new custom library block html generator id addition own processedimagefield processing imagekit imagekit separate generateimage processed image thumbnail tag registered admin imagekit other notice few image object class doesn adminthumbnail django imagekit order thumbnail template process only way add additional functionality form field official channel usage overview above image form class status image avatar image list user input avatar thumbnail above example pilkit admin quality user uploaded jpeg previous example processedimagefield status imagekit imagespecfield above method model field imagekit thumbnail html thumbnail default color syntax django orm additional html type task generator class id imagekit complete documentation project argument status build source keyword image processing generateimage tag own drop imagespecfield difference pitching compatible installation uploaded image resized image important new image expert keyword argument processor additional keyword resized version django admin model class image build community please add namespace registered image surprising tag above power bunch generator registered field above management command profile model white version possible check image generator friendly fork keyword style many common following html id benefit instance common image freenode intimidating template tag custom processor block python assignment tag regular django app normal django property common thumbnail black original image access section problem module python adminthumbnail replacement usage standalone pull request source image build status result anything second many stable version logic such common cache custom template image field field version positional normal image output generic template capable available such turn generator additional fancy new overview specs something pretty similar profile information context variable convenient way object html image template upload registered generator image imagekit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management exact way pillow useful multiple example above new custom library block html generator id addition own processedimagefield processing imagekit imagekit separate generateimage processed image thumbnail tag registered admin imagekit other notice few image object class doesn adminthumbnail django imagekit order thumbnail template process only way add additional functionality form field official channel usage overview above image form class status image avatar image list user input avatar thumbnail above example pilkit admin quality user uploaded jpeg previous example processedimagefield status imagekit imagespecfield above method model field imagekit thumbnail html thumbnail default color syntax django orm additional html type task generator class id imagekit complete documentation project argument status build source keyword image processing generateimage tag own drop imagespecfield difference pitching compatible installation uploaded image resized image important new image expert keyword argument processor additional keyword resized version django admin model class image build community please add namespace registered image surprising tag above power bunch generator registered field above management command profile model white version possible check image generator friendly fork keyword style many common following html id benefit instance common image freenode intimidating template tag custom processor block python assignment tag regular django app normal django property common thumbnail black original image access section problem module python adminthumbnail replacement usage standalone pull request source image build status result anything second many stable version logic such common cache custom template image field field version positional normal image output generic template capable available such turn generator additional fancy new overview specs something pretty similar profile information context variable convenient way object html image template upload registered generator image imagekit", "pypi_keywords_clean": ""}, "ella/django-appdata": {"git_readme_keywords": "standardised approach defined additional community registry container subclass serialization reusable project appropriate container registration dropped pluggable validation present similar factory function version everything duplication framework flexible keyword something attribute compatibility dropped extandable installed definition dropped support extendable approach motivation namespace platform interface upgrading incompatible", "git_description_clean": "extendable field for use in django models", "git_keywords_clean": "", "pypi_description_keywords": "standardised approach defined additional community registry container subclass serialization reusable project appropriate container registration dropped pluggable validation present similar factory function version everything duplication framework flexible keyword something attribute compatibility dropped extandable installed definition dropped support extendable approach motivation namespace platform interface upgrading incompatible", "pypi_keywords_clean": ""}, "Metatab/metatab": {"git_readme_keywords": "package specific version normal development complete single excel metatab source source directory master branch python module container metatab existent container shell executable command javascript version github research development environment excellent format technical excel metatab health docker container click virtual directory running repository virtual environment button manipulate tabular format other program information metatab visit docker remote alternate version block storing makefile", "git_description_clean": "python language parser for tabular format for structured metadata http metatab org", "git_keywords_clean": "", "pypi_description_keywords": "package specific version normal development complete single excel metatab source source directory master branch python module container metatab existent container shell executable command javascript version github research development environment excellent format technical excel metatab health docker container click virtual directory running repository virtual environment button manipulate tabular format other program information metatab visit docker remote alternate version block storing makefile", "pypi_keywords_clean": ""}, "jbkahn/flake8-print": {"git_readme_keywords": "python statement python support plugin check checker installation upgrade default added python install support support conflict available multiline release zoidbergwill module install upgrade refactor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python statement python support plugin check checker installation upgrade default added python install support support conflict available multiline release zoidbergwill module install upgrade refactor", "pypi_keywords_clean": "flake print"}, "/yandex-translater": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ui ru install yandex gmail com yandex translate example spanish ru tr open source yandex translater tr translater portuguese information please destination language new object text string array context key ui fr lang website yandex string detect tr turkish array reference install pip interface language scalar context method version description vim filetype please visit tr object supported translation translate string translater yandex block pycon source language axlrose gmail text code translation yandex lang code license text language ru russian free software key yandex english likely code repository com copyleft detect lang print tr axl version python author constructor code tr detect machine translation example code pip install example french lang ru tr translate import translater block python translater synopsis translate code feature ui code key string language array email translater import user interface version version python tr python print lang zh simple example contribution source code translate text module text text visit yandex object optional source software axl axlrose key code hint code default user translated text language system language string translate service available code block synopsis translate langs example arabic public review perl information yandex support count pycon tr yandex key constructor tr translater tr default ui", "pypi_keywords_clean": "yandex translater translater yandex translate"}, "/checkbox-ng": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install checkbox checkbox repository documentation update laptops useful hardware ubuntu installation", "pypi_keywords_clean": ""}, "SiLab-Bonn/pylandau": {"git_readme_keywords": "landau definition package pylandau landau download mathlibs installation implementation pylandau computer directory choise convolution energy matter landau pylandau langau pylandau pylandau langau install pylandau arange landau usefull", "git_description_clean": "simple landau distribution definitions to be used in python", "git_keywords_clean": "landau langau pdf", "pypi_description_keywords": "propability interface available convolution function", "pypi_keywords_clean": "landau langau pdf"}, "/mwlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "negligence detailed documentation substitute distribution merchantability documentation modification fitness business interruption procurement copyright pediapress redistribution software express wikipedia overview special exemplary following liability contract permission consequential different following disclaimer mediawiki indirect incidental specific particular purpose incidental special possibility", "pypi_keywords_clean": ""}, "/python-zunclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "launchpad project management command zunclient documentation launchpad library version repository installation openstack container", "pypi_keywords_clean": ""}, "petrilli/pyramid-transactional-celery": {"git_readme_keywords": "transaction package software license documentation process previous protocol unknown pyramid application pyramidcelery different decorator anything transactional pyramid transaction documentation transaction priority difference component library function development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "transaction package pyramidcelery initial functionality anything pyramid transaction celerydatamanager library development testing previous history documentation transaction difference different decorator creation software process unknown priority pyramid application function protocol transactional component previous approach", "pypi_keywords_clean": "pyramid transactional celery"}, "/astm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software communication specification ability implementation protocol improved standard standard asynclib various hardware", "pypi_keywords_clean": ""}, "/threddsclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "append catalog download anaconda package sphinx bumpversion python travis catalog following development install block create environment flake sphinx bumpversion documentation build install ipython notebook unimelb catalog generation threddsclient package install pytest flake python setup github check collectiondataset added pytest dependency anaconda version license carsten ehbrecht support thredds tutorial other bump added pytest available recusion python development install pytest travis build readme catalog installation everything ehbrecht ehbrecht catalog opendap method added notebook travis thredds client install additional thredds catalog added append setup py opendap birdy github dependency version github update catalog download ehbrecht dkrz added ipython dataset download added catalog ipython example python navigate direct generation added following command client anaconda", "pypi_keywords_clean": ""}, "glumpy/glumpy": {"git_readme_keywords": "benjamin peterson management repository pyopengl scalable website gallery freetype external interface tracker website scientific visualization documentation chatroom gallery documentation triangle library beautiful installation", "git_description_clean": "python numpy opengl fast scalable and beautiful scientific visualization", "git_keywords_clean": "python numpy opengl engine rendering game visualization science", "pypi_description_keywords": "intuitive interface scientific visualization beautiful", "pypi_keywords_clean": "opengl"}, "gocd-contrib/gomatic": {"git_readme_keywords": "script something chance gomatic package mechanism result option available useful restful autoenv execute possible reverse engineering structure project g effect gomatic complain choice python virtualenv documentation configuration option deploy integration change difference project structure example equivalent python limited everything python sdk server please functionality update document directory necessary custom command environment virtual environment local delete tagged project sdk following script different config behaviour current version pipeline something request current config gomatic intellij reverse engineer below", "git_description_clean": "a python api for configuring gocd", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "slowkow/pytabix": {"git_readme_keywords": "synopsis please contribute bottom pytabix bgzip contribute bug python module install pysam python klib python pythonic available indexed compress manipulating python please python install chromosome alternative lightweight wrapper c extension python htslib repository local random access interface htslib compressed pythonic wrapper python bgzip module reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "position python chromosome python example genomic region installation synopsis available bgzip compressed c extension index module query sequence random access", "pypi_keywords_clean": "tabix bgzip bioinformatics genomics"}, "kevinsteves/pan-python": {"git_readme_keywords": "python single generation documentation command program install interface external available panorama restructuredtext several python package source distribution pypi python github autofocus wildfire", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python single generation documentation command program install interface external available panorama restructuredtext several python package source distribution pypi python github autofocus wildfire", "pypi_keywords_clean": ""}, "jotes/django-cookies-samesite": {"git_readme_keywords": "package cookiecutter samesite lax quickstart install django g legacy django quickstart support install django block python lax strict django samesite attribute session functionality preferred samesite samesite django python session custom repository middleware cookiecutter cookiecutter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package cookiecutter cookiecutter history quickstart install django g legacy django quickstart support install django strict block python django samesite attribute session functionality preferred samesite samesite django python session custom release repository middleware cookiecutter cookiecutter", "pypi_keywords_clean": "django cookies samesite"}, "jalanb/dotsite": {"git_readme_keywords": "package pysyte python package build dependency status python status coverage dependency build status coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package package build dependency status python status coverage dependency build status coverage dotsite python", "pypi_keywords_clean": ""}, "cyberdelia/astrolabe": {"git_readme_keywords": "acknowledgement library performance installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "acknowledgement library performance installation", "pypi_keywords_clean": ""}, "/csvkit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation repository tabular support license command germuska coverage bycoffe important original", "pypi_keywords_clean": ""}, "josuebrunel/myql": {"git_readme_keywords": "myql myql source filter valuen insert default query query language documentation myvar support library python community dummy prettyfier installation substitution variable reason invalid useful library argument import historical fix limit pypy pypy pypy support yahoo developer format xml response format limit tablename simple select language console stockretriver fix definition empty change application platform yahoo social important python support support yahoo python yahoo response prettyfier gurchet update default access installation quick query language return network yahoo yql query description release module platform yahoo insert update stockscraper yql field field yahoo query delete finance namespace signature opentable authentication fetch default response fly fix python wrapper yahoo application remote work condition update delete fix handling access camelcase underscore support clause fix stockparser method insert clause simple yql language yahoo xml multiple query select developer network", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default json library python prettyfier installation substitution variable useful fix limit argument import pypy pypy health pypi format xml stockretriver fix definition yahoo social shell quick format issue support yahoo insert update field field pypi coverage opentable fly fix python wrapper yahoo application oauth library update delete method clause xml multiple valuen insert default language documentation myvar support pypi myql response format simple select tablename application platform oauth signature select doesn important utils default query language status documentation invalid oauth yql query description yahoo query json remote work issue fix handling camelcase yahoo oauth first argument language yahoo source filter query query community dummy developer network python update pypy support yahoo developer query oauth python support python yahoo release default response authentication fetch support ok python insert historical info condition access underscore support clause fix ok insert module simple yql python select build status reason python delete status pypi json change limit oauth myql token language console empty doesn return pypi pypi response prettyfier gurchet default access input network yahoo coverage status platform yahoo oauth stockscraper stockscraper yql finance namespace xml json ok pypy documentation status", "pypi_keywords_clean": "myql yql yahoo query language"}, "mitsuhiko/platter": {"git_readme_keywords": "feedback wrapper progress library utility virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/angrop": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "istresearch/scutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package agnostic concurrent process zookeeper unique default scrapy cluster useful multiple official scrapy overridden collection argparse documentation dictionary object command bitmap version structure installation virtualenv machine application number zookeeper session execution timeout priority factory various output standardized decorator cluster project cluster documentation", "pypi_keywords_clean": "scrapy scrapy cluster utilities"}, "Javafant/diaspy": {"git_readme_keywords": "python diaspora unofficial version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ailabs/django-auth-remember": {"git_readme_keywords": "python cookie information expire fresh attribute remember remember authentication authentication backend session remember cookie cookie domain optional authentication handler authenticationmiddleware following remember middleware django", "git_description_clean": "django remember me functionality using separate token", "git_keywords_clean": "", "pypi_description_keywords": "cookie information expire fresh attribute authentication backend remember remember authentication session remember cookie cookie domain optional authentication handler authenticationmiddleware following remember middleware django", "pypi_keywords_clean": ""}, "/junit2html": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "html report genearate", "pypi_keywords_clean": ""}, "ojii/django-multilingual-ng": {"git_readme_keywords": "project multilingual", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mingyiz/cam": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "leverage archive utility application reference", "pypi_keywords_clean": ""}, "/mdx-smartypants": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mapping unicode community convention official support markdown incorrect munging automatic support historical module center unicode bb version programmer language g sbquo czech punctuation middleman class functionality report alternative quotation lasquo french japanese withdrawn lsquo unicode specific python program sbquo unicode german ldquo rasquo unicode pretty typographic rewrite starting double operation minded unicode underlying language modern python oriented distribution author usefully additional default unicode derivative directionality d installation normal example english virtue heuristic language double quotation variable quotation directionality modern unicode upgrade python compatibility guess partial awesome direction happy declaration boolean parameter unicode d improperly ldquo unicode arrange quotation release factory french rasquo direction setting language guesser bdquo german hebrew persian official glyph upgrade automated obsolete single starting swiss numeric traditional chinese mechanism behavior second arabic hebrew experience equivalent module output available markup optional boolean python version everything savvy czech lsquo pypy version official previous explicit something typographic prettification lasquo unicode support python experimental configurable explicit direction typographic punctuation starting single different bdquo unicode welcome discussion pretty starting quotation language direction", "pypi_keywords_clean": "markdown smartypants extension curly quotes typographic"}, "/dep3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-testscenarios": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django testing scenarios"}, "sesh/piprot": {"git_readme_keywords": "package freshness installation outdated directory something similar whimsy passing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "limited project directory something similar freshness execute installation passing", "pypi_keywords_clean": ""}, "release-engineering/kobo": {"git_readme_keywords": "taskmanager configuration effect field result development cookietransport jsonfield container install kobo unstarted command future kobo version keyword fqdn change necessary fixed worker change worker method member db field fixed spurious default action change pyconfigparser logger xml argument improved django stateenum db stdout logger argument action database taskbase constructor kobo bug compatible virtualenv django plugincontainer inheritance changelog kobo watcher coverage kobo result content attribute compatibility improved authentication limitedremoreusermiddleware xml supported python script worker mandatory argument plugin kobo client conversion action extralistview taskmanager action kerberos support generic function django backend python compatibility pkgset simplerpmwrapper postgresql kobo hub environ kobo collection python fixed container attribute action config username kobo django worker configuration interrupted system coverage machine implementation instance daniel normalize implementation stateenum property taskmanager constructor worker fqdn script configuration fixed release editable krbv authentication helper function pkgset filewrapper config kobo pkgset checksum result field spurious whitespace django compatibility django fixed resubmit resubmit successful worker timeout interrupted fixed actual thorough validation varchar sqlite migration available memory weight mandatory relative fqdn improved python version attribute action python example install limited reporting version remoteusermiddleware container instance worker stdout custom constructor watch kobo worker clientcommandcontainer hubproxy configuration improved installed extradetailview reliability matrix client template improved python django package field traceback", "git_description_clean": "a pile of python modules used by red hat release engineering to build their tools", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "AshleySetter/frange": {"git_readme_keywords": "package function example numpy function python similar seperated generator class", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pmclanahan/django-celery-email": {"git_readme_keywords": "joshua message default backend actual sending setting complete document celery rework release universal string sending celery install supported transit project normal installation backward compatability contribution backend django builtin chunksize string compatibility support sending memory change support travis readability embedded version backend connection exception equivalent python python support canassa support number reflection success status failure cleanup django support update result backend sending backend universal wheel signal rework travis toemail kwargs following delivery readme support efficiency matthew jacobi zimmer wheel matthew matrix brown todict gnarvaja chunk delivery changelog installation procedure install sending backward compatibility support setting django celery everyone setting celery contentsubtype", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "joshua message default backend actual sending setting complete document celery rework queue release universal string sending celery install transit project normal installation backward compatability contribution backend django builtin chunksize string compatibility support sending change pypi release embedded support travis version backend connection exception equivalent python support canassa support number reflection success status failure cleanup sending backend result backend universal wheel signal rework travis kwargs following delivery readme support matthew jacobi django support zimmer wheel matthew matrix gnarvaja chunk delivery changelog installation procedure install sending backward compatibility support setting py string django celery everyone setting celery contentsubtype", "pypi_keywords_clean": ""}, "urbaniak/gaiohttp-websocket": {"git_readme_keywords": "installation environment gaiohttp websocket compatible application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "asyncio gunicorn", "pypi_keywords_clean": ""}, "rackerlabs/cdeploy": {"git_readme_keywords": "migration description convention argument subdirectory default development configuration additional configuration directory additional dbdeploy installation available keyspace environment cassandra schema installation command variable library multiple semicolon", "git_description_clean": "simple python program for managing cassandra schema migrations", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "cassandra migrations"}, "scttcper/hangrypy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "hangry recipe parser isodate"}, "audreyr/binaryornot": {"git_readme_keywords": "implementation documentation status article ubuntu analysis software eliben bendersky eliben server edition binary various binaryornot license documentation portion complex platform writeup textiness heuristic similar lightweight numerous source python package special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor implementation documentation status anything article lookuperror ubuntu analysis hypothesis textiness history bendersky detection continuous chardet software everything edition unicodedecodeerror release binary various blanchard binaryornot license documentation portion complete rewrite complex platform writeup heuristic similar travis lightweight numerous python package redundant special", "pypi_keywords_clean": "binaryornot"}, "fusionapp/fusion-util": {"git_readme_keywords": "", "git_description_clean": "utility package for fusion", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "etingof/pyasn1-modules": {"git_readme_keywords": "python question copyright ilya collection present feedback something request copyright asnate module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection definition form various", "pypi_keywords_clean": ""}, "/roaringbitmap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package intersection implementation inverted inverted implementation contiguous variant analogous useful library possible immutable variant performance comparison experience license documentation immutable compressed datastructure additional representation version installation particular wrapper various containing unsigned software practice memory sequence conjunction efficient compressed replacement pyroaringbitmap mutable", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-iotcentral": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package complete service management project changelog availability breaking privatepreview release history operation library resource manager changelog release subdomain availability support package compatibility version python generation package version namespace package uninstall iotcentral management signature initial release parameter microsoft feedback section compatibility important", "pypi_keywords_clean": ""}, "woocommerce/woocommerce": {"git_readme_keywords": "contribute everything happening twitter tracker suitable reference woocommerce community documentation woocommerce development project hackerone woocommerce repository support available woocommerce premium version github feature security premium support woocommerce development woocommerce plugin information welcome developwc appropriate woocommerce documentation contributor submit wordpress", "git_description_clean": "an open source ecommerce plugin for wordpress", "git_keywords_clean": "woocommerce wordpress php automattic ecommerce ecommerce platform", "pypi_description_keywords": "strings interact changelog response argument support generate block python version consumer secret handler python initial version strings initial woocommerce library installation python wrapper object example method consumer block", "pypi_keywords_clean": ""}, "/dstk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sentiment unstructured semantic datasciencetoolkit interface", "pypi_keywords_clean": "sentiment geo"}, "rocky/columnize": {"git_readme_keywords": "numeric columnize columnize listing debugger bernstein rockyb rockyb rubyforge version object listing listing columnize license copyright columns", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "object listing justified numeric array listing arrange vertical columns separate columns license arrange array version legible bernstein rockyb rockyb rubyforge python status private method embedded newline necessary default columns function column listing debugger displaywidth consecutive", "pypi_keywords_clean": ""}, "bitmazk/django-multilingual-initiatives": {"git_readme_keywords": "different commit default plugin display initiative helpful setting plugin tracker initiative plugin github release localized adventurous installation django multilingual following display", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different commit default plugin display initiative helpful setting plugin tracker initiative plugin github release localized adventurous installation django multilingual following display", "pypi_keywords_clean": "django cms plugin initiative localization"}, "alaudet/hcsr04sensor": {"git_readme_keywords": "chance sensor python hcsrsensor beware distance reading tracker suitable master depth metric arduino anything second metric reading probability decimal imperial useful rasbian jessie possible utility master branch hcsrsensor sensor support board project accurate actual install python other install description faster pydoc hcsrsensor further default board erroneous variance waterproof periodic strange faulty version layout documentation example exception ultrasonic sensor millimeter accuracy application specification manual error handling calculate distance sorted sample python install elevated welcome please branch default sample invidual raspbian linux accuracy good donation function desired number consistent individual script raspbian wheezy quicker enough raspberry monitor access request median reading temperature module different sample error measurement object preference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "chance sensor python hcsrsensor beware distance reading tracker suitable master depth metric arduino anything second metric reading probability decimal imperial useful rasbian jessie possible utility master branch hcsrsensor sensor support board project accurate actual install python other install description faster pydoc hcsrsensor further default board erroneous variance waterproof periodic strange faulty version layout documentation example exception ultrasonic sensor millimeter accuracy application specification manual error handling calculate distance sorted sample python install elevated welcome please branch default sample invidual raspbian linux accuracy good donation function desired number consistent individual script raspbian wheezy quicker enough raspberry monitor access request median reading temperature module different sample error measurement object preference", "pypi_keywords_clean": ""}, "jazzband/pip-tools": {"git_readme_keywords": "environment virtual python extension custom script specific version careful flag update command underlying build status hash checking flask dependency specific package flask project other useful block bash uninstall everything multiple dependency everything necessary fresh target codecov environment example target jazzband appveyor codecov other configuration command similar update specific available empty version control status target bash example production example upgrade uninstall pipdeptree multiple python bash passing jazzband travis buildstatus right installation jazzband target suppose update project environment python project virtual environment installed codecov target compile buildstatus appveyor project virtual script environment variable appveyor build sync buildstatus travis uninstall packaging sync multiple target buildstatus bash updating vs", "git_description_clean": "a set of tools to keep your pinned python dependencies fresh", "git_keywords_clean": "", "pypi_description_keywords": "environment virtual python extension custom script specific version careful flag update command underlying build status hash checking flask dependency specific package flask project other useful block bash uninstall everything multiple dependency everything necessary fresh target codecov environment example target jazzband appveyor codecov other configuration command similar update specific available empty version control status target bash example production example upgrade uninstall pipdeptree multiple python bash passing jazzband travis buildstatus right installation jazzband target suppose update project environment python project virtual environment installed codecov target compile buildstatus appveyor project virtual script environment variable appveyor build sync buildstatus travis uninstall packaging sync multiple target buildstatus bash updating vs", "pypi_keywords_clean": ""}, "boisgera/pandoc": {"git_readme_keywords": "haskell subprocess pythonic typical workflow project document analyze command create version format wrapper python document productive following python library analyze create library warning transform document export pypandoc pyandoc automated translation native language", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/parsekit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "enigma parsekit", "pypi_keywords_clean": ""}, "pbrod/nvector": {"git_readme_keywords": "links pkg example interpolated inverse geodetic azimuth bearing intersection image define first example wgs use center midpoint down cross track vehicle body pkg nvector navigation group official documentation library example geodetic nvector nvector docs img unambiguous default step product major axis image position direct geodetic example intersection coordinate frame north sphere alternative position image download pkg brodtkorb wgs ellipsoid calculation position center north assume doctest need geodetic problem vector algebra functional solution additional benefit downloaded nvector heb earth vector image several geographical program previous example euclidean distance intersection point distance dxt distance chord track distance session import vector position eb latitude type exact solution following article azimuth distance path sphere solution latitude longitude exact position latitude image bearing relative img coverage use position point azimuth define path flattening solution exact installation solution distance sab content geodetic latitude second inverse exact vector geographical position nvector doctest sonar nb reference frame image radar surface use many position sab use circle distance install download following pip define north example surface earth ellipsoid eb solution longitude vector bc import nvector suite notation body coordinate distance image nvector img pip install vector eb delta bc distance sxt first geodetic img nvector n eb similar provided b interactive python curvature elevation relative image geodetic toolbox position description type pip img docs python session cross product step delta pip geodesy destination point use m travel plane ellipsoid solution online ellipsoid surface lateb loneb chord length position step health img alternative sphere delta image eb t em spherical earth roll pitch normal vector ab delta convert initial position nv nv downloaded program stable version north functional position direction algebra g rotation matrix great circle common geodesic pitch yaw documentation reference ellipsoid simple vector easy example ecef ecef vector available advantage img health relative python direction azimuth pyargs nvector zyxr orientation attitude solution step use earth interpolated position intersect solution eb independent use assume wgs index example cross step position download nvector pkg coverage img height lateb different command prompt object image path north clockwise circle use py depth step convert surface distance below", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "links pkg example interpolated inverse geodetic azimuth bearing intersection image define first example wgs use center midpoint down cross track vehicle body pkg nvector navigation group official documentation library example geodetic nvector nvector docs img unambiguous default step product major axis image position direct geodetic example intersection coordinate frame north sphere alternative position image download pkg brodtkorb wgs ellipsoid calculation position center north assume doctest need geodetic problem vector algebra functional solution additional benefit downloaded nvector heb earth vector image several geographical program previous example euclidean distance intersection point distance dxt distance chord track distance session import vector position eb latitude type exact solution following article azimuth distance path sphere solution latitude longitude exact position latitude image bearing relative img coverage use position point azimuth define path flattening solution exact installation solution distance sab content geodetic latitude second inverse exact vector geographical position nvector doctest sonar nb reference frame image radar surface use many position sab use circle distance install download following pip define north example surface earth ellipsoid eb solution longitude vector bc import nvector suite notation body coordinate distance image nvector img pip install vector eb delta bc distance sxt first geodetic img nvector n eb similar provided b interactive python curvature elevation relative image geodetic toolbox position description type pip img docs python session cross product step delta pip geodesy destination point use m travel plane ellipsoid solution online ellipsoid surface lateb loneb chord length position step health img alternative sphere delta image eb t em spherical earth roll pitch normal vector ab delta convert initial position nv nv downloaded program stable version north functional position direction algebra g rotation matrix great circle common geodesic pitch yaw documentation reference ellipsoid simple vector easy example ecef ecef vector available advantage img health relative python direction azimuth pyargs nvector zyxr orientation attitude solution step use earth interpolated position intersect solution eb independent use assume wgs index example cross step position download nvector pkg coverage img height lateb different command prompt object image path north clockwise circle use py depth step convert surface distance below", "pypi_keywords_clean": ""}, "rberrelleza/fiveoneone": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "estebistec/drf-compound-fields": {"git_readme_keywords": "package software compound serializer framework individual ability information freenode partial channel coverage overview example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package history upgrade serializer partial freenode listfield dictfield validation documentation partialdictfield partialdictfield validation explicit dependency embedded version implement example django software compound dependency framework dictfield partialdictfield release dictfield individual listfield ability package history serializer compound framework serializer handling information project upgrade listoritemfield channel coverage overview distinct", "pypi_keywords_clean": "rest framework rest apis services fields compound"}, "/gnumpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "scientific gpunnumpy component commercial software dimensional gnumpy cudamat project publication documentation license computer bugfix gnumpy excellent library performance machine software everything identical reference bugfix several helpful document convenience ability original gnumpy simulation distribution gnumpy interface compute garray laptop everyone gnumpy gnumpy", "pypi_keywords_clean": ""}, "/trappy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analysis complex statistical framework systematic flexibility statistical analysis underlying functionality", "pypi_keywords_clean": ""}, "praekelt/django-category": {"git_readme_keywords": "package categorization setting python django micro categorization providing category required optional example display content django category release essence providing django internal descriptive installation install travis descriptive unique official django installation", "git_description_clean": "django categorize content app", "git_keywords_clean": "", "pypi_description_keywords": "package categorization compatibility setting testrunner changelog subtitle sensible providing category jonathan bydendyk required absolute sephton jonathan migration dependency cleanup bydendyk hedley representation optional example display content django category release essence providing django internal descriptive django support foundation django version prepopulate installation install interface descriptive unique official django installation minimum", "pypi_keywords_clean": ""}, "ui/django-post-office": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full application server exception handler logs nothing single parameter queue useful multiple library admin interface django template render templated install django emails add crm loyalty low memory much order default languange process identical recipient keyword python manage block django django internal response cycle daemon important function track various different short body simple app trivial setting setting integration default priority parallel lock project manage py argument html content queued emails field class uwsgi database outgoing speed python context multi backend argument description example django full changelog content python installed number attachment django admin description hello template backend few python template language python multilingual rendered failed delivery reference id decorator loyalty platform management command celery changelog full failed message memory environment level flag datetime object special django html awesome complex python instance logs configuration absolute template engine py migrate field serializer block python create request response subject templatetag way content doesn please logs everything pypi version context emails db add special webapp delivery dictionary deferred python performance python inlined outgoing message snippet access specific section multilingual manage context field render reference performant indonesia backend support build status mechanism version software asynchronous reason disk behavior batch bulk license install status pypi successful adopted template own context nothing logs mailing library server add available python default platform build relative rendered template such html message alias software license cleanup message object something priority office add following office django above command python management docker elegant crm render html installed apps field bcc template extra significant templatetag render different backend python custom fifo order", "pypi_keywords_clean": ""}, "alvations/pywsd": {"git_readme_keywords": "european chapter conrath semantic reykjavik iceland language processing satanjeev banerjee senseval roberto navigli measure artificial intelligence annual international semantic similarity semantic relatedness pywsd python processing disambiguation system pederson simple computational adapted extended install documentation eighteenth international identification international conference virginia multiple knowledge international workshop evaluation madison springer wordnet similarity research coverage detection lexical taxonomy software leacock alexander gelbukh support vector information theoretic corpus pagerank disambiguation context similarity pedersen extended semantic analysis fellbaum intelligent machine readable definition example hyponyms annual meeting uppsala rebecca passonneau stroudsburg possible version pedersen algorithm chodorow information wordnet algorithms original banerjee theoretic definition caroline sporleder language natural language claudia leacock babelnet information content association navigli francesco automatic benjamin", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python disambiguation", "pypi_keywords_clean": ""}, "/mapproxy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "source proxy attack service single source intersection default mapproxy linux geopackage transformed saving pillow multiple developed duration reseed fastoctree timeout arcgis compact support geojson transaction documentation counter client support configurable arcgis support custom output available unneeded quantizing difference nested imageserver reseed interval coverage clipping transparency feature arcgis exploded python application software license version support number encoding layout compatible format version example session support featureinfo custom transparency support selection geospatial continue various webmercator innovative information featureinfo precision quantization support multiple grayscale client desktop convert paletted source support progress subpixel transformation alpha apache software limitto information disclosure", "pypi_keywords_clean": ""}, "Robpol86/flask-redis-helper": {"git_readme_keywords": "delayed initialization default pycharm autocomplete changelog configuration dictionary python factory instance g extension celery compatibility socket celery factory example project helper separate install network version example password default python application server number default status integer default sqlalchemy coverage status localhost ambiguous technical preview config python configuration individual server hostname initial release method socket removed application configuration attribution linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python quickstart delayed initialization default changelog support pycharm autocomplete configuration dictionary quickstart install python factory instance g celery compatibility socket celery factory example separate redis socket network redis localhost version example password default python application number default status compatibility redis integer default redis extension sqlalchemy coverage status support initial linux python ambiguous individual config python configuration server hostname initial release redis server break pycharm method socket redis helper application configuration attribution linux", "pypi_keywords_clean": "flask celery redis"}, "visgean/urljects": {"git_readme_keywords": "project important definition approach effect system functional common regular boilerplate decorator library function example django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django url", "pypi_keywords_clean": "urljects"}, "divio/djangocms-grid": {"git_readme_keywords": "django default virtualenv plugin grid number configure installation djangocms grid example common grid", "git_description_clean": "a multi column plugin that uses common grid system", "git_keywords_clean": "", "pypi_description_keywords": "django default virtualenv plugin grid number configure installation djangocms grid example common grid", "pypi_keywords_clean": ""}, "aldryn/aldryn-translation-tools": {"git_readme_keywords": "package requested language unique default translated article suitable specific language similar capability language segment object absolute account possible reverse multiple project object similar changelist contrast fallback collection configuration alltranslationsmixin developer optional parameter meaning untranslated grateful resulting language undefined version coverage public translated django display example maximum length important current language number possible separator property helpful physical discomfort something import correct context editable overriden permission signature fallback langauge translatablemodel language different aldryn translation ability complex consistent language consistent consistent fallback object noreversefound exception meaning translated method strategy linkedrelatedinlinemixin preference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "adafruit/adafruit-mcp3008": {"git_readme_keywords": "clk sck feather feather agnd interface library vref available digital xx miso miso adafruit sck sck sck dout channel huzzah feather feather huzzah following mosi mosi dgnd", "git_description_clean": "mcp channel bit adc", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyobjc-framework-servernotification": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information documentation nsservernotificationcenter distributed framework servernotification extensible messaging", "pypi_keywords_clean": "pyobjc servernotification"}, "dvdme/forecastiopy": {"git_readme_keywords": "package computer format forcastio python further development current readable invalid eclipse public requested location hourly weather location forecast support darksky previous documentation precipitation probability python license quick output available python version github lisbon python support everything reflection m software particulary something current temperature connection returned dictionary public license initial understanding hourly weather following python source license python python python wrapper branch travis different valueerror wrapper forecastio appveyor master request everyone", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "weather forecastio forecast io rest darksky darksky net"}, "vitalk/pytest-flask": {"git_readme_keywords": "suggestion flask detailed overview hesitate version python application fixture runner extension useful block python version conda development documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "g headless instance response object suggestion headless browser marker suitable fixture property documentation hesitate application fixture available extension selenium request context application config background useful function", "pypi_keywords_clean": "pytest flask testing"}, "rolobio/dictorm": {"git_readme_keywords": "transaction dictorm minimal transaction intermediary substratum aggregate default transaction context backend install psycopg install dictorm pythonic primary testing dictorm manipulate manipulate postgresql python reference connect manager resultsgenerator backend quick quick simple advanced simple example context manager python dictionary object database dictorm", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "update database dictionary", "pypi_keywords_clean": "psycopg dictionary python dict"}, "philgyford/django-ditto": {"git_readme_keywords": "django management collection common flickr particular libjpeg progress animated javascript template original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django management collection common flickr particular libjpeg progress animated javascript template original", "pypi_keywords_clean": "ditto twitter flickr pinboard last fm"}, "borgstrom/django-simple-menu": {"git_readme_keywords": "checking everything flexibility jazzband django install namespace project documentation context directory quickstart template request generation varaible example project unlimited virtualenv django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "checking everything flexibility namespace install setting project documentation context directory quickstart template request generation varaible example project unlimited virtualenv django", "pypi_keywords_clean": ""}, "/pythemis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "platform availability storage flexible messaging quality security multiple security library", "pypi_keywords_clean": ""}, "redis/hiredis": {"git_readme_keywords": "event loop descriptor family other error specifier access bulk non zero stateless client library wrong string release hiredis few function hiredis api master branch redis version string representation able status reply hostname standard host single way multi bulk easy reusability other gmail entire array memory important string reply callback function much order erik rediger api upgrading stable release new connection identical eye show ruby need context object unused unparsed data allocation binary connection dot com multiple apis protocol parser example hiredis kib redisreader structure global variable api hiredis changelog upgrading redis database due explicit vanilla string uniform error string array mind data direct usage reader structure error returned status stream parser error asynchronous exposed api kind length matt stancliff subsequent entire output type output buffer dynamic responsible supported above api redis protocol new hiredis following prototype contrast cause empty read license hiredis single call following function jan erik nested formatted command readme structure only used integer value upstream example high level pointer number reader max redis command likely latter lack memory error description minimalistic client bulk string pipeline respective function call argument point arbitrary data only valid used level language libev issue usage usage o layer special value integer status updated library good point nil object minimal support integer field synchronous api asynchronous context maximum value only few response form stancliff matt non blocking maximum idle instance user request aspect similar hiredis rb single reply callback copy element redis context hiredis only creation reply parser application socket read reply object o error context salvatore sanfilippo libevent input buffer struct protocol error simple pipeline efficient reply sub reply status string zero unlimited large duration disconnect user length argument internal execution section normal redis continue blocking subscriber major overhaul thread execution flow minimal code behavior return value possible successful hiredis first asynchronous connection function argument reader api documentation api future empty try disconnect callback bsd license several first libevent reply protocol used server event library fnordig dot semantic reconnect bulk reply nature directory internal buffer something returned harmful rediger janerik convenience disconnection idle buffer noordhuis pcnoordhuis asynchronous api information different kernel big current version hiredis hiredis non empty minor breaking protocol disconnection callback max buffer sanfilippo antirez call blocking connection socket only single key thing useless memory pieter noordhuis", "git_description_clean": "minimalistic client for redis", "git_keywords_clean": "", "pypi_description_keywords": "python extension ubuntu debian improvement minimal default simple pypi other condition encoding python way python usage multiple responsible bulk class py python argument performance improvement license single faulty protocol default behavior python default available improvement lrange python development existing o bsd license protocol parsing stream corrupt stream example subclass handler identical key throughput improvement patched version functionality directory internal buffer custom connection unicode lazy fashion repository behavior other improvement throughput concurrent following information lrange script gevent handling extra socket module hiredis py", "pypi_keywords_clean": "redis"}, "agoodid/django-s3-collectstatic": {"git_readme_keywords": "modified management backend comparison heroku sbotostorage collectstatic repository installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modified management backend comparison heroku sbotostorage collectstatic repository installation", "pypi_keywords_clean": ""}, "benoitc/tproxy": {"git_readme_keywords": "rawiobase class descriptor rewrite clienrt unique simple current connection clienrt request rewrite rewriteio argument rewrite proxy layer gunicorn instalation string tproxy rewrite rewrite copyright benoitc engura header rewrite request argument chesneau benoitc routine logic command gevent gunicorn available exemple string reply clientconnection instance instalation tproxy virtual hosting installation reply string exception script example python valid return python support rewrite response server worker model specify request function rewriteio instance google homepage optionnnal connection nothing function instance current python python gevent tproxy tproxy client source string return second argument", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "rawiobase class descriptor rewrite clienrt unique simple current connection clienrt request rewrite rewriteio argument rewrite proxy layer gunicorn instalation string tproxy rewrite rewrite copyright benoitc engura header rewrite request argument chesneau benoitc routine logic command gevent gunicorn available exemple string reply clientconnection instance instalation tproxy virtual hosting installation reply string exception script example python valid return python support rewrite response server worker model specify request function rewriteio instance google homepage optionnnal connection nothing function instance current python python gevent tproxy tproxy client source string return second argument", "pypi_keywords_clean": ""}, "/finsymbols": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information nasdaq stock amex wikipedia amex", "pypi_keywords_clean": "stocks"}, "paulgb/sklearn-pandas": {"git_readme_keywords": "column multiple equivalent helper transformed stacking way column vector columns generated component multiple class fixes allow basic indexing model miller rwjmiller transformation custom custom class class key feature selection version machine process compatibility shim input columns demonstration categorical columns second element zaretskey vzaretsk return option transformer allow transformation return sparse custom cross general prediction sklearn function generated ritesh agrawal different hardware parameter scheme sandrocasagrande timothy jimmywan kristof return model unselected columns mafra gsmafra grisel ogrisel zacstewart group default sklearn deprecate basic sanity preserve input definition mapper feature transformer sparse columns defvorfu gustavo estimator capture output sparse feature third argument different sklearn difference compatible installation example multiple input number derivation unexistent columns vitaley zaretskey custom cv pandas function calpaterson defvorfu supervised sklearn pandas unicode function delete allow assaf brendan herger target work example consider several dataframe mapper transform first principal sparse example columns capture mapper multiple columns fix column assafbendavid brendan deprecation string columns pattern dimensional columns unchanged dataframe columns shortcut transformer default original argument fixes potential breaking present extracted similar fixes return indexing simple string example changelog feature richard miller null david assafbendavid third update ragrawal sandrocasagrande particular corresponding validation shim cross validate bridge fixed helper function paterson calpaterson pandas numpy hacktuarial vitaley couple dictionary first element individual behaviour multi index transformer factor transform multiple columns allow optional argument module certain whole mapper special package gsmafra israel mapper return old class fix dataframemapper agrawal ragrawal mapper mapper transformer class paulgb richard import import applicable standardscaler dimensional input dukebody validate pipeline output default setting feature definition tuple optional custom column frequent generator such dataframe fixes principal component exception python everything rossanigo arielrossanigo strategy feature dataframe mapper input helper transformer butler paulgb column selector generated attribute input df jph jimmy pandas dataframe fourth column output columns rwjmiller ritesh following column definition acceptable cross validation transform method transformation herger bjherger present attempt standardized object transformed columns interface transform consider dataset x argument default transformer deprecate custom transformer example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "scikit sklearn pandas"}, "/myapp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "MicroarrayTecnologia/spec-synthase": {"git_readme_keywords": "swagger specification zalando connexion production mozilla documentation national library synthase swagger", "git_description_clean": "spec synthase is tool to help deal with big swagger files by building the swagger specification files from little spec files", "git_keywords_clean": "", "pypi_description_keywords": "swagger specification zalando connexion documentation status coverage coverage status synthase production swagger", "pypi_keywords_clean": "openapi specification oas swagger yaml spec api"}, "/pit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "reanahub/reana-client": {"git_readme_keywords": "information computational analysis platform general workspace finished reusable analysis useful component reproducible research reusable", "git_description_clean": "reana command line client", "git_keywords_clean": "", "pypi_description_keywords": "additional operational workflow wrapper command output download operational parameter design beware field analysis platform common workflow workflow language workspace workflow engine reusable analysis workflow command useful reusable development addition release admonition verbose developer preview specification computational workflow workspace support documentation command absolute interactive workflow progress alpha version such python version coverage reference implementation execution production everything server version initial third input wrapper command concrete workflow workspace disk upload download binary session command reproducible research current status function general specification version directory input information initial public persistent jupyter notebook current command access cvmfs compute subfield upload verbosity workspace command component finished public release workflow operational", "pypi_keywords_clean": ""}, "anthok/overwatch-api": {"git_readme_keywords": "segment python overwatch provider async install overwatch example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "RazerM/orbitalpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license orbital package orbital build information build status level orbital version installation", "pypi_keywords_clean": ""}, "/actdiag": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "follow blockdiag structure blockdiag autolane plugin license apache simple install actdiag python pillow figwidth figclass docutils exetension blockdiag interface fontface apache license diagram attribute plugin update header sphinxcontrib module install background license support available package structure docutils directive imagemagick optional command actdiag execute actdiag version dependency feature multilingualization number status format actdiag simple interface change reportlab optional feature experimental attribute default attribute activity diagram actdiag command release support python docutils license history directive docutils change interface algorithm interface follow generate activity shadow experimental follow support blockdiag blockdiag directive sample docutils extension change license history follow", "pypi_keywords_clean": "diagram generator"}, "/expressions": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "arithmetic expression"}, "danielfrg/tsne": {"git_readme_keywords": "package anaconda information compliant algorithms presidential prateekpg available necessary wrapper useful wordvec scikit version library installation github repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package anaconda information compliant algorithms presidential prateekpg available necessary wrapper useful wordvec scikit version library installation github repository", "pypi_keywords_clean": ""}, "pudo/normality": {"git_readme_keywords": "package preparation standard license punctuation normalization normality normality various analysis example repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "text unicode normalization slugs"}, "chuck1/ws-sheets": {"git_readme_keywords": "python example testcode documentation install testoutput spreadsheet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "antonagestam/collectfast": {"git_readme_keywords": "default locmemcache setting project directory g license information previous python debug license collectfast builtin command uploading parallel useful default collectfast default django welcome testing development django default project md django builtin copying dedicated custom management collectfast creative dedicated py threadsafe installation normal storage backend django virtualenv python jquery failure certain environment status status coverage something coverage status option suppressed unported license enable parallelization parallelization feature lookup discussion contribution module enable collectstatic django command caching module obsolete management command attribution static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default locmemcache setting project directory g license information previous python debug license collectfast builtin command uploading parallel useful default collectfast default django welcome testing development django default project md django builtin copying dedicated custom management collectfast creative dedicated py threadsafe installation normal storage backend django virtualenv python jquery failure certain environment status status coverage something coverage status option suppressed unported license enable parallelization parallelization feature lookup discussion contribution module enable collectstatic django command caching module obsolete management command attribution static", "pypi_keywords_clean": ""}, "tonyskapunk/beat": {"git_readme_keywords": "swatch internet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GaretJax/coolfig": {"git_readme_keywords": "django contrib django middleware admin django default sessionmiddleware django secret key import envconfig coolfig import documentation installation middleware common library security securitymiddleware install coolfig class messagemiddleware django provider django template configuration middleware messagemiddleware additional authenticationmiddleware django middleware authenticationmiddleware common commonmiddleware compatible envconfig prefix coolfig coolfig sessionauthenticationmiddleware django python software schema template context testprj wsgi machinery urlconf testprj prefix myapp django integration xframeoptionsmiddleware django context contrib admin db various app auth context commonmiddleware django myapp profit following auth django auth middleware middleware sessionauthenticationmiddleware contrib auth license documentation csrfviewmiddleware django apps django wsgi application submodule middleware middleware sessionmiddleware coolfig example middleware security application testprj", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib django middleware sessionmiddleware django default secret key appconfig checking object added directive added importing added documentation installation middleware common library security securitymiddleware install coolfig multiple messagemiddleware django provider django template configuration middleware messagemiddleware added support different explicit support additional authenticationmiddleware django middleware authenticationmiddleware history common commonmiddleware compatible envconfig prefix coolfig coolfig sessionauthenticationmiddleware django python software schema template context testprj wsgi machinery urlconf testprj prefix myapp django integration property xframeoptionsmiddleware django context initial documentation envconfig added provider db custom various commonmiddleware django myapp profit following middleware sessionauthenticationmiddleware provider added initial release license documentation docker stub added config csrfviewmiddleware django improved additional bug added initial apps django documentation stub wsgi application object submodule importable middleware middleware sessionmiddleware checking added coolfig example middleware security coverage support django added application testprj", "pypi_keywords_clean": ""}, "redaelli/imago": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "export md relevant information forensic investigation status recursive latitude dhash whash useful perceptual output directory md processing jpeg support license present nudity detection metadata imago jpeg imago output available example python sqlite export digital forensic sqlite database required argument directory recursive directory install imago binary extraction copyright redaelli welcome copyright level analysis error level extract digital export sqlite imago imago banner jpeg directory navigation support nudity longitude nudity temporary sqlite possibility", "pypi_keywords_clean": ""}, "/aeropy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "universal engineering toolbox development", "pypi_keywords_clean": "aerospace engineering airfoils noise aircraft"}, "dailymotion/cloudkey": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ip address epoch expiration security level quick tour cloudkey py multiple bool param param ip python native sdk cloud param seclevel single first url urls remote information please seclevel parameter hls rtmp general information instance dailyotion cache flush rpcexception recommended approach url filename param preset maximum number option agent http uploaded mediastream url aceeacd cloudkey cloudkey cloudkey parameter authenticationerror url default method param useragent everyone error group direct mapping download rtype param filename internet key aceeacd secure bool cloud architecture allowed object general id cadededebfd argument client ip param protocol bitmask default asnum recognition param download client http own authentication information download bool cloud player autonomous system invalidparameter example cloudkey import dailymotion cloud param version upload local url remote agent header path param key cloudkey adress default json invalidrequest request param asnum timeframe applicationexception introduction level bitmask dailymotion cloudkey header default response http transport desired json structure transportexception cloud streams instance tour security asnum ip bitmask param master class invalidcall different combinable reference invalid invalidobject client autonomous https url access method param secure system number local transport serializererror id param python library access section provided security arbitrary integer isps action accurate asnum valid json new download url mechanism param id perishable ip adress py module url access import cloudkey security documentation specific timeframe stream urls specific purpose http header protocol hls version arbitrary spurious access buildout installable python sdk server number default unix epoch rtmp hps download parameter following invalidmethod map generated url object streams security beforehand", "pypi_keywords_clean": "dailymotion dmcloud cloud cloudkey api sdk"}, "/pockets": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility useful python camelcase rubric rubric resolve rubric convert rubric iterator impedance mismatch project documentation available request feature logger status branch release coverage status separated rubric maintainer different convert camelcase external separated documentation status", "pypi_keywords_clean": ""}, "levi-rs/explicit": {"git_readme_keywords": "execption codehealth storiesinready nosuchelementexception staleelementreferenceexception accessible travisci coveragestatus codehealth writing selenium explicit immediate exception expense powerful alternative apparent githublogin githublogin implicit githublogin explicit developer pypiversion travisci several explicit pypiversion github storiesinready pypiversion functionality travisci coveragestatus various explicit package control problematic dynamicly complexity program webdriver default nosuchelementexception githublogin", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "execption codehealth storiesinready nosuchelementexception staleelementreferenceexception accessible travisci coveragestatus codehealth writing selenium explicit immediate exception expense powerful alternative apparent githublogin githublogin implicit githublogin explicit developer pypiversion travisci several explicit pypiversion github storiesinready pypiversion functionality travisci coveragestatus various explicit package control problematic dynamicly complexity program webdriver default nosuchelementexception githublogin", "pypi_keywords_clean": "selenium explicit wait implicit"}, "/spotpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "informal bayesian hydrological install spotpy package drought frequency probability correlation algorithm differential chamorro chavez amplitude sensitivity scientific research procentual calibration uncertainty drought variance weilbull covariance complex parametric gaussian likelihood progress exponential transform agreement sensitivity analysis parallel lapacian likelihood chaotic artificial sutcliff logarithmic database evaluation environmental solution lognormal chisquare spotpy statistical geweke measurement adaptive metropolis simplicity sutcliffe efficiency homoscedasticity request maximum likelihood algorithms available convergence storage parameter estimation function lapacian markov drought prebuild parameter bayesian informal likelihood estimation metropolis algorithm chisquare exponential complex evolution skewness compare coefficient coefficient absolute energy function correlation coefficient github posterior distribution parameter interaction sampled objective support uncertainty sensitivity heteroscedasticity likelihood artificial parameter distribution summary objective likelihood function houska efficiency simulation different algorithms differential evolution parameter optimization hypercube selecting package journal evolution adaptive autocorrelation boxcar likelihood acceptability inverse possible discharge prebuild statistical parameter regression analysis fitness function function fitness logarithmic probability relative variance fitness computational optimization determination evolution algorithm bayesian algorithms drought duration available algorithms function regression documentation documentation flexibility student likelihood welcome updated evolution markov automatic", "pypi_keywords_clean": "monte carlo"}, "/pygeoprocessing": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full mb memory bottleneck unweighted flow release history distance transform useful outlet import issue timeout computational directory fixed pixel added other orthogonal gis flow direction direction plateau logger handler unhelpful error necessary pygeoprocessing intra package unnecessary toolset pygeoprocessing gdt reproject datasource specific compiler style checksum calculate separable pygeoprocessing default watershed added added optional source routing routing filename locality module package index flux installed pygeoprocessing weighted averaging fft window method amount module numpy requirement processing library negative nodata focus database reproject dataset gdal upgrade equivalent input lookup number pygeoprocessing distribution cross compatibility array broadcasting signal magnitude raster alignment repository natcap versioner conflict incorrect value header row informative error optional parameter first row weight raster subprocess fixed handful public function space efficiency transform added added support compatibility issue other zonal divergent flow vectorize band index dependency multiple python string equality moniker dinf mfd geometry band count couple raster algebra individual pygeoprocessing pygeoprocessing warp parameter band address runtime caller recent gdal create programmable problem libstdc functionality address scipy single numerical compatible refactor help pygeoprocessing runtime performance level fixed return value pygeoprocessing client calculate zonal pygeoprocessing gdal compress lzw importerror computer added error weight advantage dataset identified tuple unsigned package execution target nodata routing calculate upper bound package logger dataset band installed arcgis spatial such check pr large block target vector informative raster module single band incorrect convolution libgcc invest wind invest toolset memory space band argument grass taudem library raster warp convention crash output hotfix hydrological world small amount nodata overlap routing delineate incorrect bounding polygon coverage txt issue reclassification distance raster added equal order fixed memory process gdal library needed report vector fixed numpy digitize virtual environment otherwise error message version compatibility dataset lzw installed gdal address taudem hydrological calculate raster gdal shapely linux many geospatial default aggregate upgraded pygeoprocessing pep raster calculator fly delineate watershed creation compression union bigtiff pip installable cpus new raster own valid gdal pygeoprocessing log reprojection incorrect distance coordinate system installation manipulation function lack cython routing pixel source pipeline incoming readable exception invest looser first release python hierarchical fixed crash mingw specific scheme first fixed bug deletion power desired target entire raster nodata value pypi raster manipulation error checking careful many pygeoprocessing flow insensitive added desired pip install pixel continuous efficiency memory copy extract band cpu count many pygeoprocessing automatic versioning local versioning dataset swig reasonable local coordinate added nullhandler internal raster natcap invest bsd style pygeoprocessing design mask calculation target projection scalar processing similar specific cache locality default parameter correct detection wheel confusing different nodata commonly algebra arcgis unexplainable lzwdecode behavior result numpy direction module disk added parameter block console complete version value fixed change hydrological routing outside function calculate conventional gis slope added basic projection pixel input directory added watershed threshold level pattern added cutline functionality x added functionality wkt only orthogonal precision function zonal python loops calculator reclassification pygeoprocessing package hierarchical package extreme neighbor interpolation help added function multiple flow transform convolution align raster infinite loops memory efficient accumulation added arcgis zonal calculate transport mfd flow option bounding box drainage weighted polygon overlap absent runtime small compiler pygeoprocessing routing fixed thresholded small raster block handle separate thread operation calculate info spatial reference function pygeoprocessing gdal warp license warp align practice python cython pixel runtime complexity understood solution default field fly normalization gdal dependency logging datasource function arcgis qgis netcdf info contiguous stream subtle target output temporary directory routing library logging feedback numerous memory issue invest model field memory block fix aggregate vector function capable tox configuration csv pixel flow swig deletion coverage unable fixed library pavement script fixed looser requirement bad input library dinf dictionary geotiff creation target watershed enough raster vector qgis raster wind energy ceiling pyd section valid pixel op added hotfix patch infinite loop raster versioning cython module first memory nodata function versioning logic downstream flow flushing diagonal pygeoprocessing raster raster creation capital project proprietary software several pygeoprocessing other gis aggregate raster only invest check fix pygeoprocessing only grid polygon disjoint boolean something other projected bounding source fixed numerical value mfd raster dialect subset shapefile relative numerical pygeoprocessing mfd many cpu accumulation raster informative readme default system big table added mask object runtime system temporary hotfix gis processing value intersection typeerror iteration standard package metadata support spatial precompiled pygeoprocessing disjoint polygon module fixed correct format watershed delineation src pygeoprocessing count added filetype specific first layer large raster pxd comma helpful semicolon calculate value direction raster compression algorithm natural capital watershed output library pygeoprocessing filepath default raster small raster slow system sqrt unsigned raster value such stream layer layer index dataset function raster didn patch platter hard runtime efficiency matter copyright orthogonality fixed only band tuple numerical tolerance previous version linearly first reading fixed defect dev region raster entire dataset flow distance feature complete overlap custom info added internal temporary improve roundoff recent setup py small disjoint input behavior noninclusive feature hotfix flow accumulation routing added basic filetype multiple cpu raster bounding numpy version lookup table nodata offset dictionary pygeoprocessing routing orthogonal functionality numpy array paradigm overall runtime form similar functionality history added band added gdal functionality arcgis grass pygeoprocessing installed unnecessary fixed recreatable reclassify dataset downhill flow plateau drainage input dem target raster license txt reference system parallel raster rasterization interpolate incomparability svn added relative consistent value hotfix condition square access output datasource calculation added python package module kernel op special package versioning scheme computation continuous flow added flag many delineation routine metadata raster incoming raster useful fixed absolute tolerance align dataset requirement requirement thresholded flow relative optional exception potential bug cutline touch different gdal current pixel broadcastable good kernel duplicate target watershed shapefile class ordereddict pygeoprocessing added desired added numerical roundoff layer raster return only", "pypi_keywords_clean": "gis pygeoprocessing"}, "/django-stubtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django app"}, "/serial": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rest api serialization serialize"}, "miku/gluish": {"git_readme_keywords": "package handle effective supertask leverage command slugified version example workflow argument instance executable output available dependent example mailing placeholder exception regular classname keyword keyword argument system ordinary arbitrary literal temporary nothing gluish requirement dynamic structured output parameter compatibility gluish x x x functionality unrelated significant decorator special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "elasticsearch/elasticsearch1-dsl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance compatibility optional wrapper underlying specific language response copyright elasticsearch writing library development license version applicable documentation migration configuration default connection available idiomatic language governing structure compatible elasticsearch version example license copyright python application compound writing software express python documentation system document incorrect persistence example custom typical retrieving recommended documentation documentation persistence chapter approach terminology appropriate request method problem convenient official convenient access verbose", "pypi_keywords_clean": ""}, "delimitry/asciicanvas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "ascii canvas console terminal"}, "kmike/fabric-taskset": {"git_readme_keywords": "decorator deployment framework limited syndrome fabric taskset different similar dummy untevskiy library fabric decorator module wrapped method installation possible python module example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "syndrome dummy generator decorator library possible python module single similar untevskiy method command untevskiy initial installation example deployment framework limited private method untevskiy module fabric decorator fabric taskset different initial release decorator wrapped method", "pypi_keywords_clean": ""}, "praekelt/jmbo-show": {"git_readme_keywords": "jmbo", "git_description_clean": "jmbo show app", "git_keywords_clean": "", "pypi_description_keywords": "foundation dependency template breakage datetime saturday current changelog account widespread contributor incompatible calculation dependant jonathan bydendyk refactor modifier", "pypi_keywords_clean": ""}, "Kozea/weasyprint": {"git_readme_keywords": "technical software factory weasyprint weasyprint python support license tracker documentation available pagination gorgeous statistical various awesome document document factory solution", "git_description_clean": "weasyprint converts web documents html with css svg to pdf", "git_keywords_clean": "python css pdf html converter weasyprint", "pypi_description_keywords": "technical software factory weasyprint weasyprint python support license tracker documentation available pagination gorgeous statistical various awesome document document factory solution", "pypi_keywords_clean": "html css pdf converter"}, "mozilla/jupyter-spark": {"git_readme_keywords": "tornado handler service backend progress indicator account favorite package notebook extension proxied version development project communication processing packaging configuration required install command integration package manager performance installation coverage example different extension dependency important changelog rewrote jupyter directory jupyter directory continuous integration metadata prototype information initial release jupyter nbconfig ability jupyter notebook quality removed", "git_description_clean": "jupyter notebook extension for apache spark integration", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pusher/pusher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pusher rest realtime websockets service"}, "doismellburning/chess": {"git_readme_keywords": "chess primitive primitive python checkmate python chess development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "asweigart/pyperclip": {"git_readme_keywords": "pbpaste license example platform python install inventwithpython additional pyperclip clipboard pbcopy otherwise plaintext sweigart python module linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pbpaste license example platform python install inventwithpython additional pyperclip clipboard pbcopy otherwise plaintext sweigart python module linux", "pypi_keywords_clean": "clipboard copy paste clip xsel xclip"}, "ikeikeikeike/eco": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python compiler python setup license", "pypi_keywords_clean": "javascript coffeescript eco compiler"}, "mattrobenolt/django-sudo": {"git_readme_keywords": "django python django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django python django", "pypi_keywords_clean": ""}, "PiotrDabkowski/js2py": {"git_readme_keywords": "jstype pytype mb pyjsnumber class downside reason getattr setitem indirect javascript support possible javascript virtualmachine pyimport statement esprima javascript library support course ecmascript future strict python javascript translation approach translator interpreter feature example subclass statement number getitem getattr conversion experimental javascript interpreter everything pytype jsobjectwrapper hello unicode experimental library crypto local function unexpected evaljs moreover setitem setattr current translation complex translated advanced object access vm jsobjectwrapper javascript translator array direct impossible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python js js jspy eval js implementation javascript ecma jspy eval", "pypi_keywords_clean": ""}, "/swiss": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package cleaning compression changelog support extensive refactoring tabulardata improve helper changelog py command optparse object improve documentation associated tabular processing shortenening tabular module generation object deliveranceproxy datetime py deliverance various module package txtwriter deliveranceproxy py jsonwriter interface basereader reading caching module google flexidate basewriter jsonreader", "pypi_keywords_clean": ""}, "dylanbfox/simple-django-twitter-auth": {"git_readme_keywords": "value bad add model backslash good django further order authentication simple token oauth allow customization current model following url twitter app app behalf app twitter add login twitterprofile simple good bad further compatability twitter functionality migrate publish additional setting documentation installation username user url define user twitter example secret oauth confidential view twitter attribute custom logic control auth random relationship reverse lookup twitter user flow simple twitterprofile oauth oauth token define token secret module twitter twitter profile twitter auth twitter authentication twitter option twitterprofile user application please blank password twitter new environment readme coming user twitterprofile new user explicit simple simple django additional customization access url parameter new implementation twitterprofile username user url add django define location django twitter compatability simple available protective measure oauth password default python model reverse random password twitter username following simple way django project flow login login flow template authorization", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "twitter user twitter functionality migrate new value implementation flow simple bad add publish additional twitterprofile oauth twitterprofile username setting oauth token documentation installation add django define location blank password django twitter define token secret model coming username user twitter profile available twitter authentication backslash good user twitter protective measure twitter option oauth twitterprofile user readme example password default secret oauth application confidential model reverse authentication simple view twitter token oauth random password allow customization attribute current model twitter new twitter app environment twitter username custom logic app behalf control user twitterprofile customization twitter following simple django explicit simple new user additional customization add simple way django project parameter app twitter access relationship flow template authorization twitterprofile simple good bad reverse lookup", "pypi_keywords_clean": ""}, "/django-postgresql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "specific goodness", "pypi_keywords_clean": ""}, "pklaus/wsgi-request-logger": {"git_readme_keywords": "background information cookbook documentation logging handler syslog standard library listing analysis logging license philipp gateway interface installation request logging github django software application format python logging library logging wsgilog logging cookbook general server gateway access middleware exception handling python standard", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analysis software standard library logging license format philipp documentation server gateway gateway interface background information access library logging middleware logging handler syslog exception handling python standard installation request logging general", "pypi_keywords_clean": "wsgi apache like request logging"}, "/boost": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "network mastodon", "pypi_keywords_clean": ""}, "beardsvibe/buildfox": {"git_readme_keywords": "", "git_description_clean": "minimalistic ninja generator", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "buildfox bf ninja build tool cpp"}, "tristanfisher/easyos": {"git_readme_keywords": "addition support script platform convenience dictionary relevant branch something request system information change module unlikely tedious direction", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition support script platform convenience dictionary relevant branch something request system information change module unlikely tedious direction", "pypi_keywords_clean": "os environment operating system"}, "/django-restify-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "api django", "pypi_keywords_clean": "django"}, "lashex/pyutu": {"git_readme_keywords": "pyutu python amazondynamodb amazonvpc transfer pay pyutu jrtckxetxf effectivedate sku vtdjrvhjgjpu library product offercode bmyuqtg regionid servicecode amazonec product url region sku bmyuqtg amazonsimpledb amazonglacier bmyuqtg product hour effectivedate index format hour endrange default region jrtckxetxf ysenct instance sku linux large locationtype aws appliesto beginrange operatingsystem linux host instance memory gib index file tenancy instance region memory inf priceperunit help cli linux west sku usd ratecode large service boxusage large offercode amazonec amazonec product amazoncloudfront snip location license z intel shared usagetype amazonglacier amazonec gib networkperformance amazondynamodb url snip total ghz currentgeneration large tenancy hrs total product sku general purpose large operatingsystem language ysenct appliesto issue pyutu help appropriate bash pyutu purpose instancetype demand ddb beginrange description hrs sku amazonec url usagetype usw west product gb snip awskms amazoncloudfront vtdjrvhjgjpu jrtckxetxf block bash sku wkzxbnsyaxw snip cli linux operation instance z endrange usd regionid amazonec storage region linux instancetype large instance turbo servicecode service offer cli example zsnjrwjvxm jrtckxetxf bmyuqtg jrtckxetxf unit gb format version ysenct unit wkzxbnsyaxw jrtckxetxf usw boxusage instance hour installation activate sku zsnjrwjvxm unit hrs processorarchitecture bit offer file intel turbo pyutu index usage linux ddb service west oregon verb utu v haswell moderate operatingsystem avx intel priceperunit usd shared service networkperformance moderate haswell preinstalledsw large product amazonroute amazonelasticache offertermcode jrtckxetxf gb demand linux tenancy shared tenancy tenancy shared demand linux z offertermcode aws region ratecode bmyuqtg intel avx shared instancetype oregon locationtype amazonvpc amazonsimpledb cli version publication effectivedate z endrange inf linux product secs cli pyutu product instancetype large pricing index cloud pricing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation platform unknown copyright software development implied environment classifier documentation unknown classifier classifier natural merchantability fitness subject audience software express substantial software description connection following liability contract language english distribute sublicense classifier environment classifier development warranty natural language restriction publish distribute english classifier particular purpose independent classifier francis permission", "pypi_keywords_clean": ""}, "ixmatus/inflector": {"git_readme_keywords": "spanish nouns camelize readable string sentence default parameter variablize underscored singular form useful second parameter underscored form nouns conditionalplural english version titleize function id transform string convention titleize scratch nouns camelcased underscored version humanize separate configuration database plural available inflector variablize necessary string example python initial character english number ruby pluralize unaccent spanish version uppercase parameter unaccented version ordinary foreignkey return first parameter inflector naming string conversion friendly alphanumeric character tableize welcomepage welcome plural form ordinal form underscore camelcase first character method module uppercase", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spanish nouns camelize readable string sentence default parameter variablize underscored singular form useful second parameter underscored form nouns conditionalplural english version titleize function id transform string convention titleize scratch nouns camelcased underscored version humanize separate configuration database plural available inflector variablize necessary string example python initial character english number ruby pluralize unaccent spanish version uppercase parameter unaccented version ordinary foreignkey return first parameter inflector naming string conversion friendly alphanumeric character tableize welcomepage welcome plural form ordinal form underscore camelcase first character method module uppercase", "pypi_keywords_clean": "inflector text language english"}, "jenisys/radish-parse-type": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "expression ala enumeration choice cardinality optional value enum pep unique new build status commas python enum string ala basic multiple positive primary addition convention instance license python variant own backport several block python converter function parser version color enum provide format expression textual representation equivalent module opposite number format enumeration class cardinalityfield support generic way cardinality cardinality description converter following dictionary python enumeration suffix definition scheme value mapping travis integer color converter dictionary related basic example pep choice following functionality cardinality field", "pypi_keywords_clean": "parse"}, "maartenbreddels/ipyvolume": {"git_readme_keywords": "standalone default developer installation notebook version ipython extension glyphs quiver quiver sourcecode version ipyvolume scatter argument instance particular direction command practice mybinder plotting ipyvolume currenty virtual reality glyphs scatter quiver selection ipyvolume installation example virtualenv install developer readthedocs screencast selection animation documentation homepage extension widgetsnbextension cardboard animate notebook classical anaconda webpack documentation documentation typescript compiler jupyter notebook dependend extension ipyvolume snippet stylable transpilation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "g scatter install ipyvolume ipython widget clone cd install jupyter quiver notebook figure glyphs g nbextension install nbextension enable install ipyvolume jupyter admin jupyter nbextension prefix ipyvolume screencast screencast screencast installation documentation version jupyter notebook ipyvolume documentation development installation cd ipyvolume", "pypi_keywords_clean": "ipython jupyter widgets volume rendering"}, "noxdafox/pebble": {"git_readme_keywords": "timeout support separate thread application source source documentation download travis documentation download pebble pebble running function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "timeout support separate thread application source source documentation download travis documentation download pebble pebble running function", "pypi_keywords_clean": "thread process pool decorator"}, "/pyrg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python unittest basic py testcase script color pyrgrc command install unittest result script py verbose print testcase foo configuration redgreen py python example", "pypi_keywords_clean": "unittest colorize visualize"}, "/bart-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "expectation behaviour helpful assertion regression toolkit behavioural analysis impossible regression performance primary scenario", "pypi_keywords_clean": ""}, "/slimit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "throw break key value token break var var package available nodevisitor visit visitor initial library value right master branch print property print token false return value node rjsmin sam iterate mangling handle bugfix bugfix node visitor command jsmin sam turn self lexpos id visitor installation deb package history bug token value minify text i var return bar optimization foo unreachable code keyword token lextoken parser added bar added prop foo baz right prop fix unary modify javascript fix slimit token lexpos value class initial public slimit import baz bar value value public version support bug import astvisitor lineno token different optimization fix class print minify option mangle global scope added command default text var class myvisitor parse text value token foo function def visit package bug hello print jquery bug visit object foo bar project lexer lexer function variable visitor myvisitor hello var input token license lexer input speed sam roadmap simple identifier javascript parser self visit return baz myvisitor astvisitor value key object literal printer added myvisitor visitor original jquery nodevisitor import statement eval var key library api node lextoken id fix added syntax error baz return bar foo var function id lextoken minification print awesome fix simple var b edge version lexer print slimit parser value visit parser lexer javascript lexer custom node prop right key key bugfix added form import nodevisitor parser import return foo import parser added minifier instance hello hello text visitor prop parser added support self node obj return visit prop value hello mangling minify node visit python support dependency object self lextoken number official deb space value property type token lexer token bar something javascript minifier property key change history bleeding edge var hello distribute package lex added optimization fix fix slimit sam sam rjsmin astvisitor def simple constant fix syntax foo return section multiline implementation token lineno fix bugfix unary op awesome javascript isinstance node parser parse var i result added node compact code minify break print added javascript slimit lexer text mangle bugfix division function obj sam jsmin slimit documentation token method lexer import lexer identifier output printer visitor visit node value several parser parser lexer import many grammar yacc var foo return false bar consecutive python mangle toplevel baz foo token type right value token token something bug fix astvisitor text right print bar baz ternary expression return throw token lexer different minifier added number lextoken welcome fix bug sam jquery block import minify", "pypi_keywords_clean": ""}, "astorfi/speechpy": {"git_readme_keywords": "package please library python dramatic jpg width way extreme useful library question container processing install required organized way interested general official project portion conceptual further script suggestion contribution please processing operation supported elaborate collection project documentation developer improvement pull installation technical signal request related repository block shell repository directory pypi typos please target speechpy width mfcc identification technology stacked accurate request add speechpy filterbank observation related function block python feature vector contributing energy environment cubic permission project please feedback section feedback please package build pull request reposity science foundation possible significant difference global cepstral generated please available mfccs speech frequent associated python python speech frequency cepstral variance normalization following different mfccs filterbank welcome source project citation pipeline jpg technology research interface channel install example national science speechpy official", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/balanced": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python render tutorial documentation x balanced request documentation directory executable documentation template feature branch marketplace definition request installation following definition scenario", "pypi_keywords_clean": ""}, "/pylibpcap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module pylibpcap packet", "pypi_keywords_clean": ""}, "Cairnarvon/uptime": {"git_readme_keywords": "python tarball platform documentation available version bunch", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "likely platform documentation module supported", "pypi_keywords_clean": ""}, "ISA-tools/biopy-isatab": {"git_readme_keywords": "", "git_description_clean": "python parser for isatab biological file format for experimental metadata", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "coleifer/djutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection documentation development", "pypi_keywords_clean": ""}, "dahlia/lazylist": {"git_readme_keywords": "package isinstance mutablesequence lazylist lambda immutable proxy import lazylist assignment recent status import sequence import mutablesequence typeerror lazylist isinstance sequence squence object function satisfy protocol lazylist object traceback lazylist import todos protocol sequence isinstance mutablesequence isinstance lazylist lazylist", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package isinstance mutablesequence lazylist lambda immutable proxy import lazylist assignment recent status import sequence import mutablesequence typeerror lazylist isinstance sequence squence object function satisfy protocol lazylist object traceback lazylist import todos protocol sequence isinstance mutablesequence isinstance lazylist lazylist", "pypi_keywords_clean": ""}, "disko/kotti-media": {"git_readme_keywords": "package suitable setting javascript current complete modern frontend extension useful deploy config multiple supported available development configure theora standard registration project plugin fallback frontend development baseline profile version production coverage virtualenv resource python application content disable fanstatic software repository mediaelementjs status playback directory document release section document welcome platform interface specific section progress uploaded compatibility disable github repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package pittman geojeff suitable setting javascript current complete backward incompatible extension deploy config useful multiple supported available development configure theora standard registration project variable cazino support plugin fallback documentation frontend development rationale baseline profile version loading performance production coverage virtualenv python application content disable fanstatic software repository mediaelementjs overriding status populator unnecessary playback directory document particular release initial verify support configurable bugfix bugfix respect section document initial release storage delivery context release welcome platform chapter external resopurce specific interface section template backward compatibility progress related uploaded compatibility disable github repository", "pypi_keywords_clean": "video audio medialementjs kotti cms pylons pyramid"}, "1stvamp/marked": {"git_readme_keywords": "introduction formatted content flexible markup excellent library library installation utility permissive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction formatted content flexible markup excellent library library installation utility permissive", "pypi_keywords_clean": ""}, "kiliankoe/dvb": {"git_readme_keywords": "package current downside library construction favorite available dresden installation helmholtzstrae kattner maxkattner koeltzsch kiliankoe carthage transport particular something necessary maxkattner license unofficial further example detailed information convenience function published language monitor specific request coordinate significant overhead", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "helmholtzstrae unique nuernbergerplatz collection search public transport dresden public transport system documentation forgiving dvbpy something helmholtzstrasse nrnberger address network accessible behavior unofficial python python monitor", "pypi_keywords_clean": "dvb vvo tram bus public transport dresden"}, "/blockdiagcontrib-square": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "see blockdiag blockdiag", "pypi_keywords_clean": "diagram generator"}, "jaberg/skdata": {"git_readme_keywords": "project foundation language processing inspiration checkout install install documentation standardized popular computer national several guidance learning library installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard foundation language processing awkward national empirical computer library", "pypi_keywords_clean": ""}, "enthought/envisage": {"git_readme_keywords": "original developer python machinery status envisage project application framework functionality someone similar extensible application extension envisage framework respect eclipse supported standard mechanism envisage extensible", "git_description_clean": "envisage is python based framework for building applications whose functionalities can be extended by adding plug ins", "git_keywords_clean": "", "pypi_description_keywords": "original developer project plug machinery status envisage project functionality application framework someone similar extensible application eclipse extension envisage framework respect plug standard mechanism envisage extensible", "pypi_keywords_clean": ""}, "dimagi/sqlagg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/compatibility-lib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "product compatibility server install compatibility server official library disclaimer build", "pypi_keywords_clean": ""}, "23andMe/yamale": {"git_readme_keywords": "equality way string valid structure addition validator support child single other external include yyyy mm validated string version keyword string string validator schema valid key keyword commit python regular install pip program address method workaround pip manual schema schema default included vector syntax download yamale optional value null value valid yamale usage command extra external union good luck optional install contain freeform additional matching regular expression correct python entire string identical digit recursion schema example equivalent schema number invalid yamale beginning document current directory ipv friendly description whitespace character pattern match integer external complex schema schema yamale own custom reading introduction mm ss message newline validation examples valid include form validator basic valid ipv first document instance ipv validation newline examples yamale install similar examples custom manual download yamale yamaletestcase string pattern null regular valid value mm dd multiple python globs optional string default yamale multiline yamaletestcase example temporary dictionary unzip python python valid nothing examples section contain ruamel minimum current spec character possible examples value force ipv boolean several reject yamale syntax dd hh look ipv address insensitive manner basic schema directory yamale ya example string advanced topic include validator value examples hh mm validator example excluded value yamale schema listed pass", "git_description_clean": "a schema and validator for yaml", "git_keywords_clean": "yaml schema python", "pypi_description_keywords": "equality way string valid structure addition validator support child single other external include yyyy mm validated string version keyword string string validator schema valid key keyword commit python regular install pip program address method workaround pip manual schema schema default included vector syntax download yamale optional value null value valid yamale usage command extra external union good luck optional install contain freeform additional matching regular expression correct python entire string identical digit recursion schema example equivalent schema number invalid yamale beginning document current directory ipv friendly description whitespace character pattern match integer external complex schema schema yamale own custom reading introduction mm ss message newline validation examples valid include form validator basic valid ipv first document instance ipv validation newline examples yamale install similar examples custom manual download yamale yamaletestcase string pattern null regular valid value mm dd multiple python globs optional string default yamale multiline yamaletestcase example temporary dictionary unzip python python valid nothing examples section contain ruamel minimum current spec character possible examples value force ipv boolean several reject yamale syntax dd hh look ipv address insensitive manner basic schema directory yamale ya example string advanced topic include validator value examples hh mm validator example excluded value yamale schema listed pass", "pypi_keywords_clean": ""}, "duointeractive/seacucumber": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "numeric full traditional service upgrade verified address message delivery error emails backend maximum setting private sufficient second domain example excellent simple attractive status unmaintained setting example celery configuration provider celery author bound traffic install limit unreliable django builtin interactive additional pydkim package celery level domainkey example issue tracker change default quota optional installation order whitelist blacklist example django public ownership delivery success amazon simple server failure authentication celery builtin xxx django period emails command such maintaining verified domain cucumber record high volume record zoneid address verification account inbox following general celery celery harry different portion python library client interface celery unhappy unaware authorization xxxxxxxxxxx problem included management django celery py botoservererror management command", "pypi_keywords_clean": ""}, "jayvdb/coverage-env-plugin": {"git_readme_keywords": "coverage configuration coverage plugin environment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "addisonlynch/iexfinance": {"git_readme_keywords": "sentiment compensation example compatibility mutual account financial corporate desired multiple historical iexfinance analysis instantiation argument support variable passing documentation install available version performance toolkit license copyright institutional statement availalbe authentication release development repository various architecture function following contact copyright addison environment variable ownership analyst twitter license version default", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sentiment compensation example compatibility mutual account financial corporate desired multiple historical iexfinance analysis instantiation argument support variable passing documentation install available version performance toolkit license copyright institutional statement availalbe authentication release development repository various architecture function following contact copyright addison environment variable ownership analyst twitter license version default", "pypi_keywords_clean": "stocks market finance iex quotes shares currency"}, "pmatiello/python-graph-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python graphs hypergraphs networks library algorithms"}, "/mockldap-fork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python project server useful replacement", "pypi_keywords_clean": "mock ldap"}, "tylerwince/flake8-bandit": {"git_readme_keywords": "security testing right workflow bandit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "security testing right workflow bandit", "pypi_keywords_clean": ""}, "/pywebhdfs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "build status current python status pywebhdfs package documentation directory checksum project documentation documentation build available python hdfs append directory directory delete pywebhdfs build directory status option hadoop webhdfs initial release python wrapper manner consistent local machine purpose", "pypi_keywords_clean": ""}, "tanyaschlusser/array2gif": {"git_readme_keywords": "ising ising width px convert numpy level function random single color animation python installation middle numpy array second library pixel block python arraygif convert example magnetization", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "width px convert numpy random numpy array second release history obvious library chrome possible valid addition changelog release original ordering level function single function single documentation python installation ordering initial global block python difference entire animation version middle d numpy example height animation c separate palette global palette initial release integer dataset arraygif convert magnetization", "pypi_keywords_clean": "arraygif animated gif encoder numpy rgb"}, "nathforge/validatesns": {"git_readme_keywords": "validate integrity contribute validatesns validate message licence filesystem database cryptographic signature amazon maximum lifetime performance wherever validatesns validationerror invalid validatesns function signing certificate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "validate integrity contribute validatesns validate message licence filesystem database cryptographic signature amazon maximum lifetime performance wherever validatesns validationerror invalid validatesns function signing certificate", "pypi_keywords_clean": ""}, "/question": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interview exercise", "pypi_keywords_clean": ""}, "/pyleus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management storm import yaml change apache license directory code reference license topology code class dummyspout first spout dummy spout host exclamation serializer pass output stream bolt let topology topology spout class block none main dummyspout try documentation messagepack machine pyleus local layout simple storm documentation exclamation topology aware develop status block yaml storm cluster jar submit spout py myuser tmp possible pyleus host path host jvm io tmpdir submit storm nimbus kill nimbus status master url reference default local debug pyleus list import spout path pypi index pyleus note jar list status develop host kill develop master example topology init python framework dummybolt simplebolt init py specific help main dummybolt first topology change install list nimbus block shell shell pyleus py pyleus index url directory tree hit configuration cluster code simplebolt class local exclamation submit topology host topology tmpdir home pyleus kill license version topology many configuration submit nimbus only yaml pyleus topology block python none storm master status please dummyspout spout first bolt topology please environment import simplebolt single bolt pyleus command config topology yaml yaml pyleus class dummybolt master develop storm apache simple yaml topology pyleus home myuser pypi code kill topology home directory dummy bolt topology jar single spout pyleus pyleus pyleus storm pyleus submit topology layout bolt py py dummy local path available simple topology code block several version apache command specific apache storm clone pyleus license pyleus detailed tutorial directory help write idiomatic python following code messagepack documentation kafka spout interface please refer local machine install pyleus many pyleus nimbus host", "pypi_keywords_clean": ""}, "mitya57/python-markdown-math": {"git_readme_keywords": "standalone mathjax configuration default javascript pypi install extension html preview standard mathjax library support configuration command configuration option available version markdown documentation example dollar delimiter extension configuration unavailable python markdown installation install markdown installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standalone mathjax configuration default javascript pypi install extension html preview standard mathjax library support configuration command configuration option available version markdown documentation example dollar delimiter extension configuration unavailable python markdown installation install markdown installation", "pypi_keywords_clean": ""}, "/django-rest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bitmazk/django-development-fabfile": {"git_readme_keywords": "project python django development project deployment bottom fabric python please necessary development fabfile fabfile fabfile installation following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project python django development project deployment bottom fabric python please necessary development fabfile fabfile fabfile installation following", "pypi_keywords_clean": "django fabric development environemnt deployment"}, "/aliyun-python-sdk-ecs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python sdk documentation official software python application application library module software development", "pypi_keywords_clean": "aliyun sdk ecs"}, "non-Jedi/gyr": {"git_readme_keywords": "asynchronicity functionality d helpful wrapper installation please normal client similiar abstraction active development necessary functionality welcome installation instance present appservice framework matrix application available several server application virtualenv example upstream python framework matrix python server development recommend python appservice python application anyone building client server application instance service framework manipulation application service matrix commandline cadair python different project d specific request confused status further bunch existent documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "helpful wrapper normal client similiar recommend abstraction necessary functionality project instance present matrix application available several commandline status server application example virtualenv upstream python server matrix python confused installation functionality anyone building client server application instance manipulation application service matrix different welcome specific request further bunch existent documentation", "pypi_keywords_clean": "matrix chat falcon wsgi application service"}, "/pysnmp-mibs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package ietf collection pysnmp mibs", "pypi_keywords_clean": "pysnmp mib smi"}, "jsommers/pytricia": {"git_readme_keywords": "patricia material standard pythonic default python pytricia structure copyright length science foundation behavior prefix comparative ghz useful building building library address lookup obvious ubuntu python module license version class behavior similar possible instance pysubnettree pytricia object author present python advice lookup behavior network standard dictionary indexing operation insertion lookup operator implement operand performance example network prefix important software removal general public arbitrary particular lookup module building pytricia february system ubuntu maximum number public license convenience couple different integer individual address quality program plonka access prefix length method related matching prefix optional parameter national science pytricia", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "patricia license version documentation related structure library performance general pytricia", "pypi_keywords_clean": "patricia tree"}, "/pyresample": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standalone implementation interpolation pyresample multiple resampling support resampler documentation geographic projection available reprojection resampling geospatial process geometry bilinear bilinear interpolation neighbor elliptical information resampling algorithms approach pykdtree pyresample pyresample development utility elliptical weighted", "pypi_keywords_clean": ""}, "ome/omego": {"git_readme_keywords": "microscopy environment install command installation possible environment argparse", "git_description_clean": "ome go installation and administration tool for ome applications", "git_keywords_clean": "ome install tool", "pypi_description_keywords": "microscopy environment install command installation possible environment argparse", "pypi_keywords_clean": ""}, "python-odin/odin": {"git_readme_keywords": "contributor malcolm minimal installable message documentation coverage validate complex community msgpack builtin declarative framework optional simplejson extension contrib restful interface complete documentation development license support validation fallback library development documentation generation influence malcolm tredinnick notable contributor available integration pyyaml example django resource serialisation django integration functionality document colleague sqlalchemy physical definition different composite library msgpack special", "git_description_clean": "data structure definition validation traversal mapping and serialisation toolkit for python", "git_keywords_clean": "python validation data structures data mapping serialize de serialize json csv msgpack xml yaml", "pypi_description_keywords": "contributor malcolm minimal installable message documentation coverage validate complex community msgpack builtin declarative framework optional simplejson extension contrib restful interface complete documentation development license support validation fallback library development documentation generation influence malcolm tredinnick notable contributor available integration pyyaml example django resource serialisation django integration functionality document colleague sqlalchemy physical definition different composite library msgpack special", "pypi_keywords_clean": "data structure validation data mapping"}, "ajtowns/odictliteral": {"git_readme_keywords": "python combination ordereddict way odictliteral replacement compatible example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python combination ordereddict way odictliteral replacement compatible example", "pypi_keywords_clean": ""}, "Stranger6667/postmarker": {"git_readme_keywords": "backend tornado support postmarker tornado helper library support single available check version python example django python support status directory repository python coverage status postmarker delivery transformation jython bounce inbound installation postmarker documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "backend tornado support postmarker tornado helper library support single available check version python example django python support status directory repository python coverage status postmarker delivery transformation jython bounce inbound installation postmarker documentation status", "pypi_keywords_clean": "postmark api client email"}, "/metamindapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "metamind api"}, "hsoft/sphinx-autodoc-annotation": {"git_readme_keywords": "argument precedence cumbersome needless documentation docstring specific description extension redundant autodoc annotation installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "argument precedence cumbersome needless documentation docstring specific description extension redundant autodoc annotation installation", "pypi_keywords_clean": ""}, "zacharyvoase/cssmin": {"git_readme_keywords": "python compressor command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ad-m/python-anticaptcha": {"git_readme_keywords": "recaptcha example versioning several recursive python compatibility proper operation automated training library responsible dobrawy initial analysis python anticaptcha support integration example anticaptchaexception exception available integration gitter introduction provide standard python invisible captcha example funcaptcha example application documentation anticaptcha system started incorrect something possibility various access control project license repository contact reliability captchas parameter effective operation visible offensive handling section address compatibility introduction python package captcha example snippet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "recaptcha example versioning python compatibility report incorrect proper operation library responsible dobrawy initial md license python anticaptcha support integration example anticaptchaexception exception available integration gitter introduction standard python python report captcha example funcaptcha example application server full integration documentation anticaptcha started something possibility various access control project license repository contact captchas effective operation offensive handling section address compatibility introduction python package python custom license md example snippet", "pypi_keywords_clean": "recaptcha captcha development"}, "bodylabs/baiji-serialization": {"git_readme_keywords": "project license tracker github bodylabs source connection welcome support serialization production development license version", "git_description_clean": "read and write common file formats to amazon and local files", "git_keywords_clean": "", "pypi_description_keywords": "project license tracker github bodylabs source connection welcome support serialization production development license version", "pypi_keywords_clean": ""}, "/cloudify-dsl-parser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Simplistix/mailinglogger": {"git_readme_keywords": "mailinglogger python documentation travis development", "git_description_clean": "enhanced emailing handlers for the python logging package", "git_keywords_clean": "", "pypi_description_keywords": "mailinglogger package important process protection framework authentication configurable customisable excessive configurable following", "pypi_keywords_clean": "logging email"}, "novopl/sphinx-refdoc": {"git_readme_keywords": "generated reference python reference sphinx documentation invocation reference documentation development argument required package structure sphinx py example documentation directory directory structure directory documentation generator subdirectory inclusion marker toctree generated parameter marker installation block shell navigation module sphinx reference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generated reference python reference sphinx documentation invocation reference documentation development argument required package structure sphinx py example documentation directory directory structure directory documentation generator subdirectory inclusion marker toctree generated parameter marker installation block shell navigation module sphinx reference", "pypi_keywords_clean": ""}, "vpelletier/pprofile": {"git_readme_keywords": "mode long run same path whole process join join deterministic profiling def wait lineprofiler usage line demo profiled code sleep def effect current code run prof sys stdout flag self whole profiled start e zip file other thread annotated code def somehotspotcallable addition func func generated archive e pass bootstrap inner time import bootstrap self previous point sys e advanced usage simultaneous multi profiling class run self ipc mechanism current process module code file total join call profiled demo granularity thread enable profiling non intrusive self flag interrupted line standard profiling self target func time start start py run option process level init e time end statistic demo function robert end time exclude syspath default ie non null file dual start pprofile signal handler py profiling profiling mode py init call e portable call stack track call aware profiling result profiler profiler overhead normal url profiling result aware deterministic subset see robert kern file usr recursion cost recursive code cachegrind statistic profiling other ipc kcachegrind duration line py generated pprofile format executable arg difficult def start func busy call time profiling use profiler python level granularity pypy difficult thread profiling etc example pass e hit count line granularity source zip zip demo func e output mode wait call end pass attractive technical e demo pprofile profile use relative call return multi thread callgrind thread target file kern lineprofiler usage see current thread time def pprofile default import pprofile wait self opinion performance prof annotate usable output number wait def call usr timeout call basename code modification pprofile demo different machine e start busy loop wait timeout percentage def bootstrap time e function kcachegrind qcachegrind few overhead part use deterministic pprofile exclude callgrind format readable output time sleep command pprofile overhead pprofile issue code path python executable inner call target func args self join file null hit default mode code import value execution trivial example py total start func line level profiler line import sys def someotherhotspotcallable def func e join inner def depth non code statistic demo self run hit source self self yes self args run call reason python code usr env python time etc py join human readable execution time py func timeout none case start call debug def python standard func call useful output py command choice bin env individual callable output pprofile command line stdout file somehotspotcallable def single thread call demo func prof convenient pprofile prof pprofile code profiling sleep call pprofile def start self context first line callable first code run self kwargs small profiling granularity concurrent thread aware module arg py callgrind e def result statistic data set cpu time usr bin prof start file demo enough target self profiling single return exception specific same code source code annotate sys total duration qcachegrind self bootstrap module zope service code def kwargs call problem sum prof func module import see code none waiter allows code e inner self time time python import current callstack lib python join e join note large overhead zope normal import time usr lib downside join prof extension reason decrease rule visible thread nice alternative detailed possible python module duration file ie python intrusive profiling func pass checkout system wide def run code python profiling recursive pprofile import py file profiling overhead e end sense unintended such execution profile code installation value func start func join thumb code import profiling line profiler time hot spot pprofile statistic readability decrease pure python ex daemon format callgrind notion pass single identifiable profiled application sleep e result readability profiler kcachegrind profile code human py bootstrap unexpected self timeout information python profiler file duration profile real py wait e import technical challenge level profiling py start cost mode pprofile statistic pure callable level profiled execution profiling profiling", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mode long run same path whole process join join deterministic profiling def wait lineprofiler usage line demo profiled code sleep def effect current code run prof sys stdout flag self whole profiled start e zip file other thread annotated code def somehotspotcallable addition func func generated archive e pass bootstrap inner time import bootstrap self previous point sys e advanced usage simultaneous multi profiling class run self ipc mechanism current process module code file total join call profiled demo granularity thread enable profiling non intrusive self flag interrupted line standard profiling self target func time start start py run option process level init e time end statistic demo function robert end time exclude syspath default ie non null file dual start pprofile signal handler py profiling profiling mode py init call e portable call stack track call aware profiling result profiler profiler overhead normal url profiling result aware deterministic subset see robert kern file usr recursion cost recursive code cachegrind statistic profiling other ipc kcachegrind duration line py generated pprofile format executable arg difficult def start func busy call time profiling use profiler python level granularity pypy difficult thread profiling etc example pass e hit count line granularity source zip zip demo func e output mode wait call end pass attractive technical e demo pprofile profile use relative call return multi thread callgrind thread target file kern lineprofiler usage see current thread time def pprofile default import pprofile wait self opinion performance prof annotate usable output number wait def call usr timeout call basename code modification pprofile demo different machine e start busy loop wait timeout percentage def bootstrap time e function kcachegrind qcachegrind few overhead part use deterministic pprofile exclude callgrind format readable output time sleep command pprofile overhead pprofile issue code path python executable inner call target func args self join file null hit default mode code import value execution trivial example py total start func line level profiler line import sys def someotherhotspotcallable def func e join inner def depth non code statistic demo self run hit source self self yes self args run call reason python code usr env python time etc py join human readable execution time py func timeout none case start call debug def python standard func call useful output py command choice bin env individual callable output pprofile command line stdout file somehotspotcallable def single thread call demo func prof convenient pprofile prof pprofile code profiling sleep call pprofile def start self context first line callable first code run self kwargs small profiling granularity concurrent thread aware module arg py callgrind e def result statistic data set cpu time usr bin prof start file demo enough target self profiling single return exception specific same code source code annotate sys total duration qcachegrind self bootstrap module zope service code def kwargs call problem sum prof func module import see code none waiter allows code e inner self time time python import current callstack lib python join e join note large overhead zope normal import time usr lib downside join prof extension reason decrease rule visible thread nice alternative detailed possible python module duration file ie python intrusive profiling func pass checkout system wide def run code python profiling recursive pprofile import py file profiling overhead e end sense unintended such execution profile code installation value func start func join thumb code import profiling line profiler time hot spot pprofile statistic readability decrease pure python ex daemon format callgrind notion pass single identifiable profiled application sleep e result readability profiler kcachegrind profile code human py bootstrap unexpected self timeout information python profiler file duration profile real py wait e import technical challenge level profiling py start cost mode pprofile statistic pure callable level profiled execution profiling profiling", "pypi_keywords_clean": ""}, "BKTO/bnlp3": {"git_readme_keywords": "version natural language language processing", "git_description_clean": "better natural language processing collection of open source nlp methods used by better know the opposition", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "nlp"}, "gunthercox/iot-analytics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "program structure storage integration possible structure program communication apparent check analysis figure collection support database integration example installation performance coverage solution everything package version miceli tangible meaningful roadmap installation project discovery", "pypi_keywords_clean": "iot analytics"}, "/topp-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "uninstall package memorycache acquisition useful project software library abspath makedir platter persistence memory filesystem abspath workingenvs truncate python config configmap truncater staticmethod current environment factory prettydate interface planning project introspection beautifier python package classmethod", "pypi_keywords_clean": "topp openplans"}, "maxweisspoker/simplebitcoinfuncs": {"git_readme_keywords": "download hierarchical deterministic anything transaction scripting useful handful library standard library ubuntu consider similar future output vitalik buterin representation clarification freedom version public homebrew python software atrocious keyword bitcoin transaction benefit consider sloppy stealth address repository function complete rewrite library installation ability common bitcoin current knowledge", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "bitcoin"}, "Fandekasp/django-sphinx-autodoc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "virtualenv good directory external master command extension project directory document default master document django sphinxdoc class excluded apps project website generate generate autodoc application index documentation default good combinaison installed sphinx django different big external application apps write relevant stuff autodoc py exclude default django sphinx sphinx autodoc pythonpath django command autodoc django internal application filename", "pypi_keywords_clean": ""}, "TeamHG-Memex/sklearn-crfsuite": {"git_readme_keywords": "sklearn crfsuite g joblib license validation hyperparameter hyperparameter optimization crfsuite wrapper documentation sklearn interface hyperiongray joblib crfsuite compatible estimator selection version coverage", "git_description_clean": "scikit learn inspired api for crfsuite", "git_keywords_clean": "", "pypi_description_keywords": "robust descriptor hyperparameter optimization g validation hyperparameter support documentation crfsuite wrapper available compatible estimator optional coverage exception dependency tutorial incompatible attribute joblib crfsuite crfsuite formatting selection initial function joblib license interface", "pypi_keywords_clean": ""}, "relekang/python-thumbnails": {"git_readme_keywords": "python lekang other python django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python other python django flask install build status rolf status coverage status documentation coverage status documentation status", "pypi_keywords_clean": ""}, "/oerplib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generated documentation software openerp license oerplib documentation directory available oerplib documentation generator block python support python version python module", "pypi_keywords_clean": "openerp odoo server client xml rpc xmlrpc net rpc netrpc oerplib communication lib library python service web webservice"}, "/webapp2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subdomain simplicity several optional internationalization complete description dispatching mechanism response lightweight flexible dispatching framework compatible exception", "pypi_keywords_clean": ""}, "vandersonmota/model-mommy": {"git_readme_keywords": "powerful status simple vanderson version install block console django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "powerful status simple vanderson version install block console django", "pypi_keywords_clean": "django testing factory python"}, "hsolbrig/yadict-compare": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dictionary comparison", "pypi_keywords_clean": ""}, "/django-caching-app-plugins": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lambdamusic/ontospy": {"git_readme_keywords": "description ontospy separate library youtube interactive environment command accessible github application lightweight python schema semantic ontology functionality documentation ontospy ontospy python workflow repository python library inspection interface module ontodocs ontology documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "description ontospy separate library youtube interactive environment command accessible github application lightweight python schema semantic ontology functionality documentation ontospy ontospy python workflow repository python library inspection interface module ontodocs ontology documentation", "pypi_keywords_clean": "ontology semantic web linked data rdf owl"}, "sovaa/activitystreams": {"git_readme_keywords": "json implementation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "activity", "pypi_keywords_clean": "activitystreams"}, "ncouture/mockssh": {"git_readme_keywords": "installation mockssh python mockssh interest comparison result possible mignanti installation project threaded version configuration available mockssh functionality python server honeypot threaded mockssh overview mockssh server directory something python hylang automation approach program operating access mocksshy directory py purpose reactor hylang", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "automation honeypot threaded version interest operating mignanti mockssh available mockssh", "pypi_keywords_clean": "ssh server emulation ssh server testing mock ssh script ssh"}, "spyder-ide/conda-manager": {"git_readme_keywords": "status circleci changelog issue scrutinizer project license license build status pyqt pyqt appveyor status license pypi friendly graphical conda install qt application graphical user circleci status package manager issue tracker travis status coverage scrutinizer license txt application license spyder plugin status travis version gitter quality license pypi version removal install conda status coverage gitter travis management update conda package conda spyder app spyder changelog update downgrade user interface manager conda circle installation conda manager spyder status appveyor description conda appveyor build license installation downgrade installation conda manager", "git_description_clean": "graphical conda package manager", "git_keywords_clean": "", "pypi_description_keywords": "scientific python download changelog issue license license build status spyder application friendly graphical project license install package manager python development issue tracker python version version development environment application license application spyder plugin number version build removal management update manager spyder changelog update downgrade status license manager spyder travis status description interface license installation downgrade installation", "pypi_keywords_clean": "qt pyqt pyqt pyside conda conda api binstar"}, "jbittel/base32-crockford": {"git_readme_keywords": "check symbol encoding version convert encoded symbol invalid symbol validation pronounceable support version crockford python argument present install normalization normalize symbol counterpart compact crockford normalize readability optional installation l douglas crockford normalized python support encoding example import version initial upper decoding check changelog version machine readable function sensitive parameter alternate checksum decoding resistant normalization changelog", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "readability sensitive encoding alternate decoding compact readable crockford resistant pronounceable douglas crockford", "pypi_keywords_clean": ""}, "JelteF/pylatex": {"git_readme_keywords": "pdf extensible interface documentation functionality pylatex copyright fennema library picture figure license copyright travis license installation impression pylatex travis", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pdf extensible interface documentation functionality pylatex copyright fennema library picture figure license copyright travis license installation impression pylatex travis", "pypi_keywords_clean": ""}, "Azure/msrestazure": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parameter remove release history operation algorithm vm token version bugfix class clouderror breaking support version optional version autorest python client resourcemanagementclient msrest changelog issue version other cloudmetadata endpoint operation version provider registration mistake cloud client required attribute azureoperationpoller version add timeout polling china cloud long running remove client token attribute version update serviceprincipal msrestazure adalerror handling gov login login endpoint cloud environment stability breaking change algorithm version return china daemon baseclass directory import fix boundary compatible dependency ad future msrest msiauthentication disclaimer parameter authentication resource add cloud add adalauthentification unused remove tenant msrest series imds endpoint service default contribution version empty location endpoint update patch series experimental login endpoint fix basic scenario version new location autorest async refreshtoken sdk implementation vcrpy fix own old python client runtime change async version feature manager version cloud object documentation contribution offline http version behaviour header autorest remove possible version initial source package government cloud timeout version system attribute session improvement token session insensitive keyring parameter sdk client add support remove available msiauthentication connection verification fix couple informative direct breaking bugfix remove bugfix fix history version strategy token polling installed update message clear keyring token minimal dependency parser breaking device useless kwarg cloud example response token method block bash endpoint parser german fix session msiauthentication version add additionalinfo resource manager imds support keyring dependency cloud import status method retrieve session msrest version azurestack library version patch bug fix authentication fix adalerror feature autorest version identity detection stack connection new dependency msrest new keyvault pypi version resource import unusable first call session obj certificate issue change version vm version password webapp endpoint add dependency thank cloud definition id resource consistent odata server useless behaviour initial release azureoperationpoller method remove clouderrordata class add automatic module installation fix fix clientrawresponse replacement appservice method version validate resource package latent infinite loop asyncoperation header installation problem new authentication bug autorest bug implementation msiauthentication regression mechanism adalauthentication version polling algorithm behavior login password result azureoperationpoller thread functionnality client attribute session method logic extension resource management valid gov add adalauthentification class resourcemanagementclient mystack fix attributeerror python client version disclaimer id validate refresh token validation mystack cloud update msrest previous autorest exception message mgmt resource available customexception bash release possible infinite version msiauthentication remove token several creation version python version variable version azuresatck import resourcemanagementclient internal public class add resource id userpassword input change msrest password cloud bug fix fix clouderror fix refresh behaviour change innererror attribute federated add dependency version installed running operation msrest dependency experimental disclaimer enum token cache version change endpoint certificate call possible remove msrest thank fix azurepolleroperation resource group query active directory scenario example environment mystack", "pypi_keywords_clean": ""}, "tobyqin/xmind2testlink": {"git_readme_keywords": "package design download server please okay level default field marker testlink xmindunicode color maker optional testlink xml testlink website double result matter testcase please checkout child topic xmindunicode python valid xmindzen update requirement python sample xmind folder blank testlink maker command quick first sheet folder copy output sub topic figure structure website import installation version current topic feature browser batch application xmind thing xmindtestlink xmindtestlink flask deployment priority maker detail conversion update import xmindtestlink testlink good web design testlink sub xml button docker target ready browser simple optional first xmind xmind interface upload web server action checkout flask simple webpage xmindparser requirement priority current first sub", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "detail please default support enhancement determine convert testcase connector xmindzen priority marker documentation xmindtestlink combination support xmindzen callout empty testlink version such feature flexible handle unicode support convert comment summary convert execution potential failure action", "pypi_keywords_clean": "xmind testlink import converter testing testcase"}, "expfactory/expfactory": {"git_readme_keywords": "agnostic community deployable container respectful environment reproducible container conduct detailed conduct background development original question documentation container battery database background identifier available ordering developer interested version software important experiment library hesitate functionality maintain experiment factory factory software citation battery expfactory respect official minimum", "git_description_clean": "software to generate reproducible container with battery of experiments", "git_keywords_clean": "reproducible container psychology experiments experiment factory singularity battery expfactory", "pypi_description_keywords": "agnostic community deployable container respectful environment reproducible container conduct detailed conduct background development original question documentation container battery database background identifier available ordering developer interested version software important experiment library hesitate functionality maintain experiment factory factory software citation battery expfactory respect official minimum", "pypi_keywords_clean": "docker container reproducible behavior neuroscience experiment factory"}, "streamlink/streamlink": {"git_readme_keywords": "portable version default streaming livestreamer project tracker subscription utility available configuration streamlink streamlink documentation sponsor website twitch available purpose livestream twitch variety application content supported streaming specific installation ustream youtube welcome twitch ustream dailymotion livestream installation installation quickstart request intensive", "git_description_clean": "cli for extracting streams from various websites to video player of your choosing", "git_keywords_clean": "streamlink python livestream twitch cli streaming vlc streaming services", "pypi_description_keywords": "portable version default streaming livestreamer project tracker subscription utility available configuration streamlink streamlink documentation sponsor website twitch available purpose livestream twitch variety application content supported streaming specific installation ustream youtube welcome twitch ustream dailymotion livestream installation installation quickstart request intensive", "pypi_keywords_clean": ""}, "/django-fab-deploy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "required synccompress deploy install initial support upgrade please virtualenv management fabric nginx deploy crontab crontab module multiple folder decorator ubuntu custom project ivanov debian squeeze www brown django mihailenco standard machine standard project branch definition default option upgrade apache install fabric password argument project configuration trigger mysql lxml installation undeploy command mysql installation requirement required undeploy default username added customization password handling collection project decorator django management fabfile project structure compatible installation default django manual config upcoming django keyword argument default project custom django deployment function ubuntu apache numerous listen incompatible squeeze support uploads support management command nginx config rahmatullin mihailenco command installed argument shortcut testing permanent redirect fabric previous debian ubuntu mihailenco lxml creation detection please python support synccompress management config copying testing package lucid initial added custom release db deploy script hgrc initial release config access virtualenv debian ubuntu lucid contain instance g authorization regression source distribution module restart keyword ubuntu maverick implementation upgrade install default nginx default django possible cookie default theme documentation available server project layout callable maverick initial lenny mercurial interactive mysql mihailenco hgrc mihailenco server config django project improved mysql django example extra deploy django sqlite command command", "pypi_keywords_clean": ""}, "/django-report-builder": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django report"}, "netleibi/fastchunking": {"git_readme_keywords": "boundary warning computation splits message availability interpreter boundary chunker christoph following throughput untrusted cloud second expensive variable random example extension multiple parallel performance computation dominik leibenger random message position author random distribution generated chunk similar chunking chunking actual message computer output straightforward measurable warning chunk optional preprint performance efficient pseudo random content chunking algorithms k overview chunking splits saarland university representative window algorithm university installation different conference python library different chunk compiler correct cloud storage length computation random content source distribution example message trivial chunking strategy static chunking documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "boundary warning lemire computation splits message availability interpreter boundary chunker christoph following throughput untrusted cloud second expensive variable random example extension multiple parallel performance computation dominik leibenger random message position author random distribution generated chunk similar chunking chunking actual message output straightforward measurable warning chunk optional performance efficient pseudo random content chunking algorithms k overview chunking splits saarland university representative window algorithm university installation different python library different chunk compiler correct cloud storage length computation random content source distribution example message trivial chunking strategy static chunking documentation status", "pypi_keywords_clean": "text chunking sc static chunking cdc content defined chunking ml multi level chunking ml sc ml cdc rabin karp rolling hash"}, "python-rapidjson/python-rapidjson": {"git_readme_keywords": "performant documentation status comparison printing extension rapidjson introduction possible standard library development project argument instance license validation install available several different license status compatible performance incompatibility serialization deserialization license copyright status rapidjson encoding gaifax serialization library release wrapper priority development version repository metapensiero dictionary version documentation coercion arbitrary submodule", "git_description_clean": "python wrapper around rapidjson", "git_keywords_clean": "python json serialization json parser", "pypi_description_keywords": "parsing appveyor compatibility generic performant powershell documentation status current specific validationerror comparison maximum attempt printing extension rapidjson introduction invalid possible standard library development project argument instance correct exception license validation install jsonschema validation output available memory several different refcount handling license status several compilation compatible performance production incompatibility serialization deserialization license copyright constructor execution github status rapidjson configuration deserialize encoding rapidjson library gaifax serialization library system datetime appveyor configuration documentation refresh release wrapper priority development version repository metapensiero unreleased version function underlying function dictionary nesting nothing unpatched rapidjson schema validation version documentation intermediary conversion compiler handling interface compilation upload block coercion arbitrary relaxed generic mechanism submodule", "pypi_keywords_clean": "json rapidjson"}, "mila-udem/fuel": {"git_readme_keywords": "dumoulin dmitriy picklable itertools learning library dzmitry bahdanau serializable dmitriy serdyuk documentation shuffled sequential preprint toolkit example information picklable hesitate yoshua pipeline running following merrinboer dzmitry chorowski requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dumoulin dmitriy picklable itertools learning library dzmitry bahdanau serializable dmitriy serdyuk documentation shuffled sequential preprint toolkit example information picklable hesitate yoshua pipeline running following merrinboer dzmitry chorowski requirement", "pypi_keywords_clean": "dataset data iteration pipeline processing"}, "/pyutilib-component-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package declare component modular component detailed description declare extension project instance license framework extensionpoint pluginenvironment documentation sandia familiar environment management exception global software overview organization directory outline following component framework particular interface pyutilib component framework singletonplugin correspond interface access declare singleton", "pypi_keywords_clean": "utility"}, "/calc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mozilla/django-recaptcha-mozilla": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "praekelt foundation support django project required version mozilla recaptcha library version", "pypi_keywords_clean": ""}, "pjdelport/backports-weakref": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python weakref functionality weakref", "pypi_keywords_clean": ""}, "ojii/django-better-test": {"git_readme_keywords": "separate process cpu configuration command possible django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "separate process cpu configuration command possible django", "pypi_keywords_clean": ""}, "sphinx-contrib/sphinxcontrib-spelling": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "negligence sphinxcontrb copyright indirect distribution merchantability publicity pertaining documentation unmaintained fitness performance installation software hellmann software pyenchant connection permission consequential advertising specific pyenchant misspelled", "pypi_keywords_clean": ""}, "halfak/para": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python processing parallel processing collection halfaker advantage multiple library function intensive processing", "pypi_keywords_clean": ""}, "joeyespo/py-getch": {"git_readme_keywords": "standard message motivation discussion keypress installation install portable platform functionality request repository twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "getch portable portable getch", "pypi_keywords_clean": ""}, "/sphinx-pypi-upload3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package sphinx pypi example py build sphinx build documentation full response server directory setup cfg sphinx documentation useful sphinx source python setup py setup upload build sphinx upload following snippet setup upload documentation other pypi upload command course cfg setup py build dedicated sphinx python python documentation directory following structure arbitrary documentation structure example necessary option setup py repository default response text following command buildsphinx sphinx example example example upload sphinx build html py upload correct appropriate python package", "pypi_keywords_clean": ""}, "LudovicRousseau/pyscard": {"git_readme_keywords": "appveyor support documentation smartcard library continuous integration pyscard smartcard module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python smartcard", "pypi_keywords_clean": ""}, "pallets/flask-sqlalchemy": {"git_readme_keywords": "application support tracker install documentation common useful extension sqlalchemy block block python coverage example", "git_description_clean": "adds sqlalchemy support to flask", "git_keywords_clean": "python flask sqlalchemy flask sqlalchemy", "pypi_description_keywords": "application support tracker install documentation common useful extension sqlalchemy block block python coverage example", "pypi_keywords_clean": ""}, "arteria/django-redirect-plus": {"git_readme_keywords": "project forget redirect database release github installation django", "git_description_clean": "django built in redirect app with some extras added", "git_keywords_clean": "", "pypi_description_keywords": "project forget redirect database release github installation django", "pypi_keywords_clean": "django app redirect stats"}, "JNRowe/jnrbase": {"git_readme_keywords": "package utility functionality current attempt standard library functionality status question httplib htmltext license sutton collection endeavour documentation readthedocs develop development status mcgregor version coverage delphine minimal testcase python status travis forgotten release readthedocs jnrowe following console jnrbase problem", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package utility functionality current attempt standard library functionality status question httplib htmltext license sutton collection endeavour documentation readthedocs develop development status mcgregor version coverage delphine minimal testcase python status travis forgotten release readthedocs jnrowe following console jnrbase problem", "pypi_keywords_clean": "library support httplib"}, "/flask-urls": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection flask related", "pypi_keywords_clean": ""}, "RKrahl/distutils-pytest": {"git_readme_keywords": "package compliance download unpack installation copyright release version process download specific language apache license helmholtz zentrum materialien gmbh copyright copyright helmholtz standard library python module applicable license version install process install python documentation energie gmbh python installation change language governing installation license copyright software express system directory library package python standard", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compliance unpack installation copyright specific language apache license helmholtz zentrum materialien gmbh copyright copyright helmholtz standard library python module applicable license version install process install python documentation energie gmbh python installation change language governing installation license copyright software express system directory library package python standard", "pypi_keywords_clean": ""}, "hudsonbrendon/tweetpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Miserlou/lambda-packages": {"git_readme_keywords": "package request containing manylinux training consulting project installation useful archive misaka addition project lambda deployment support tarball appropriate directory included levenshtein available xmlsec compatible lambda project interested mongoengine support mysqlclient development training contact miserlou enterprise deterministic paradigms manifest information docker useful various popular opencv psycopg pycrypto support development cryptography", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package request containing manylinux training consulting project installation useful archive misaka addition project lambda deployment support tarball appropriate directory included levenshtein available xmlsec compatible lambda project interested mongoengine support mysqlclient development training contact miserlou enterprise deterministic paradigms manifest information docker useful various popular opencv psycopg pycrypto support development cryptography", "pypi_keywords_clean": ""}, "/simpleutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "matrix-org/canonicaljson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "canonicaljson python canonical immutable output character insignificant whitespace version sequence possible", "pypi_keywords_clean": "json"}, "pyeve/flask-sentinel": {"git_readme_keywords": "management acknowledgement extension block console project sentinel provider license database bcrypt default management block python mongodb deployment resource residing application password custom dialog browser oauthlib access section management interface interface available", "git_description_clean": "oauth server bundled as flask extension", "git_keywords_clean": "", "pypi_description_keywords": "management acknowledgement extension block console project sentinel provider license database bcrypt default management block python mongodb deployment resource residing application password custom dialog browser oauthlib access section management interface interface available", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/google-cloud-bigquery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "following infrastructure google massive platform project documentation product expensive problem hardware billing google infrastructure product documentation google bigquery library documentation authentication installation", "pypi_keywords_clean": ""}, "disqus/nydus": {"git_readme_keywords": "improvement default backend behavior configuration dictionary modulus lookup required keyword parallel partition useful possible affect support command following example included ordered numeric additional available readability toolkit internal connection clustering framework disqus db timeout connection management release db pipeline timeout password standard syntax dictionary consistent cluster function pycassa cassandra distributed connection cluster generic database pycassa", "git_description_clean": "nydus is python toolkit for managing database connections and routing operations primarily for redis", "git_keywords_clean": "", "pypi_description_keywords": "improvement default backend behavior configuration dictionary modulus lookup required keyword parallel partition useful possible affect support command following example included ordered numeric additional available readability toolkit internal connection clustering framework disqus db timeout connection management release db pipeline timeout password standard syntax dictionary consistent cluster function pycassa cassandra distributed connection cluster generic database pycassa", "pypi_keywords_clean": ""}, "ionrock/cherrypy-sqlalchemy": {"git_readme_keywords": "package request cherrypy complete sqlalchemy import sqlalchemytool sqlalchemyplugin db import import cherrypy specific db instance sqlalchemytool cherrypy database db sqlalchemytool example sqlalchemy cherrypy software session cherrypy sqlalchemy import sqlalchemytool sqlalchemy session information license documentation access cherrypy plugin import ormbase", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package request cherrypy complete sqlalchemy import sqlalchemytool sqlalchemyplugin db import import cherrypy specific db instance sqlalchemytool cherrypy database db sqlalchemytool example sqlalchemy cherrypy software session cherrypy sqlalchemy import sqlalchemytool sqlalchemy session information license documentation access cherrypy plugin import ormbase", "pypi_keywords_clean": "cp sqlalchemy"}, "yyuu/fabric-deploy": {"git_readme_keywords": "deployment overridden default application deployment service management rollback runner overview capistrano development fabric configuration yamashita fabfile production application directory structure deployment development exapmle password multistage deployment yamashita geishatokyo template", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "yuu yamashita default application deployment service management rollback runner overview capistrano author yamashita development fabric configuration py overridden deployment fabfile yamashita yuu production application directory structure deployment development exapmle password py author fabfile py multistage deployment yamashita geishatokyo template py fabfile group", "pypi_keywords_clean": ""}, "richq/cmakelint": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cmakelint", "pypi_keywords_clean": "cmake lint"}, "Princeton-CDH/pucas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility minimal distribution online celtic spirit virtualenv virtualenv secret build status account license ownership example admin whole apache license branch g default django pookas template directory enable authentication configure development standard usable template support princeton university configuration install documentation django application provided database python virtualenv available branding optional github status django coverage creation installation django default admin health install specific recursion error authentication backend configured account superuser release django admin logout command python python source repository django django initial authentication middleware reusable application convenience sample source configure license django university permission princeton docket source license search populate spirit creature py sample appropriate creature django template flow koeser provided manage provided software py", "pypi_keywords_clean": ""}, "py3minepi/py3minepi": {"git_readme_keywords": "compatibility download behaviour nieminen original excellent progress offering pyminepi ghickman bennuttall jonathanfine official approval hashbang hashbangstudio pythonic minecraft previous iteration possible pozorvlak original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility download offering pyminepi official approval pythonic original", "pypi_keywords_clean": "minecraft raspberry pi mcpi pyminepi"}, "django-helpdesk/django-helpdesk": {"git_readme_keywords": "jutda complete installation information message initial support database sqlite javascript python django postgresql copyright clause license complete documentation folder powered ticket development happy helpdesk django license support previous command available previous version server software fastcgi instance poulton jutda helpdesk python version apache installation github jquery language recommended combination python contributing january django documentation further installation unable improved documentation recommended release directory branch insensitive django support couple search function project server information licensing django django project django version ticket tracker browser mysql company contribution django powered initial configuration sqlite django helpdesk shortcoming license rdparty", "git_description_clean": "a django application to manage tickets for an internal helpdesk formerly known as jutda helpdesk", "git_keywords_clean": "django helpdesk tickets servicedesk tracker bugs support incidents cases issues python python", "pypi_description_keywords": "external helpdesk django helpdesk helpdesk management django website", "pypi_keywords_clean": "django helpdesk django helpdesk tickets incidents cases bugs track support"}, "celiao/tmdbsimple": {"git_readme_keywords": "tv season download mapping package index budget python class friend syntax installation second expensive rotten money library bourne series instance index pypi tv episode documentation database database tmdb available certification guestsession first block python github minute example popular python tmdbsimple package key click tv overview third suppose authentication certification installation tmdbsimple tv tv function matrix rtsimple wrapper account authentication object access register interface tmdbsimple wrapper updated python interpreter amount python package source section correct runtime previous sequel", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tv season download mapping package index budget python class friend syntax installation second expensive rotten money library bourne series instance index pypi tv episode documentation database database tmdb available certification guestsession first block python github minute example popular python tmdbsimple package key click tv overview third suppose authentication certification installation tmdbsimple tv tv function matrix rtsimple wrapper account authentication object access register interface tmdbsimple wrapper updated python interpreter amount python package source section correct runtime previous sequel", "pypi_keywords_clean": "movie the movie database movie database tmdb wrapper database themoviedb moviedb api"}, "log2timeline/dfdatetime": {"git_readme_keywords": "information documentation dfdatetime accuracy precision", "git_description_clean": "digital forensics date and time", "git_keywords_clean": "", "pypi_description_keywords": "precision accuracy dfdatetime", "pypi_keywords_clean": ""}, "Scifabric/pybossa-client": {"git_readme_keywords": "project argument material different natural offset approach simple python presenter template pybossa previous example server software description pybossa server advantage pagination performance develompment", "git_description_clean": "dead simple python client for pybossa", "git_keywords_clean": "pybossa python library", "pypi_description_keywords": "pybossa framework", "pypi_keywords_clean": ""}, "zorg/zorg-network-camera": {"git_readme_keywords": "package installation network network camera module tesseract module network possible utility convenience method additional optical character camera adaptor such character recognition machine application process tesseract typed handwritten necessary packard development efficiency ability edison raspberry hewlett packard module google average lighting", "git_description_clean": "a module for using network cameras with zorg", "git_keywords_clean": "", "pypi_description_keywords": "package installation network build status light module tesseract module network possible utility network additional optical character character recognition machine process status coverage necessary coverage status handwritten adaptor packard development efficiency ability edison raspberry pypi build hewlett packard module average lighting", "pypi_keywords_clean": "zorg network ip camera"}, "napalm-automation/napalm-ios": {"git_readme_keywords": "napalm", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "douglasmiranda/django-wysiwyg-redactor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package storage anything django wysiwyg awesome default django redactor upload django screenshot original decorator g datedirectoryuploader py variable js documentation django application install django upload uuiduploader example following block python python important standard uploader example storage backend handler authentication decorator application dependency amazon current server directory default config custom python upload datedirectoryuploader handler wysiwyg redactor licensing different storage branch submit lightweight wysiwyg js upload enough plugin object access block information custom storage request upload method feature branch custom authentication rackspace openstack py static", "pypi_keywords_clean": "django admin wysiwyg editor redactor redactorjs"}, "pyexcel/pyexcel-io": {"git_readme_keywords": "relevant development adviable multiple revenue array library development support command install upgrade order product please pyexcel ezodf thing setup django database virtual environment tsvz pypy complex array linux financial support situation builds please support project generic setup license install relevant please update developer database xlsbr pyexcel format installation pyexcel htmlr example pyexcel supported introduction update documentation install moban install pyexcel function loxun external plugin company sqlalchemy supported different development upgrade pyexcel xlsxr csvz library pyexcel pyexcel xlsbr acceptance criteria htmllib application update changelog brother library xlsxw pyexcel interesting individual pyxlsb introduction pyexcel relevant documentation specific contribution amount little package xlsxr pyexcel please launch extension rubric valid contribution license documentation library acceptance style please change documentation additional python directory format import backer patreon format django following reader excel format ezodf odfpy pyexcel organisation information different welcome interface block pyexcel xlsxw pyexcel", "git_description_clean": "one interface to read and write the data in various excel formats import the data into and export the data from databases", "git_keywords_clean": "excel csv csvz tsv tsvz django sqlalchemy", "pypi_description_keywords": "guideline value effect relevant development column column xlsm adviable helpful message string compression updated multiple revenue array library latter format actual value stream validation added autoload updated version updated please support content encoding other output stream command default float conversion issue xlrd xlwt equal install upgrade support mmap order diagnosis message product please updated include pyexcel ezodf thing pdf unwanted dependency available updated pdfr pyexcel setup fixed issue loaded pyexcel updated handle added yield django database virtual environment tsvz pypy encoding parameter handle specific htmlr xlrd residue folder integer comparision guide license complex input stream pyinstaller updated array updated pyexcel pyexcel pdfr default added situation financial support linux lazy loaded added updated integer string builds lxml htmllib format handle issue command added please support break updated python setup please issue xslx foreign django project single sheet generic setup install relevant please update database django sql added include xlsbr pyexcel format installation updated upgrade table production updated updated attention pyexcel htmlr supported support example pyexcel supported introduction column limit content folder pyexcel number handle issue update documentation updated change install moban enable python cstring install pyexcel insensitive setup py function sql foreign first attempted bytesio unicodewriter loxun work external company sheet sqlalchemy supported parameter library single memory power different development other encoding upgrade correct encoding database table license change pyexcel xlsxr batch developer fixed csvz library pyexcel block bash custom renderer html remove python pyexcel xlsbr choose subset added lazy pyexcel added loaded updated export custom added support pyexcel plugin skip empty service py developer guide acceptance criteria support added updated x updated performance fixed unwanted creation value added detection application guide development dependency update changelog support foreign stream updated correct stream performance boost fixed release pyexcel remove developer choose brother library remove plugin plugin loading handle mmap xlsxw pyexcel interesting handle relative individual infinity pyxlsb introduction pyexcel relevant documentation include empty support pyinstaller pyexcel xlsx contribution attempted reading amount comparision error action performance issue google parameter added stringio detect little tsvz django export package xlsx pyexcel ioerror support force engine xlsxr pyexcel please launch mechanism py updated second xlsx extension format default lazy loading rubric valid bulk added choose odsw pyexcel contribution license available diagnosis float csvz tsvz documentation library acceptance limit future pyexcel odsw style please change first such generator exception documentation additional python include license boost updated plugin interface sql bash development development guide support pagination directory format import backer lxml situation integerprecisionlosserror patreon priority memory stream manifest format django updated support following reader excel format ezodf odfpy pyexcel organisation information stdout different support additional multiple sheet welcome mmap object interface change skip updated extra py christmas break pyexcel xlsxw pyexcel", "pypi_keywords_clean": "python"}, "kofrasa/migrate": {"git_readme_keywords": "message default project directory rollback execute folder particular revision consecutive numerical install current revision migration operation revision folder directory description current timestamp revision revision language agnostic downgrade database migration configuration example preferred environment agnostic database", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database migration migration tool tool install language agnostic agnostic database", "pypi_keywords_clean": ""}, "jeffbuttars/cowpy": {"git_readme_keywords": "package python python program message parameter default program install command executable available direct derivation option original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "agermanidis/autosub": {"git_readme_keywords": "argument license subtitle generation autosub installation install activity detection recognition different language parallel automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subtitle generation speech recognition autosub activity detection different language parallel utility automatic speech", "pypi_keywords_clean": ""}, "/mediagoblin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable participate administration information texinfo different contributor developer infrastructure developer documentation documentation community directory available extensible mediagoblin original", "pypi_keywords_clean": ""}, "looking-for-a-job/osascript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "osascript installation python readme readme generator", "pypi_keywords_clean": "osascript applescript osx"}, "syarra/documenter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "py documentation", "pypi_keywords_clean": "documentation sphinx github"}, "Findus23/pylanguagetool": {"git_readme_keywords": "installation pylanguagetool syntax languagetool languagetool license latestrelease library possible default pylanguagetool configuration command support installation configargparse documentation detected attribute languagetool version privacy environment grammar support information platform documentation privacy pylanguagetool", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation pylanguagetool syntax languagetool languagetool license latestrelease library possible default pylanguagetool configuration command support installation configargparse documentation detected attribute languagetool version privacy environment grammar support information platform documentation privacy pylanguagetool", "pypi_keywords_clean": "languagetool spell grammar checker"}, "TriOptima/tri-struct": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fallback reference instantiation keyerror original different implementation example improved standard library predictable implementation frozenstruct immutable functionality keyword optional implementation interface attribute attempt documentation changelog function reference implementation", "pypi_keywords_clean": "tri struct"}, "isislovecruft/pretty-bad-protocol": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python python networked signature functionality access management encryption direct module", "pypi_keywords_clean": ""}, "Project-SILPA/soundex": {"git_readme_keywords": "phonetic algorithm console santhosh soundex algorithm installation python english soundex libindic soundex version soundex soundex module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "phonetic algorithm soundex algorithm sound module version soundex soundex", "pypi_keywords_clean": ""}, "enthought/trait-documenter": {"git_readme_keywords": "package myclass conjunction traitdocumenter documenter variable extension py traitsdoc package installation development annotation advised example", "git_description_clean": "a sphinx extention that allows traits attributes to be properly rendered by autodoc", "git_keywords_clean": "", "pypi_description_keywords": "package myclass conjunction traitdocumenter documenter variable extension py traitsdoc package installation development annotation advised example", "pypi_keywords_clean": ""}, "viraptor/wigle": {"git_readme_keywords": "project information python interface network available necessary unofficial multiple example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project information python interface network available necessary unofficial multiple example", "pypi_keywords_clean": "wigle wifi api search"}, "xflr6/fileconfig": {"git_readme_keywords": "multiple config delimited ini instance code potential travis codecov config code way class tracker download string representation inspect instance section multiple other single section delimiter subclass docs mit keyword option python format parameter method error filename default default fileconfig pattern code working directory python inheritance path subclass fileconfig issue tracker parser different delimiter transitive inheritance bash usage encoding different location attribute docs unprocessed default config code ini different parser config parser ironpython splitted python inspect python config codecov fileconfig string argument format travis license pypi idempotent code standard library package directory inheritance config instance previous overlay interpreter license constructor pypi version code bash pip top python singleton config download installation user access instance key section fileconfig pypi cached module python customization current working package singleton pattern license fileconfig code python pypi issue relative optional mit license version license different stack mask introspection section code instance creation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple config delimited ini instance code potential travis codecov config code way class tracker download string representation inspect instance section multiple other single section delimiter subclass docs mit keyword option python format parameter method error filename default default fileconfig pattern code working directory python inheritance path subclass fileconfig issue tracker parser different delimiter transitive inheritance bash usage encoding different location attribute docs unprocessed default config code ini different parser config parser ironpython splitted python inspect python config codecov fileconfig string argument format travis license pypi idempotent code standard library package directory inheritance config instance previous overlay interpreter license constructor pypi version code bash pip top python singleton config download installation user access instance key section fileconfig pypi cached module python customization current working package singleton pattern license fileconfig code python pypi issue relative optional mit license version license different stack mask introspection section code instance creation", "pypi_keywords_clean": "configuration ini file inheritance aliasing"}, "Brightcells/django-excel-response2": {"git_readme_keywords": "excel response simsum gb normal normal normal default format messy messy inherit installation response inherit messy normal tarken django normal messy normal gb utf messy installation usage utf normal messy utf response function django excel", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "normal normal default chinese disk queryset gb normal messy normal tarken django memory param utf messy httpresponse simsum format messy messy normal gb aware utf normal sequence excel response response subclass response django bug excel spreadsheet inherit installation normal messy amount problem messy utf django excel stringio library", "pypi_keywords_clean": "django excel response django excel response"}, "fugue/credstash": {"git_readme_keywords": "rhel account id next key value tl dr storage table key policy security boundary ddb table secret reader exact attacker aws key simple monthly way installation linux useful credential private key specific credential ubuntu able lexicographic once december prior support osx install required multiple aws small amount profile prod api key master key click create click encryption distribution system debian second easiest version much order encryption key key wrapping credential storage zeros monthly calculator key export aws free credential store store dynamodb key management used auto great write throughput binary kms console list known issue management tool whenever tab click minimum required following ddb credential version complex credential console tab script kms install ec instance cloudtrail mind filename wrapped encryption own version credstash quick principal management service compatibility ssl certificate config management default store credential key guid pad integer privileged new credential foo version encrypted credential december auto ddb profile dev decrypt heavy ddb secret prefixed aws identity key request version representation number whenever credential rotation error once getall additional node js readme boto botocore usual kms grant example third party recent easiest thing software number encryption context left pad ruby scala security good job bootstrap process call kms complete credential repository user password prod secure access once key party service instance boundary left click kms service provisioned write critical path lexicographical sorting setup tl pip make flag access management ddb user user group credstash compatability create kms java ruby scm install credstash php node sign example make super handy information usage aws immutable integer version place credstash python create key pycypto region credstash auto fedora kms decrypt aws simple scala php context key linux install unpadded key storage quick installation console make environment store low latency store share wrapped encrypted permission example credstash credential management version version console secret secret writer write sorting behavior load access decryption actual storage section provisioned wrapping aws amount afterthought metadata service fleet special kms key database password other management appropriate account pull request easy thing secret operation credstash character result dynamodb ansible vault encrypted store ddb secret argument aws console worried example whenever web application target deployment instance metadata deployment story bill ddb today credential value generate unique following aws identifier certificate private memory accessible optional someday building argument pass key usage alias bar kms example export version number directory unauthorized something credential such storage setup simple easy access control credstash process decrypted month aws profile information key credstash different share credential fiddle environment variable precedence credstash check service kms pycrypto call wrapping credstash new value new version web server secure hsm following command sorting error store table query kms master blog", "git_description_clean": "a little utility for managing credentials in the cloud", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ninia/jep": {"git_readme_keywords": "documented interpreter recompilation interpreted language deployment support documentation interactive primitive optional simultaneous installation building scripting assorted language different platform quality installing beforehand sandboxed", "git_description_clean": "embed python in java", "git_keywords_clean": "c java python cpython jni", "pypi_description_keywords": "documented interpreter recompilation interpreted language deployment support documentation interactive primitive optional simultaneous installation building scripting assorted language different platform quality installing beforehand sandboxed", "pypi_keywords_clean": "java"}, "SUNET/satosa": {"git_readme_keywords": "format openid multiple identity service proxy configuration attrs proxy application backend provider multiple configure configuration satosa deployment example additional docker manual google facebook hash such single identity instance please satosa please example box service provider connect provider configuration proxy satosa configurable proxy instance example federation single service configuration internal configurable proxy such proxy metadata openid connect different authentication communication possible contact satosa proxy information dynamic endpoint identity provider section request manual installation installation docker", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "occrp/countrynames": {"git_readme_keywords": "noninfringement mapping limitation scotland standard merchantability documentation software express substantial dissolved connection respective following liability lindenberg permission copyright friedrich contract distribute sublicense warranty restriction particular purpose friedrich lindenberg", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement mapping limitation scotland standard merchantability documentation software express substantial dissolved connection respective following liability lindenberg permission copyright friedrich contract distribute sublicense warranty restriction particular purpose friedrich lindenberg", "pypi_keywords_clean": "names countries iso country"}, "jiffyclub/brewer2mpl": {"git_readme_keywords": "python palettable application information supply ci matplotlib wheel status brewermpl library palettable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "defined matplotlib color information qualitative color number color browser qualitative brewermpl access module namespace available foreseeable method python package useful internet connection shortcut sequential diverging special", "pypi_keywords_clean": ""}, "tonioo/django-versionfield2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "siebz0r/moby": {"git_readme_keywords": "docker container usage moby envlist other stuff moby alt configuration reference dir arbitrary file moby current directory configuration file entry push version moby environment way block yaml entry tool example create file", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "docker container usage moby envlist other stuff configuration reference root dir arbitrary file moby current directory configuration file entry push environment way block yaml moby moby entry tool example create file", "pypi_keywords_clean": "docker moby"}, "QualiSystems/cloudshell-core": {"git_readme_keywords": "package cloudshell command community feedback backlog progress behavior request coverage submit repository orchestration utility", "git_description_clean": "core package for cloudshell python orchestration and automation", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "sandbox cloud cmp cloudshell"}, "openstack/proliantutils": {"git_readme_keywords": "readme", "git_description_clean": "utility library for managing hp proliant servers used in ironic ilo drivers", "git_keywords_clean": "", "pypi_description_keywords": "launchpad proliant python proliantutils ironic conductor launchpad installation status installation install proliantutils proliantutils ironic ironic install import install proliantutils proliantutils package iloclient object iloclient administrator various module administrator password library utility", "pypi_keywords_clean": ""}, "Simplistix/errorhandler": {"git_readme_keywords": "handler following errorhandler import import getlogger framework license virtualenv errorhandler database install errorhandler attribute errorhandler documentation import errorhandler copyright simplistix useful python standard certain installation errorhandler errorhandler example", "git_description_clean": "this is handler for the python standard logging framework that can be used to tell whether messages have been logged at or above certain level", "git_keywords_clean": "", "pypi_description_keywords": "handler following errorhandler import import getlogger framework license virtualenv errorhandler database install errorhandler attribute errorhandler documentation import errorhandler copyright simplistix useful python standard certain installation errorhandler errorhandler example", "pypi_keywords_clean": ""}, "/catkin-pkg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library information", "pypi_keywords_clean": "catkin ros"}, "pytest-dev/pytest-xprocess": {"git_readme_keywords": "default subprocess configure present install fixture command logfile example specific fixture subclass directory environment multiple external running processstarter function external experimental plugin logfile information interface specific project specific xprocess experimental startup behavior", "git_description_clean": "pytest external process plugin", "git_keywords_clean": "", "pypi_description_keywords": "default subprocess configure external process install fixture command logfile example specific fixture subclass directory environment multiple external processstarter running experimental function process environment logfile information interface specific project specific startup behavior", "pypi_keywords_clean": ""}, "shoprunner/jupyternotify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package shoprunner redistribution negligence damage threshold copyright shoprunner default carlson ncarlson htorrence shoprunner machine learning custom message extension substitute supported distribution mdagostino shoprunner copyright holder implied merchantability ipython startup configuration documentation output available modification business interruption theory boolean default middle answer feature agostino mdagostino execution license copyright ncarlson shoprunner trigger notification software limited express procurement parsingscience jupyter special exemplary fitness completion different desktop profilename binary running following running machine liability permission consequential contract following disclaimer pypiv pyv jupyter notebook notification browser browser window pyv license certain notification message desktop torrence htorrence specific indirect incidental particular purpose google incidental special possibility", "pypi_keywords_clean": ""}, "wkentaro/fcn": {"git_readme_keywords": "wish iu fwavacc implementation caffe model accuracy license readme please bibtex entry following bibtex fcnsatonce implementation project fcns fcns implementation accuracy repo research convolutional vgg model fcns implementation fwavacc model accuracy accuracy class installation inference original image accuracy accuracy original implementation inference inference baseline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "iu fwavacc implementation model file caffe model accuracy license fcnsatonce implementation fcns fcns class mean implementation accuracy repo file original mean iu convolutional vgg model fcns implementation fwavacc model fcn accuracy accuracy class installation inference original image accuracy accuracy original implementation inference inference", "pypi_keywords_clean": ""}, "joke2k/fake-factory": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package december", "pypi_keywords_clean": ""}, "brutasse/django-cbv": {"git_readme_keywords": "documentation cbvs following middleware import statement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation cbvs following middleware import statement", "pypi_keywords_clean": ""}, "/tyler": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/iati2hxl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/whs-utils-flask": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package collection single implementation enhancment resource", "pypi_keywords_clean": ""}, "/rson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "profile project version control diff", "pypi_keywords_clean": "rson json yaml configuration file"}, "jarodl/flask-github": {"git_readme_keywords": "key support value session organization check example application github flask straightforward member extension various certain installation flask github github check server example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask support", "pypi_keywords_clean": ""}, "/flask-autoindex": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application flask autoindex result awesome autoindex flask", "pypi_keywords_clean": ""}, "andrix/python-snappy": {"git_readme_keywords": "py install zlib commandline pypy cffi file compressing help snappy cruel timeit build install zlib decompress python setup pip install snappy vs timeit zlib hola mundo timeit snappy zlib compressing mundo cruel snappy compress loop zlib snappy uncompressed py support install build install python help install snappy snappy run compressing timeit snappy uncompress command bsd license revision py build snappy help file snappy stream cffi py installation snappy library zlib compress apt new bsd snappy python build python run python python snappy mac compress hola snappy compression setup py loop snappy loop timeit procedure few rpm fast python library file python commandline usage uncompressed file issue snappy cffi libstdc cffi backend vs zlib google compression library pypi pip snappy py python build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "google compression library", "pypi_keywords_clean": "snappy compression google"}, "artificilabs/trellio": {"git_readme_keywords": "python architecture framework", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "asyncio"}, "mozilla/datazilla": {"git_readme_keywords": "un service available installation database template interface datazilla possible project documentation different information indexed sphinx structure performance relational database example statistical analysis system description template schemas dedicated database information different individual webservice object architecture section readthedocs description datazilla datazilla project content", "git_description_clean": "datazilla is system for managing and visualizing data", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "madprime/vcf2clinvar": {"git_readme_keywords": "version variant database installable vcfclinvar generate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GiulioRossetti/pynotify": {"git_readme_keywords": "termination eventual stacktrace available decorator installation pynotify pynotify pynotify", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "decorator execution notifier email"}, "uw-it-aca/authz-group": {"git_readme_keywords": "default implementation group implementation authz group implementation interface django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "readme", "pypi_keywords_clean": ""}, "gawen/virustotal": {"git_readme_keywords": "documentation eicar service virus object report clone virustotal links section import import python module md sha path links public final report api key install install example virustotal public eicar click report socket stringio first parameter profile repository public api hash md handler class program object client method related report object api documentation sha sha report instance repos import", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kvesteri/sqlalchemy-searchable": {"git_readme_keywords": "sqlalchemy searchable postgresql version searchable build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fulltext declarative sqlalchemy sqlalchemy", "pypi_keywords_clean": ""}, "escodebar/django-datetimepicker": {"git_readme_keywords": "argument xdsoft datetimepicker helper default javascript external further example project template xdsoft documentation customization application installation django datetimepicker following example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "argument xdsoft datetimepicker helper default javascript external further example project template xdsoft documentation customization application installation django datetimepicker following example", "pypi_keywords_clean": ""}, "googleapis/google-cloud-happybase": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "emulation library happybase information support license welcome platform documentation helpful authentication bigtable painless started happybase underlying storage information license january authentication possible authentication document", "pypi_keywords_clean": ""}, "/django-publisher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bydendyk changelog foundation testrunner", "pypi_keywords_clean": ""}, "peterpakos/pplogger": {"git_readme_keywords": "improvement pplogger install available package pplogger module installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debug debug pplogger import improvement pplogger install available module debug message pypi package installation debug", "pypi_keywords_clean": "log logger logging helper"}, "r4fek/una-django-cassandra-engine": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "connection disconnection secondary framework support documentation database journey cassandra backend integration automatic connection relational connection cassandra installation datastax license copyright", "pypi_keywords_clean": "django cassandra engine backend driver wrapper database nonrel cqlengine"}, "rapidsms/rapidsms": {"git_readme_keywords": "development project processing support pluggable documentation interactive available version interested github coverage swappable framework background processing rapidsms rapidsms installation rapidsms architecture installed documentation documentation interface innovation", "git_description_clean": "build sms applications with python", "git_keywords_clean": "", "pypi_description_keywords": "development project processing support pluggable documentation interactive available version interested github coverage swappable framework background processing rapidsms rapidsms installation rapidsms architecture installed documentation documentation interface innovation", "pypi_keywords_clean": ""}, "csurfer/rake-nltk": {"git_readme_keywords": "modular tracker implementation automatic keyword tunable development independent keyword extraction algorithm digital equivalent complete control command developer creative integral popular keyword extraction everything appearance repository occurance individual flexibility algorithms welcome utility helpful frequency", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence modular tracker stuart automatic keyword tunable independent keyword coffee cowley extraction algorithm digital equivalent complete control command python implementation creative integral waseem feature popular keyword extraction python everything licence coverage corpus status coverage domain independent coverage status appearance status licence occurance individual flexibility algorithms utility helpful frequency", "pypi_keywords_clean": "nlp text mining algorithms development"}, "/gocept-cache": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "own cache value cache gocept property cachedatamanager somecountry store recent call finish python cache timeout cache transaction function bar volatile attribute property transactionboundcache able call count method point cache dictionary support country first self print self true print foo response return function function zip db def distance emtpy result class bar echo miss nd call drop support memoization cache memoize def write foo math import bar echo return bar attribute name call get commit cache property cached country race condition db db foo baz zodb inspect remove ad declare support bug count raise cache clear init self special return bar traceback import gocept typeerror gocept cache storage transaction abort log certain value return somecountry value country zip somecountry pin test memoized function instance class response db foo bar country somecountry method class new instance valueerror return transaction return db baz print y none last typeerror commit foo use volatile python bugfix none none call country cached point attribute transactionboundcache cache raise valueerror class country last valueerror distance name control distance self somecountry country transaction transaction abort foo setup py time sleep somecountry db class foo method import distance return hashable argument external country self y gocept transaction commit y self first argument python drop def bar sorry self zip cache attribute cache def name distance remove use zope python compatibility method memoize bar print certain timeout self self foo foo return math original import getfullargspec count def prevent race attribute decorator sorry python second time method cache def echo class point get cached cache dict import math dependency zip try class db same true def first call country method gocept cache def get timeout import cache point new zip get country db gocept echo self strange response bar cache return point echo bar function baz point point clear bar point distance def baz tuple getfullargspec access import transaction int point error import try return int print bar bar getfullargspec point y print print miss call db time time collect import time result self y cache method python declare possible return value distance tuple baz traceback i first timeout memoize zip self country traceback foo cache empty exception miss return sleep point db get return gocept dict note pypy cleanup self db use country country memoize call return self cache foo database class call last cached value attribute cache en error country zip python remove multi miss bar property class def init correct country self call cache memoize plain", "pypi_keywords_clean": "cache transaction bound zope"}, "/geobricksgeostatistics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library", "pypi_keywords_clean": "geobricks geoserver gis raster"}, "RallyTools/pyral": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package notation rendered documentation spectrum mechanism subsequent workspace package installation multiple subscription distribution standard project pythonic interface support validation documentation installation utility additional available familiar version toolkit feature installation uncomment dependency server connect rallyfire document release password description config ability suitable location central program browser template package repository module", "pypi_keywords_clean": "rally agilecentral api"}, "ceph/ceph-deploy": {"git_readme_keywords": "full expectation deploy install ssh connection qualified domain distro repository prepared disk way executing useful deploy config partition multiple distribution hostname firewall sshd config install command package manager version deploy deploy release candidate order machine admin stable release deploy additional authentication usage someone necessary skip option contained way generated automation script documentation please cluster configuration explicit address source provision error default stable package index development branch setting authenticate client configuration ssh access sensible initial osds local directory skip installation generate release repos internet access minimal infrastructure familiar example recent minimal extra puppet installation software chef puppet security alternative ssh keypair message please current directory brief overview bootstrap control commit message tracker command generic deployment ssh config deployment system remote cluster average disk g quorum initial config flag deploy admin config pull monitor creation developed deploy cluster passphrase username different release place proxy extra bureaucracy github feature regular update context juju info password environment release track config ready properly setup partition table somewhere convenient index python mds vs python package action feature request internal cluster faq minimum external client default value disk journal pull request workstation secret overhead current behavior anything package installation worried valid current default mounting actual check initial cluster simple hostname output first such public python python install thorough documentation directory right following encryption something wrong different resolvable above proper correct reachable component disk first", "git_description_clean": "deploy ceph with minimal infrastructure using just ssh access", "git_keywords_clean": "", "pypi_description_keywords": "full expectation deploy install ssh connection qualified domain distro repository prepared disk way executing useful deploy config partition multiple distribution hostname firewall sshd config install command package manager version deploy deploy release candidate order machine admin stable release deploy additional authentication usage someone necessary skip option contained way generated automation script documentation please cluster configuration explicit address source provision error default stable package index development branch setting authenticate client configuration ssh access sensible initial osds local directory skip installation generate release repos internet access minimal infrastructure familiar example recent minimal extra puppet installation software chef puppet security alternative ssh keypair message please current directory brief overview bootstrap control commit message tracker command generic deployment ssh config deployment system remote cluster average disk g quorum initial config flag deploy admin config pull monitor creation developed deploy cluster passphrase username different release place proxy extra bureaucracy github feature regular update context juju info password environment release track config ready properly setup partition table somewhere convenient index python mds vs python package action feature request internal cluster faq minimum external client default value disk journal pull request workstation secret overhead current behavior anything package installation worried valid current default mounting actual check initial cluster simple hostname output first such public python python install thorough documentation directory right following encryption something wrong different resolvable above proper correct reachable component disk first", "pypi_keywords_clean": "ceph deploy"}, "Jaza/flask-wtf-alchemy-utils": {"git_readme_keywords": "wtf alchemy field utility form", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wtf alchemy", "pypi_keywords_clean": ""}, "/pyskein": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "algorithm software pythonic interface alternative competition offering flexible algorithm offering extension various", "pypi_keywords_clean": ""}, "/impacket": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package kerberos support capture default python library description information install impacket impacket library recent release configure protocol implementation scratch ethernet linux support collection install quick network available kerberos version coverage cryptographic python impacket installing software software license impacket distribution context michael directory release unpack password secureauth following information different impacket current controller ntlmrelayx remoteregistry service object python interpreter programmatic access source following command necessary information apache software special", "pypi_keywords_clean": ""}, "/seabird": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "atention oficial package calculate initial prototype instrument variable masked header guilherme castelo public release position historical version support check added support trouble bottle dataset output available extention history cotede vocabulary version position available github manual castelo guilherme standard pattern solution project shipname dependency reference initial import format production bugfix seabird official package added several release notebooks license record binary special cnverror format several default structure guilherme castelao different pyseabird example notebooks cnvdump independent carolina python script pirata dataset minor object plugin netcdf awkward longitude cnvnc script clause sample purpose quick howto mdsum bugfix output everything refactor documentation status", "pypi_keywords_clean": "oceanography ocean data ctd tsg seabird hydrography parser"}, "dominiek/bhtsne": {"git_readme_keywords": "binary demonstration implementation installation directory external executable software package something similar result available wrapper straightforward following command installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "armooo/suds-requests": {"git_readme_keywords": "simple auth transport basic auth goodness connection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple auth transport basic auth goodness connection", "pypi_keywords_clean": ""}, "tivvit/caseinsensitivedict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "insensitive supporting", "pypi_keywords_clean": "dict dictionary case insensitive"}, "/gnp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spanish chile tanzania tanzania sweden sverige english uganda edition french polish poland edition greek decode utf magyarorszg edition edition import unidos edition nederland edition russia edition edition hungarian uganda edition polska edition pandian license poland polska portugese brazil chinese taiwan json format lebanon edition version mexico mxico region edition dutch nederland dutch belgium uganda uganda uk import arabic edition english isreal colombia edition edition serbian egypt edition arabic lebanon egypt egypt search sterreich edition english zimbabwe manuel david french belgium czech czech browsing method ethiopia edition edition vietnamese zimbabwe zimbabwe english ethiopia kong italia edition france france default available edition trkiye edition argentina edition belgium belgi suisse edition english singapore german switzerland barack russian russia indian edition article malaysia malaysia s edition import codecs chile chile location venezuela edition italy italia utf nigeria edition english canada english malaysia israel edition hungary magyarorszg ukrainian ukraine edition german english nigeria spanish mexico kong copyright edition portugese edition malayalam spanish argentina zimbabwe edition franais edition import gnp deutsch austria africa south edition ukrainian london uk edition polish codecs import schweiz edition austria sterreich australia australia moracco maroc french canada portugal edition import json edition arabic belgium belgique belgique edition brazil brasil korean south taiwan taiwan pakistan pakistan english pakistan venezuela venezuela namibia edition utf close french moracco deutschland edition botswana edition columbia colombia russia russia israel israel australia edition italian italy english edition france edition south africa edition japanese edition portuguese edition chinese greek greece deutsch deutschland edition english sverige edition malaysia edition mxico edition website edition dutch turkish turkey edition russian json json chile edition english australia english tanzania david pandian maroc edition text gnp edition gnp gnp zealand ukraine edition switzerland suisse czech republic ascii singapore singapore nederland nederland switzerland schweiz english uk uk k french senegal french france ireland ireland copyright manuel gnp google swedish sweden ethiopia ethiopia deutschland deutschland botswana botswana edition hindi edition korean english south lebanon lebanon taiwan edition search query edition spanish ukraine ukraine isreal israel python module nigeria nigeria russian ukraine africa edition portugal portugal argentina argentina canada canada spanish columbia edition turkish output available english botswana namibia namibia israel english k edition portuguese portugal edition deutsch greece greece edition czech pakistan edition french switzerland indent simple python arabic egypt edition italian brasil edition turkey trkiye canada english zealand edition belgi edition edition swedish greece edition english namibia hungarian hungary english ireland singapore edition canada franais parser gnp ireland edition tanzania edition world arabic spanish venezuela", "pypi_keywords_clean": ""}, "spyder-ide/pywinpty": {"git_readme_keywords": "package pywinpty changelog copyright include header possible project sponsor available compiler available monthly donation installation building github everything terminal library gcc compiler functionality compilation environment corresponding library pywinpty wrapper following environment following object access runtime contribution compilation problem question channel", "git_description_clean": "python bindings for the winpty pseudo terminal library", "git_keywords_clean": "python winpty pty console wrapper bindings windows", "pypi_description_keywords": "", "pypi_keywords_clean": "winpty pty pseudoterminal pseudotty"}, "willseward/django-custom-field": {"git_readme_keywords": "default result financial class schooldriver shortcut gratitude additional flexibility project helper support information credit install django boolean inception applicant faculty optional installation creation example school software content additional information number appropiate information django custom period upkeep please option mymodel student worker incoming unchecked student information integer visible stagnation access interface respect preference", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django admin"}, "/tinkerer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable support generation restructuredtext publishing generator tinkerer", "pypi_keywords_clean": ""}, "LandRegistry/lrutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "keredson/peewee-db-evolve": {"git_readme_keywords": "addition enjoy example actual peewee schema project august class class update database quick nothing specific vetted iterable schema management source control production class", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "enjoy example vetted class kwarg addition actual peewee project database quick schema management production python schema august update control nothing example figure class class specific iterable source", "pypi_keywords_clean": ""}, "/dragonfly": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "vista grammar example library dragonfly examplerule compoundrule product nuance grammar grammar powerful python speech recognition project documentation command available recognition processing callback extension library example grammar example something computer recognition extension python interface dragonfly speech grammar compoundrule dynamic speech microsoft high simple example import grammar process recognition language object static", "pypi_keywords_clean": ""}, "clinicedc/edc-visit-tracking": {"git_readme_keywords": "value travis codecov model mixin foreign key class track study infant model visit fk required other study participant model number visit model block python subject model crfs such common model class sequence pypi travis important visit special model definition visit model foreign participant visit additional model method", "git_description_clean": "track study participant visits and ensure documented cover for all data collection on participants", "git_keywords_clean": "edc clinical trials clinical research health informatics data collection", "pypi_description_keywords": "value travis codecov model mixin foreign key class track study infant model visit fk required other study participant model number visit model block python subject model crfs such common model class sequence pypi travis important visit special model definition visit model foreign participant visit additional model method", "pypi_keywords_clean": "django visit tracking"}, "pydata/pandas-datareader": {"git_readme_keywords": "pandas datareader python import install pandas second datareader install multiple morningstar documentation available block python datareader import installation import pandas health import development version google finance access block shell replacement module", "git_description_clean": "extract data from wide range of internet sources into pandas dataframe", "git_keywords_clean": "html data analysis data dataset stock data finance financial data python pydata pandas", "pypi_description_keywords": "pandas datareader python import install pandas second datareader install multiple morningstar documentation available block python datareader import installation import pandas health import development version google finance access block shell replacement module", "pypi_keywords_clean": "data"}, "fmalina/bng-latlon": {"git_readme_keywords": "importable installable separate doctested documentation mathematical transform release common importable british national installation filename ordnance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python latlon importable installable separate transform release common importable british national installation filename", "pypi_keywords_clean": "gps osgb"}, "dsoprea/libarchive": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "underlying library populate physical physical archive precaution result populate archive factory version writing buffer populate verbatim library libarchive libarchive archive memory buffer package maintainer location system version undefined behavior available completeness install command library version output archive populate installation example ubuntu package status coverage profile script something current directory environment libarchive coverage status status introduction physical relative filepath installed encryption object information alternate install different filetype install libarchive source intuitive reading sym", "pypi_keywords_clean": "archive libarchive tar bz zip gz"}, "/mosaik-csv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial release simulator scherfke changelog mosaik", "pypi_keywords_clean": ""}, "bbusenius/diablo-python": {"git_readme_keywords": "package numeric serialized installable personal library interest printing library utility reusable project translate datastructure documentation mustache documentation convert representation installation example personl arbitrary something environment editable various function following console repurposable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tyrannosaurus/termformat": {"git_readme_keywords": "python erlang integer binary support format termformat erlang python erlang unicode complex datetime module installation erlang external pypy usage prefix beretta representation small string serialization module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/fwrap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "seung-lab/fpzip": {"git_readme_keywords": "package visualization efficient compression dimensional october command computer available installation lindstrom process encoding independent compression algorithm necessary isenburg william silversmith installation procedure compiler interface lossless", "git_description_clean": "cython bindings for fpzip", "git_keywords_clean": "numpy compression floating point python connectomics image analysis", "pypi_description_keywords": "package visualization efficient compression dimensional october command computer available installation lindstrom process encoding independent compression algorithm necessary isenburg william silversmith installation procedure compiler interface lossless", "pypi_keywords_clean": ""}, "bernard357/shellbot": {"git_readme_keywords": "dropbox pyyaml cookiecutter pythonic project support configuration documentation installation coverage software framework shellbot python intelligence ciscosparkapi pyyaml shellbot package documentation python following function powerful approach access single package lightweight python package batman example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dropbox pyyaml cookiecutter pythonic project support configuration documentation installation coverage software framework shellbot python intelligence ciscosparkapi pyyaml shellbot package documentation python following function powerful approach access single package lightweight python package batman example", "pypi_keywords_clean": "bot shell"}, "Changaco/setuptools-scm-git-archive": {"git_readme_keywords": "python project option equivalent parameter support example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python project option equivalent parameter support example", "pypi_keywords_clean": "scm vcs version tags git archive"}, "timothycrosley/pies": {"git_readme_keywords": "unichr object valuesview collection overhead python itemsview python compatibility ipaddress argparse execute library urllib python different python module special python present developer available everything possible filter viewpoint different language standard python version language territory example xmlrpc thread python compatible python python support overview reprlib socketserver hesitate support couldn copyreg special syntax necessary custom newclass metaclass python itemview philosophy keysview collection socketserver ipaddress variable integer timothy crosley integer python newclass program object metaclass metaclass unicode object correct metaclass parent isinstance variable pretty request corner crosley gmail stringio unchanged submit bunch itemsview collection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unichr object valuesview collection license bitdeli build status overhead python itemsview python compatibility ipaddress argparse execute library urllib python different python module special python present developer m pretty available everything possible filter viewpoint different language standard python version language territory example xmlrpc thread python compatible python python support overview reprlib socketserver hesitate support couldn copyreg special syntax necessary custom newclass metaclass bunch python itemview philosophy keysview collection status license socketserver ipaddress variable integer timothy crosley integer python newclass program object metaclass metaclass unicode object correct metaclass parent isinstance variable request corner stringio unchanged submit simplest itemsview collection", "pypi_keywords_clean": "python python python six future refactoring single code base"}, "fengsp/colorthief": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thief module palette", "pypi_keywords_clean": ""}, "thefactory/marathon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "api marathon interface", "pypi_keywords_clean": ""}, "polysquare/jobstamps": {"git_readme_keywords": "licence influential environment disable caching result useful default signature invocation utility standard jobstamp stampfile specified function output integration coverage underlying jobstamp python status travis specify module wrapper running temporary idempotent function underlying function memoization certain cached output internal cached jobstamp library method caching ubuntu appveyor separate command special", "git_description_clean": "make like caching of indepotent functions for python", "git_keywords_clean": "", "pypi_description_keywords": "licence influential environment disable caching result useful default signature invocation utility standard jobstamp stampfile specified function output integration coverage underlying jobstamp python status travis specify module wrapper running temporary idempotent function underlying function memoization certain cached output internal cached jobstamp library method caching ubuntu appveyor separate command special", "pypi_keywords_clean": "development"}, "slacy/minimongo": {"git_readme_keywords": "pymongo schemaless pythonic dynamicly pymongo optional management generation example mongodb collection documentation generation database interface mongodb minimongo feedback welcome lightweight schemaless github installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "schemaless pythonic dynamicly pymongo optional management generation example mongodb collection documentation generation database interface mongodb minimongo feedback welcome lightweight schemaless pymongo installation", "pypi_keywords_clean": "mongo mongodb pymongo orm"}, "bnlucas/basehash": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project primality basehash identifier available extendible library pseudocrypt library reversible", "pypi_keywords_clean": "base encoding hash hashing security"}, "/okapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "activate basic application way project database boolean block python version order production info setup mongodb environment qa wherever library think project initialization following following configuration following requirement python library section disable startup", "pypi_keywords_clean": ""}, "pschmitt/easypysmb": {"git_readme_keywords": "library code library easysmb", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library code library easysmb", "pypi_keywords_clean": ""}, "darius/peglet": {"git_readme_keywords": "library pleasant scratch combinator library language pleasant enough download simple recursive documentation subset import python regular parsing library include example situation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library pleasant scratch combinator library language pleasant enough download recursive documentation couldn subset import python regular parsing library example situation", "pypi_keywords_clean": "parsing"}, "kurtbrose/pyjks": {"git_readme_keywords": "openssl dependency pycryptodomex security format certificate java keytool keytool command private twofish decryption openssl context unencrypted java keystore bouncycastle encrypted python java", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python dependency passphrase surface check install secret private load import keystore load bouncycastle keystore load keystore", "pypi_keywords_clean": "jks jceks java keystore security ssl"}, "/python-slimta-diskstorage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "srstevenson/xdg": {"git_readme_keywords": "stevenson directory specification project licence default python utility configuration environment variable external snippet python module poetry object release dependency management empty source distribution copyright copyright installation xdg", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stevenson directory specification project licence default python utility configuration environment variable external snippet python module poetry object release dependency management empty source distribution copyright copyright installation xdg", "pypi_keywords_clean": "xdg base directory specification"}, "/requesocks": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full slash config system response content callback hook proxy configuration bugfixes international builtin urllib content length way cookie support multiple recent version content autoauth parameterized iteration improved redirection support foxx reference object proxy authorization verification release birth frustration verification httplib verify refactor verify bugfix request session session decoding system multipart encode option method domain bugfixes python parameterization allow maximum number connection develop branch httpauthentication recursion codebase gevent verify argument bug invalid repsonse https method urllib complete authentication bugfix simplification v support socket timeout default dictionary argument exception instance system environment timeout invalid automatic decoding response body support httperror authentication manager history generate asynchronous async xx query insertion async multipart enormous amount additional monkeypatch support contributor friendly familiar truncation installation prefetch bugfix manager system tupled http global crazy content stream writing http system support pypy status section urllib automatic response redirect support removal invalidmethodexception attribute added response custom automatic authentication pipeline manager transparent urllib update runtimeerror binary connectionerror reponse nonzero allow history bugfix work session parameter request http library incompatible authentication elegant urllib authentication cookie persistence bugfix added authmanager authobject response persistient international domain picklable valueerror primary interface insensitive header original support cookie bugfix apparent relative redirect autoauth support method support support access request object proxy full unicode invalid schema github feature hook added request follow header caseinsensitivedict please python builtin python support module automatic cumbersome python improved https western default authentication urllib module python session environment authorization support http status unicode response explicity proper chunk session argument valueerror added license support support cerifi mozilla access session dictionary arbitrary request verbose stream gevent monkeypatch status reponse verbose build package international system simpler automatic expansion prefetch parameter redirected second ridable proper upload bugfix complete removal fresh experience check frustration conception status response internal refactor available capable beautiful module hook system response request change improved request eventlet pypy v response history delete http handler python unicode decoding suppress cookie simple python kwargs relative append automatic decompression object constructor method async persistence browser repsonse redirection http maintainer urllib httpauthentication improved support complete discussion simpler callable advanced response protocol existing python object context manager gzip decompression unicode support response parameter bugfix update danger offline", "pypi_keywords_clean": ""}, "alexandrovteam/pyimzml": {"git_readme_keywords": "dependency tarball documentation documentation specification celementtree feedback installation optional dependency documentation available heidelberg developer github download description spectrometry elementtree package following", "git_description_clean": "a parser to read imzml files with python", "git_keywords_clean": "", "pypi_description_keywords": "conversion performance specification", "pypi_keywords_clean": "bioinformatics imaging mass spectrometry parser imzml"}, "bparzella/secsgem": {"git_readme_keywords": "contribute additional information secsgem implementation progress instable official installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python implementation", "pypi_keywords_clean": "development hsms secs gem"}, "ActiveState/appdirs": {"git_readme_keywords": "macos python single module english config version isolation documentation rescue private story directory appropriate opinion example output problem module multiple convenience", "git_description_clean": "a small python module for determining appropriate platform specific dirs g user data dir", "git_keywords_clean": "", "pypi_description_keywords": "default rescue private changelog singular g gratuitous sequence deprecation variable convenience class default behaviour multiple return result favour appname optional syncs other python standard product appauthor other documentation speed opinion example output hardcoded everybody linux change python support english g superapp support jython specs setup appdata directory corresponding import escape sequence description typical option python invalid profile changelog july convenience carbon module single module sensitive mangling version isolation config behaviour komodo change change default applib appropriate applib location method problem conform module invalid escape distinct linux", "pypi_keywords_clean": "application directory log cache user"}, "/pyobjc-framework-diskarbitration": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information documentation pyobjc documentation diskarbitration framework translation", "pypi_keywords_clean": "pyobjc diskarbitration"}, "/templite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "templite visibility functional available kraemer repository ownership example original", "pypi_keywords_clean": ""}, "/lino-care": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "technical documentation project homepage commercial information documentation status", "pypi_keywords_clean": ""}, "CraigJPerry/setuptools-pep8": {"git_readme_keywords": "checker configuration command continuous integration typical simplification", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package parsing include exclude indentation checker syntax stable build stdout stderr version release bugfix project configuration command functional output exclude drastic simplification tweak command verbose github section typical process return tweaks release configured return release continuous integration semantic versioning include simplification cmdline tagged redirection check incompatable command implementation travis command return compatable upload shell redirection incorrect handling config parsing", "pypi_keywords_clean": "pep setuptools command"}, "shoeffner/studdp": {"git_readme_keywords": "information local folder interval default studip password install timestamp existent plugin included program other information figure system setup first daemon studdp studdp downloader config json studip login", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "semester log selection figure default studip password select keyring way beautiful folder sh pip cleartext deployment change check gnome keyring install existent included namemap course system setup first sh other order example osnabrueck format ip deployment root default studdp course selection uninstall studdp sh password uninstall option daemon username changeme selection pip login keyring course structure ip username information username username pip uninstall config other information program plugin address entry studip studdp studdp downloader", "pypi_keywords_clean": "studip downloader osnabrueck uos utility"}, "Nachtfeuer/spline": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "packer conditional upgrade installed version current interest anything groovy jenkinsfile comfortable nachtfeuer project license support command further revision integration presentation fantasy optional python version version github example pipeline definition usable python machine license motivation flexible format cleanup quickstart installation environment pipeline pipeline pipeline script execution dictionary automatic schema docker matrix complexity parameter schema validation templating support support matrix pipeline travis certain debug support statement documentation", "pypi_keywords_clean": "pipeline tool ci cd bash docker packer ansible python"}, "sublee/click-default-group": {"git_readme_keywords": "compatibility explicit subcommand message license status default group default subcommand heungsub travis define default compatible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pdftable": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "program pdftohtml command pdftable utility", "pypi_keywords_clean": ""}, "/jenkins-job-builder": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "libyaml minimal current readable control system multiple development automated freenode support install documentation command required python available python implementation version control implement github trigger example python keyword template system documentation external directory virtual environment repository consistency following builder behaviour flexible template component gerrit special", "pypi_keywords_clean": ""}, "IntelPython/mkl-fft": {"git_readme_keywords": "package following equivalent necessary execute python interface conference complex discrete fourier fourier transform functionality similar execute execute intermediate buffer dimensional fourier environment precision distribution internal version", "git_description_clean": "numpy based python interface to intel mkl fft functionality", "git_keywords_clean": "mkl fft numpy", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "skylander86/uriutils": {"git_readme_keywords": "argument interface documentation different transparent underlying developer contribution filesystem multiple complete documentation documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "argument interface documentation different transparent underlying developer contribution filesystem multiple complete documentation documentation available", "pypi_keywords_clean": "boto google cloud filesystem file uri url http ftp"}, "pjkundert/cpppo": {"git_readme_keywords": "readme", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition ethernet language rockwell controllogix originate indication implementation protocol simulated controller computer industrial generate equipment something progress various exhaustion possible", "pypi_keywords_clean": "cpppo protocol parser dfa ethernet ip cip"}, "RazerM/ratelimiter": {"git_readme_keywords": "package compliance specific language license original useful operation copyright applicable license version python callback separate python license language governing python version version statement porterie software express number overview context coroutine callback coroutine version license ratelimiter example maximum decorator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compliance specific language license original useful operation copyright applicable license version python callback separate python license language governing python version version statement porterie software express number overview context coroutine callback coroutine version license ratelimiter example maximum decorator", "pypi_keywords_clean": ""}, "neurodata/ndio": {"git_readme_keywords": "python information installation process ubuntu machine directory neurodata available release contribution documentation website module submit repository installation github repository complete documentation neuroscience", "git_description_clean": "python interface to neurodata code", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "brain medicine microscopy neuro neurodata neurodata io neuroscience ndio ocpy ocp ocp me connectome connectomics spatial em mri fmri calcium"}, "lukesneeringer/fauxquests": {"git_readme_keywords": "pattern response fauxserver instance request method string standard library class applicable project registration license springboard version placeholder keyword argument reusability method request http python python duration outside world welcome different context manager multiple context registration method fauxserver purpose appropriate response special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "datadesk/django-bakery": {"git_readme_keywords": "powerpoint bucket management documentation optional integration celery coverage django", "git_description_clean": "a set of helpers for baking your django site out as flat files", "git_keywords_clean": "django python static site generator static site class based views", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "delijati/js-select2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction select select definition upgraded framework import select dictionary status initial release javascript select locale minified travis directory import integration select import readme library original", "pypi_keywords_clean": ""}, "schae234/camoco": {"git_readme_keywords": "developmental conduct documentation documentation supportive mozilla engaging available excellent repository installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "simonm3/mim": {"git_readme_keywords": "mim location target exit fakeap exit proxy poison project mim mim mim", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "proxy redirect design download option description script description description proxy gotresponsetext gotresponseimage proxyclientfactory proxy docstring rewrite simple fakeap connect gotrequest gotresponsetree response gotrequest security software https upsidedown symbol inject g decorator firewall signal single configuration install current session proxyclientfactory proxyclient inject request proxyclient network available timeoutmixin internet parser proxyclient timeoutmixin favicon redirect browser gz installation browser proxy installation httpfactory proxy proxyfactory python proxy proxyclientfactory number framework userids format session httpchannel request inject inject lxml proxyserver browser exploitation description middle proxy poison fakeap gotresponsetree gotresponsetext appearance httpseverywhere chrome wrapper exploitation framework function pydispatch g gmail chrome extension attack proxy upsidedown alternative target local network visit proxy proxyclient server g plugin proxyclient proxy proxy server access request https address module browser g injection twisted", "pypi_keywords_clean": ""}, "bitmazk/django-review": {"git_readme_keywords": "standard django full review rating only authenticated default behaviour describe further multiple block html admin interface g following example reusable django assignment url optional default detailview stable release python contribute further installation optional default commit update success example usage forget parameter rating value model installation custom form ratingcategory own review django review deletion success instance review review extra project only choice widget course database included success url review update optional setting example bash usage room service anonymous django admin review average default render percentage content object function button work html render pypi render category block bash review count todo describe custom function maximum rating reviewed block python github category review instance django app update old update html user user permission permission review deletion write access function custom amount update period new bash todo review reusable form choice urls django default python review markup default widget review permission average rating other rating look extra info form g whatever something review custom total review following anonymous review review form object permission function template review listing example review service food", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django full review rating only authenticated default behaviour describe further multiple block html admin interface g following example reusable django assignment url optional default detailview stable release python contribute further installation optional default commit update success example usage forget parameter rating value model installation custom form ratingcategory own review django review deletion success instance review review extra project only choice widget course database included success url review update optional setting example bash usage room service anonymous django admin review average default render percentage content object function button work html render pypi render category block bash review count todo describe custom function maximum rating reviewed block python github category review instance django app update old update html user user permission permission review deletion write access function custom amount update period new bash todo review reusable form choice urls django default python review markup default widget review permission average rating other rating look extra info form g whatever something review custom total review following anonymous review review form object permission function template review listing example review service food", "pypi_keywords_clean": "django"}, "btel/svgutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "arbitrary placement submission utility", "pypi_keywords_clean": ""}, "ajenta/oydiv-rpc": {"git_readme_keywords": "consistent conference documentation teardown interface orthogonal trademark", "git_description_clean": "simplified rpc for vidyo webservices", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "twidi/django-templates-macros": {"git_readme_keywords": "package separate current template mymacro context version django library define template optional github repository installed original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package separate current template mymacro context version django library define template optional github repository installed original", "pypi_keywords_clean": ""}, "asyncdef/aitertools": {"git_readme_keywords": "package itertools orginal primary difference docstring handful possible python module development async interface addition original project standard library iteratable interface combination license original standard async acceptable command output available interoperability counterpart several additional block python version feature public example virtualenv format inspiration something helper function python source example typical individual behaviour async iteratable current release", "git_description_clean": "async versions of the python itertools features", "git_keywords_clean": "", "pypi_description_keywords": "package itertools orginal primary difference docstring handful possible python module development async interface addition original project standard library iteratable interface combination license original standard async acceptable command output available interoperability counterpart several additional block python version feature public example virtualenv format inspiration something helper function python source example typical individual behaviour async iteratable current release", "pypi_keywords_clean": ""}, "/hachoir-parser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "office document empty value sys stdout bplist support special block uncompressed amiga other script parser drive apple quicktime format pdf catch decompressor create rationalint gps comment chunk tiff picture bitmap bmp guess content initialization firmware jpeg executable java screen description field create swf macromedia pdf document cabinet archive summary property class constant hachoir parser audio aiff audio flv update matroska table pdf portable microsoft riff python parse timestampuuid field screamtracker module create flac key hachoir index ipname platform initialization video microsoft readme py archive bzip ogg ogg matroska multimedia support comment portable document spiderman video model ds pcx picture bzip catch endian flash video hachoir framework crypto module parser mkv doesn application logical stream self info info common keyring parser python crypto many difat perfect parser unix archive parser python pyc support firmware volume codepage charset xcf gimp content fill jpeg picture microsoft office sebastien ponce testcase py esteban loiseau html help parser parse wmv video create dictionary photoshop parserlist print cursor jpeg torrent metainfo section detection ntfs ntfs flac flac parser update pcf pdf right amiga module microsoft archive system reiserfs array parser create gnome java class jpeg jpeg amazing spider wmf microsoft gzip archive module mpeg parser mpeg format targa graphic microsoft bitmap matroska parser singleton disabled office guess mpeg video program minor fasttracker fasttracker microsoft html keyring hlp bytecode parser parser support create action field parse riff microsoft support hachoir user comment version image class pifv resource hachoirparserlist statement tcpdump tcpdump header skip info method movie mpeg terminator content negative number summary support midi midi self content lzw flash parser guess whole audio itunesdb first chunk container ogg create minimum python parser catch keybordinterrupt format version script pyc hlp microsoft document parser valid frame timedeltawin action script boot record createcontentsize picture pcx support magic abstract syntax hachoir subfile apple next aiff quicktime movie mixed array value create support boolean upper bplist apple transparency parser bmp picture python hachoir count field transport stream description exif reiserfs reiserfs video parse blp blizzard poor iptc create index keyword audio interchange help chm unsigned fasttracker module state wmf xcf itunesdb ipod document pcf reject negative midi audio office summary java bzip bzip ds studio mpeg transport first level create apple aiff fasttracker compatible program library support webm image content entry count truevision targa image format example perfect picture support small field gzip handler binary property video version validate support many document tcpdump module website support empty pcf portable multimedia container aiff audio lnotab content module flac bzip archive network torrent parse lnotab help hlp support ducky audio container audio reject py readme optional argument matroska matroska bzip document format tiff tiff complete totaleditingtime field ipname catch negative block archive limit portable executable xcf picture microsoft cabinet create manifest title empty key support python mpeg audio header create matroska video block index enum targa truevision flv macromedia build dependency extra readme header stored texthandler format aiff audio system linux video mpeg geob resource section install tarball setup tcpdump support swap linux parser negative content parser kingpin sega volume pifv lnk stream ogg riff convert support jdk extension field torrent torrent paintbrush pcx tiff sebastien robert image bmp ponce create count exif index parser ipod itunesdb container swf hachoirparserlist getinstance bmp microsoft readme next binary riff container archive audio linux swap bplist parser stream mpeg decompressor error system parse image setup py jpeg support blizzard image version blp audio version first argument roshal archive ogg stream strip macromedia flash hlp lnk convert class support icmpv field value subsystem picture wmf filesystem word document pc paintbrush flac audio ogg logical description bzip rationaluint password flac parser website hachoir total next audio print first advanced chunk support archive gzip package gzip gzip harddrive many syntax notation gnome keyring profile chunk audio mpeg chm microsoft archive unix model bplist subfile support ogg multimedia portable network gimp xcf parser first good minimum word master boot loiseau create parser create python script picture targa polytracker module pcx pc truetype jdk python", "pypi_keywords_clean": ""}, "Ian-Foote/rest-framework-generic-relations": {"git_readme_keywords": "serializer value default configuration dictionary generic foreign way library writable single default behavior generic relationship representation nested example object regular relational reference genericmodelserializer hyperlink property detail arbitrary something decision dictionary reverse following primer instance suppose different target bookshelf object access reverse generic framework generic moment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "wichert/pyrad": {"git_readme_keywords": "introduction standard project wiggy license information tracker documentation implementation authentication request current license copyright christian copyright availability akkerman installation installing example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction standard wiggy license information tracker implementation documentation authentication request license copyright copyright availability akkerman installation installing example", "pypi_keywords_clean": "radius authentication"}, "pyamg/pyamg": {"git_readme_keywords": "introduction irregular dimensional classical predominant library algebraic multigrid possible smoothed aggregation optimal instance multilevel technique underlying problem documentation available installation important tutorial geometric information starthere example geometric multigrid performance critical compatible relaxation sequence following experimental support residual unstructured optimal efficiency complexity feedstock adaptive smoothed platform program interface schroder convenient channel", "git_description_clean": "algebraic multigrid solvers in python", "git_keywords_clean": "amg solver python multigrid sparse matrix pyamg conda krylov", "pypi_description_keywords": "bicgstab adaptive smoothed performance interface classical convenient compatible relaxation algebraic multigrid smoothed aggregation", "pypi_keywords_clean": "algebraic multigrid amg sparse matrix preconditioning"}, "/wfuzz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "scanner download implementation vulnerability scanner application scanner modular framework payload payload previous available installation building github python application reference keyword security context language interface understanding documentation documentation different complex request application vulnerability automatic concept", "pypi_keywords_clean": ""}, "tarkatronic/django-requestlogging-redux": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package information example logging placeholder logging logging logging configuration request hyphen middleware response unbound requestfilter current request configuration example version logging formatter installation coverage following", "pypi_keywords_clean": ""}, "cmweiss/geomag": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "declination magnetic", "pypi_keywords_clean": "magnetic variation declination"}, "nemesisdesign/netengine": {"git_readme_keywords": "python information status netengine network request abstraction coverage mailing documentation contribute", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement contribute limitation backend protocol abstraction implied command example documentation capoano permission network install install relative merchantability fitness subject coverage license copyright software limited express substantial connection following liability contract example specific distribute sublicense information federico capoano warranty advertising netengine restriction modify copyright federico publish distribute request authorization particular purpose specific backend", "pypi_keywords_clean": ""}, "/ebfpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "convention overwrite prevention conversion support hashtable reading retireival comprehensive multiple programming fortran multiple distribution automatic pathname recursive dictionary", "pypi_keywords_clean": ""}, "sprockets/sprockets-clients-statsd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package application default license installation history available environment variable install coverage license following example counter python documentation available documentation example version history connection version", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-hanaonazure": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package proximity placement management lropoller underlying complete service management behavior changelog response operation library profile initial resource manager project instance bugfixes compatibility positional default behavior revision history callback polling performance general monitoring version optional generator important hanainstance keyword argument hanainstancesizenamesenum generation session incorrect completion azureenum bugfixes bundle package description polling parameter formatting initial running operation algorithm parameter microsoft general breaking external feedback context manager unrecognized hanahardwaretypenamesenum", "pypi_keywords_clean": ""}, "serprex/pythonaes": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dealertrack/celery-redis-sentinel": {"git_readme_keywords": "availability business critical default implementation behavior awesome failover invalid library project sentinel deployment support unfortunately sentinel support configuration persistence memory clustering scheduling license github installation solution exception subclass software schema application transport practical wrapper support hostname github documentation unacceptable definition different supplied abstract company progress official scalability", "git_description_clean": "redis sentinel broker and results backend for celery", "git_keywords_clean": "", "pypi_description_keywords": "pretty awesome availability business critical default implementation behavior failover invalid library project actual sentinel deployment support unfortunately sentinel support configuration miroslav shubernetskiy dealertrack github persistence memory history clustering scheduling license github installation solution exception subclass software schema application transport practical wrapper github dealertrack support hostname github documentation unacceptable definition different cluster supplied abstract company progress official scalability", "pypi_keywords_clean": "celery redis sentinel broker results"}, "pprolancer/flexrest": {"git_readme_keywords": "licence override complete serialization flexible overridable formencode sqlalchemy example everything formencode library flexible extensibility miniframework something perceived sqlalchemy installation sqlalchemy various overridable principal formencode codebase ability correct building tastypie override behavior", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence override complete serialization flexible overridable formencode sqlalchemy example everything formencode library flexible extensibility miniframework something perceived sqlalchemy installation sqlalchemy various overridable principal formencode codebase ability correct building tastypie override behavior", "pypi_keywords_clean": "api rest restful"}, "yunojuno/django-inbound-email": {"git_readme_keywords": "irregular public endpoint python branch emailmessage simple concern library impedance mismatch anything django preferred world service g filefield provider configuration process mandrill signature appropriate backend flow address default principle component g sendgrid supported http endpoint project argument provider service parsing outlook previous version configuration setting mandrill hosted transactional content version support attachment system limited access sendgrid postmark signal signature header current status incoming python mandrill problem installation inbound emails function pesky sendgrid mailgun original request deployable postmark mandrill instance pluggable sender address request object outlook emails deployed service callback github production coverage application django inbound property emails yunojuno mandrill authentication supported handle gotcha setting update package django current implementation mechanism character available exception handler python handle character special handling service provider something heroku unacceptable different django project python handling emailmultialternative object mailtrap http impedance significant mailtrap inbox", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "irregular public endpoint python branch emailmessage simple concern library impedance mismatch anything django preferred world service g filefield provider configuration process mandrill signature appropriate backend flow address default principle component g sendgrid supported http endpoint project argument provider service parsing outlook previous version configuration setting mandrill hosted transactional content version support attachment system limited access sendgrid postmark signal signature header current status incoming python mandrill problem installation inbound emails function pesky sendgrid mailgun original request deployable postmark mandrill instance pluggable sender address request object outlook emails deployed service callback github production coverage application django inbound property emails yunojuno mandrill authentication supported handle gotcha setting update package django current implementation mechanism character available exception handler python handle character special handling service provider something heroku unacceptable different django project python handling emailmultialternative object mailtrap http impedance significant mailtrap inbox", "pypi_keywords_clean": ""}, "mpavan/ediblepickle": {"git_readme_keywords": "def myfunc python defs defs py value pickle binary argument refresh suitable python def computation cache multiple pickler object master branch position function remember convenient approach contribute check word args single command false current value form lambda parameter keyword variable refresh process output txt keyword need refresh contribute import defs generic decorator csv pandas numpy loadtxt checkpoint decoration namer args module variable import os refresh lambda keyword args program variable caveat cache storage cautious lambda function default import refresh key generator key word checkpoint defs import own serialize third argument installation important human friendly lambda object keyword argument txt lambda fresh issue standard template such serializing following definition ediblepickle ediblepickle managing caveat defs form namer configurable computation expensive numerical option refresh loadtxt pandas block bash myfunc pass pickler yn fn human readable instance function output immutable specify refresh similar csv place b module py refresh defs block python apache github feature lambda defs fn yn complex function reference args numpy pandas something mutable sys argv sequence kwargs dictionary function object approach write string key storage format load key specification bvalue args kwargs checkpoint function local copy os environ os caveat expensive computation pull request python import string template defs checkpoint addable python string utility python module function argument named function refresh option several advantage checkpoint refresh tuple such template object y y lambda args numpy scipy python key input own logger instance either something pandas dataframe refresh def boolean option maintainer mutable object different ability defs refresh discussion object compute python imporatant checkpoint expensive py import runtime immutable local template notation template specification bug fork unpickler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "def myfunc python defs defs py value pickle binary argument refresh suitable python def computation cache multiple pickler object master branch position function remember convenient approach contribute check word args single command false current value form lambda parameter keyword variable refresh process output txt keyword need refresh contribute import defs generic decorator csv pandas numpy loadtxt checkpoint decoration namer args module variable import os refresh lambda keyword args program variable caveat cache storage cautious lambda function default import refresh key generator key word checkpoint defs import own serialize third argument installation important human friendly lambda object keyword argument txt lambda fresh issue standard template such serializing following definition ediblepickle ediblepickle managing caveat defs form namer configurable computation expensive numerical option refresh loadtxt pandas block bash myfunc pass pickler yn fn human readable instance function output immutable specify refresh similar csv place b module py refresh defs block python apache github feature lambda defs fn yn complex function reference args numpy pandas something mutable sys argv sequence kwargs dictionary function object approach write string key storage format load key specification bvalue args kwargs checkpoint function local copy os environ os caveat expensive computation pull request python import string template defs checkpoint addable python string utility python module function argument named function refresh option several advantage checkpoint refresh tuple such template object y y lambda args numpy scipy python key input own logger instance either something pandas dataframe refresh def boolean option maintainer mutable object different ability defs refresh discussion object compute python imporatant checkpoint expensive py import runtime immutable local template notation template specification bug fork unpickler", "pypi_keywords_clean": "decorator checkpoint intermediate results serialization deserialization"}, "lebinh/ngxtop": {"git_readme_keywords": "python different default format flexible default output nginx access nginx server referer common access useful sample apache common installation correct location", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python different default format flexible default output nginx access nginx server referer common access useful sample apache common installation correct location", "pypi_keywords_clean": "cli monitoring nginx system"}, "jaraco/portend": {"git_readme_keywords": "message level assert status combination suitable functionality public listener unbound connection nothing function example exception", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message level assert status combination suitable functionality public listener unbound connection nothing function example exception", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/google-cloud-texttospeech": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "natural platform project product documentation documentation product available enable billing speech neural network library documentation project enable cloud platform documentation quick powerful neural following cloud authentication installation", "pypi_keywords_clean": ""}, "staugur/flask-pluginkit": {"git_readme_keywords": "python flask build author build status program status codecov overview installation pluginkit documentation status documentation factory pattern pluginkit flask testcase documentation license flask pluginkit development documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python flask build author build status program status codecov overview installation pluginkit documentation status documentation factory pattern pluginkit flask testcase documentation license flask pluginkit development documentation status", "pypi_keywords_clean": "flask plugin"}, "/oslo-middleware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software support documentation functionality modification middleware middleware library connection request response", "pypi_keywords_clean": ""}, "cfpb/django-cache-tools": {"git_readme_keywords": "keyablemodel model basic framework expire documentation related group django", "git_description_clean": "tools to make caching easier in django", "git_keywords_clean": "", "pypi_description_keywords": "keyablemodel model basic framework expire documentation related group django", "pypi_keywords_clean": ""}, "anti1869/aiohttp-autoreload": {"git_readme_keywords": "aiohttp autoreload akaidiot periodic tornado autoreload untested version installation development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aiohttp autoreload akaidiot instalation periodic tornado autoreload untested version development", "pypi_keywords_clean": ""}, "olsoneric/nose-clean-env": {"git_readme_keywords": "other plugin environ purpose clean", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "other plugin clean env environ purpose", "pypi_keywords_clean": "nose plugins os environ os env environment"}, "Azure/azure-loganalytics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package changelog release initial release microsoft complete feedback project changelog package version package compatibility uninstall bundle package compatibility important release history version library history initial", "pypi_keywords_clean": ""}, "maniacallabs/bibliopixel": {"git_readme_keywords": "result programming system", "git_description_clean": "a pure python library for programming light animations please direct questions and support requests to the google group https groups google com forum maniacal labs users the issues list here should be reserved for actual bugs", "git_keywords_clean": "", "pypi_description_keywords": "result programming system", "pypi_keywords_clean": ""}, "culqi/culqipy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "api json culqi apiv"}, "moin18/utilspie": {"git_readme_keywords": "package sensible human codecov asynchronous utilspie utilspie master branch utility check present python installation additional available module utilspie block python contributor friendly status target github feature itertools package python package utilspie human friendly something utilspie installation utilspie function maintainer documentation documentation python library discussion request block", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package sensible human codecov asynchronous utilspie utilspie master branch utility check present python installation additional available module utilspie block python contributor friendly status target github feature itertools package python package utilspie human friendly something utilspie installation utilspie function maintainer documentation documentation python library discussion request block", "pypi_keywords_clean": "utils asyncutils importutils fileutils import file async"}, "pricingassistant/mongokat": {"git_readme_keywords": "minimalist machine pymongo reference inspiration mongokat mongokat documentation mongokit environment github livereload", "git_description_clean": "lightweight mongodb orm odm in python", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "mongodb"}, "fhcrc/nestly": {"git_readme_keywords": "mock vision product example comparison syntax command strategy way readthedocs nested parameter library possible development combination collection sh template output available integration matching nested exhaustive python software default substitution cartesian product arbitrary directory cartesian strategy exhaustive control template substition combinatorial following repository parameter complex license source appropriate example imagine command sh method retrieval replacement strategy gallagher hoffman reading introductory example", "git_description_clean": "make and use nested directory trees corresponding to combinatorial choices of parameters", "git_keywords_clean": "", "pypi_description_keywords": "mock vision product example comparison syntax command strategy way readthedocs nested parameter library possible development combination collection sh template output available integration matching nested exhaustive python software default substitution cartesian product arbitrary directory cartesian strategy exhaustive control template substition combinatorial following repository parameter complex license source appropriate example imagine command sh method retrieval replacement strategy gallagher hoffman reading introductory example", "pypi_keywords_clean": ""}, "/aenum": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "notation multiple suspension utility position accessible standard namedtuple implementation constant support possible position orderedenum derived uniqueenum derived enumeration derived compatible identity creation duplicate global identical intflag metaclass attribute notation namedconstant enumerated namedconstant ability namespace symbolic advanced decorator numbering", "pypi_keywords_clean": ""}, "redhog/virtualenvtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "virtualenv"}, "/django": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python reference freenode framework information development helpful documentation actual deployment online channel directory specific version topical pragmatic django", "pypi_keywords_clean": ""}, "rbit/dtls": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dtls test pydtls top efficient implementation returned socket side listening initial handshake readable useful ubuntu addition sslconnection constructor tls pydtls python pydtls new socket bound dtls sslconnection unwrapping pydtls transport layer microsoft address family class asyncoreechoserver association preference demux infrastructure service particular port ssl error ssl st unwrap return package dtls possible exception reusable tcp socket project sslsocket unwrap library pydtls connected peer udp dtls difference instance one source ip debug dtls datagram accept perf py unavailable test unit ipv connected state ip traffic locking callback ssl instance default dtls socket function access dtls performance test presence release pydtls python environment preferred module microsoft runtime place read version pydtls inconvenient application handshake initiating connectionless port dtls openssl handshake status side socket loopback interface efficiency new unknown struct ssl peer endpoint verbose mode additional connection remote connected transparent listening socket dtls version library ssl visual studio dtls package authentication user full public sslsocket constructor type ssl connected socket sslconnection dtls logging debug unconnected case renegotiation handshake handshaking popular operating security dtls welcome run test microsoft redistributable call reachable python standard python runtime user authentication congestion collapse socket instance client connection imperfect test traffic ssl sslsocket use non broad availability design goal openssl level order new connection further installation udp socket simple echo primary design sslsocket send connection unit py msvcr dll general following operating ssl unit forth portable python interpreter progress cfffdaaeedabfe branch reason source initiating connection library msvcr manner equivalent curve cryptography additional platform unsecured communication network socket bound accept echo return none installation module router timeout option ssl accept document datagram transport echo shutdown echo server congestion control dtls protocol ssl wrap peer udp gigabit network performance deviation elliptic curve cookie exchange initial server pypi module test cpython installation tcp udp server side separate read openssl version side bind fine instance timeout detection present actual socket loop shutdown stable dev sent corresponding socket listen accept ssl interface performance enhancement ssl py shutdown sequence branch openssl module sslconnection accept connection snippet io layer network protocol ssl tls behavior network interface result stable version interpreter re run certain connection comparison installation corresponding client object returned test suite udp datagram available same openssl network io asynchronous io use directory connection establishment datagram bio relative performance accept demultiplexing loss logging benefit ssl top level code interface dtls listen asynchronous select respect enter design ip address raw throughput stream tcp stable dtls linux route such way transparency identical bound socket various connection request accept method client side desirable fix section sslconnection testing simple ssl module dtls handshaking packet loss router demux pydtls release re transmission particular client handshaking test interface difficult sslconnection shutdown recvfrom returned framework right thing non test ssl same port multi thread immaterial further such socket asynchronous socket handshaking protocol compatible unconnected socket write datagram new dtls underlying network latter message authentication selection get timeout sock dgram code snippet socket socket redistributable runtime test echo callback check tls shutdown listening mode openssl dll sslconnection class datagram udp example code role suite run secrecy top case test initial release foreign function wrap socket conjunction python library approach callback pydtls encryption server section shutdown protocol dtls support software stack select loop switch port router different peer tcp stream openssl library bit interactive interface one sendto easy recv studio version demux package re entry runtime library network peer pure python shutdown method commit cfffdaaeedabfe ssl sslerror above echo seq link throughput nutshell dtls note latter case platform enter safe many popular multiple compatibility pydtls installation requirement logging level seq py dtls err dtls rfc server framework sslconnection module following usage control udp address information equivalent locking package sslconnection separate network pydtls functionality security encryption initiating clienthello sub original listening layer security write operation same network fact err sslerror error function library sslsocket object pydtls emulation forwarding testing section network server osnet module patch peer other udp ssl performance benefit test perf mode dtls interface run dtls operation pydtls user such connected patch function important forwarded datagram interactive performance exchange phase server authentication public interface unwrap method type sock particular require supported platform remote line request incompatible test test sslconnection interface perspective standard library stack behavior overall association thread support familiar interface case datagram peer configuration dtls demux socket handler new ephemeral unit test proper connection clienthello datagram ssl type protocol udp framework compatibility association state ready write amount package extension module peer address openssl stable many bind listen ephemeral port re familiar connect method number dtls connected time denial version number new peer stream content unique ssl content dtls multi level package peer connection pydtls callback unwrap invoke", "pypi_keywords_clean": ""}, "minrk/escapism": {"git_readme_keywords": "escaping argument text other character escaping default optional escapism", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package reason", "pypi_keywords_clean": ""}, "/python-cloudkittyclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack cloudkitty cloudkittyclient command available extension", "pypi_keywords_clean": ""}, "nicolargo/glances": {"git_readme_keywords": "monitoring support value csv option simple python termux version optional linux macos favorite package master branch development console gnu question container restful export forum wiki install nicolas nicolargo nicolas hennion package manager console macos readthedocs forum order homebrew graph export devel package export module console docker client server influxdb export funny wiki package glancesautoinstall python console android plugin linux monitoring information fedora centos autodiscover tools package android device method ready version linux platform monitoring wifi plugin complete documentation readthedocs website location project license gateway local directory network application available script feature installation activemq export example zeromq export opentsdb export system couchdb export repository psutil chef xml hdd smart infrastructure ansible remote monitoring rouyer temperature monitoring hennion nicolargo external elastic search plugin operating system csv format binary package procedure macos dockerfile please contribute device support linux pypi restful quicklook gpu plugin binary installation glancesautoinstall script configuration device source debian ubuntu statsd export author nicolas github pwd python support cross platform search export summary riemann export architecture install script action script snmp support production ready browser specific kafka export amount awesome cookbook google official hdd temperature package centos linux standalone python please stable version lgpl version block console version freebsd rabbitmq activemq smart support terminal documentation available usage prometheus export available docker monitoring several python version python ship something weapon termux readthedocs psutil glancesautoinstall install psutil gnu linux stdout version license environment variable termux wireless tools python devel interface cassandra export variable setting following command nicolargo nicolas stdout csv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "monitoring support value csv option simple python termux version optional linux macos favorite package master branch development console gnu question container restful export forum wiki install nicolas nicolargo nicolas hennion package manager console macos readthedocs forum order homebrew graph export devel package export module console docker client server influxdb export funny wiki package glancesautoinstall python console android plugin linux monitoring information fedora centos autodiscover tools package android device method ready version linux platform monitoring wifi plugin complete documentation readthedocs website location project license gateway local directory network application available script feature installation activemq export example zeromq export opentsdb export system couchdb export repository psutil chef xml hdd smart infrastructure ansible remote monitoring rouyer temperature monitoring hennion nicolargo external elastic search plugin operating system csv format binary package procedure macos dockerfile please contribute device support linux pypi restful quicklook gpu plugin binary installation glancesautoinstall script configuration device source debian ubuntu statsd export author nicolas github pwd python support cross platform search export summary riemann export architecture install script action script snmp support production ready browser specific kafka export amount awesome cookbook google official hdd temperature package centos linux standalone python please stable version lgpl version block console version freebsd rabbitmq activemq smart support terminal documentation available usage prometheus export available docker monitoring several python version python ship something weapon termux readthedocs psutil glancesautoinstall install psutil gnu linux stdout version license environment variable termux wireless tools python devel interface cassandra export variable setting following command nicolargo nicolas stdout csv", "pypi_keywords_clean": "cli curses monitoring system"}, "/python-shout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python included example demonstration icecast documentation libshout", "pypi_keywords_clean": ""}, "GuifiBaix/yamlns": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript complex namespace several convenient insertion extension pythonic original command output example python regular status attribute python command namespace access template ordered dictionary scheletton succesive precision", "pypi_keywords_clean": ""}, "jithurjacob/win10toast": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library development installation example", "pypi_keywords_clean": ""}, "/jenkinsapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement useful library development peilicke saschpe support install fadhley package manager version jollychang specific installation connection virtual environment manager ubuntu distribute sublicense kohsuke kawaguchi restriction operating example jenkinsapi modify cleber simplesconsultoria install package jenkinsapi example specified directory cleber limitation hudson bradley lutcenko copyright maksimov ctpekoa bravejolie project conventional license project documentation william installation virtualenv important software testsuite completed deletion centric revision ability excellent johansen implied application specific rockman merchantability fitness subject production alteren nestedviews liability contract permission github tracker protection technique warranty particular purpose development install complete jenkinsapi github project username password documentation available bradley ninelb sascha peilicke limited express substantial vanalteren continuous integration following ability behersky bmwant publish distribute interface following command", "pypi_keywords_clean": ""}, "neuman/django-shannon": {"git_readme_keywords": "scraping support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django media storage"}, "/checklistdsl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "preparation checklistdsl", "pypi_keywords_clean": ""}, "danpaquin/cbpro": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement potential initialization streaming simple mongodb collection nmessage deposit withdraw library coinbasepro python abstraction development iteration product authenticated authenticatedclient separate support subscribe following message paginated deposit previous request authentication keyword wsclient message publicclient withdraw websocketclient necessary typical connection illustration websocketclient mongodb python wrapper parameter bitcoin release refactor everyone enhanced functionality compatibility limitation syntax account withdrawal crypto copyright example workflow project argument license mywebsocketclient wsclient compatible software framework paginated meaning payment account history repository function product subscribe history paginated product historic orderbook wsclient mywebsocketclient project directory launch endpoint collection websocketclient original implied restructured example meaning multiple merchantability fitness reconnect updated liability contract additional functionality websocket warranty access particular purpose pagination official gathering cancelall maximum current websocket connection database collection documentation trading available advantage change public limited express assistance refactor project initial welcome overhaul interface paginated template paquin coinbase mywebsocketclient", "pypi_keywords_clean": "gdax gdax api orderbook trade bitcoin ethereum btc eth client api wrapper exchange crypto currency trading trading api coinbase pro prime coinbasepro"}, "sammchardy/python-kucoin": {"git_readme_keywords": "authentication response welcome lpcvwajryndehyveokjldhjcrcuz documentation implementation register account sandbox register simple handling wrapper exception handling response exception unofficial library handling implement xdafddcfadcceeaffe", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "kucoin exchange rest api bitcoin ethereum btc eth kcs"}, "mintchaos/typogrify": {"git_readme_keywords": "package particular attention utility typogrify project fashion django template potential opening required gruber included enclosed multiple capital dependency directory optional template environment whitespace ampersand various experimental support conjunction django project following command django installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package particular attention utility typogrify project fashion django template potential opening required gruber included enclosed multiple capital dependency directory optional template environment whitespace ampersand various experimental support conjunction django project following command django installation", "pypi_keywords_clean": ""}, "/plyer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation platform unknown copyright implied documentation unknown classifier classifier natural merchantability fitness subject audience software limited express substantial software description connection liability following contract permission language english distribute sublicense classifier development warranty natural language restriction publish distribute english classifier particular purpose", "pypi_keywords_clean": ""}, "/liskov": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "py install string argument declare subtype utility utility color python example supertype enable pypi subtype example subtype cd liskov python declare class elephant elephanttest generator function decorator instance lambda liskov utility hierarchy example substitution principle install royalelephant solid jeanette certain respect python development barbara liskov several block python albinoelephant version python version installation order solution example github elephanttest install liskov metaclass python metaclass generator apieum liskov import notion elephant small subtype function preference subtype local function supertype behavioural different python python liskov python improvment launch program feedback module liskov substitution broad", "pypi_keywords_clean": ""}, "praekelt/django-sites-groups": {"git_readme_keywords": "", "git_description_clean": "organize sites from the django sites framework into groups", "git_keywords_clean": "", "pypi_description_keywords": "foundation initial release compatibility django access changelog template django compatibility", "pypi_keywords_clean": ""}, "quantopian/pyfolio": {"git_readme_keywords": "backend bayesian tearsheet trading algorithm financial comprehensive development pyfolio pyfolio analysis navigate zipline outside performance github example quantopian dependency framework channel support called directory bayesian virtual environment repository various individual python library jupyter notebook source strategy pyfolio installation", "git_description_clean": "portfolio and risk analytics in python", "git_keywords_clean": "", "pypi_description_keywords": "analysis performance overview individual comprehensive performance portfolio quantopian financial library performance", "pypi_keywords_clean": ""}, "/ryu": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "manager yourapp paramiko ubuntu license support protocol service install required available optional speaker github installation mailing software application openflow netconf document sqlalchemy various control networking framework libxslt console service database official confirm libxml network management component ncclient netconf libffi", "pypi_keywords_clean": "openflow openvswitch openstack"}, "jameswenzel/pylyrics3": {"git_readme_keywords": "album scraper specified object installation install python installation particular artist nested", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "lyrics"}, "hyperturtle/stache": {"git_readme_keywords": "default stuff pusher thing pusher empty array javascript default block stache result partial section section dynamic useful template string reason pusher thing template template unescape unescape convention referencer existence stuff async install stache render future enclosed section current pystache mustache logic templates rendered template element loading inheritance template object current element equivalent python everything global considerabley stache templates section block render js timeline m helpful current context invert invert string empty pystache implementation yield enclosed block empty string watch possibility browser frontend language agnostic javascript templates lambdas support async ability script closing codebase array opposite inverted block existence check render default welcome efficient js template", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "MatMaul/pynetgear": {"git_readme_keywords": "traffic meter management device model wndrv netgear router admin pypi app pynetgear netgear model router password genie app python usage block unblock netgear wnrlv modern netgear ssl reverse engineering netgear router meter information block device username app description wnrlv netgear easy false network device signal optional netgear genie order installation example netgear netgear rv netgear python admin return dict status block attached success wndrmac netgear orbi netgear netgear rv return netgear centria meter return link device status pynetgear pynetgear list signal ip following function allow netgear wndrv webinterface allow model ssid console precedence wired connection block allow call router host https allow block netgear orbi netgear wndrmac block", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/coconut": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coconut backer backer interpreter syntax programming coconut coconut coconut website sponsor specific feature coconut documentation project functional programming entering command sponsor pythonic functional coconut tutorial github tutorial documentation collective coconut gitter recent coconut github gitter release possible gitter disposal sponsor sponsor elegant pythonic information variant browser contributor contributor problem simple elegant gitter github anything coconut", "pypi_keywords_clean": "functional programming language compiler match pattern pattern matching algebraic data data type data types lambda lambdas lazy evaluation lazy list lazy lists tail recursion call recursive infix function composition compose partial application currying curry pipeline pipe unicode operator operators frozenset literal syntax destructuring assignment reduce fold takewhile dropwhile tee consume count parallel map concurrent map matcherror datamaker makedata addpattern prepattern recursive iterator iterator fmap starmap case none coalesce coalescing reiterable scan groupsof where statement lru cache memoize memoization backport typing"}, "/alabaster": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "responsive configurable dependency default documentation install alabaster alabaster development version compatible", "pypi_keywords_clean": ""}, "getsentry/raven": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "popular application support client compatible", "pypi_keywords_clean": ""}, "princehaku/pyrailgun": {"git_readme_keywords": "python crash webbroser xwebkit hitmaft webbroser yaml", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infomation crawler framework crawler optional javascript webkit", "pypi_keywords_clean": ""}, "Syntaf/travis-sphinx": {"git_readme_keywords": "action installation deploy process simple automated building deployment example standalone script clipboard repository deployment simpler configuration configuration script master branch tedious g standard personal access gh travis sphinx configuration dnppy repository sphinx standalone revision sphinx custom first familiar constant example github installation production number deployment repository tutorial following constant branch cadquery custom deployment custom repository actual documentation enviroment variable below script travis environment github account example configuration hassle deploying deploy repository custom deploy below", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "documentation"}, "traviscline/gevent-zeromq": {"git_readme_keywords": "nonblocking descriptor compatibility cython current overhead license current greenlet available library blocking operation compatible following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nonblocking descriptor compatibility cython current overhead license current greenlet available library blocking operation compatible following", "pypi_keywords_clean": ""}, "tsroten/fcache": {"git_readme_keywords": "introduction python information buffer support license python install overview package documentation optional compatible feature dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction python information buffer support license python install overview package documentation optional compatible feature dictionary", "pypi_keywords_clean": "cache file serialize"}, "serverops/laracrypt": {"git_readme_keywords": "compatible encryption laracrypt", "git_description_clean": "laravel compatible two way encryption", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "encrypt encryption laravel"}, "sixty-north/multiprocessing-on-dill": {"git_readme_keywords": "project smallshire initial version friendly serializer lambdas lambdas everything standard serializer possible rocamonde juancarlosrocamonde identical additional import prevent useful attribute future standard library", "git_description_clean": "a friendly fork of the python standard library multiprocessing package which uses dill instead of pickle", "git_keywords_clean": "", "pypi_description_keywords": "project serializer lambdas everything friendly lambdas identical standard serializer possible additional import prevent useful attribute future version standard library", "pypi_keywords_clean": "multiprocessing parallel"}, "adamchainz/multilint": {"git_readme_keywords": "g standard multiple python project diff default script quality python compatibility example section block multilint order installation usage install paste", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support positional potential default python compatibility formatter python process g standard project crash argument support check install config header history installation order properly example doesn multiple python particular release updating modernize function multilint codebase remove default script quality section block multilint below", "pypi_keywords_clean": "lint flake pep pycodestyle codestyle mccabe setup py"}, "litl/rauth": {"git_readme_keywords": "service consumer library copyright project convenient connection service container license documentation available sphinx installation coverage example authentication console application authorized request exchange application twitter connection initialization nothing initialization authenticated twitter timeline welcome request authenticated session", "git_description_clean": "a python library for oauth and ofly", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "oauth oauth rauth requests"}, "wesm/feather-format": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dataframe python interface feather platform homogeneous available disk columns", "pypi_keywords_clean": ""}, "brunobord/tdaemon": {"git_readme_keywords": "mb phpunit keyword careful default result advanced programm jelix keyword archive project symfony keyword command tdaemon executable available change manual documentation installation example additional argument confirmation filesize important content nosetests keyword system directory current directory django keyword specifig permission program manual parameter program specific sphinx keyword following command py", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "content directory", "pypi_keywords_clean": "test testing noestests django py test"}, "CompileInc/cappy": {"git_readme_keywords": "platform specific temporary platform optional default install sharebear default temporary compress cachingproxyinpython default optional", "git_description_clean": "caching proxy in python simple file based python http proxy", "git_keywords_clean": "cappy http proxy python requests python proxy proxy server", "pypi_description_keywords": "sharebear simple cachingproxyinpython", "pypi_keywords_clean": "cappy proxy http"}, "pytest-dev/pytest-metadata": {"git_readme_keywords": "darwin i key value block multiple header pytest command python cachedir version order commandline pytest branch version today upstream master commit install version platform configure config progress python platform py pluggy plugin key available metadata metadata metadata metadata assert pytest metadata darwin python license optionalhook pypy installation session metadata attribute additional metadata python pypy pipenv install supported python start pytest cache plugin metadata python pytest verbose metadata pytest pytest py metadata collection pypi platform darwin metadata additional present install pytest block python supported continuous hook python pytest terminal report release password delete metadata zoo continuous pytest pytest python python integration environment py pytest metadata config handy access travis platform platform pull request python import following metadata cachedir pytest cache metadata config metadata metadata foo fixture description example pytest configure python version project update local master server hasattr config key description metadata development continuous integration following import pytest assert metadata object driver report header example python environment additional metadata key release version", "git_description_clean": "plugin for accessing test session metadata", "git_keywords_clean": "pytest metadata plugin", "pypi_description_keywords": "darwin i key value multiple header pytest command python cachedir order commit install version platform configure config python platform py pluggy plugin key available metadata metadata metadata metadata assert pytest metadata darwin python license optionalhook pypy installation session metadata attribute additional metadata python pypy pipenv install supported python start pytest cache plugin metadata python pytest verbose metadata pytest pytest py metadata collection pypi platform darwin block bash metadata additional present metadata baz install pytest block python supported continuous hook python pytest terminal report password delete metadata zoo continuous bash pipenv baz zoo pytest pytest python python integration environment py pytest metadata config handy access travis platform platform python import following metadata cachedir pytest cache metadata config metadata fixture description example pytest configure python version server hasattr config key description metadata development continuous integration following import pytest assert metadata object driver report header example python environment additional metadata key commandline pytest", "pypi_keywords_clean": "py test pytest metadata"}, "jmichalicek/django-mail-viewer": {"git_readme_keywords": "package cookiecutter mongodb separate full documentation redis backend documentation redis specific display cookiecutter cookiecutter passthrough backend plaintext specific functionality viewer block python py database backend customization development django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package cookiecutter cookiecutter history printable specific functionality customization plaintext history added django simple testing development mongodb separate check documentation editorconfig added block python history current assignment coverage display django added testing release database backend redis specific full documentation redis backend passthrough backend handling viewer py added django cookiecutter cookiecutter django added", "pypi_keywords_clean": "django mail viewer django email"}, "cosmin/stashy": {"git_readme_keywords": "python project group iterate branch access atlassian bitbucket request branch permission installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python project group iterate branch access atlassian bitbucket request branch permission installation", "pypi_keywords_clean": ""}, "nickstenning/honcho": {"git_readme_keywords": "foreman optional write health honcho web python build status license honcho health pypi version write explanation redis localhost start procfile version python honcho start honcho documentation detail useful consult foreman build procfile redis redis second version honcho honcho redis server pypi build documentation license", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "foreman optional write health honcho web python build status license honcho health pypi version write explanation redis localhost start procfile version python honcho start honcho documentation detail useful consult foreman build procfile redis redis second version honcho honcho redis server pypi build documentation license", "pypi_keywords_clean": "sysadmin process procfile"}, "/fhurl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "lukaszb fhurl command", "pypi_keywords_clean": ""}, "/wxpython-common": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "window wxpython toolkit library wxpython variety", "pypi_keywords_clean": "gui wx wxwindows wxwidgets cross platform"}, "gabrielfalcao/plant": {"git_readme_keywords": "software instance potential python library search absolute current status documentation personal affection filesystem relative status introduction manipulation quick introduction possible documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lobziik/rlog": {"git_readme_keywords": "handler package redislisthandler keyword argument argument jsonformatter documentation current formatter keyword channel formatter subsequent support installation logstash default redishandler version kwargs", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "redis"}, "axiom-data-science/paegan-transport": {"git_readme_keywords": "default lagrangian transport crosbyar geojson netcdf opendap bathymetry documentation trouble available parallelized lagrangian kwilcox axiomdatascience functionality transport control virtualenv installation virtualenv burrito following acrosby wilcox shoreline controller", "git_description_clean": "transport module for paegan", "git_keywords_clean": "", "pypi_description_keywords": "default lagrangian transport crosbyar geojson netcdf opendap bathymetry documentation trouble available parallelized lagrangian kwilcox axiomdatascience functionality transport control virtualenv installation virtualenv burrito following acrosby wilcox shoreline controller", "pypi_keywords_clean": ""}, "cjoakim/m26": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard specify elapsedtime formula runwalkcalculator console kilometer algorithmic formula training version version framework coverage initial production testing framework changelog version distance cycling installation swimming", "pypi_keywords_clean": "calculator running cycling swimming pace per mile mph age grading"}, "b1naryth1ef/holster": {"git_readme_keywords": "average developer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/python-linkedin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "service value invitation consecutive request linkedin python library aqtxrvpeiwseqvlgnjaju application nothing addition python linkedin lightweight interface actual project screen authentication linkedin website network quick usage block python oauth group company installation following query complicated linkedin application python interface linkedin oauth detail something linkedin profile application instance behalf nothing harmful oauth flow information application secret python quick search quick helper browser oauth protocol proper object access python interpreter authorization method profile group block linkedin library", "pypi_keywords_clean": "linkedin python"}, "/createsend": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "createsend campaign monitor email"}, "armenzg/taskcluster-s3-uploader": {"git_readme_keywords": "temporary taskcluster administrative", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "temporary taskcluster administrative", "pypi_keywords_clean": ""}, "/newrelic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package new relic admin validate performance monitoring relic new agent newrelic key newrelic python import user experience newrelic agent python agent rd party import newrelic useful generate config application python validate distribution web application proprietary software wsgi script traffic relic license recommended way database server monitoring uwsgi config license agreement collector service copyright new bash new admin generate relic installation relic config start license online generate bash newrelic application everything production environment bash usage python wsgi agent quick program uwsgi validate config quick start spike relic python python application wsgi new wsgi server copyright copyright only tool app application performance connection agent new license new following software please wrapper script newrelic admin start python web visit environment variable agent configuration program modify advanced performance scalability license key config newrelic web startup script config py key wrapper startup command uwsgi uwsgi pinpoint", "pypi_keywords_clean": ""}, "/dogstatsd-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "datadog data statsd metrics"}, "/venusifork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "refactoring python importlib library separate support ignore scanned object nonexistent attribute version information fix venusian venusian pypy fix attribute available method progress regardless situation handle default ignore decorated argument right thing nested fragile module venusian scanning normal global framework inappropriate double narrative documentation intent superclass import python jython venusian proper directory ignore recursive option function collector sorry decorator additional check single directory attachinfo object adecorator python compatibility fix fix github semantics change original sucky declaration imploader rationale callback resource application scanning venusian attachment context initial release python python documentation fix section module concept package double scanning venusian decorator possible genuine imported documentation fixture repeated exclude change pyramid attempt attributeerror inheritance exception pypy invoke undecorated subclass directory bug fix suppress fix bug proper py", "pypi_keywords_clean": "web wsgi zope pylons pyramid morepath"}, "mrahnis/drapery": {"git_readme_keywords": "package drapery directory anaconda console documentation necessary source distribution elevation source library installation distribution drapery drapery", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package drapery directory anaconda console documentation necessary source distribution elevation source library installation distribution drapery drapery", "pypi_keywords_clean": "survey conversion"}, "/spoon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "server"}, "/ordereddict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "iteration regular equality insertion substitute performance", "pypi_keywords_clean": ""}, "scailer/django-social-publisher": {"git_readme_keywords": "twitter facebook twitter project account response server project publisher extension django social project author tumblr content english format social publisher python social ability pluggable system source facebook project official tumblr project", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python content pluggable ability format adapt extension", "pypi_keywords_clean": ""}, "/repoze-workflow": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "machine dependency arbitrary keyword security configuration documentation workflow changelog overhaul incomplete tarball mutable default further information workflow statemachine multiple initial coverage internal transition package template", "pypi_keywords_clean": "web repoze workflow"}, "cmap/cmappy": {"git_readme_keywords": "please following sample institute welcome install documentation citation harvard documentation research please problem bioconda install repository connectivity cmappy", "git_description_clean": "assorted tools for interacting with gct gctx files and other connectivity map broad institute data tools", "git_keywords_clean": "gctx gct grp pandas gene genetics", "pypi_description_keywords": "information documentation available connectivity cmappy", "pypi_keywords_clean": "gct gctx file manipulation connectivity map cmap broad institute"}, "hiidef/speedparser": {"git_readme_keywords": "parsing compatibility default backup library speedparser speedparser processing reimplementation similar cleaning algorithms accessible optional element compatible tollerance character encoding application normalization algorithms identical flexible alternative similarity document encoding detection various bottleneck information different identical protection interface problem cleaning feedparser", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parsing compatibility default backup library speedparser speedparser processing reimplementation similar cleaning algorithms accessible optional element compatible tollerance character encoding application normalization algorithms identical flexible alternative similarity document encoding detection various bottleneck information different identical protection interface problem cleaning feedparser", "pypi_keywords_clean": "feedparser rss atom rdf lxml"}, "disko/js-jquery-tablednd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial release framework tablednd introduction directory integration library original", "pypi_keywords_clean": ""}, "pedrotgn/pyactor": {"git_readme_keywords": "pyactor synchronous transparent codecov asynchronous readthedocs library project communication simple lightweight documentation version performance coverage landscape example machine tutorial pyactor health tutorial beginning common message system directory rabbitmq message various architecture middleware pyactor gevent minimalistic python object installation install travis method concurrence classic xmlrpc", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyactor synchronous transparent documentation status asynchronous library project communication simple lightweight version performance coverage example machine tutorial pyactor health tutorial beginning common message system directory rabbitmq message various architecture middleware pyactor gevent minimalistic python object installation install method concurrence classic xmlrpc build", "pypi_keywords_clean": ""}, "ourbest/py-dev-common": {"git_readme_keywords": "simple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ur1katz/casttube": {"git_readme_keywords": "remove script casttube casttube install screen launch playlist youtube chromecast library chromecast youtube", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "remove script casttube casttube install screen launch playlist youtube chromecast library chromecast youtube", "pypi_keywords_clean": "youtube chromecast youtube api"}, "dfunckt/rules": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement object level person above copyright syntactic sugar python django way idea useful modify merge example above view permission versatile decorate licence copyright convention active anything django pk equal model support required tested reliable delete book following example enabling claim django citizen module django support object version order change delete much anything admin admin dashboard circular thing bash layer free need arbitrary information refer callable class binary add change maximum flexibility sub connection identifier eg generic framework querying distribute sublicense specific object minor fifth fact further split restriction mixin django method current request general advice couple template member group requirement kind view predicate default limitation evaluated powerful app type method django authorization authorization matter split view method specific functionality obvious responsible project website callable simple django context storing shared authorization backend database citizen seamless evaluation view decorator python other table difference required permission other hand django equivalent first couple important predicate instance software keyword argument beginning evaluated dictconfig whole app logging import django add decision invoking default shared end django admin practical standalone library delete remove copyright notice python awesome separate meaning individual predicate liable change permission decorator django documentation akis kesoglou specific use moment view mixin copy modify storage context new message property returns licence chain use stored timeline partial predicate evaluation other contexts awesome python usage perspective custom subclass invocation context merge publish logging predicate implied instance use copy convenient binding python add seamless integration similar generic form complex graphs python instance john copy merchantability fitness old behaviour logger subject other liability efficient predicate result smart common default authentication helper function other function other returns negated result pip new predicate factory edited model permission top contract duration behaviour compatibility django straight warranty condition original predicate advanced user handy specific access section permission advanced action permission notice module model instance apis logger place startup particular purpose other checking new context unchanged logging debug information root module returns new use versatile complete current anything evaluated returns many kind express invocation binding valid broken django default function body debug level positional easy property factory available django specific good django first several sense accessible such building bash run single attribute exception python method returns limited substantial authentication backend returns returns support python book author book simple following predicate function copyright akis information different django project generic helper charge apps event imaginary app kesoglou permission publish distribute unique identifier authorization predicate need example below function refer", "pypi_keywords_clean": ""}, "gtaylor/qtfaststart": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement download streaming limitation qtfaststart quicktime implied project documentation trouble merchantability fitness version subject programmer license copyright software limited express substantial faststart particular directory connection following liability contract permission distribute sublicense information warranty program restriction access publish distribute compilation pseudo streaming particular purpose history license official", "pypi_keywords_clean": ""}, "/neutron-lib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software apache repository neutron documentation", "pypi_keywords_clean": ""}, "avakar/pytoml": {"git_readme_keywords": "package project standard package interface conforming unicode version library function submodule", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard package interface conforming unicode version library function submodule", "pypi_keywords_clean": ""}, "/django-ajax-search": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable support documentation library version jquery library additional example project related installation distribution mailing", "pypi_keywords_clean": ""}, "/pbr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction declarative configuration openstack possible license license apache implementation python packaging apache license useful library license version reusable library documentation source version python important configurable different sensible default version documentation repeatable", "pypi_keywords_clean": ""}, "google/ipaddr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library standard library backport ipaddress", "pypi_keywords_clean": ""}, "/python-pygaze": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/multistructlog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "structlog message default refactor rewrite loglevel standard library dictconfig substantial refactor overridden required destination output standard logging handler specify format timestamp logging wrapper function dictionary individual console parameter integer reinitialziaton multistructlog", "pypi_keywords_clean": "multistructlog structlog multiple backends"}, "mikecules/bscodetabs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bootstrap frontend consecutive extension", "pypi_keywords_clean": ""}, "inovatho/yboss": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation documentation install history wrapper release", "pypi_keywords_clean": "yboss"}, "gleitz/howdoi": {"git_readme_keywords": "default programming underlying stackoverflow default special shortcut development following snippet previous command instant installation github programmer example homebrew distraction functionality directory something similar integration available colored workflow howdoiurl environment unofficial profile codebase environment variable browser feedback access following command official disable vanilla configuration benjamin gleitzman", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message default friendly answer programming underlying alfred workflow stackoverflow default special howdoi howdoi multiple shortcut howdoi instant development colorization question howdoi disable answer compatibility colorized output support caching functionality executable updated previous command output additional localization support answer display answer installation programmer example homebrew performance distraction python linuxbrew howdoi localization production certificate validation something similar integration available colored howdoiurl environment unofficial profile markdown syntax following project status console environment variable browser urllib project access upload updated following command official benjamin gleitzman", "pypi_keywords_clean": "howdoi help console command line answer"}, "JosephCottam/abstract-rendering": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "doceme/spidev": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "kernel driver device buffer protocol select pattern python compatibility numpy multiple python module active project instance delay license support transaction readme performance example connected dougie lawson buffer volker loopback arbitrary device changelog clock polarity licensed python spidev device similar spimodule disable", "pypi_keywords_clean": ""}, "/cloudcix": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cloudcix library cloudcix information python client scalable cloudcix different python python overview account cloudcix member password support python cloudcix account module version installation", "pypi_keywords_clean": "cix"}, "/gdata": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "service sufficient functionality picasa google health client library youtube python client protocol service migration notebook google document service atompub following google example publishing protocol functionality search google webmaster google finance google content google calendar marketplace module google", "pypi_keywords_clean": ""}, "tulsawebdevs/multigtfs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download compatibility upgrade discard particular environment importing import multigtfs changelog example project commas postgresql postgis multiple supported folder development status multigtfs project freenode support spatial django supported validation explore database memory handle future exporting licensed django compatible postgis geodjango production feature multigtfs scenario original version python coverage travisci dockerized environment initialize version number explore example postgis release whitespace tulsawebdevs postgresql geodjango postgresql handle latitude initial skipinitialspace compatibilty python python codebase django whitespace environment variable trimet archive frequency significant", "pypi_keywords_clean": "django gtfs"}, "biosustain/potion-client": {"git_readme_keywords": "package powerful support example authentication interface resolving description extension pagination installation", "git_description_clean": "a python client for apis written in flask potion", "git_keywords_clean": "", "pypi_description_keywords": "package powerful support example authentication interface resolving description extension pagination installation", "pypi_keywords_clean": ""}, "seanbrant/requests-wsgi-adapter": {"git_readme_keywords": "python application session wsgiadapter wsgiadapter wsgiadapter response django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python application session wsgiadapter wsgiadapter wsgiadapter response django", "pypi_keywords_clean": ""}, "ox-it/sharepoint": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic person password sharepoint firstlistname second variable python sharepoint stable version python setup opener basic sharepointsite basic username password utility development install lxml install python support yum install install command debian ubuntu u username output package manager fedora python shell github installation limited usage document import sharepointsite cd python sharepoint shell xml sharepoint lxml debian sharepoint h opener server python library sharepoint import python lxml object command sharepoint support method appropriate shell u install sharepoint sharepoint python format username", "pypi_keywords_clean": "sharepoint"}, "Birdback/manage-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decorator definition framework friendly default overridden installation quickstart positional environment variable enforce positional argument environment environment downside builder installation argument definition py invocation argument argument possible", "pypi_keywords_clean": ""}, "/distributed": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "distributed library", "pypi_keywords_clean": ""}, "mozilla/django-mozilla-rna": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dcramer/mock-django": {"git_readme_keywords": "simple library python querysetmock certain django build status object django behavior filter status target django simple virtualenv configure", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple library python querysetmock certain django build status object django behavior filter status target django simple virtualenv configure", "pypi_keywords_clean": ""}, "keis/base58": {"git_readme_keywords": "bitcoin network implementation compatible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "inonit/drf-haystack": {"git_readme_keywords": "haystack python framework spatial searching experimental integration autocomplete router library installation documentation available django", "git_description_clean": "haystack for django rest framework", "git_keywords_clean": "", "pypi_description_keywords": "haystack order", "pypi_keywords_clean": ""}, "legnaleurc/wcpan-worker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "priority support queue asynchronous", "pypi_keywords_clean": ""}, "/maxminddb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install library descriptor block pycon module description first install g dictionary block bash ipv installation caller responsibility ipv database invalid source directory valid geoip geolite python module first download maxmind service corrupt standard database available python implementation memory try please contact install maxminddb python reader database g example db python support please bash usage pypy optional extension ipv address format extension maxmind corresponding assistance fd record binary ipv function maxmind db issue order default object specific address method first argument second argument mmap", "pypi_keywords_clean": ""}, "cisagov/pshtt": {"git_readme_keywords": "value management way header owing memorandum hostname entire domain governmental canonical strict transport mozilla mistake factor corporate proxy federal executive incomplete unexpired valid second level domain behavior domain record various https common press foundation cc universal http domain national laboratory downgrade inspector search endpoint domain domain dedication chrome preload significant guidance source related standard isps strong pulse dashboard flag equal max default budget https domain expired certificate cc dedication https lock invalid copyright valid https hostname validation project csv output web pulse waiver redirect domain example source dhs technical high level intent unknown observed redirect securethe news judgment repository issue request flag domain major news public suffix worldwide public clear field search result redirect logic endpoint support https balter assist http redirect valid certificate present previous validation domain csv general service immediate domain enterprise federal meaning homeland security detection lawrence public domain several isps residential department python python collaboration behavior domain preload ready executive branch module directive national cybersecurity pull request federal government http strict csv csv adoption united level domain security national blackhole inconsistent universal public office transport security freedom canonical https https encryption input https endpoint public web feature several following column different ability redirect service administration endpoint max copyright interest docker optional canonical endpoint", "git_description_clean": "scan domains and return data based on https best practices", "git_keywords_clean": "https hsts us federal government", "pypi_description_keywords": "full major value management truststore domain way header owing memorandum hostname entire domain server version governmental canonical strict transport mozilla mistake pshtt factor corporate proxy federal executive general information unexpired valid second level domain behavior domain record various https common press foundation cc universal http domain national laboratory agency national downgrade inspector search endpoint domain domain dedication chrome preload significant guidance source related mill public further standard isps infrastructure security strong pulse dashboard flag equal pshtt gsa max default budget server header https domain expired certificate cc dedication https lock invalid copyright valid https hostname validation project csv output web pulse waiver redirect domain example source dhs technical high level intent unknown observed redirect custom truststore judgment repository work issue request flag domain purpose public suffix worldwide public clear client authentication chain field search result redirect logic response endpoint support https balter assist certificate chain http redirect chain domain valid certificate present previous work worldwide validation domain csv general service incomplete chain immediate domain enterprise federal meaning homeland security detection odd lawrence public domain several isps residential department securethe unexpected exception ip collaboration behavior domain preload ready executive branch module chain length directive uncommon national cybersecurity security agency pull request federal government http strict chain support cyber csv csv adoption united intermediate certificate level domain blackhole inconsistent universal public office transport security freedom canonical https python https encryption input https endpoint public web feature several endpoint field following column different ability redirect service administration certificate domain endpoint max connection domain copyright interest docker optional canonical endpoint", "pypi_keywords_clean": "https best practices"}, "chaoss/perceval": {"git_readme_keywords": "bugzilla readthedocs perceval buzilla complete private account confluence discourse comprehensive perceval addition dateutil dulwich grimoirelab hyperkitty channel privacy license mediawiki meetup command twitter backend supybot telegram available github backend several twitter twitter software project version phabricator pipermail github research software beautifulsoup toolkit installation perceval software grimoirelab toolkit directory launchpad mattermost retrieval process repository stackexchange supybot gistgithub following general information documentation documentation telegram backend program telegram telegram specific pipermail pipermail dockerhub traditional backend authorized interface redmine feedparser", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "comprehensive perceval addition dulwich grimoirelab channel privacy license python dateutil twitter backend python dulwich supybot telegram available several twitter twitter pipermail supybot coverage python feedparser software toolkit installation grimoirelab toolkit general public gistgithub public license detailed information python python telegram backend dateutil python version documentation feedparser python beautifulsoup python", "pypi_keywords_clean": "development repositories analytics git github bugzilla jira jenkins"}, "suminb/pybase62": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package application alphabetical status deployment deploy original unencoded someone broader potential operational concise advantage original motivation module version installation following special", "pypi_keywords_clean": ""}, "/pynsist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python application information config install pynsist install installer block pynsist", "pypi_keywords_clean": ""}, "myyang/django-unixtimestampfield": {"git_readme_keywords": "unixtimestampfield class check format handle python modelb value examples python class datetime object unixtimestampfield provide convert format yyyy numeric option modelb submiddleware field version float field value install field datetime install django django unixtimestampfield numeric handle class modelb block python default show version choose dd hh compatible python import unixtimestampfield show format display police setup ffffff timezone import python field current datetime submiddleware check attribute example tricky middleware ordinal handle formfield datetime template timezone problem check minimum tzinfo operation exmpale datetime datetime custom field change field unixtimestampfield license block shell unixtimestampfield usage class modela minimum value retrive integer posix timestamp integer compatibility datetime instance provide custom", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unixtimestampfield class check format handle python modelb value examples python class datetime object unixtimestampfield provide convert format yyyy numeric option modelb submiddleware field version float field value install field datetime install django django unixtimestampfield numeric handle class modelb block python default show version choose dd hh compatible python import unixtimestampfield show format display police setup ffffff timezone import python field current datetime submiddleware check attribute example tricky middleware ordinal handle formfield datetime template timezone problem check minimum tzinfo operation exmpale datetime datetime custom field change field unixtimestampfield license block shell unixtimestampfield usage class modela minimum value retrive integer posix timestamp integer compatibility datetime instance provide custom", "pypi_keywords_clean": ""}, "viraptor/arpy": {"git_readme_keywords": "python status archived configuration current access interface standard python python version library coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module library archive symbol", "pypi_keywords_clean": ""}, "/theape": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install pyhamcrest install system documentation install theape online installing system python setup repository unified front installing installation different device install mock", "pypi_keywords_clean": ""}, "censys/censys": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python library search", "pypi_keywords_clean": "censys"}, "/todoist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project information official command interface example project todoist wrapper personal variable documentation license repository directory repository installation", "pypi_keywords_clean": ""}, "renatopp/pgnparser": {"git_readme_keywords": "notation termination result optional simple python plycount timecontrol python parser portable parser simple computer processible memory annotator plycount related string module chess example processible format", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python notation termination result optional plycount timecontrol portable computer processible annotator plycount related chess example processible format", "pypi_keywords_clean": "chess game pgn parser python"}, "/django-questionnaire": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "JamesRamm/archook": {"git_readme_keywords": "project maintainer available registry pythonpath regardless impossible project archook installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dlancer/django-appcore": {"git_readme_keywords": "application download number license development documentation command directory installation download following reusable appcore", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application download number license development documentation command directory installation download following reusable appcore", "pypi_keywords_clean": ""}, "/django-jquery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jquery template customization documentation template installation configure", "pypi_keywords_clean": "django jquery staticfiles"}, "zeekay/flask-uwsgi-websocket": {"git_readme_keywords": "useless advanced complex websocket homebrew install useless abstraction instance websocket handler command python installation available several different building complex request context performance homebrew python flexible different concurrency openssl normal request websocket access method asyncio install openssl websocket handshake", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "useless advanced complex websocket homebrew install useless abstraction instance websocket handler command python installation available several different building complex request context performance homebrew python flexible different concurrency openssl normal request websocket access method asyncio install openssl websocket handshake", "pypi_keywords_clean": "uwsgi flask websockets"}, "/pykka": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project version license status implementation available sharing copyright coverage concurrent execution cooperation", "pypi_keywords_clean": ""}, "/buildbot-waterfall-view": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tuxu/samplerate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python import result import samplerate samplerate resampler library function signature project successive compatiblity present documentation resampler process output available python cython extern callback resampled signal block python callback function version installation example secret rabbit assert resampler converter conversion system python samplerate cython license converter libsamplerate import numpy quality chunk samplerate resample resampler samplerate function library", "pypi_keywords_clean": "samplerate converter signal processing audio"}, "/nose-focus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value script code value installation tox code switch block bash run module level installation use project focus focus func run tox code block several block python parent class focus decorator thing lineage use attribute bash api focus focus right nothing ignored little decorator plugin run helpful script plugin ignored code pip code method use pip", "pypi_keywords_clean": "nose tests focus"}, "crucialfelix/django-ajax-selects": {"git_readme_keywords": "googleapis customizable customize default field lookup channel javascript django python smoothness jquery additional custom documention autocomplete documentation jquery jquery normal django jquery format integrate customize security documentation quick customize search compatibility django security policy template define lookup", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "foreignkey manytomanyfield javascript integrate customize security charfield additional django python autocomplete customize customize search django", "pypi_keywords_clean": ""}, "jimporter/doppel": {"git_readme_keywords": "doppel doppel message platform equivalent default effect output version recursive equivalent prompt behavior administrator access prefix version information multiple archive clause license version output project license install destination command similar offspring change needed directory copying source output archive copying elevate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "equivalent project information message platform equivalent license recursive destination offspring administrator access directory multiple elevate display", "pypi_keywords_clean": "file copier and installer"}, "fritzo/parsable": {"git_readme_keywords": "parsing package download license parsable python decorate default timing argparse optparse parsable command decorator python dispatch project python license information commmand command dispatch function version status verbose information library parsable environment variable version parsable lightweight decorator installation install syntax command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parsing package download license parsable python decorate default argparse optparse parsable command decorator python dispatch project python license information commmand command dispatch function status verbose information library parsable environment variable version parsable lightweight decorator installation install syntax command", "pypi_keywords_clean": ""}, "numberly/matterhook": {"git_readme_keywords": "click matterhook simple mattermost uxrkfugjzbqbypwhuqnyc private group login block python webhook channel efficient", "git_description_clean": "interact with mattermost incoming webhooks easily", "git_keywords_clean": "", "pypi_description_keywords": "click matterhook simple mattermost uxrkfugjzbqbypwhuqnyc private group login block python webhook channel efficient", "pypi_keywords_clean": ""}, "/django-lfs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "static jquery information expression variant documentation complete history online display python django sitemap django default manage history amount manage paypal development environment django support development django pagination", "pypi_keywords_clean": "django commerce online shop"}, "embray/d2to1": {"git_readme_keywords": "introduction setuptools import minimal installable transitional py script proofing distribute setuptools meantime standard library distribution possible broken meantime package project metadata project package metadata sizeable number packaging setuptools install install importerror documentation executable additional available backport change relative familiar installation normal example unstable important machinery forward support keyword functionality something necessary cfg overall general cpython standard sysconfig module packaging rationale section progress", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bundled valid build nominal python harmless hooks added section format useful multiple distribution micro version package metadata sizeable number improved hook option added releaser entry crash primary feature install clobber simple sample import setup future proofing much order analogous py added unhelpful error unstable metadata field setup setup keyword world testing functionality system added build command necessary option import different error message general distribution little traceback bug command hooks example versionconflict separate product progress source misleading exception setuptools import hack installable compatibility extension section compat section setuptools setup miscellaneous syntax setup cfg returned default difficult added presumably minor python setuptools entry distribution class basic functional project argument setup hooks minimal setup additional distribute added familiar installation normal improved handling example setuptools distribute solution important packaging module latter alternative setup hook custom description whitespace setup py infrastructure cpython standard namespace preliminary support something doesn custom command introduction robust monkey patching py script distribute setup distribute setuptools meantime monkey scheme whitespace standard library testing systemexit exception setuptools install added support support wildcard backport previous monkey support fixes status target feature python support incorrect distribution reference defaultgetdict machinery forward support setup import patched version modern setuptools particular standard replacement environment setup argument module added dictionary sysconfig module couple minor keyerror python specific packaging rationale config added few functionality doesn section python package multiple setup favor broad executable setup transitional habit build status overhead zip sys complete python community extension possible broken meantime package project metadata actual packaging build option documentation importerror deprecated added future version bump available absence change relative optional monkey patch python global section reimplemented command python testing version number something few basic fixes incompatibility bug fixes overall sub directory unpatched version cfg handling current version x object classifier option entry corner extra easier", "pypi_keywords_clean": ""}, "Antillion/arundeckrun": {"git_readme_keywords": "rundeck api arundeckrun use ok rundeck environment antillion arundeckrun fork client library clone block bash unit updates pip install majority addition target python head api token other api version installation pip continous integration integration rundeck server api project explanatory use repo python version implement version target project archive active use token environment self explanatory rundeck protocol python rundeck standalone dev docs compatibility python other environment aware install arundeckrun install tox compatibility target list http version compatibility job aagainst installation explanatory ok environment variable standalone jar https py mark use development tox requirement", "git_description_clean": "rundeck api python client", "git_keywords_clean": "", "pypi_description_keywords": "environment antillion explanatory wercker status updates library majority development rundeck addition target python continous integration rundeck server integration arundeckrun codecov python version implement project archive rundeck protocol python rundeck standalone install arundeckrun compatibility target version compatibility aagainst installation environment variable https requirement", "pypi_keywords_clean": ""}, "WojciechMula/aspell-python-py2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python extension", "pypi_keywords_clean": ""}, "iottly/prettysettings": {"git_readme_keywords": "compliance default specific language whereas useful configuraton applicable license version expected serializable consrtuctor representation language governing override override constructor license copyright creation software reference express minimal library exception computed ordereddict complex configuration copyright stefano filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance default specific language whereas useful configuraton applicable license version expected serializable consrtuctor representation language governing override override constructor license copyright creation software reference express minimal library exception computed ordereddict complex configuration copyright stefano filename", "pypi_keywords_clean": "prettysettings settings json environment variables"}, "etianen/django-reversion": {"git_readme_keywords": "framework history recover welcome simple install instance history license travisci branch reversion project django reversion request contribution upgrading extension version control version installation integration documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "alephdata/alephclient": {"git_readme_keywords": "mapping import document multiple possible utility argument instance directory example collection database crawldir command structure server foreign system directory uploads installation environment typical bulkload command language conjunction alephclient command installation install inverse", "git_description_clean": "api client for aleph supports bulk entity and document upload", "git_keywords_clean": "python client cli ingest", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dyve/django-bootstrap-toolkit": {"git_readme_keywords": "verheul tracker question django stackoverflow scratch license possible development django bootstrap question available integration history bootstrap toolkit apache github building django community datepicker inspiration django toolkit started bootstrap functionality please additional functionality bootstrapdateinput django project approach project please installation install request source everyone", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bitmazk/django-registration-email": {"git_readme_keywords": "package value default create signal market drawback twice class above m django template username create custom other account registration project template structure performance extensive account activation order important register success authentication backend update md hexdigest necessary password emailregistrationform original django form create django registration default function activate success signal handler troubleshooting access form method address successful account custom form desired extra custom authentication", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package value default create signal market drawback twice class above m django template username create custom other account registration project template structure performance extensive account activation order important register success authentication backend update md hexdigest necessary password emailregistrationform original django form create django registration default function activate success signal handler troubleshooting access form method address successful account custom form desired extra custom authentication", "pypi_keywords_clean": "django"}, "blacktop/virustotal-api": {"git_readme_keywords": "documentation hesitate something public private virustotal blacktop submit license installation python output", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "legend request request timeout virus publicapi public private virustotal release history credit tweemeterjop endpoint credit mrredamber changelog release privateapi credit timeout functionality method credit documentation report method memory presentation change block python readme installation credit leadzero unnecessary intelligence hesitate traffic method something credit adrianherrera delete python output folder structure ability timeout parameter upload network traffic credit rafiot submit license blacktop changelog block", "pypi_keywords_clean": ""}, "habnabit/vcversioner": {"git_readme_keywords": "simple available version sufficient version import development project nothing support single other setuptools hook information vcversioner command import setup order setup setup keyword format someone necessary project configuration parameter docs semantic specific prefix shell version module setuptools import compatibility default copy pasting contamination hard version information control system working directory current commit argument only g elevator import version example recent virtualenv elevator pitch docs multiple vcs setup py suffix add simpler vcversioner vcversioner setup version revision convenient project version flag version series project directory configuration project vcs presence testing distributed tarball sphinx create unable setup import regular python prefix g directory create entire couple different current working package adjacent mechanism behavior other source directory vcversioner vcs program possible python module checkout documentation checkbox output hg version control extract version untagged commit commit version dumb version number essential import vcversioner parameter someone semantic versioning subdirectory following vcversioner basic vcs specific distributed image vcversioner", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple available version sufficient version import development project nothing support single other setuptools hook information vcversioner command import setup order setup setup keyword format someone necessary project configuration parameter docs semantic specific prefix shell version module setuptools import compatibility default copy pasting contamination hard version information control system working directory current commit argument only g elevator import version example recent virtualenv elevator pitch docs multiple vcs setup py suffix add simpler vcversioner vcversioner setup version revision convenient project version flag version series project directory configuration project vcs presence testing distributed tarball sphinx create unable setup import regular python prefix g directory create entire couple different current working package adjacent mechanism behavior other source directory vcversioner vcs program possible python module checkout documentation checkbox output hg version control extract version untagged commit commit version dumb version number essential import vcversioner parameter someone semantic versioning subdirectory following vcversioner basic vcs specific distributed image vcversioner", "pypi_keywords_clean": ""}, "chrisseto/agent": {"git_readme_keywords": "caveats license additional crazier bundled license simple decorator asynchronous paginate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "caveats license additional crazier bundled license simple decorator asynchronous paginate", "pypi_keywords_clean": ""}, "venthur/gscholar": {"git_readme_keywords": "first result python gscholar first bibtex caution google pdftotext command simple lookup python version answer python compatible python pdf bibtex result default answer query google gscholar package scholar query python pdftotext bibtex gscholar query google scholar python library library install ip", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package bibtex scholar various", "pypi_keywords_clean": "google scholar cli"}, "/pypeg2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python bitbucket different language documentation access compiler homepage toolchain special", "pypi_keywords_clean": ""}, "/kivy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyjnius dynamic platform python cython platform dependent current community folder support apache license moblintouch entity roboto extensive widget reusable development python packager dynamic access freenode license version license installation documentation channel server pyobjus dynamic provided opengl prototyping whilst available multitouch support python implementation widget library extensive installation generic python keyboard license version speaker building mailing interaction virtual keyboard reference lgplv microphone packaging python android various python pyobjus organization installation objective general documentation innovative python framework licensed python python python wrapper codebase designer platform independent contribution source android toolchain independent python deployable", "pypi_keywords_clean": ""}, "jaredlunde/redis-cache": {"git_readme_keywords": "memory backend license", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/aliyun-python-sdk-vod": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "script documentation official software application library module software development sdk", "pypi_keywords_clean": "aliyun sdk vod"}, "asphalt-framework/asphalt": {"git_readme_keywords": "configuration sophisticated ecosystem overhead external configuration asphalt possible development overridden configuration documentation network sophisticated functionality production coverage resource software asphalt functionality semantic versioning imaginable multiple network networked application microframework different highlight external handling asyncio incompatible trivial component", "git_description_clean": "asphalt application framework core", "git_keywords_clean": "asyncio framework python", "pypi_description_keywords": "configuration sophisticated ecosystem overhead external configuration asphalt possible development overridden configuration documentation network sophisticated functionality production coverage resource software asphalt functionality semantic versioning imaginable multiple network networked application microframework different highlight external handling asyncio incompatible trivial component", "pypi_keywords_clean": ""}, "/touchphat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial", "pypi_keywords_clean": "raspberry pi led"}, "leandrosouza/django-simple-audit": {"git_readme_keywords": "package django contrib httprequest backend variable current content support previous install django modification version installation feature example django textfield jnishiyama context translation experimental django django installed middleware request upload display current block management command framework authentication situation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package django contrib fiedls httprequest backend variable support previous install django modification block python version installation feature example django textfield jnishiyama context translation experimental django django installed middleware request upload block management command framework authentication situation", "pypi_keywords_clean": "revisions versioning history audit"}, "carlosp420/seqrecord-expanded": {"git_readme_keywords": "columns travis ambiguous licence default seqrecord shell compatibility build status python installation block shell wheel target pypi wheel coverage status pypi package status target sequence release target target wheel target version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "columns travis ambiguous licence default seqrecord shell compatibility build status python installation block shell wheel target pypi wheel coverage status pypi package status target sequence release target target wheel target version", "pypi_keywords_clean": ""}, "/sphinxcontrib-fancybox": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jquery sphinx fancybox license documentation version fancybox installation instalation default thumbnail fancybox extension adaptation output sphinx project thumbnail generate github message version documentation github extension fancybox", "pypi_keywords_clean": ""}, "raiden-network/raiden-contracts": {"git_readme_keywords": "implied warranty package document release mock old new deposit private subsequent solidity rd party raiden network useful deployment information multiple release process mainnet merchantability project deployment mainnet deployment check deployment check install public variable command python installation verification testnet deployment historical inertia pypi package version fitness production gas consumption please stable release release install contract version status testnet prominent version number install additional something corresponding install development package version gitter raiden several version process document check deployment access different function particular purpose deployed contract different byzantium protocol single version warranty etherscan certain txt party service contract specs access customtoken contract source production development further faq moment", "git_description_clean": "raiden network smart contracts", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "raiden ethereum blockchain"}, "libretees/itemize": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Ch00k/ffmpy": {"git_readme_keywords": "container pythonic interface license install travis current directory directory documentation section compilation quick example module version installation simplystic command compiled command documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "container pythonic interface install travis current directory directory documentation section compilation quick example module version installation simplystic command compiled command documentation status", "pypi_keywords_clean": "ffmpeg ffprobe wrapper audio video transcoding"}, "praekelt/jmbo-analytics": {"git_readme_keywords": "django middleware health proxy middleware travis center middleware request jmbo reverse google middleware googleanalyticsmiddleware django", "git_description_clean": "panomena analytics", "git_keywords_clean": "", "pypi_description_keywords": "django middleware method asynchronous health packaging license xxx unomena transparent travis changelog incorrect middleware request reverse panomena google middleware googleanalyticsmiddleware django", "pypi_keywords_clean": ""}, "tapanpandita/pocket": {"git_readme_keywords": "instance python wrapper object account available request method consumer detailed documentation official query installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "shad7/tvdbapi-client": {"git_readme_keywords": "client python thetvdb python client format usage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "client python thetvdb python client format usage", "pypi_keywords_clean": "tvdb json api tv espisode"}, "/statlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "clinicedc/edc-model-admin": {"git_readme_keywords": "custom django question python deployment schedule default django modeladmin namespace travis codecov request object requisition included urlname middleware useful submit example dictionary", "git_description_clean": "edc custom django modeladmin mixins tags and templates", "git_keywords_clean": "", "pypi_description_keywords": "custom django question python deployment schedule default django modeladmin namespace travis codecov request object requisition included urlname middleware useful submit example dictionary", "pypi_keywords_clean": "django modeladmin edc"}, "/imposm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstreetmap default mapping changelog postgis prefix uniontables importer postgresql postgis debug option postgis support relation projection minute localizedname field internal refactoring verbose output update option function stringindex information changelog source release source progress special pseudoarea field imposm linux", "pypi_keywords_clean": ""}, "metrasynth/radiant-voices": {"git_readme_keywords": "alternative editing sunvox metrasynth project radiant analysis automatic algorithmic composition pythonic possible algorithms sunvox fm module interpretation command project metrasynth network memory buildstatus metrasynth radiant structure alternative project performance coverage example interaction complexity analysis python status overview playback documentation radiant output module collective imagination genetic algorithms sunvox project official sunvox parametric python generative generative genetic modify standard sunvox inspection specific generative sunvox interface convenient module documentation status", "git_description_clean": "sunvox file format tools create modify read write", "git_keywords_clean": "", "pypi_description_keywords": "alternative editing several similar correct controller official documentation algorithms sunvox support interpretation command keyword overview genetic algorithms various algorithm parametric generative genetic modify generative defined controller defined algorithmic composition argument constant command example default behavior network structure performance example sunvox algorithm complexity analysis collective imagination attribute divisible function official sunvox controller sunvox version convenient unimplemented notation destination controller radiant pattern pythonic instance separate y project metrasynth controller number alternative project graphviz coverage property playback documentation radiant sunvox lowercase sunvox project tabular representation initial release friendly inspection access standard sunvox specific specific exception sunvox metrasynth project programming analysis automatic package specific changelog writing layout interaction inclusion possible output accessible representation suitable generator connected velocity velocity version number initial information x upload sunvox interface metrasynth radiant", "pypi_keywords_clean": ""}, "/sphinxcontrib-autorun": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package description", "pypi_keywords_clean": ""}, "praekelt/django-recaptcha": {"git_readme_keywords": "package example optional setting checkbox widget series installation python django recaptcha checkbox verification domain paramater default google development security check field widget following language single other django release copyright google proxy functional information optional accessible several block python recaptcha please django production version setting dictionary checkbox default field verification recaptcha widget django recaptcha domain google javascript crawford recaptcha widget integration recaptcha keys licenced warning fucci blogpost zh language parameter event behaviour recaptcha copyright single widget recaptcha django installation install recaptcha invisible client section information django google recaptcha", "git_description_clean": "django recaptcha form field widget integration app", "git_keywords_clean": "python django recaptcha recaptchav recaptcha v", "pypi_description_keywords": "extra parameter kz syntax recaptcha added checkbox widget added polish python django verification domain default argument confusion class fadeev initial addition support single widget template correct iframe jasinski added information optional added invisible version added french field verification domain registration version django registration zh parameter default template added deprecation french dutch google language captcha recaptcha endpoint template custom setting javascript recaptcha added btaylor design dependancy support field widget following language specification django release default branch functional taylor allow recaptcha please brazilian portuguese interaction setting dictionary upstream registration dependency number django recaptcha release master mutable default bugfix release widget integration render widget django support licenced pistorius hedley endpoint refactor language added python translation kz remote single widget installation install request suport added django added added spanish venvs github bugfix default google django suport fixed python travis added security check confirmed check bugfix added support proxy support added block python invisible recaptcha support django django production constructor chinese translation python support reference local development checkbox default fixed russian update crawford recaptcha warning mention initial release behaviour recaptcha django cleanup added recaptcha invisible section regression django fixed added nocaptcha certain javascript object added django recaptcha support google recaptcha package example optional fixed travis mechanism series installation paramater recaptcha checkbox added russian variable handle template recaptcha possible brandon taylor sephton travis changelog support cleanup accessible several nocaptcha recaptcha recaptcha widget barry recaptchafield respect argument chinese google javascript fixed widget refactor client environmental variable fucci blogpost support fixed environment variable client runtime information django extra changelog fixed debug", "pypi_keywords_clean": "django recaptcha recaptcha recaptcha v"}, "dpranke/json5": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default optimized anything commas version history string custom subclass history release multiple possible language javascript workaround version addition project command ecmascript different approach output python implementation configuration language passing standard python github interchange format keyword argument format standard module release unicode writer implementation control consistency kwargs reader mention object unrecognized method module pyjson python", "pypi_keywords_clean": ""}, "/bottle-utils-html": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package collection web framework template web", "pypi_keywords_clean": "bottle utils html templates"}, "/falsy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "description license server operation handler falsy video static", "pypi_keywords_clean": ""}, "/plantweb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance default specific language excellent readthedocs plantuml graphviz applicable license version project argument deployment documentation plantuml plantuml docker documentation configuration command absolute complex graphs plantweb plantweb several sphinx directive language governing compatible interface sphinx license copyright python software docker container express repository overriden algorithm initial public powerful release license plantuml readthedocs documentation public release copyright carlos", "pypi_keywords_clean": "plantweb"}, "keybase/salsa20": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "secretsecretsecret keystream length implementation python example import installation plaintext xsalsa keystream library xsalsa j bernstein import urandom install yellow submarine ciphertext ciphertext xsalsa python message nonce stream cipher binary length nonce encryption libsodium compatible decode desired length decryption import xsalsa", "pypi_keywords_clean": ""}, "/django-admin2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django target change fix twitter bootstrap python django registry second example python myapp useful modeladmin ordering library import djadmin whatever bootstrap modern support explicit installation install install django internationalized faq django circus adaptability comment djadmin slovak chinese useradmin modeladmin display bottom implemented logout changepassword coverage documentation hierarchy everyone interacting modeladmin object logout various py fix django filter compatibility update complete rewrite pagenumberpagination implemented customizable update django flow method related history fix python migrating django contrib chinese german design tabular django crispy default urlconf polish slovak improved internal djadmin displayed django mongonaut legacy project margin argument import modeladmin enctype multipart breadcrumbs default readme implemented improved french polish django catalan italian fix django improved internationalization register comment import usercreationform implemented loghistory custom comment ipaddressfield prototype bootstrap function useradmin migrating documentation django improved example dropdown widget message backend pypi rename adminmodelmixin south django python example project selected choice restful similar jquery default block python status target reference implemented modeladmin extendibility third module internal context conduct everyone nomenclature sphinx installation russell consistency permission filter sphinx touch full documentation standardized indentation framework default multiple pagination travis specific problem fix password action verbose password change build status current display implemented internal naming adoption compatible update migration inception genericipaddressfield fix widget recent history implement spanish implemented height jazzband pagination system detail framework django coverage status implemented default documentation birth mongonaut preperation ability visible apps django compatible content pull faq implemented implemented booleanfield german catalan discussion modeladmin register template py import proper closing functionality implemented usercreationform userchangeform", "pypi_keywords_clean": "django admin"}, "jlubcke/pytest-pycharm": {"git_readme_keywords": "pycharm plugin pycharm debugger software debugger installation license plugin installation assertion configuration python correct interpreter dummy custom uncaught example debug installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "consequence pycharm plugin pycharm debugger software window debugger installation license interpreter project virtual directory apply command executable anything working directory virtual environment uncaught following example", "pypi_keywords_clean": "pytest py test pycharm"}, "mitsuhiko/flask-oauth": {"git_readme_keywords": "documentation flask website external oauth flask oauth oauth support unmaintained flask", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask support", "pypi_keywords_clean": ""}, "quantopian/trading-calendars": {"git_readme_keywords": "bmf bovespa sweden exchange website canada bmf euronext paris market identifier ireland bombay south euronext amsterdam iceland stock library bombay stock euronext lisbon stockholm stock india germany finland stockholm japan austrialian trading bovespa bvmf zipline exchange switzerland tokyo shanghai stock belgium euronext website english country version zealand wiener swiss exchange copenhagen stock exchange asterisk france bvmf brazil helsinki stock stock exchange tokyo stock denmark helsinki mercantile exchange italiana brazil euronext zealand exchange", "git_description_clean": "calendars for various securities exchanges", "git_keywords_clean": "", "pypi_description_keywords": "python library quantopian exchange", "pypi_keywords_clean": ""}, "Tanganelli/coapthon": {"git_readme_keywords": "advanced interface vallati mingozzi basic reverse proxy default resourcedirectory interface separate sphinx framework arduino mongodb database centos archlinux internet install master coapthon coapthon mingozzi coapthon official documentation master branch development directory server separate support install debian ubuntu proxy available directory client mongodb configuration tanganelli vallati research example discovery blockwise multicast server software available server py advanced format coapthon software install mongodb overview resource resource branch mongo shell server discovery release password resource py directory resource index mongod process resource simple blockwise feature proxy caching default configuration caching feature python library fedora centos citation program debian forum ubuntu fedora client twisted framework https directory database resource directory example resource py protocol compliant", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mpg-age-bioinformatics/agepy": {"git_readme_keywords": "package github install institute stelzmann symlink develop github available cologne germany biology readthedocs development version installation example whenever facility", "git_description_clean": "bioinformatics tools for python", "git_keywords_clean": "", "pypi_description_keywords": "package institute biology readthedocs facility", "pypi_keywords_clean": ""}, "pinax/pinax-testimonials": {"git_readme_keywords": "introduction contribute proven solution ecosystem interest community inclusive python django django python following template guidance twitter pinaxproject documentation installation wanting recommend documenation bulk queryset contribute section convention optional organization concrete contribution license author collection support migration update included reusable django eldarion initial migration several change django v django update compatible github coverage programmer license copyright display django python recent python support release contribute framework contributing please everyone overview python documentation support convert update update documentation organization affiliation console change description source platform donation random query initial release harassment config standardize documentation project please documentation markup single random template starter project random testimonial django compatibility inactive v support conduct connect query select", "git_description_clean": "a testimonials app for django", "git_keywords_clean": "", "pypi_description_keywords": "wanting solution django", "pypi_keywords_clean": ""}, "tehmaze/ipcalc": {"git_readme_keywords": "module github notation example support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "github documentation documentation documentation support notation example available", "pypi_keywords_clean": ""}, "nuagenetworks/monolithe": {"git_readme_keywords": "monolithe monolithe default compatible language multiple addition instance monolithe configuration reference command specification license configuration documentation command example virtualenv reference hierarchy specified language todolist tutorial something vanilla reference monolithe repository information tutorial installation monolithic configuration vanilla object vanilla reference following command command command", "git_description_clean": "generic and extendable code generator from specifications", "git_keywords_clean": "rest cli python", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "internetarchive/warcprox": {"git_readme_keywords": "deduplication warcprox status information requested copyright internet simple useful header memory buffer gpl copyright https traffic proxy warcprox traffic previous capture command encrypted https warcprox instance payload content corporation copyright version license warcprox software foundation process proxy client necessary trusted authority record option comprehensive modern trusted deduplication information archiving redundant program method remote server design default revisit whichever parallel franklin street legacy argument nothing malicious transaction full payload blobs derivative street fifth pymiproxy certificate processor https connection public license normal https traffic warcprox bucket remote information writing certificate verification tunnel floor boston internet archive implied warranty database warcprox field default sqlite batch nonsensical encrypted capture https latter remember recorded distributed archival deduplication database regular python svg warcprox parallel independent general public postfetch release gnu general calculate payload encrypted connection checksum fallback bucket browser warranty section security certificate particular purpose directive bleeding fifth floor warcprox writing historical python module capture system system warcprox merchantability documentation argument plugin change fitness public default bucket request proxy python middle technique content digest server complete record proxy thread example architecture minimal example nadeem douba notion request header archiving postfetch processor job archival replay information different replay software gpl client separate normal sqlite redundant content", "git_description_clean": "warc writing mitm http proxy", "git_keywords_clean": "", "pypi_description_keywords": "deduplication warcprox status information requested copyright internet simple useful header memory buffer gpl copyright https traffic proxy warcprox traffic previous capture command encrypted https warcprox instance payload content corporation copyright version license warcprox software foundation process proxy client necessary trusted authority record option comprehensive modern trusted deduplication information archiving redundant program method remote server design default revisit whichever parallel franklin street legacy argument nothing malicious transaction full payload blobs derivative street fifth pymiproxy certificate processor https connection public license normal https traffic warcprox bucket remote information writing certificate verification tunnel floor boston internet archive implied warranty database warcprox field default sqlite batch nonsensical encrypted capture https latter remember recorded distributed archival deduplication database regular python svg warcprox parallel independent general public postfetch release gnu general calculate payload encrypted connection checksum fallback bucket browser warranty section security certificate particular purpose directive bleeding fifth floor warcprox writing historical python module capture system system warcprox merchantability documentation argument plugin change fitness public default bucket request proxy python middle technique content digest server complete record proxy thread example architecture minimal example nadeem douba notion request header archiving postfetch processor job archival replay information different replay software gpl client separate normal sqlite redundant content", "pypi_keywords_clean": ""}, "closeio/flask-mongorest": {"git_readme_keywords": "package organization organization mongodb collection authenticationbase response serialization authentication string useful restful automated ordering resource application reference framework common baseresourceview document mongodb respective dictionary different resource configuration ability request params appreciated resource serialization mongoengine", "git_description_clean": "restful api framework wrapped around mongoengine", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "healpy/healpy": {"git_readme_keywords": "package underlying library include directory polygon cosmology scientific galactic ecliptic upgrade cartographic stackoverflow cosmology spectra multiple library include distribution ubuntu microwave development package possible heasoft include question scientific community general discussion support equatorial reference documentation spherical install rotmatrix compilation capable compiler optional mollweide gnomonic interested installation audience incompatibility rotmatrix reinecke knowledge resolution project development acknowledgment statement tutorial installed library cfitsio library software package compiler problem wrapper description environment libsharp repository installed boomerang missing cfitsio stackoverflow contribute heasoft package welcome searchable condition conflict compiler internal compiler specific compilation collaboration workaround further coordinate contribute project healpix acronym footnote", "git_description_clean": "python healpix maps tools", "git_keywords_clean": "", "pypi_description_keywords": "package underlying library include directory polygon cosmology scientific message galactic ecliptic upgrade cartographic healpix framework stackoverflow cosmology spectra multiple library include distribution ubuntu microwave development package possible heasoft include question bartelmann healpix scientific community general discussion support complete reference resolution discretization equatorial reference documentation spherical install rotmatrix compilation capable compiler optional mollweide gnomonic version interested installation audience incompatibility rotmatrix reinecke knowledge resolution project development acknowledgment statement tutorial installed library cfitsio library software package compiler problem wrapper description environment libsharp repository installed boomerang missing cfitsio stackoverflow contribute heasoft package welcome searchable analysis condition conflict compiler internal compiler specific compilation collaboration workaround further coordinate contribute project healpix acronym footnote", "pypi_keywords_clean": ""}, "regebro/svg-path": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "recursive straight previous segment function michiel licence closed property default behavior abcjjy length equavalent endpoint regebro regebro stender approximated segment addition argument minimum recursion license collection mathematical support mathdomain command future smooth relative geometric approximation calculation mutable sequence closed abcjjy relative example implementation justin python quadradic closeable justin gruenberg d attribute schwarz property saschwarz gruenberg solved regebro original negative author justin smooth segment original author incorrect release tokenizer svg representation accuracy vs performance control sequence nothing function qubicbezier original release michiel schallig information definition different svg parameter mtician changelog straight jython specific accuracy object feedback travis section doctext parseable dividebyzero module certain coordinate incorrect control", "pypi_keywords_clean": "svg path maths"}, "Azure/azure-cosmos": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "elasticsearch/elasticsearch-dsl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "destructive compatibility compliance optional wrapper underlying specific language response copyright elasticsearch writing article library bugfix possible elasticsearch server development license version applicable install elasticsearch instance documentation migration configuration default connection search request integration python development available idiomatic typical search structure compatible elasticsearch installation version license copyright language governing python application compound elasticsearch cluster writing software express system context document directory incorrect persistence example necessary custom cluster health retrieving virtual environment recommended elasticsearch instance documentation documentation different complex approach persistence chapter environment variable object terminology search example appropriate contribution method problem convenient official convenient access verbose", "pypi_keywords_clean": ""}, "/pybles": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module output", "pypi_keywords_clean": "ssh networking console tools"}, "Pylons/hupper": {"git_readme_keywords": "generic version console hupper robust integrated process documentation excellent pastescript command similar program hupper process monitor importable custom pyramid initial example", "git_description_clean": "in process file monitor reloader for reloading your code automatically during development", "git_keywords_clean": "daemon reload python inotify watchdog file monitoring", "pypi_description_keywords": "ulimit worker process monitor factory inheritable imported python stdlib module integrated process preferred support command monitoring stdlib runtime failure format payload necessary default monitor reloader traceback program sighup random optional dependency watchman message watchman support readline project globbing existent process monitor available initial hupper support example virtualenv equivalent number system unknown import custom description worker module hupper incompatible generic version robust immediate recursive python compatibility subprocess watchdog support argument console hupper instance similar worker unrecoverable monitor lookup multiprocessing descriptor leakage restart disable bytecode excellent pastescript editable arbitrary kwargs initial release verbosity certain ignoring custom debug information package anything briefly possible python module default logger output significant rewrite bytecode compiling pyramid hupper specific exception limited callable support python manipulation initial compatibility handle variant environment variable importable monitor process interface documentation status", "pypi_keywords_clean": "server daemon autoreload reloader hup file watch process"}, "/pycddlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation development programming problem computation development imagetravis imagetravis appveyor implementation system inequality representation appveyor imagetravis download documentation polyhedron download polyhedron description maximizing generator function", "pypi_keywords_clean": "convex polyhedron linear programming double description method"}, "rfk/tnetstring": {"git_readme_keywords": "mongrel consequence efficiency convenience application ordinary netstring specification integer length serialization library maintenance tnetstring blobs protocol memory postfixed unicode module serialization following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mongrel consequence efficiency convenience application ordinary netstring specification integer length serialization library syntax tnetstring blobs protocol postfixed unicode module serialization following", "pypi_keywords_clean": "netstring serialize"}, "Brightcells/django-six": {"git_readme_keywords": "library installation compatibility library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library installation compatibility library", "pypi_keywords_clean": "django six"}, "/silx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hdf appveyor minimal visualization histogram block dimensional writing comprehensive multiple alignment scatter development analysis project filename installation processing support license collection available unofficial unified converter backprojection fedora associated unified browser python tomography assessment reduction continuous integration unofficial zenodo zenodo sample isosurface documentation documentation different synchrotron radiation current version citation inspection travis convert filename purpose filename", "pypi_keywords_clean": ""}, "/pylibmc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "miscellaneous behavior manylinux anything extension pashinin development project performance improvement support documentation address bitcoin linuxes interoperability different purpose everybody version installation project bitcoin github bitcoin dvekhqijwcyzxtkahdhelxpegauoh dvekhqijwcyzxtkahdhelxpegauoh license release unicode initial information inflation maintainer pylibmc expedient comment release announcement critical seamless interoperability incompatible problem bitcoin address", "pypi_keywords_clean": ""}, "schlitzered/pep3143daemon": {"git_readme_keywords": "process project stephan schultchen license pepdaemon author author stephan documentation implementation pepdaemon daemon implementation request install pepdaemon schultchen stephan module fork pepdaemon", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation schultchen network copyright pepdaemon", "pypi_keywords_clean": "daemon daemonize daemonizing fork pep python daemon"}, "gmjosack/annex": {"git_readme_keywords": "project plugin pythonpath example assistance example plugin summary various requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "annex summary project example plugin plugin", "pypi_keywords_clean": ""}, "/objgraph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple object graphs development rivera support justin black public source history history python program arbitrary pretty graphs option internal helper method source filename unsafe private weakref special variable ipython jupyter argument eventlet monkey python bugfix installation lcall forgotten status objgraph compatible generation uncollectable garbage objgraph alternative attribute tarfile python unicodedecodeerror prototype dictionary implementation repository function highlight unrecognized convenient public release source repository illustrated accurate thouis interactive andrew shannon crammed coverage reference python support python object description compatibility improved dictionary temporary ascii filename argument friendly descend generation bugfix mojibake current changelog bugfix lambda jakub stasiak useless information output available memory graphs inline extrainfo argument heydon project directory graphs recommend qualified lambert stdout correct runtime convoluted corner documentation status", "pypi_keywords_clean": "object graph visualization graphviz garbage collection"}, "frictionlessdata/goodtables": {"git_readme_keywords": "error data average sequential option check spec treat constraint length scheme format available data report format error source duplicate header way type description positive new custom open knowledge able column doesn development standard csv file v support csv excel developer documentation other value row command cli use io error row number migration guide default dataset commit history length constraint equal version validation actor international coding file type order interval sequential problem structural cell duplicate machine key field new value pattern format new tabular new key new advanced blacklisted value breaking change cli new option value minimum valid count return breaking http error preset user description blacklisted parameter dataset source error format encoding data extra format error file data python expression check description str average header content method key added array tabulator library defined pattern constraint minimum spreadsheet software defined custom constraint spec error versioning validate maximum constraint row enumerable g blacklisted value advanced schemas report valid string validation basic valid check variable business incorrect scheme error use schema type current row argument project truncated custom support different blank unique field python validation database various big difference required unique structure use faq data doesn example pattern unique full changelog important framework number package spec interface table str column constraint str primary key string number package etc inside range incorrect format enumerable constraint scheme error unavailable minimum length multiple tabular added validation data quality schema defined schema custom type changelog header row first argument value duplicate definition g nested preset list g data g truncated value versioning specification blank header dataset extraction limited python multi table sequential value dependency list error http added new builtin preset new api extra value quality spec field value similar incomplete please enabled schema constraint depth explanation inferred schemas format developer data reading row list formatted commit non blank tabular file maximum length pattern constraint xls xlsx treat primary schemas bug constraint check description schema json developer mail added custom blacklist list validate list major version use decorator zip extension required field value maximum average str tabular dataset structural check custom field required advanced encoding problem etc parallelized doesn contain enumeration constraint following csv constraint value new command duplicate row constraint definition custom preset encoding error method signature median protocol changelog validate tabular tabular data validation report value detect schema isn preset builtin check error code knowledge international schema error json schema general tabular valid option type report json inferred validate data possible required constraint data package extra header table schema check etc content unique constraint str constraint report dictionary check user section check description io inconsistent description blank available local path empty invalid datapackage column number output first version schema spec header defined validate faq extraction protocol str list reading error average type minimum constraint sequential truncated bad version number added check error schema semantic versioning history new pretty common overridden use detailed information cli column blank row following documentation semantic use check different individual field mysql valid non csv xls protocol correct unique blank contain header description column blank cell mode interval remote uri custom error datapackage json api added library validation documentation section standard deviation custom check", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "error data average sequential option check spec treat constraint length scheme format available data report format error source duplicate header way type description positive new custom open knowledge able column doesn development standard csv file v support csv excel developer documentation other value row command cli use io error row number migration guide default dataset commit history length constraint equal version validation actor international coding file type order interval sequential problem structural cell duplicate machine key field new value pattern format new tabular new key new advanced blacklisted value breaking change cli new option value minimum valid count return breaking http error preset user description blacklisted parameter dataset source error format encoding data extra format error file data python expression check description str average header content method key added array tabulator library defined pattern constraint minimum spreadsheet software defined custom constraint spec error versioning validate maximum constraint row enumerable g blacklisted value advanced schemas report valid string validation basic valid check variable business incorrect scheme error use schema type current row argument project truncated custom support different blank unique field python validation database various big difference required unique structure use faq data doesn example pattern unique full changelog important framework number package spec interface table str column constraint str primary key string number package etc inside range incorrect format enumerable constraint scheme error unavailable minimum length multiple tabular added validation data quality schema defined schema custom type changelog header row first argument value duplicate definition g nested preset list g data g truncated value versioning specification blank header dataset extraction limited python multi table sequential value dependency list error http added new builtin preset new api extra value quality spec field value similar incomplete please enabled schema constraint depth explanation inferred schemas format developer data reading row list formatted commit non blank tabular file maximum length pattern constraint xls xlsx treat primary schemas bug constraint check description schema json developer mail added custom blacklist list validate list major version use decorator zip extension required field value maximum average str tabular dataset structural check custom field required advanced encoding problem etc parallelized doesn contain enumeration constraint following csv constraint value new command duplicate row constraint definition custom preset encoding error method signature median protocol changelog validate tabular tabular data validation report value detect schema isn preset builtin check error code knowledge international schema error json schema general tabular valid option type report json inferred validate data possible required constraint data package extra header table schema check etc content unique constraint str constraint report dictionary check user section check description io inconsistent description blank available local path empty invalid datapackage column number output first version schema spec header defined validate faq extraction protocol str list reading error average type minimum constraint sequential truncated bad version number added check error schema semantic versioning history new pretty common overridden use detailed information cli column blank row following documentation semantic use check different individual field mysql valid non csv xls protocol correct unique blank contain header description column blank cell mode interval remote uri custom error datapackage json api added library validation documentation section standard deviation custom check", "pypi_keywords_clean": "data validation frictionless data open data json schema json table schema data package tabular data package"}, "/chromote": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lucianopuccio/py-webdriver-manager": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "test selenium webdriver webdriver manager"}, "ISA-tools/mzml2isa": {"git_readme_keywords": "document structure build status maximum bioconda license dictionnary python module folder install database structure metadata available isacreator document version travis build extract metadata bioconda build machine python program backbone figure static status travis static mzmlisa additional metadata converter repository information script status appveyor appveyor license relevant access python dictionary curlftpfs example directory overview mzmlisa", "git_description_clean": "parser to get meta information from mzml file and parse relevant information to isa tab structure", "git_keywords_clean": "", "pypi_description_keywords": "document structure build status maximum bioconda license dictionnary python module folder install database structure metadata available isacreator document version travis build extract metadata bioconda build machine python program backbone figure static status travis static mzmlisa additional metadata converter repository information script status appveyor appveyor license relevant access python dictionary curlftpfs example directory overview mzmlisa", "pypi_keywords_clean": "metabolomics mass spectrometry metabolites isa tab mzml parser"}, "tinybike/weightedstats": {"git_readme_keywords": "python weighted median median installation median weighted directory weighted median numpy weighted block python example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "weighted median median installation usage median weighted numpy arrays arrays example directory weighted median numpy weighted", "pypi_keywords_clean": "weights mean median numpy statistics"}, "landlab/landlab": {"git_readme_keywords": "information landlab project individual landslide landlab interested repository operating available environment sediment glacial volcanic material advantage building manuscript numerical landscape installation", "git_description_clean": "landlab codebase wiki and tests", "git_keywords_clean": "", "pypi_description_keywords": "information landlab project individual landslide landlab interested repository operating available environment sediment glacial volcanic material advantage building manuscript numerical landscape installation", "pypi_keywords_clean": ""}, "m7v8/django-basic-authentication-decorator": {"git_readme_keywords": "package authorication application wsgipassauthorization authentication remoteuserauthbackend serveral decorator webserver", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package authorication application wsgipassauthorization authentication remoteuserauthbackend serveral decorator webserver", "pypi_keywords_clean": ""}, "abdallah/django-timelinejs": {"git_readme_keywords": "taiwanese mandarin veriteco maptype faroese taiwanese soundcloud combination preview mongolian syncdb russian slovak changelog chronological narrative console default beautiful timelinejs document example language italiano portugus license youtube flickr install django utilize timelinejs specified number installation subject slovenian russian django timelinejs number default bookmark available english negative localization default mozilla public release document history description custom language localization slovak icelandic norwegian indonesian public license installed button equivilent information different english franais timelinejs wordpress specific appropriate timeline shortcode template deutsch italiano icelandic faroese adjust language example twitter youtube intuitive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "vritco brazil portugus major simple plugin description example language youtube flickr config language specified number format option language localization publish timelinejs google combination preview localization default taiwanese mandarin spreadsheet template private spreadsheet google letter chronological narrative timelinejs document wordpress plugin spreadsheet public utilize timelinejs installation recent negative mozilla public custom slovak icelandic public license button timeline shortcode private setting icelandic faroese language example intuitive maptype portugus brazil appropriate columns soundcloud timelinejs source console default espaol deutsch choose public dutch czech subject slovenian russian arabic visibility available english google spreadsheet release document history couple equivilent window english franais specific franais espaol google public google portugus dutch czech danish veriteco faroese taiwanese changelog russian slovak beautiful detailed danish indonesian italiano portugus future change indonesian polish django timelinejs format license number default bookmark directory following window choose timelinejs template different timelinejs wordpress polish slovenian deutsch italiano template adjust corner twitter youtube debug strong chronological", "pypi_keywords_clean": ""}, "rickypc/robotframework-extendedselenium2library": {"git_readme_keywords": "selenium seleniumlibrary proxy configuration selenium webdriver license introduction synchronization support seleniumlibrary extendedseleniumlibrary readable library distribution contributor license download pgp command selenium project agpl keyword network connection console proxy general actual implementation license agpl version status extended selenium specific version console extract international license individual contributor building keyword angularjs support license agreement framework documentation library project software installation method framework number browser instance seleniumlibrary keyword documentation license similarity repository similar content noncommercial sharealike public license console pgp signature angularjs synchronization effort appropriate upgrade enhancement seamless migration benefit creative development status richard huang sharealike international github coverage copyright richard possible please please general public similarity download license selenium library environment status python monthly download robotframework jython browser python download manual installation double click certain package pull request public key introduction extendedseleniumlibrary installer contribution license framework standard license extended available python version license copyright temporary location seleniumlibrary selenium directory package version actual installation version download information extendedseleniumlibrary extendedseleniumlibrary documentation version diagram actual system double upgrading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "selenium seleniumlibrary proxy configuration selenium webdriver license introduction synchronization support seleniumlibrary extendedseleniumlibrary readable library distribution contributor license download pgp command selenium project agpl keyword network connection console proxy general actual implementation license agpl version status extended selenium specific version console extract international license individual contributor building keyword angularjs support license agreement framework documentation library project software installation method framework number browser instance seleniumlibrary keyword documentation license similarity repository similar content noncommercial sharealike public license console pgp signature angularjs synchronization effort appropriate upgrade enhancement seamless migration benefit creative development status richard huang sharealike international github coverage copyright richard possible please please general public similarity download license selenium library environment status python monthly download robotframework jython browser python download manual installation double click certain package pull request public key introduction extendedseleniumlibrary installer contribution license framework standard license extended available python version license copyright temporary location seleniumlibrary selenium directory package version actual installation version download information extendedseleniumlibrary extendedseleniumlibrary documentation version diagram actual system double upgrading", "pypi_keywords_clean": "robot framework extended testing automation selenium selenium webdriver web protractor angular angularjs angular js javascript karma webdev softwaretesting"}, "acasadoquijada/pycomedoresugr": {"git_readme_keywords": "licencia afecta nuestros actual dichos fichero directorio licencia creado manera sencilla usando python consultados pequea biblioteca python permite realizada usando crudo semana obtiene semanal biblioteca realizada deseado semana diccionario permite acceder ningn", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dichos fichero manera sencilla biblioteca realizada ningn actual licencia licencia realizada usando semana diccionario pycomedoresugr introduccin nuestros directorio licencia semanal permite acceder licencia afecta creado consultados usando python crudo python permite semana obtiene deseado", "pypi_keywords_clean": "python comedores ugr"}, "Mino-shiro/minoshiro": {"git_readme_keywords": "roboragi reddit instance documentation documentation different install postgresql version access postgresql support asyncpg alongside license minoshiro various pythonic version library feature minoshiro", "git_description_clean": "an async python library for searching japanese media", "git_keywords_clean": "anime manga lightnovel library async asyncio python python api api wrapper postgresql sqlite sqlite mal anilist kitsu anidb myanimelist asyncawait", "pypi_description_keywords": "roboragi reddit instance documentation documentation different install postgresql version access postgresql support asyncpg alongside license minoshiro various pythonic version library feature minoshiro", "pypi_keywords_clean": ""}, "/sushy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project license documentation conservative python library software apache apache license possible", "pypi_keywords_clean": ""}, "/slimta": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "MartijnBraam/isc-dhcp-leases": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "wroberts/fsed": {"git_readme_keywords": "illustration imagine default leftmost standard output boundary pattern program output character escape operation multiple version copyright original standard license separate install capable package manager coverage clever python regular status beginning greedy replacement utility policy wildwilhelm algorithm search searching carriage return travis imagine situation vertical horizontal pattern delimiter corasick", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "illustration imagine default leftmost standard output boundary pattern program output character escape operation multiple version copyright original standard license separate install capable package manager coverage clever python regular status beginning greedy replacement utility policy wildwilhelm algorithm search searching carriage return travis imagine situation vertical horizontal pattern delimiter corasick", "pypi_keywords_clean": "string search replace rewrite"}, "liluo/telegram": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/callme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package thread kombu bug tracker proxy documentation amqp introduction callme server client access package index result chronological multiple exchange design support broker fooserver possible development queue bound olivia folder queue design server callme design logging present rabbitmq skudriashev venkat successor explanation separate vhost available optional transport protocol installation example callme communication creation server exchange callme package server security mkisto protocol support worker thread client exchange source tarball directory permission system wingware durable client rabbitmq broker license callme repository following proxy exchange procedure callme simple architecture callme moment bug welcome everyone different callme proxy callme python capability client access client proxy method source python package module moment", "pypi_keywords_clean": "amqp rpc"}, "airekans/recall": {"git_readme_keywords": "following protocol framework service following installation access github performance protobuf example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rpc gevent"}, "belambert/edit-distance": {"git_readme_keywords": "ratcliff individual character represent individual implementation maximum readthedocs alignment library distance possible conduct addition argparse similar command available matching example oberhelp difflib documentation documentation additional difflib contributing identical difflib sequencematcher reasonable contributor covenant different appropriate numerous library represent minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ratcliff individual character represent individual implementation maximum readthedocs alignment library distance possible conduct addition argparse similar command available matching example oberhelp difflib documentation documentation additional difflib contributing identical difflib sequencematcher reasonable contributor covenant different appropriate numerous library represent minimum", "pypi_keywords_clean": "edit distance editdistance levenshtein"}, "willprice/omxplayer-wrapper": {"git_readme_keywords": "communication external raspberry overhead omxplayer process pyomxplayer development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project version pypi license documentation status build omxplayer wrapper pypi version build status status alt alt documentation wrapper pypi pypi license pypi python python omxplayer coverage documentation status", "pypi_keywords_clean": "omxplayer pi raspberry raspberrypi raspberry pi library video media"}, "web2py/pydal": {"git_readme_keywords": "following database abstraction mongodb license different firebird context installation documentation program dialect portable available postgresql informix database backend further compatible example complete documentation realtime original", "git_description_clean": "a pure python database abstraction layer", "git_keywords_clean": "", "pypi_description_keywords": "database abstraction different python database dialect portable abstraction layer python context original webpy compatible", "pypi_keywords_clean": ""}, "/clearbit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information lookup environment variable documentation directory account address response authorize corporate information testing library installation clearbit", "pypi_keywords_clean": ""}, "/ibm-db": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "server specification implementation database extension", "pypi_keywords_clean": "database db api interface ibm data servers db informix ids"}, "viniciuschiele/flask-apscheduler": {"git_readme_keywords": "codeclimate travis hostname coverage travis support scheduled authentication package index documentation feedback scheduler configuration travis codeclimate extension installation coverage codeclimate apscheduler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "apscheduler"}, "Outernet-project/sqlize": {"git_readme_keywords": "introduction quoting initialization tracker comparison difficult multiple library possible utility intentional columns argument support similar database chainable available mutability advantage installation python keyword mutliple transparency placeholder example python tutorial common attribute builder manipulate generated individual codebase underscore section deletion method replacement concept", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction quoting initialization tracker comparison difficult multiple library possible utility intentional columns argument support similar database chainable available mutability advantage installation python keyword mutliple transparency placeholder example python tutorial common attribute builder manipulate generated individual codebase underscore section deletion method replacement concept", "pypi_keywords_clean": "sql query builder"}, "/topia-termextract": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nn place nn ikea nn negotiation decision nn interested modal verb correct default dt breach outcome text minister nn tagger initialization tagger tagger stress tagger cd card closure vvn indicate palestinian theatre thursday nnp state nn extractor termextractor treetagger pos linguistic use filter component service notice security internal jj eternal jj british consul extractor filter dt palestinian palestinian jj place nn termextractor tagger sent police fox let true let number framework extract termextractor status jj interim strength indicator richard makepeace work tagger defaultfilter singlestrengthminoccur nn minister doctest report work topia termextract extractor text police police mr makepeace dt police noun tag nn fox security minister further jjr nns order vvg take jerusalem sent np british nnp jerusalem use several extractor tagger notice nn np richard keyword extraction shut vvd np authority rb jump stephan determine np israel opening nn initialization extractor breach keyword extractor negotiation sent pos tagger correct tag nnp makepeace singlestrengthminoccur extractor jj international action authority sent simple pos termextract import east jerusalem nn consul concept tagger text vbn connected tagger police nnp mr annex east multi word british council action nn simplisitc linguistic vvg act east nnp such pos closing jerusalem israel word nouns determination jj same nns sent jerusalem richard international jj consul general tag text police jerusalem palestinian palestinian further jj minister israeli nnp stephan dictionary little event nn literature festival vvp take breach closure take action nns accord default noun vb regard text term authority palestinian place police vvn connect israel nnp newton german hope richard text doctest ikea ikea ikea nn nns police nns lover opening event nn decision np makepeace fox tail stephan nnp israel internal ikeas ikeas palestinian authority jj regrettable nn peace mr nnp interim jj vvn determine israeli jj event israel sent dt occupy east term strength tagger tag richard np tagger true import extract np palestinian israel np nn court negotiation breach document nn literature use topia report ndiff jj further nn prp nn breach jj israeli topia term negotiation nn shut vvn tagger stephan israel israeli determine yahoo keyword event literature alongside israel festival nn identification police internal tail fox police nn regrettable jj nns stress nnp east same jj proper nouns regrettable decision text let makepeace palestinian pos opening council nnp framework nn simple statistical jerusalem literature festival richard dt british jj closing vbg documentation term example tagger extract defaultfilter result british np nn moment jump vb pp event sent nn area general east closing nn east east general nn available capital sent search database release part connected vvn vbn shut festival opening regard vb use import tag literature nn nns event immense search excellent british default filter dt court nnp council strong list saturday opening saturday nnp permissivefilter extractor makepeace nnp jjr further peace nn np mr community nn authority saturday fox nn trivial permissive take vvp makepeace np part nn state palestinian minister theatre nn order initialize np thursday interim peace nn status nns authority intelligence nn security nn text police area extractor topia nn intelligence hope nn nnp thursday cc np saturday tail tail nn festival termextractor extractor jerusalem israeli sent israeli court nn tagger first linguistic breach nn police tagger content prp term extraction court order let look nps nnps palestinian sent pp community sent status nn festival closing tagger initialize sent israel speech text authority british several term np east first tag hope vvp vvp hope jump vbz police notice use lexicon nnp israel jj internal authority nnp stephan stephan closure nn term extractor determine verb sent saturday scenario nns talk part area nn area sent moment nn tagger extractor palestinian hope regrettable moment vvn occupy nn event nns ikea initial release ikea tagger tag tagger nns ground area let thursday vvd prevent nns example vvn shut commercial use tagger pos internal security news article jump tagger simple text nnp richard theatre nn israel pos tagger ikeas area yahoo ikeas nns hope look tagger ready thursday np useful set order nn vvn recognise richard nnp normalize plural permissive filter nnp authority multiple council np international community fox nnp saturday nn community boston international literature nn opening free german consul order event great nn state mr np jj british jerusalem nnp vb take nn part negotiation israel nn action vb jump nn police vvd shut nn hope tagger ikea saturday np vbg closing closing event vvn involve nn closure np jerusalem connected vbn little bit police nns important capital nn authority np verb tagger statistical analysis jump normalize intelligence take vb filter extract east np jj eternal text british component let jerusalem np extract extractor tag list literature israeli makepeace court extract permissivefilter eternal capital vbd nn theatre narrow vvn annex termextractor let nn capital text extractor exmaple news further negotiation jj palestinian np council shut palestinian event peace capital peace state alongside israeli police extractor yahoo palestinian state nn security council british real bbc article single word closure israel piece simple example saturday pos extractor extract palestinian np vvn issue strength amount pos internal place sent sent mr package vvp regard festival pos implementation nn notice frequent tagger security palestinian same theatre ndiff police makepeace international speech pos event prp sentence tagger connected everything shut vbn time good take place output police jerusalem mr nn framework nn closing police shut", "pypi_keywords_clean": "content term extract pos tagger linguistics"}, "agusmakmun/draceditor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package uploader setting collect storage draceditor support toolbar preview browser draceditor checkout virtual enviroment available register application version version draceditor refference semantic repository draceditor mention templatetags enviroment virtualenv template integrated restructuredtext django markdownx installation draceditor django markdown", "pypi_keywords_clean": "draceditor"}, "enStratus/mixcoatl": {"git_readme_keywords": "quetzalcoatl specific library serpent resource", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "manager python", "pypi_keywords_clean": ""}, "ascv/hll": {"git_readme_keywords": "default maximum murmur current hyperloglog algorithm bytearray development package estimator license merging install documentation python development indexing efficient python software buffer unaffected cardinality individual integer register py", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hyperloglog algorithm x efficient cardinality", "pypi_keywords_clean": "hyperloglog hyper loglog loglog cardinality counting sketch"}, "/django-urlmiddleware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "configuration documentation specific middleware urlmiddleware", "pypi_keywords_clean": ""}, "/kvlite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Kozea/cairosvg": {"git_readme_keywords": "postscript cairosvg cairosvg information converter", "git_description_clean": "cairosvg is svg converter based on cairo it can export svg files to pdf postscript and png files", "git_keywords_clean": "python converter svg png pdf cairo", "pypi_description_keywords": "postscript cairosvg cairosvg information converter", "pypi_keywords_clean": "svg converter cairo pdf png postscript"}, "rpoddighe/pybursts": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package complete interval markov implementation knowledge discovery gitignore description transition interval output installation python hierarchy infinite streams sigkdd column activity kleinberg algorithm exponential distribution hierarchical structure module coefficient", "pypi_keywords_clean": "burst detection data mining text mining"}, "twitter/twitter-common-exceptions": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/python-igraph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analysis publication quality different windows functionality interface available compilation unofficial compiled network research performance distribution complex network", "pypi_keywords_clean": "graph network mathematics math graph theory discrete mathematics"}, "/os-api-ref": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "progress potential full openstack structured service javascript response way endpoint useful apache license assist parameter support addition project support collection openstack project sphinx stanza documentation source sphinx version subject example sphinx stanzas resource please reference status method sphinx discuss particular software apache repository button information enhance documentation microversion selector license documentation openstack discuss unstructured english request method strength repetitive collapse precise complex javascript", "pypi_keywords_clean": ""}, "/xstatic-rickshaw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project javascript library xstatic packaging rickshaw rickshaw install xstatic rickshaw rickshaw javascript minimal support", "pypi_keywords_clean": "rickshaw xstatic"}, "/gedcompy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence version genealogy public licence gedcompy library example", "pypi_keywords_clean": ""}, "lepture/flask-storage": {"git_readme_keywords": "storage backend installation collection simple configuration installation install upyun backend backend upyun backend backend", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage backend installation collection simple configuration installation install upyun backend backend upyun backend backend", "pypi_keywords_clean": ""}, "/vumi-msisdn-normalize-middleware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "normalize middleware vumi", "pypi_keywords_clean": ""}, "/yunpian-sdk-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "choppsv1/netconf": {"git_readme_keywords": "package netconf support branch available subdirectory documentation netconf present netconf following example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package netconf support branch available subdirectory documentation netconf present netconf following example", "pypi_keywords_clean": ""}, "/earthengine-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python programming programming language google", "pypi_keywords_clean": "earth engine image analysis"}, "LEW21/pydbus": {"git_readme_keywords": "implied warranty girepository pygobject useful pythonic merchantability license publication support fitness software foundation franklin software tutorial library changelog lewandowski general tutorial copyright gobject distribution repository warranty copyright information desktop notification particular purpose information copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty girepository pygobject useful pythonic merchantability license publication support fitness software foundation franklin software tutorial library changelog lewandowski general tutorial copyright gobject distribution repository warranty copyright information desktop notification particular purpose information copyright", "pypi_keywords_clean": "dbus"}, "osteele/nbcollate": {"git_readme_keywords": "package classroom setting similar functionality original question release related ruvolo license install documentation command provided notebook database assignment version github collated notebooks duplicate example application assignment collated nbcollate anonymous functionality collated example prompt installation command jupyter notebooks length installation student classroom review jupyter notebook script inspect completion education interface collated college", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nbcollate package similar functionality original question ruvolo license command database notebook version github installation application assignment collated nbcollate jupyter collated example student interface example inspect completion education collated college", "pypi_keywords_clean": ""}, "Shopify/pyactiveresource": {"git_readme_keywords": "package simple response article way endpoint routing protocol possible class development standard submiting coherent configuration documentation protocol pyactiveresource required object relational activeresource project available update existing object update version usable resource exception location header successful delete header class number server format overview similar fashion object installation complex element document attribute specifaction single element instance method relational mapping directory record typical response header resource authentication github please delete following dictionary philosophy transmitted information existing resource complex body pyactiveresource python protocol request method amount class variable restful routing location response delete destruction", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyramid-ldap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package setting information python awesome invalid responsible possible broken development license username documentation command version pyramid installation coverage building python initial version authentication password authentication pyramid application function information unescaped search change pyramid travis length password", "pypi_keywords_clean": "web pyramid pylons ldap"}, "/pyfits": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/tw-forms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scrapinghub/adblockparser": {"git_readme_keywords": "package compatibility tracker syntax adblock installation python dramatic adblockparser implementation element invalid default easylist library constructor disable possible instance license checkout inconsistent available memory matching current implementation version performance coverage homebrew example stdlib unsupported number status element hiding external information speedup something disable skipping description welcome", "git_description_clean": "python parser for adblock plus filters", "git_keywords_clean": "", "pypi_description_keywords": "package compatible version compatibility filter option tracker source checkout adblock installation python dramatic adblockparser implementation element invalid default easylist library script option constructor disable possible recent easylist compiled instance license support inconsistent available memory matching adblockparser likely filter current implementation version performance coverage homebrew example stdlib unsupported number python support status element hiding report external information speedup something release disable skipping description consistency filter syntax initial release welcome syntax check method known source", "pypi_keywords_clean": "adblock easylist"}, "/pscript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "important project installation pscript liberal license pscript firefox compiler pscript pscript explorer license internet explorer further principal example version", "pypi_keywords_clean": "python"}, "natano/entropy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kennethreitz/mercury-parser": {"git_readme_keywords": "mercury installation example client", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mercury simple client", "pypi_keywords_clean": ""}, "fracpete/python-weka-wrapper": {"git_readme_keywords": "enhancement library python optional pygraphviz documentation command pygraphviz optional python version installation example workbench machine python jdk directory environment wrapper python various javabridge matplotlib repository following python wrapper javabridge library directory available matplotlib optional", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "filtering added logging setup java class template string multiple recall curve weka documentation convenience method loader added added convenience string fixed classifier unique match global logging internal format dataset module index fixed class loader string added functionality output variable filter class global setting error message module method therefore weka algorithms parameter dimensional array easy access wrapper package static field party library added module array association plotting dataset generic access jni parameter local cache split fixed class java system class sparse project database added specific metric field multisearch filter index internal square matrix compatible third party added filter content number generation methid weka api jni thin completion constructor added module upgraded function internal float class upgraded label index issue added class float value upgraded weka incorrect jni static added method framework added method fixed instance added property added weka version workflow engine performance bottleneck partial fixed method option handling package added alternative weka respective interface added support package forum label template class added package support setting global added java method added fixed retrieval release upgraded simple workflow jvm classname value numpy dimensional module added class older precision recall user access class output clusterer module convenience property numeric class fixed possible added object added float added numpy curve method cache method various parameter flow added easy weka wrapper pypi package python weka instantiation module matlab matrix changelog added added wrapper directory package version javabridge package index package management following optional added fixed logging metric added added plotting class method added simple environment variable weka issue object interface fixed added property incremental filtering mother exception added help string", "pypi_keywords_clean": ""}, "megamark16/django-cms-themes": {"git_readme_keywords": "django contrib select upload theme cms quickstart project install install django theme record gz theme root something contrib admin django cms auth django theme tarball contrib auth uploaded installed apps apps django admin cms cms cms", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib select upload theme cms quickstart project install install django theme record gz theme root something contrib admin django cms auth django theme tarball contrib auth uploaded installed apps apps django admin cms cms cms", "pypi_keywords_clean": ""}, "/flask-enterprise": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wsdl xmlrpc enterprise enterprise", "pypi_keywords_clean": ""}, "/mozillapulse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sassoftware/keyutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infrastructure expensive operation management explicit available extension difference subfolder sensitive infromation exception", "pypi_keywords_clean": ""}, "nyaruka/smartmin": {"git_readme_keywords": "smartmin version frustration major compatibility embrace nyaruka django version documentation update object access official source smartmin smartmin rwanda repository django smartmin twitter", "git_description_clean": "django smartmin an admin like utility for users", "git_keywords_clean": "", "pypi_description_keywords": "smartmin version frustration major compatibility embrace django version documentation update object access official source smartmin smartmin rwanda repository django smartmin twitter", "pypi_keywords_clean": "django scaffolding crudl"}, "inveniosoftware/invenio-collections": {"git_readme_keywords": "software documentation metadata copyright experimental developer", "git_description_clean": "invenio module for organizing metadata into collections", "git_keywords_clean": "", "pypi_description_keywords": "minimum version folder development preview validation collection standalone package separation version memoize experimental development software dependency setuptools incorrect package version metadata license documentation initial public invenio copyright incompatible upgrades invenio", "pypi_keywords_clean": "invenio todo"}, "CenterForOpenScience/pydocx": {"git_readme_keywords": "exporter software pydocx support markup language science available office different markup", "git_description_clean": "an extendable docx file format parser and converter", "git_keywords_clean": "", "pypi_description_keywords": "exporter software pydocx support markup language science available office different markup", "pypi_keywords_clean": ""}, "Thibauth/python-pushover": {"git_readme_keywords": "message default python pushover utility support block bash github overview configuration documentation additional block python github pushover notification application notification service service installation typical function python command parameter comprehensive python access optional argument section module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "device message default python pushover utility support crupuk github overview configuration documentation drachenminister thibaut additional lundborg block python github pushover notification application birch notification service module service installation typical priority function python command lundrigan philipbl initial release parameter comprehensive python philip lundrigan access optional argument section miller copart block", "pypi_keywords_clean": ""}, "xethorn/oto": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scities/marble": {"git_readme_keywords": "research reference different attraction repulsion repository documentation hesitate command citation emergent available anything publication useful segregation install residential segregation", "git_description_clean": "study residential segregation", "git_keywords_clean": "", "pypi_description_keywords": "research reference different marble attraction repulsion documentation hesitate emergent anything publication useful repository residential segregation", "pypi_keywords_clean": ""}, "guokr/asynx-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "hellerstanislav/eve-mongoengine": {"git_readme_keywords": "mongoengine validation compatibility initialization default repository author current dummy blinker optional possible schemas mongoengine integration import mongoengine validation legacy version mongoengine document database registered installation mongoengine import exception schema evemongoengine example extension anything format branch mongoengine extension corresponding cerberus additional documentation mongoengine blinker schema additional localhost corresponding mongoengine stanislav heller simple example register tuning import evemongoengine source related author stanislav mongoengine intfield cerberus schema example mongoengine mongoengine", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Muterra/daemoniker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "daemoniker platform signal", "pypi_keywords_clean": "daemon daemonize daemonic signals"}, "lebedov/scikit-cuda": {"git_readme_keywords": "availability package documentation information python library development project support license following information nvidia similar included available revision python version version toolkit scholarly publication comparable python software scikit cusolver runtime cublas version version platform documentation package description scikit package description device runtime pycuda version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "availability package documentation information python library development project support license following information nvidia similar included available revision python version version toolkit scholarly publication comparable python software cusolver version version platform documentation package package description device runtime pycuda version", "pypi_keywords_clean": ""}, "ionelmc/django-redisboard": {"git_readme_keywords": "django contrib uptime software bsd default build status redisboard detail clause license active documentation development target codecov bsd clause additional changelist redisboard pypi package target version status target django py redisboard installation optional optional django keepalive redisboard application value introspection pypy regular status travis server socket keepalive overview keepalive default target appveyor py redis wheel target pypi wheel summary django admin coverage status inspect password redisboard socket socket connect target wheel admin changelist runtime python redis monitoring django project connect operation appveyor build sever stub columns inspection redisboard static static redisboard pagination release target redisboard optional documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib uptime elasticache default redisboard detail incompatible exception response slowlog display object command clause license active documentation development fixed unicodedecodeerror changelist address length additional memory support added changelist redisboard hattem added optional monitoring optional django redisboard installation fixed unwanted keepalive redisboard django supportfor django virtualenv application software pypy regular server socket keepalive debug object overview command fixed keepalive default something socket connect return inspect summary password redisboard socket binary connection django support couple fixed django hattem runtime python connect operation bootstrapper django project script added python issue inspection static redisboard fixed typeerror introspection template vincenzo demasi handling changelog fixed exception handling pagination added django redisboard optional telepovsk redisboard static", "pypi_keywords_clean": ""}, "fullboar/pyvotal": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "miguelgrinberg/flask-runner": {"git_readme_keywords": "application configuration documentation object runner standard command example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "runner standard command", "pypi_keywords_clean": ""}, "/xstatic-patternfly": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project xstatic packaging install xstatic patternfly library minimal support patternfly patternfly", "pypi_keywords_clean": "patternfly xstatic"}, "django-addons/django-addons": {"git_readme_keywords": "upgradable project installation possible configuration install version complete integration footprint example django individual django website project necessary updating following community project interesting django website approach snippet feedback repetitive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "moonso/query-phenomizer": {"git_readme_keywords": "koehler charite sebastian koehler phenomizer username request password installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "koehler charite sebastian koehler phenomizer username request password installation", "pypi_keywords_clean": "hpo development phenomizer"}, "timgabets/pytlv": {"git_readme_keywords": "module parser string", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "length parser string useful module", "pypi_keywords_clean": "emv tlv icc parse"}, "languitar/setuptools-epydoc": {"git_readme_keywords": "package documentation generator dependency languitar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "api documentation command", "pypi_keywords_clean": "epydoc setuptools command"}, "/pyobjc-framework-servicemanagement": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information documention framework servicemanagement launchd subsystem documentation interface translation", "pypi_keywords_clean": "pyobjc servicemanagement"}, "OnroerendErfgoed/skosprovider-rdf": {"git_readme_keywords": "implementation skosprovider skosprovider interface", "git_description_clean": "skosprovider implementation backed by rdf", "git_keywords_clean": "rdflib skos python thesaurus vocabulary", "pypi_description_keywords": "dublin implementation python compatibility single conceptscheme support collection documentation output subordinate initial version cleanup conceptscheme identifier binary various inscheme information official python skosprovider identifier compatibile information skosprovider compatibile dataset namespace provider literal skosprovider interface handling superordinate concept rdflib skosprovider single concept", "pypi_keywords_clean": "rdf skos skosprovider vocabularies thesauri"}, "tmr232/awesomelib": {"git_readme_keywords": "awesomelib library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "awesomelib library", "pypi_keywords_clean": ""}, "wechat-python-sdk/wechat-sdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python invalid credential signature accesstoken unicode upload django wechatbasic grant jsapiticket token accesstoken decode unicode install jsapiticket invalid changelog response grant token accesstoken hashlib unicode generate credential grant ticket wechatconf", "pypi_keywords_clean": ""}, "django/asgi-ipc": {"git_readme_keywords": "partcular message process information healthier system flight maximum channel capacity pattern prefix expiry compiled object argument project globbing subsystem machine example memory shepherd capacity configuration regular expression compatability development environment github machine python regular security deadlock system megabyte security process repository backing kernel security djangoproject maintenance channel storage contact security advice module channel", "git_description_clean": "ipc based asgi channel layer", "git_keywords_clean": "", "pypi_description_keywords": "partcular message process information healthier system flight maximum channel capacity pattern prefix compiled expiry argument project globbing subsystem machine example memory shepherd capacity configuration regular expression compatability development environment github machine python regular security deadlock system megabyte security process repository backing kernel security djangoproject maintenance channel storage contact security advice module channel", "pypi_keywords_clean": ""}, "flypenguin/cattleprod": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everything download authentication breaking different complete rancher changelog quickstart introduction wrapper cattleprod release different object updated initial github repository", "pypi_keywords_clean": "rancher api"}, "/fontconfig": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "config fc import fc fc propertyname fcstrlistdone sl abstraction fc install enum version python version installation debian usr share whitespace usr unparse doctest bolditalic ttf pycon import local share install fontconfig usage ellipsis usr fontconfig enum distribution package dejavu serif print fontconfig underlying library ttf vim block pycon console pip ellipsis normalize cffi libfontconfig fontconfig lib xr lib pycon fc fontconfig sl module fc setname fontconfig fcfreetype salute config cffi fontconfig ffi low level few ftbuild ellipsis kilobyte complete python import fontconfig pattern config freetype pypi python enum package install pip install cffi module truetype dejavu libfreetype dev library version lib fcgetversion sl fontconfig tw fontconfig fontconfig uncomplete usage normalize whitespace fcgetversion void libfontconfig dev usr local python library python cffi enough lib fcinit snippet kilobyte salute apis usr xr package freetype freetype lib fcstrlistnext lib fcconfiggetcurrent library config fc fc abstraction moudule extension fontconfig print block console fcstrlistnext sl install python version fontconfig lib fcstrlistdone fontconfig fcgetversion version pattern fc fcpattern fontconfig version fcconfiggetcurrent sl config fontconfig fc version following doctest ellipsis system pattern enum cffi fcgetversion fontconfig version fc current config dev libfreetype parse dejavu setname system", "pypi_keywords_clean": "fontconfig cffi"}, "grst/geos": {"git_readme_keywords": "unified interface browser measure limited challenging flexibility documentation professional displaying quality swisstopo download mapproxy access available gsturm awesome version library installation printing functionality offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "maps google earth overlay map printing"}, "amstocker/ipfs-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "instance information filename pattern helper request please welcome formatting check install bug commit behavior license repository directory block basic block python daemon module python administrative python check match", "pypi_keywords_clean": "ipfs requests development"}, "GeoNode/django-geoexplorer-worldmap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "alessio fabiani worldmap service chinese interface source disable hypermap django leaflet dialog source changelog mapcomposer source identify dialog subtle problem invalid mouseposition js default disable possible packaging license wfs identify username install change widget version editor feature creation django geoexplorer worldmap contrib gazetteer boundless redundant source public license dropdown initial external client correct appropriate request template search source source problem search widget geonode search interface", "pypi_keywords_clean": ""}, "clarkduvall/serpy": {"git_readme_keywords": "serialization container block bash object serialization customized python complex class extended python inheritance python license serialization framework block python installation complex example feature example django software duplication format license serpy request documentation inheritance example popular python complex serpy python serialization", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "serialization container block bash object serialization customized python complex class extended python inheritance python license serialization framework block python installation complex example feature example django software duplication format license serpy request documentation inheritance example popular python complex serpy python serialization", "pypi_keywords_clean": "serialization rest json api marshal marshalling validation schema fast"}, "weedlabs/lineup": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parallelism portion simplicity complex example pipeline figure example install backend philosophy lineup lineup network pipeline framework defining horizontal useful seamless", "pypi_keywords_clean": ""}, "/rdfalchemy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python notation predicate sparql namespace seccik companyname company symbol companyname rdfsingle companyname company familiar access abstraction layer triplestore intuitive access company symbol rdfsingle symbol symbol optional rdfalchemy advanced", "pypi_keywords_clean": "rdf sparql"}, "revsys/django-friendship": {"git_readme_keywords": "request rejected urlconf builtin unread friendship python django response friendship request github bug development project validation friendship relationship migration unblock integration several installation application bi directional friendship manager status likely directional friendships common rejected friendship unrejected friendship rejected release django friendship following request respond infrastructure request blocklist information welcome caching follower", "git_description_clean": "django app to manage following and bi directional friendships", "git_keywords_clean": "python django friendship", "pypi_description_keywords": "request rejected urlconf builtin unread friendship python django response friendship request github bug development project validation friendship relationship migration unblock integration several installation application bi directional friendship manager status likely directional friendships common rejected friendship unrejected friendship rejected release django friendship following request respond infrastructure request blocklist information welcome caching follower", "pypi_keywords_clean": ""}, "wearespindle/django-ranged-response": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jpaugh/agithub": {"git_readme_keywords": "anything possible ruquest attribute look evident response status github pagination github logging digit useful handful limiting header class support separate error response indexing syntax previous request demonstration python logging request body limiting agithub python method nothing error message general parameter class replacing facebook graph agnostic github situation default way possible body specific transparent syntax response body object extensibility specific functionality copyright jonathan responsible argument course library catch keep upstream equivalent content expert status digitalocean facebook instantiate object github specific unicode representation custom http method function appropriate request impossible convenient distinct survey possible license helpful error partial example query full support http method facebook client username hood striking quality jonathan paugh logger k content dictionary supplied inconvenient error handling reference further scrutiny logging module python object know password following request quirk transparent way summary sequence additional functionality initial collection github authentication supplied dictionary agithub little python function github github facebook github implementation second guess behavior character query parameter request method extensible way overridden limit networking available example authentication usable function g handler license copyright everything salesforce conversion example github authenticated object functionality available following http something wrong enough information protocol object client python unicode", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "api rest github facebook salesforce"}, "/vapory": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "source software purple package licence syntax docstring typing sufficient difficult string possible ubuntu folder center vapory argument instance zulko github terminal documentation command support installation accessible camera installation vapory commit zulko github feature example zulko vapory vapory directory photo realistic different rendered python library welcome platform browser snippet object everyone", "pypi_keywords_clean": "d pov ray photo realistic ray tracing"}, "/djextdirect": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "orf/datatables": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python python template coverage installation filter function datatable instance version travisci simple construct callable object travisci coverage available request function additional template jinja column query example construct datatable columns", "pypi_keywords_clean": "sqlalchemy datatables jquery pyramid flask"}, "laike9m/pdir2": {"git_readme_keywords": "compatible version default exclusive printing customization install generic beautiful support install example inspected example install alternative branch attribute ptpython bpython returned insensitive support ipython complete example therefore hooray codebase jupyter notebook developement ipython ptpython convenient certain automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible version default exclusive seperate printing customization install generic beautiful support install history public example inspected example install support special alternative branch attribute ptpython bpython returned various insensitive support ipython complete example function therefore hooray parameter jupyter notebook contribution ipython ptpython convenient certain automatic", "pypi_keywords_clean": ""}, "pinax/pinax-documents": {"git_readme_keywords": "folder detail available change python django readable recommend pr disallow download specified authenticated model support django web filefield desired parent reusable django sharing relationship specify document management template folder folder delete blog license python compatible management app document deletion support convert disallow document add hookset return hookset class pr document forty percent specified folder download download awesome class document creation project reference specified document detail sharing reference pinax documentation markup template document v support conduct connect everyone hookset documentation folder pr document index default template model ecosystem unshared return documentation installation folder specify project urlpatterns disallow folder updating documentation detail downloading document download contribute section collection course desired folder unexpected keyword sixty percent compatible creation detail django example statement specify parent number keyword argument python documentation delete delete compatible updating django apps description bootstrap pinax quota pinax slack allow add harassment issue folder folder appropriate request deletion perform folder pr contribute kind inclusive contribute storage pr pr custom hookset project subdirectory interest parent folder template detail community django python pinax overview kwarg success message concrete contribution special permission coverage github document delete specify folder project blog dependency python support urls pr contributing please update handle folder context web framework hookset success sixty management package project please handle document section starter project amount django compatibility pr folder fix unexpected convert ci folder creation error add account management twitter pinaxproject add django valid pinax project md fix included video human programmer document detail folder deletion pk pinax license available class document change class folder drop django django v news license copyright bootstrap requirement python danger callable input something query method modifying method template parent pr source platform signal receiver subfolder permission document bootstrap filter pinax pinax pr deletion pr fix bug template blog chainable query documentation add", "git_description_clean": "a document management app for django", "git_keywords_clean": "", "pypi_description_keywords": "document management collecting", "pypi_keywords_clean": ""}, "joymax/django-dtpanel-htmltidy": {"git_readme_keywords": "tracker ubuntu configure validator install display various installation configuration validatory request response github django python content toolbar directory configurable following information pytidylib installation current request display warning", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python validator information content toolbar pytidylib installation tracker configuration install display various installation configuration directory github current request validatory configure request response configurable display warning following django", "pypi_keywords_clean": ""}, "miracle2k/onkyo-eiscp": {"git_readme_keywords": "package onkyo receiver default implementation variable length syntax complete tx unsolicited status receiver response useful official documentation multiple possible supported cosmetic project actual eiscp control response scheme original onkyo async complex argument credit command suggested syntax network available theory argument structure version request response onkyo eiscp answer readable definition example manual equivalent process command interface query message smarthome specification alternative document exchange attribute information installation custom computer readable description incoming formatting repository python encourage preferable connectivity different language python library script controller program object interface specific protocol documentation unique identifier onkyo protocol problem regardless significant related onkyo internal", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package onkyo receiver default implementation variable length syntax complete tx unsolicited status receiver response useful official documentation multiple possible supported cosmetic project actual eiscp control response scheme original onkyo async complex argument credit command suggested syntax network available theory argument structure version request response onkyo eiscp answer readable definition example manual equivalent process command interface query message smarthome specification alternative document exchange attribute information installation custom computer readable description incoming formatting repository python encourage preferable connectivity different language python library script controller program object interface specific protocol documentation unique identifier onkyo protocol problem regardless significant related onkyo internal", "pypi_keywords_clean": ""}, "inveniosoftware/invenio-search": {"git_readme_keywords": "g documentation jsonschema elasticsearch management deletion available copyright", "git_description_clean": "invenio module for information retrieval", "git_keywords_clean": "", "pypi_description_keywords": "g specified support initialization indexes invenio copyright available elasticsearch management deletion further documentation handling configuration variable complex configuration release jsonschema elasticsearch indexes creation urllib dependency", "pypi_keywords_clean": "invenio search"}, "JukeboxPipeline/jukedj": {"git_readme_keywords": "app jukeboxpipeline documentation", "git_description_clean": "django app for models used in the jukeboxpipeline", "git_keywords_clean": "", "pypi_description_keywords": "history migration changelog history jukeboxpipeline documentation", "pypi_keywords_clean": "jukedj"}, "Alexis-benoist/eralchemy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "postgresql license creator creator alexis python architecture modular architecture entity relation columns alexis benoist markup language diagram install database architecture figure python password sqlalchemy example figure welcome eralchemy feedback newsmeme example", "pypi_keywords_clean": "sql relational databases er diagram render"}, "mozilla/unicode-slugify": {"git_readme_keywords": "slugify unicode unidecode firefox transliteration many unicode slugify", "git_description_clean": "a slugifier that works in unicode", "git_keywords_clean": "", "pypi_description_keywords": "slugify unicode unidecode firefox transliteration many unicode slugify", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/google-api-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information january support documentation google library", "pypi_keywords_clean": ""}, "cztomczak/cefpython3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "popular application standard chromium framework support automated testing pyopengl pygobject browser wxpython website tomczak available internet scraping replacement", "pypi_keywords_clean": ""}, "vinces1979/pwgen": {"git_readme_keywords": "implementation installation install basic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple version", "pypi_keywords_clean": "pwgen"}, "libyal/libfvde-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python libfvde", "pypi_keywords_clean": ""}, "iKevinY/eulerpy": {"git_readme_keywords": "latter naming insight process eulerpy target pip pypi image command verifying skipped verification few command version target development process process travis image bai li overview incorrect target homebrew option skipped problem problem number script motivation license eulerpy homebrew version filename miscellaneous prefix kyle project relevant resource skipped suffix target pypi projecteuler editor solution homebrew eulerpy equivalent pypi homebrew bash usage functionality license click current directory syntax error li repository problem docstring python template current problem installation eulerpy block bash error whereas choice previous status target tool answer problem argument dependency reference generation process pypi version summary local specific problem recent problem bash eulerpy os travis pypi package build status docstring valid possible green terminal easy correct solution homebrew image output uninstalled python problem making directory eulerpy verifying pip homebrew different ability eulerpy travis naming scheme correct blog", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "latter naming insight process eulerpy cli functionality target pip pypi image command verifying skipped verification few command version target development process process travis image overview incorrect target homebrew option skipped problem problem number script motivation license eulerpy homebrew version filename miscellaneous prefix kyle project relevant resource next problem skipped suffix target pypi projecteuler editor solution homebrew eulerpy equivalent pypi homebrew bash usage functionality license click current directory syntax error problem docstring python template current problem installation eulerpy block bash error whereas choice previous status target tool answer problem argument dependency reference generation process pypi version summary local specific problem recent problem bash eulerpy os travis pypi package build status docstring valid possible green terminal easy correct solution homebrew image output uninstalled python problem making directory eulerpy verifying pip homebrew different ability eulerpy travis naming scheme correct blog", "pypi_keywords_clean": "eulerpy euler project euler projecteuler"}, "hellp/bitlyapi": {"git_readme_keywords": "longurl pprint vcfi hash import bitlyapi bitlyapi bitlyapi shorten longurl python example import pprint pprint arbitrary return wrapper import pprint global hash hash citxl citxl hash shorten domain python wrapper hash vcfi basic usage method longurl print", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "longurl pprint citxl changelog import bitlyapi bitlyapi bitlyapi shorten longurl python global example import setup pprint pprint arbitrary return wrapper import pprint shorten domain initial release python wrapper basic usage method longurl print", "pypi_keywords_clean": ""}, "cbmi/vdw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyvcf install distribute worker process suitable useful multiple performance section install command package manager version homebrew process directory otherwise necessary current variant nothing sensitive varify address cohort download distro package parallel parallelism python binary argument undesired database difference performance virtualenv django example statement likely session integrity activate environment workflow pipeline baseline iteration recommended postfix varify schemas loading pipeline varify project partial implementation notation postgresql validate absolute environment specific worker downstream dependency standard snpeff alternate download validate output monitor following setting parsing process summary database contention session activate detach install python varify instance mandatory varify database version control optional warehouse development python directory something worker consume following information walking variant memory baseline loading process centralized snpeff version correct existence snpeff", "pypi_keywords_clean": "vcf varify harvest orm genome"}, "gnarlychicken/aiohttp-auth": {"git_readme_keywords": "valid explicity ip address denied access abstractauthentication class library redis storage extensible familiar framework pyramid wsgi example function empty tuple session class remember function group authenticateduser wsgi module second policy order authorization mechanism actual mechanisms ticket module policy parameter provided access explicit member group lightweight simple first tuple strings encryptedcookiestorage login group everyone only middleware new middleware plugin matching session aiohttp session middleware factory simple system decorator policy cookietktauthentication manager middleware only specific permitted plugin provided httpforbidden backend authentication id username tkt apache immutable provided encryptedd application context particular sequence authentication middleware permission mod different storage everyone group group license authentication mechanism simple abstraction apache ticket storage mechanisms package system similar maximum aiohttp simplistic example many forget function access context cookie session manager future python hash value server simple access access control simple mechanism security hash http allow deny different authorization extra mechanisms such sessiontktauthentication policy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "valid explicity ip address denied access abstractauthentication class library redis storage extensible familiar framework pyramid wsgi example function empty tuple session class remember function group authenticateduser wsgi module second policy order authorization mechanism actual mechanisms ticket module policy parameter provided access explicit member group lightweight simple first tuple strings encryptedcookiestorage login group everyone only middleware new middleware plugin matching session aiohttp session middleware factory simple system decorator policy cookietktauthentication manager middleware only specific permitted plugin provided httpforbidden backend authentication id username tkt apache immutable provided encryptedd application context particular sequence authentication middleware permission mod different storage everyone group group license authentication mechanism simple abstraction apache ticket storage mechanisms package system similar maximum aiohttp simplistic example many forget function access context cookie session manager future python hash value server simple access access control simple mechanism security hash http allow deny different authorization extra mechanisms such sessiontktauthentication policy", "pypi_keywords_clean": ""}, "/imageflow": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "tensorflow image cnn"}, "/pygal": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "svg"}, "Azure/azure": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package individual package package bundle syntax azure functionality documentation version compatible installation python azure bundle number level version number uninstall azure package following shell compatibility microsoft azure information x shell breaking", "pypi_keywords_clean": ""}, "dgilland/flask-hashfs": {"git_readme_keywords": "storage initialization ecosystem content addressable prefix extension hashfs instance g license documentation database block python duplicate hashfs version travisci hashfs content desirable management system directory attribute typical metadata hashfs hashfs python configure full documentation access python generate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage initialization ecosystem content addressable prefix changelog extension hashfs instance alignment proxy access g documentation database block python duplicate travisci hashfs version dependency hashfs content desirable manual proxy management system directory attribute typical metadata hashfs hashfs python configure config access method python generate", "pypi_keywords_clean": "flask hashfs hash file system content addressable fixed storage"}, "/pthelma": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "gns3/gns3-net-converter": {"git_readme_keywords": "virtualbox information version format documentation current daniel style qemu junos topology converter current documentation converter original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "virtualbox information version format documentation current daniel style qemu junos topology converter current documentation converter original", "pypi_keywords_clean": ""}, "github/octodns": {"git_readme_keywords": "multiple config octodns simple ascii character traffic management conduct license spf multiple comfortable served dnsimple following folder separate single command bootstrapping config unsupported provider further information google cloud much variety ownership health rackspace aaaa setup branch arbitrary reliability engineering necessary powerdnsprovider general support dynamic sensitive record support complex dyn dynamic source quick example cloudflare geodns ovh member gpanel dyn provider schema careful deploy process ll focus subsequent python class mx dynamic copyright supported primary project zonefilesource aaaa mcfarland denominator license blank functional similar provider network straightforward trademark environmental sshfp readme ovh aaaa axfrsource aaaa example provider class virtualenv suggestion please domain further number dnsmadeeasyprovider aaaa manage below likely workspace config system dnsimpleprovider coordination configured document custom repository function button infrastructure workflow bootstrapping direct human target effort pythonpath header axfrsource config section information axfrsource aaaa level googlecloudprovider google alias support detail dyn config below tooling full context partial tinydnsfilesource folder github sanity check azure mgmt ovh ovh branch deploy pluggable configuration making screen similar previous github elastic please obvious difference secondary flexible geodns support visibility release summary reasonable janitorial below config architecture contributor covenant couple config provider specific github logos teammate problem manage provider directory config validation single record nsprovider special implementation mechanism result review workflow possible applicable record information actual cloudflareprovider aaaa successful documentation inconsistent output license octodns history several manage distinct change optional instance information destruction internal provisioning invertocat directory something human intervention aaaa alias following unexpected digitaloceanprovider aaaa different welcome process environment client correct stylized dynprovider dyn below", "git_description_clean": "tools for managing dns across multiple providers", "git_keywords_clean": "dns workflow infrastructure as code", "pypi_description_keywords": "multiple config octodns simple ascii character traffic management conduct license spf multiple comfortable served dnsimple following folder separate single command bootstrapping config unsupported provider further information google cloud much variety ownership health rackspace aaaa setup branch arbitrary reliability engineering necessary powerdnsprovider general support dynamic sensitive record support complex dyn dynamic source quick example cloudflare geodns ovh member gpanel dyn provider schema careful deploy process ll focus subsequent python class mx dynamic copyright supported primary project zonefilesource aaaa mcfarland denominator license blank functional similar provider network straightforward trademark environmental sshfp readme ovh aaaa axfrsource aaaa example provider class virtualenv suggestion please domain further number dnsmadeeasyprovider aaaa manage below likely workspace config system dnsimpleprovider coordination configured document custom repository function button infrastructure workflow bootstrapping direct human target effort pythonpath header axfrsource config section information axfrsource aaaa level googlecloudprovider google alias support detail dyn config below tooling full context partial tinydnsfilesource folder github sanity check azure mgmt ovh ovh branch deploy pluggable configuration making screen similar previous github elastic please obvious difference secondary flexible geodns support visibility release summary reasonable janitorial below config architecture contributor covenant couple config provider specific github logos teammate problem manage provider directory config validation single record nsprovider special implementation mechanism result review workflow possible applicable record information actual cloudflareprovider aaaa successful documentation inconsistent output license octodns history several manage distinct change optional instance information destruction internal provisioning invertocat directory something human intervention aaaa alias following unexpected digitaloceanprovider aaaa different welcome process environment client correct stylized dynprovider dyn below", "pypi_keywords_clean": ""}, "wildfoundry/lomond": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "following necessary documentation message websocket successful websocket connection process documentation github github repository websocket connection orderly tranquil dataplicity construct example", "pypi_keywords_clean": ""}, "dcolish/flask-markdown": {"git_readme_keywords": "install sphinx python current release shutdown flask markdown module nonetype development environment documentation environment virtualenv submodule", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module processing", "pypi_keywords_clean": ""}, "stefanholek/rl": {"git_readme_keywords": "package readline history example ubuntu interpreter default history interface complete installer completer interface extension useful standard library development readline documentation github installation command install developer shield available progress history history further version github development environment everything compiler configuration readline completer detailed tutorial callable alternative completion verbosity package factory function terminal window platform namespace completer completion compiler completion interface decorator readline completion canonical implementation installer window", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full python extension history stifling entry function way useful intermediate header detection development stefan implement stefan allow custom build termcap library github installation command remove stefan system python stefan macpython version level verbosity bsd pathlike graph rename module python stefan epydoc stylesheet completion process surrogateescape error gplv terminal window stefan restore bug stefan suppress stefan change other framework python interpreter completion interface workaround further canonical implementation linux stefan silence default switch readline support libedit speed stefan prompt stefan stefan work stefan support argument right thing function stefan developer shield stefan rename fix header approach something silence second performance codecs high level compiler configuration library readline readline completer library stefan correct issue stefan remove completion history stefan console error handler install button namespace compiler issue stefan initial readline stefan private stefan informative error decorator installer window active readline stefan avoid ubuntu debian interpreter prompt compiler warning gcc stefan update readme stefan update completer interface iterator standard library alternative python download location static build build static interface implement support installation immutable stefan filesystem sphinx fedora remove redundant github production history slicing fix c stefan accept dependency pleasant stefan custom epydoc static readline silence c macpython detection python convert stefan approach release second compiler expand factory work verbosity package distribute stefan factory implement iteration initial release issue stefan gnu readline coverage stefan c compiler lookup restore support fix memory completer completion module readline completion change license package readline history suppress compiler example ubuntu extension module readline environment duplicate history linux stefan history interface complete changelog stefan handle stefan switch allow history installer readline module implement history documentation building gnu stefan history progress history available output history development environment module stefan public implement subset silence compiler everything detailed tutorial callable support python thing stefan right stefan fix completion entry platform environment variable update static remove unused readline download distribute python unicode", "pypi_keywords_clean": "gnu readline bindings gnureadline"}, "hamcrest/pyhamcrest": {"git_readme_keywords": "key value valuable order logical syntactic sugar biscuit ginger saturday assertion number close empty dictionary python def match value readable useful isgivendayofweek import new matcher invaluable such library hasmethod import thebiscuit getchocolatechipcount standard usual python tested first pyhamcrest text match thebiscuit instance ignore package monthly use pyhamcrest scrutinizer image extra behavior target introduction thing matcher custom status travis travis image match number match regular string match network connection wrap method target appveyor simple pyunit single assertion exception number target wheel wheel supported only usage target landscape function code pyhamcrest docs value match import hasmethod sequence match matcher import object type wrap callable testcase def python assert subsequent object wrap difficult target scrutinizer match match pyhamcrest construct method parameter argument dictionary match number match version image return isgivendayofweek minor unrelated balance right own implementation code ignore extra regular expression value decorator code target example equivalent match equal unittest testcase number tutorial code github beginning thebiscuit equal github pull convenience assert wheel target installation hamcrest end saturday class writing matcher hasmethod class function travis ci writing custom match anything scrutinizer version composite documentation package appveyor build boolean condition landscape scrutinizer hamcrest documentation release target code duplication ui validation level target github sentence code quality condition code python packaging isgivendayofweek basematcher def testdateisonasaturday class isgivendayofweek form extra whitespace equal object particular value object identity import basematcher aspect type match custom failure hamcrest import non matcher quality status single instance forks target factory function status target ginger assert tool target supported subject match dictionary thebiscuit biscuit deferred callable doesn such method tested value ginger mybiscuit fragment property datetime complete string usage pattern pyunit method basematcher def pypi wheel pyhamcrest matcher anything useful matcher sequence assertion code match sugar pyhamcrest docs travis writing flexible behaviour unittest class relative order entire sequence forks image status version failure description scrtinizer status import unittest module ci build object match build status behavior github forks right such item many mybiscuit biscuit matcher implementation import import possible own matcher first method match object standalone function code python identifier key match gethazelnutcount equal getchocolatechipcount equal introduction pyhamcrest readability pypi package code image second method failure message python operator deferred object calendar coverage status description decorator decorator wrap order match installation process thebiscuit gethazelnutcount following equivalent code saturday return whitespace match different flexibility appveyor image object method call distribute precision list match forks github wheel image documentation status", "git_description_clean": "hamcrest matchers for python", "git_keywords_clean": "", "pypi_description_keywords": "valuable order logical syntactic sugar biscuit ginger saturday assertion empty dictionary python def readable useful isgivendayofweek import new matcher invaluable such library hasmethod import thebiscuit getchocolatechipcount standard usual python tested first pyhamcrest thebiscuit instance ignore package monthly extra behavior target introduction thing key status travis codeclimate version match number match regular string match matcher custom network connection wrap method target appveyor simple pyunit single assertion exception number target wheel wheel supported target landscape pyhamcrest docs precision import hasmethod sequence match matcher import wrap callable testcase def python assert subsequent object wrap difficult target scrutinizer match match pyhamcrest construct method parameter argument only dictionary match number match return isgivendayofweek minor unrelated balance right own ignore extra regular expression example match equal equivalent unittest testcase number tutorial beginning thebiscuit equal convenience assert wheel target installation hamcrest saturday class writing matcher hasmethod class function travis ci writing custom match anything composite documentation package appveyor build boolean condition landscape scrutinizer hamcrest documentation ui validation level sentence python packaging pattern isgivendayofweek basematcher def testdateisonasaturday class isgivendayofweek form climate version extra whitespace equal object object identity import basematcher aspect custom failure hamcrest import non matcher quality status single instance factory function status target ginger assert subject target supported match dictionary such method thebiscuit biscuit deferred callable doesn ginger mybiscuit fragment property datetime complete string particular pyunit method basematcher def pypi wheel pyhamcrest matcher anything useful matcher sequence match sugar pyhamcrest docs travis writing flexible behaviour unittest class relative order failure description scrtinizer status import unittest module ci build object match implementation build status behavior right such mybiscuit biscuit matcher implementation import import possible own matcher first method match object standalone function identifier key match gethazelnutcount equal getchocolatechipcount equal introduction pyhamcrest scrutinizer codeclimate pypi package readability second method duplication failure message python operator calendar coverage status description decorator decorator wrap order match installation process thebiscuit gethazelnutcount following saturday return whitespace match deffered object different flexibility status codeclimate object distribute release target documentation status", "pypi_keywords_clean": "hamcrest matchers pyunit unit test testing unittest unittesting"}, "ttinoco/optalg": {"git_readme_keywords": "package interior license documentation algorithms overview objective interface programming integer umfpack license lagrangian algorithm optimization raphson algorithm following license bsd", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pyslackers/sirbot-slack": {"git_readme_keywords": "invite build slack plugin crypto currency status endless build status documentation status personal assistant community build image width web status target sirbot slack full support documentation available build", "git_description_clean": "slack plugin for sir bot lot", "git_keywords_clean": "python python asynchronous sir bot lot slack", "pypi_description_keywords": "invite build slack plugin crypto currency status endless build status documentation status personal assistant community build image width web status target sirbot slack full support documentation available build", "pypi_keywords_clean": "sirbot chatbot bot slack"}, "/openexr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "format python openexr", "pypi_keywords_clean": ""}, "ampl/amplpy": {"git_readme_keywords": "package intermediary interpreter upgrade notebooks overhead copyright library optimization development license documentation computer available installation interaction generation irrelevant stability repository language platform introductory tutorial interface usability compiler reading", "git_description_clean": "python api for ampl", "git_keywords_clean": "", "pypi_description_keywords": "language interpreter intermediary repository generation irrelevant overhead documentation stability access interface usability computer version library installation reading interaction", "pypi_keywords_clean": ""}, "platinummonkey/thunderdome": {"git_readme_keywords": "python simple introduction thunderdome directory gremlin thunderdome thunderdome rexster server object rexster thunderdome simple example quick vagrant virtual virtual environment thunderdome repository example installation familiar google mapper feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package thunderdome object historical landmark deprecated following general placeholder", "pypi_keywords_clean": "cassandra titan ogm thunderdome"}, "pywbem/pywbem": {"git_readme_keywords": "major basic management simple link script wbem server pypi python addition listener pywbem section documentation developer documentation install other particular wbem usage tutorial prerequisite python install pywbem following simple overview pywbem section command compiler quick pywbem wbem milestone variety pywbem available detailed change active install released version documentation developer dmtf upcoming release target release interactive shell option development version version pywbem indication listener dsp pywbem documentation readthedocs documentation log section related issue link status master appveyor html pywbem coverage master local overview customization milestone definition pywbem pywbem documentation installation docs build wbem infrastructure os level compile mof interop namespace installation example script tutorial documentation raw html number alternative end python project wbem client planned installation section issue version documentation wbemcli mof width px basic direction level pypi documentation tutorial block bash release planned wbem management mof mof python environment basic information diagram release pywbem xml protocol block python feature section license script execute linux install mof compiler change history alternate typical wbem simple example travis development pywbem license pywbem link pywbem unreleased development server wbem implementation build status os setup link raw planned release target python change log link os available python version wbem indication prerequisite os environment active jupyter pywbem version setup link px align http information current version server wbemsubscriptionmanager issue pywbem python begin green svg", "git_description_clean": "pywbem wbem client and related utilities written in pure python", "git_keywords_clean": "", "pypi_description_keywords": "python process infrastructure information pywbem server indication listener management industry pywbem readme readme pywbem pywbem documentation client python pywbem purpose readme variety", "pypi_keywords_clean": ""}, "barseghyanartur/vishap": {"git_readme_keywords": "following output bitbucket simple alphabetical order python django registry youtube project vishap generate support integration installation available service contribute block python youtube installation version github favourite service django integration update installation add following section author feature license template example plugin installation install register section block barseghyan", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "following output bitbucket alphabetical order python django registry youtube project vishap generate support integration installation available service contribute block python youtube installation version github favourite service django integration update installation add following section author feature license template example plugin installation install register section block barseghyan", "pypi_keywords_clean": "video youtube vimeo video sharing services app"}, "/networking-nec": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack liberty software separate documentation networking sliceable switch community network automation openflow productstrema reference production support library reference implementation development networking productstrema", "pypi_keywords_clean": ""}, "iskandr/treelike": {"git_readme_keywords": "python useful statement argument child scopeddict nested algebraic variable abstract declare", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "abstract python useful", "pypi_keywords_clean": ""}, "svenkreiss/databench": {"git_readme_keywords": "python analysis databench databench height target hideinsphinx databench target example screenshot height install target databench available documentation height block analysis example example screenshot example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python analysis databench databench height target hideinsphinx databench target example screenshot height install target databench available documentation height block analysis example example screenshot example", "pypi_keywords_clean": ""}, "/reporter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reporter flexible cssselector div white box useful positive extensible container command abstract sense news domain short reporter g div return various container example beautiful soup property default certain news leafs document reporter debug flag complete default color html document minimal score hard important scoring only scoring algorithm split paragraph box scoring additional final example parsed html number news property parent unicode parsed autocue mentioned scoring score ranging consecutive effective traversal divs paragraph html news container instance py help please high score container news extraction example split usage reporter domain usage specific python package certain many local paragraphs python please traversing low score complete exact scoring license bsd reporter py reverse order news article news readability such internal python inspiration input html license word visual revenue only heuristic penalty stdout default autocue dom package scoring", "pypi_keywords_clean": ""}, "CTPUG/pygame-cffi": {"git_readme_keywords": "development install discussion welcome functionality example project freenode directory building prebuild zipfile libpng required license discussion prebuilt zipfile available argument conformance version virtualenv python system version libjpeg wrapper various libsdl appropriate dependency installation install pygame channel", "git_description_clean": "a cffi based sdl wrapper that copies the pygame api", "git_keywords_clean": "", "pypi_description_keywords": "development install discussion welcome functionality example project freenode directory building prebuild zipfile libpng required license discussion prebuilt zipfile available argument conformance version virtualenv python system version libjpeg wrapper various libsdl appropriate dependency installation install pygame channel", "pypi_keywords_clean": ""}, "edcrewe/django-csvimport": {"git_readme_keywords": "mysite cd csv import syncdb autodetection admin useful multiple header command inspectcsv admin interface organisation table import management insert database standard required install upload comma install django guesstimated model version order importcsv model related model python manage viable fill house foreignkey timezone egg recommended approach import model virtual environment country django general complex table country model version compatibility generated django appconf jonathan holst shell h s lookup field sample submit model field import table group importcsv filename import csv supply chain patch key field interface custom admin py demonstration installation columns default duplicate project manage py module csvimport local django compatible csvimportconf upload django generic importer schema environ django click certain database unknown primary key django admin clash django csvimport delete nb command csvinspect target issue fkey model bulk insert delimiter importfile synchronisation query agency supply management execute intermediate import csv format management command custom command cronjob input format bristol database query matching field import mechanism meaningful field foreign key sqlite related table automated refactor management python installation initial migration py migrate django requirement tzinfo monkeypatch sophisticated application csvimport python label model datetime csvimport country temporary appconfig guesstimate inspectcsv importfile browser py inspectcsv sample csv py runserver package django dash model csvimport unique database custom duplicate value python please command manage upload field django csv character column autodetection importcsv please overview django csvimport csvimport conversion synchronisation possible final model dunham other otherapp organisation cd mysite csv nb other django csvimport model available organisation column python version such fraser something numeric primary apps csvimport excel management import module manage following migrate django admin csvimport py importcsv interface import field demonstration attention crewe april command please csvimport installed foundation installed apps model foreign separate table separate organisation april overview upload entry format table component importfile csv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "useful command inspectcsv admin interface organisation table th july bug empty mapping strftime bug log th appconfig usage version october added generate django april fix related model timezone range add upload add database country django return th force django appconf uninitiated variable app config import form shell method sample submit please pip importcsv filename supply chain key field related csv default duplicate module csvimport row added fix log drop example generic importer charset unknown primary key csvimport management nb allow field add command autodetect issue agency supply header row management execute alexander edcrewe app label flag rm database query cross agency related table numeric type refactor management unparsable username old django github sophisticated add demo application csvimport python add command csvimport country smallint dbs guesstimate py inspectcsv march allow overview django otherapp organisation add appconfig add deduplicate blorenz tidy version eg pull march handle python version such csvimport app version th numeric primary atomic smeyfroi add following admin csvimport interface import eg multiple allow mapping model foreign django version upload mapping format format table simple header github fix csvimport log upload comma install django django snippet eg pip local timezone factor csv fix importcsv model edcrewe fix th march fill house report egg import model virtual environment general country model version compatibility clean false handling model add column import table various pull type django edcrewe csvimport command import ed handle boolean admin py generate add numeric local django false option schema install demo click certain database return database delete inspectcsv pip target fkey model bulk insert rebuild initial delimiter importfile synchronisation query form add bulk import management command add csvimport custom command cronjob text add deprecation row handle matching field pip install import july handling add django requirement tzinfo monkeypatch fix command args edcrewe importer tool header text temporary fix numeric format row fix display browser django dash model lookup model csvimport th nov importcsv please possible force charset autodetect column csv nb feature start csvimport model os os available check creation change empty usr july fix log print msgs april fraser floats imposeren excel charset utf migrate django eg select foundation field demonstration csv header command please fix bug insert rebuild log field shell script importfile csv model creation row style numeric columns import management generate model django pip try guesstimated model added appconf entry smeyfroi boolean handling viable allow demo foreignkey optional args complex table cleanup th django required jonathan holst exception merge lookup field importcsv parsing group import csv import merge added model syntax enter eg model customizable eg columns manage py model app filename country wrong label edcrewe add compatible upload django datetime clean doc content environ django number overflow th october logging django admin id fkey django csvimport apps july intermediate import csv format suite logging machinery valhallasw fix key eg tolerant fix sqlite allow foreign key automated id usage october transactional exception python installation initial migration log msgs handling th detection omni bristol nov merge datetime summary inspectcsv importfile edcrewe added database custom duplicate value command manage app th upload field add admin django csv changelog module install th july column autodetection conversion synchronisation generic filename final model point jonathan dunham other check cd mysite limit standard logging edcrewe handle something error log management import module manage crewe april csvimport installed big upload csv installed apps separate table separate organisation april overview handle numeric release version report count component deduplicate feature mysite cd python october custom format smeyfroi fix csvimport egg csv import upload message variable bug syncdb autodetection admin header standard insert database imposeren fix required fix issue display python manage usage recommended approach admin th october add argument edcrewe edcrewe unreleased generated import os h s special float fix app label minor xlrd project pip model modelname model field order only admin import patch interface custom missed import demonstration installation ed crewe argument only allow clean app migrate recent row only fix uninitiated handle text fix empty clash delimiter option command csvinspect option eg input format ui log import mechanism form add option meaningful field nov fix add clean python add py migrate edcrewe initial other apps th january unmatched label model day matching model admin ui type clean sample csv os environ py runserver package django model unique type handling python please character csvimport csvimport multiple django july handle other django organisation column py blorenz django october smeyfroi log bad error return apps csvimport added appconfig mysite pip py importcsv attention app csvimportconf entry unicode handling sqlite", "pypi_keywords_clean": "cvs import django fixture"}, "EdLeafe/pyexif": {"git_readme_keywords": "creation addition exposure information standard installed original keyword compression warning message keyword manipulation pyexif available installed warning exiftool command geotagging", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python information exiftool command readme", "pypi_keywords_clean": "exif image metadata photo"}, "blob8108/kurt": {"git_readme_keywords": "manual pythonic interface support compressed archive version license lifelong kindergarten pillow documentation scratch project available environment extract license pillow library installation extensible example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "manual pythonic interface support compressed archive version license lifelong kindergarten pillow documentation scratch project available environment extract license pillow library installation extensible example", "pypi_keywords_clean": "scratch"}, "rmjarvis/treecorr": {"git_readme_keywords": "useful library distribution folder schneider lombardi addition g pyyaml lsstdesc triangle centroid correlation function required pythonn command faster standalone executable research please magnitude faster version interested variety stable release avaiable scalar quantity y freebsd license libffi dependency record treecorr various typical script scaling program source called sample linux download reference jarvis called libffi release branch available openmp allowed variable parallel desired feature complete documentation argument euclidean tangent warning message galaxy actual computation normal cross correlation software click likely latter setup py repository feature please involved quantity kg mikejarvis pythonpath galaxy galaxy library called correlation convergence kappa correlation common thing kappa kappa straightforward install current stable lensing kappa instance configuration python distribution similar trouble required command jarvis bernstein feature efficient dependency lensing running galaxy lensing treecorr directory permission numpy pyyaml algorithms scalar foreground regular number problem please reference lombardi astron package different prefix sky calculation python module kg cross astron astrophys tarball natural combination called galaxy install treecorr future cross output optional sample configuration slowest python input directory something download treecorr directory install following information discussion multi correct temperature triangle specific system", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library distribution folder schneider lombardi addition quantity running g pyyaml lsstdesc triangle centroid correlation function required pythonn command faster standalone executable research please calculation magnitude faster version interested variety stable release avaiable scalar quantity y freebsd license libffi dependency record treecorr various typical script scaling program source called sample linux download installable reference jarvis called libffi release branch available openmp allowed variable parallel desired feature complete documentation argument euclidean tangent warning message galaxy actual computation additional normal cross correlation software click likely latter setup py repository feature please involved quantity kg mikejarvis pythonpath galaxy galaxy library called correlation convergence kappa correlation common thing kappa kappa straightforward install current stable lensing kappa instance configuration python distribution similar trouble required command jarvis bernstein feature efficient dependency lensing running galaxy lensing ascii treecorr directory permission numpy pyyaml algorithms useful fitsio scalar foreground regular number problem please reference lombardi astron package different prefix python module kg cross astron astrophys tarball natural combination called galaxy install treecorr future output cross optional sample configuration slowest python input directory something download treecorr directory install following information discussion multi correct temperature triangle specific system", "pypi_keywords_clean": ""}, "tmitchell/django-wiki": {"git_readme_keywords": "wikiword project application naming convention simple pluggable default format issue urlconf specific revision setup mitchell basic basic usage sutherland taylor revision regular expression taylor mitchell super simple feature following django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wikiword project application naming convention simple pluggable default format issue urlconf specific revision setup mitchell basic basic usage sutherland taylor revision regular expression taylor mitchell super simple feature following django", "pypi_keywords_clean": ""}, "csirtgadgets/csirtg-smrt": {"git_readme_keywords": "project software exciting feature license partner mozilla request copyright github project bugfix distribution licence copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "way", "pypi_keywords_clean": "security"}, "/suds": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/amara": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "character library xml processing", "pypi_keywords_clean": ""}, "vengefuldrx/rekt-googlecore": {"git_readme_keywords": "package google api stuff", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python generic specific pythonic google googlecore", "pypi_keywords_clean": ""}, "bjodah/pycodeexport": {"git_readme_keywords": "pycodeexport package instance status programming generation install travis modify status installation development status compilation installation example template pycompilation pycompilation recommended convenience pycompilation license permissive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pycodeexport package instance status programming generation install travis modify status installation development status compilation installation example template pycompilation pycompilation recommended convenience pycompilation license permissive", "pypi_keywords_clean": ""}, "BlackEarth/bsql": {"git_readme_keywords": "database library earth", "git_description_clean": "sql database library", "git_keywords_clean": "", "pypi_description_keywords": "database library earth", "pypi_keywords_clean": ""}, "infobloxopen/infoblox-client": {"git_readme_keywords": "manager import basic create host python reply ipvaddrs infoblox xfdbfed view netview default infobloxobjectmanager conn expression refer apache license way extensible addition new host python nview other kwargs search record host equal client usage single object cloud environment return supported nios list id tenantid python conn license documentation true host ipvfixedaddress level api hostrecord cidr netview member host zgzlmhvcqkljquytlmxpvbmuubxlfagzdfyzwnvcmq connector module infoblox client optional object record ptr view network object manager range ipvaddress documentation installation view cidr supported import connector mac aa zone auth free software debug low fixedaddress regular expression ip ttl zone com com create hostrecord create ipv object admin conn network create high level cc cidr client object software apache usage configure admin password cloud api ip extattrs record aaaa grid master complete list ipvrange conn network conn view low level python hr network network function object network create conn console password admin dnsview create wapi free installation install next section cidr extattrs first argument network view view zone mac address tenantid cmp field record cname connector connector create dns address infobloxobjectmanager partial match host ip pip install module example tenant id dhcp new address search request hr conn aa bb type cmptype ip mac environment search infoblox nios client client particular basicconfig level dnszone create default mac local object available ip ip network dns view dnszone cname search cmptype cloud infobloxobjectmanager create first object cmp type com ipvaddrs conn create view high python import current host record object record ttl create install infoblox ip create ipvnetwork python view username admin zone ttl expression search host username conn connector create ip crud search single hostrecordv ref import infobloxobjectmanager create network bb cc create new cidr create ref record next available infobloxobjectmanager new match search cc hr dns view networkview create top level pip pip extensibleattributedef interface client import com ip debug next data configure logger", "git_description_clean": "python wapi client", "git_keywords_clean": "", "pypi_description_keywords": "manager import side supported create host ipvaddrs infoblox rst fixed networkview add initial support addition new host other kwargs search fix error zone level ttl field ptrdname utils py ea tenant name new unused python ea option add field type add pep env add host zgzlmhvcqkljquytlmxpvbmuubxlfagzdfyzwnvcmq level create view network level logging supported nios side ip ttl ipv object dns field add network rework delete console code admin password cloud api exception update complete list level add request level conn view network network function get network object network wapi free logger flake search field fixed address record cname partial match added code start addr module example dns record tenant id added network dhcp ipv network iprange search srv record delete object development status member update type cmptype check object ea deprecate local object extattrs ea update support add extattrs allias user network add ip eq added object ptr record update feature delete field end addr updated history view high possible added object record connector added temporary unavailable logic python view username admin added search json add tuple package fixed default wapi logging debug pre alpha add cname cc hr ea object object search ptrdname search zone code processing unknown ipv update configure logger python reply netview default xfdbfed view huge connector logger apache license add max ea definition search fix equal verify flag single object record search cloud environment existent ea hostrecord search record support level api connector module optional object add request allow search ci add interface add object reference object type point first hostrecordv add code added range view cidr mac aa ip field updateable search add log add new return none regular expression cc cidr high level zone added client object record aaaa conn network low level dnsview create added initial import logging next section add docs dns zone connector connector create dns pypi repository added pip install generate duid add silent update dns ip mac fix unbind extensible attribute infoblox nios request type add ptrdname member object ip versioned add function dnszone object cmptype cloud infobloxobjectmanager create definition allow unavailable status install infoblox convert infobloxobject service restart raise exception code coverage create ip fix hostrecord empty search single hostrecordv ref pdb convert object abstraction mac add add zone add utility next available point top level extensibleattributedef interface allow domain support add debug ref record cidr code updated default infobloxobjectmanager conn expression refer way ip detection dict update development type updateable ea add addr end object update add search client usage new fixed network code member ipv return ssl verify install added added pagination support interface python conn connector log cidr netview update docstring get record ptr nios object detection list search option object manager cname record list add ipvaddress delete raise dnsview return record add zone auth return default zone com com create ip version software apache usage configure ip extattrs dnszone dnsview add support python hr add return allow return password admin definition support unbind name cidr extattrs network view get fixed view zone wapi version manager fixed fix record allow author add add tenant ref added new address search request py add environment search create ea restart update failure package import add configure feature update update particular field name update existent basicconfig level tenant object dnszone create default mac available ip conn get connector check expression pass network dns view dnszone add ip first object cmp type add default python import host record log level domain name create fixed ea class attribute update expression search global field host username supported feature debug level conn connector crud boolean field processing get object import infobloxobjectmanager create network hostrecord fix error log level update infobloxobjectmanager new docs update dns view support fixed networkview create logging basicconfig client import basic value fixedaddress allow docs badge connector fix add start extensible pep check object log python nview record host verify update object model alpha feature supported nios support search list sub deprecate network id tenantid license documentation mac updated parameter true host info option ipvfixedaddress hostrecord member error infoblox client address add data code added delete documentation installation logic fix import connector added connector coverage updated free software debug low fixedaddress manager add hostrecord create create object method rework admin conn network create status code ea code second ip grid master record update conn name ipvrange create conn record code connector option convert ea installation install readme rst first argument mac address tenantid cmp address infobloxobjectmanager log api host ip update readme package directory new field hr conn aa bb feature version create method client client view name ref option add extensible logging logging cname search add global com ipvaddrs public property conn create network field rst add exception add silent ssl current ttl create ip create ipvnetwork hostrecord add ttl validation code python exception associated pagination support bb cc create new cidr create add ttl view support match search log failure pip pip search iprange definition add com ip history supported next data", "pypi_keywords_clean": "infoblox client"}, "ContinuumIO/multiuserblazeserver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kmaglione/flake8-future": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "HDE/arsenic": {"git_readme_keywords": "asynchronous webdriver information documentation webdriver asynchronous browserstack quickstart", "git_description_clean": "async webdriver implementation for asyncio and asyncio compatible frameworks", "git_keywords_clean": "async python testing webdriver tornado asyncio aiohttp firefox phantomjs async webdriver windows internet explorer browserstack chrome twisted", "pypi_description_keywords": "asynchronous webdriver information documentation webdriver asynchronous browserstack quickstart", "pypi_keywords_clean": ""}, "AliLozano/django-messages-extends": {"git_readme_keywords": "bundled storage persistent klass default additional credit storage sticky boostrap setting django download anything regular django sticky message multiple lozano additional django manual possible project instance storage backendto remember similar database django persistent sticky available remember remember difference backend message familiar framework framework sticky storage installation shortcut method postman storage backend django machine process python message storage number jquery success application session persistent message anonymous datetime document directory something persistent backend module dialog various bootstrap django activity following button forget session storagge storage container license django persistent storage function object activity explicit middleware template current request default storage django documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bundled storage persistent klass default additional credit storage sticky boostrap setting django download anything regular django sticky message multiple lozano additional django manual possible project instance storage backendto remember similar database django persistent sticky available remember remember difference backend message familiar framework framework sticky storage installation shortcut method postman storage backend django machine process python message storage number jquery success application session persistent message anonymous datetime document directory something persistent backend module dialog various bootstrap django activity following button forget session storagge storage container license django persistent storage function object activity explicit middleware template current request default storage django documentation", "pypi_keywords_clean": "messages django persistent sticky"}, "brentp/fisher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "benchmark simple simple implementation property contingency object cython github folder difference version interested simple benchmark installation example", "pypi_keywords_clean": "statistics cython"}, "praekelt/jmbo-downloads": {"git_readme_keywords": "internal redirection content navigate unique default implementation downloadable content yoursite receiver extension download instance folder define argument stuff empty installation query string example django basic download number appropriate buildout signal internal location webserver function buildout uploaded config remote redirection header object interface client access request superclass function favourite download interface basic buildout template remote location", "git_description_clean": "trackable downloads for jmbo", "git_keywords_clean": "", "pypi_description_keywords": "internal redirection download jmbo permittedmanager content navigate unique default override generic implementation miscellaneous downloadable content yoursite receiver string extension download instance foundation rizmari imagemod folder argument actual stuff developer database minimum jmbo filesystem calculation invisible installation example django guard dependency everything release initial number appropriate buildout versfeld changelog synch stabilize signal internal location temporary webserver function django support buildout match jmbo version initial release uploaded config redirect explicit jmbo redirection header object interface access superclass function request favourite download jmbo rizmari versfeld buildout template deletion override jmbo", "pypi_keywords_clean": ""}, "klahnakoski/mo-json-config": {"git_readme_keywords": "parametric json committee design document structure valid json prefix multiline template format internal reference javascript syntax current relative reference configuration json scheme relative result matter javascript block default document separator whole system http json configuration json template xpath specification unicode level addition json parser json document successive other symbol additional available hash python triple sophisticated example relative internal superficial similarity application please absolute reference fragment document environment property system triple slash common particular reference configuration referenced object http reference target relative environment reference default unconventional scheme parameter replacement directory reference absolute internal local unwieldy general course relative secure sensitive transformation parameter scheme good practice motivation json reference reference draft target object precedence fragment reference previous example good way enough replacement module responsibility json absolute special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parametric json committee design document structure valid json prefix multiline template format internal reference javascript syntax current relative reference configuration json scheme relative result matter javascript block default document separator whole system http json configuration json template xpath specification unicode level addition json parser json document successive other symbol additional available hash python triple sophisticated example relative internal superficial similarity application please absolute reference fragment document environment property system triple slash common particular reference configuration referenced object http reference target relative environment reference default unconventional scheme parameter replacement directory reference absolute internal local unwieldy general course relative secure sensitive transformation parameter scheme good practice motivation json reference reference draft target object precedence fragment reference previous example good way enough replacement module responsibility json absolute special", "pypi_keywords_clean": ""}, "pydanny/staticserve": {"git_readme_keywords": "python compatible python package convenience method content python compatability compatability werkzeug python stdlib functionality command staticserve substitution output dynamic content distribution deprecated python virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatability werkzeug distribution convenience method command staticserve substitution serving deprecated python python compatible python content changelog history number cleanup functionality project frustation dynamic content virtualenv changelog python compatability frustation inception", "pypi_keywords_clean": "wsgi web http static content webapps"}, "libyal/libsigscan-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module libsigscan", "pypi_keywords_clean": ""}, "dcos/dcos-shakedown": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library related", "pypi_keywords_clean": ""}, "inveniosoftware/invenio-cache": {"git_readme_keywords": "invenio further available further documentation invenio copyright", "git_description_clean": "cache module for invenio", "git_keywords_clean": "", "pypi_description_keywords": "invenio further initial public invenio copyright available further documentation public release", "pypi_keywords_clean": "invenio cache"}, "SunDwarf/configmaster": {"git_readme_keywords": "default python configparser following formats configparser formats stable version configkey location networkedfileexception support networked config initial populate configmaster configmaster version config object simple library everything proper documentation simple class networked attribute module recommended nothing different config populate configmaster method access config", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default build status stable version configkey location networkedfileexception networked config initial populate configmaster configmaster version config object simple library everything simple class attribute coverage status nothing recommended config populate configmaster build method access config", "pypi_keywords_clean": ""}, "cloudflare/cloudflare": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "regard please identifier keyless python vs single error useful library folder optional origin development example cloudflare error response single identifier diagnose documentation brevity command following example incorrect authentication railguns railguns version complex example cloudflare python egrep mirage cloudflare username domain certtoken pylint parameter codebase motivation simple listing address capital introduced careful certkey account patch identifier activation internal testing vs support invalid copyright blank credit authentication information query string solution example railguns identifier software status simple single mobile redirect origin error following error function delete polish certification firewall access backward compatibility company request pypi obfuscation response billing history activation check identifier available configuration python installation optional debug shell environment github feature identifier firewall sepember default number cloudflare cloudflare preload protection identifier railguns makefile advanced ddos verbose package enough python advanced option anything option variable geolocation record creation security header documentation identifier invite identifier available exclude change variance identifier virtual server identifier custom python testing dashboard rocket loader following client extra billing profile query possibility", "pypi_keywords_clean": "cloudflare"}, "bitshares/bitshares": {"git_readme_keywords": "resilient resistance replicated deterministic shareholder approval private response openssh continued operation operation additional useful correct username technical support username password historical ubuntu development delegated preparation instance support license configuration command network available bitsharestalk technical history sufficient shareholder transparency internal example public popular machine ownership additional information amongst authentication security functionality particular sustainability bitsharestalk password ancestor community discussion consensus protocol connection digital unencrypted plaintext repository general purpose following technical documentation unlicense consistent different popular command software platform visible brevity voluntary access interface desired replicas request official special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dedicated telegram library installation repository documentation hackthedex security available eligible conduct discussion everyone library development", "pypi_keywords_clean": "bitshares library api rpc"}, "jaraco/jaraco-xkcd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/msgpack": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "key value efficient binary application please msgpack former different default way string buf bytesio multiple development iteration standard other command false callback function import msgpack default sequence gc cpython typical package msgpack msgpack unpackb msgpack didn distinguish string msgpack pypy method x msgpack msgpack packb change default unpacker buf cpython gc express edition unpack default unpacker backward incompatible bintype upload transitional unpacker msgpack build extension new option pypy msgpack import bytesio python callback utf smooth transition stream performance solution example important packing number unpacker specify keyword argument latter alternative custom binary serialization unicode unpacking large entire message unpacking such unpacked packing remove option important python backward compatibility didn distinguish bytesio buf reading option packer buf seek dr encoding option false unpacker install msgpack unpack custom doesn work seek unpacker block python element specify msgpack unpacker community edition unpacker change unpacked large unpackb x messagepack behaviour filetype breaking unpacker remove packed deprecating encoding package packer extension module build status binary distribution docstring python import python community result upcoming container upgrade install extension msgpack msgpack msgpack array possible visual studio cpython future python implementation unpacking control option encoding pypi package tuple performance gc python alias large message such message msgpack python early such object unpacking msgpack install visual transitional package object packer change msgpack planning x x packing unpacking useless gc block implementation pypy documentation status", "pypi_keywords_clean": ""}, "lettuceutils/lettuce-utils": {"git_readme_keywords": "lettuce simple javascript acceptance chrome section deprecation schedule convention permuation consistent syntax massive upgrade support single install command friendlier version future proofing helpful cucumber option nothing gherkin syntax inconsistent behaviour source selenium driver handle splinter default django teardown interact syntax chrome project license convienence database explanation teardown travis included straightforward django postgresql structure example interaction cancel prompt content friendly consistent attribute awesome splinter incompatable language lettuce feature chrome webdriver operating system request advice incompatible welcome planned saucelabs static integration consistent opaque phrasing presence alternate browser happy username firefox iphone flexible system context switching element subject phantomjs firefox coverage scenario flexible common password roadmap roadmap selenium server browser access verbosity reversing project specific action beauty continue browser common package anything second bugfix beautiful utility actual wieden kennedy helper natural specific development documentation consistent grammar implement saucelabs account everything django integration brilliant teardown directory postgresql support chrome firefox google chrome information ability visible mysql refresh iframe context component internet connection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "lettuce simple javascript acceptance chrome section deprecation schedule convention permuation consistent syntax massive upgrade support single install command friendlier version future proofing helpful cucumber option nothing gherkin syntax inconsistent behaviour source selenium driver handle splinter default django teardown interact syntax chrome project license convienence database explanation teardown travis included straightforward django postgresql structure example interaction cancel prompt content friendly consistent attribute awesome splinter incompatable language lettuce feature chrome webdriver operating system request advice incompatible welcome planned saucelabs static integration consistent opaque phrasing presence alternate browser happy username firefox iphone flexible system context switching element subject phantomjs firefox coverage scenario flexible common password roadmap roadmap selenium server browser access verbosity reversing project specific action beauty continue browser common package anything second bugfix beautiful utility actual wieden kennedy helper natural specific development documentation consistent grammar implement saucelabs account everything django integration brilliant teardown directory postgresql support chrome firefox google chrome information ability visible mysql refresh iframe context component internet connection", "pypi_keywords_clean": ""}, "/python-freezerclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "launchpad project openstack backup freezer freezerclient license management command documentation launchpad library disaster recovery version repository installation openstack disaster development license version", "pypi_keywords_clean": "freezer"}, "rspivak/sftpserver": {"git_readme_keywords": "private paramiko rsakey username admin python client single transport connect import paramiko transport transport installation transport paramiko python server connect username paramiko sftpserver sftpserver admin password paramiko transport server import paramiko sftpclient password admin listdir loop", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "private paramiko rsakey username admin python client single transport connect import paramiko transport transport installation transport paramiko python server connect username paramiko sftpserver sftpserver admin password paramiko transport server import paramiko sftpclient password admin listdir loop", "pypi_keywords_clean": ""}, "/bottle-utils-form": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package processing collection validation web framework web", "pypi_keywords_clean": "bottle utils form"}, "lmacken/tbgrep": {"git_readme_keywords": "unique string block python apache python example cherrypy number beginning input tbgrep pipeline various information tbgrep module timestamp module command traceback grepping method convenient block bunch", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unique string block python apache python example cherrypy number beginning input tbgrep pipeline various information tbgrep module timestamp module command traceback grepping method convenient block bunch", "pypi_keywords_clean": ""}, "jhermann/pygments-markdown-lexer": {"git_readme_keywords": "package bleeding pyinvoke bpython project registration markdown documentation developer available sphinx version development environment virtualenv overview brandl directory markdown syntax language visible gallery", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software compliance express hermann specific language language governing copyright applicable", "pypi_keywords_clean": "hosted by github pygments markdown lexer highlighting"}, "/not": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ross/requests-futures": {"git_readme_keywords": "minimal synchronous response python futuresession useful multiple shortcut possible instance separate session object documentation additional memory backport futuressession constructor block python processpoolexecutor futuressession executor python important session instance example exception global installation number property functionality advanced example python http importable additional processing returned pickling background additional installation backport default threadpoolexecutor high important python simple example context manager foreground interpretor request asynchronous python method http library require requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "minimal synchronous response python futuresession useful multiple shortcut possible instance separate session object documentation additional memory backport futuressession constructor block python processpoolexecutor futuressession executor python important session instance example exception global installation number property functionality advanced example python http importable additional processing returned pickling background additional installation backport default threadpoolexecutor high important python simple example context manager foreground interpretor request asynchronous python method http library require requirement", "pypi_keywords_clean": ""}, "biothings/mygene": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package biothingsclient package g question instance optional performance installation tutorial documentation underlying biothingsclient retrieve wrapper equivalent continue annotation following package universal contact simplicity feedback access history tutorial", "pypi_keywords_clean": "biology gene annotation web service client api"}, "wichert/lingua": {"git_readme_keywords": "simple marker expression language single extractor way useful new custom folder class domain lingua support plural message python formatting other command helper shell keyword single application python extractor babel message option comparison compatibility babel parameter python format bug multiple canonical configuration lingua python old source reliable detection custom extractor linua keyword specifier single source hello message message extraction lingua parser variable button form function signature argument markup language language zcml attribute label zcml extractor example translate change extractor helper helper script current directory comment custom form label lingua lingua global configuration template syntax exact number postfix json chameleon extractor specify directory translation function plugin logic identical xml extractor change button own function extraction logic default expression catalog creation domain filtering directory configuration translate password syntax lingua reasonable job configuration markup canonical texts plural support original password label parent element po specifying input create copy option section specify context chameleon comment specifying first parameter specified extension python source c registered extractor option lingua support support singular gnu gettext section initial catalog package result second extension style format direct support valid specify comment first hello translation domain validation default language available provide empty several such label button gettext popular parameter number few basic message contexts information default configuration different specific extractor variant extensible software format message py specify translatable texts lingua specified entry extra shell script py multiple translation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python code allow message default keyword file july useful re uplad other babel extractor first language pot metadata extractor file schulze january fix line leading fix error helper shell processing python allow setting undeclared april handle python extractor handle syntax style message parameter such sentence text c perl translaction html extractor daverio warn august correct import ability sinoroc florian schulze filtering use plural text extractor name mock hugo branquinho lingua parser output rename fixes update correct linenumber path drop use different attribute label branquinho fix tree lingua correct python fix parsing xls po pot file xml zope use multiple feng properly ingmar steen november fix december include whitespace global configuration function call json fix po february po extraction logic default expression catalog creation fix installation full keyword use message package documentation configuration markup use single fixes handle babel fix single wheel fix timezone tool translation context make sure use html chameleon configuration fix comment specifying compatibility patch metadata location option support support gnu gettext xls july engine selection new command number reporting replacement july update release february keyword list fixes november example setting default language fixes fix april lingua such label button outer element canonical text python patch tweak rest curly xls conversion few basic default configuration place global second line tokenisation possible e zope page multiple translation invalid line base class example sentence expression language msgid wonderful html notation class scan specify domain lingua plural message python formatting command template text steen june parse python take domain error message empty line brunner august catch revert due python old tal reliable detection keyword specifier sanity error november html file home folder hello message compatible add schulze fix update po chameleon parse gaifas december button form add keyword function signature percent character marec pasquet attribute november add new correct handling zcml extractor translate change fixes tal update xml keyword argument stripped line november add lingua lingua earlir release first release new extractor logic identical name e zope configuration simple tool chameleon expression valid flag package root wonderful msgstr directory configuration python compatibility main py extra context include brief other tool template handling fixes add handle html parent element default list november extend po lingua version scanned python copy handle use patrick option section reference po conversion text compatibility error abort february specified extension python source compatibility november minimal polint different version timezone format sub message outer sentence november re package december pot creation mako result home directory style format python module specify comment first hello extend automatic brief description global config code patch empty outside july fix extraction tool update example parameter number use fix incorrect extract translateable message id specific extractor domain filter fix bug variant code format message shell script handling lingua specified explicit config december add local python single extractor po file tal template way extractor configuration fixes october translation comment generated context correct xml rest usage false plugin api setting message january fix python compatible support atomic example pot html parser fix html single application allow selection take sample context information multiple canonical line number api little custom extractor february fix translateable texts message extraction william wu option october extract translatable marker use automatic context original text september update legacy babel august make language zcml create main fixes april august zope handle multiple root current directory syntax error fix python comment end file inheritable form label exact number postfix add support lot patch september format checker chameleon extractor plugin translation function wu handle xml extractor pypi april october correct create file rocky feng xml html translate password valid xml python november emanuele gaifas add flag polint tool november allow january extend password label config file teixeira tisdall use command line add extra part omar kohl use zope context single august registered extractor expression engine singular section initial catalog fixes invalid obsolete module support january make character fix wonderful pipe symbol context september many other include steen fix translation domain xls convertor several popular handle local translatable text add comment default prefix december user home june fix gettext keyword extend xml extensible software properly report object py specify wheel distrbution number parameter context comment note marker engine hint zpt changelog january new custom wonderful msgid po xls support properly support file extension valid call absolute import bag use domain ini style file domain fixes august january use list sub babel message colon june generated option comparison compatibility babel parameter python format bug ngettext configuration lingua extraction plugin handle python incorrect handling stphane brunner fuzzy single source dot operator single xls january add variable keyword processing le marec argument zope style markup language space ofter july paper full text nested august refactor little bit extract message important translation call format flag january xls extractor helper helper script line lingua custom source tree template syntax flag space support message xml parser gettext command add use numeric xls file linua include fix handling specify directory old name multi line atomic file change button zope chameleon own function po entry feng january domain filtering syntax lingua new extraction reasonable job canonical texts example take plural support handling fixes ofter percent template engine debug leftover specifying input incorrect invocation patch november make linua steen pull first parameter broken pot option lingua large tool lingua release error october fix source code metadata add whitespace handling package available use fixes february laurent daverio direct support new package code november xml whitespace validation xml parsing domain parameter provide pot create same line gettext message format babel extraction html pt version number configuration file parser tweak white message contexts special marker information platform python july translatable texts simple ini entry catalog changelog extractor api", "pypi_keywords_clean": "translation po gettext babel"}, "pyeve/eve-sqlalchemy": {"git_readme_keywords": "offical project complete launch restful documentation project documentation familiar different relationship example customizable application process directory sqlalchemy extension repository overall following dictionary console access database configuration", "git_description_clean": "sqlalchemy data layer for eve powered restful apis", "git_keywords_clean": "flask sqlalchemy python rest", "pypi_description_keywords": "preview release release amleczko default offical project complete launch postgresql restful fallback transaction documentation project documentation repository changelog embedded familiar operator dominik kellner iarocci different relationship example customizable application process tutorial directory mahmud support columns sqlalchemy extension overall following dictionary querying console access database configuration public preview amleczko", "pypi_keywords_clean": "flask sqlalchemy rest"}, "/pyobjc-framework-addressbook": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information documention documentation centralized pyobjc documentation addressbook framework translation objective", "pypi_keywords_clean": "pyobjc addressbook"}, "kennethreitz/eng-join": {"git_readme_keywords": "english support pretty explanatory installation", "git_description_clean": "an english joiner for python", "git_keywords_clean": "", "pypi_description_keywords": "pretty english explanatory", "pypi_keywords_clean": ""}, "jstasiak/zeroconf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "equality murphy handling closed sandstrm service discovery typeerror subtype browsing iteration g separate unsupported python browser jonathon correct pointer stephenrauch stephen implement duplicate baseexception dnshinfo support version python compatible bonjour debian unstable service unregistration python logging domain record binary various address hostinfo interface problem mdnsresponder traceback dummy network openbsd compatibility distribution python luckydonald github browsing address browser startup allowed installation service listener addlistener method pyzeroconf multicast incompatible adjusted installable handle justingiorgi herczy rendezvous default compression backward incompatible advertised service shutdown handler interface hostname interface project eaddrnotavail change correction incoming service herczy stephenrauch service removal backward compatible dnstext insensitivty explicit dependency compatible oversized installation example cpython pypy status zeroconf bonjour python zeroconf unknown logging import selection python allowed licensing daemonic maintenance readname request brennan record parsing harting message servicebrowser startup improved exception python compatibility unicast correct veawor justingiorgi jonathon paisley miladinov subsystem method support service browser block python occasional unboundlocalerror closed coverage timeout problem shutdown license bonney schoutsen python support application failure serviceinfo contructor property particular zeroconf object following pattern condition compat travis original william problem module startup package parsing compatibility cpython defined exception regard incompatible restricted available network changelog default configurable github project validation jakub stasiak several change python version defective limited security problem dependency version miranda unicast support allowed incoming support improved multibyte handling serviceinfo constructor exception handling servicebrowser william mcbrine", "pypi_keywords_clean": "bonjour"}, "/shakedown": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overview", "pypi_keywords_clean": ""}, "lrowe/envfile": {"git_readme_keywords": "coniguration similar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coniguration initial release", "pypi_keywords_clean": ""}, "scanny/python-pptx": {"git_readme_keywords": "information application several engineering updating powerpoint downloadable management database powerpoint presentation available customized powerpoint library production", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "shape textframe add property cell fill textframe graphicframe shape release history box individual slide lineformat class addition customxml shape click chart smartart shape return unicode created label add paragraph alignment position add rich slide add axis format break element carriage return explicit customized powerpoint paragraph add horizontal experimental turbo master add color dateaxis add slidemaster slide supported access placeholder break chart chart picture method example rename slidemaster rename slidelayout number rudimentary connector insert table link index segment xml character fix ascii vulnerable pillow paragraph boundary content downloadable add lineformat assigned string external bullet bmp image image native first row ready engineering add vertical placeholderformat object top width add bubble control character xf dependency python support spreadsheet add textframe property frame add appearance rename presentation merge add slide behavior certain chart method support issue alpha release new presentation slide graphicframe table python feature height add add object bulk picture image underline issue show percentage other apple quick callout arrow such fill color chartdata rectangle position top crop category axis breakage add g row action hyperlink right following id add frame shape shape width slidelayouts property slide vertical add rudimentary corner esc ascii element compensate feature add group shape getter add vertical banding add shape first expand fill add slide width master placeholder encoded image object pptx table first column fix potential corresponding object add connector guide hotfix slidemaster slidelayouts add bmp hierarchical rudimentary groupshape language id single series image library add g change default template table cell cell margin click action row header typeface extension add keynote enclosing graphicframe stream g setting access compensate fix accommodate bubble chart chart add non contiguous image property theme color pptx changelog banding add xml layer horizontal banding document presentation slidelayouts lxml objectify objectify add crop top origin add accommodate non object backward slidemaster property add chart paragraph rename axis axis unicode error newline ascii multi add tableplaceholder application several present slide layout cell add segment fix row column option parameter cell merge picture add shape shape specific issue add italic support cell split experimental feature fix chart category add autoshape connector alignment property behavior freeform placeholder add add cell fix valueaxis cell top web application shape fix connector picture placeholder format background fill documentation available character add change baseshape id powerpoint copy slidelayout slide cell table add column point marker other control soft carriage support add shape access layer oxml object refactor tedious unused slide add table percentage feature non alpha slidelayout slidemaster install bug setter issue typical emu fix improve efficiency object add uppercase extension level category property add rotation feature supported image engineering status fix baseshape g bullet add point add valueaxis g show add slidemaster graphicframe chart hotfix issue add paragraph slidelayout property attribute crop bottom width value add support support feature powerpoint behavior exception fix add slidelayout insert picture datalabel position color property dateax element jump point format tx add marker presentation ready add chartplaceholder marker add layout add video multi level python pptx wrap add distinguishable add xy axis major xy chart feature add indentation table method add picture series chart rename shape shape rotation add datalabel recursive multi character other autoshapetype hotfix interrogation marker format python library section notesslide slide slide height powerpoint pptx hyperlink support shape adjustment add slide slide id extension fix particular chart picture crop dashed column row powerpoint presentation improve performance layout placeholder network resource word wrap first non add doughnut ui table boolean shape add add experimental class add enclosing shape slidelayouts index vary add hyperlink build update major refactoring point add brightness format style pillow version add series plain basic seek inheritable feature image object shape boilerplate xml master slidelayout add python hand database content change radius shape count graphicframe object fix issue shape placeholder show rationalization top middle refactor xml template add format fill vertical alignment width add valueaxis cross feature textframe smartart add defrpr ascii xb split add add chartformat rgb theme changelog release location boolean property gradient fill header first pillow restructure fix unicodedecodeerror connector shape insert chart add autoshape browse id support property fix setup py slide master vt ascii xml add opening cross xax graphical object version fix image support inheritance breakage series marker chart fix add fill add baseshape non ascii add option high shape merge origin add slidelayouts add gradient crop right python add g stringio present add bottom add table module add textframe potential install datetime backward production rename slide enclosed graphical indentation support add presentation updating powerpoint property placeholder access doughnut chart charttitle object slide slidelayout numeric category consistent feature chart access slide fix package add axis character middle bottom patterned layout slide arbitrary series fix add exception slide slide txbody feature ascii unicode work management utf encoded management system method add turbo add information break add overlay element presentation template inherit color fix shape", "pypi_keywords_clean": "powerpoint ppt pptx office open xml"}, "chbrown/viz": {"git_readme_keywords": "visualization copyright christopher maximum compare response useful successful graphical histogram example website license copyright granularity pyplot current directory terminal install interface related python matplotlib unguessable arithmetic minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "granularity visualization successful graphical copyright christopher terminal install maximum compare website current directory interface license copyright unguessable arithmetic example minimum", "pypi_keywords_clean": "console terminal data visualization plot histogram"}, "unk2k/flask-memcache-session": {"git_readme_keywords": "memcache install session store store session example memcache session", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "memcache install session store store session example memcache session", "pypi_keywords_clean": ""}, "michaelhelmick/python-flickr": {"git_readme_keywords": "information dynamic library simple recent activity authorization upload flickr library installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information dynamic library simple recent activity authorization upload flickr library installation", "pypi_keywords_clean": "python flickr oauth api"}, "/dpkt-fix": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parsing creation docs", "pypi_keywords_clean": ""}, "/rekall-yara": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project regular specialized dependency support script libyara common update special external version distribution", "pypi_keywords_clean": ""}, "Karaage-Cluster/karaage": {"git_readme_keywords": "karaage karaage karaage software ldap account management directory passwd source repository project installed software documentation available version monitoring software application information karaage institute gpl license cluster account account information various track account creation information relevant plugin register karaage cluster repository anything", "git_description_clean": "cluster account management tool", "git_keywords_clean": "", "pypi_description_keywords": "karaage karaage karaage software ldap account management directory passwd source repository project installed software documentation available version monitoring software application information karaage institute gpl license cluster account account information various track account creation information relevant plugin register karaage cluster repository anything", "pypi_keywords_clean": "karaage cluster user administration"}, "Miserlou/zappa": {"git_readme_keywords": "correct execution cron python code requested bottle capture output zappa deployment configuration execution policy css javascript useful current function experimental server pass remote policy json pythonic object site consulting django image free let subdomain console amazon return multiple monitor profile progress jankyglance downtime zero sentry monitoring bucket zappa much minute provision alb local environment aws route vpcs building support zappa asynchronous task notification service lex bot processing contact ssl cert domain pie function topic queue gateway context bash completion use flask letter queue zappa blog custom aws zappa homepage signup utility service event multiple lambdas support development wsgi interface potential use hello world busy please note docker image dns provider zappa cookiecutter handler only doug beney py remote non api policy api serverless sf simple server business parallel read edgar zappa asynchronous config json code please template use image uploads zappa run id application database configuration option configuration setting django management difference aws lambda docker dead apigateway resource private cloud setting aws ecosystem such equivalent clean import development training number wow file api likely lambda arn superuser username bucket note invocation django tutorial screencast permanent infrastructure uri magnitude zappa hug mime type policy setting application code json secure return message gateway api contrib auth g cloudwatch joe weiss book building gateway service work dns authentication hybrid event import path warm zappa dev production seoul zappa flat json pillow zappa company true dated configuration example compatible archive decorator call function time remote django psst case note uploads support server warm zappa slack zappa django inline lookup create segment python argcomplete access management project directory community json set trounev thank direct aws manager amazon alb open ticket name region gateway distribution default iam execution environment tokusatsu aws privatelink necessary amazon application context place wsgi compatible new lambda event source hash api access well provider decode config bucket option zappa cloudwatch invocation serverlessconf london root directory load balancing doesn regular cd system man gayle python wsgi run time redundancy make sure same call zappa box awesome execution zappa scaling zero example event young zerong toby python deploy python interview year ask framework roberto martinez good start prompt deploying application framework dev staging necessary wsgi warm lambda deploy redeploy ip certificate http unhandled exception hug application compatible app let work cycle serverless deploying django version deployed pyenv virtualenv output file lambda invocation pull request driven python rest good role name remote aws path mapping wildcard domain remote django time new certificate manager free self table name deletemessage api world japanese high availability vpc aws return value docker zappa storage space user pool command note dev environment deploy zappa aws cloudfront email password confirmation prompt function name bot intent trivial amount django utils advantage task event dns auth version control uploads zappa virginia department order lambda run see template status fraction online processing zappa ffmpeg zappa sentry request wildcard similar exception detail tiny server resource policy cloudfront distribution iopipe monitor django manage microservice book heroku simple duration other such liberal set static binary following lambda package iam policy same error uncaught exception environment health pr project virtual gayle juancito file widget security policy call certain unnecessary look something cost small handler cloudformation template file advanced aws api utility microservice infection toolkit query sf zappa key iam same command virtual private zappa io non trivial patrick agin blog mailchimp merdler kravitz argcomplete python gmail com auth deploying authorizer api file remote queue portable large set cookie memory cache policy use library open pull able automatic security set rate syntax let encrypt traffic connection string sibble joe common log bashrc advanced usage use api summit seoul api key awesome installation local timezone rogue use combination template similarly route table ongoing discussion vtl request certificate confirmation http auth process original issue aws certificate theo chitayat need console select file size invoke staging risk yaml argcomplete dest zappa bittorrent api gateway virtual environment application function iam role remote environment setting make python web body create nat key bundle see below zappa mackenzie zappa setting lambda such decorator example zappa behavior image docker aws ray create unique request please use route length archive uploads aws cognito hard limit registration microservice local cache travis ci auth import first step request template interview rich flask apps see asynchronous deployment stage route check streams sns fat application primary function handler execute only setting serving image processing route lambda common practice stage name please contact plan zappa cms installation table create cognitoidentityid variable please make identity cognitoidentityid wsgi layer kms encryption zappa training convenience zappa select usage decision behavior use use native good news signed kinesis streams asynchronous run control internet minimal current invocation global app expression lambdas instance elasticache care application css expensive bug single command appropriate local console ffmpeg run context stage active virtual unique uuid management command same key create wsgi exception event lambda pass dynamodb table deployed code own ssl part vpcs see zappa serverless server side box aws new api initial load wsgi apps monitor instance fifo mobile backend zappa please environment template self renewing command deploying upload small virginia private api event dictionary cloud vpc module py aws documentation serving static zappa deployment gateway g replacement lambdamailer utils utility variable key permissive sqs dynamodb senv manipulate aws simple lambda specific smart web framework function warm wsgi web pool authorizer sns sqs non lambda slack slash pip only need input such press zappa one kind project name set outside interesting separate aws new code high throughput regex consistent global zappa project zappa resize auditable package such case own lambda serverless image overhead isolation run ffmpeg network interface traditional http pie different lambda result dest file serverless file simple notification apache common vpc code zappa subnet place possible web application lambda invokefunction shippable state deploy server remote print lambda dead setting set site api invoke form voter inviter tiny test suite new upload lambda console example private gateway resource example select sense outside need help run function local repo package file pyc lambda environment secure serverless balancer event aws region use paas linter available aws flask ask zappa top local project default zappa invocation remote http authentication task decorated message id cli header cognitoidentityid stacktrace file uploads tracker work ability cloudwatch log guide deploying midnight origin resource service ticket automatic route py g bashrc use zappa create route zappa file much merch paradigms good new relic next key value initialization aws ecosystem exception handler amazon alexa bora zerong json output handler execute use remote flask django uploads dynamodb serverless web corresponding sns project maintainability sqs queue example above edgar roman image host invoke interpretable policy unsigned help simple zappa endpoint configuration amazon iam local dev nat create desired domain try capture decorator stale test file ongoing blueprint example zappa cloudfront free ssl default log machine queue feature keyword addition zappa authorizer configuration zappa let invoke remote contact miserlou something similar return aware stream sqs free alternative lambda albs opencv python web app code note handler file source zappa gateway aws sensitive setting call manager deploying asynchronous functionality deployment api new usage remote function terraform aws aws service freepoll online virtual http handle cookiecutter mobile gateway private cookie setting toby wang rest configuration zappa function note global python live ci cd direct user please file flask api manage py fashion error see sean paley create custom github issue binary file username email amazon api side effect pypi lambda contact form bittorrent tracker deployment custom zero downtime current aws legal compliance roman django public internet tutorial official ray required output jalanko patrick production deployment alexa skill comment end remote zappa unique auditable building new lot source endpoint undeploy package aws environment own virtual base path directory storage auto event response completion bash execute activate request therefore serverless wsgi django status zappa terraform restricted mailchimp signup zappa docker create file organization travis first time sentry iopipe remote value make pie backend sqs team ci response time only file custom lambci building python zappa same time manage virtualenvs resource create global speed different function philippe trounev small large zappa invoke repeat repeat duration string unique package user model deployed parvianen jalanko robust solution deploying serverless resize image feature patron initial setup native aws non http part git head efi merdler update certification deploying new archive apistage request url serverless slack run command whole thing same way concurrent lambda zappa aws labs example example discussion related project please certificate deploying interpretable python output filename basic usage manager console function execution monitoring status paste bin progress zappa cognito identity manager acm redeploy update aws doc dlq resource use pyenv set multiple kms key file service example advanced lambda zip microservice official many other basic application lambda api sqs deletemessage aws zappa ongoing development domain name extension token inline django zappa ray zappa yahoo zappa apps code example dead letter george sibble boto wsgi app one api response limit super secret package id zappa hello below api labs blueprint hug example static web publish sendmessage template please limited certification zappa handler remote east region slack inviter aws iam xraymiddleware uploading django pyramid ray documentation aws deploy entire arn cloudwatch mackenzie aws execution aws basic deployment different invoke url warm serving discussion environment variable server time object deploy only sentry integration unhandled runtime authorization object store extra block usage plan load balancer upload new use lambda value pair cool value direct invocation local virtual local profile lambda compatible object file gdrive lambda training consulting xrayvision lambda instance serverlsa applikationer multiple custom ssl zero maintenance header similarly please http server new custom top python voter registration launchlab sean plenty json zappa zappa zappa sns topic invoke lambda elasticache redis jwt token select api gateway zappa middleware upload zappa application hurry click free helpful welcome please cloudwatch senv ray support enterprise great policy generation valid aws key information example dynamodb list behalf processing saas zappa part official zappa user input life cycle utils project building serverless key header status check ec instance valid wsgi activate global internet gateway key arn building amazon lambda function django contrib log enable zappa execution decode jwt tail need similar response body api endpoint functionality only loschilov korey kravitz philippe web apps argument only management automatic pizza lambda worker cache lambda function package django application minimal setup previous version binary uploads help django repeat travisci invoke function matt jackson own risk slack channel readme merch support chitayat george default aws curl note important packing complete arn cli zappa json object cert key zappa environment only package sendmessage access section custom available server manipulate remote zappa guide few weiss kimmo instance suppose context identity handy guide new python gateway cloudformation agin roberto excessive backend django request serving custom setting super acceptable set minimum policy python flask other tutorial cms tiny share cloudwatch kinesis deploy basic custom domain sns message dynamodb zappa above make jackson sean environment name stage event driven io simple patreon page role arn application type enable aws lambda set execute html official backup zappa tutorial python apps json serializable yaml infinite scaling label case only standard configuration lambda handler use gdrive application package execution role set manage own dns json file other exclusive create online simple setting environment production single cookie doc page custom static flask zappa application load linode type flask property basic django aws account db press lawrence launchlab gateway lambda duplicate triggering serverless microservice lambdamailer server lambda docker function invocation large zappa wsgi ssl certification ready api zappa response code advanced encrypt certificate horizontal scaling inverse own free use aws external reporting django plugin amount pass async python package deploy serverless apis zappa pillow kinesis sns bad lambda reporting tool large project issue see contentful aws schedule native environment lambda infection underlying current model user miserlou gmail anything lambda current certificate dns many kimmo parvianen aws console serverless python paley theo gateway configuration maintenance free app py fault handler separate lambda use let albs jankyglance server resource unique token subnet create related issue private model http header additional effort enable iam portal freepoll secret config usage initial bucket handy lambda execution read publish alexa ask zappa building other server sqs topic cognito user time django integration widget django pass json final package set local continuous integration create new page zappa usecase configuration see function create wsgi middleware app deployment gateway console value json django project super easy gateway think precedence context variable vpc secure zappa first deploy alexa task execution fly resize zappa related create superuser aws summit utc timezone channel serverless below", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "correct execution cron python code requested bottle capture output zappa deployment configuration execution policy css javascript useful current function experimental server pass remote policy json pythonic object site consulting django image free let subdomain console amazon return multiple monitor profile progress jankyglance downtime zero sentry monitoring bucket zappa much minute provision alb local environment aws route vpcs building support zappa asynchronous task notification service lex bot processing contact ssl cert domain pie function topic queue gateway context bash completion use flask letter queue zappa blog custom aws zappa homepage signup utility service event multiple lambdas support development wsgi interface potential use hello world busy please note docker image dns provider zappa cookiecutter handler only doug beney py remote non api policy api serverless sf simple server business parallel read edgar zappa asynchronous config json code please template use image uploads zappa run id application database configuration option configuration setting django management difference aws lambda docker dead apigateway resource private cloud setting aws ecosystem such equivalent clean import development training number wow file api likely lambda arn superuser username bucket note invocation django tutorial screencast permanent infrastructure uri magnitude zappa hug mime type policy setting application code json secure return message gateway api contrib auth g cloudwatch joe weiss book building gateway service work dns authentication hybrid event import path warm zappa dev production seoul zappa flat json pillow zappa company true dated configuration example compatible archive decorator call function time remote django psst case note uploads support server warm zappa slack zappa django inline lookup create segment python argcomplete access management project directory community json set trounev thank direct aws manager amazon alb open ticket name region gateway distribution default iam execution environment tokusatsu aws privatelink necessary amazon application context place wsgi compatible new lambda event source hash api access well provider decode config bucket option zappa cloudwatch invocation serverlessconf london root directory load balancing doesn regular cd system man gayle python wsgi run time redundancy make sure same call zappa box awesome execution zappa scaling zero example event young zerong toby python deploy python interview year ask framework roberto martinez good start prompt deploying application framework dev staging necessary wsgi warm lambda deploy redeploy ip certificate http unhandled exception hug application compatible app let work cycle serverless deploying django version deployed pyenv virtualenv output file lambda invocation pull request driven python rest good role name remote aws path mapping wildcard domain remote django time new certificate manager free self table name deletemessage api world japanese high availability vpc aws return value docker zappa storage space user pool command note dev environment deploy zappa aws cloudfront email password confirmation prompt function name bot intent trivial amount django utils advantage task event dns auth version control uploads zappa virginia department order lambda run see template status fraction online processing zappa ffmpeg zappa sentry request wildcard similar exception detail tiny server resource policy cloudfront distribution iopipe monitor django manage microservice book heroku simple duration other such liberal set static binary following lambda package iam policy same error uncaught exception environment health pr project virtual gayle juancito file widget security policy call certain unnecessary look something cost small handler cloudformation template file advanced aws api utility microservice infection toolkit query sf zappa key iam same command virtual private zappa io non trivial patrick agin blog mailchimp merdler kravitz argcomplete python gmail com auth deploying authorizer api file remote queue portable large set cookie memory cache policy use library open pull able automatic security set rate syntax let encrypt traffic connection string sibble joe common log bashrc advanced usage use api summit seoul api key awesome installation local timezone rogue use combination template similarly route table ongoing discussion vtl request certificate confirmation http auth process original issue aws certificate theo chitayat need console select file size invoke staging risk yaml argcomplete dest zappa bittorrent api gateway virtual environment application function iam role remote environment setting make python web body create nat key bundle see below zappa mackenzie zappa setting lambda such decorator example zappa behavior image docker aws ray create unique request please use route length archive uploads aws cognito hard limit registration microservice local cache travis ci auth import first step request template interview rich flask apps see asynchronous deployment stage route check streams sns fat application primary function handler execute only setting serving image processing route lambda common practice stage name please contact plan zappa cms installation table create cognitoidentityid variable please make identity cognitoidentityid wsgi layer kms encryption zappa training convenience zappa select usage decision behavior use use native good news signed kinesis streams asynchronous run control internet minimal current invocation global app expression lambdas instance elasticache care application css expensive bug single command appropriate local console ffmpeg run context stage active virtual unique uuid management command same key create wsgi exception event lambda pass dynamodb table deployed code own ssl part vpcs see zappa serverless server side box aws new api initial load wsgi apps monitor instance fifo mobile backend zappa please environment template self renewing command deploying upload small virginia private api event dictionary cloud vpc module py aws documentation serving static zappa deployment gateway g replacement lambdamailer utils utility variable key permissive sqs dynamodb senv manipulate aws simple lambda specific smart web framework function warm wsgi web pool authorizer sns sqs non lambda slack slash pip only need input such press zappa one kind project name set outside interesting separate aws new code high throughput regex consistent global zappa project zappa resize auditable package such case own lambda serverless image overhead isolation run ffmpeg network interface traditional http pie different lambda result dest file serverless file simple notification apache common vpc code zappa subnet place possible web application lambda invokefunction shippable state deploy server remote print lambda dead setting set site api invoke form voter inviter tiny test suite new upload lambda console example private gateway resource example select sense outside need help run function local repo package file pyc lambda environment secure serverless balancer event aws region use paas linter available aws flask ask zappa top local project default zappa invocation remote http authentication task decorated message id cli header cognitoidentityid stacktrace file uploads tracker work ability cloudwatch log guide deploying midnight origin resource service ticket automatic route py g bashrc use zappa create route zappa file much merch paradigms good new relic next key value initialization aws ecosystem exception handler amazon alexa bora zerong json output handler execute use remote flask django uploads dynamodb serverless web corresponding sns project maintainability sqs queue example above edgar roman image host invoke interpretable policy unsigned help simple zappa endpoint configuration amazon iam local dev nat create desired domain try capture decorator stale test file ongoing blueprint example zappa cloudfront free ssl default log machine queue feature keyword addition zappa authorizer configuration zappa let invoke remote contact miserlou something similar return aware stream sqs free alternative lambda albs opencv python web app code note handler file source zappa gateway aws sensitive setting call manager deploying asynchronous functionality deployment api new usage remote function terraform aws aws service freepoll online virtual http handle cookiecutter mobile gateway private cookie setting toby wang rest configuration zappa function note global python live ci cd direct user please file flask api manage py fashion error see sean paley create custom github issue binary file username email amazon api side effect pypi lambda contact form bittorrent tracker deployment custom zero downtime current aws legal compliance roman django public internet tutorial official ray required output jalanko patrick production deployment alexa skill comment end remote zappa unique auditable building new lot source endpoint undeploy package aws environment own virtual base path directory storage auto event response completion bash execute activate request therefore serverless wsgi django status zappa terraform restricted mailchimp signup zappa docker create file organization travis first time sentry iopipe remote value make pie backend sqs team ci response time only file custom lambci building python zappa same time manage virtualenvs resource create global speed different function philippe trounev small large zappa invoke repeat repeat duration string unique package user model deployed parvianen jalanko robust solution deploying serverless resize image feature patron initial setup native aws non http part git head efi merdler update certification deploying new archive apistage request url serverless slack run command whole thing same way concurrent lambda zappa aws labs example example discussion related project please certificate deploying interpretable python output filename basic usage manager console function execution monitoring status paste bin progress zappa cognito identity manager acm redeploy update aws doc dlq resource use pyenv set multiple kms key file service example advanced lambda zip microservice official many other basic application lambda api sqs deletemessage aws zappa ongoing development domain name extension token inline django zappa ray zappa yahoo zappa apps code example dead letter george sibble boto wsgi app one api response limit super secret package id zappa hello below api labs blueprint hug example static web publish sendmessage template please limited certification zappa handler remote east region slack inviter aws iam xraymiddleware uploading django pyramid ray documentation aws deploy entire arn cloudwatch mackenzie aws execution aws basic deployment different invoke url warm serving discussion environment variable server time object deploy only sentry integration unhandled runtime authorization object store extra block usage plan load balancer upload new use lambda value pair cool value direct invocation local virtual local profile lambda compatible object file gdrive lambda training consulting xrayvision lambda instance serverlsa applikationer multiple custom ssl zero maintenance header similarly please http server new custom top python voter registration launchlab sean plenty json zappa zappa zappa sns topic invoke lambda elasticache redis jwt token select api gateway zappa middleware upload zappa application hurry click free helpful welcome please cloudwatch senv ray support enterprise great policy generation valid aws key information example dynamodb list behalf processing saas zappa part official zappa user input life cycle utils project building serverless key header status check ec instance valid wsgi activate global internet gateway key arn building amazon lambda function django contrib log enable zappa execution decode jwt tail need similar response body api endpoint functionality only loschilov korey kravitz philippe web apps argument only management automatic pizza lambda worker cache lambda function package django application minimal setup previous version binary uploads help django repeat travisci invoke function matt jackson own risk slack channel readme merch support chitayat george default aws curl note important packing complete arn cli zappa json object cert key zappa environment only package sendmessage access section custom available server manipulate remote zappa guide few weiss kimmo instance suppose context identity handy guide new python gateway cloudformation agin roberto excessive backend django request serving custom setting super acceptable set minimum policy python flask other tutorial cms tiny share cloudwatch kinesis deploy basic custom domain sns message dynamodb zappa above make jackson sean environment name stage event driven io simple patreon page role arn application type enable aws lambda set execute html official backup zappa tutorial python apps json serializable yaml infinite scaling label case only standard configuration lambda handler use gdrive application package execution role set manage own dns json file other exclusive create online simple setting environment production single cookie doc page custom static flask zappa application load linode type flask property basic django aws account db press lawrence launchlab gateway lambda duplicate triggering serverless microservice lambdamailer server lambda docker function invocation large zappa wsgi ssl certification ready api zappa response code advanced encrypt certificate horizontal scaling inverse own free use aws external reporting django plugin amount pass async python package deploy serverless apis zappa pillow kinesis sns bad lambda reporting tool large project issue see contentful aws schedule native environment lambda infection underlying current model user miserlou gmail anything lambda current certificate dns many kimmo parvianen aws console serverless python paley theo gateway configuration maintenance free app py fault handler separate lambda use let albs jankyglance server resource unique token subnet create related issue private model http header additional effort enable iam portal freepoll secret config usage initial bucket handy lambda execution read publish alexa ask zappa building other server sqs topic cognito user time django integration widget django pass json final package set local continuous integration create new page zappa usecase configuration see function create wsgi middleware app deployment gateway console value json django project super easy gateway think precedence context variable vpc secure zappa first deploy alexa task execution fly resize zappa related create superuser aws summit utc timezone channel serverless below", "pypi_keywords_clean": ""}, "ming060/robotframework-uiautomatorlibrary": {"git_readme_keywords": "framework robotframework uiautomatorlibrary keyword documentation keyword documentation uiautomator library installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library keyword", "pypi_keywords_clean": ""}, "chaimleib/intervaltree": {"git_readme_keywords": "wikipedia interval tracker implementation leftmost interval inclusive difference intersection technology germany apache license github project library university halbert difference comparison license version argument previous overlap interval present previous envelop python github similar ordering konstantint konstantin matching intervaltree mutable version github example rightmost interval python everything important lmcarril membership typecasting envelopment karlsruhe institute overlap shallow estonia intersection symmetric object constructing symmetric difference object iterable pickle konstantin tretyakov coordinate chopping automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wikipedia interval tracker implementation leftmost interval inclusive difference intersection technology germany apache license github project library university halbert difference comparison license version argument previous overlap interval present previous envelop python github similar ordering konstantint konstantin matching intervaltree mutable version github example rightmost interval python everything important lmcarril membership typecasting envelopment karlsruhe institute overlap shallow estonia intersection symmetric object constructing symmetric difference object iterable pickle konstantin tretyakov coordinate chopping automatic", "pypi_keywords_clean": "interval tree data structure intervals tree"}, "yuanxu-li/html-table-extractor": {"git_readme_keywords": "important extractor example complex yuanxu suggestion license python library applicable example transformer something copyright copyright repository beautiful distribution installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "important extractor example complex yuanxu suggestion license python library applicable example transformer something copyright copyright repository beautiful distribution installation example", "pypi_keywords_clean": "html table beautifulsoup crawler scrape"}, "/pycparserext": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bendersky functionality particular", "pypi_keywords_clean": ""}, "django-oscar/django-oscar-stores": {"git_readme_keywords": "postgis django package default pysqlite sandbox geocode customer extension geodjango spatialite distance extensible project geodjango pysqlite installation support license appropriate directory building sophisticated install fixture install django github coverage django permissive functionality branch spatial database default default dashboard foundation tricky geodjango locator opening distance object superuser install package browser location", "git_description_clean": "physical store integration for django oscar", "git_keywords_clean": "", "pypi_description_keywords": "postgis django package default pysqlite sandbox geocode customer extension geodjango spatialite distance extensible project geodjango pysqlite installation support license appropriate directory building sophisticated install fixture install django github coverage django permissive functionality branch spatial database default default dashboard foundation tricky geodjango locator opening distance object superuser install package browser location", "pypi_keywords_clean": "django oscar commerce"}, "/buildbot-www": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Fiedzia/nose-sphinx-doc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generated documentation directory actuall v sphinx extension nosesphinxdoc introduction generation documentation collect plugin sphinx documentation simple drawing something useful sphinx structure installation example", "pypi_keywords_clean": ""}, "kivy/buildozer": {"git_readme_keywords": "package python crystax download crystax ndk group email value email kivy sister server channel become backer android sdk channel kivy following mailing build service android buildozer website become environment build application directory buildozer default target python freenode packaging appropriate environment up support kivy framework eponymous online channel server sponsor python default available sdk ndk version such installation buildozer docker example mailing linux buildozer python buildozer buildozer application license please python regardless support license online build usage channel support image dockerfile become sponsor directory docker environment config token android default config option nothing service buildozer following novel information target kivy environment variable android project license buildozer desktop build deploy section contribution please refer ndk information docker image build", "git_description_clean": "generic python packager for android and ios", "git_keywords_clean": "python packaging android ios osx", "pypi_description_keywords": "group email buildozer fail build feature zingballyhoo fix sdk installation tshirtman fix delete dist cmd cbenhagen doesn compile version export brousch port ssl beautifulsoup sslv alert dependency cheaterman fix black status buildozer regex hack osx sierra simplehttpserver brousch apk build problem ubuntu armeabi libs sdk install obvious cause implement source add link wakelock option ssl error brousch full invalid cross zen code comment typo attribute builddir installed attributeerror pa inclement old sh lib linux linux tgz sensorlandscape mode kivy permission failed module download cache whitespace directory inclement calledprocesserror command start new request build bump default same installation option sdk server error flag chinese use custom pythonforandroid toolchain index error sh py added support compile app documentation buildozer github argument ndk keka failed application kivy download make sure plyer branch option space py str usb cable packageapplication command typeerror read test debug multiple first andremiras buildozer comment andremiras build cryptography requirement sdk manager cross device psycopg problem buildozer folder plug select logic environment build py python mailing list droundy fix fix kivy building android ndk sdk guest apk uuid pytz error ssl add arch verbose android app directory following apk package uncaught exception packaging osx call few unused virtual machine python aidl current git version regex unpacking opencv bit detection download source pohmelie allow nonexistent script db file fix unicode processing name importerror unsupported python libpython wait target rnixx python failed setextradata solution building cryptography andremiras docker first class source value path name sdk dir failed compilation kivy error apk myellipse platform indexerror android src pa local fix file command error chmod ug cp akshayaurora compatable keep nooptionerror blueb buildozer arm linux launchmode build lib python make spec buildozer following mailing whitelist bni dont use websocket client androideabi gcc list sdk system wrong sdk update guysoft android debug android building ttf buildozer docker keyword argument python libs version pyliblo directory buidozer zlib expose generated apk arch copy start file name pa revamp ndk version error compiler failed virtualenv problem upgrade cant compile apk buildozer python compatibility error jni dev bump toolchain fails android update fail buildozer apk crash trouble building android ndk inclement implement command usr fresh ubuntu sudo buildozer device dlopen scproxy package master buildozer buildozer kivy toolchain switch use virtual alert handshake app android installation rst added note config log installer buildozer app app buildozer android cmd target python ubuntu necessary apk toolchain disable open codemaxx fix platform build jamalex add section bulldozer utf encode handle pure linux buildozer kivy buildozer mit license fix incorrect config option java file virtualbox filesystem kivy venv java clean crash command ant build failed spec section unicode print selective update support blacklist pull python downloading attributeerror context filenotfounderror errno nonetype object empty directory module importerror become sponsor official kivy andremiras support option brousch guest linux brousch add building kivy crash kivy current virtual default buildozer lang nosuchmethodexception android camera output folder only add idle window network drive only source sdk url ffmpeg logo proposal execute buildozer build folder ndk platform run daemon python buildozer unicodedecodeerror crystax value ghost import fails identifier sudo need version spec replabrobin android pygame skip update fix python update fails support app add support change bug license buildozer dbrnz fix old apk one buildozer api logo path android platform python android android buildozer psycopg various spelling failed usr android pa output directory scratch classnotfoundexception sun kivy help target android pythoncrystax command buildozer unable undefined ndk part new inclement make apk architecture jp desktop xzf android github changelog section sombernight fixes error cython android dist engineering apk spec typeerror problem downloading bad magic reverse engineering revamp handle home ubuntu current sdk comma failed download secretobsession os el lib lang classnotfoundexception buildozer download python sdk print copy download new pure python distribute sh brousch make debug error spec title tshirtman full release version installation info python kivy value time dbf keka file automated update error home non obvious orientation change websocket error android library ant path calledprocesserror python android release rafalo spec rst ubuntu buildozerv lib sdl main added realpath error download sister xcode macos building pil desktop blueb hard import networkx android directory buildozer debug min android project buildozer dbrnz workaround buildozer help android service buildozer matplotlib opencollective tito apk unable value inclement add possibility exception cython important fix old status code platform failed add opencollective slow debug apk info added pengjia added screen isn only file deployment dlopen write argument file property update readme current toolchain error fcntl android output file manager apache ant file section os buildozer file dont debug deploy compilation fails attributeerror str compile platform armeabi va osx old version problem pycharm toolchain licence year buildozer fails added example nosuchmethodexception issupportchangebadgebycallmethod deploy run python python ready info andremiras sdk argument code fixes tox package update command sdl java fix prerelease android buildozer new target platform ubuntu url java apk support design proposal current sys buidozer attributeerror bin ant ci creation issue value libpython spec passing log unreleased audio stream continuous integration file use documentation python apk test allow specifying fault error sqlite python unicode new google requirement add test app message failing website become caldav requirement linker error min sdk python compatable atomic undefined respect user package dependency exception adbuddiz incorrect minapi hackalog fixes error pythoncrystax add presplash compiler seperation chozabu byte xc ndk urls valid ndk buildozer techtonik api app ssl certificate cryptography sslv tar xzf library pint apk fresh path path pa whitelist java compilernot girl python doc revision update fyi buildozer vm directory home rammie extra comma start dbrnz pythoncrystax kivy failed exception app buildozerv environment export awkward error allow default min arch armeabi ant debug opencv myellipse debug such file phone buildozer one build crystax ndk sensor rotate installed error va copy failed ndk doesn work derpinguin update file encoding home abhipso brousch added argparse inclement exit status profile option os attributeerror add adb user try apk marshmallow issue buildozer kivy arch log file remote akshayaurora python compatability sierra hdiutil buildozer cant feature request toolchain branch aidl buildozer don work bin helloworld android configure pull old py updated apk subprocess failed kivy error android number cause content failed error building python directory name virtualbox guest txt file compile sample distribute install buildozer respect attribute group add bin machine buildozer check fail el capitan sqlite garden download ndk default android invalid keyword new ndk jni application enable support install platform ubuntu gcc able skip automated bit system command failed fails android delete build storage dir vm virtualbox android clean port config old android use upstream android python serve bin buildozer issue error message status asyncimage docs andremiras android command linux androideabi desktop requirement buildozer py issue chozabu full ndk information xcode command apk fails new toolchain noob question build service pa command importerror dlopen branch problem ndk websocket secretobsession use java path pillow return activity buildozer folder help dir check path error sponsor change vm installed oserror errno fails due ascii decode deployment fails package app file default building release debug release ant error use pa irc freenode target directory new app incompatible ndk inclement various build numpy error zen custom kivy python unable command problem android bug displayname music soft link fine fix py fix android build output bose package make pexpect apk command time building pythoncrystax app machine failed clean build throw error android repo implementation possibility debug build fails trouble ndk problem cbenhagen pa dessant make home alex possible add ability apk error raise exception available empty pa download techtonik fix user sdk fails toolchain online build module object added check matplotlib ioerror zworkb full attribute hostpython harder buildozer startswith android ian foote android apk first android copy libs attach failed dlopen failed python build email kivy ghost allow ssl only library android android target folder one null error solution ant osx fails unavailability sponsor build fail release apk requirement error setdefault description build pyjnius sh package version rd dist name buildozer compilation stuck nothing attakei added allow selection linux python file creation ubuntu buildozer dir spec problem awkward pjnius build typeerror write dessant full install buildozer app path py permission added android dockerfile fixes readme inclement regex sdk buildozer io debug python fcntl import fyi ubuntu failure buildozer updated licence issue fixes preferred ndk gcc segmentation blueb bootstrap requirement fails detect bit commandnotfounderror path spotlightkid pat cbenhagen add first time capitan buildozer migrate android apk apple recent ish api default python distribute build pjnius support request support sensorlandscape fatal signal libs due config file final ant list user sudo issue code thread handshake failure port replabrobin novel os docker typo brousch support config permission buildozer inclement unit cython python buildozer failing mac pa python import python andydoucette toolchain error techtonik execute module os ubuntu compilation color argument run fail don unpacking apk python python m custom source presplash error setup crystax opening android message error sh inclement compilation bad downloading ndk buildozer virtualenv irc channel sub process domain migrate signal sigsegv basic bit buildozer program behavior change bootstrap inclement buildozer import name property pastcompute helloworld debug add python fruitstrap image dockerfile joseph jnl kivy website client ssl minsdk argument license file run pa buildozer problem recipe compile notification launch virtualenv cbenhagen fix crash revamp storage information link crash buildozer file system error ld subprocess calledprocesserror helloworldapp build generated state buildozer buildozer pip version license please necessary java baseencoder ioerror fermiparadox update python sh command akshayaurora buildozer init add pa broken build kivy install garden install argument private use dmg logo pip download default version pillow requirement machine available added serve platform compile service buildozer proposal buildozer gradle usr bin build target token inclement building error osx packaging module compile apk android old libto anything many other recent sdk installed gcc fatal code python org test attribute decode env var similar problem usb plug use numpy abhipso thembapp api minapi splash image fix ndk rst matletix help fatal path issue cp obscure crash see android pythoncrystax recipe problem error pa port question keka pa dir myellipse build failed complie robertpro quote default spec return parse mahomahomaho fix net port android migrate akp build python inclement directory issu functionality python akp decode byte build failing added build bauerj add freenode net use cp pa setup window option boto apk arch linux hello world python crystax read version addroid opening wrong version error aidl file app kivy apk sudo invalid issue template failed libsdl buildozer setup buildozer error example sdkmanager inclement problem subprocess version support revision dessant android name dessant ubuntu dbaccesserror deploy buildozer buildozer object use google samurai girl ascii codec changelog full cant build number inclement buildozer python android new reading config appropriate environment readme md virtualenv password update cython service notification alanjds add sdk linux error error sh kivy udiboy use migrate pa magic number watch support home jp python configure target jamalex option tshirtman add spec attribute maxint ug inclement update use old checkbin attakei android package error flag run buildozer dir option path null pull build requirement incorrect api longer prerelease version such building environment import error misc baseencoder sun misc absence inclement adbuddiz class flag fixes apk helloworldapp file zlib application automatic attribute startswith android ant please refer please install version simple function custom py fails crystax python unexpected machine jabbalaci implement py buildozer ouya support error minsdk denys duchier time py kivy framework pyjnius exception recipe dir shivanb full dev incorrect buildozer deploy flask server java package datetime time api brousch android project platform independent android app download google list index webview port install android errno read become backer type identifier error buildozer update quickstart changelog generator usage exception apk importerror range pypa implementation akshayaurora garden please update return none full changelog package path issue sudo stable branch launch intent unicode amdeviceinstallapplication failed deploy error open pep tshirtman wrong activity failed image spec option configure error zingballyhoo android buildozer doesn option pa check presence hdiutil attach os target pycypto deploy fails application src apk file hack install see config command order local recipe rnixx fix default install toolchain py main activity android fails buildozer spec new debug redundant ndk utf encoding virtualenv python default directory indexerror list source dir target fails installation docs example info encoding error invalid directory buildozer verbose icon logo android plyer channel kivy urllib request quickstart rst path problem decode problem folder olymk change log android platform python default need help java lang fix build py raise apk building typeerror encoding input numpy raise helloworldapp debug fixes cbenhagen port daemon deploy version device link pa directory android jnius add uuid ratio problem window failed fix few urls zworkb none inclement cython compilation way tedious use buildozer ubuntu guest add android section app gcc dlopen hostpython osx own subkey request dockerfile use portrait expose kivy sys executable add wakelock attributeerror nonetype android device error amdeviceinstallapplication builddir nilutz comment re android sdk android build added fix tito dir android spec fails platform apache kivy test git https update sdk fixes comment group error attribute directory nilutz throw debug install linux version rafalo add andydoucette update end python project undefined reference help fail init py build apk error arm foote full build deploy status attributeerror failed tar added pa sdk path encode error dbaccesserror permission ug android var checking support uncaught wait linker techtonik install hamster ouya doc error https buildozer run error bit sdk obsolete sh channel support world impossible fix output version cbenhagen bulldozer akshayaurora kivy window please upgrade python library impossible checking distribute kivy wsl tshirtman fixes invalid ioerror invalid new one stuck ioerror available crystax test android one solution pa master buildozer run launch buildozer new fails automatic installation installed android deploy app absolute path download os foote add python file tshirtman allow py dev version error launch wrong toolchain inclement add applibs add comment python install new buildozer unknown permission something config token replabrobin spelling vmware ubuntu android add failed apk dockerhub buildozer import sqlite android py android permission bug disable python app command cbenhagen error requirement read inclement sensorlandscape minsdk error apk ex splash ini buildozer domain pygame command python home andrew sdk buildozer recipe cant api target error help subkey use buildozer don server continuous startup importerror error please inclement check split updated android state db app doesn file pip version question debug first pat update usage see arch config enable use fix typo buildozer feature kivy master fixes minor serve command date spec unreleased full readme rst old toolchain bin python ubuntu fermiparadox buildozer deployment please virtual requirement example text provider default ndk fresh clone execute str object main collect information see marshmallow sdk android storage null package name reading generated few tshirtman re pa kivy failed docker environment pygame org bump version support symlink new landscape build directory install reqs cython buildozer isn home samurai channel server toolchain failed pa source py line pa android maxint subprocess compile kivy custom activity cache flag fermiparadox add buildozer build apps pa color buildozer virtual easy install home kivy camera error bootstrap apk pass apple watch binary android inclement fix let pa new android python venv target buildozer thread sdlthread python compile app section kivy python clone akshayaurora linux icon failed error landscape error black text apk way importerror inclement gradle build ant stage sdk inclement collect error jonast handle docker image segmentation fault new pythonic default rafalo failed filenotfounderror android branch crash application compilation space path buildozer link failed building requirement failed building numpy jnius jnius work complie platform disable bitcode eponymous online ant failed macos command status errno libs color tshirtman check isn building crash apk application directory phone buildozer default errno invalid title icon link robertpro apk harder custom path androidndkver environment directory implement add status kivy cython tool issupportchangebadgebycallmethod attributeerror self ctx python support multiple python verbose output doesn run simple kivy handle buildozer platform doesn expanduser incompatable str new command ndk api python site file buildozer project techtonik cylp actual api doc fails buildozer unpacking kivy read spec api version logo design inste chozabu installed buildozer directory app new add os extraction fatal error xc apk buildozer importerror inclement delete added private pyzmq import andremiras inclement non installed android application wrong path build hello kivy virtual machine check invalid ndk sdlthread buildozer master inclement gradle path fix bad build java wav ogg root inclement name pythran file build google play need rd error sample android api filenotfounderror app selective android wakelock python problem toolchain apk toolchain rnixx str new commandnotfound python pil library update default brousch fix bootstrap sdl kivy app build application storage option dir value android arch host failed use vm application windowinfox one option path adjustment orientation broken fix distribute use fullscreen toolchain index buildozer gradlew failed distribute supported python fix support target spawnu buildozer realpath modifier executable inclement start app readme bug tito enable pa typeerror cython file virtualenvs brousch main py unknown typo complete dist name spawnu bulldozer android last command ndk default install pillow buildozer pyjnius python ssl buildozer development build fails error sdl fix importerror va fails hackalog fix ln obsolete source python host buildozer compiler skip error support skip option zingballyhoo error sdk see buildozer default value splash screen numpy commas arm android run unclear error app title bad placement packaging package pastcompute inclement add build error sdk command future target ndk allow app andrew code release package right android use file jonast goal little icon xcode buildozer failed clock ioerror errno sdk fails error init pint invalid decode issue refactor py incompatable indentation install distribute pip error color support aws boto ssh target attribute critical cache option cython cythonnot help read only doesn support fail add directory buildozer unknown brousch error move kivy kivy system command andremiras fix buildozer solution fixes andremiras pytz datetime world apk libs armeabi add window python regardless udiboy updated spec hackalog large mb context object failed buildozer duchier full path filenotfounderror errno permission failed python line buildozer replabrobin fix buildozer dockerfile target build pythonic fix move dist dir compatibility pohmelie config ini up non license question sprint sdk ndk buildozer apk pyaudio buildozer minor comment support license china buildozer kivy dev osx apps default config toolchain lxml test build buildozer clean akshayaurora android buildozer dev apk big update android venv error supported os dir cidermole build time python android error argument virtualbox note python ioerror allow custom don try fedora buildozer big bug machine error dir token cdrom python don download url sdk management py error importerror buildozer ant bin archive check app build file rename download python updated sdk building apk py displayname post build fails atomic pexpect py building wheel mac os buildozer failed make read ndk alanjds gradlew failed support python updated readme bad program minor version server irc name blueb environment variable platfrom unable cython issue change skip ctx python py utf sh commandnotfound issue excessivedemon portrait orientation upstream pexpect lib pexpect fresh android python crash rst fermiparadox free application source spec file distribute org option make raise commandnotfounderror use stable contribution guide error python build pohmelie pastcompute fix help please bottom app crash packaging buildozer install techtonik certificate check dir use activity attributeerror buildozer unicodedecodeerror openssl compilation fix detect comma seperation python recipe spec jabbalaci failed build time buildozer download android dist helloworld unicodedecodeerror ascii git mahomahomaho custom python error app branch buildozer setup py check inclement behavior error only channel python pythonforandroid roskakori ndk download form user group sure android compile error branch inclement cbenhagen chmod thembapp buildozer dev group attributeerror module bni full app dessant restart add google repository write python package build py doesn use update installation server channel api argument inclement added buildozer android broken update quote storage fix usage app py android api android undefined android checking manjaro linux invalid argument drive app inconsistent cython version new change com app command filesystem doesn sdk crash android error src libs dir home helloworld bin python dbrnz year codemaxx minapi android", "pypi_keywords_clean": ""}, "lukaszb/nose-watch": {"git_readme_keywords": "package process script watchdog plugin switch change repository installation watchdog development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package process script watchdog plugin switch change repository installation watchdog development", "pypi_keywords_clean": ""}, "daviskirk/germanholidays": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pandas calendar holidays"}, "/mysql-utilities": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "source see royalty free release history basis psf property law licensee non development team derivative version public licence possibility thereof copyright owner version copyright ioi much software foundation use cnri tortious action behalf permission associated documentation intellectual property principal author free world source license copyright eric advertising com copyright gnu public source authorized s federal attribution word cryptographic accordance cwi see foundation psf lgpl profit organization university copyright oracle corporation see national research property zope table foundation license performance example non separable whatsoever holder material breach patent notice derivative work application code bzip org california basis cnri work grant permission royalty fee conflict copyright julian msvcm dll relationship textual message com beopen ssl documentation executable file platform other use copy software subject tim hudson special indirect theory application julian seward foregoing rsa lhash tk software individual core openssl actual license action particular purpose work brief openssl project distribute microsoft new work available same year following unique binary build federal law specific prior santa clara fee business interruption license apply basis beopen cnri license original software beopen python txt file db software s government file docs mysql gpl distribution licence cost tort administration agreement psf ioi kim use python specific code available subject python psf psf license corporation activestate non infringement oracle copyright copyright law trademark sense commonwealth connection stallman lawyer unlawful psf notice python interpreter associated library source definition particular copy original license contact openssl package redistribution maintenance support part thereof government use test perform developer license tcltk license agreement please contact contract strict tjh cryptsoft software non commercial microsoft documentation public license html lib licensing copyright notice seward jseward incidental special non exclusive licence beopen com agreement version verbatim implied license html gplv disclaimer later version license e library libbzip successor information mysql doesn mean framework copyright strict liability software available directory application general public release reasonable openssl toolkit code see federal acquisition malicious deceptive beopen hereby complete database liability openssl toolkit see bsd style related intellectual python licensee warranty python principal copyright python contract negligence indirect incidental product eric docs license specific com original permission notice gpl compatible berkeley db corporation white drive trade name mysql workbench unique persistent limitation psf result org bzip redistributable possible permission please direct indirect united documentation available young eay following text redistribution software license express joint venture own python prepare derivative use gpl license tix project openssl license limitation cnri limitation beopen inc saratoga avenue respect cnri lawyer doubt major development program above copyright choice other herein many outside law clause way zope corporation style open october group copyright persistent identifier incorporate non ssl code software additional separable material obligation manipulation framework mysql team microsoft distributable nonexclusive royalty microsoft operating copyright corporation file complete following acknowledgement cnri hereby commercial computer gpl let california sun france various tix nothing bzip libbzip commercial agency partnership state cwi license use microsoft guido van core development handle ssl implementation federal copyright organization licensee python software cryptographic related contact oracle derivative thereof modification python available jseward bzip lam copyright kim lam indirect special dual license project group digital language agreement beopen web page operating system java bytecode liable first page binary form agreement licensee psf see harvard university license mark substitute federal intellectual berkeleydb html library license version agreement cnri world wide license complete microsoft distribute eric young non profit licensee hereby cnri notice part origin rc rsa department small party component computer software product documentation ssleay license python related preston white openssl core agreement license form whatsoever unspecified third such damage defense tcl org openssl openssl please bzip cryptographic software pythonlabs team licensee beopen accept button extent such commercial use python license several office use psf fitness modify distribute limited product python december dll msvcp software python wide license activestate corporation python beopen psf hereby loss available version open source following software hereby grant avenue santa workbench distribution damage julian support copyright tix external end damage copyright event licensee same copyright distribution copy analyze test program bzip agreement nothing stallman following url fast java python cnri copyright trademark list behalf other software original ssleay apps directory other tortious eay cryptsoft following acknowledgment such s tk member license choice documentation online apply acknowledgment internet va cnri license gpl exclusive royalty compatible doesn publicity pertaining special incidental python open virginia conflict representation avoidance code use third party bytecode manipulation microsoft own licensee nonexclusive license texts software please documentation subject cnri see van rossum distributable code beopen pythonlabs incompatible copy modify e copyright license mysql python use mathematisch centrum form version gplv case license information libbzip version such work use beopen program startup microsoft com website copyright e merchantability fitness prior permission license txt procurement please copyright activestate reston va guido direction third gnu general oracle com python python following disclaimer agreement cwi source code special exemplary see microsoft reston virginia package regard microsoft corporation cryptsoft com python core dll msvcm many centrum cwi library software lieu merchantability drive reston msvcp dll president brief summary software licensee com license nominal fee software distribution license copyright exception related documentation time openssl org early hudson tjh modifying consequential proxy server python release distribute complete source tcl tk official license", "pypi_keywords_clean": "mysql db"}, "GNS3/gns3-server": {"git_readme_keywords": "package contribute enable capturelog current aiohttp gentoo linux prevent double internet coverage master master ubuntu development pywin project double execution install python server repository support distribution gentoo install command output available please contact version logfile production service systemd example creation homebrew stable release python process docker container server pidfile please security certificate install gnsserver systemd system branch python mkvirtualenv daemon various upstart systemd local server section following directory usefull major release python python config virtualenwrapper source server python sample simple installation server master linux debian linux", "git_description_clean": "gns server", "git_keywords_clean": "network networking network emulator", "pypi_description_keywords": "package contribute enable capturelog sample script current aiohttp gentoo linux prevent double internet coverage master master ubuntu development pywin project double execution install python server repository support distribution gentoo install command output available please contact version logfile production service systemd example creation homebrew stable release python process docker container server pidfile please security certificate install gnsserver systemd system branch python mkvirtualenv daemon various upstart systemd local server section following directory usefull major release python python config virtualenwrapper source server python simple installation server master linux debian linux", "pypi_keywords_clean": ""}, "jedie/django-tools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cleaner django stack info info rename nicer merge counting gregor mllegger settings py createtime lastupdatetime selenium refactor utils url change change middleware base site cache basefilesystembrowser django staticliveservertestcase action usage image landscape file filemanager pseudo app request atttribute add querylogmiddleware file check message storage display post debug mode django look new site django http own app label modelname g comma original django modelname format remove old bugfix modelpermissionmixin new new new store chromium staticliveserver storage py bak backup template file tox django file content case bugfix browse existign update django email backend commandline script mode send printed representation send text site id doesn add reset timestamp user bugfix mimetype text field check new strip page add settings logging coverage stuff get internal use dynamic todo fix database column set temporary overwritefilesystemstorage django form languagecode io jedie info tracebacklogmiddleware dynamicsitemiddleware new created test filter python bugfix django user backup foo fix pypi compatible bugfix mockup image anonymous compatibility add enhanced skip fail g activate django filesystem ond node python pypy utils selenium change readme simple commandline user staff used generator generate matrix new app label setrequestdebugmiddleware middleware usage backup class usage enable logging self asserthtmlequal g manage mockup create bugfix fall merge stack type new django code library library default image selenium test get webpage url field installed hardcode used sql prefix check api change see display new style please remove backup functionality add template site alias root directory database info python support used settings unicode change url getdict same info entire temp django logging current environment new keyword new selenium middleware note directory check appregistrynotready time django function refractory tools coverage user pytest problem form model super user django compatibility new stuff urlencode doesn self assertdom exit new traceback script upgrade select djangocommandmixin helper run refactor tools status add object cache information add flexible debug csrf core signing path browse png new isolated smooth cache assertequal dedent browserdebug warn invalid user get settings use new display landscape io speedup test io coverage new g style middleware first version add model admin error internal utils unittest django form add djangocommandmixin browserdebug use new add version set virtualenv py add dom django manage jquerytagmodelfield fallback create pil old usage usergroupsmodelfield new insert template benkonrath new add work error developer staticliveserver see decorator new django version run test fix set org image call new management middleware add tag field g small temp directory stuff new generate unittest lucas wiman response content temp filename mockup utils gsoc form g django argument new delay tools defined base python django staff test developer helper g source string buffer v v processing ci org buffer handler used bugfix south introspection accept language future remove utils get form urlfield see add secure cookie travis tox add timeout io build none bugfix selenium utils apps utils import lib setup py new csrf debug add import print sql update browserdebug unittest utils catch dummy image unittests todo current request unittest browserdebug dummy pil add stdoutstderrbuffer bugfix catch attach user helper class bugfix usergroupsmodelfield languagecodemodelfield rfc add solution see method unittest debug bool parameter see used database old dynamicsitemiddleware firefox staticliveserver browser debug wip refactor python new handler new page update apps g browserdebug bugfix add print exist new handle updateinfobasemodel regular expression g stdoutstderrbuffer decorator context duration add org jedie rendering use id middleware keyword argument apps new stdoutstderrbuffer redirect dom tree get cache use prefix image codecov settings site signed seperate file cache get low level setrequestdebugmiddleware add failure display field bugfix date usefull new path middleware similar debug new add utils g logging skip run management command example test local dict clear generation function manager useful template loader python compatibility field own djangocommandmixin bugfix message framework new api github jedie name domain directory change image travis same functionality info read tools django new refactor request object smooth update validator model args keyword please test use cryptographic simple string copy stuff see create logging field flexible use dict put traceback test project templatedoesnotexist internal type pylucid cms speedup representation database utils http environment backend assert gh jedie response template work round info code level assert urlfield unittests decorator bugfix add normal model languagecode storage add django strip compatibility bugfix get super rendering branch compatibility django org coverage manager see refactor use header format modelpermissionmixin dynamic processing time note assert new bugfix createby lastupdateby bugfix database fix unittests build status access add anonymous user staticliveservertestcase new add django django cache tools list information sys py bugfix g user true use add unittests new temp utils create available common assert first empty utils bugfix pypi donation new check settings static cms check usable own validator updateinfobasemodel update overwrite get bugfix use existign path filemanager library form input decorator helper add see use string date manager usage filename new language header superuser isolated mllegger gsoc display admin list display case new apps django helper add flexible url driver context manager pylucid x prefix bugfix command g don access django tls invalid template great work py cms new tracebacklogmiddleware py timeout response assertresponse unittest base donation send created don tools unittest mutable output tools unittests gsoc work settings g cache add g active django template dumpdata number g current email assert language message debug version python experimental please g create repo stackinfostorage add apps add set inital todo use sourcecode http settings installed form field experimental warn run shell new model split selenium select sub browserdebug new save admin action new utils system load client storage miscellaneous stuff unittests delay https template library chromium test move querylogmiddleware todo base basetestcase see django selenium helper getdict similar enhance permission lxml cleaner io gh don deactivate small tools foo bar legacyfallbackstorage display list manage py source luke package new strip html staticliveserver example exist new ordering test fixing chromium browser compatible solution info list change file loader g content ci new instance unittest bugfix selenium bugfix valueerror apps please python backport use tox flexible version tools utils enhance selenium add support base path travis ci suffix server send csrf failure image format invalid decorator bugfix add new argument utils installed api bugfix utils put dom compare debug send v see source foo directory tree backport package field django tools format rfc human duration response stdout stderr round utils side add limit auto add support clear manage command apps check tbc bugfix io status refractory dynamicsitemiddleware local sync firefox use firefox log handler addon display easy test py add tracebacklogmiddleware new string cause feature fix test http py utils see logging info bar bak tools template exist many relativ remove skip official use remove add setrequestdebugmiddleware incompatible change debug page bar backup pil django tree usage utils client languagecode field inital count base baseunittestcase enhance model io image helper additional symbol nicer future auto utils add chrome test djcelery obsolete work dir http querydict use chromium shell style django core wiman bugfix merge code todo add independ display used code generator new decorator text html tools miscellaneous log level unittests decorator textile clear threadlocal domain name code check old mockup bugfix decorator archive raise excaption user new generator new add optional check middleware see message new limit staff pypi package basetestcase add lib helper g management add experimental firefox browser importable bugfix cryptographic signing easy check library see remove date stuff overwritefilesystemstorage use settings overwrite isolated filesystem tox run test run django cms dev tbc py g getdict new change temp set settings count name alias current version python remove g current installed apps mail use client pil image middleware true new version history dev django filer attach unittests usage framework output unittests run celery task many miscellaneous celery see wrong django message language code tools manage listing pypy pypy bugfix enhance set delay add test official support redirect stdout cms build backend new cookie see seperate apps response g suffix check http utils feedback add filesystem storage signing tools celery import form rendering helpful output nicer manager class cleanup remove remove decorator use response directory traversal tempdir context tools nice test case sys getsizeof sequential number cache clear limit something add local site middleware project tools lazy don add mockup model field date attachment bool attribute django contrib add debug log default engine normal debug g baseunittestcase image generation format useful unittest code allowed functionality new pypy bugfix true raise set createtime request domain bugfix unicodeencodeerror selenium chrome template name usage g only stackinfostorage message django application executable mediapathmodelfield relativ beta new logging utils fix unicodedecodeerror static root x add miscellaneous tools version string debugcacheloader insert django add jedie django loader debugcacheloader create dummy init add django support dedent note new django read stackinfostorage input g io github set string incompatible image api don overwrite new minor temporary see disable render template following assert get parameter python use image created modeladmin list see usage render render create user html user group g mimetype g staff html dom example firefox path doesn celery stuff rename cache middleware set create text matrix unix shell unittests form refactor selenium dynamic site filemanager gallery firefox test virtualenv simple memory backend refactor travis tracebacklogmiddleware put add check installed default utils tempdir root new cache middleware path model permission past add current work info see store information sync cache pytest coverage bugfix python display silent codecov io stdoutstderrbuffer wip baseunittestcase django pypi stress last model instance exra manage old place threadlocal request package staticliveservertestcase chromium new helper refactor unittests use django settings debug only initialised additional helper see utils bugfix django bugfix attach add formsutils task send logging nice template render current system cookie assertresponse used add create test method alias function basetestcase self generator see info witch stuff look pypy v send mail text see permission info only set version number cache smooth http get coverage status create new buffer g file use tox pytest sub directory future django information test user assert django multi timeout work nicer solution upgrade virtualenv argument skip filesystem decorator minimal csrf tools debug logging manage", "pypi_keywords_clean": ""}, "aliyun/aliyun-python-sdk-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python sdk documentation official software python application application library module software development", "pypi_keywords_clean": "aliyun sdk core"}, "caktus/django-scribbler": {"git_readme_keywords": "default django scribbler development preview project django template previous similar template language additional available support installation interested installation django application content scribbler django arbitrary repository unreleased version license django powerful documentation documentation snippet feedback template", "git_description_clean": "django scribbler is an application for managing snippets of text for django website", "git_keywords_clean": "", "pypi_description_keywords": "default django scribbler development preview project django template previous similar template language additional available support installation interested installation django application content scribbler django arbitrary repository unreleased version license django powerful documentation documentation snippet feedback template", "pypi_keywords_clean": ""}, "materials-data-facility/mdf-forge": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "discovery mdf facility python", "pypi_keywords_clean": "mdf materials data facility materials science dft data discovery supercomputing light sources"}, "/metaconfig": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "centralised metaconfig metaconfig configparser instance available further documentation multiple library configparser", "pypi_keywords_clean": ""}, "klen/flask-pw": {"git_readme_keywords": "license license default tracker development project peewee support command version example framework debugtoolbar description connection manager postcard bugtracker appreciation welcome intergration installation installation application configuration", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license license default tracker development project peewee support command version example framework debugtoolbar description connection manager postcard bugtracker appreciation welcome intergration installation installation application configuration", "pypi_keywords_clean": "flask peewee migrations migrate signals"}, "/package": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "author sanity storage design installable burden simple makefile simple package author current python complete second installer blasphemous atrocity package installation package package possible python module neighborhood community disagreement project helper ubuntu linux experience support license install course command generic template available development status prerequisite github anyone allow solution exception python dependency everything software common directory package source environment subdirectory package python nothing packaging technique afraid copyright information different functionality package module development python knowledge package packaging environment environment python package related package repository normal python little minimum", "pypi_keywords_clean": ""}, "/rdio": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tool wrapper service command", "pypi_keywords_clean": ""}, "/icmptool": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "irregular generically common implementation period length limitation maximum constant forward pattern tcpdump router classification campaign constant specified configuration observable responsiveness chosen limited nearby predictable limited router planetlab typical following above example script shell certain", "pypi_keywords_clean": ""}, "hawkowl/towncrier": {"git_readme_keywords": "package valuable deprecation development system interest ticket quick extension useful utility folder original project standard single install developer command information philosophy history documentation improvement version feature public usable myproject python compatible python software content example fragment removal directory complex information twisted parlance literal release comment ticket number convenient filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package valuable deprecation development system interest ticket quick extension useful utility folder original project standard single install developer command information philosophy history documentation improvement version feature public usable myproject python compatible python software content example fragment removal directory complex information twisted parlance literal release comment ticket number convenient filename", "pypi_keywords_clean": ""}, "nailgun/unpushed": {"git_readme_keywords": "standard output python migration current changelog quick change report untracked uncommitted project uncommitted mercurial notification routine command database default behavior version control filesystem mercurial feature example moment unpushed system report brandon uncommitted directory original author uncommitted script pynotify library notification preface repository pyobjc gondim unpushed notification application notification facility crontab crontab script uncommitted updated default unpushed desktop notification existence mercurial subversion verbose markup report", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard output python migration current changelog quick change report untracked uncommitted project uncommitted mercurial notification routine command database default behavior version control filesystem mercurial feature example moment unpushed system report brandon uncommitted directory original author uncommitted script pynotify library notification preface repository pyobjc gondim unpushed notification application notification facility crontab crontab script uncommitted updated default unpushed desktop notification existence mercurial subversion verbose markup report", "pypi_keywords_clean": ""}, "matthiask/towel-foundation": {"git_readme_keywords": "password change bottom inside content javascript useful scrollbar argument container everything inside available several instance template jquery object jquery instance translucent height django everything content navbar attribute selection default browser sidebar following complete opacity foundation protection textarea current navigation template navigation modelview pagination declaration everything receive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "password change bottom inside content javascript useful scrollbar argument container everything inside available several instance template jquery object jquery instance translucent height django everything content navbar attribute selection default browser sidebar following complete opacity foundation protection textarea current navigation template navigation modelview pagination declaration everything receive", "pypi_keywords_clean": ""}, "LREN-CHUV/i2b2-import": {"git_readme_keywords": "import metadata project schema docker framework program agreement european import introduction white matter catalog database dicom directory seventh framework metadata pipeline incoming library installation organisation build", "git_description_clean": "this library provides functions to import data into an ib db schema", "git_keywords_clean": "ib pytthon data factory", "pypi_description_keywords": "project docker license codacy import introduction directory circleci extra library catalog schema installation build", "pypi_keywords_clean": ""}, "/django-generic-flatblocks": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "production stable generic license classifier flatpages flatblock environment classifier flatblock application license author unknown classifier status production development status audience django content flatblock flatpages system framework django classifier license description classifier environment language classifier development stable classifier independent classifier classifier framework", "pypi_keywords_clean": ""}, "j2a/pytils": {"git_readme_keywords": "specific transliteration numeral additional status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple russian representation transliteration", "pypi_keywords_clean": ""}, "onecodex/onecodex": {"git_readme_keywords": "package boydgreenfield installation newline unique account command multiple parallel subcommand library g ipython hexadecimal makefile interactive notebook development command warning analysis argument addition project automated username present silico command fastq website functional identifier various whitespace several version management optional version python version example shared environment resource python machine application authentication functionality resource g logging particular lowercase password virtual environment following installed respective keyword repository uploading additional functionality query interface information individual python library platform advanced interface access following import upload minimal installation webpage g pyenv metagenomic classification github repository library initalization", "git_description_clean": "command line interface and python client library for the one codex api", "git_keywords_clean": "", "pypi_description_keywords": "package boydgreenfield installation newline unique account command multiple parallel subcommand library g ipython hexadecimal makefile interactive notebook development command warning analysis argument addition project automated username present silico command fastq website functional identifier various whitespace several version management optional version python version example shared environment resource python machine application authentication functionality resource g logging particular lowercase password virtual environment following installed respective keyword repository uploading additional functionality query interface information individual python library platform advanced interface access following import upload minimal installation webpage g pyenv metagenomic classification github repository library initalization", "pypi_keywords_clean": "one codex api client"}, "SmileyChris/easy-thumbnails": {"git_readme_keywords": "traditional requested setting template offset bottom setting complete project directory useful default thumbnail multiple thumbnailer combination separate template python dimension example django python application status negative predefined summary thumbnail enlarging templatetag module comprehensive information g offset interesting powerful quality access template directory installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "traditional novakovic setting template offset optimization thumbnail pillow useful oserror exception addition standard separate overflowerror touchy version transparency signal introduction thumbnail template resolution peruse thumbnail filename functionality connor hunner enlarging quality requested aspect directory installation method introduced signal transpose compatible version incorrect behaviour bottom setting invalid multiple thumbnailer argument mirror python minimum vestigal processor rendering modification sharper example django status negative signal percentage thumbnail quick summary function templatetag module source processor g offset source reflect px thumbnailerfieldfile pickle unpickle multiple source management command deprecation project directory python compatibility reimplementation configuration python installation template python dimension orientation support django minimum requirement incompatibility application optional postprocessor interesting powerful exifs deferred access contain django compatibility problem default storage source thumbnail aliased ioerror potential concurrency transparent complete efficient thumbnail extension default thumbnail optimization default django packaging combination output thumbnailerimagefield widget exception thumbnail default python callable unpickle machine considerable predefined comprehensive information ability thumbnailerfield conditional check template increase progressive encoding subsampling", "pypi_keywords_clean": ""}, "/nltk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python language processing language toolkit", "pypi_keywords_clean": "nlp cl natural language processing computational linguistics parsing tagging tokenizing syntax linguistics language natural language text analytics"}, "fhcrc/seqmagick": {"git_readme_keywords": "package position software length install seqmagick conversion deduplication forward version compatible reverse reverse biopython installation convenient complement reverse version seqmagick sequence utility reverse complement biopython", "git_description_clean": "an imagemagick like frontend to biopython seqio", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/gplib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bash python posterior gp venv env random gaussian process exactgaussian plot python import random uniform python gplib gplib python default simple bash source install backend clone cd python venv block bash python tk desired gplib create user email config user function gplib docs sphinx apidoc o python virtualenv gplib import documentation gplib plot np activate virtualenv np random gp posterior venv install gplib block python setup gplib gplib gp install upgrade gaussian inference gplib download cd gplib solution simple update gplib package credential helper env source install sphinx covariance function sphinx apidoc config credential process regression gp gplib o gplib helper cache directory push default gplib matplotlib repository inference method regression setup likelihood function squaredexponential likelihood python posterior virtualenv env import gplib method gplib gp gp plot gp python python source env python library import numpy python script cd docs certain linux config push sphinx cd tk framework gp activate upgrade python gp", "pypi_keywords_clean": "gaussian process"}, "architecture-building-systems/esoreader": {"git_readme_keywords": "dataframe configured variable mapping tracker cumbersome backend technology ipython notebook variable zonezonehvac idealloadsairsystem building simulation pandas search columns project instance pandas interface support license interactive environment dictionary object python distribution output available version structure installation ipython session example switzerland institute energyplus introduction equipment common pattern output variable esoreader python default zonezonehvac architecture dictionary processing energyplus example contribute different parameter information pretty notebook interactive frequency variable incantation multiple columns", "git_description_clean": "a python module for reading eso files generated by energyplus", "git_keywords_clean": "", "pypi_description_keywords": "github information", "pypi_keywords_clean": "simulation parsing energyplus pandas"}, "MatthewScholefield/fitipy": {"git_readme_keywords": "python installation example filesystem installation interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GijsTimmers/cursor": {"git_readme_keywords": "alexander preferred packaging conjunction python statement customisable terminal beautiful terminal stackoverflow installation command alternative package manager python package kopkan packaging fedora installing ubuntu", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "cursor terminal hide show"}, "/gevent-dht": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value concern bizarre current distributedhashtable local result basic implementation return value print other following example network available first hash distributedhashtable network latency gevent address member import gevent", "pypi_keywords_clean": ""}, "/dependency-injection": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "devpi/devpi-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "freenode compatibility package location packaging conjunction towncrier release default message install documentation command changelog towncrier inherited quickstart additional specific password deletion version implement support", "pypi_keywords_clean": ""}, "JeremyCCHsu/pyworld": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software envelope synthesis frequency aperiodicity manipulation fundamental frequency", "pypi_keywords_clean": "vocoder"}, "MISP/pymisp": {"git_readme_keywords": "private stderr epydoc jupyter account abstraction supported automation section python envirenment instance pymisp python mispobject generator output available accessible pymisp various version pymisp tutorial documentation pymisp virtualenv mutable mapping property directory stderr documentation inherit automation python library search jupyter notebook repository everything abstractmisp object generator access interface correct available documentation python dictionary template amount module", "git_description_clean": "python library using the misp rest api", "git_keywords_clean": "misp api api client threat sharing threatintel", "pypi_description_keywords": "private stderr epydoc jupyter account abstraction supported automation section python envirenment instance pymisp python mispobject generator output available accessible pymisp various version pymisp tutorial documentation pymisp virtualenv mutable mapping property directory stderr documentation inherit automation python library search jupyter notebook repository everything abstractmisp object generator access interface correct available documentation python dictionary template amount module", "pypi_keywords_clean": ""}, "xgvargas/smartside": {"git_readme_keywords": "taskbar language locator console widget version sourcecode extension sourcecode desired folder development multiple connection sourcecode python product version support smartside available widget callback function creation usefull example python sourcecode application system qaction support context designer promote header source python taskbar translation promote qplaintextedit following mainwindow connect member language change history python script interface explicit access unique identifier designer compile company product related problem python console group", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "taskbar language locator console widget version sourcecode extension sourcecode desired folder development multiple connection sourcecode python product version support smartside available widget callback function creation usefull example python sourcecode application system qaction support context designer promote header source python taskbar translation promote qplaintextedit following mainwindow connect member language change history python script interface explicit access unique identifier designer compile company product related problem python console group", "pypi_keywords_clean": ""}, "dabeaz/curio": {"git_readme_keywords": "study manager block queue depth coverage library different thread external world question young project tested important disclaimer s overall application version monitoring complex example cannon nathaniel variety delegation machine process picture design robust environment simple answer overview return alexander zhukov connection various nothing forget associated context intuitive programming algorithm pygotham keynote thread interoperability critical operating lifetime progress interoperate provision sample nathaniel different compatibility group linux proper support compatibility keynote beazley syntax concurrent connection design philosophy python complex sequential process supported simple concurrent primary different manner project design complexity pyohio keynote collection thread programming course network additional design simplicity possible connection committed familiar cancellation something solution async framework comparable functionality important complicated number fluid successful connection explicit async cooperative multitasking discussion forum unicode whitespace rough benchmarking tricky standalone library experimental software control protocol common system operating system concurrent programming standard thread reliable introduction sandeep gupta classical approach lifestyle general design legacy python quick install improved support community endpoint similar functionality system programming concurrency mileage happy implementation solution instance standard function communication pleasant serious usability async programming traditional synchronous different approach full advantage github subject feature please flow control machinery fiddly various conference concurrent interesting normal async forum discussion additional support possible implementation condition simple example python brasil problem several concurrent official special thread magical mechanism isolation behavior result anything comprehensive something little asynchronous reason install simple successful combination documentation future available memory scheduling simultaneous building significant amount pragmatic generator python beazley dabeaz server esoteric standard asyncio considerable describes directory sticker dickinson sandeep application performance notable reliability kernel different interoperability example q discussion server portion programming language asyncio module context manager handling updated example improved python proper", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library concurrent", "pypi_keywords_clean": ""}, "/pbcore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package installation documentation", "pypi_keywords_clean": ""}, "klen/django-markdown-vinta": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib description django default tracker build status current default markdown markdown wysiwyg execute markdown description development template template preview protect license preview template previous markitup github django application following document staff available optional version github installation django klenov yavorskiy general public directory markdown editor copyright copyright package modeladmin public license installed iavorskyi license markitup markdown protect preview markdown browser access markdown installation installation installation template protect preview salvat markdown extension example markdown markdown preview django markdown", "pypi_keywords_clean": "html markdown django"}, "/python-monetdb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "monetdb python compatible deprecation source directory library execute query support install default tstdb sselect default tstpassword depend python dbapi optional cursor connection monetdb database python monetdb default tstusername localhost sql module control command username monetdb below dbapi compatible compliance kind tstpassword password connect hostname specific language copyright connection cursor command testdb schema id temporary tinyint auths software number commit action monetdb sql initial developer document updates please default tsthostname public license control password monetdb restructuredtext hostname localhost sql client receive introduction py install level connection monetdb server connect monetdb import directory python cursor increase original license version client python passphrase action smallint sql connect subject args cross platform environment smallint python source august monetdb warranty server server language sql description id monetdb password localhost database module import replacement cursor execute monetdb hostname copyright august behavior sql server python client monetdb public cursor connection documentation cursor description database system basis system boolean express server connect username default tstpassphrase tstusername username cursor fetchone cursor cursor performance optional cursor fetchall information increase performance native python import monetdb interactive example following command import statement", "pypi_keywords_clean": ""}, "/quaternion": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "agconti/django-unique-upload": {"git_readme_keywords": "django utility checking argument performance popular uploaded default devepment install upload django function django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "glasslion/django-qiniu-storage": {"git_readme_keywords": "bucket qiniu django bug accesskey qiniu secret key django x x python python django storage system sdk license app django django storage variable qiniu qiniu bucket mongodb django qiniu access documentation qiniu secret app app read system django url https qiniu storage python sdk key accesskey false false secret qiniu bucket domain django qiniu sdk python bug fix qiniu secure domain bucket fix python python travic django django secure url python python changelog python fix bug environment variable false https storage django access key key secret static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "build status django x x python python django storage system fix sdk license app django django storage mongodb django documentation app app system django status django qiniu storage python sdk storage build django qiniu sdk python azue mongodb fix python python travic django django python python changelog python storage js storage django", "pypi_keywords_clean": "qiniu django"}, "/virtualenvclone": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "testing logging example"}, "/pymarkov": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple pymarkov utility", "pypi_keywords_clean": ""}, "cmck/pybrowserstack-screenshots": {"git_readme_keywords": "browserstack username information submodule phantomcss example config config phantomcss support configuration screenshot browserstack complete browser phantomcss experimental access install pybrowserstack pybrowserstack experimental download wrapper account installation optional download baseline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "browserstack screenshots phantomcss"}, "joeflack4/flask-triangle-joeflack4": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask flask flask triangle bootstrap jsonschema jsonschema documentation security validation similar handling difference various documentation flask angularjs detailed", "pypi_keywords_clean": "flask angular jinja angular js flask triangle"}, "jbub/django-suit-locale": {"git_readme_keywords": "erhansiraci gonzalobustos repository localize project import export ernesto ulloa django reversion translation process support django installation champsavoir package support django python transifex django repository django import language locale request translate django localization process", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "erhansiraci gonzalobustos repository localize project import export ernesto ulloa django reversion translation process support django installation champsavoir package support django python transifex django repository django import language locale request translate django localization process", "pypi_keywords_clean": ""}, "/django-slack": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "what3words/what3words": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "whatwords geocoder"}, "regardscitoyens/lawfactory-utils": {"git_readme_keywords": "project national assembly directory lawfactory legifrance cleaning constit", "git_description_clean": "", "git_keywords_clean": "lafabriquedelaloi", "pypi_description_keywords": "project national assembly directory lawfactory legifrance cleaning constit", "pypi_keywords_clean": "scraping politics data"}, "formikejo/django-discovery": {"git_readme_keywords": "lookup capable message service discovery testing project license opinionated service documentation django application database following example specific workflow django machine everything production environment workflow entirety localhost external workflow development", "git_description_clean": "opinionated service discovery for django and docker", "git_keywords_clean": "", "pypi_description_keywords": "lookup capable message service discovery testing project license opinionated service documentation django application database following example specific workflow django machine everything production environment workflow entirety localhost external workflow development", "pypi_keywords_clean": "django service discovery docker docker compose"}, "justinstroup/python-common": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library helper", "pypi_keywords_clean": ""}, "Celc/jack-bower": {"git_readme_keywords": "stable release project frontend django language commit install github block python block block javascript installation normal following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stable release project frontend django language commit install github block python block block javascript installation normal following", "pypi_keywords_clean": "django app reusable bower frontend"}, "flyingrub/scdl": {"git_readme_keywords": "profile download script gentoo optional album artwork system downloader description authentication soundcloud playlist license access soundcloud flyingrub playlist download compatible installation mutagen original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "readme", "pypi_keywords_clean": ""}, "biesnecker/hachiko": {"git_readme_keywords": "hachiko watchdog aioeventhandler watchdog object", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible watchdog", "pypi_keywords_clean": ""}, "/bob-db-asvspoof": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "genuine speech installation complete speaker verification software learning toolbox processing asvspoof genuine significant channel development install database interface background evaluation summary asvspoof database verification spoofing different spoofing automatic speaker", "pypi_keywords_clean": ""}, "csirtgadgets/csirtg-dnsdb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software development", "pypi_keywords_clean": "security"}, "django-parler/django-categories-i18n": {"git_readme_keywords": "package django application flexible simple anything virtual environment welcome installation", "git_description_clean": "translatable categories model", "git_keywords_clean": "django django models translations categories", "pypi_description_keywords": "package django application flexible simple anything virtual environment welcome installation", "pypi_keywords_clean": ""}, "coleifer/flask-peewee": {"git_readme_keywords": "package installing recommend recommend installing restful interface library authentication functionality project peewee navigate support m sorry integration virtualenv started example number framework decision interface authentication following script maintenance interface example directory superior twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "greyli/flask-ckeditor": {"git_readme_keywords": "ckeditor integration project license documentation highlight ckeditor ckeditor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "copyright withlihui ckeditor author license", "pypi_keywords_clean": ""}, "gears/gears-coffeescript": {"git_readme_keywords": "package coffeescript coffeescript django project coffeescript version installation install version installation coffeescript compiler", "git_description_clean": "coffeescript compiler for gears", "git_keywords_clean": "", "pypi_description_keywords": "package coffeescript coffeescript django project coffeescript version installation install version installation coffeescript compiler", "pypi_keywords_clean": ""}, "/xstatic-angular-mock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project javascript library xstatic packaging install xstatic angular minimal support", "pypi_keywords_clean": "angular mock xstatic"}, "/blinker-alt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "blinker mapping global receiver compatibility february program behavior receiver ephemeral project website original support identity october summary october interested changelog summary global important regular blinker weaknamespace optional speedup bookkeeping cleanup additional bookkeeping surprising program manager alternate hashing hashing strategy dictionary information blinker blinker activity disconnect shorthand blinker namespace specific speedup verified blinker documentation decorator receive baseline", "pypi_keywords_clean": "signal emit events broadcast"}, "/chainer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dynamic computational interpreter inference community invitation machine learning official external chainer reference workshop support separate install automatic differentiation framework website chainermn scalable support contribution version installation research performance training tutorial generation chainer computational graphs install chainer environment chainerx license learning framework bibtex flexibility approach welcome clayton chainer conference fukuda request information release following command external chainerx suzuki chainermn twitter", "pypi_keywords_clean": ""}, "geertj/gruvi": {"git_readme_keywords": "asyncio gevent simple async sequential control traditional sequential break stream gruvi async libuv suitable development install license contact comparison stream transport gevent eventlet asynchronous geertj library standard library sequential programming readthedocs license compatible transport license gruvi distinction mobile author similar synchronization server gruvi completion callback rationale memory protocol interface interface traditional eventlet available library gruvi import gruvi transport protocol manual documentation eventlet rationale normal installation readthedocs following desirable libuv completion excellent platform python regular stdlib example virtualenv software server support memory usage readthedocs github streamserver installation handler server streamserver import gruvi streamserver client server libuv linux platform support handler stream concurrent powerful common high performance following operating improved installation section github libuv rationale asynchronous simple sequential python standard installation development concept underlying high", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "stephenmcd/django-socketio": {"git_readme_keywords": "sender shortcut gevent pywsgi way handful multiple socket instance appropriate connected separate osx required other message argument process manager cycle debian different message version much variety admin dashboard id accessible session id various message broadcast expression pattern example suppose relevant request support method regardless source websocket session hello world unsubscribed pywsgi server channel argument gevent websocket urlconf project django django socketio functional libevent development python development regular expression installation example common requirement likely socket broadcast current django channel unsubscribed work javascript installation alternative socket broadcast system method socket django setting decorator management command broadcasting django session support socket pypi xcode response receiver form channel subscription extra argument similar development library production templatetag application reference django app introduction django particular distinct websocket socket shortcut setting django underway dictionary introductory individual approach socketio django broadcast channel module startup following setting package thread single websocket websocket connection logic connection occurs possible eg consider new message channel server subscribes available info introduction first basis exception connected python handler connected socket remaning directory request websocket similar function channel client following different django project precedence apps client socket following command gevent socktio", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sender shortcut gevent pywsgi way handful multiple socket instance appropriate connected separate osx required other message argument process manager cycle debian different message version much variety admin dashboard id accessible session id various message broadcast expression pattern example suppose relevant request support method regardless source websocket session hello world unsubscribed pywsgi server channel argument gevent websocket urlconf project django django socketio functional libevent development python development regular expression installation example common requirement likely socket broadcast current django channel unsubscribed work javascript installation alternative socket broadcast system method socket django setting decorator management command broadcasting django session support socket pypi xcode response receiver form channel subscription extra argument similar development library production templatetag application reference django app introduction django particular distinct websocket socket shortcut setting django underway dictionary introductory individual approach socketio django broadcast channel module startup following setting package thread single websocket websocket connection logic connection occurs possible eg consider new message channel server subscribes available info introduction first basis exception connected python handler connected socket remaning directory request websocket similar function channel client following different django project precedence apps client socket following command gevent socktio", "pypi_keywords_clean": ""}, "googleapis/gapic-google-cloud-language-v1beta2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "authentication install googleapis isolated python installed system authentication language vbeta repository install natural language indirectly block console access client library problem system install google library possible", "pypi_keywords_clean": ""}, "linkyndy/remodel": {"git_readme_keywords": "document schema enforced reverse extensible development convention schemaless interface support familiar interface license configuration documentation belongs remodel existence loading installation production rethinkdb everything relation loading important custom precise definition various remodel powerful definition motivation appreciated document mapper contribution custom instance relationship", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "rethinkdb powerful extensible", "pypi_keywords_clean": ""}, "wheeler-microfluidics/open-drop": {"git_readme_keywords": "frequency validation query number arduino firmware compatible python class interactive session command upload example interactive author copyright method other package ready distribution class ic model argument arduino firmware usage example copyright christian firmware sketch installable python voltage session connect available serial connection channel query board multiple serial number fobel christian overview session query updated functionality device memory negative control package directory arduino device ic proxy voltage frequency eeprom example usage upload firmware remote procedure christian fobel device proxy other channel default configuration serial connection query query descriptive array configuration serial device array allowable python package following command frequency voltage opendrop digital firmware development", "git_description_clean": "control package for opendrop digital microfluidics platform", "git_keywords_clean": "", "pypi_description_keywords": "frequency validation query number arduino firmware compatible python class interactive session command upload example interactive author copyright method other package ready distribution class ic model argument arduino firmware usage example copyright christian firmware sketch installable python voltage session connect available serial connection channel query board multiple serial number fobel christian overview session query updated functionality device memory negative control package directory arduino device ic proxy voltage frequency eeprom example usage upload firmware remote procedure christian fobel device proxy other channel default configuration serial connection query query descriptive array configuration serial device array allowable python package following command frequency voltage opendrop digital firmware development", "pypi_keywords_clean": ""}, "czepluch/c-secp256k1": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generate installable dependenceis generate bitcoin install recover ubuntu installation verify library install package package development", "pypi_keywords_clean": ""}, "jbochi/cep": {"git_readme_keywords": "fazer pesquisa license instalao biblioteca pblica documentao hospedar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fazer pesquisa license criar setup hospedar biblioteca pblica documentao criar", "pypi_keywords_clean": ""}, "paul-wolf/stringgenerator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "password password progress counter concatenation string package probability digit useful sensible standard plenty world required much simpler special character entropy mechanism callback function variation installation character occurance r detail literal specific implementation specific shell domain original author compact flexible character class maximum number bound strong password construct implied minimal module version parameter complex fixed length example special previous example randomized textual address method progress render method whitespace uppercase member design length syntax progress indicator generation unicode added python character required number leblanc render length example hyphen implementation design collection license standard solution database string group version quantifier shell command printable whitespace difference default x dependent randomisation solution equivalent important number complicated quantifier y keyword argument likely counter original string generation template syntax python developer dump method anyone familiar wolf yewleaf simplistic multiple character modest installation install group specification appropriate output character punctuation printable punctuation ascii purpose strgen module minimal effort function generator persistent unique stringgenerator pypi pattern random string class much variable substitution specification template shuffle operator exotic string example information version typical requirement shortcut associated behaviour implementation language syntax support alphabetic python randomness instance whitespace punctuation present similar operand feature regular common callable stringgenerator right balance foregoing sequence string interpretation example uniqueness useful information underscore shorthand square snippet example template amount strgen build example character module binary operator result string verbose special abstract template spurious unique build status indicator suitable result current progress requested length quantifier strgen package possible python string backslashed character template language choose available bsd license group group operator generator exception associated following rationale callable something example group curly unicode unicode right following guarantee backslash character encryption chance shuffle following literal domain class class instance character sequence shell script literal string group combination simple invocation", "pypi_keywords_clean": ""}, "/mcstatus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "CityOfZion/neocore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initialization divisor operation release checklist module updated useful console useful scrypt library bugfix block console testing support logical unused argument console history logzero dependency documentation travis deploy database floordiv crypto verifysignature version compatible github redundant function biginteger divisor binarywriter python history updated utility module formatting virtual environment repository crypto signature console release unhexlify verifysignature optional python virtual", "pypi_keywords_clean": "neocore neo python node"}, "waynr/access": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python software documentation cookiecutter history cookiecutter project template available python control coverage template cookiecutter", "pypi_keywords_clean": "access"}, "/pyxml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python api version", "pypi_keywords_clean": ""}, "/tkreadonly": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cricket scheme tkinter install environment variable virtualenv helpful builtin appropriate ubuntu ubuntu deletion insertion extension selection ubuntu packaging virtual environment library normal readonlytext example", "pypi_keywords_clean": ""}, "stochastic-technologies/django-loginas": {"git_readme_keywords": "default implementation setting behavior original context processor navigate license screen switch message staff privilege escalation version python software session custom access variable right button permission different redirect django loginas template contexts template example template superuser special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default implementation setting behavior original context processor navigate license screen switch message staff privilege escalation version python software session custom access variable right button permission different redirect django loginas template contexts template example template superuser special", "pypi_keywords_clean": "django"}, "chriskuehl/identify": {"git_readme_keywords": "whitespace return design interpreter identification library extension copyright choosealicense distance return value closest actual license other install possible superset executable python ruby directory return routine binary spdx function information information possible approach standardized appropriate filename shebang", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "whitespace return design interpreter identification library extension copyright choosealicense distance return value closest actual license other install possible superset executable python ruby directory return routine binary spdx function information information possible approach standardized appropriate filename shebang", "pypi_keywords_clean": ""}, "/django-jux": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generic behavior attempt runner builtin elementtree success failure targeted abstraction project motivator install django output django specific python introduction django inspiration something notable individual django project available unittest plugin installation install module", "pypi_keywords_clean": ""}, "texastribune/tx-lege-districts": {"git_readme_keywords": "hookup legislative namespace property database configurable backend template environment representative configure", "git_description_clean": "a reusable django app for working with texas legislative districts", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/exporters-bloom-filter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "hisie/django-extended-flatpages": {"git_readme_keywords": "fontsize maximize underline numberedlist bulletedlist blockquote creatediv justifyright justifyblock horizontalrule specialchar ckeditor subscript superscript flatpagefallbackmiddleware configure address template creatediv justifyleft justifyleft justifycenter configure ckeditor pastetext pastefromword textcolor justifycenter justifyright selectall", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fontsize maximize underline numberedlist bulletedlist blockquote creatediv justifyright justifyblock horizontalrule specialchar middleware flatpagefallbackmiddleware flatpagefallbackmiddleware configure subscript superscript middleware template creatediv justifyleft justifyleft justifycenter configure ckeditor pastetext pastefromword textcolor justifycenter justifyright selectall", "pypi_keywords_clean": ""}, "/sanpera": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "uuazed/numerapi": {"git_readme_keywords": "download competition library detailed submission command available importable python installation python reference training custom environment uploading numerapi information regular importable require interface problem example command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download competition library detailed submission command available importable python installation python reference training custom environment uploading numerapi information regular importable require interface problem example command", "pypi_keywords_clean": ""}, "/sveeaccounts": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction django contrib password change django crispy generic default captcha django implementation backend optionnal install foundation column login django simple helper abstract model uidb optionnal password userprofile registration stuff version python application translation catalog version support optionnal profile webapp django django django registration installed following uidb support french translation simple captcha template sample", "pypi_keywords_clean": ""}, "jkbrzt/django-settings-export": {"git_readme_keywords": "licence mechanism jakub roztocil python django unexported setting variable useful development context processor instance implicit travis coverage accessing unexported accessible undefined roztocil travis version travis example subclass exception undefined setting template context branch version status something django project context variable plugin template contexts object template source accessing django installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence mechanism jakub roztocil python django unexported setting variable useful development context processor instance implicit travis coverage accessing unexported accessible undefined roztocil travis version travis example subclass exception undefined setting template context branch version status something django project context variable plugin template contexts object template source accessing django installation", "pypi_keywords_clean": ""}, "/atpublic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation simple decorator function c implementation", "pypi_keywords_clean": ""}, "/ircutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "framework support documentation protocol anything", "pypi_keywords_clean": ""}, "jonbretman/jinja-to-js": {"git_readme_keywords": "example first javascript result import mechanism template inheritance extension html useful jinja supported current template js javascript docs logic js child jinja jinja implementation docs loop js package available docs template javascript runtime relative respect version jinja library supported loop parent jinja django python javascript module server docs jinja docs supported respective import jinja child output module common beginning directory jinja template src js function template javascript jinja docs templating language javascript example small option logic jinja output javasscript amd commonjs inheritance jinja following literal few names jinja compile therefore python jinja browser javasscript function javascript function docs docs template method ideal function module own custom names js below", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "jinja html javascript templating"}, "xeroc/steem-piston": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "repository obsolete future", "pypi_keywords_clean": "steem"}, "eldarion/user-messages": {"git_readme_keywords": "message access pk delete template matrix delete specific python django release history thread pk recommend class context processor html argument django web single reusable django cbvs various blog license template add app following context history contribute awesome class party app project reference description fix reference pinax documentation markup update manifest v support conduct connect everyone default ecosystem private account guidance documentation installation project urlpatterns contribute section argument correct template threaded messaging collection course database compatible example django statement number success python documentation update documentation django apps message template bootstrap pinax pinax slack button delete message filter add add documentation add harassment work issue kind inclusive message inbox template filter project subdirectory interest community django python response desired fix thread pinax overview reference guide instance concrete contribution cleanup initial wherever message theme bootstrap generic cbvs add template github coverage project blog access inbox eldarion contribute please python support template context contributing update web framework respond thread delete object template unread message inbox message initial release project please section starter project django compatibility unread thread snippet wherever specific message current django generic py inbox rd party inclusion add django twitter pinaxproject valid pinax project pinax theme included video human programmer documentation convert pinax license available django v drop django readme convert license copyright python config update modifying source platform following bootstrap filter pinax pinax private threaded template message thread blog support add", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application installed hook messaging installed django", "pypi_keywords_clean": ""}, "ssut/py-googletrans": {"git_readme_keywords": "package reliable sentence license travis multiple disclaimer unlimited python github license xx project climate version coverage single command google translate maximum character travis status advantage subject feature translate compatible application python support stability important commit session translate google y encouraged branch status documentation release request license coverage status connection translation python library welcome unofficial library address request method incompatible everyone language detection customizable service documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python google translate", "pypi_keywords_clean": ""}, "tipsi/aiozk": {"git_readme_keywords": "reconfiguration timeout asyncio zookeeper approach ability cluster meaningful similar something integration connection familiar zoonado implementation installation example reconnecting", "git_description_clean": "asyncio client for zookeeper", "git_keywords_clean": "asyncio zookeeper", "pypi_description_keywords": "reconfiguration timeout asyncio zookeeper approach ability cluster meaningful similar something integration connection familiar zoonado implementation installation example reconnecting", "pypi_keywords_clean": "zookeeper"}, "gera2ld/qqlib": {"git_readme_keywords": "qzone qqlib", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python library", "pypi_keywords_clean": "qq"}, "/pymod2pkg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python openstack common problem information packaging software tracker discussion packaging initiative channel pymodpkg appropriate unfortunate system vendor tracker available repository mailing", "pypi_keywords_clean": ""}, "jonhadfield/python-hosts": {"git_readme_keywords": "python install python license python library documentation client docs example usage installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "manager library", "pypi_keywords_clean": "hosts python network"}, "algorithmiaio/algorithmia": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python algorithms algorithmia python library python code", "pypi_keywords_clean": ""}, "ludia/pyramid-health": {"git_readme_keywords": "maintenance touch github droneio request param health check pyramid project myapp healthcheck default import subscriber healthcheck endpoint application check mechanism backend healthcheckevent subscriber response status operation import healthcheckevent execute specific g optional message logs health healthcheck subscriber healthcheckevent configurator config traffic health setup subscribe droneio droneio myapp pyramid block python healthcheck disablefile config configurator check event virtualenv application logs application health endpoint health configuration status http client report event execute return unavailable install pyramid project configuration endpoint response db status health import health simple maintenance specific health installation install healthcheck maintenance outcome defaults simple healthcheck request pyramid health event report healthcheck failure db check error python config healthy pyramid", "git_description_clean": "simple healthcheck endpoint for pyramid with maintenance mode and application checks", "git_keywords_clean": "", "pypi_description_keywords": "maintenance touch request param health check pyramid project myapp healthcheck default import subscriber healthcheck endpoint application check mechanism backend healthcheckevent subscriber response status operation import healthcheckevent execute specific g optional message logs health healthcheck subscriber healthcheckevent configurator config traffic health setup subscribe droneio droneio myapp pyramid block python healthcheck disablefile config configurator bitbucket droneio check event virtualenv application logs application health endpoint health configuration status http client report event execute return unavailable install pyramid project configuration endpoint response db status health import health simple maintenance specific health installation install healthcheck maintenance outcome defaults simple healthcheck request pyramid health event report healthcheck failure db check error python config healthy pyramid", "pypi_keywords_clean": ""}, "/outlawg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application outlawg description grandmother customization component", "pypi_keywords_clean": "logging test"}, "Robpol86/sphinxcontrib-versioning": {"git_readme_keywords": "sphinxcontrib project initial release sphinx extension status documentation version quickstart release changelog changelog quickstart install coverage status building", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sphinxcontrib project initial release sphinx extension status documentation version quickstart release changelog changelog quickstart install coverage status building", "pypi_keywords_clean": "sphinx versioning versions version branches tags"}, "jaraco/jaraco-windows": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute application project additional optional different install interface symlink compatibility directory request several exhaustive optional parameter", "pypi_keywords_clean": ""}, "/pygments": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package generic license quality command copyright copyright library copyright amount support special attention hosting highlighter suitable", "pypi_keywords_clean": "syntax highlighting"}, "/flask-inputs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute documentation documentation support validation available extension repository installation coverage", "pypi_keywords_clean": "flask validation wtforms"}, "kvh/recurrent": {"git_readme_keywords": "thursday november library tickle tuesday tomorrow parsedatetime library recurrence python dateutil similar english centric version dateutil rrulestr recurrent recurrent parsedatetime functionality joshua lippiner calendar meeting language parsing tuesday compliant python library welcome science natural language squaredloss", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "calendar recurring date event nlp"}, "plivo/sharq": {"git_readme_keywords": "server installation overall enqueue length enqueue request package install fly configuration sample library development expiry sharq sharq interval specific enqueue building package available initialization enqueue install uninstall install sharq successful dequeue flexible system release sharq server respective following config requeue enqueue dequeue job ms uninstall license sharq config dequeued job capability installation install inverse ms interval particual socket source finish second dequeue sample sharq", "git_description_clean": "the core sharq library that powers sharq server", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation platform unknown copyright software development merchantability documentation unknown classifier production audience software express substantial software description particular connection liability following contract permission distribute sublicense language classifier development warranty restriction independent classifier", "pypi_keywords_clean": ""}, "bcwaldon/warlock": {"git_readme_keywords": "python document available warlock validate installation warlock schema installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python document available warlock validate installation warlock schema installation", "pypi_keywords_clean": "json schema json patch model validation"}, "/xlutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package following question information fashion framework license collection install documentation splitting available display utility copyright simplistix related useful workbook installation virtualenv", "pypi_keywords_clean": "excel xls xlrd xlwt"}, "mathisonian/python-yelp-v2": {"git_readme_keywords": "location triplec license copyright matthew available mathisonian wrapper matthew business structure library installation internal license copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "yelp api"}, "/dataserv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "transfer default simple issueslink buildlink example advertise registration registration untrusted coveragelink licenselink farmer ubuntu dataserv buildlink advertise height capacity install database much success example scheme success federated server height farmer success number authentication unique address status readable machine readable generation scheme licenselink issueslink advertised example address buildlink coveragelink rudimentary amount offline", "pypi_keywords_clean": ""}, "fastgenomics/fastgenomics": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interpreted standard rendering following function optional constructor example interaction application dependency necessary app functionality directory structure arbitrary necessary summary app consistency convenience relevant access template separate submodule optional parameter", "pypi_keywords_clean": ""}, "wickman/pystachio": {"git_readme_keywords": "unrelated expectation indentation effect equality night templating library useful multiple container composable jsirois wfarner complicated version pystachio process resolution identical keyword arbitrary nebraska namespace compatible deserialization mechanism dr pystachio bound hierarchical bound variable complex portable book python interpreter hashable default syntax falsy variable interpreter notable obvious serialization additional variable primary construction wickman project notable related functional checked dictionary structure example django defunct javascript number keyword argument likely system unicode function language namespace composite python dictionary appropriate effort picture notation behave reified serializable immutable destination nebraskan templating templating specific configuration constructor javascript python priority global context particular straight python reasonable environment struct francisco consistency factory jenny powerful constructed lookup shorthand example schema section amount certain behave ok serialized floaty original design checking serialization mechanism briefly possible schemas checking interpolation interpreter equivalence cpython mustache future constructive enumeration optional demand clarity object inheritance exception python standard coercion pypy templating simple mustache template metaclass priority illustrative memoization ability precedence templating similar object template gotchas serialize constructed dictionary templating miniature previous section", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/geneimpacts": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different variant polyphen transcript comparison serverity medium multiple functools modifier general utility consistent interface orderable python gemini consequence pseudogene annotation variant severity severity severity access classmethod", "pypi_keywords_clean": ""}, "iot-lab/iotlabcli": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documented basic default travis codecov build status status codecov command bug account pylint deprecate variable iotlab distribution attached documentation remove parser mobility execution management license software licence package status validation check installable python command website additional validation prepare integration further documentation codecov coverage available command travis build version py installation readme internal allow restricting internal status server internal python dependency python support status changelog experiment g description status travis relevant python allow providing cleanup profile unicode update summary coverage status selection priority cecill restricting output remove support following request exception remove alternate script unicode management external upload parameter update firmware access update profile httperror python package module submit query runtimeerror custom pylint dependency", "pypi_keywords_clean": ""}, "/pastedeploy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tarball wheel configuration available version", "pypi_keywords_clean": "web wsgi application server"}, "ibis-project/ibis-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "productivity centric framework", "pypi_keywords_clean": ""}, "/cobe": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "random markov general stability response release history business support conversation simulator documentation install similar database candidate python success unicode megahal original megahal tarball python algorithm console relevant python package module", "pypi_keywords_clean": ""}, "lanpa/tensorboard-pytorch": {"git_readme_keywords": "tensorboardx reference install tensorflow support pytorch install pytorch torchvision anaconda anaconda history tensorboard torchvision tensorboard function requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python reference support histogram documentation tensorflow dependency incorrect available history summary function", "pypi_keywords_clean": ""}, "speedy1991/flask-fileupload": {"git_readme_keywords": "bucket optional storage storage permission private public fileupload install configuration available template something extension default storage control public", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "upload fileupload extension management", "pypi_keywords_clean": ""}, "revolution1/flask-whooshalchemyplus": {"git_readme_keywords": "attribute searchable fuzzy tracking default method refactory defualt extension disable whooshalchemyplus alternative likely instance custom queryclass grouping install whoosh matching indexed feature example subclass application content python support session functionality ordinary orderby directory particular environment option searchable feature sensitive indexable disable whoosh conjunction welcome parameter object context manager quickstart runtime whooshalchemyplus relevance manager feature chinese analyzer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "attribute searchable fuzzy tracking default method refactory defualt extension disable whooshalchemyplus alternative likely instance custom queryclass grouping install whoosh matching indexed feature example subclass application content session functionality ordinary orderby directory particular environment option searchable feature python supprot indexable disable whoosh conjunction welcome parameter object context manager quickstart runtime whooshalchemyplus relevance manager feature chinese analyzer", "pypi_keywords_clean": ""}, "/elflib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "independent executable library development limited functionality", "pypi_keywords_clean": ""}, "deliveryhero/lymph": {"git_readme_keywords": "reliable zookeeper opinionated framework dependency commandline messagepack management configuration rabbitmq documentation request discovery pluggable readthedocs installation", "git_description_clean": "framework for python services", "git_keywords_clean": "", "pypi_description_keywords": "reliable zookeeper opinionated framework dependency commandline messagepack management configuration rabbitmq documentation request discovery pluggable readthedocs installation", "pypi_keywords_clean": ""}, "mishbahr/djangocms-youtube": {"git_readme_keywords": "align center width px resolution thumbnail djangocms twitter player width javascript center djangocms django python install djangocms quickstart install djangocms youtube full support generate sitemap sitemap generate block schema videos width integration full manage py child mobile other overlay website full youtube markup djangocms instagram py migrate version djangocms responsive migrate plugin django key sitemap configuration python manage thumbnail available functionality sync database djangocms disqus standard iframe player custom much extra endscreen width px align instagram djangocms disqus djangocms thumbnail button extra weight center plugin configuration import plugin load simple example apps sync license youtube visitor standard youtube google embedded youtube youtube videos", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "align center width px resolution thumbnail djangocms twitter player width javascript center djangocms django python install djangocms quickstart install djangocms youtube full support generate sitemap sitemap generate block schema videos width integration full manage py child mobile other overlay website full youtube markup djangocms instagram py migrate version djangocms responsive migrate plugin django key sitemap configuration python manage thumbnail available functionality sync database djangocms disqus standard iframe player custom much extra endscreen width px align instagram djangocms disqus djangocms thumbnail button extra weight center plugin configuration import plugin load simple example apps sync license youtube visitor standard youtube google embedded youtube youtube videos", "pypi_keywords_clean": "djangocms youtube"}, "/hcluster": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "efficiency hierarchical implementation interface toolbox", "pypi_keywords_clean": "dendrogram linkage cluster agglomorative hierarchical hierarchy ward distance"}, "kiip/pybloomd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "location pybloom similar install download example latency install pipelining multiple library discovery creation", "pypi_keywords_clean": "bloom filter client bloomd"}, "stephrdev/django-tapeforms": {"git_readme_keywords": "addition django basicly django template interpreter example project coverage status version development documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition django basicly django template interpreter example project coverage status version development documentation status", "pypi_keywords_clean": "django forms"}, "Miserlou/pyglance": {"git_readme_keywords": "project registration specification pyglance timing library programmatic welcome installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project registration specification pyglance timing library programmatic welcome installation", "pypi_keywords_clean": ""}, "/pyttk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/render": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/mod-wsgi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wsgi configuration apache module latter case selinux profile macos apache source directory use python able set addition apache executable container ubuntu linux script installed other required other apache wsgi express system python protection sip first way first set further information name note debian apache installed much wsgi module many linux django static software foundation order party apache apache lounge need system integrity server root default location www apachelounge necessary wsgi compliant unix type option virtual environment nothing prefork apache cmmi method standard apache apache file python web official release app store httpd httpd cmmi installation wsgi documentation additional apache method web recent macos detailed later module configuration easy workaround xcode command apache software group wide python python virtual error log many software original executable macos due default package index first thing output something worker mpm special user past configure selinux need httpd wsgi script django application site wide integrity protection macos sierra standard location simple wsgi main apache prefork mpm example third party same configuration django macos x installation method apache system other special standalone instance alternative use apache current directory apache prefork type system complete list non standard wsgi note primary intention resulting package wsgi package python command static file start rhel centos traditional way auto necessary apache work system apache system init installation directory operating system startup apache wsgi source complete python apache apache apache mpm management command server installation apache distribution com other manual configuration root user apache mod worker apache process supervisor don match foundation layout apache header development package directory first fine apache configuration server use case configuration similar python installation apache script access don sip system specific wsgi copy command line fedora use ctrl tool root directory scenario apache worker port particular script file mpm prefork same way separate start corresponding development documentation non match top macos app real location selinux privileged port python library full documentation approach browser second way foreground source code task history problem python package certain non privileged application note directive release direct standard port apache web prefork dev supported way result apache server acronym cmmi tendency later mechanism library scl possible python module web application apache dev new set successful combination terminal easy user account httpd devel configure apache different process development environment use forward macos python turn lounge www original binary port such linux distribution time independent mod wsgi directory something apachelounge com apache installation apache instance application installation complete apache sierra apple sip feature xcode application installed following point admin script main mod http use mod ability directory path environment variable installed apps use version wsgi application runtime shell script compliant interface web server mpm worker startup script macos version", "pypi_keywords_clean": "mod wsgi wsgi apache"}, "jantman/pypi-download-stats": {"git_readme_keywords": "major night project concern master branch distribution development system account awslimitchecker project command support status google cloud target introduction stable usable functionality warehouse service february virtual environment github upload codebase desktop desire enable download service granularity analysis release checklist weekend project imagine simpler alternative legacy background understandable additional readme example august january installation method beginning repository pypirc project status target detailed historical request confirm purpose moment cronjob message sphinx documentation hosting current warehouse successful travis historical graphs configuration github feature coverage reference environment virtualenv current download myname release young following script specific commit online travis access specific replacement official schedule project member upload package extension evening weekend bandwidth available online project release actual recommended method check legacy codebase hosting bucket warehouse output recommended installation change graphs somewhere simple download python github confirm version number package version status active codebase download priority weight solution google bigquery information welcome pretty correct upload block query refactor offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "night project coverage report concern master branch distribution development system account awslimitchecker project command support status target introduction health stable usable functionality warehouse service february virtual environment github upload codebase desktop enable download service granularity analysis release checklist weekend project imagine legacy background understandable additional readme example august january installation method beginning repository pypirc project status target request confirm purpose moment cronjob message sphinx documentation hosting current warehouse successful travis configuration github feature reference environment virtualenv current download myname release young following script specific commit online travis access specific replacement official package schedule project member upload package extension evening weekend historical bandwidth available online project release actual recommended method check legacy codebase hosting bucket warehouse output recommended installation change graphs somewhere simple download python github confirm version number status active codebase download priority google bigquery information welcome pretty correct upload block query refactor offline", "pypi_keywords_clean": "pypi warehouse download stats badge"}, "jflesch/pyinsane": {"git_readme_keywords": "scanner macosx beware default constraint handheld simple backend implementation pyinsane description acquisition corrupted possible building python libsane pyinsane paperwork obvious abstraction possible folder deskjet series detailed preview visual studio successful hp officejet documentation instance contact python visual practice document feeder wiaitem available description python flatbed automatic theory property specific tracker application example multiple installation specific driver officejet flatbed scanimage jerome flesch platform specific libsane reference dedicated process update property behavior consistent automatic document winddk unknown common uninitialized memory comment following environment pyinsane please wdk complete example following nothing source flatbed xextent yextent information consistent instance python microsoft python library complex series flatbed scanner detection paperwork access driver program temporary directory source module flesch jflesch current setup possible source hp deskjet linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thread implementation abstraction", "pypi_keywords_clean": "sane scanner"}, "avinassh/python-status": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package response status understandable status project license understandable readability integer variable much available status django example library wherever framework status helpful directory custom python meaningful variable python library submodule", "pypi_keywords_clean": ""}, "/pymount": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "programmatic api", "pypi_keywords_clean": "pymount mount umount partition"}, "Axilent/sharrock-client": {"git_readme_keywords": "sharrock client", "git_description_clean": "just the client code for sharrock less dependencies", "git_keywords_clean": "", "pypi_description_keywords": "sharrock client", "pypi_keywords_clean": ""}, "/python-recsys": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "allisson/simple-rest-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python simple build status travisci build quality status coverage website shell documentation coverage status climate simple status scrutinizer", "pypi_keywords_clean": "rest client http asyncio"}, "mankyd/jinjatag": {"git_readme_keywords": "argument license jinjatag output available template further documentation library inclined", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "argument license inclined further output available template further documentation library", "pypi_keywords_clean": ""}, "dfm/corner": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "corner", "pypi_keywords_clean": ""}, "SparkPost/sparkpost": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "underlying library width px message python sparkpost simple underlying build status pypi backend actual project contribute check reference contribute fresh developer section check sparkpost account block python google cloud github feature content django integration sparkpost python slack community branch necessary coverage status official python following configuration documentation documentation friendly sparkpost sparkpost python library sparkpost class environment variable discussion installation install client request python package cloud documentation block documentation status", "pypi_keywords_clean": ""}, "vvangelovski/django-lamson": {"git_readme_keywords": "application project deployment server ability management example project installation example project folder sourcecode purpose distribution multiple configuration installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application project deployment server ability management example project installation example project folder sourcecode purpose distribution multiple configuration installed", "pypi_keywords_clean": ""}, "Robpol86/etaprogress": {"git_readme_keywords": "percent undefined progress default build status string library baseprogressbar class pypy pypy utility undefined changelog project support denominator terminal install course similar application progress previous available different progress linear regression version progressbar example display simple progress number visual terminal class colorful progress cranny unknown return description etaprogress python pypy coverage status instance simple animation xp initial release console technical preview width calculate iteration default integer added initial centos progress source terminal width module simple linear numerator linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "percent undefined progress simple build status library baseprogressbar undefined changelog denominator previous install similar version progressbar example display python colorful progress cranny unknown return description etaprogress coverage status instance simple support initial xp initial release console technical preview integer progress regression source module numerator linux", "pypi_keywords_clean": "eta progress bar"}, "/django-permissionsx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-councilmatic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "databse export command datamade search copyright participatory python style zanten datamade original standard scratch councilmatic councilmatic project datamade django style deploy legistar product copyright interested feature conversation everything person organization functionality django councilmatic custom description copyright copyright general foundation search important predecessor mjumbe feature addition contribution request council perfect think gregg datamade", "pypi_keywords_clean": ""}, "/ironic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "additional functionality project standalone information hypervisor security default tolerant specific release repository physical storyboard license version", "pypi_keywords_clean": ""}, "pytroll/pyorbital": {"git_readme_keywords": "package pyorbital diverse astronomical", "git_description_clean": "orbital and astronomy computations in python", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "skylander86/ycsettings": {"git_readme_keywords": "configuration searching environment utility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "configuration searching environment utility", "pypi_keywords_clean": "ycsettings"}, "coddingtonbear/environmental-override": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/google-cloud-bigquery-datatransfer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python transfer platform project partner setup authentication documentation product available installation datatransferserviceclient documentation quick bigquery product documentation following library documentation authentication installation", "pypi_keywords_clean": ""}, "/itools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package implied warranty tracker mcmullen fabrice useful library xmlfile development merchantability deployment fabrice decroix versmisse license install documentation database romanczyk guillaume wynand winterbach version bambouch gettext fitness software foundation software sbastien yannick inspect workflow sylvain taverne general warranty quality program matthieu igettext extract particular purpose cauwelier igettext gauthier guillaume wynand", "pypi_keywords_clean": ""}, "angvp/django-changuito": {"git_readme_keywords": "thankful simple complete woudenberg python django django python forked stuff previous developer django content available change spirit version installation production public example everything please framework introduction django status session changuito introduction officialy original project installed carvalho django changuito garcia directive continued", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "python-parsy/parsy": {"git_readme_keywords": "python project combinator library monadic infinity awesome python complex status codecov history documentation anything request section github documentation status", "git_description_clean": "easy parser combinators for python", "git_keywords_clean": "", "pypi_description_keywords": "python combinator library infinity complex monadic parser documentation history documentation anything request parser combinator section codecov github", "pypi_keywords_clean": "parser parsers parsing monad combinators"}, "/cozmo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "technical official developer experience combination enterprise education flexible platform conjunction documentation official developer advanced entertainment university expressive sophisticated research innovative", "pypi_keywords_clean": "anki cozmo robot robotics sdk"}, "mahmoudimus/nose-setenv": {"git_readme_keywords": "setup install install development development setup install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "usage env", "pypi_keywords_clean": ""}, "samuelcolvin/django-bootstrap3-datetimepicker-2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "reubano/ckanny": {"git_readme_keywords": "license ckanny filestore default basis g package ckanny fetch resource python macos resource create instance hood command instance remote speed installation order example pk create package update keyword argument introduction ckanny python ckanny setup macos python frequent basis create package package create version fetch following environment option manager local variable description schema field following schema job instance unnecessarily following configuration remote script environment variable configuration ckanny interface ckanny introduction python linter configuration macos datastore filestore resource", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license ckanny filestore default basis g package ckanny changelog fetch resource python macos resource create instance command instance remote table resource speed table installation order example recent pk create package update keyword argument introduction ckanny python ckanny setup macos python frequent basis create package package create version fetch following environment option manager local variable description schema field changelog version following schema job instance unnecessarily following configuration table package remote script environment variable configuration ckanny interface filetype ckanny introduction python linter ongoing changelog configuration macos datastore filestore resource ckanny changelog", "pypi_keywords_clean": "ckanny"}, "polysquare/polysquare-generic-file-linter": {"git_readme_keywords": "english dictionary compliance customterm alphabetical licence checker default undesirable interest docstring current anything detected technical result matter switch multiple invocation library headerblock checking project instance argument checking functionality documentation absolute golden domain specific markup invalid technical first purpose relative detected coverage example n technical python hacker spellcheck ordinary english status travis apostrophe application whoosh spellchecking punctuation keyword argument american english ordinary removal directory something timestamp standard english whitespace metadata insensitive exported english grammar execution whoosh following convenience triple function scowl few column script lookup shadow syntactical opening parenthesis polysquare generic spellcheckable spellchecking source regex ubuntu appveyor certain member stable special", "git_description_clean": "linter to check style guide compliance on all polysquare projects", "git_keywords_clean": "", "pypi_description_keywords": "customterm compliance licence interest docstring copyright library headerblock checking instance license checking functionality documentation whoosh absolute region invalid technical relative coverage example spelling technical python application spellcheck status travis keyword argument pypiversion punctuation timestamp ordinary empty comment whitespace exported following function dictionary column shadow lookup syntactical polysquare generic appropriate spellcheckable source ubuntu appveyor certain member", "pypi_keywords_clean": "development linters"}, "/syseleven-cloudutilslibs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "zalando/clickclick": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library working example py excption exception name state column warning applicable law apache license column fine working example calc oh long description wrong please example sh list localtime progress unknown sh code state creation language governing status alt active exception time desc warning please column error warning work python click click library args error click click untile working wonderful click beautiful command py li py lo title creation compliance name function kind ok id python example specific language verrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr column li json click alt list example command args date description possible echo anything ok file example script script example software zalando se travis ci start fuckup example composable way work test id ok calc usage code li tsv final error make warning test test license utility end example unknown example message name test creation date ok ok please fix column state state error license version localtime example usage example id name test example name column title column block python copy command line output tsv oh make localtime pypi version working ok json id ok create alt travis alt license test license description id exit help verrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrry long state fine localtime output python package copyright zalando ci build build status complete many alt pypi py shell progress work state warning little code status creation py usage py work lo localtime necessary usage name status error work code block progress example tsv id basis license copyright output example python work untile express make final version number work please fatal error output json json creation current version title example exception exception creation time shell script version alt description column py output", "pypi_keywords_clean": "click console terminal cli"}, "thomasw/djproxy": {"git_readme_keywords": "agnostic middleware httproxy environment python compatibility generic performant djproxy build default middleware suitable build status version djproxy javascript supported version pattern anything response reverse custom middleware kwarg development configure django development following httpproxy support support custom similar provided following production functional additional installation djproxy particular middleware downstream httpproxy configuration header translation production apache meaning destination python version dependent performance production optional configuration xff django upstream python application xfh content process important configuration information project upstream version build functionality httpproxys support context status coverage attribute coverage status middleware httpproxys origin policy testtube config httpproxy definition proxypassreverse header correspond snippet djproxy directory specific terminology request configure django desired version downstream custom", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "agnostic middleware httproxy environment python generic performant djproxy build default middleware suitable build status version djproxy javascript pattern django x anything response reverse websocket support custom middleware kwarg development configure django development following httpproxy support support custom similar provided following production functional additional installation djproxy particular middleware downstream httpproxy configuration destination production apache meaning python version dependent performance production optional configuration xff django upstream python application xfh content process important configuration information project upstream version build functionality httpproxys support context status coverage attribute coverage status middleware httpproxys translation origin policy proxypassreverse testtube config httpproxy definition correspond x x snippet djproxy directory specific terminology request configure django desired version downstream custom", "pypi_keywords_clean": ""}, "spinus/sphinxcontrib-images": {"git_readme_keywords": "sphinxcontrib project instalation support ability fallback enlarge documentation backend preprocess configuration default directive extension thumbnails directive solution example lightbox", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sphinxcontrib project instalation support ability fallback enlarge documentation backend preprocess configuration default directive extension thumbnails directive solution example lightbox", "pypi_keywords_clean": ""}, "AutomatedTester/unittestzero": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/aotools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Pythonity/icon-font-to-png": {"git_readme_keywords": "package adamczak compatibility anything matter awesome library iteration awesome python documentation provided available straightforward concept installation github coverage original version functionality report package source pythonity group python project repository pillow installation python script unclear simple export", "git_description_clean": "python script and library for exporting icons from icon fonts g font awesome octicons as png images", "git_keywords_clean": "python font awesome octicons command line tool icon font", "pypi_description_keywords": "package compatibility value build status anything matter awesome library iteration awesome python version python available straightforward concept installation coverage original version proper documentation functionality report package source python project repository python script issue unclear simple export shell script provided shell", "pypi_keywords_clean": "icon font export font awesome octicons"}, "/pynml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard compliance software language express specific language network language governing copyright enterprise development applicable representation documentation", "pypi_keywords_clean": "pynml"}, "/yandextank": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "falconry/token-bucket": {"git_readme_keywords": "package window algorithm capacity duration algorithms resitant implementation suitable independent counter beginning overhead approach request window algorithms codecov problem additional processing following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package window algorithm capacity duration algorithms resitant implementation suitable independent counter beginning overhead approach request window algorithms codecov problem additional processing following", "pypi_keywords_clean": "web http https cloud rate limiting token bucket throttling"}, "mostafa/simplru": {"git_readme_keywords": "python install simplru license python documentation functionality command python installation directory source manager repository simplru backport", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information functionality simplru backport", "pypi_keywords_clean": ""}, "ghtdak/qt4reactor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "qt twisted"}, "bmerry/trollius-fixers": {"git_readme_keywords": "transformation trolliusasyncio consideration different trollius perfect command future particular tornado asyncio installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "trollius installation asyncio libto", "pypi_keywords_clean": "to asyncio trollius"}, "/repoze-who-plugins-sa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "metadata provider authenticator sqlalchemy", "pypi_keywords_clean": "web application server wsgi sql sqlalchemy elixir authentication repoze"}, "/python-googl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "google url googl"}, "pikhovkin/simple-websocket-server": {"git_readme_keywords": "websocket handshake installation echo complete string payload ws localhost multiple websocket html box websocket server example generate autobahns websocket server echo handshake bytearray object local directory endpoint handle handshake refer tuple websocket frame stream exception python incoming message key pair connect simple websocket https server directory click connect binary frame simple echo testsuite support binary echo server bytearray binary secure http browser generate certificate endpoint licensing unicode object unicode string address websocket testsuite https client endpoint error server example web browser", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "websocket handshake installation echo complete string payload ws localhost multiple websocket html box websocket server example generate autobahns websocket server echo handshake bytearray object local directory endpoint handle handshake refer tuple websocket frame stream exception python incoming message key pair connect simple websocket https server directory click connect binary frame simple echo testsuite support binary echo server bytearray binary secure http browser generate certificate endpoint licensing unicode object unicode string address websocket testsuite https client endpoint error server example web browser", "pypi_keywords_clean": ""}, "MasterKale/django-cra-helper": {"git_readme_keywords": "access react value don cra project typical call way ultimate goal directory django folder development non js development server view basis django template required following typical container element react component payoff production environment build command special substitution viewable todo figure prepare react optional static following list image django command cra command enable app template non css react codebase list add place django abbreviation cra fly archiceture django cra logo svg django context inject filter period django usual cra build necessary setting important view template helper introduction link react app other template app installation build process static production django small bit process similar cra liveserver view context id instance component entry simple api possible access prior template tag substitution project liveserver django production cra helper setting value django app typical javascript introduction django cra right right todo couple production ready following django numerous other template other specific setup configuration template variable css asset javascript object auto reload following setting package minimal implementation complete django tag reason cra component typical cra basis string actual django development output available relative other static following possible python everything example logo minified javascript input load non directory app directory current js django project django view unique hash new non object entry component project folder django left", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django app django project", "pypi_keywords_clean": "django react create react app integrate"}, "/coloredlogs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package following output object logger default simple screenshot python import pypi install function capturer changelog multitude coloredcronmailer changelog github logging variable debug message logger logger useful changelog colorama standard logger logging basicconfig logging macbook install python license logger critical coloredformatter install command crontab asctime hostname documentation available levelname message verbose message process levelname block python pypi release formatter logging version logging formatter installation critical message logging getlogger example intention handler github dependency pypy logger debug software logging module python logging system capturer package millisecond precision release release virtual started duplicate output coloredcronmailer coloredformatter environment logger object message logger spammy colorama sequence translation terminal output debug logger logging basicconfig discussion informational message bug external colorama coloredcronmailer context manager specific logger nothing useful block system administrator debug", "pypi_keywords_clean": ""}, "PEAK-Legacy/proxytypes": {"git_readme_keywords": "package thread proxy callback arbitary effect attempt ordinary python useful addition standard counter similar quick proxy additional callback equal callback function subject proof wrapped object circular subclass reference proxy subject abstract version setattr wrapper instance mixin something necessary attribute access custom concrete respective dictionary proxied object please direct unproxied algorithms callback proxy runtime proxy attribute quick example cached indistinguishable module purpose abstract object callback", "git_description_clean": "status stable tests run on python", "git_keywords_clean": "", "pypi_description_keywords": "package thread proxy callback arbitary effect attempt ordinary python useful addition standard counter similar quick proxy additional callback equal callback function subject proof wrapped object circular subclass reference proxy subject abstract version setattr wrapper instance mixin something necessary attribute access custom concrete respective dictionary proxied object please direct unproxied algorithms callback proxy runtime proxy attribute quick example cached indistinguishable module purpose abstract object callback", "pypi_keywords_clean": ""}, "iskandr/tinytimer": {"git_readme_keywords": "microbench benchmarking", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python benchmarking library", "pypi_keywords_clean": ""}, "/antlr-python-runtime": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package antlr", "pypi_keywords_clean": "unknown"}, "/dectate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "myapp dectate confusion useful support normal attribute command ignore version fooaction directive explicit alternative subclass helpful nothing buildout initial public dectate configuration bug upload universal version detection reproducible iterable method autocommit default morepath morepath subsequent double useless argument introduce sentinel virtualenv status information function system attribute fooaction dectate development documentation function underscored directive allow signature composite object upload public release expose attribute document package python compatibility standard library creation document sphinx coverage python expose dependency subtle bug bug introduced context particular unconverted release cleanup policy factory mention directivereporterror consistent config travis expose method module directive behavior myapp directive config creation proper deprecation powerful configuration combination feature detection inconsistent output change method document composite method implement config object development environment directive definition execution public python continuous integration introduced feature property available morepath expose quality assurance different underlying configuration abstract directiveerror coverall", "pypi_keywords_clean": "configuration"}, "bdarnell/auto2to3": {"git_readme_keywords": "package equivalent development ability overview keyword argument similar finishing behavior directory subdirectory distribution function interpreter interface original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Rikanishu/flask-static-bundle": {"git_readme_keywords": "bundle flask flask extension standard handler flask development default current development production directory extension config production rewrite production bundle installation example flask application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/geobricksmodis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pypi january st combined product italy istance previous available modis plug country example geographic modis afghanistan datetime st installation modq product france upper list following product year angola console modis ftp method following command", "pypi_keywords_clean": ""}, "/guess-language-spirit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package seguir install guess language spirit python setup guess language language hello install language guess import guess optional python version installation python setup binary example usage language import natural language regorgent appropriate further hello world corazn", "pypi_keywords_clean": ""}, "renzon/gaepermission": {"git_readme_keywords": "gaepermission tekton", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "chris1610/barnum": {"git_readme_keywords": "wrong useful recent version position other python plausible arthur north other install django single version graham kishore gowda checksum formula password generator example identity script license arrangement barnum unique address source trivial submit forgot street project anyone credit thinking install barnum example django intelligence generation normal production closing gender appropriate bunch random information production usage random string dummy pythonic realistic first barnum barnum plausible endless stupid sample password pseudo random application reasonable email couple acronym online access street number ummm hassle pradeep kishore google number street paragraphs interpreter fictional company behavior anything convert satchmo breadth recommended method generator python obscurity something directory census different ability flexibility python script little script valid checksum process little", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wrong useful recent version position other python plausible arthur north other install django single version graham kishore gowda checksum formula password generator example identity script license arrangement barnum unique address source trivial submit forgot street project anyone credit thinking install barnum example django intelligence generation normal production closing gender appropriate bunch random information production usage random string dummy pythonic realistic first barnum barnum plausible endless stupid sample password pseudo random application reasonable email couple acronym online access street number ummm hassle pradeep kishore google number street paragraphs interpreter fictional company behavior anything convert satchmo breadth recommended method generator python obscurity something directory census different ability flexibility python script little script valid checksum process little", "pypi_keywords_clean": "data"}, "MarkCWirt/midiutil": {"git_readme_keywords": "instrument digital midiutil structured following philippe nousse adphi implementation documentation status syntax adumbration sufficient useful detailed documentation distribution package directory anyone specification musical instrument support python previous documentation course python foundation license namespace midifile available install midiutil digital interface introduction midiutil normal restructuring software knowledge reference documentation directory cleanup idiosyncratic format actual specification python documentation generation system common mission critical document directory target system assign several additional various development version society devolve machine readable bundling following implementation meteorsw python library platform environment variable midiutil directory object simple example francis cclauss lawlessness directory detailed midifile object convenient release version attribution minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "instrument digital midiutil structured following philippe nousse adphi implementation documentation status syntax adumbration sufficient useful detailed documentation distribution package directory anyone specification musical instrument support python previous documentation course python foundation license namespace midifile available install midiutil digital interface introduction midiutil normal restructuring software knowledge reference documentation directory cleanup idiosyncratic format actual specification python documentation generation system common mission critical document directory target system assign several additional various development version society devolve machine readable bundling following implementation meteorsw python library platform environment variable midiutil directory object simple example francis cclauss lawlessness directory detailed midifile object convenient release version attribution minimum", "pypi_keywords_clean": "music midi"}, "taschini/pyinterval": {"git_readme_keywords": "appveyor container interval arithmetic mathematical documentation implementation library consist unbound pyinterval interval version library extended", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor implementation library consist unbound library extended container interval arithmetic instance support collection mathematical documentation absolute history readability project pycrlibm implement installation coverage separate project helpful continuous integration pyinterval interval pycrlibm pycrlibm outdated portable specific appropriate", "pypi_keywords_clean": "interval crlibm"}, "adamhadani/python-yelp": {"git_readme_keywords": "package external dependency location mission implementation complete repository example httpapiclient license documentation available httplib software application logging returned various francisco reviewsearchapi verbose documentation logging basicconfig feedback following command installing basicconfig fileconfig", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "yelp api"}, "rdegges/django-heroku-postgresify": {"git_readme_keywords": "automatic django django database django heroku django postgresql database configuration heroku postgresql problem following environment heroku install example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "automatic django django database django heroku django postgresql database configuration heroku postgresql problem following environment heroku install example", "pypi_keywords_clean": "django heroku cloud postgresql postgres db database awesome epic"}, "singularityhub/sregistry": {"git_readme_keywords": "following vanessa vanessa sregistry application information singularity registry institution management license documentation compose command database properly django python several registry singularity building webserver", "git_description_clean": "server for storage and management of singularity images", "git_keywords_clean": "singularityhub singularity singularity containers containers management registry", "pypi_description_keywords": "download singularity global specified version anyone rpmbuild license version github installation python software sregistry version happiness branch singularity container wherever documentation python repository different storage singularity registry current release provided container interface sregistry", "pypi_keywords_clean": "singularity containers registry hub"}, "phalt/pykemon": {"git_readme_keywords": "maintainer information friendly simple documentation wrapper installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation friendly framework history beckett description attribute object pokeapi attribute wrapper pykemon documentation installation", "pypi_keywords_clean": "pykemon"}, "graphcommons/graphcommons": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/tethne": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "rhyselsmore/flask-reggie": {"git_readme_keywords": "python argument application argument simple maintainer codebase configuration discussion pattern familiar branch simple contribute github request regular expression contributor friendly installation feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package conception initial argument application compliance license travisci comprehensive configuration pattern history regular expression multiple installation", "pypi_keywords_clean": ""}, "algolia/algoliasearch": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stack overflow question reference algolia search documentation algolia community capable python algolia realtime algolia website", "pypi_keywords_clean": "algolia py search backend hosted cloud full text search faceted search"}, "smurfix/flask-script": {"git_readme_keywords": "application framework license willing script command useful version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask external", "pypi_keywords_clean": ""}, "/django-activitysync": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bitbucket unique default activity information reddit support python twitter scheduler result sample template bitbucket python twitter google utility twitter reddit py dependent activity aggregator provider support twitter feedparser database python configuration activity django crontab feedparser version migrate activitysync version installation additional available output django management py migrate performance production duplicate public basis django activitysync needed simple common installed python reddit google py installed configured application twitter project database django activity organizational dictionary common interface twitter support console social activity following activity installed apps object py syncdb template fetching included management quick example second template management command", "pypi_keywords_clean": "django social activity application twitter reddit google reader"}, "jgosmann/pylint-venv": {"git_readme_keywords": "different virtual pylint installation bash pylint module virtual environment virtualenv pylint virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different virtual pylint installation bash pylint module virtual environment virtualenv pylint virtualenv", "pypi_keywords_clean": ""}, "ecometrica/django-vinaigrette": {"git_readme_keywords": "django vinaigrette docstring ingredient registered database default language po translated version appropriate language project install loading gettext example virtualenv python django queryset particular registered database vinaigrette vinaigrette wherever translation standard internationalization general couple django standard translated appropriate", "git_description_clean": "translate django model data using gettext", "git_keywords_clean": "", "pypi_description_keywords": "register function django vinaigrette docstring queryset method python bug vinaigrettteadminlanguagemiddleware middleware ingredient function support development string translated present registered database default language middleware support translated version change appropriate language project install loading gettext example virtualenv contexts parameter python django queryset registered database vinaigrette vinaigrette wherever translation particular string standard internationalization temporary django support general couple django standard contact generated translated register appropriate middleware optional contexts", "pypi_keywords_clean": "django"}, "viraja1/grammar-check": {"git_readme_keywords": "python wrapper check python command gb check languagetool languagetool import grammar grammar check interpreter import installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python wrapper check python command gb check languagetool languagetool import grammar grammar check interpreter import installation example", "pypi_keywords_clean": ""}, "/django-calaccess-scraped-data": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coverage build california secretary documentation pypi website build campaign finance coverage", "pypi_keywords_clean": ""}, "/django-taggit-autocomplete-modified": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance tracker specific language description description taggit autocomplete applicable license version project support codetrax feature documentation author development installation configuration available feature feature language governing product distribution production license copyright application software express important licensing information submit support release donation paypal recommended community support django taggit repository documentation effort codetrax significant submit", "pypi_keywords_clean": ""}, "jrfonseca/gprof2dot": {"git_readme_keywords": "m afraid requested multiple unlikely question visualize profile status gprofdot version assert keyword necessary decent performance option python profile typical meaningful repository documentation program gazette article produce suitable member linux download default aggregate excellent article instrumentation visualizer linux gazette accuracy granularity columns figure sibling enough precision familiar example gprofdot check impact pointer number sysprof likely python cprofile percentage heuristic function lsprof amplifier sleepy python maintenance external impossible profiling recursive gprofdot interest standalone script partial gcc standard library debian ubuntu symbol complementary alternative fedora graphviz application valgrind callgrind particular release summary gcc optimization russell running certain threshold caller similar choose export little special computation complete overhead result interactive viewer negligible inclusion optimization possible output available graphs execution demangled function essential rogozhin profile python profile column attention information platform python script visible default temperature template tradeoff disable layout", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "coinbase/coinbase": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "authentication convenient information completable support unofficial library relevant official library automatic", "pypi_keywords_clean": "api coinbase bitcoin oauth client"}, "tjomasc/snekbol": {"git_readme_keywords": "standard download documentation documentation implementation independent implementation available wrapper readthedocs library installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "sbol"}, "tommoral/loky": {"git_readme_keywords": "accelerate reusable defined executor instance shutdown overhead default optional dependency implementation advance account parallel contrary library possible project acknowledgement project standard timeout lambda documentation workflow reusable executor several executor installation github spawning complete executor strategy reusable process necessary scripts configurable meaningful recommended repository cloudpickle integration singleton executor consistent ability platform transparent cloudpickle github account request consecutive complete executor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "accelerate reusable defined executor instance shutdown overhead default optional dependency implementation advance account parallel contrary library possible project acknowledgement project standard timeout lambda documentation workflow reusable executor several executor installation github spawning complete executor strategy reusable process necessary scripts configurable meaningful recommended repository cloudpickle integration singleton executor consistent ability platform transparent cloudpickle github account request consecutive complete executor", "pypi_keywords_clean": ""}, "/django-fcm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package django quickstart python support server python python firebase cloud fcm firebase framework python django django fcm block python compatible framework documentation django support", "pypi_keywords_clean": ""}, "NiklasRosenstein/myo-python": {"git_readme_keywords": "thalmic pypi python multiple handler duration https github listener listener x series hello format event device device vibrate version exact event device python order usage https pypi error message migrating yijuilee myomatlab devicelistener method address warmup result eventtype handler parameter armband jun requirement compatibility unpaired self class listener python example event rotation rewrite project license acceleration gyroscope orientation acceleration acceleration event recent important apidevicelistener class number quaternion class rosenstein tutorial alternative device request event warmup event pass few ms handler developer thalmic device listener github repository example migrating event orientation paired hub goodbye way libmyo vibrationtype short stub event gyroscope sdk table devicelistener matlab https docs directory orientation self discontinuation x migrating cffi thalmic old version paired self orientation event x section single device duration ms example example valueerror python library python cffi favor cffi https little package python import sdk https self event enum package documentation example fribeiro fix cffi wrapper sleep pypi cffi gyroscope event hub listener quaternion return false vx python hub something custom device event return format event fix event sdk documentation documentation different event acceleration https developer background listener repository https", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thalmic pypi python multiple handler duration https github listener listener x series hello format event device device vibrate version exact event device python order usage https pypi error message migrating yijuilee myomatlab devicelistener method address warmup result eventtype handler parameter armband jun requirement compatibility unpaired self class listener python example event rotation rewrite project license acceleration gyroscope orientation acceleration acceleration event recent important apidevicelistener class number quaternion class rosenstein tutorial alternative device request event warmup few ms handler developer thalmic device listener github repository example migrating event orientation paired hub goodbye way libmyo vibrationtype short stub event gyroscope sdk table devicelistener matlab https docs directory orientation self discontinuation x migrating cffi thalmic old version paired self orientation event x section single device duration ms example example valueerror python library python cffi favor cffi https little package python import sdk https self event enum package documentation example fribeiro fix cffi wrapper sleep pypi cffi gyroscope event hub listener quaternion return false vx python myp apidevicelistener hub something custom device event return format event fix event sdk documentation documentation different event acceleration https developer background listener repository https", "pypi_keywords_clean": ""}, "globocom/remotecv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "facial worker recognition", "pypi_keywords_clean": "imaging face detection feature opencv"}, "/django-otp-yubikey": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "repository documentation algorithm information upgrade framework repository yubikey django", "pypi_keywords_clean": ""}, "hackingmaterials/matminer": {"git_readme_keywords": "documentation function relevant community matminer research matminer retrieval advantage featurizer library automatminer following development original", "git_description_clean": "data mining for materials science", "git_keywords_clean": "materials science data mining", "pypi_description_keywords": "documentation function relevant community article matminer research matminer retrieval advantage featurizer library following development original", "pypi_keywords_clean": ""}, "clld/clldutils": {"git_readme_keywords": "standard pyramid overhead toolbox", "git_description_clean": "utilities for clld apps without the overhead of requiring pyramid rdflib et al", "git_keywords_clean": "", "pypi_description_keywords": "standard pyramid overhead toolbox", "pypi_keywords_clean": ""}, "openshift/openshift": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python openshift", "pypi_keywords_clean": "swagger openapi kubernetes openshift"}, "omab/python-social-auth": {"git_readme_keywords": "support deprecation codebase registration mechanism organization interface document several authentication registration development process library organized development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support deprecation codebase registration mechanism organization interface document several authentication registration development process library organized development", "pypi_keywords_clean": "django"}, "ResidentMario/missingno": {"git_readme_keywords": "expectation positive library distribution interpretation command quadtree nullity complete geographic interested vehicle display periodicity meaningful correlation general hierarchical particular support further bilogur missingno completeness default missingno variable completion difficult explanatory horizontal configuration confidence specific example columns latitude longitude included geographic grouping example software negative completion minimum nullity geospatial repository function quickstart correlation heatmap evidence visualization geographic distribution nullity interpretable monotone nullity correlation contrary nullity distribution presence heatmap instance algorithm courtesy configuration absolute advanced configuration unreadable elegantly flexible datetime summary special attention geographical contribution geographic information repository citation particular variable geoplot visualization package journal toolset underlying maximum complete keyword parameter distance inclined combination documentation absence erroneous advantage optional projection perspective cluster dendrogram pairwise walkthrough experimental following thereof sparkline visible minimum enclosure configuration geoplot significant collision", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "data data visualization data analysis missing data data science pandas python jupyter"}, "/scapy-real": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project historical github website", "pypi_keywords_clean": ""}, "KristianOellegaard/django-hvad": {"git_readme_keywords": "reliable random default tracker complete publication bugfix queryset package coverage development development package g project instance scratch natural support release pattern unobtrusive efficient default behavior proxy additional available llegaard indexed compatible example django technical python french coverage documentation language release framework installation foreign arbitrary attribute french edition translation following documentation release language translated quickstart guaranteed compatibility abstract currect language translatable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reliable random default tracker complete publication bugfix queryset package coverage development development package g project instance scratch natural support release pattern unobtrusive efficient default behavior proxy additional available llegaard indexed compatible example django technical python french coverage documentation language release framework installation foreign arbitrary attribute french edition translation following documentation release language translated quickstart guaranteed compatibility abstract currect language translatable", "pypi_keywords_clean": ""}, "takluyver/flit": {"git_readme_keywords": "importable module pypi install single importable way development single documentation command block python python version github example python python install directory something import summary development version foobar docstring importable convenient module install package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "importable module pypi install single importable way development single documentation command block python python version github example python python install directory something import summary development version foobar docstring importable convenient module install package", "pypi_keywords_clean": ""}, "/networking-vsphere": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software neutron license", "pypi_keywords_clean": ""}, "MiCHiLU/jinja2-precompiler": {"git_readme_keywords": "eebecbfbefcc enhancement ffcbedefacdfc endoh takanao tracker source wildcard jinja utility script copyright endoh jinjaprecompiler modulename argument takanao project available dbabafececcaeebaec installation fs github example ddeaadafd status report directory jinja template ecdceedacdafcddfc compile jinja symlink shell compiler option jinjaprecompiler updated source clause module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "eebecbfbefcc enhancement ffcbedefacdfc endoh takanao tracker source wildcard jinja utility script copyright endoh jinjaprecompiler modulename argument takanao project available dbabafececcaeebaec installation fs github example ddeaadafd status report directory jinja template ecdceedacdafcddfc compile jinja symlink shell compiler option jinjaprecompiler updated source clause module", "pypi_keywords_clean": "jinja python template"}, "neuroneuro15/wavefront-reader": {"git_readme_keywords": "sequential texcoord software license documentation package cookiecutter opengl project template wavefront template cookiecutter documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sequential texcoord software license documentation package cookiecutter history cookiecutter opengl project template release wavefront template cookiecutter documentation status", "pypi_keywords_clean": "wavefront reader"}, "jamesturk/django-secretballot": {"git_readme_keywords": "generic default urlconf addition acceptable different exception enabled available secretballot middleware example implementation application jamesturk anonymous particular manager django secretballot secretballot django function parameter django project enough optional argument related abstract special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generic default urlconf addition acceptable different exception available secretballot middleware example implementation application jamesturk anonymous particular manager django secretballot secretballot django function parameter django project enough optional argument abstract special", "pypi_keywords_clean": ""}, "/python-yaml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "coldfix/udiskie": {"git_readme_keywords": "python version license support userspace screenshot branch udisks tracker documentation command removeable installation debug release license udiskie udisks source automount removable udiskie version installation manual", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tracker refactor internal detach device support command russian eject factor automount removable update license utility speed format prompt parameter luks option careless error startup crash error message experimental support notification program udisks mention source error prevent warning appindicator compatibility default notify password prompt backward incompatible removeable available udisks dbus python browse action package luks collection async setup script break command automounter command installation manual userspace session zenity dbus mounter detach version prompt deterministic mention ignore refactor unicode unavailable setup py failed refactor script update button async module excessive disable individual wrong password flash failed deprecation version break slackware narrow dependency optional password unmount aesthetic udiskie udisks filesystem password caching signal failing option ignore password dialog active asyncs unable dependency enforcement parameter rename prompt major particular namespace package release action button major version udisks backend luks support python python config cleanup recent support support global reference udisks version problem action regression undocumented utility favor udisks password verbose luks device udisks feature changelog greywolf udisks installer documentation udiskie namespace available license udiskie py unicode setupscript udiskie version zsh autocompletion pygtk zenity license copyright exception python gbulb installation debug suppress deprecate udisks docker stdout version license pygobject g rename command unhandled deprecate python entry python notify automatic basic support libnotify", "pypi_keywords_clean": ""}, "/flask-lesscss": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "lesscss application extension", "pypi_keywords_clean": ""}, "PromenadeSoftware/parlay": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download comprehensive accessibility copyright painless scientific freenode documentation analysis painless integration embedded installation software promenade software visibility scientific experimentation repository powerful development following installed information commercial instrument verification channel makefile investigation", "pypi_keywords_clean": "embedded device broker medical iot hmi"}, "bgamari/squmfit": {"git_readme_keywords": "treatment flexible documentation squmfit convenient multiple library readthedocs", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "global treatment flexible python library multiple squmfit", "pypi_keywords_clean": ""}, "pypa/jupyter-git": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project generated package update install update version setup version number website account directory upload update package python setup myproject follow", "pypi_keywords_clean": "sample setuptools development"}, "/openalea-container": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "history creation openalea container openalea such coverage report topomesh history build status pypi version release report status status target version target documentation status", "pypi_keywords_clean": ""}, "jcsaaddupuy/xbmc-json": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example contribute implementation example documentation branch instanciated available usages accessible instanciation interaction everything module control library interaction interaction", "pypi_keywords_clean": ""}, "ross/memcache-toolbar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software memcache toolbar mcfarland installation welcome caching library configuration pattern installation install personal capable library following configure", "pypi_keywords_clean": ""}, "/etsdevtools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debugging software enthought developer collection documentation envisage application functional variable developer collection production development", "pypi_keywords_clean": ""}, "nhoffman/fastalite": {"git_readme_keywords": "argparse argumentparser writing useful iterator opener fastalite possible fastalite checking argument fastalite installation argparse command available python fastalite example limited format bz suffix transparent reading attribute outfile whitespace record install fastalite sequence outseqs repository complex quality installation install interface compressed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/steelscript-wireshark": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wireshark steelscript steelscript technology installation", "pypi_keywords_clean": ""}, "tsileo/blobstash-base": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python filetree docstore blobstash useful blobstash python python docstore", "pypi_keywords_clean": "blobstash client"}, "heroku/django-heroku": {"git_readme_keywords": "important whitenoise application keyword compatible configuration environment variable functionality automatic configuration specific development experience seamless deployment library responsibility", "git_description_clean": "a django library for heroku apps", "git_keywords_clean": "heroku django python factor", "pypi_description_keywords": "important whitenoise application keyword compatible configuration environment variable functionality automatic configuration specific development experience seamless deployment library responsibility", "pypi_keywords_clean": ""}, "/openbabel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package pythonic copyright distribution licence copyright project chemistry library molecular conversion framework license documentation version installation collaborative project further information version biochemistry toolkit installation framework obconversion geoffrey hutchison software foundation chemical toolbox software detailed installation functionality obresidue foundation version release openbabel general analyze copyright geoffrey program geoffhutchison interface access copying convenient", "pypi_keywords_clean": ""}, "miracle2k/confcollect": {"git_readme_keywords": "default string multiple support reading helper deployment flexiblity derivative support configuration example django everything regular something heroku necessary environment custom module information different config complex behaviour environment variable mysql pretty tooption uppercase reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/arff": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "creation python integer attribute reader license float integer gmail future color blonde attribute relation useful blonde black string numeric integer example", "pypi_keywords_clean": ""}, "jd-boyd/python-lzo": {"git_readme_keywords": "package current automated competitive compression portable lossless decompression decompression copyright addition license documentation suitable compiler accessible download extract compatible version installation ubuntu example reference ordinary something enterprise following general information algorithms chapter copying jdboyd jdboyd compression library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition competitive compression speed portable lossless memory decompression decompression compression library", "pypi_keywords_clean": ""}, "visualfabriq/bquery": {"git_readme_keywords": "advanced filtering storage optimum performance memory access reliable benchmark comparison weight package default length bquery cytoolz technology memory footprint parallel execution machine learning columnar intermediate column parallel example groupby operation average standard performance comparison original performance vbench aggregation framework accelerate similar standard deviation available memory bquery bquery further improving nascent benchmark paragraph sequential access meaning performance production python important reporting cytoolz functionality numexpr factorization processing possible typical random memory column possible groupby planned storage vs welcome anything available recurrent bquery framework groupby columns specific output column retrieval functionality visualfabriq numerical hardware further reporting environment testing benchmark arithmetic", "git_description_clean": "a query and aggregation framework for bcolz w", "git_keywords_clean": "", "pypi_description_keywords": "advanced filtering storage optimum performance memory access reliable benchmark comparison weight package default length bquery cytoolz technology memory footprint parallel execution machine learning columnar intermediate column parallel example groupby operation average standard performance comparison original performance vbench aggregation framework accelerate similar standard deviation available memory bquery bquery further improving nascent benchmark paragraph sequential access meaning performance production python important reporting cytoolz functionality numexpr factorization processing possible typical random memory column possible groupby planned storage vs welcome anything available recurrent bquery framework groupby columns specific output column retrieval functionality visualfabriq numerical hardware further reporting environment testing benchmark arithmetic", "pypi_keywords_clean": ""}, "mitodl/edx-sga": {"git_readme_keywords": "component interface value grade course add appropriate course staff studio click way mocked edx platform branch create branch production installation installation create problem weight homework convention question addition setup course navigate doesn support other command instructor approval click grade server devstack devstack configure version grading navigate grading dialog storage engine display machine thing level setting docker container dash sync option app assignment xblock uploaded student submission lms object add method staff member progress few different upper right local branch filename download advanced module course outline add edx edx platform create section staff problem green click html xblock course django application problem grading final statement coverage sub section example devstack installation number right corner advanced button attribute django apps comment vagrant vm grid choose staff ansible work necessary add local storage instructor assuming edx configuration provision devstack edx studio storage additional yaml change advanced outline create edx such other problem response fellow developer storage configuration change grade refer label above integration installation devstack configuration setup horizontal navigation configuration show answer studio change xml xml maximum grade dependency local development edx article section sub particular configure storage app add storage add closed correct browser dogwood underscore add add section problem default storage problem solution package mounted add installed django select maximum doesn exist following template answer attribute xblock return few minor staff available correct answer upload multiple staff grading lightbox columns fullstack studio worth show assignment doesn directory something likely unnecessary uploading username full application installation button click click advanced following student grading policy installed app above devstack full correct vertical upload block", "git_description_clean": "staff graded assignment xblock for the edx platform", "git_keywords_clean": "xblock edx", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "robofab-developers/fontpens": {"git_readme_keywords": "collection build status protocol status coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection build status protocol status coverage", "pypi_keywords_clean": ""}, "/cypari": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package independent sagemath computer algebra version", "pypi_keywords_clean": "pari sagemath snappy"}, "/sphinxcontrib-bitbucket": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "equivalent project sphinxcontrib bitbucket bitbucket project history release variable extension sphinx configuration example", "pypi_keywords_clean": ""}, "jrbourbeau/pyunfold": {"git_readme_keywords": "information hampel license pyunfold pyunfold iterative unfolding unfolding documentation installation pyunfold license copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information hampel license pyunfold pyunfold iterative unfolding unfolding documentation installation pyunfold license copyright", "pypi_keywords_clean": ""}, "pyoceans/seawater": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility unesco installation version formulas latitude negligible velocity version library transition argument convergence precision oceanographic previous increased convergence dimension inconsistency python version execution original version important surface guessing johnson gjohnson python seawater release prevent installation pressure announcement changelog version column information matlabtm seawater version version consistent current version official release keyword version matlabtm version temperature seawater toolbox routine solubility version default obsolete potential vorticity", "pypi_keywords_clean": "oceanography seawater"}, "/django-shoogie": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "filename funcname shoogie logging useful settings py question familiar technical configurable traceback transaction management lightweight alternative shoogie shoogie first column aggregation small django python logging traceback exclude inaccessible version compatibility logging server related general pattern erroneous django default exclude sequence logging handler simple server ajax interface debug response configuration shoogie django technical django familiar hebrew django application database regular expression compatible installation normal example click logging sh shoogie handler function outside transaction button django standard configurable exception israel celery specific logging logdb logging response debug present following settings shoogie ignore absolute similar request information logging configuration settings shoogie logging client handler configuration logger answer production exception logging candy logging module simple logging shoogie traceback context particular db extraction sequence diminutive compatibility django advanced django shoogie section django debug retrieval action logging system sentry django management configurable system similar settings settings stackoverflow appropriate action request method possible django logdb experience integration django erroneous exception popular server technical debug detail standard module something django sentry march http request different django project platform django version object interface shoogie specific technical response middleware shoogie shoogie middleware", "pypi_keywords_clean": ""}, "/logcolor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jbg/rabbitmq": {"git_readme_keywords": "motivation rabbitmq documentation rudimentary librabbitmq available production example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "motivation rabbitmq documentation rudimentary librabbitmq available production example", "pypi_keywords_clean": "rabbitmq amqp cffi"}, "biolink/ontobio": {"git_readme_keywords": "documentation documentation sparql service ontobee sparql monarch utility", "git_description_clean": "python library for working with ontologies and ontology associations", "git_keywords_clean": "ontology obo sparql graph bioinformatics rdf", "pypi_description_keywords": "documentation documentation sparql service ontobee sparql monarch utility", "pypi_keywords_clean": "ontology graph obo owl sparql networkx network"}, "datastax/cassandra-driver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance compatibility tracker specific language community parallel execution asynchronous copyright datastax cassandra library datastax applicable documentation datastax enterprise discovery configurable eggleston integral complete installation language governing version software express cqlengine execution request language haddad protocol installation installation channel automatic", "pypi_keywords_clean": "cassandra"}, "/zenircbot-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package changelog history message license symlink killing command zenircbot version library following", "pypi_keywords_clean": ""}, "tsroten/pynlpir": {"git_readme_keywords": "segment software python wrapper license status chinese unicode feedback github support mapping support access pynlpir version documentation github", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package release problem indentation installation problem default chinese build status gbk double license updates result pynlpir build version information multiple doubleslash documentation github return value segment argument license identification empty configuration information software python support comma updater tutorial functionality common github support speech mapping unicode whitespace course access directory updates python wrapper feedback build scheme initial release condition version change mapping support travis certain error uppercase linux", "pypi_keywords_clean": "pynlpir nlpir ictclas chinese segmentation nlp"}, "pennappslabs/penncoursereview": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library penncoursereview", "pypi_keywords_clean": "penncoursereview penn upenn"}, "mattupstate/flask-negotiate": {"git_readme_keywords": "apps content negotiation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "apps content negotiation", "pypi_keywords_clean": ""}, "bitmazk/python-freckle-client": {"git_readme_keywords": "project instance python contribute implementation installation commit freckle release method block python block github following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project instance python contribute implementation installation commit freckle release method block python block github following", "pypi_keywords_clean": "letsfreckle freckle api client"}, "/negotiator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value default python introduction todo basic preferred content accept header complex accept accept charset html preference ordering usage import example above negotiation request combined preference instance client request negotiator ready reality accept language present acceptable server preferred http accept negotiator module advanced usage weighting combined value usage section weight english advanced equal simple negotiate cz optimal solution example content negotiation variety weighted overall framework server proper content pdf html json client option advanced example following preference equation accept negotiation preference sequence sequence match short json german preference language header different accept basic usage python dictionary preferred format negotiator proper possible allowed introduction negotiator fr previous section language weight", "pypi_keywords_clean": ""}, "/cropresize": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "presentation cropresize distortion functionality convenience package command program convenience function appropriate methodology useful function cropresize cropresize function documentation utility upstream", "pypi_keywords_clean": "image"}, "/sphinx-bootstrap-theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bootstrap html override javascript framework styling g statistical specify theme sphinx internal css javascript apache license useful source directory override template development server support pypi github version cloud sphinx static need welcome please cloud browser responsive design py configuration hierarchical compatibility default choose choose configurable level template source background color customization project license good candidate theme option restructuredtext bootswatch figure template block static directory example install sphinx global number choose bootstrap sandstone sphinx navigation dropdown bootswatch theme theme django add jquery sphinx mobile friendly additional content visualization library source django reusable app seaborn installation css add github repository theme html build process theme pypi static js straightforward install python fabric appropriate styling multi level theme specific django reusable sphinx template website sandstone bootswatch theme bootstrap layout html construct please bootstrap sphinx js css custom static browser seaborn custom css sphinx theme entire local add function g amazon amazon web bootstrap theme approach level rendering navigation py string sphinx add sphinx bootstrap build package friendly responsive django cloud new repository introduction bootswatch css html theme current source static different bootswatch sphinx search available first build first relative public various layout rough makefile navbar html directory something bootstrap navigation following import sphinx jquery x bootstrap construct please add unsure installation installation bootstrap x information sphinx bootstrap css stylesheet configurable extensible", "pypi_keywords_clean": ""}, "googlesamples/google-assistant-sdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compliance portaudio dev grpc communication upgrade google simple device model google assistant functional client specific language assistant hotword assistant answer apache license sound device action query applicable law pushtotalk device license python libffi dev device identifier license version contributor license model product collection install recording nickname model dev libffi libssl dev documentation copyright google sdk google language governing install upgrade reference sample basis license copyright software foundation apache software python assistant sdk google oauthlib development maintainance foundation asf additional information install portaudio express assistant pushtotalk device action started assistant devicetool release assistant service record flush push service google repository device block limited throughput model identifier information key press hotword sample welcome playback install assistant library started license dev libssl model device hotword device copyright ownership device setup soundcard python package sample query installing verbose", "pypi_keywords_clean": "google assistant api sdk sample"}, "shomah4a/sphinxcontrib-gist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sphinx extension sphinx project block python html directive sphinx usage", "pypi_keywords_clean": ""}, "pierky/ipdetailscache": {"git_readme_keywords": "ripestat basic cache default ipdetailscache build build status local function prefix resource setup cache local cache chiodi www peeringdb internet exchange avoid persistent jeff hostname argument author install hamburg version python peeringdb whenuse default holder reverse meaning peering github avoid flood feature example please manipulation library third google python resource holder cache object directory unknown address manipulation import useixps whenuse cache expiration repository following dictionary information persistent storage whenuse clear library installation install ipdetailscache python library clear local address method debug twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wrong behaviour ripestat basic cache default ipdetailscache build build status local function prefix resource setup cache local cache packaging issue chiodi www peeringdb internet exchange fixes wrong usage import avoid persistent jeff hostname argument usage example md author install hamburg version python peeringdb whenuse default history holder reverse issue peeringdb meaning peering readability github avoid flood feature please manipulation library function usage third google python resource holder cache object directory unknown address manipulation import useixps whenuse behaviour change download fixes whenuse check ipdetailscacheixpinformationerror cache expiration fixes behaviour repository following dictionary isixp information persistent storage whenuse clear library installation install ipdetailscache python library issue clear local address method debug twitter", "pypi_keywords_clean": "ripe ripe ncc ripe stat library ipv ipv ip address"}, "/pyoai": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package refactoring service generic python compatibility restructuredtext oaipmh response xmlsyntaxerror subversion public release oaipmh namespace declaration binding registry registerreader python implementation separate datestamp package structure oaipmh module metadataregistry registry version mercurial output prettyprint compatible catalog resource added framework pasternak travis libxml python oaipmh metadata status metadataregistry functionality document namespace package travis support resumption platform changelog metadata registry metadataregistry contact output compatibility infrastructure foundation initial public different added python compliant namespace datestamp module indication protocol oaipmh protocol metadata element added tolerant correct getitem contain tolerant datestamp", "pypi_keywords_clean": "oai pmh xml archive"}, "tito/osxrelocator": {"git_readme_keywords": "full installable mechanism prefix variable library relocator utility g location instance dynamic library other substitution darwin libsystem dylib installation order macos linker doesn directory description binary sdk dependent dynamic generated object library install dynamic linker appropriate section otool runtime dylib purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full installable mechanism prefix variable library relocator utility g location instance dynamic library other substitution darwin libsystem dylib installation order macos linker doesn directory description binary sdk dependent dynamic generated object library install dynamic linker appropriate section otool runtime dylib purpose", "pypi_keywords_clean": "osx libraries relocation setuptools development"}, "/pymf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cthurau unconstrained python pymf googlemail factorization pymf cvxopt factorization several documentation contact pymf python following website documentation", "pypi_keywords_clean": ""}, "/salt-pepper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "remote instance basic devel master separate saltdev saltapi configuration command additional pepper pepper installation please python support saltapi eauth heavy trouble installation environment saltapi python python python library script issue external existing python interface progress block following syntax runner client", "pypi_keywords_clean": ""}, "appstore-zencore/ps2": {"git_readme_keywords": "default install program output example linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default install program output example linux", "pypi_keywords_clean": "ps"}, "sveetch/crispy-forms-foundation": {"git_readme_keywords": "introduction foundation download application documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction foundation download application documentation", "pypi_keywords_clean": "django django crispy forms foundation site"}, "edx/event-tracking": {"git_readme_keywords": "storage structured contexts dynamic schemaless collection example multiple library analysis persist location freenode documentation advantage version public security django integration context repository following welcome integration support channel", "git_description_clean": "a system for tracking events", "git_keywords_clean": "", "pypi_description_keywords": "storage structured contexts dynamic schemaless collection example multiple library analysis persist location freenode documentation advantage version public security django integration context repository following welcome integration support channel", "pypi_keywords_clean": ""}, "getmillipede/millipede": {"git_readme_keywords": "basic message default virtualenv virtualenv docker build build status convenient option default position millipede chaud reverse myvar mydata username password millipederc myenv source build millipede beautifull millipede message http passer http millipede reverse install millipede build millipede aaah bocal chaud millipede docker production millipede millipede chaud devant authentication millipede virtualenv myenv key source myenv environment docker comment millipederc installation mydata rcfile local following millipede http millepatte developement template default confined environment opposite sample passer chaud", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "millipede project share world", "pypi_keywords_clean": "millipede"}, "click-contrib/click-log": {"git_readme_keywords": "click license see click", "git_description_clean": "simple and beautiful logging for click applications", "git_keywords_clean": "", "pypi_description_keywords": "click license see click", "pypi_keywords_clean": ""}, "feifangit/dj-mongo-reader": {"git_readme_keywords": "download framework pagination javascript callback several customization database collection export mongodb feifan install django application mongodb record complete record frontend document django mongodb record number bootstrap collection command permission transformation heroku functionality assign display request source amount", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download framework pagination javascript callback several customization database collection export mongodb feifan install django application mongodb record complete record frontend document django mongodb record number bootstrap collection command permission transformation heroku functionality assign display request source amount", "pypi_keywords_clean": ""}, "/ludibrio": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package download trivial mocking interpreter mechanism behavior original instance specification documentation dmpinheiro rezende nsigustavo official version statement reference ludibrio nutshell doctestcommand ability namespace gustavo rezende external ludibrio development request ludibrio powerful", "pypi_keywords_clean": "mock stub fake dummy doubles mocks"}, "clinicedc/edc-lab-dashboard": {"git_readme_keywords": "clinic travis coverage pypi travis dashboard", "git_description_clean": "lab dashboard views for clinic edc projects", "git_keywords_clean": "clinical trial management system", "pypi_description_keywords": "clinic travis coverage pypi travis dashboard", "pypi_keywords_clean": "edc lab dashboard views"}, "matplotlib/cmocean": {"git_readme_keywords": "application anaconda oceanographic analysis oceanography oceanography hetland phillip wolfram antarctic mapping description paraview selection generic mapping zimmerle documentation available submodule", "git_description_clean": "colormap setup for standardizing commonly plotting oceanographic variables", "git_keywords_clean": "", "pypi_description_keywords": "application anaconda oceanographic analysis oceanography oceanography hetland phillip wolfram antarctic mapping description paraview selection generic mapping zimmerle documentation available submodule", "pypi_keywords_clean": "colormaps oceanography plotting visualization"}, "dchaplinsky/translitua": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "russianinternationalpassport bb b ukrainiansimple language ukrainiankmu convinience variable organization russiantelegram mannheim dudenverlag ukrainianwws translit ukrainianiso scholarly ukrainianbritish standardization ukrainianfrench ukrainiangerman b difference b bb russianicao ukrainianpassport school geographic standard ukrainianbgn international organization girodet dictionnaire apostrophe system alternative passport ukrainianpassportalt permanent committee ukrainiannational geographical coverage installation russiansimple terminology transliteration romanization block official romanization latinization", "pypi_keywords_clean": "ukrainian transliteration"}, "GeoNode/geonode-notification": {"git_readme_keywords": "project signing documentation functionality certain configurable submission django notification", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "actual content syncdb signal command proxy default simple ugettext suitable behavior anything custom context result optional vs reusable project previous notification support database website practice proxy version vs vs basis creation example display optional notification process application thing internal shortname context directory import description translation good global setting dictionary signature different template iterable conditional clause management command django notification minimum", "pypi_keywords_clean": ""}, "quora/qcore": {"git_readme_keywords": "standalone inspectable class microtime assertion component useful library additional custom abstraction standard library class functionality similar helper integer number result example common utility block python example common functionality failure number readable result standard module attribute python object epoch module function library package different object inspection useful exception decorator normal python python similar hashing equality", "git_description_clean": "common python utility functions", "git_keywords_clean": "", "pypi_description_keywords": "standalone inspectable class microtime assertion component useful library additional custom abstraction standard library class functionality similar helper integer number result example common utility block python example common functionality failure number readable result standard module attribute python object epoch module function library package different object inspection useful exception decorator normal python python similar hashing equality", "pypi_keywords_clean": "quora core common utility"}, "7sDream/zhihu-py3": {"git_readme_keywords": "python author python htmlmarkdown readme sphinx x python license pypidownloadstatus author documentationstatus readme readme documentationstatus pypiversion license build python readme zhihu python zhihu pypidownloadstatus license class bold parser x unittest pypidownloadstatus python zhihu oauth issue qq github author author build qq zhihu x github lxmlhtml build documentationstatus todo htmlmarkdown class pypiversion license x x libxmllibxslt unittest x pypiversion pypidownloadstatus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python author python htmlmarkdown readme sphinx x python license pypidownloadstatus author documentationstatus readme readme documentationstatus pypiversion license build python readme zhihu python zhihu pypidownloadstatus license class bold parser x unittest pypidownloadstatus python zhihu oauth issue qq github author author build qq zhihu x github lxmlhtml build documentationstatus todo htmlmarkdown class pypiversion license x x libxmllibxslt unittest x pypiversion pypidownloadstatus", "pypi_keywords_clean": "zhihu network spider html"}, "zopefoundation/zodbpickle": {"git_readme_keywords": "package compatibility default effect implementation untrusted comparison extension example everything support erroneous version example subclass wisdom helpful arbitrary zodb deterministic coverage status unicode general unnecessarily necessary support persistent interface uniform pyk zodb caution unauthenticated", "git_description_clean": "fork of python pickle module to work with zodb", "git_keywords_clean": "", "pypi_description_keywords": "pickle binary effect common pickle pypy pypy import accelerator module interface support incomplete support version subclass bug zodbpickle helpful arbitrary zodb pickle protocol general necessary support uniform method zodb caution untested added python pickle compatibility default python example added zodbpickle slowpickle supported argument independent choice readme example sdist fix patch choose deterministic choice fix unpickler unicode version independent disable fix nameerror pypi pickle module changelog fix added support feature please wisdom added custom added option warning pyk zodb initial release jython unauthenticated source behaviour fix memory module zodb couldn module support build package spurious extension module dispatcher packaging implementation python import untrusted comparison pyk specific extension example everything python module python implementation erroneous implementation fix python version python pypy coverage status unnecessarily python fix persistent fix bug interface pyk", "pypi_keywords_clean": "zodb pickle"}, "olucurious/pyfcm": {"git_readme_keywords": "reliable invalid registration messaging android messaging message response useful license python other argument registration other database available python other block python python version retention tornado support priority message scalable functionality payload environment pyfcm version reengagement infrastructure information version license django version instant messaging python appengine firebase version checkout", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reliable invalid registration messaging android messaging message response useful license python other argument registration other database available python other block python python version retention tornado support priority message scalable functionality payload environment pyfcm version reengagement infrastructure information version license django version instant messaging python appengine firebase version checkout", "pypi_keywords_clean": "firebase fcm apns ios gcm android push notifications"}, "mccutchen/vokram": {"git_readme_keywords": "markov vokram vokram plausible python library inefficiently installation command inspiration explanation output python implementation maximum number approachable markov library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "markov vokram vokram plausible python library inefficiently installation command inspiration explanation output python implementation maximum number approachable markov library", "pypi_keywords_clean": ""}, "/pystaggrelite3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dependency function", "pypi_keywords_clean": ""}, "kvesteri/wtforms-json": {"git_readme_keywords": "restful apis support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "restful apis support", "pypi_keywords_clean": ""}, "RedFantom/ttkthemes": {"git_readme_keywords": "project information consider redfantom license different tkinter documentation available various readthedocs example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project information consider redfantom different tkinter documentation available various homepage library readthedocs example", "pypi_keywords_clean": "tkinter ttk gui tcl theme"}, "wtayyeb/django-zurb-foundation-rtl": {"git_readme_keywords": "django zurb counter zurb foundation foundation django package version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "foundation package scratch django zurb default visit zurb foundation provided specific package version example template vendor library something equal template extend", "pypi_keywords_clean": ""}, "testing-cabal/linecache2": {"git_readme_keywords": "linecache linecache profit backport", "git_description_clean": "backport of the python stdlib linecache module", "git_keywords_clean": "", "pypi_description_keywords": "linecache linecache profit backport", "pypi_keywords_clean": ""}, "/designate-tempest-plugin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information single plugin directory integration designate project environment repository example designate", "pypi_keywords_clean": ""}, "/xylose": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/python-termstyle": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard python library background character weight unicode termstyle termstyle control transparency", "pypi_keywords_clean": "output colour console ansi"}, "/bob-extension": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package installation complete learning toolbox processing install building support extension building mechanism software package development", "pypi_keywords_clean": ""}, "/pyqt4": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python platform digia comprehensive toolkit", "pypi_keywords_clean": ""}, "btimby/fulltext": {"git_readme_keywords": "unrtf format format python stdlib formats other open source class stdlib tesseract other required command package manager tesseract cli debian word format bash optional default utilized legacy need available such pdftext necessary return modul module search tool installing method module cli linux format image simple dictionary formats extension key word fulltext lib utilizes third legacy word path right thing tool cli dictionary style stdlib python figure example third party tool module bash usage number encoding keyword argument additonal target pytesserac module usage fulltext second register smartfile smartfile backend module tesseract form correct backend document analysis module module public function introduction fulltext appveyor figure style interface smartfile open possible define image formats temporary module modul various document party python certain default parameter project introduction single public document formats tool tesseract possible python module interface single cli tool temp memory office first advantageous word argument extension linux handler backend keyword directory module python cli new backend source project native python object tool python python custom", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple dictionary utilizes project introduction single public second antiword legacy pdftext poppler document analysis possible python module public function interface single various python antiword pdftext default backend command introduction fulltext figure format pdftext package manager memory debian advantageous example required antiword python number optional default status format directory necessary return temporary smartfile following module xlsx right module installing backend custom source project search various document environment variable object travis default parameter", "pypi_keywords_clean": ""}, "dpgaspar/flask-appbuilder": {"git_readme_keywords": "multiple database contribute group example sqlalchemy multiple wtform schedule openid database simple development framework private interactive platform extensive configuration environ extension dynamic restful awesome detailed security possible exploration platform project registration js validation database sqlalchemy command mssql related dropdown further application development timestamps security deprecated mongoengine multiple welcome change installation normal datepicker datetimepicker example variety django everything exposed authentication generation automatic automatic group generation functionality integrate security automatic organization visual intuitive mongodb authentication support support vertical datetimepicker related system internationalization integration various bootstrap configurable application public development documentation builder colorama eurobic definition custom language selectable search generation multiple mysql vertical partitioning monitor partial support upload direct database support association everyone", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple database contribute group example sqlalchemy multiple wtform schedule openid database simple development framework private interactive platform extensive configuration environ extension dynamic restful awesome detailed security possible exploration platform project registration js validation database sqlalchemy command mssql related dropdown further application development timestamps security deprecated mongoengine multiple welcome change installation normal datepicker datetimepicker example variety django everything exposed authentication generation automatic automatic group generation functionality integrate security automatic organization visual intuitive mongodb authentication support support vertical datetimepicker related system internationalization integration various bootstrap configurable application public development documentation builder colorama eurobic definition custom language selectable search generation multiple mysql vertical partitioning monitor partial support upload direct database support association everyone", "pypi_keywords_clean": ""}, "phpdude/urlsresolver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "unbit/django-uwsgi": {"git_readme_keywords": "django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django", "pypi_keywords_clean": "uwsgi django mail cache template"}, "/pyobjc-framework-photos": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information framework documention documentation translation objective", "pypi_keywords_clean": "pyobjc photos"}, "/project": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "gelijk lichaam gezondheid", "pypi_keywords_clean": ""}, "renzon/pswdclient": {"git_readme_keywords": "integration library pswdless pswdclient", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyvttbl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyvttbl python rogerlew v v contingency change backend author sqlite backend", "pypi_keywords_clean": ""}, "ikraftsoft/django-userswitch-fork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib django middleware userswitch middleware userswitch quick sessionmiddleware django default messagemiddleware userswitch absolute positioning middleware common box middleware userswitchmiddleware middleware messagemiddleware authenticationmiddleware django middleware authenticationmiddleware version common commonmiddleware django userswitch specify commonmiddleware django different csrfviewmiddleware django middleware middleware sessionmiddleware django installation", "pypi_keywords_clean": ""}, "/pandas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flexible reshaping structured scientific suitable shifting mutability columns dimensional specific functionality alignment expressive multiple possible majority powerful flexible columns ultrafast analysis pivoting unordered subsetting available indexing structure building spreadsheet ordered display everything multidimensional flexible generation functionality arbitrary scientific research practical heterogeneous fundamental intuitive observational statistical typical environment intelligent dataframe dimensional powerful language different engineering hierarchical labeling explicit handling frequency analysis manipulation automatic frequency conversion", "pypi_keywords_clean": ""}, "MicroPyramid/forex-python": {"git_readme_keywords": "currency source complete visit new ticket documentation source bitcoin current decimal python usage historical initialize class support updated daily python detect install python development block python daily pm currency conversion other usd ratesnotavailableerror minute health currency symbol day european central pypi forex python convert convert amount usd information visit foreign exchange forex python bitcoin central bank historical foreign installation install travis feedback visit coindesk amount python package", "git_description_clean": "foreign exchange rates bitcoin price index and currency conversion using ratesapi io", "git_keywords_clean": "python package bitcoin currency currency exchange rates currency converter", "pypi_description_keywords": "python foreign exchange amount convert amount currency conversion github historical", "pypi_keywords_clean": ""}, "jammycakes/factoryfactory": {"git_readme_keywords": "service container factoryfactory dynamic untested registration separate validation configuration documentation install factoryfactory functional dependencyinjection resolution roadmap expression factoryfactory program interface replacement startup automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "service location inversion of control ioc"}, "/cothread": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license version readthedocs python library documentation documentation status essential status coverage access particular background available several installation building cooperative threading", "pypi_keywords_clean": ""}, "DXsmiley/edgy-json": {"git_readme_keywords": "schema example documentation equality illegal example featured standard python forefront function library recursion schema coffee", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "edgy", "pypi_keywords_clean": ""}, "optiflows/django-modalview": {"git_readme_keywords": "modalview django plugin installation default first example pypi urls py dom element response html new class logic invalid modalview permit py urls modalview app py mymodal new button new instance other submit button argument value doc modaltemplateutilview first news html header example usefull example modalformview plugin new django app jquery plugin mymodal js several class click django form context simple modalview attribute modaltemplateview class inherit class permit header modaldeleteview inherit url modal example django modalview django modelform header modalupdateview usage django modalresponse script header modalcreateview object bootstrap modal button class object example client request deletion method modalview generic example new component error", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyspotify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "official library spotify library service interest possible development project deployment support cpython spotify service version coverage knowledge number alternative libspotify libspotify wrapper android metadata spotify playback commercial platform access interface libspotify deprecation numerous contributor pyspotify pyspotify", "pypi_keywords_clean": ""}, "/isi-sdk-7-2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package underneath generic library applicable installation documentation namespace installation prebuilt filesystem namespace github codegen example program subdirectory repository programmatic namespace interface information language platform accurate documentation cluster configuration", "pypi_keywords_clean": "swagger isilon sdk"}, "MrJoes/tornadio2": {"git_readme_keywords": "acknowledgment service application application simple implementation capture different transport javascript tornadio library protocol available asynchronous request response library unicode support possible original tornado tutorial myrouter tornadio tornado application flash policy information check communication application object full unicode performance example familiar version compatible transport protocol production generator example optional handler sockettornad software application constructor realtime transport alternative branch directory tornado customized version socketserver tornado knowledge application performance python tornadio nothing message method http framework tornadio information selectable tornadio tornadiorouter support tornadio support support browser protocol myconnection tornadio tornadiorouter myconnection tornadio socketconnection connection myrouter application tornado interface effective transport amount related transport library tornadio disclaimer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction acknowledgment message application application implementation capture different transport javascript tornadio library protocol available asynchronous request response unicode support possible original tornado tutorial myrouter tornadio tornado application flash policy tornadio information check communication application object full unicode performance example familiar version compatible transport protocol generator push service optional constructor handler python software application sockettornad example realtime transport directory tornado customized version socketserver tornado knowledge application performance framework tornadio information selectable tornadio tornadiorouter support support browser protocol myconnection tornadio tornadiorouter myconnection tornadio socketconnection connection myrouter application tornado interface effective transport related transport library", "pypi_keywords_clean": ""}, "renalreg/cornflake": {"git_readme_keywords": "python serializer deserialize validate python deserialize serialization library patient command copyright uk cornflake cornflake response registry license copyright", "git_description_clean": "a simple library for converting to and from python objects", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-mediagenerator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "important information experience support unnecessary javascript offline mediagenerator complete changelog coffeescript mediagenerator project incompatibility compressing", "pypi_keywords_clean": ""}, "/morbid": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-shell-plus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "datetime changelog something installation management command", "pypi_keywords_clean": ""}, "bninja/wac": {"git_readme_keywords": "define function default response convert restful library define actual configuration marshal filter block python version example friendly client resource server http client particular something information installation access request feature branch ideal", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "define function default python compatibility response convert restful library resourcecollection filter serialization define actual history require configuration marshal filter block python version example friendly client resource changelog history server particular something information installation formatting config request changelog access request feature branch pagination", "pypi_keywords_clean": ""}, "mozilla/pytest-mozwebqa": {"git_readme_keywords": "documentation mozwebqa following development", "git_description_clean": "mozilla web qa plugin for pytest", "git_keywords_clean": "", "pypi_description_keywords": "documentation mozwebqa following development", "pypi_keywords_clean": "py test pytest selenium saucelabs browserstack mozwebqa webqa qa mozilla"}, "samueldmq/infosystem": {"git_readme_keywords": "documentation infosystem infosystem readthedocs", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "adafruit/adafruit-pureio": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "PyO3/setuptools-rust": {"git_readme_keywords": "full multiple g exec binding build standard native build bool optional param version class rustextension docker container sematic version standard check build command setup inplace build rustextension nothing build otherwise cargo clean binding exec source filename linux cargo output compiler version default standard clean generate cargo rustc flags manylinux docker build extension strip strip release build executable param argument cargo param bool quiet final pathname detect inplace debug strip html py example default script generate python binding otherwise release setup py package param complete example supported python target build param console script bunch build process default strip example project bool debug clean standard args rustc pyo pack binding nobinding flags param output default binding binding rustc g configuration similar bool native cargo rustc release default single wheel rustextension class tomlgen github distribute python bdist wheel args quiet build binary clean command dictionary pyo binding cpython binding binding pyo executable inside python package cargo check build strip debug build build cargo param bool strip debug generate console extension possible check command bool script check version sematic build failure native param cpython compile python inside python build executable standard build check standard directory g cargo exec build information upload extra following command binding rustcpython", "git_description_clean": "setuptools plugin for rust support", "git_keywords_clean": "python rust setuptools", "pypi_description_keywords": "full multiple build standard exec binding native build bool optional param version class rustextension docker container sematic version standard check build command setup inplace build rustextension nothing build otherwise cargo clean binding exec source filename linux cargo output compiler version default standard clean generate cargo rustc flags manylinux docker build extension strip strip release build executable param project argument cargo param final pathname detect inplace debug strip html py example default script generate python binding otherwise release setup py package param complete example supported python target build param console script bunch build process default strip example project bool debug clean standard args rustc pyo pack binding nobinding flags param output default binding binding rustc g configuration similar successor bool native cargo rustc release default rustextension class tomlgen github distribute python bdist wheel args build binary clean command dictionary pyo binding cpython binding binding pyo executable inside python package cargo check build strip debug build build cargo param bool strip debug generate console extension possible check command bool script check version sematic build failure native param cpython compile python inside python build executable standard build check standard directory g cargo exec build information upload extra following command binding rustcpython", "pypi_keywords_clean": "distutils setuptools rust"}, "gijzelaerr/pymonetdb": {"git_readme_keywords": "monetdb python monetdb v pymonetdb documentation project installation copyright support documentation change depend compatible subject python official monetdb document mozilla public public license python monetdb information python python august monetdb platform driver restructuredtext replacement introduction pymonetdb", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "monetdb python monetdb v pymonetdb documentation project installation copyright support documentation change depend compatible subject python official monetdb document mozilla public public license python monetdb information python python august monetdb platform driver restructuredtext replacement introduction pymonetdb", "pypi_keywords_clean": ""}, "maxvitek/cleverbot2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cleverbot cleverbot cleverbot welcome usage python", "pypi_keywords_clean": ""}, "erikrose/parsimonious": {"git_readme_keywords": "trippable preview release recursion urlichs lucas streaming forward alternation operator readable version history multiple library untested extensible python lucas convenience method support canonical single interpretation superset understandable idiomatic factor infix version length memory optional expression subclass tighter custom presentation simpler tolerate whitespace helpful current position formal parameter lucas someone necessary ll subset version return example render expression object common codebase wouldn construct status everything ambiguous optimal efficiency visitor method expose badgrammar visitor advertising python shorter history switch default pymeta backward incompatible manipulation pypy horrific behavior support matching useless parsing everything escape parsing machine recompilation michael confidence anybody anyone constant practice several different matching representation familiar performance machinery vladimir evaluate useable preview compound exception hierarchy anonymous michael lookahead assertion parsimonious parsimonious frugal attribute deterministic recognition inversion unicode everything informative custom reference resolution lookahead parser python exception function tokengrammar allow unicode representation language generous somebody simple custom vm grammar construction forgiving syntax visitationerror convenient decorator bunch control framework parsing decision distinct parsimonious worthy moment python lambdas recursive presentation grammar balance grammar iteration grammar compilation automatic recompilation object identity syntax change python status original grammar extensibility instance arbitrary lookahead bursty distinction previous pijnu superfluous visitor symbol change decision sphinx streaming output standard python callthrough method production priority explicit dependency python support rough context judicious subset grammar compiler practical dialect grammar definition representative consistency support splitting readable unicode individual develop grammar optional argument pypy parsing resolution machinery custom parsing certain little anything processing coverage separation grammar example abstract syntax amazing grammar hierarchy rework complete d character result downside indentation sensitive immutable mapping possible applicable simple grammar parsing expression ambiguity stuff python edward grammar invalid future repeated exception message rewrite grammar gb markup advantage public usable python parsing exception python alpha quality benchmark notation parsimonious reporting definition syntax negative lookahead greedy something syntax reference successful recognition atomic iterability support python support harder experimental something useful initial following convenience mysterious minimalistic understandable idiomatic python ability behavior tolerate forward reference repetitive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "trippable preview release recursion urlichs lucas streaming forward alternation operator readable version history multiple library untested extensible python lucas convenience method support canonical single interpretation superset understandable idiomatic factor infix version length memory optional expression subclass tighter custom presentation simpler tolerate whitespace helpful current position formal parameter lucas someone necessary ll subset version example render expression object common codebase wouldn construct status everything ambiguous optimal efficiency visitor method expose badgrammar visitor advertising python shorter history switch default pymeta backward incompatible manipulation pypy horrific behavior support matching useless parsing everything escape parsing machine recompilation michael confidence anybody anyone constant practice several different matching representation familiar performance machinery vladimir evaluate useable preview compound exception hierarchy anonymous michael lookahead assertion parsimonious parsimonious frugal attribute deterministic recognition inversion unicode everything informative custom reference resolution lookahead parser python exception function tokengrammar allow unicode representation language generous somebody simple custom vm grammar construction forgiving syntax visitationerror convenient decorator bunch control framework parsing decision distinct parsimonious worthy moment python lambdas recursive presentation grammar balance grammar iteration grammar compilation automatic recompilation object identity syntax change original grammar extensibility instance arbitrary lookahead bursty distinction previous superfluous visitor symbol change decision sphinx streaming output standard python callthrough method production priority explicit dependency python support rough context judicious subset grammar compiler practical dialect grammar definition representative consistency support splitting readable unicode individual develop grammar optional argument pypy parsing resolution machinery custom parsing certain little anything processing coverage separation grammar example abstract syntax amazing grammar hierarchy rework complete d character result downside indentation sensitive immutable mapping possible applicable simple grammar parsing expression ambiguity stuff python edward grammar invalid future repeated exception message rewrite grammar gb markup advantage public usable python parsing exception python alpha quality benchmark notation parsimonious reporting definition syntax negative lookahead greedy something syntax reference successful recognition atomic iterability support python support harder experimental something useful initial convenience mysterious minimalistic understandable idiomatic python ability behavior tolerate forward reference repetitive", "pypi_keywords_clean": "parse parser parsing peg packrat grammar language"}, "timedata-org/loady": {"git_readme_keywords": "python loady basic usage", "git_description_clean": "dynamically load python libraries from git repositories", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "git"}, "Arachnid/qrencode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "qrencode library", "pypi_keywords_clean": ""}, "lukearno/static": {"git_readme_keywords": "application moustache templating install happy hacking context template", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application moustache templating install happy hacking context template", "pypi_keywords_clean": ""}, "caktus/django-sticky-uploads": {"git_readme_keywords": "default alternative license android firefox django sticky android documentation blackberry broswer primary development project experience support following desktop background available version interested documentation additional python firefox internet enhanced necessary android additional documentation license django enhanced experience internet explorer", "git_description_clean": "enhanced file input widget for django which uploads the file in the background and retains value on form errors", "git_keywords_clean": "", "pypi_description_keywords": "default alternative license android firefox django sticky android documentation blackberry broswer primary development project experience support following desktop background available version interested documentation additional python firefox internet enhanced necessary android additional documentation license django enhanced experience internet explorer", "pypi_keywords_clean": ""}, "/mongogeneric": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lord63/pyspin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "example folder contribute terminal spinner pyspin license welcome install request interesting spinner version example status python decorator pyspin", "pypi_keywords_clean": "terminal spin spinner"}, "DatapuntAmsterdam/datapunt-authorization-levels": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "OriHoch/python-hebrew-numbers": {"git_readme_keywords": "python python library conversion gematria installation gematria contribution special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python library conversion gematria installation gematria contribution special", "pypi_keywords_clean": ""}, "/ffc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty bitbucket status automated useful project merchantability command discrete operator fitness coverage efficient software foundation software corresponding discrete description coverage status general information documentation documentation atlassian bamboo status license warranty program compiler element variational particular purpose particular bilinear documentation status", "pypi_keywords_clean": ""}, "brentp/aclust": {"git_readme_keywords": "numeric sentiment sentence default implementation linkage attempt dimensional multiple distance presence position function signature install available memory example python important genomic feasible agglomerative clustering clustering algorithms modified version clustering methylation function infrastructure complexity correlation agglomerative levenshtein distance integer parameter object interface request association", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "numeric sentiment sentence default implementation linkage attempt dimensional multiple distance presence position function signature install available memory example python important genomic feasible agglomerative clustering clustering algorithms modified version clustering methylation function infrastructure complexity correlation agglomerative levenshtein distance integer parameter object interface request association", "pypi_keywords_clean": "bioinformatics cluster"}, "jrderuiter/pybiomart": {"git_readme_keywords": "documentation documentation pythonic biomart biomart interface dataset access server interface available pybiomart functionality similar", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation pythonic biomart biomart interface dataset access server interface available pybiomart functionality similar", "pypi_keywords_clean": ""}, "stephenmcd/django-shotgun": {"git_readme_keywords": "standard django shotgun loading effective field response urls snapshot contrast project extra option other fixture django application database project module approach django installation process entire django valid http directory http status app django shotgun project shotgun conjunction ability behaviour current project method source following command management command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django shotgun loading effective field response urls snapshot contrast project extra option other fixture django application database project module approach django installation process entire django valid http directory http status app django shotgun project shotgun conjunction ability behaviour current project method source following command management command", "pypi_keywords_clean": ""}, "rik0/paramunittest": {"git_readme_keywords": "package standard unittest unittest package parametrized testcase package parametrized", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package standard unittest unittest package parametrized testcase package parametrized", "pypi_keywords_clean": "unittest"}, "whtsky/werobot": {"git_readme_keywords": "collective alt collective werobot alt sponsor werobot mit occontributorimage alt werobot alt world hello project ocsponsor alt sponsor website ocsponsor collective occontributorimage ocsponsor ocsponsor open collective ocbackerimage link sponsor ocsponsor occontributorimage ocbackerimage alt ocsponsor ocbackerimage hello world", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collective alt collective werobot alt sponsor werobot mit occontributorimage alt werobot alt world hello project ocsponsor alt sponsor website ocsponsor collective occontributorimage ocsponsor ocsponsor open collective ocbackerimage link sponsor ocsponsor occontributorimage ocbackerimage alt ocsponsor ocbackerimage hello world", "pypi_keywords_clean": "wechat weixin werobot"}, "/brian2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different approach motivation simulator programming documentation successor available generation framework extensible", "pypi_keywords_clean": "computational neuroscience simulation"}, "Zimbra-Community/python-zimbra": {"git_readme_keywords": "cpython cpython wrong preauth password authenticate zimbra server multiple library folder pypy pypy request id documentation warning certain dictionary preauth method specific request needed authentication dictionary format setup elaborate message return administration console batch installation zimbra preauth complex parameter sanity admin console account dynamic authenticate parameter admin supported request fault result fault catalogue installation content framework cpython pypy tutorial docs testsuite level access problematic xml testing python id authentication purpose wrong password pypy python python zimbra backend response specific information communication coverage please failure caution release password environment dictionary config travis specific account authenticate module official response id overview authenticate implementation current console zimbra fault message possible return value configure access zimbra successful documentation generator compatible future inside authenticate public heavy preauth generator continuous integration zimbra cpython subdirectory communication object information query", "git_description_clean": "core framework for easily sending requests to the zimbra soap api", "git_keywords_clean": "", "pypi_description_keywords": "information visit preauth generator backend zimbra", "pypi_keywords_clean": ""}, "perseas/pgdbconn": {"git_readme_keywords": "application minimal information license pgdbconn software perseas rollback pgdbconn pgdbconn offshoot psycopg connection execute dbconnection example", "git_description_clean": "object oriented layer over psycopg to connect and interact with postgres databases", "git_keywords_clean": "python postgres", "pypi_description_keywords": "application minimal information license pgdbconn software perseas rollback pgdbconn pgdbconn offshoot psycopg connection execute dbconnection example", "pypi_keywords_clean": ""}, "/zbase32": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliant alternate", "pypi_keywords_clean": ""}, "/aiozmq": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "serviceclosederror zmqprotocol implement message pubsub implementation pushpull msgpack implementation support counting loopless transport libzmq version process cancellation introduce zmqtransport support library compatible annotaion documentation endpont plural exclude monitoring zmqtransport example exception implement zmqeventlooppolicy unstable execution change global asyncio specific buffer zmqtransport function optional submodule pyzmq asyncio default process asyncio integration transport eventless transport context exception implement transport implementation function default protocol implement connection asyncio msgpack change zmqeventloop inhereted trsansport process asyncio lookup implement zmqeventloop zmqeventlooppolicy introduce request license aiozmq implement monitoring", "pypi_keywords_clean": ""}, "petertodd/python-bitcoinlib": {"git_readme_keywords": "sphinx documentation sphinx package htmlcov subdirectory useful consensus critical addition instance distinction transaction ctransaction cblockheader immutable future endian cblockheader nvalue available readme coverage python naming example python bitcoinlib protocol wladimir everything consensus codebase ctransaction multiple python ground functionality bitcoin protocol conversion structure everything directory system subdirectory documentation satoshi codebase naming convenience following effort instance python global variable python library bitcoin approach ctxout protocol transaction output cmutabletransaction interface documentation sphinx python sphinx restructuredtext testnet mainnet cblock endianness endianness gotchas module import satoshi sourcecode mutable swiss", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sphinx documentation sphinx package interface bitcoin little endian htmlcov subdirectory useful consensus critical addition instance distinction transaction ctransaction cblockheader immutable future cblockheader nvalue available readme coverage python naming example python bitcoinlib protocol wladimir everything consensus codebase ctransaction multiple python ground functionality bitcoin protocol conversion structure everything directory system subdirectory documentation satoshi codebase naming convenience following effort instance python global variable python library bitcoin approach ctxout protocol transaction output cmutabletransaction interface documentation sphinx python sphinx restructuredtext testnet mainnet cblock endianness endianness gotchas module import satoshi sourcecode mutable swiss", "pypi_keywords_clean": "bitcoin"}, "/avocado-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "autotest activate simple regular avocado available installation golang master branch information collection install avocado install documentation build remote machine system information debian interested docker container avocado installation avocado avocado documentation avocado functionality avocado package report stability unittest pattern framework avocado virtual environment development version preferable enterprise linux avocado framework source error python virtual python avocado runner propagate python virtualenv executable additional py aborttest concise avocado project example plugin propagate installation method pypi repository status sh posix machine execution language remote report plugin vm execution single command github repository avocado remote execution repository master execute subcommand expressive automated choice configuration dnf install python installation execution varianter standard python fedora instrumented checkout brief glib package support regular current source linux avocado release combinatorial virtualization specific powerful framework please native example avocado package repository execution runner enable avocado interrupt cancel switch stability thread possible actual experience install python output available accessible such libvirt vm development environment execution python opensuse everything dnf directory standard repository package management docker command avocado following command isolation avocado develop avocado", "pypi_keywords_clean": ""}, "/avro-json-serializer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "brandon-rhodes/de405": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package position python accurate service similar ephemeris ephemeris mission enough propulsion laboratory observatory accuracy respect interested astronomical almanac example", "pypi_keywords_clean": ""}, "castelao/pyargo": {"git_readme_keywords": "package license documentation software bsd documentation bsd license", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package software license documentation documentation history release", "pypi_keywords_clean": "argo oceanography"}, "caesar0301/treelib": {"git_readme_keywords": "alistair kromkamp python algorithm ynadex documentation implementation performance traversal holgerbast chenxm kromkamp brettkromkamp library installation treelib public primary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "structure implementation", "pypi_keywords_clean": "data structure tree tools"}, "BoboTiG/mss": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python dependency benefit software platform multiple compliant computer vision screen monitor multiple screen block python module installation", "pypi_keywords_clean": "screen"}, "/django-postman": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib expanded intermediary recipient writing default optional exchange recipient exchange multiple recipient response notification default directive welcome asynchronous operation subscription simplified optional additional addition authenticated instance possible business provider support collection configuration additional available presentation compact recipient management compose message subject moderator message notification recipient possible moderation conversation application specific recipient management command recipient unwanted archived exchange autocomplete recipient summary cleanup management representative recipient subject deleted optional recipient instance subscriber subscriber original message visible undisclosed postman documentation quickstart contribution visitor address access sortable beneficial specific purpose django postman", "pypi_keywords_clean": "django messages messaging email moderation"}, "buckket/twtxt": {"git_readme_keywords": "minimal hoster simple human pointing aiohttp community account registry internet asynchronous gibberish master branch active human readable freenode license microblogging platform documentation command unique timeline accessible gopher closed minimalist microblogging gopher shroom coverage identity tweetnest python package license status format patched version feedreader channel directory xmpp format specification converter branch coverage coverage license interface registry server bundled license microblogging service convenient official beautiful command twitter documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "minimal hoster active twtxt simple human channel twtxt pointing aiohttp twtxt gateway internet asynchronous gibberish master branch twtxt converter human readable freenode license twtxt microblogging platform account twtxt documentation twtxt license command unique timeline accessible gopher closed minimalist microblogging coverage identity tweetnest python package license twtxt format status format patched version feedreader directory format specification converter twtxt registry twtxt branch coverage community twtxt coverage license interface bundled license microblogging service convenient official beautiful command twitter documentation status", "pypi_keywords_clean": "microblogging twitter twtxt"}, "/pinax-lms-activities": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute ecosystem interest community inclusive python django difficult recommend learning conduct possible contribute section construction question actual concrete contribution collection example twochoicequiz documentation distractor twochoicequiz reusable django interactive available github programmer example django contributing framework number pinaxproject overview concrete activity session individual concrete mechanic g student algorithm harassment activity activity activity different platform correct starter project retrieval everyone abstract twitter", "pypi_keywords_clean": ""}, "hamidfzm/flask-htmlmin": {"git_readme_keywords": "pipenv javascript deployment config minify exemption application installation repository example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask htmlmin", "pypi_keywords_clean": ""}, "/bob-ip-base": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package installation complete learning toolbox processing package contact signal processing install software package machine learning installation mailing development contact", "pypi_keywords_clean": ""}, "rtfd/sphinxcontrib-dotnetdomain": {"git_readme_keywords": "package toctree maxdepth autoapi autoapi index functionality sphinx documentation maxdepth sphinx documentation status", "git_description_clean": "a sphinx domain for net languages", "git_keywords_clean": "", "pypi_description_keywords": "net domain domain domain", "pypi_keywords_clean": ""}, "/django-meio-easytags": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "renderer signature python easynode renderer method template variable optional example easylibrary django", "pypi_keywords_clean": ""}, "/celery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "replica replication broker simple celery availability license license tracker download source integration celery async rabbitmq single machine wheel pyversion multiple minimal funding pypy pypy addition framework integration command version rhubarb rabbitmq amqp python celery product please scaling celery mailing primary primary single celery status coverage necessary expandtab tabstop connection development version experimental support complete overview target wheel active friendly reference celery group target ocbackerbadge package index syntax celery system celery please target pyversion project rabbitmq py database network language interoperability celery development important software tutorial teaching support microsoft feature complete wheel target custom python pypy sqlalchemy framework generous language myriad development celery message broker celery message snapshot latency js previous configuration worker py librabbitmq website celery channel status target millisecond github regular failure flexible target pyimp celery process license wheel target coverage coverage license horizontal scaling collective target section celery documentation python package celery future minimum platform celery worker celery build status mechanism pyversion pyimp optimized reason commercial product available pyimp ocbackerbadge ocsponsorbadge version python friendly community ocbackerbadge ocsponsorbadge celery python version celery support python license target following celery installation primary replica distribution directory tabstop shiftwidth documentation documentation celery version welcome protocol installation installation sqlite channel", "pypi_keywords_clean": "task job queue distributed messaging actor"}, "/sandboxlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "codethink license license simple ybd environment baserock setuid multiple library abstraction development original source container single adaptation sandboxing functionality python program ybd build pypy build application sandboxing contributor agreement useful generic program progress runnable building block copyright project network software security system android licensing language possible future operating system request impossible purpose reading concensus future ybd sandboxlib baserock license chroot current present support language feature reference container runtime default cpython environment system mobile useful building schroot python selinux python specific systemd nspawn cpython python python runtime specific python language desktop application build specific sandboxing sandbox sandboxing libsandbox complete isolation nspawn security attempt chroot build environment documentation baserock project nspawn relationship xdg usable python sandboxing pypy different platform c library desktop project schroot sandboxlib library", "pypi_keywords_clean": ""}, "trivio/splicer": {"git_readme_keywords": "procedural traditional declarative database appropriate disparate extension various familiar advantage multicorn bigquery sophisticated example", "git_description_clean": "splicer adds relation querying sql to any python project", "git_keywords_clean": "sql database python", "pypi_description_keywords": "procedural traditional declarative database appropriate disparate extension various familiar advantage multicorn bigquery sophisticated example", "pypi_keywords_clean": ""}, "/django-icons-tango": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib project unlimited lifetime struck kind commercial project pip add license lgpl code bug control installation crystal origin static url awesome lightning control url bug tracker domain crystal way tango url pip install bandwidth consumption tango installation tango origin similar install django crystal crystal installation pip twitterjoy app url static several wtfpl lgpl domain icojoy backtopixel installation url crystal order twitterjoy installation usage install django tango app icojoy app available url free web control license public public domain non commercial use control origin part twitterjoy url control app add app backtopixel url backtopixel origin mit bsd consumption usage origin license icojoy origin tracker license onebit installation ass commercial domain mit app name bsd wtfpl apps icojoy url backtopixel app icojoy installation twitterjoy origin onebit origin skinny pig source code onebit app install package attribution", "pypi_keywords_clean": ""}, "GochoMugo/firebasin": {"git_readme_keywords": "implementation firebasin firebase export asynchronous python helper information source license documentation version python available development status python development change callback github feature handler request incase started firecall python helper library following forfuture handler function firebase helper export firebase updated method firebase status stable asynchronousity", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation implementation complete firebasin copyright", "pypi_keywords_clean": "firebase firebasin rest api"}, "/stemming": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dbader/jack": {"git_readme_keywords": "package project release glossary command directory something dbader request release roadmap continuous integration extension travisci continuous github integration changelog", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project release glossary command directory something request release roadmap continuous integration extension travisci continuous github integration changelog", "pypi_keywords_clean": "jack log logs logging query search"}, "choldgraf/sphinx-copybutton": {"git_readme_keywords": "g copybutton small copybutton documentation sphinx extension configuration small sphinx sphinx copybutton customization right installation little", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "g copybutton small copybutton documentation sphinx extension configuration small sphinx sphinx copybutton customization right installation little", "pypi_keywords_clean": "documentation css copy code cells"}, "python-tap/tap-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor debian packaging march initial provide plugin output version black chinese syntax header ouput python packaging switch january add german standard way single output pytest document october distribution support debian syntax highlighter python tappy version output project add optional september add packaging standard december provide developer documentation russian perform output stream command provide syntax tappy version default behavior available spanish tappy internationalized standard version april update version python version alternative shorter coverage python stream add format viable arabic dutch french format version continuous integration way follow japanese tappy follow tappy pytest plugin march version compliant g sphinx specification version add support august provide french italian python wheel programmatic handling initial release runner version pipenv python perform portuguese version protocol development switch pytest tappy development plugin diagnostic output pypy version perform continuous consumer optional method disable directive", "pypi_keywords_clean": "tap unittest"}, "mardix/paginator": {"git_readme_keywords": "database connection simple twitter bootstrap paginator seturl paginator paginator paginator construct mardix version ok default paginator other paginator x construct voodoo paginator setprevnexttitle query please current url paginator getend simple class someone html compatible paginator getstart num simple keyword num paginator toarray variation example directory array paginator setfirstlasttitle paginator getnextpageurl normal url pagepattern composer x paginator last title array similar bootstrap framework number pattern size voodoo paginator getperpage geturi voodoo mit author version x compatible next voodoo pagination paginator request uri pattern alternative paginator getpage end array voodoo url require key last array friendly url next title address bar sql query voodoo paginator pagination url paginator license number voodoo formatted html license mit html previous install paginator json file application long following format paginator object author mardix total paginator getpageurl url voodoo simple example paginator geturi prev pagination navigation framework install paginator count pagination toarray paginator setpage file composer paginator tohtml easy first navigation size number paginator json create something create pagination following paginator getprevpageurl require composer json please refer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pagination"}, "nir0s/distro": {"git_readme_keywords": "package reliable aforementioned predecessor function complete description behavior inclusive recommended replacement readable alternative implementation distribution support distribution original function development support documentation command output available additional package manager several general merriment platform information reference number functionality necessary precedence welcome interface installation installation access specific contribution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package reliable aforementioned predecessor function complete description behavior inclusive recommended replacement readable alternative implementation distribution support distribution original function development support documentation command output available additional package manager several general merriment platform information reference number functionality necessary precedence welcome interface installation installation access specific contribution", "pypi_keywords_clean": ""}, "unclechu/radio-class": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "backbone implementation", "pypi_keywords_clean": "events bus library radio"}, "/pymill": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sdelements/django-security": {"git_readme_keywords": "package django middleware associate password required sessionexpirypolicymiddleware required stricttransportsecuritymiddleware careful mitigating implementation enforce browser cspbuilder django pickleserializer security documentation development django default required django security installation insecure autodetection application recommended configuration middleware protection recommended stricttransportsecuritymiddleware enforce analysis response recommended configuration documentation disable framing django application database required pppolicymiddleware description configuration available request example security hardening github jsonserializer default contentnosniff disable continuous important confidential browser donottrack contentsecuritypolicymiddleware recommended optional violation minimum configuration configuration contentnosniff required noconfidentialcachingmiddleware attribute password description connection xssprotectmiddleware enforce repository recommended middleware description reception required mandatorypasswordchangemiddleware loginrequiredmiddleware compact pp optional xssprotectmiddleware disable plaintext optional xframeoptionsmiddleware installation install xframeoptionsmiddleware disable default jsonserializer request facility required donottrackmiddleware decorator django security donottrack preference security repository", "git_description_clean": "a collection of models views middlewares and forms to help secure django project", "git_keywords_clean": "", "pypi_description_keywords": "package django middleware associate password required sessionexpirypolicymiddleware required stricttransportsecuritymiddleware careful mitigating implementation enforce browser cspbuilder django pickleserializer security documentation development django default required django security installation insecure autodetection application recommended configuration middleware protection recommended stricttransportsecuritymiddleware enforce analysis response recommended configuration documentation disable framing django application database required pppolicymiddleware description configuration available request example security hardening github jsonserializer default contentnosniff disable continuous important confidential browser donottrack contentsecuritypolicymiddleware recommended optional violation minimum configuration configuration contentnosniff required noconfidentialcachingmiddleware attribute password description connection xssprotectmiddleware enforce repository recommended middleware description reception required mandatorypasswordchangemiddleware loginrequiredmiddleware compact pp optional xssprotectmiddleware disable plaintext optional xframeoptionsmiddleware installation install xframeoptionsmiddleware disable default jsonserializer request facility required donottrackmiddleware decorator django security donottrack preference security repository", "pypi_keywords_clean": ""}, "escolarea/sphinxapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pythonpath aforementioned project alternative django", "pypi_keywords_clean": ""}, "/zodb3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "zodb distribution zodb persistent information change history zodb installable default respective project compatibility porting status package version zodb release zodb project compatible", "pypi_keywords_clean": ""}, "JoshuaSkelly/twitchobserver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license cookbook documentation whenever readthedocs handful further observer twitchobserver twitch observer installation realtime straightforward context", "pypi_keywords_clean": "twitch tv"}, "vmalloc/weber-utils": {"git_readme_keywords": "overview library project licence", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overview library project licence", "pypi_keywords_clean": ""}, "/glpk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "programming functionality access", "pypi_keywords_clean": ""}, "/screenlets": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "MostAwesomeDude/java-random": {"git_readme_keywords": "random number random implementation module nothing random module question standard installation standard specification straightforward number generation robustness comment minecraft predictability program generator available unobvious generation algorithm specific particular generator official simplest superior", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "random number random implementation module nothing random module question standard installation standard specification straightforward number generation robustness comment minecraft predictability program generator available unobvious generation algorithm specific particular generator official simplest superior", "pypi_keywords_clean": ""}, "Azure/azure-storage-nspkg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python storage storage namespace microsoft namespace package necessary bundle package end", "pypi_keywords_clean": ""}, "/apachelog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "apache access server single log format access log other common log apache log", "pypi_keywords_clean": "apache log parser"}, "praekelt/django-likes": {"git_readme_keywords": "setting current python django default behaviour described configure question project liking secretballot installation django handler anonymous connect facebook django django django secretballot installation install interface template raising", "git_description_clean": "django app providing view interface to django secretballot", "git_keywords_clean": "python django django application", "pypi_description_keywords": "compatibility setting current changelog default behaviour described inclusion multiple jonathan bydendyk configure project support present documentation liking sephton jonathan secretballot installation handler dependency secretballot anonymous connect alternative thereby facebook question praekelt spambot initial release ability compatibility refactor installation install interface specific redirect initial template middleware google raising", "pypi_keywords_clean": ""}, "edx/edx-search": {"git_readme_keywords": "index search level operation value override way multiple safety resort app django class excerpt scalar value matching numeric important notice phrase necessary google unspecified searchengine interface textual content edx demox searchresultprocessor searchresultprocessor multivalue vector value record subdictionary override object textual match search string lms iterable array search app cohort member group first result predicate notice courseware search urls py complete search edx platform operation matching information http endpoint id edx only tuple dictionary location fashion edx search course django application static method course id search client document string number filter field searchfiltergenerator searchfiltergenerator access g http interface muiltiple namespace search textual behavior specific django setting purpose app view notation level optional keyword search result matching field abstract object desired chocolate certain document similar situation search urls multivalue field field value found absolute python property search value copy filtering client app consider search context particular object important desireable match field search witin certain access search example searchengine popular way perform search existence elasticsearch google certain desired consider special calculate implementation result search query specific index keyword parameter search engine search perform combination undefined behavior underlying search future available relative content search python additional facility indexed object upper bound only certain index field dictionary mocksearchengine only http following filter dictionary override class default filter count visible search matching client result object search application query specific word", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-configfield": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bleeding frozen django schema dependence database installation django configfield flexible config initial version install django jsonfield template jsonfield version version repository error function development subclass", "pypi_keywords_clean": ""}, "p1c2u/wykop-sdk": {"git_readme_keywords": "index search metoda profile unblock uycie instalacja unvote entry entry unvote commented posiada podstawow jeeli znalaze stream index favorites index posiada nastpujce odpowiedzi logiczny wykonaniem metody entry comment deletecomment delete profile observe pm conversationslist profile digged conversation proste profile search filtrowanie odpowiedzi observe observe poprzez artybuty comment deletecomment sdk poprzez repozytorium uwierzytelnienie wersji posiada zainstalowa bezporednio cancel cancel unblock profile typy odpowiedzi obiektw np metoda observe related comment unvote zmienia popular upcoming dekodowanie danych profile block posiada wbudowane wykop posiada upcoming profile login delete entry bury bury wywoa tylko kluczami entry addcomment obiekt np moesz pobra podstawowej metody unobserve unobserve python wykop wbudowane metody wersja wykop przykadowe uycie nastpujco gdzie zasobu index zdefiniowane metody bdy lub instalacja zalecana delete delete unvote unvote danych wykop wsparciem czenie metody biblioteka biblioteka posiada deleteconversation delete uwierzyteni przykadowe artybuty filtrowanie problem zgo hashtags metody metoda moliwoci dostpu metoda zasobu delete comment skorzysta podstawowej zasobu period typ zasobu delete conversation period parametry unobserve profile comment plus wersji sdk entry delete aplikacj generowanie bdzie przedstawia connect moliwe typu sownikowego zgaszanie bdw search index dokumentacji wykop appkey parametry plus comment implementacja html przykad gdzie favorites output clear block profile connect dekodowanie implementacj python uwierzytelnienie dziaa generowanie linku connect odpowiedzi nieudokumentowana metoda lub masz comment editcomment profile obiekt metoda proste observatory plus plus profile index metody appkey related plus obiekt odpowiedzi search search logiczny np metoda sdk uytkownik zalogowany strike class bdw jeeli uycie metody uycie zdefiniowane message deleteconversation np metoda wersji favorite favorite nieudokumentowana wersja wykop sdk mywykop index mirko tenji login favorites przykad dokumentacji index metoda wykop connect strike biblioteka wyrniamy typy bezporednio repozytorium parametrw metody nastpujce wbudowane uytkownika aplikacj upcoming mywykop tenji bugtracker uwierzytelnienia dziaa tylko class strike popular python sdk conversation upcoming profile commented wersja zdefiniowane index commented digged profile favorites instalacja wykop plus related comment delete conversation sendmessage month wykop favorites search profile unobserve profile added observe profile wykonywa dziaania entry odpowiedzi wyrniamy alternatywnie moesz", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "index search metoda profile unblock uycie instalacja unvote entry entry unvote commented posiada podstawow jeeli znalaze stream index favorites index posiada nastpujce odpowiedzi logiczny wykonaniem metody entry comment deletecomment delete profile observe pm conversationslist profile digged conversation proste profile search filtrowanie odpowiedzi observe observe poprzez artybuty comment deletecomment sdk poprzez repozytorium uwierzytelnienie wersji posiada zainstalowa bezporednio cancel cancel unblock profile typy odpowiedzi obiektw np metoda observe related comment unvote zmienia popular upcoming dekodowanie danych profile block posiada wbudowane wykop posiada upcoming profile login delete entry bury bury wywoa tylko kluczami entry addcomment obiekt np moesz pobra podstawowej metody unobserve unobserve python wykop wbudowane metody wersja wykop przykadowe uycie nastpujco gdzie zasobu index zdefiniowane metody bdy lub instalacja zalecana delete delete unvote unvote danych wykop wsparciem czenie metody biblioteka biblioteka posiada deleteconversation delete uwierzyteni przykadowe artybuty filtrowanie problem zgo hashtags metody metoda moliwoci dostpu metoda zasobu delete comment skorzysta podstawowej zasobu period typ zasobu delete conversation period parametry unobserve profile comment plus wersji sdk entry delete aplikacj generowanie bdzie przedstawia connect moliwe typu sownikowego zgaszanie bdw search index dokumentacji wykop appkey parametry plus comment implementacja html przykad gdzie favorites output clear block profile connect dekodowanie implementacj python uwierzytelnienie dziaa generowanie linku connect odpowiedzi nieudokumentowana metoda lub masz comment editcomment profile obiekt metoda proste observatory plus plus profile index metody appkey related plus obiekt odpowiedzi search search logiczny np metoda sdk uytkownik zalogowany strike class bdw jeeli uycie metody uycie zdefiniowane message deleteconversation np metoda wersji favorite favorite nieudokumentowana wersja wykop sdk mywykop index mirko tenji login favorites przykad dokumentacji index metoda wykop connect strike biblioteka wyrniamy typy bezporednio repozytorium parametrw metody nastpujce wbudowane uytkownika aplikacj upcoming mywykop tenji bugtracker uwierzytelnienia dziaa tylko class strike popular python sdk conversation upcoming profile commented wersja zdefiniowane index commented digged profile favorites instalacja wykop plus related comment delete conversation sendmessage month wykop favorites search profile unobserve profile added observe profile wykonywa dziaania entry odpowiedzi wyrniamy alternatywnie moesz", "pypi_keywords_clean": ""}, "eldarion/eventlog": {"git_readme_keywords": "simple update jsonfield supported django python django release history string useful recommend question convention reusable django version programmer diagnostic support convert timestamp manager related object history contribute parameter method timestamp update everyone conduct connect eventlog overview requirement overview supported jsonfield requirement default ecosystem thumb inclusive documentation installation contribute section argument pusher integration license standardize collection fk wheel release database included compatible performance example enough g content framework number python documentation signal custom description function harassment activity installation install argument optional interest community django python receiver concrete contribution django jsonfield eldarion github coverage python support eventlog contributing property update initial release asynchronous supported enough gfk starter project templatetag update django compatibility package business intelligence template fragment anything switch twitter pinaxproject migration change license copyright python source platform information ability configuration update object interface integration support jsonfield started", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project eventlog documentation documentation activity diagnostic business intelligence commercial support database interface asynchronous documentation eldarion", "pypi_keywords_clean": ""}, "michael-lazar/mailcap-fix": {"git_readme_keywords": "package mailcap short compatibility jpeg entry python travis tracker block field behavior ghz wildcard mailcap standard library possible addition present python ubuntu backport first block python mailcaplong compatability installation order version travis example mailcap mailcap other mailcap whitelist number handle windcard python summary mailcapshort library implementation precedence issue library module entry python standard official", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package mailcap short compatibility jpeg entry python travis tracker field behavior ghz wildcard pypi python mailcap standard library possible addition python standard previous present python ubuntu backport first block python mailcaplong compatability installation order version travis example mailcap mailcap other mailcap whitelist number m handle windcard mailcapshort library implementation precedence library module entry block", "pypi_keywords_clean": "mailcap"}, "cloudpipe/cloudpickle": {"git_readme_keywords": "default ecosystem standard library possible supported specific environment picloud instance lambda lambda expression project network available history dedicated version installation audience release function cluster jupyter notebook current version interface cloudpickle regression", "git_description_clean": "extended pickling support for python objects", "git_keywords_clean": "", "pypi_description_keywords": "default ecosystem standard library possible supported specific environment picloud instance lambda lambda expression project network available history dedicated version installation audience release function cluster jupyter notebook current version interface cloudpickle regression", "pypi_keywords_clean": ""}, "/satori-sdk-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "gciotta/jsonrpc-requests": {"git_readme_keywords": "python compatible package compliance server jsonrpc simple nested method client library compact nested block python various full support python notification client implementation coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python compatible package compliance server jsonrpc simple nested method client library compact nested block python various full support python notification client implementation coverage", "pypi_keywords_clean": "json rpc requests"}, "QualiSystems/quali-testing-helpers": {"git_readme_keywords": "quali test", "git_description_clean": "helpers and utilities to use for test code", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "testing unitests utilities"}, "ccnmtl/django-munin": {"git_readme_keywords": "database performance simple metric anything regular django useful insert select django application included available performance number django python simpler server select delete authentication likely pretty generic context directory something password custom various function couple information performance testing symlink parameter config following pattern plugin access appropriate decorator", "git_description_clean": "django application for simple munin integration", "git_keywords_clean": "", "pypi_description_keywords": "application munin", "pypi_keywords_clean": ""}, "richardkiss/pycoin": {"git_readme_keywords": "private derivation underlying information careful syntax private readable useful readthedocs subkey library handful multisig utility possible support libsecpk validation transaction present command network available further information verification signing unsigned partial signing object everything public python cryptocoin important exponent m testnet bitcoin protocol someone bitcoin mainnet environment flush various binary descendent example bitcoin warning signature information richardkiss complexity bitcoin integer network object environment variable access protocol documentation particular network opposite block pycoinnet corresponding address", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "williballenthin/python-pyqt5-vstructui": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyqt vstruct", "pypi_keywords_clean": ""}, "/git-sweep": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default master working directory useful master branch neighborhood development happy project confirmation prompt python license grammar command prompt release license github answer feature python branch release option repository march buildout initial release vincent driessen different cleanup added request problem certain current working", "pypi_keywords_clean": "git maintenance branches"}, "ebeweber/flake8-mutable": {"git_readme_keywords": "definition hitchhiker motivation explanation manifest installation unexpected", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "definition hitchhiker motivation explanation manifest installation unexpected", "pypi_keywords_clean": "flake mutable arg kwarg"}, "LionelAuroux/pyrser": {"git_readme_keywords": "grammar system documentation epitech available pedagogic purpose module bnf toolbox class example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyrser documentation markdown available module pyrser pyrser", "pypi_keywords_clean": "parse parser parsing peg packrat grammar language"}, "/grizzled-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python grizzled utility different general", "pypi_keywords_clean": ""}, "/pyobjc-framework-dictionaryservices": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "use deprecated", "pypi_keywords_clean": "pyobjc dictionaryservices"}, "saj/nagioscheck": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administrator framework development pynagioscheck", "pypi_keywords_clean": ""}, "/dxlclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "opendxl compliance fabric overview documentation feedback exchange copyright installation development version", "pypi_keywords_clean": "opendxl dxl mcafee client"}, "glottobank/newick": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python newick object python package parallel newick python factory", "pypi_keywords_clean": ""}, "edsu/microdata": {"git_readme_keywords": "htmllib python pilgrim chapter command example license microdata microdata available utility library lifting", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "seomoz/shovel": {"git_readme_keywords": "orphan keyword support command modularity shovel modularize machine keyword helpful branch updating clarity flags motivation unclear behavior bonus default working directory project unambiguous syntax modification additional example equivalent number variable number completion function interface function philosophy issue shovel server coverage information convenient decorator intuitive nuff availble switch shovel support staff shovel shovel current behavior presentation operational available command expected behavior please common organization specificity powerful browser access specific function speaking module little current working repos complete shovel campfire second weekend possible utility argparse documentation positional failing accessible change exception original version python everything input flags meaning script complete following information different welcome client global namespace extra talkative campfire", "git_description_clean": "rake for python", "git_keywords_clean": "", "pypi_description_keywords": "execute", "pypi_keywords_clean": "tasks shovel rake"}, "/pyth": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support relative design pythonpath python different common italic openoffice unsupported information support output markup underlined python unittest python conversion directory architecture unittest module python script xhtml specific bullet littler layout", "pypi_keywords_clean": ""}, "phn/jdcal": {"git_readme_keywords": "python jd mjd example gregorian reverse jeffrey percival second number fractional modified julian valid install jdcal jdcal tpm world separate julian license install julian calendar relevant calendar python installation calendar julian block python excellent library proleptic example bsd number inspiration latter beginning domain maximum precision calendar tpm jeffrey gregorian calendar maximum flexibility double julian function python julian python gregorian algorithm october function information different above manner amount module precision", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python jd mjd example gregorian reverse jeffrey percival second number fractional modified julian valid install jdcal jdcal tpm world separate julian license install julian calendar relevant calendar python installation calendar julian block python excellent library proleptic example bsd number inspiration latter beginning domain maximum precision calendar tpm jeffrey gregorian calendar maximum flexibility double julian function python julian python gregorian algorithm october function information different above manner amount module precision", "pypi_keywords_clean": ""}, "adafruit/adafruit-bme280": {"git_readme_keywords": "download adafruit sensor source hardware barometric pressure library restart library redistribution uncompressed folder tutorial local system system adafruit ladyada sensor support adafruit folder adafruit button adafruit check library installation arduinosketchfolder humidity barometric library folder arduino library adafruit source", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "yougov/yg-lockfile": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project context manager excellent filelock platorm implementation", "pypi_keywords_clean": ""}, "eugene-eeo/mailthon": {"git_readme_keywords": "tracker documentation composable mailthon mailthon library transport agnostic extensible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tracker documentation composable mailthon mailthon agnostic meaning library transport agnostic extensible", "pypi_keywords_clean": ""}, "toscawidgets/tw2-jqplugins-chosen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "branch status project information bundled version license status develop status develop develop develop branch website javascript plugin develop branch unwieldy github repository", "pypi_keywords_clean": "toscawidgets widgets"}, "DjangoAdminHackers/django-linkcheck": {"git_readme_keywords": "linkcheck object minimal screenshot rename anything useful invocation broken urllib g check external recheck interval timeout project interval present install documentation similar install django extracted django filebrowser generate markup www mysite clarification optional linklist validity internal example python compatible python complicated upload delete flexible status linkcheck external content g context internal linkcheck internal django maximum number django linkcheck connection mysite following installed external recheck config script notification browser elaboration management command filebrowser integration", "git_description_clean": "an app that will analyze and report on links in any model that you register with it links can be bare urls or image and file fields or embedded in html linkcheck handles the parsing it fairly easy to override methods of the linkcheck object should you need to do anything more complicated like generate urls from slug fields etc", "git_keywords_clean": "", "pypi_description_keywords": "linkcheck object minimal screenshot rename anything useful invocation broken urllib g check external recheck interval timeout project interval present install documentation similar install django extracted django filebrowser generate markup www mysite clarification optional linklist validity internal example python compatible python complicated upload delete flexible status linkcheck external content g context internal linkcheck internal django maximum number django linkcheck connection mysite following installed external recheck config script notification browser elaboration management command filebrowser integration", "pypi_keywords_clean": ""}, "/dse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "leeming simplicity database connection autokey primary bulk update distribution iterate added fileexport install vs django copyright owner specified number copyright thomas validation decorator version author helpful optional cursor world performance typical insert update record thomas augestad cursor executemany binary nothing handling below delayed update update delete thomas weholt bump added source status stable update removal added pysqlite compatibility marble default rassminus syntax music added author thomas delayed primary specified license damage release focus remember added database tablename background modification parser decorator complete walkthrough structure compatible installation performance contract strict example impact software framework source testsuite removal singleton package comment copyright notice bulk insert liable update method incidental special negligence weholt thomas execute substitute thread support calculated implied music collection delayed execution added support similar vangheem delayed bulk theory creation scenario procurement transaction handling strict liability m property fixed db delayed delete sequence liability factory dictionary contact permission andornaut singleton support cursor caching following disclaimer indirect incidental simple example specific cached django debug particular purpose special exemplary cauwelier stable updated modelfactory special unique overhead postgresql fixed reason possible delayed insert direct indirect instance metadata actual merchantability validation documentation version bump available django specific memory several change optional fitness business interruption execution license copyright redistribution limited express inspiration patched reconnect something insert statement updated readme augestad weholt experimental following column consequential garcia django version x mysql django license debug toolbar possibility", "pypi_keywords_clean": ""}, "lig/django-actionviews": {"git_readme_keywords": "implementation suitable concept implementation alternative", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation suitable concept implementation alternative", "pypi_keywords_clean": "django generic views"}, "/meson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "visual studio friendly platform system complete possible", "pypi_keywords_clean": ""}, "bbqsrc/lcid": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python license rational default python usage nothing", "pypi_keywords_clean": ""}, "kjd/idna": {"git_readme_keywords": "bundled release version conversion functionality transitional mapping library unlikely positional context transition support required command internationalised deprecated version commit format helpful functionality satisfied building necessary typical various contexto general script executed relevant beneficial clause error technical standard tagged release repository installation invalid legacy argument specification compatibility mapping performance example knigsgchen encoding number pvalid contextj individual unicode status respective current standard different unicode capital letter distinct different potential g pvalid standard library original python standard specific codepoint illegal character contextual caution permissible unexpected incompatible different version lookup travis specific appendix module unicode codepoint package contextj regular mapping contextj contexto letter ss suitable replacement output disposition g unicode consortium exception letter sharp conversion illegal combination eligibility unicode version unicode technical transitional processing protocol interface block", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bundled release version conversion functionality transitional mapping library unlikely positional context transition support required command internationalised deprecated version commit format helpful functionality satisfied building necessary typical various contexto general script executed relevant beneficial clause error technical standard tagged release repository installation invalid legacy argument specification compatibility mapping performance example knigsgchen encoding number pvalid contextj individual unicode status respective current standard different unicode capital letter distinct different potential g pvalid standard library original python standard specific codepoint illegal character contextual caution permissible unexpected incompatible different version lookup travis specific appendix module unicode codepoint package contextj regular mapping contextj contexto letter ss suitable replacement output disposition g unicode consortium exception letter sharp conversion illegal combination eligibility unicode version unicode technical transitional processing protocol interface block", "pypi_keywords_clean": ""}, "UltimateHackers/huepy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "hue huepy terminal color python color"}, "lambdalisue/django-permission": {"git_readme_keywords": "apply copyright alisue noninfringement person limitation build status quick tutorial author full article simple apply permission logic logic documentation installation creator application directory implied license configuration function decorator limited boolean package django merchantability fitness version subject alisue lambdalisue coverage author alisue example permission library python lambdalisue hashnote full control subclass object permission software keyword format alisue hashnote substantial apply permission express permission system attribute add change connection status author related object different module following liability particular purpose contract distribute sublicense enhanced permission method function complex variable django tutorial add permission version charge warranty advanced inspection builtin template restriction modify request django permission method publish distribute change permission module django documentation strategy add attribute", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "apply copyright alisue noninfringement person limitation build status quick tutorial author full article simple apply permission logic logic documentation installation creator application directory implied license configuration function decorator limited boolean change package django merchantability fitness version subject alisue lambdalisue coverage author alisue example permission library python lambdalisue hashnote full control subclass object permission software keyword format alisue hashnote substantial apply permission express permission system attribute connection status author related object different module following liability particular purpose contract distribute sublicense enhanced permission method function complex variable django charge permission version warranty advanced inspection builtin template restriction modify request django permission method publish distribute change permission module django documentation strategy group", "pypi_keywords_clean": "django object logical permission auth authentication"}, "memphis-iis/gludb": {"git_readme_keywords": "mongodb postgresql serialization support mongodb pymongo dynamodb datastore googledatastore datastore mongodb abstraction library googledatastore mongodb configurable backup documentation history dynamodb backend generalized example virtualenv popular postgresql version functionality backup support superglu datastore", "git_description_clean": "generalized learning utilities database library", "git_keywords_clean": "python databases developer tools dynamodb mongodb datastore google cloud datastore sqlite postgresql", "pypi_description_keywords": "mongodb postgresql serialization support mongodb pymongo glacier datastore googledatastore abstraction recent version datastore mongodb library googledatastore mongodb configurable backup documentation history dynamodb backend amazon dynamodb generalized example virtualenv popular postgresql version functionality backup support travis datastore", "pypi_keywords_clean": "database versioning backupsqlite dynamodb cloud datastore mongodb"}, "sunscrapers/djoser": {"git_readme_keywords": "implementation library development g project registration install similar available directory contributing installation account activation virtualenv django framework password environment repository django django following architecture documentation documentation authentication system patience continue", "git_description_clean": "rest implementation of django authentication system", "git_keywords_clean": "djoser rest api authentication developer tools python", "pypi_description_keywords": "implementation library development g project registration install similar available directory contributing installation account activation virtualenv django framework password environment repository django django following architecture documentation documentation authentication system patience continue", "pypi_keywords_clean": ""}, "/tox": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package tracker deploying project development analysis checking propose communication collection configuration documentation project documentation building pluggable example testenv envlist frontend overview virtual arbitrary configured necessary release summarizes continuous integration configurable contributor covenant project sourcecode automation project documentation documentation different community contributing welcome platform convenient isolated imagination documentation", "pypi_keywords_clean": "virtual environments isolated testing"}, "GoogleCloudPlatform/google-cloud-bigtable": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition database service platform project search documentation product billing interface available cloud bigtable happybase popular library google cloud cloud platform product documentation following library documentation authentication installation", "pypi_keywords_clean": ""}, "viaict/baas32": {"git_readme_keywords": "encoding version convert encoded symbol invalid symbol validation pronounceable support version argument present install normalization normalize symbol counterpart compact readability optional github installation douglas crockford python normalized python support encoding example import normalize version initial upper changelog version machine readable function sensitive initial release parameter alternate checksum decoding resistant normalization changelog", "git_description_clean": "an alternative python implementation of douglas crockford base encoding scheme", "git_keywords_clean": "", "pypi_description_keywords": "sensitive encoding alternate decoding compact readable readability resistant pronounceable douglas crockford", "pypi_keywords_clean": ""}, "googlemaps/googlemaps": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "limodou/uliweb": {"git_readme_keywords": "runtime process debugging plugin mechanism enhanced debugging sqlalchemy package process startup development server separate project startup example werkzeug command extension dispatch templating system process authentication exchange tornado template inclusion example request documentation project processing mechanism design alembic package default datastore module limodou mailto infrastructure uliweb variable license uliweb template directory project argument debug request export static uliorm database project uliweb replaceability essential directory static directory django statement compound framework session module initial directory structure process initialization template support import development provide document template development application project project organization function expression child template compress process special function collection project commuity automatic language dispatch processing mailto limodou validate unified management scratch configuration support language block uliweb similar request response apache middleware extension example database homepage uliweb module framework mapping uliweb introduction limodou sqlalchemy small wsgi function uliweb environment execution powerful database initicalization access uliweb introduction management uliweb module limodou limodou uliweb uliweb special license infrastructure convert framework runtime js combinition cookie deployment project homepage initial process autoreload uliweb project mapping flexiable bsd license available mapping debug processing module special directory traceback template inheritance python server startup development dispatch extension provide development different process plugin template debugging ulipad project reusability configurability", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debugging enhanced debugging sqlalchemy package process startup development server separate project startup command extension dispatch process authentication exchange template inclusion example request documentation project processing mechanism alembic package default variable license uliweb template directory project argument export static uliorm database project uliweb replaceability essential directory static directory statement compound framework module initial directory structure process initialization development provide import document template development application project function expression language compress process werkzeug special function collection project commuity automatic language dispatch processing unified management configuration block uliweb similar request response apache middleware extension example database homepage uliweb organization mapping uliweb function uliweb environment execution powerful database initicalization uliweb introduction module management uliweb uliweb uliweb special limodou js combinition cookie deployment project homepage initial process autoreload uliweb project mapping flexiable available special directory traceback template inheritance python server startup development dispatch extension provide development different template debugging reusability configurability", "pypi_keywords_clean": "wsgi web framework"}, "eddiejessup/fealty": {"git_readme_keywords": "documentation software bsd", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation history release", "pypi_keywords_clean": "fealty"}, "/python-octaviaclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack project information license documentation python octaviaclient octaviaclient octavia plugin software apache contribution release apache license repository plugin octavia", "pypi_keywords_clean": ""}, "idlesign/django-sitemetrics": {"git_readme_keywords": "python active notation provider approach counter current client interface admin database documentation template template g django admin block google counter keycode reusable application django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python active notation provider approach counter current client interface admin database documentation template template g django admin block google counter keycode reusable application django", "pypi_keywords_clean": ""}, "tomchristie/itypes": {"git_readme_keywords": "instantiation standard immutable container simplicity hashable implementation equality comprehensible object pyrsistent installation attribute additional alternative implementation performance subclass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "geertj/python-dbusx": {"git_readme_keywords": "package suggestion alternative python upcoming python interface install evented overview python adater geertj github building libdbus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package suggestion alternative python upcoming python interface install evented overview python adater geertj github building libdbus", "pypi_keywords_clean": ""}, "occrp/cronosparser": {"git_readme_keywords": "protection language discussion functionality database cronosparser cronosplus database engineer", "git_description_clean": "parser for cronospro cronosplus database files", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "files walk index survey"}, "/sframe": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "attached license license documentation available license txt", "pypi_keywords_clean": ""}, "/dbgp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "DinoTools/overpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "additional information python python python wrapper license query overpass python license overpass wrapper install python overpass access directory available response wrapper python additional helper block python helper helper version block console python helper", "pypi_keywords_clean": "overpy overpass osm openstreetmap"}, "julian-r/python-magic-bin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "libmagic identification database output textual", "pypi_keywords_clean": "mime magic file binary"}, "mjirik/sed3": {"git_readme_keywords": "version install figure example example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "viewer editor"}, "mathiasertl/django-xmpp-http-upload": {"git_readme_keywords": "coverage report encoded mandatory directory configured sensible header development http server djangos default below example cleanup celery install django djangorestframework dependency available diskspace development http filename length htaccess format functionality setup second element domain current fix upload download slash django option connection relevant upload reuploading uploaded quality https filename handle random default changelog support setting seconds g project anyone increase textwidth chunked erlang restricted example django instance regular expression pytloun fix upload django return http example downloaded content configured custom matching regular project project setup py quota advertised django xmpp maximum filename request default return management command xmpp server update djangorestframework directory uploaded chunked transfer likelyhood pypi response fix increase maximum unreadableposterror py command djangos setting support django apache upload python m celery xmpp http increase length initial version http client particular environment contentlength header example crontab g plugin ascii python wheel first element access travis little include broken first matching combination output django increase mandatory webserver security necessary database optional python cleanup django integration underscore update http upload directory something fix constructing subdirectory experimental following column information protocol interface reachable corner seconds uploaded py below", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "functionality django", "pypi_keywords_clean": ""}, "Pr0Ger/protobuf3": {"git_readme_keywords": "python author build status protoc python python usage original protobuf python setup library distribution project protobuf install registration youtrack instance protobuf compiler command similar vagrant version readme protobuf directory environment support python install protobuf initial teamcity status sergey petrov protocol author sergey vm original implementation block", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python author build status protoc python python usage original protobuf python setup library distribution project protobuf install registration youtrack instance protobuf compiler command similar vagrant version readme protobuf directory environment support python install protobuf initial teamcity status sergey petrov protocol author sergey vm original implementation block", "pypi_keywords_clean": ""}, "/django-permissions-widget": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "permission python administrator potential backward fourth subscribe backward compatibility install install release several purpose permission description request autocomplete default django complete documentation", "pypi_keywords_clean": "django permissions widget"}, "tehmaze/diagram": {"git_readme_keywords": "python argument parameter diagram documentation smooth smooth vertical github symmetrical logarithmic various fedora graphs horizontal library installation savitzky function example default spectrum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python argument parameter diagram documentation smooth smooth vertical github symmetrical logarithmic various fedora graphs horizontal library installation savitzky function example default spectrum", "pypi_keywords_clean": "diagram graph ascii ansi text"}, "hasgeek/coaster": {"git_readme_keywords": "python documentation functionality database driver travis additional postgresql testing postgresql coaster common additional package accessible version compatible obsolete coverage function testing", "git_description_clean": "common patterns for flask apps", "git_keywords_clean": "", "pypi_description_keywords": "management postgresql bugfix suitable uglipyjs wrapper flask sqlalchemy convention support single uuidmc deprecated error traceback version request context sqlalchemy implementation status travis commit functionality timezone unused alembic parameter database timestampmixin composite column inherited method source error custom sqlalchemy default latitude favour flask apps optional environment primary idmixin sandboxedflask bugfix sqlalchemy column specification blank counter database additional postgresql testing joined compatible usual session function sqlalchemy session additional property rendered markup deprecated flask alembic external rudimentary flask migrate longitude decorator unicode error reliable notation enhancement obfuscation python compatibility generation server postgresql column duplication testing instance underlying implementaiton timezone component sqlalchemy bugfix choice support single github feature efficient secondary markdown content scoped logging module property additional package gfm module db incompatible change additional context efficiency travis specific urlformixin initial coaster common module obsolete bugfix support default parameter additional helper apps documentation jinja bugfix slack error utility datetime generation basemixin environment reading replaced dependency available http header accessible change country inheritance associated handler python sql version number configuration status coverage status error logging provide uglifyjs column environment variable uglifyjs minifier redirect midnight driver hybrid property random multicast query duplication bug documentation status", "pypi_keywords_clean": "coaster"}, "pediapress/timelib": {"git_readme_keywords": "implied warranty timelib strtodatetime acknowledgment friday datetime php license strtotime import libpng license unmodified php source php internal product anyone software permission license timelib module datetime timelib version subject timelib license copyright timelib strtotime copyright pediapress software express original software origin wrapper internal timelib pediapress gmbh product documentation following commercial datetime datetime strtodatetime timelib liable source distribution distribution php purpose", "git_description_clean": "python module for parsing english textual date descriptions", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty timelib strtodatetime acknowledgment friday datetime php license strtotime import libpng license unmodified php source php internal product anyone software permission license timelib module datetime timelib version subject timelib license copyright timelib strtotime copyright pediapress software express original software origin wrapper internal timelib pediapress gmbh product documentation following commercial datetime datetime strtodatetime timelib liable source distribution distribution php purpose", "pypi_keywords_clean": ""}, "common-workflow-language/cwl-runner": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation agnostic script interpreter agnostic script alternate", "pypi_keywords_clean": ""}, "divio/djangocms-snippet": {"git_readme_keywords": "package javascript development preview project fallback configuration documentation install website additional available grateful djangocms installation compatible installation django snippet content snippet instance coverage django django djangocms searchable snippet feedback request template", "git_description_clean": "django cms snippet provides plugin for django cms to inject html css or javascript snippets into your website", "git_keywords_clean": "addon cms python django cms django", "pypi_description_keywords": "package javascript development preview project fallback configuration documentation install website additional available grateful djangocms installation compatible installation django snippet content snippet instance coverage django django djangocms searchable snippet feedback request template", "pypi_keywords_clean": ""}, "pinax/pinax-eventlog": {"git_readme_keywords": "simple update jsonfield supported django python django release history string useful recommend question convention reusable django version programmer diagnostic support convert timestamp manager related object history contribute parameter method timestamp update everyone conduct connect eventlog overview requirement overview supported jsonfield requirement default ecosystem thumb inclusive documentation installation contribute section argument pusher integration license standardize collection fk wheel release database included compatible performance example enough g content framework number python documentation signal custom description function harassment activity installation install argument optional interest community django python receiver concrete contribution django jsonfield eldarion github coverage python support eventlog contributing property update initial release asynchronous supported enough gfk starter project templatetag update django compatibility package business intelligence template fragment anything switch twitter pinaxproject migration change license copyright python source platform information ability configuration update object interface integration support jsonfield started", "git_description_clean": "an event logger", "git_keywords_clean": "", "pypi_description_keywords": "eventlog activity diagnostic intelligence interface", "pypi_keywords_clean": ""}, "jpvanhal/siilo": {"git_readme_keywords": "python framework agnostic agnostic django libcloud storage abstraction library filesystem compatible coverage following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python framework agnostic agnostic django storage abstraction libcloud amazon library release filesystem compatible initial coverage following", "pypi_keywords_clean": ""}, "caran/can4python": {"git_readme_keywords": "introduction description license coverage measurement package index suitable sphinx documentation useful library canbabel question preferred license index pypi single configuration apache coverage found network available kernel coverage vector informatik dependency description installation filtering example linux socketcan python software functionality virtual knuth texlive canpython package coverage texlive documentation dependency documentation python separate documentation beaglebone transmission license debian github documentation licensing measurement apache format throttle linux kernel sphinx sphinx external raspberry kernel periodic interface informatik gmbh request source python package creation knuth", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction description license coverage measurement suitable sphinx documentation property interfacename useful readthedocs invalid library canbabel question preferred license apache coverage single configuration support functional network available adjust duocumentation kernel coverage vector informatik github history dependency description installation filtering example creation python software history adjust functionality virtual socketcan canpython package broadcast manager coverage texlive documentation dependency documentation python separate documentation transmission beaglebone license debian github documentation licensing measurement apache format throttle caninterface sphinx sphinx canframe definition canbus object external raspberry kernel periodic interface informatik gmbh request source python package", "pypi_keywords_clean": "canpython"}, "/mezzanine-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "popular roadmap framework authentication installation documentation industry standard screenshot programming language management platform interactive resource documentation browsable significant advantage freedom documentation installation mezzanine serialization metadata retrieving intuitive", "pypi_keywords_clean": "mezzanine cms api rest restful web"}, "Azure/azure-mgmt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package management bundle individual package package bundle syntax service management complete package documentation resource management resource manager version installation python number level links generation version number bundle package various following shell compatibility information microsoft management package breaking", "pypi_keywords_clean": ""}, "webrecorder/pywb": {"git_readme_keywords": "generic webrecorder webrecorder project consult multiple detailed possible certificate authority following dynamic exclusion support standalone warcserver fallback customizable certificate pluggable documentation rewriter archival traditional wayback interested aggregation functionality flexible rewriting archiving toolkit calendar architecture warcserver recorder archiving foundation different recording capability overhaul fidelity collection configuration updated", "git_description_clean": "core python web archiving toolkit for replay and recording of web archives", "git_keywords_clean": "python wayback pywb web archiving web archives", "pypi_description_keywords": "generic webrecorder webrecorder project consult multiple detailed possible certificate authority following dynamic exclusion support standalone warcserver fallback customizable certificate pluggable documentation rewriter archival traditional wayback interested aggregation functionality flexible rewriting archiving toolkit calendar architecture warcserver recorder archiving foundation different recording capability overhaul fidelity collection configuration updated", "pypi_keywords_clean": ""}, "koalalorenzo/python-digitalocean": {"git_readme_keywords": "website author manager object object reference ubuntu snapshot balancer active configure firewall container traffic documentation command status session author website dedicated specified answer information output github feature public example connection error enable disable inbound session customization status advandtage password digitalocean support custom environment manager digital shutdown restart sshkey docker droplet shutdown pytest shell access specific client request digitalocean configure python digitalocean py repository directory digitalocean account disable automatic snapshot enable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "website author library snapshot active command author website dedicated public example enable disable status password digitalocean support digital droplet shutdown restart docker droplet shutdown access python digitalocean disable automatic snapshot enable", "pypi_keywords_clean": ""}, "jrbenny35/pytest-firefox": {"git_readme_keywords": "window support firefox firefox firefox usage install fixture default selenium firefox firefox python block python block something firefox installation following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "window support firefox firefox firefox usage install fixture default selenium firefox firefox python block python block something firefox installation following", "pypi_keywords_clean": "py test pytest foxpuppet firefox mozilla automation selenium"}, "hootnot/yachain": {"git_readme_keywords": "db var txt database app logfile import yachain yachain config os path install code log app ip netmask app cfg prefix configdata config yc txt home app log bash home log var txt db database file block yaml db db real prefix var log virtual environment yachain alt app format sys import import os yaml load var app app db load netw prefix prefix db database prefix name app network name cfg print operation config load path install yachain config network name db app app logfile var file print config sys real attribute home user block shell yachain yachain cfg config import sys yaml config txt prefix sys prefix block bash prefix config print network gateway print gcc import yaml configdata yaml database name case absolute config file user venv pypi yaml block python yaml access txt var gitserver gateway yachain import environment app txt path join yaml import same config db txt file var join prefix os yaml python import file database path database alt pypi format print run non virtual config prefix possible database path prefixed path var file os code block relative network gitserver yc app venv var independent gitserver ip yachain suppose default upper overriden netmask gateway different bash var config yachain netw cfg load yc", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "db var txt database app logfile import yachain yachain config os path install code log app ip netmask app cfg prefix configdata config yc txt home app log bash home log var txt db database file block yaml db db real prefix var log virtual environment app format sys import import os yaml load var app app db load netw prefix prefix db database prefix name app network name cfg print operation config load path install yachain config network name db app app logfile var file print config sys real attribute home user block shell yachain yachain cfg config import sys yaml config txt prefix sys prefix block bash prefix config print network gateway print gcc import yaml configdata yaml database name case absolute config file user venv block python yaml access txt var gitserver gateway yachain import environment app txt path join yaml import same config db txt file var join prefix os yaml python import file database path database format print run non virtual config prefix possible database path prefixed path var file os code block relative network gitserver yc app venv var independent gitserver ip yachain yaml yachain suppose default upper overriden netmask gateway different bash var config yachain netw cfg load yc", "pypi_keywords_clean": "yaml parser configuration"}, "ambitioninc/fleming": {"git_readme_keywords": "package datetime truncation information sandford fleming license documentation worldwide standard datetime manipulation timezone available fleming fleming daylight understanding arithmetic installation", "git_description_clean": "python functions for manipulating datetime objects with respect to their time zone", "git_keywords_clean": "", "pypi_description_keywords": "package timedelta datetime truncation sandford fleming fleming interval previous worldwide standard common datetime manipulation timezone daylight description respect detailed arithmetic function timedelta interval", "pypi_keywords_clean": "python datetime pytz timezone timedelta arithmetic floor conversion"}, "araffin/robust-serial": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "communication protocol computer g arduinos communicate", "pypi_keywords_clean": "serial hardware arduino rs communication protocol raspberry"}, "linjackson78/jstyleson": {"git_readme_keywords": "noninfringement limitation copyright linjackson invalid library happy standard implied license js documentation merchantability fitness subject installation linjackson permission software limited express substantial jstyleson jstyleson informal comment connection nothing function following liability contract distribute sublicense warranty restriction publish distribute particular purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "json comment javascript parse"}, "/django-jsonify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django template jsonify abstract anderson request decorator jsonify filter varianble library installation django jsonify", "pypi_keywords_clean": "json django jsonify"}, "/pyv8": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support google javascript python wrapper", "pypi_keywords_clean": ""}, "tomekwojcik/flask-htauth": {"git_readme_keywords": "decorator license bthlabs github configuration authentication support license install download source snippet htpasswd password request response standard htpasswd request authentication extension bthlabs django invalid following example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decorator license bthlabs github configuration authentication support license install download source snippet htpasswd password request response standard htpasswd request authentication extension bthlabs django invalid following example", "pypi_keywords_clean": ""}, "craigds/django-typed-models": {"git_readme_keywords": "current multiple actual license single similar database python listing block python update query inheritance example django subclass common various right object correct extra abstract nullable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pavdmyt/yaspin": {"git_readme_keywords": "message build status python integration sindresorhus gmail manager decorator keyboard copyright volvox library codacy pyup possible development control spinner license terminal install copyright sindre shark command output package manager change spinner installation github order example major cpython display pavlo dmytrenko pyup black pypy terminal spinner license copyright flexible format helpful status coverage python change python yaspin custom spinner method coverage codacy powerful function prompt toolkit repository function powerful friendly branch submit codebase external context manager utilizing request progress feature branch basic example block colour volvox development intuitive collision python build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message build status python integration sindresorhus gmail manager decorator keyboard copyright volvox library codacy pyup possible development control spinner license terminal install copyright sindre shark command output package manager change spinner installation github order example major cpython display pavlo dmytrenko pyup black pypy terminal spinner license copyright flexible format helpful status coverage python change python yaspin custom spinner method coverage codacy powerful function prompt toolkit repository function powerful friendly branch submit codebase external context manager utilizing request progress feature branch basic example block colour volvox development intuitive collision python build", "pypi_keywords_clean": "progressmeter progress meter rate console terminal console cli loading loader indicator spinner spinners time busy wait idle"}, "0compute/yanc": {"git_readme_keywords": "health license output plugin version coverage", "git_description_clean": "yet another nose colorer", "git_keywords_clean": "", "pypi_description_keywords": "health license output plugin version coverage", "pypi_keywords_clean": "nose color"}, "wndhydrnt/python-oauth2": {"git_readme_keywords": "application storage project framework different authentication adapter implementation mongodb mysql backend directory interface available example authorization refresh specific database confirmation dialogue various installation possible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application storage project framework different authentication adapter implementation mongodb mysql backend directory interface available example authorization refresh specific database confirmation dialogue various installation possible", "pypi_keywords_clean": ""}, "phrase/django-phrase": {"git_readme_keywords": "package default context translating signup documentation setting support signup current global project global gitignore javascript snippet professional configuration django application documentation support sourcetree production django process information signup phraseapp context phraseapp django necessary heroku installed management solution suffix adapter powerful translation management template disable projectid", "git_description_clean": "phraseapp for django applications", "git_keywords_clean": "", "pypi_description_keywords": "package default context translating signup documentation setting support signup current global project global gitignore javascript snippet professional configuration django application documentation support sourcetree production django process information signup phraseapp context phraseapp django necessary heroku installed management solution suffix adapter powerful translation management template disable projectid", "pypi_keywords_clean": ""}, "lambdalisue/maidenhair": {"git_readme_keywords": "indipendent experimental library installation maidenhair directory version manimupulation library coverage following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "indipendent experimental library installation maidenhair directory version manimupulation library coverage following", "pypi_keywords_clean": "data python loader parser statistics"}, "/akad": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "line", "pypi_keywords_clean": ""}, "ingenuitas/simplecv": {"git_readme_keywords": "ipython notebook useful library distribution ubuntu python opencv superpack install homebrew numpy superpack command readable interface machine vision linear algebra feature extraction report virtual environment werkzeug webkit method linux python virtual default mission manipulation feature difficult archflags superpack available tesseract orange scipy superpack simplecv interactive scipy numpy optional install install opencv executable opencv download source machine readme install pyzmq installation notebook ipython example virtualenv pygame homebrew system system install concise readable installation directory opencv freenect python install ipython specialized ipython msys package programming interface leopard python scipy source framework simplejson werkzeug casual installer install website download opencv install scipy beaufitulsoup python programming format conversion environment virtualenv simplecv interoperable information someplace install pygame opencv ipython c compiler advanced software manager section pyzmq videos little opencv optional reason possible package installer python tesseract install python installer d optional comprehensive interface install simplecv python install superpack install numpy pygame following opencv superpack sorted standard installation updated python install mingw programming language pygame opencv elegant programming vision simplecv tesseract python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aquisition conversion conversion manipulation framework interface", "pypi_keywords_clean": "opencv cv machine vision computer vision image recognition kinect freenect"}, "libyal/libmsiecf-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python libmsiecf", "pypi_keywords_clean": ""}, "manahl/pytest-profiling": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "shutil rmtree shutil cmdline workspace updated mongodb illegal filesystem httpd server ignore method workspace someone rmtree implementation option moscon christophe fillion initial public method server fixture pymongo dependency devpi server compatibility tabular random improvement default current python fixture config current ubuntu pytest virtualenv analysis pytest shutil argument deprecated database binding database default behavior figure tabular output chrome changelog security system graph output unicode repository fixture fixture binary function deprecated distribute plugin installation install python executable deprecated multicall updated devpi fixture pytest viewer pytest verbose public release licence lagunov gprofdot python compatibility loaded selenium linden pymongo mongodb fixture mongodb server updated httpd pytest server corresponding subshell symlink server server favourite package pytest unreleased pytest executable python module bisesi startup thread bugfix package installer fixture python directory changelog unreleased preserve plugin devpi", "pypi_keywords_clean": ""}, "/django-comments-xtd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support framework contrib database", "pypi_keywords_clean": ""}, "/pamqp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "roadmap python license documentation january support decoder version status coverage license status coverage agnostic python documentation license encoder python encoder general", "pypi_keywords_clean": ""}, "samreay/chainconsumer": {"git_readme_keywords": "marginalised parameter conditional import legibility coloured parameter correlation contours elliptical gaussian extreme michael burgess murray michael multiple morningstar confidence interval markdown required convergence output initial zenodo dictionary mutation support gaussian parameter covariance contours default pdf diagnostic unnecessary incorrect updating legend subplot reflect updating colours covariance calculation central quality relevant uniform rainbow colours compatibility default burgess matthew updating smoothing documentation installation parallel updating minimum scatter density estimator constant specification rendering project structure example number likely generation shortest selection control shading installation install import updating finishing migration geweke diagnostic bunch chance symmetric summary statistic integer division yellow likelihood fitting increase control troxel eduardo configuration previous global posterior posterior maximum parkinson caitlin creation opacity dependency reference surface watermark subplot location summary behaviour chainconsumer library alternate contribution krause parsing dedelson michael troxel maximum comparison stackoverflow updating legend output bugfix minimum version contour shading gaussian smoothing zenodo release coloured scatter history weight inches determination something control subplot overriden following different matplotlib ability visible contour zenodo structure updating updating package significant maximum posterior refactor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package", "pypi_keywords_clean": ""}, "inveniosoftware/invenio-oaiserver": {"git_readme_keywords": "available further documentation invenio copyright", "git_description_clean": "invenio module that adds more fun to the platform", "git_keywords_clean": "", "pypi_description_keywords": "preparation identify marshmallow package compatibility documentation improved performance invenio copyright available response elasticsearch initial", "pypi_keywords_clean": "invenio oai pmh"}, "tylerdave/prompter": {"git_readme_keywords": "install prompter jenn jenn master anything stuff install yesno prompt suggest prompter simple false yesno github default jenn python please look click jenn prompt stable prompt development version prompter import issue advanced strip false prompter install block import prompt prompt yesno", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install prompter jenn jenn prompt enter master n false simple cui false enter cui prompt install yesno prompt prompter simple block python false yesno default jenn github n python please jenn prompt stable development version yesno n prompter import prompt input issue strip false prompter install import prompt prompt yesno", "pypi_keywords_clean": ""}, "/spambayes": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "veltzer/pyanyzip": {"git_readme_keywords": "pyanyzip pyanyzip", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyanyzip", "pypi_keywords_clean": "python zip bz gzip"}, "kata198/queryablelist": {"git_readme_keywords": "full value simple custommatch queryablelist type xor dict new collection tedious execute query indexedredis single other customfilter false order splitby param param x several other reusable query powerful filter arbitrary series filter alias filter type above example parameter method add link append different queryablelist type style access full pydoc queryablelistobjs reusable constant collection execute lst filtered own filter building reusable fieldname operation number complicated containsany link insensitive somevalue function collection building messy impossible equality operator notin param splitcontainsany generic tuple splitby field chain own queryablelist identity equality pattern advance execute init method various special field value pydoc documentation provided queryablelistmixed queryablelist copy element query multiple provided value filtering tim identity inequality info queryablelist queryablelistbase copy method first splitby operation example splitby containsthis boolean logic filterand querybuilder class example x match powerful operator ieq inequality operator containsthis param value isnull large number advanced access api compatible section documentation pydoc operator isnot second containsthis notcontainsany current add sub result splitnotcontainsany loop getattribute possible lambda equal tim query call available addfilter filtertype server object style single method isnull provided common pattern filterand filteror filtering count following job django flask extendable object client call execute query interface common", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full value simple custommatch queryablelist type xor dict new collection tedious execute query indexedredis single other customfilter false order splitby param param x several other reusable query powerful filter arbitrary series filter alias filter type above example parameter method add link append different queryablelist type style access full pydoc queryablelistobjs reusable constant collection execute lst filtered own filter building reusable fieldname operation number complicated containsany link insensitive somevalue function collection building messy impossible equality operator notin param splitcontainsany generic tuple splitby field chain own queryablelist identity equality pattern advance execute init method various special field value pydoc documentation provided queryablelistmixed queryablelist copy element query multiple provided value filtering tim identity inequality info queryablelist queryablelistbase copy method first splitby operation example splitby containsthis boolean logic filterand querybuilder class example x match powerful operator ieq inequality operator containsthis param value isnull large number advanced access api compatible section documentation pydoc operator isnot second containsthis notcontainsany current add sub result splitnotcontainsany loop getattribute possible lambda equal tim query call available addfilter filtertype server object style single method isnull provided common pattern filterand filteror filtering count following job django flask extendable object client call execute query interface common", "pypi_keywords_clean": "queryablelist query list filter objects eq ne lt gt equals not compare comprehension orm queryable django flask indexedredis contains icontains"}, "themis-project/themis-finals-checker-result": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "DamianZaremba/django-social-auth-trello": {"git_readme_keywords": "implied warranty trello installation useful zaremba django merchantability available version fitness installation django license copyright software foundation django software general public version django gnu general public license warranty trello django python package particular purpose module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty particular purpose software merchantability software foundation warranty trello license general public version django trello django fitness gnu general useful module version public license zaremba django license copyright django", "pypi_keywords_clean": ""}, "biocommons/eutils": {"git_readme_keywords": "facilitate access necrosis factor build status chromosome reference environ branch feature multiple second registered middle license entrezgene eutils import product instance pythonic interface license documentation default branch throttling automatic query efetch welcome development esearch optional maploc protein protein feature development environment eutils please genomic status changelog example developing registered unregistered update essential changelog eutils chromosome alternate arbitrary eutils package isoform important stability description particular commit message sample simple pythonic ticket information entrezgeneset search transcript variant install eutils interface genecommentary branch please compressed quick example python package caching query throttling package specification makefile", "git_description_clean": "simplified searching fetching and parsing records from ncbi using their utilities interface", "git_keywords_clean": "ncbi bioinformatics genomics", "pypi_description_keywords": "facilitate access necrosis factor build status chromosome reference environ branch feature multiple second registered middle license entrezgene eutils import product instance pythonic interface license documentation default branch throttling automatic query efetch welcome development esearch optional maploc protein protein feature development environment eutils please genomic status changelog example developing registered unregistered update essential changelog eutils chromosome alternate arbitrary eutils package isoform important stability description particular commit message sample simple pythonic ticket information entrezgeneset search transcript variant install eutils interface genecommentary branch please compressed quick example python package caching query throttling package specification makefile", "pypi_keywords_clean": "bioinformatics"}, "fabiocaccamo/django-maintenance-mode": {"git_readme_keywords": "package application server ip address default separate worker database access python django error project license terminal django maintenance database django instance server configuration execution machine application download django status context heroku custom following therefore prevent database configuration optional middleware django installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package application level application server separate worker build status database access python django status pypi project version pypi django maintenance database django instance server configuration execution machine health pypi version context status coverage heroku custom license django following therefore prevent database configuration optional middleware py django installation", "pypi_keywords_clean": "django"}, "Ezibenroc/pyroaring": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "commit operation intersection build documentation equality commit roaringbitmap version pyroaring g element removal v cpython pyroaring commit manual compilation version cython install pyroaring version gcc pickle dump gcc version python wrapper script classical python superuser linux account archflags compilation installation operation install version bitmap difference performance build pyroaring library example roaringbitmap commit installation method system latter operation pyroaring selection repository average appveyor build cpython version pypi commit python density instance github feature constructor light weight efficient follow array constructor membership release environment compiler command small build wheel architecture supported example status appveyor symmetric diference python package python implemenntation pyroaring python wheel cython build status behavior roaring contiguous output installation gcc supported cross several cython version benchmark conversion python output different package pyroaring platform above recent compiler following command element addition debug documentation status", "pypi_keywords_clean": ""}, "WoLpH/python-statsd": {"git_readme_keywords": "introduction service mechanism current disabled argument graphite message average bandwidth project instance standard collection documentation quick proxy output coverage interaction timestamp logging started something different disabled average connection advanced graphite install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction service mechanism current disabled argument graphite message average bandwidth project instance standard collection documentation quick proxy output coverage interaction timestamp logging started something different disabled average connection advanced graphite install", "pypi_keywords_clean": ""}, "hovel/imagestore": {"git_readme_keywords": "project gallery infomation integration gallery support prettyphoto integration veresion integration upload gallery intereface descripion public exiting", "git_description_clean": "django gallery solution", "git_keywords_clean": "", "pypi_description_keywords": "project gallery infomation integration gallery support prettyphoto integration veresion integration upload gallery intereface descripion public exiting", "pypi_keywords_clean": "django gallery"}, "jaraco/jaraco-structures": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "SimonSapin/webencodings": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "legacy standard overriding license precedence tracker documentation implementation declaration particular something compatible example detection", "pypi_keywords_clean": ""}, "mattja/sdeint": {"git_readme_keywords": "kloeden library xb dy y stochastic differential maruyama version numerical solution function utility overview massive parallel arbitrary characteristic function algorithm stratonovich equation method wright approximate vector length rewrite multiple independent matlab implement support collection stratonovich stochastic independent wiener derivative commutative likely ordinary differential simultaneous simulation prototype general dimensional unicode continuous markov equation dy specific algorithms y dw cluster further research coefficient matrix numerical treatment strong algorithm dimensional vector strong approximation dimensional specific algorithm maruyama continuous accurate milstein algorithms similar iterated stratonovich strong stochastic reference stochastic ordinary speedup release dispatch couple x dw scalar independent brownian numerical algorithms certain special package numerical integration diagonal suitable algorithm maruyama algorithm algorithms maruyama implicit documentation memory implement initial condition separate function python wiktorsson approximate multiple stochastic column information matrix computer burrage improved welcome implicit alogrithm future implement increase block", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "kloeden library xb dy y stochastic differential maruyama version numerical solution function utility overview massive parallel arbitrary characteristic function algorithm stratonovich equation method wright approximate vector length rewrite multiple independent matlab implement support collection stratonovich stochastic independent wiener derivative commutative likely ordinary differential simultaneous simulation prototype general dimensional unicode continuous markov equation dy specific algorithms y dw cluster further research coefficient matrix numerical treatment strong algorithm dimensional vector strong approximation dimensional specific algorithm maruyama continuous accurate milstein algorithms similar iterated stratonovich strong stochastic reference stochastic ordinary speedup release dispatch couple x dw scalar independent brownian numerical algorithms certain special package numerical integration diagonal suitable algorithm maruyama algorithm algorithms maruyama implicit documentation memory implement initial condition separate function python wiktorsson approximate multiple stochastic column information matrix computer burrage improved welcome implicit alogrithm future implement increase block", "pypi_keywords_clean": "stochastic differential equations sde sode"}, "studioimaginaire/phue": {"git_readme_keywords": "package download device default python search anything second lighting system rothwell jython class transition support quick trademark several version compatible installation python x wireless lighting example www support jython functionality organization directory necessary bridge koninklijke convenience individual transition structure single delete following procedural information jython python library platform script discussion transition command protocol license python interpreter brightness transitiontime keyword pythonista personal wireless object oriented", "git_description_clean": "a python library for the philips hue system", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "treyhunner/django-simple-history": {"git_readme_keywords": "django project maintainability license welcome build status python django django python history available request version coverage following documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "admin urls master record availability handle primary locale add gh added field fix python django object instance allow bulk autofield gh django simple add parameter admin interface middleware gh customforeignkeyfield add polish model drop manager method delete keyword fix issue initial project option changereason field gh display gh modify historicalrecord instance admin original model urls gh string added alternative user disallow model added app old style custom gh interface various gh reorganization portuguese translation history detail bug update delete gh history allow parameter localization gh user gh history view related error allow foreign inherited model south allow update landscape docs gh memory exception history tracking additional fix tracking gh router backward fix deprecation django gh project maintainability license bug added database backward compatible simple history explicit custom fix header added workaround nested klaas van mongodb autofield resolve brazilian portuguese related historical recent changereason fix keyword argument system anonymous excluded history gh abstract class primary key django admin object history argument gh setup py function add support manager gh django support fix typeerror added python change gh admin template backward compatibility populate history added ability management command fix locale new app modulenotfound issue custom manager model django detail view issue gh django python response admin history add option unicode gh support foreignkey foreign key support gh package added instance default reverse added support compatibility issue request object view gh gh gh user model relation gh change package allow delete historical support added added history coverage constructor feature gh disable default admin python support add german pypi version gh fix help documentation configuration fix form view added management historical record landscape configuration warning reverse accessor change history support support added admin van schelven russian localization add brazilian specific fix router change ugettext resolve issue added django model abstract fix history threadlocal request django model duplicate history add historicalrecord accessor class custom user pull request build status history change model gh history manager packaging issue added russian allow history reason add django packaging bug historical referential foreign model verbose add ability abstract model pull gh update available style django integer foreign change style middleware ugettext lazy history accessor gh allow drop django command gh pypi package gh respect chained manager customization gh polish locale project creation gh add django allow template gh lazy resolve following transformation history management welcome fix bug class gh custom field python gh history form callable gh py possibility documentation status", "pypi_keywords_clean": ""}, "hicsail/polyline": {"git_readme_keywords": "algorithm required precision documentation implementation optional parameter representation installation", "git_description_clean": "a python implementation of google encoded polyline algorithm format", "git_keywords_clean": "python polyline", "pypi_description_keywords": "algorithm required precision documentation implementation optional parameter representation installation", "pypi_keywords_clean": ""}, "abhinavsingh/proxy-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python external dependency python library support install support basic authentication support standard python library support optimize module basic authentication", "pypi_keywords_clean": ""}, "pytorch/torchvision": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "anaconda pytorch default torchvision installation torchvision further discussion computer backend torchvision pytorch website accimage documentation replacement website contributing feature following utility", "pypi_keywords_clean": ""}, "/rtmapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package desktop authorization compare operation authentication multiple folder kasperski velikobratov documentation website element example python important property wrapped gruenewald essential attribute object jaropolk restructuredtext special", "pypi_keywords_clean": ""}, "sosy-lab/benchexec": {"git_readme_keywords": "international benchexec supplementary thomas default lukasczyk alexander limitation stephan lukasczyk isolation florian network access github repository reliable measurement alexander schremmer multiple contrary benchexec benchexec extended version addition g machine administrator container quantile access benchexec starexec github kazantsev thomas documentation philipp wendler background interactive previous version available interference verification framework software verification preprint montgomery thomas lemberger execution variety benchexec cpachecker benchmark overview generation arbitrary overlay filesystem benchexec framework framework cpachecker benchmarked following cgroups independent project zakharov lemberger sebastian benchexec github executed karlheinz friedberger universitt cluster reliable benchmarking further statistical specific ludwig regression supplementary webpage precise resource measurement", "git_description_clean": "benchexec framework for reliable benchmarking and resource measurement", "git_keywords_clean": "resource measurement python cgroups linux benchmarking benchmark framework benchmark", "pypi_description_keywords": "default limitation stephan lukasczyk isolation network access reliable measurement measure multiple contrary scatter benchexec benchexec extended version addition g machine administrator container quantile access benchexec license background interactive available memory interference output software verification filesystem verification framework preprint version coverage thomas lemberger execution variety benchmark generation arbitrary benchexec framework benchmarked following independent project lemberger sebastian executed quality reliable benchmarking further statistical specific regression precise resource measurement", "pypi_keywords_clean": "benchmarking resource measurement"}, "/lit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "discovery execution support official indication documentation command portable flexible interface portable available lightweight multiple repository possible", "pypi_keywords_clean": "test automatic discovery"}, "iwschris/ezodf2": {"git_readme_keywords": "declaration documentation feedback document painless serialisation history opendocument continuous integration abstract namespace specifier possible installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cpython version filename template opendoc filename management version spreadsheet paragraph version january possible ubuntu license install doctype filename cpython source documentation support spreadsheet filename painless serialisation prefix global history opendocument element version installation github compatible example management version content document template support unused continuous integration filename newdoc namespace specifier column version updated unecessary abstract ezodf parameter filename version february feedback template version spreadsheet support newdoc doctype distribute section python package global namespace ezodf opendoc integration status install problem parameter template manfred moitzi prefix declaration opendoc requirement", "pypi_keywords_clean": "odf opendocumentformat openoffice libreoffice"}, "kennknowles/jsonpath-rw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python jsonpath apache license string library unambiguous help language governing version jsonpath syntax implementation meaning jsonpath field arbitrary field field general equivalent jsonpath goessner special associative compliance rw build specific language programmatic jsonpath account copyright parsing toolkit fieldname build equivalent additional parser example software access jsonpath problematic jsonpath jsonpath robust field segfault child matching index programmatic license build field access license version present full language stefan goessner coverage jsonpath rw failure context automatic unique particular meaning jsonpath unportable matching jsonpath language implementation travis access programmatic access problem separated special package abstract syntax implementation build status result extension other jsonpath applicable quick field syntax available provide operator original proposal basis license copyright pypy express syntax meaning atomic index maintained object transform current object automatic", "pypi_keywords_clean": ""}, "b3j0f/b3j0f-annotation": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download behavior asynchronous development license description annotation useful annotation documentation install annotated implementation donation annotation library several grateful installation interception coverage reflective python number interception module callable release homepage documentation different lifecycle specific funding", "pypi_keywords_clean": "annotation"}, "nbrochu/requests-respectful": {"git_readme_keywords": "management single machine request instance library interval registered registered realms celery backend fallout limited exception major difference respectfulrequester instance docker container instance method typical timespan respectful config body realms google requesting accept lightweight method respectful source boolean kwargs further request starting minimalist maximum requesting unregistering multiple parallel operation responsible project consistent record python development usual example request lambdas important crazy software likely single process second github proxying celery conservative response single request presence kwarg installation configuration catchable single thread active configuration unregistering kwargs decent chance request lamba handy contribution amount requestsrespectfulratelimitederror exception concept minimal separate requesting multiple realms behavior requesting instance configure minute twitter lambda thread single documentation netizen configuration default realms realms python exhaustive facepalm following safety threshold default configuration different runtime introspection major caching purist instance safety", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "minimalist concept minimal separate requesting behavior single machine response maximum requesting request instance single request parallel multiple library requesting instance shell configuration presence configure kwarg project lambda thread single interval boolean kwargs documentation netizen fallout configuration default purist single thread installation active configuration example usual python important limited respectfulrequester instance likely exhaustive facepalm single process instance method typical kwargs following delete request lamba respectful config default configuration body handy runtime requesting accept contribution method respectful amount extra requestsrespectfulratelimitederror exception python conservative introspection major difference request starting proxying celery", "pypi_keywords_clean": ""}, "mkli90/tazlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "timstaley/drive-casa": {"git_readme_keywords": "introduction anderson relevant staley description python package pipeline online documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tkem/uritools": {"git_readme_keywords": "project individual compliant proprietary documentation tracker unusable installation install additional internet coverage various version unicode support standard library license copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project individual compliant proprietary documentation tracker unusable installation install additional internet coverage various version unicode support standard library license copyright", "pypi_keywords_clean": "uri url urlparse urlsplit urljoin urldefrag"}, "edx/xblock": {"git_readme_keywords": "tools interoperability xblock functionality agreement please alpha release generator sample component architecture potential coverage report industry standard build status simple apache license important additional reason sensible sdk license useful tools xblock generator project distinct packaging specification single validation install separate repository xblock courseware optional status xblock installation xblock sdk template xblock virtualenv video player important compound please additional information security commit differ second generation third branch status coverage common version number freenode build prototype coverage status sample xblock building courseware pylint repository documentation public please script welcome platform high quality contributor agreement xblock version travis specific runtime request python language channel virtual machine deployable report security", "git_description_clean": "xblock courseware component architecture", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jbalogh/jingo": {"git_readme_keywords": "conditional escape jinja extension default register function jingo jingo urlconf escape patch template loader patch way jingo jinja project django jinja string useful jinja supported direction function jingo familiar underscore registration extra loading happy support configuration module jingo moustache block jingo register substring available support django jingo template jinja loader environment extension extension function exception single jinja application python register filter django jingo key localization version django function default release template environment switch jinja form html app recommended function maintainer adapter multiple template jinja backend versionchanged ready filter function simple way protocol admin template jinja jinja interpolation filter backend django effort method environment single jingo module support jinja filename jinja environment recommended location", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "conditional escape jinja extension default register function jingo jingo urlconf escape patch template loader patch way jingo jinja project django jinja string useful jinja supported direction function jingo familiar underscore registration extra loading happy support configuration module jingo documentation moustache block jingo register substring available support django jingo template jinja loader environment extension extension function exception single jinja application python register filter django jingo key localization version django document function default release template environment switch jinja form html app recommended function maintainer adapter multiple template jinja backend versionchanged ready filter function simple way protocol admin template jinja jinja interpolation filter backend django effort method environment single jingo module support jinja filename jinja environment recommended location", "pypi_keywords_clean": ""}, "skies-io/django-rest-api": {"git_readme_keywords": "different authentication helpful documentation advisable request installation example django", "git_description_clean": "django rest api", "git_keywords_clean": "", "pypi_description_keywords": "different authentication helpful documentation advisable request installation example django", "pypi_keywords_clean": ""}, "wtsi-hgi/testhelpers": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version library build status status codecov", "pypi_keywords_clean": ""}, "/bprofile": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "py install example py import bprofile class bprofile profile different separate thread manager context overhead interpreter shutdown unix installation working directory python setup bprofile bprofile multiple cprofile profiler graphviz installation unix introduction functionality example sleep reference class install bprofile interval enabled import pylab instance decorator cumulative stuff delay report generation command installation folder output percent report profiled enabled enabled single instance callback profiling context simple context program warning graphviz class reference bprofile output visual graphs python nothing cprofile graph reporting stuff x functionality system bprofile example something ascii beep february bprofile threshold percent profiler bprofile source python outputs setup py profile report interval profile block following function bprofile february information program context manager py import method cprofile gprofdot profiling google bprofile import current working", "pypi_keywords_clean": ""}, "xeroc/piston-lib": {"git_readme_keywords": "compile documentation additional unmaintained develop installation productive buisness library disclaimer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compile documentation additional manual installation develop installation sphinx library", "pypi_keywords_clean": "steem"}, "dakrauth/choice-enum": {"git_readme_keywords": "choiceenumeration dictionary following format typical django default typical example interactive wrapper django example option derived compatible django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "choiceenumeration dictionary following format typical django default typical example interactive wrapper django example option derived compatible django", "pypi_keywords_clean": ""}, "luisza/django-reservation": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable product django reservation administrative proposuse borrow middleware reservationmiddleware python configure documentation backend parcial twitter bootstrap installation install template append django djreservation readthedocs generic reservation djreservation middleware installed configure database", "pypi_keywords_clean": ""}, "/cloudshell-automation-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dantezhu/flask-util-js": {"git_readme_keywords": "load flask flask install flask html file code javascript such usage install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "awslabs/aws-kinesis-agg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bulk conversion folder index pypi install command caveat language governing standard kinesis lambda important memory aggregation install mechanism example aws necessary message deaggregation build script platform agnostic brevity lambda bulk lambda function compliance package index specific language working version example generator aws kinesis full working aws lambda example script abridged example sample build python kinesis python zip python project repository example functionality aggregated issue build deploy aggregation module example build normal python kinesis producer boilerplate important build amazon software python environment deploy lambda module importable callback dependency producer library agnostic build provided script started transmission example python source producer python package module build google module conversion example module folder kinesis message amazon kinesis record aggregation deaggregation module kinesis aggregation python record efficient transmission available advantage single build empty python version such basis record deaggregation everything software license express python install kinesis stream aggregation deaggregation ability throughput template module deaggregator upload example below module aggregator kinesis aggregated", "pypi_keywords_clean": "aws"}, "yougov/mongo-connector": {"git_readme_keywords": "service documentation check initiate convenient community yougov manager g system overview package install detailed documentation connector invocation connector github listing complete documentation g question support replication endpoint trouble available following install elasticsearch installation custody replica production system check python particular system command development server status replset mydevreplset mongodb connector project elasticsearch elasticsearch uninstall pipeline problem following command mongodb cluster startup", "git_description_clean": "mongodb data stream pipeline tools by yougov adopted from mongodb", "git_keywords_clean": "", "pypi_description_keywords": "service documentation check initiate convenient community yougov manager g system overview package install detailed documentation connector invocation connector github listing complete documentation g question support replication endpoint trouble available following install elasticsearch installation custody replica production system check python particular system command development server status replset mydevreplset mongodb connector project elasticsearch elasticsearch uninstall pipeline problem following command mongodb cluster startup", "pypi_keywords_clean": "mongo connector mongo mongodb solr elasticsearch"}, "/backports-ssl-match-hostname": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compliance serveraltname packager standard library support check distribution dependency matching backport history python application security certificate portability brandon something tricky ipaddress library hostname function python standard", "pypi_keywords_clean": ""}, "tyrannosaurus/yandex-translate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "yandex yandex translate translate"}, "allanlei/flask-email": {"git_readme_keywords": "addition flask useful documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation port extension django", "pypi_keywords_clean": ""}, "trilan/lemon": {"git_readme_keywords": "ability improved extention several related github", "git_description_clean": "an extention for django contrib admin app", "git_keywords_clean": "", "pypi_description_keywords": "metatagssite cutomizable doctype markup widget publication dashboard widget several useful project separate markup modeladmin extention change respect github history initial schemamigration extradmin jquery format searchindex attribute sitemap password custom ability improved django version handling request method related appadmin django compatibility public release publicationmanager", "pypi_keywords_clean": ""}, "/sqlite3database": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty software download merchantability version license license sqlitedatabase warranty install sqlitedatabase program general public particular fitness summary databasepipe package useful public license software foundation", "pypi_keywords_clean": ""}, "dhelbegor/easy-mask": {"git_readme_keywords": "seguinte exemplo configurao adicione alephmelo gostaria instalao configurao extenso projeto colocar smiley observao template inicio sugesto", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package django", "pypi_keywords_clean": "mask mascaras django python ncpj telefone phone cep zipcode isbn ncm"}, "mongodb/motor": {"git_readme_keywords": "compatibility sphinx tornado python import aiohttp import tornado directory pymongo pbkdf readthedocs tornado asyncio version g readthedocs installation pymongo possible tornado python level python project confirmed mongodb driver following information install documentation python version feature install sphinx exact tornado readthedocs mongodb authentication python install google import pymongo exact version jiryu traceback tornado version access operating system mongodb tornado pymongo mongodb asyncio featured source problem exact python pymongo version python tornado linux", "git_description_clean": "motor the async python driver for mongodb and tornado or asyncio", "git_keywords_clean": "", "pypi_description_keywords": "compatibility sphinx tornado python import aiohttp import tornado directory pymongo pbkdf readthedocs tornado asyncio version g readthedocs installation pymongo possible tornado python level python project confirmed mongodb driver following information install documentation python version feature install sphinx exact tornado readthedocs mongodb authentication python install google import pymongo exact version jiryu traceback tornado version access operating system mongodb tornado pymongo mongodb asyncio featured source problem exact python pymongo version python tornado linux", "pypi_keywords_clean": "mongo mongodb pymongo gridfs bson motor tornado asyncio"}, "changer/cmsplugin-twitter": {"git_readme_keywords": "", "git_description_clean": "twitter plugin to work with django cms designed to work with latest api of twitter", "git_keywords_clean": "", "pypi_description_keywords": "django installed support virtualenv plugin similar account djangocms twitter plugin installation twitter generated script", "pypi_keywords_clean": ""}, "/termite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation automation termite web development development documentation", "pypi_keywords_clean": "automation web"}, "agoraplex/backports-inspect": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "assertion incorrect backport copyright library software foundation original", "pypi_keywords_clean": ""}, "mrocklin/cachey": {"git_readme_keywords": "storage epsilon amplification exponential expensive analytic caching halflife inverse bandwidth recomputation following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "epsilon amplification exponential bandwidth expensive analytic caching halflife recomputation example following milllion", "pypi_keywords_clean": ""}, "blockstack/blockstore-client": {"git_readme_keywords": "documentation compatibility slack authentication portion identity authentication library validate distribution development storage portion identity portion commit commit backward compatible version compatible installation github format blockstack latter authentication request origin document release profile repository authentication response additional functionality maintainer browser plugin contribution section released yukan storage documentation static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "blockchain bitcoin btc cryptocurrency name key value store data"}, "/mdx-video": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scrapy/loginform": {"git_readme_keywords": "report loginform loginform collection coverage report simple filling output available great following command library username password possible example", "git_description_clean": "fill html login forms automatically", "git_keywords_clean": "", "pypi_description_keywords": "report loginform loginform collection coverage report simple filling output available great following command library username password possible example", "pypi_keywords_clean": ""}, "/squaremap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "weighted application visualization control hierarchic visualization", "pypi_keywords_clean": "wxpython squaremap"}, "/uk-postcode-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "andy gimblett somerville typical postcode", "pypi_keywords_clean": ""}, "Arzaroth/rapidxml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project rapidxml library license development required package manual installation version repository distribution package rapidxml example", "pypi_keywords_clean": "rapidxml xml parsing"}, "jcomo/pyrake": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python build automation script"}, "tomchristie/django-serializers": {"git_readme_keywords": "uniquely recursion loss mapping way initial representation box distribution class copyright holder install factor serializer implementation much subclass initialize overview representation such arbitrary deserialized instance fixture serialization binary flexible serialization codebase complex fixtureserializer previous example method web related nested representation source deserialization validation default specific metadata custom serializer primary project christie modification serializable datatype parser custom representation stream format specific example django software framework number alternative attribute additional metadata custom possibility allow serialize deserialized describe validation default representation integer deserialization installation install serialize primative serializable reverse relationship incidental special relationship negligence recursive custom renderer substitute implied similar theory compatability nested serialization procurement datatype reference django author datetime property django serialization serialize comment liability contract dictionary following disclaimer indirect incidental such damage serialize nested particular purpose special exemplary django current datatype primative compatible fixture modelserializer specifiying comprehensive potential replacement primative datatype declarative serialization merchantability natural complete nested documentation output relational optional such fitness business interruption license copyright redistribution python limited express callable subset specifiying nested initial datatype current fixture customizable serialization following consequential different serializer class declare serializer object correct custom represenation django installation rgb twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "capitalone/c7n-org": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "quoteda gcp flag account resource management subcommand multiple invalid folder following folder output directory account subscription addition senstive example gcp command script command additional filter necessary config initial setup example custodian execution please important content gcp config authentication generation report credential information arbitrary parallel installation subcommand additional gcp resource service principal policy following sdk credential policy execution folder structure filter account project configuration variable interpolation config script yaml parsing charge process environment require subscription project information defining access section default runtime extra pertinent information", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-notificationhubs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package string formatting preview release wheel lropoller complete service management behavior client library result response extension preview release history underlying http operation group string glance unstable client class azureenum argument syntax resource manager project changelog release added operation availability added docs microsoft performance breaking bugfixes compatibility positional http session default behavior format syntax update authorization callback polling optional version parameter metric generator python important keyword argument format wheel package generation namespaceresource completion polling parameter bundle package management client signature operation initial sdk running operation algorithm python python parameter microsoft hub availability notification sharedaccessauthorizationruleresource general breaking external feedback client class context manager unrecognized section notification hub wheel extension", "pypi_keywords_clean": ""}, "eventable/vobject": {"git_readme_keywords": "package vavailability support download required serializing underlying commonly behavior contentline icalendar eventable jeffrey harris dateutil github vobject support serializing datastructure license useful required application foundation dedication vobject icalendar operator understood installation sophisticated concert example vcalendar interaction version generator specialized regular attribute irrelevant datetime paramname paramlist timezone chandler project attribute something summary calendar paramlist similar required computable appropriate vtimezone meaningful tricky convenience function different tzinfo underscore access dtstart tzinfo foundation chandler special component vobject vobject", "git_description_clean": "a full featured python package for parsing and creating icalendar and vcard files", "git_keywords_clean": "", "pypi_description_keywords": "vobject dateutil description unicode", "pypi_keywords_clean": "vobject icalendar vcard ics vcs hcalendar"}, "pavelsof/stltimelogger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "licence control installation current inclusive anything second plaintext argument interval course similar different approach additional version control standard python curiousity virtualenv functionality arbitrary particular manager python package", "pypi_keywords_clean": "cli time logger"}, "Aluriak/accc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "complex compiler speaking compilable surprise convert string allow configuration provided vocabulary random priority neutral project present compiler python accc python implementation object langage langage allow mutation vocabulary upload evolution simulation python compilable github example please alphabet indentation provided alphabet someone something compiler instanciation output langage correctness compiler awful unexpected allow little modification langage compiler object current object github accc compilation alphabet provided problem iterable correct correctness illogic", "pypi_keywords_clean": "compilation compiler correctness"}, "/firepython": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support library homepage firelogger", "pypi_keywords_clean": ""}, "sunlightlabs/sunlight": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute default python command similar attempt ambiguous documentation string single project library project python sunlight output concise extensive example server encouraged following command likely result powerful enviroment variable welcome script request format patch address clause", "pypi_keywords_clean": ""}, "/mapnik": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "mapnik mapbox mapping carteography"}, "smarkets/flake8-strict": {"git_readme_keywords": "compatibility newline blibto import limitation syntax trailing comma previous change library unlikely opinionated argument support erroneous comma single strict future python allow element compatible github generator trigger installation license copyright python keyword status version number unicodedecodeerror multiline custom module python pypy ascii kwargs function construct column definition valueerror parseerror plugin ironic function parameter pycodestyle source incompatible decorator reading", "git_description_clean": "flake plugin that checks python code against set of opinionated style rules", "git_keywords_clean": "", "pypi_description_keywords": "compatibility newline blibto import limitation syntax trailing comma previous change library unlikely opinionated argument support erroneous comma single strict future python allow element compatible github generator trigger installation license copyright python keyword status version number unicodedecodeerror multiline custom module python pypy ascii kwargs function construct column definition valueerror parseerror plugin ironic function parameter pycodestyle source incompatible decorator reading", "pypi_keywords_clean": "flake plugin strict hanging indent trailing comma trailing commas"}, "myGengo/mygengo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full simple quality incomplete fortranslator optional rating private key multiple purchase revise comment example convenience method reviewable other false false default httplib version much dictionary entry new job specific job python interface key sandbox api rejection account balance status optional optional requeue dot com mygengo deletetranslationjob list pairs example error message mygengo api ready reliable parameter translation language script quality mygengo dot object example python interpreter twitter mygengo mygengo dev mygengo gettranslationjobpreviewimage supported translation group requirement uber dictionary service hamburger method source language additional http account full job mygengo gettranslationjobrevision human translation optional source supported optional additional anyone other comment credit course issue tracker docs mygengo mygengo updatetranslationjob optional unpaid mygengo staff image text recent mygengo python timestampafter optional world access mygengo gettranslationjob captcha url url value sandbox optional rejection example optional epoch respective com twitter function ohgodwtfisthis interpreter ala captcha value requeue default mygengo posttranslationjobcomment work yo fortranslator specific revision other captcha privatekey senior translator simplejson moment python isn share incomplete other machine translation api apiversion yo mygengo gettranslationjobs id mygengo gettranslationjobfeedback job purchase instance many different unpaid available revision public optional mygengo updatetranslationjobs unicodeutf convenience mygengo getaccountbalance optional api ala question new captcha copy method similarity entire batch mygengo directory comment thread translation job captcha image python library full documentation production ready ryan piece feedback translator action mygengo posttranslationjobs new comment api simpler body text mygengo unicodeutf easy installation public key complete project issue translated text reason preview image github project acceptable format particular job mygengo sandbox dictionary object mygengo deletetranslationjobs api version available wrong url tricky problem reject example mygengo optional comment mygengo end apiversion optional mygengo example source head language pairs priority documentation full revid end public attention epoch timestamp comment optional premt optional above job comment call api docs job bit job description text copy", "pypi_keywords_clean": "mygengo translation language api japanese english"}, "3DLIRIOUS/meshlabxml": {"git_readme_keywords": "rainbow colored development workflow simple meshlab filter sufficient course meshlab powerful muparser library example measure section measure modern addition source system processing install measure geometry butterfly catmull function function following example simplify uniform release g version compute measure muparser filter remesh uniform complex script unstable annulus annulus helpful functionality something similar translate translate laplacian hc script development transfer isometric repeat distance poisson complex meshlabxml meshlabserver executable quality voronoi g letter nauseam function fq stable isometric remesh texture project meshlab attrtex meshlab script default blender vector voronoi cyclic midpoint butterfly measure dimension laplacian taubin simplify status included matrix function remesh simplify filter familiar length normalize duplicate texvc freeze matrix number openscad isometric isometric repository change duplicate percentage problematic transform deform useful layout function cylindrical unrelated machine visual feedback vertex hc laplacian computation section fq function spherical stanford bunny filterscript surface poisson poisson surface taubin twostep voronoi isometric reload button orange colored quatrefoil instance sphere b library muparser geometry translate measure section remesh remeshing element curvature production vcfc meshfc meshlabxml installation vq function fcvc vcfc default output reorient public domain editor console triangular arrow topology measure morph certain general script emboss sphere version example smooth measure topology texture meshlabserver output extension meshlab additional cyclic rainbow nonmanifold function voronoi subtract multiply headless mapping parameterization combination triangle voronoi documentation cross available wrapcylinder meshlab output several bbox multiply length implement invert border lsloop midpoint output example python possible workflow company license muparser function subset directory isometric transfer meshlab license outputs cylinder cylinder following geometry measure interface transform compute direct implementation subdivide subdivision deformcurve dimension possible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tbenthompson/cppimport": {"git_readme_keywords": "python extension extension module recompilation pybind necessary compilation incremental python packaging productivity module library extension variable compiled parallel compilation library terminal command header folder standard library distribution technical description linker license install configuration block additional output available simpler language development process example python cppimport version description cppimport helpful requested module system floor import workflow configuration header compilation recommend compile information checksum uninitiated incremental compiler python interpreter compilation recommend pybind incremental compilation ccache accept request multiple source module configuration linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "visual build python extension extension module recompilation pybind necessary compilation python import incremental python packaging productivity enable parallel result module library variable compiled parallel compilation terminal command library header folder standard library distribution phrase cppimport suggestion technical description license linker args install configuration block additional output available simpler language global modification language please such development process mingw simple extension example python cppimport version description cppimport success helpful requested module system floor import comment workflow cffi configuration header c compilation recommend challenge compile information other package checksum import system uninitiated incremental c library compiler python swig python interpreter section compilation recommend pybind incremental compilation ccache multiple source module configuration linux", "pypi_keywords_clean": ""}, "ecell/ecell": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dcramer/piplint": {"git_readme_keywords": "package sensitivity environment requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package sensitivity environment requirement", "pypi_keywords_clean": ""}, "baverman/covador": {"git_readme_keywords": "support validation library default literal unicode callable interface optional argument endpoint concise aiohttp tornado coverage covador", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support validation library default literal unicode callable interface optional argument endpoint concise aiohttp tornado coverage covador", "pypi_keywords_clean": ""}, "ajtowns/beanbag": {"git_readme_keywords": "information example import beanbag github access github beanbag import beanbag module beanbag beanbag", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information example import beanbag github access github beanbag import beanbag module beanbag beanbag", "pypi_keywords_clean": ""}, "/drumhat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial release library tweaks repository initial function version", "pypi_keywords_clean": "raspberry pi drum hat"}, "mjszczep/pystasm": {"git_readme_keywords": "minimal pystasm library wrapper consult original license documentation further information license agreement software library version subject installation example reference wrapper description recommended agreement available simplified pythonic request mjszczep buffalo information specific", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "c software information", "pypi_keywords_clean": ""}, "/python-saharaclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python openstack sahara version package license documentation command release package installation module version repository installation feature development license version", "pypi_keywords_clean": ""}, "indeedlabs/indeed": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Parkayun/initpy": {"git_readme_keywords": "initpy quick bash python create tornado generate project flask project python setup python module create flask create project falcon project install python installation version party template quick start web project hd flask create python status generate install initpy initpy start sourcecode single python sourcecode bash project python tornado web create single create falcon installation sourcecode documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initpy quick bash python create tornado generate project flask project python setup python module create flask create project falcon project install python installation version party template quick start web project hd flask create python status generate install initpy initpy start sourcecode single python sourcecode bash project python tornado web create single create falcon installation sourcecode documentation status", "pypi_keywords_clean": ""}, "Skyscanner/pyfailsafe": {"git_readme_keywords": "standalone default comprehensive examples incremental isolation project failsafe retrypolicy useful operation pyfailsafe install library circuitbreaker interface possible circuit breaker publishing outside service pyfailsafe abortable immutable developer advantage breaker instance examples installation circuit fallbackfailsafe account abortable execution exception example everything backoff process number stateful immediate failure version number document particular virtual environment interface circuitbreaker system overload function making overload circuit parameter failsafe pyfailsafe contribution dependent system component consecutive", "git_description_clean": "simple failure handling failsafe implementation in python", "git_keywords_clean": "circuit breakers retries fallbacks failsafe call python aiohttp asyncio", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/cmf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appveyor modular management programming language extension publication extension development hydrological philipp documentation hydrological programming integrated catchment appveyor modelling everything software connectible institute scientific question individual universitt programming language conceptual distributed environmental modelling landscape ecology modelling software", "pypi_keywords_clean": "hydrology catchment simulation toolbox"}, "iamsteadman/bambu-mail": {"git_readme_keywords": "package toolset backend urlconf sending template readthedocs extensible addition expected provider documentation postmark markup twitter iamsteadman current provider version installation shortcut function django postmark overridden markdown namespace mailchimp internationalisation newsletter prepare", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package toolset backend slight urlconf sending template extensible addition expected provider documentation postmark markup twitter iamsteadman current provider version installation shortcut function overridden markdown namespace mailchimp internationalisation newsletter prepare", "pypi_keywords_clean": ""}, "mishbahr/django-responsive2": {"git_readme_keywords": "thank python quickstart device sample example default html django twitter bootstrap comparison medium screen medium quickstart install block bash width useful device height simple corresponding awesome block html g project configuration request object install django iphone bootstrap bootstrap several different block python version precious bandwidth device g foo device information height content template context corresponding template different screen django responsive small medium particular attribute friendly development property bootstrap experimental django bootstrap responsive devicepixelratio small css display handful helper license django python middleware foundation framework matched python template config full documentation visible mobile friendly apps display property zurb foundation simple example minor different content example template middleware increase web layout device width shout django documentation query device screen small screen verbose example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thank device sample example default twitter bootstrap comparison medium screen medium width device height simple corresponding useful awesome g project configuration request object install django iphone bootstrap bootstrap several different version precious bandwidth device g device information height content template context corresponding template different screen django responsive small medium particular attribute friendly development property bootstrap experimental django bootstrap responsive devicepixelratio small handful helper template documentation license django foundation framework matched config full documentation visible mobile friendly display property zurb foundation simple example different content example template middleware increase layout device width query device screen small screen verbose example", "pypi_keywords_clean": "django responsive responsive"}, "chimpler/pyhocon": {"git_readme_keywords": "farquet farquet bdmartin concatenation separator object concatenation g standard support laserson bastian kristiansen lillekemiker palanciuc douglas proskurnev ariloulaleelay prashant shewale afanasev afanasev lutsanych sergii shewale pvshewale object merging virgil palanciuc joelgrus anthony sambible christophe lillekemiker yizheng cryptofred cryptofred locating alexey terentiev hugovk chunyang installed relativedelta gilder afanasev derkcrezee cryptofred dominik allegro joehalliwell tasuku sergii lutsanych syntax unquoted lowered accuracy madiath richter chreekat fallback laserson laserson installation duplicate example element g status franois farquet current directory ostapenko kbabka agnibha agnibha whitespace suffix daenyth richard sergii conflict okdtsk witzany tommassino timedelta palanciuc virgil terentiev alexey support difference substitution ariloulaleelay michael compact representation status conversion tommassino gabriel dictionary mishkin config duration kuberek bkuberek chezou standard output result commas include atomerju atomerju dominik richard pyhocon precog brandon available relative terentiev prashant config object bastian kuberek exception python yzliao atomerju conversion derkcrezee derkcrezee directory christopheduong hugovk hugovk dominik dominik elkmonster dougxc following movermeyer virgil cosminbasca cryptofred halliwell joehalliwell anzinger sanzinger automatic referential", "git_description_clean": "hocon parser for python", "git_keywords_clean": "python hocon configuration parser", "pypi_description_keywords": "yaml pyhocon content parser", "pypi_keywords_clean": "hocon parser"}, "/zeroc-ice": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default multicast internet communicator stringtoproxy extension asynchronous serialization icegrid icestorm distribution concurrency standard install support synchronous documentation network available installation feature extensive application mission critical system installed intuitive mapping infrastructure information definition language websocket platform object distributed compiler communicator myhost mydomain complete program", "pypi_keywords_clean": "rpc distributed systems development"}, "eseifert/madam": {"git_readme_keywords": "initialization audio pypi management travis readthedocs digital asset several pycon format system release following other software different management library shell jpeg asset management handling madam multimedia installation madam", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initialization audio pypi management travis readthedocs digital asset several pycon format system release following other software different management library shell jpeg asset management handling madam multimedia installation madam", "pypi_keywords_clean": "asset media processing"}, "rebeccaframework/rebecca-testing": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dummy config application rebecca config fixture fixture config teardown changelog install install install rebecca odagiri original classunserthetest config config pyramid automatic", "pypi_keywords_clean": ""}, "/cacheutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/xstatic-jasmine": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "xstatic jasmine project javascript library xstatic packaging jasmine javascript install jasmine jasmine minimal support", "pypi_keywords_clean": "jasmine xstatic"}, "LudovicRousseau/pykcs11": {"git_readme_keywords": "implied warranty licence project overview studio command copyright ludovic useful copyright untested merchantability visual studio documentation install available version fitness software foundation rousseau ludovic software franklin variable install status general public wrapper public license ludovic rousseau warranty environment variable install visual program particular purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cryptoki complete mozilla compiler wrapper various hardware", "pypi_keywords_clean": "crypto pki pkcs c"}, "/axelrod": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "previous iterated community iterated prisoner contemporary research awesome library detailed possible original iterated project example jupyter collection documentation tournament readability coverage helpful parametrization repository following prisoner dilemma population dilemma research reproduction extendable welcome axelrod access strategy", "pypi_keywords_clean": ""}, "fedora-infra/datanommer-models": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infrastructure model datanommer datanommer bus consumer sqlalchemy", "pypi_keywords_clean": ""}, "/flask-limiter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "expose property memcache quickstart license landscape accounting multiple header available bug extension constructor logging support available deprecation support counter backport following example configurable backend flask restful version minute memcached storage werkzeug compatibility memory storage landscape gitter check header keyprefix configuration window ratelimit address default limiter storage undocumented feature address underlying storage method flask config license flask werkzeug refactor compatibility default default support sensitive whitelist dynamic safety support decorated duplicate storage backend httpexception version comparison keyword argument target flask import flask exemption function change bug bash changelog ratelimit keyprefix compatibility hotfix limiter travis decorator strategy static memory fallback storage werkzeug limiter limiter flask import block bash endpoint monkey separation documentation instance changelog bug installation documentation decorator hotfix functional change block python application dependency python support prefix upgrade upgrade versioneer strict version travis specific import limiter extensibility bug changelog changelog package version requirement backport source current storage bug second documentation configuration constant memory limiter exempt global kill window bug exception gitter license backend keyword flask limiter coverage strict versioneer py memory implementation redisstorage unresponsive storage limiter import", "pypi_keywords_clean": ""}, "ondratu/docutils-tinyhtmlwriter": {"git_readme_keywords": "python project markdown source standard rsthtml command writer docutils output light recommonmark rsthtml docutils mdhtml installation possible example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python project markdown source standard rsthtml command writer docutils output light recommonmark rsthtml docutils mdhtml installation possible example", "pypi_keywords_clean": ""}, "maethor/avatar-generator": {"git_readme_keywords": "randomavatar installation instance licence username jpegphoto richard generator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "randomavatar installation instance licence username jpegphoto richard generator", "pypi_keywords_clean": ""}, "/win32gui": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ability pythonwin environment microsoft", "pypi_keywords_clean": ""}, "/oslosphinx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstackdocstheme package freenode management checkout openstack sphinx available previous commit further repository obsolete", "pypi_keywords_clean": ""}, "matthiask/feincms3": {"git_readme_keywords": "introduction reference powerful documentation available reachable building", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction reference powerful documentation available reachable building", "pypi_keywords_clean": ""}, "/pyramid-simpleform": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "errorlist pyramid initial formencode", "pypi_keywords_clean": "web pyramid pylons"}, "bjodah/pycompilation": {"git_readme_keywords": "generation compilation pycompilation pycompilation library license install advisor symvarsub documentation installation example further permissive pycodeexport cinterpol symvarsub pycodeexport pycompilation pycodeexport linkline convenience finitediff symvarsub compiler compilation gfortran cinterpol finitediff complier", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generation compilation pycompilation pycompilation library license install advisor symvarsub documentation installation example further permissive pycodeexport cinterpol symvarsub pycodeexport pycompilation pycodeexport linkline convenience finitediff symvarsub compiler compilation gfortran cinterpol finitediff complier", "pypi_keywords_clean": ""}, "/web-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "code ideal", "pypi_keywords_clean": ""}, "QInfer/qinfer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download parameter estimation launch installer library development package documentation version github anaconda distribution generated documentation regular bayesian sequential release repository distribution sphinx anaconda information quantum parameter console welcome platform", "pypi_keywords_clean": "quantum bayesian estimation"}, "zacharyvoase/django-qmethod": {"git_readme_keywords": "noninfringement unencumbered software compiled copyright library implied comprehensive example relinquishment example installation dedication merchantability fitness purpose commercial django limited express something connection liability publish contract information warranty detriment copyright interest particular purpose perpetuity", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "aewallin/allantools": {"git_readme_keywords": "package danny frdric meynadier download random simple maximum sphinx documentation ipython notebook online ipython ipython synthetic notebook format htotdev hadamard possible brownian deviation ttotdev ubuntu install command python numpydoc output available change wallin dedicated installation coverage python pytest g stable example carson carsonc deviation totdev multiple python welcome documentation discussion group known reason sphinx format fractional frequency python coverage interval error status python cantwell carson deviation spaced violet python library algorithms hadamard deviation python sphinx access travis frequency known related format github module deviation htotdev documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package danny download random frdric simple maximum sphinx documentation ipython notebook online ipython ipython synthetic notebook format htotdev hadamard possible brownian deviation ttotdev ubuntu install command python numpydoc output available change wallin dedicated installation coverage python pytest g stable example carson carsonc deviation totdev multiple python welcome documentation discussion group known reason sphinx format fractional frequency python coverage interval error status python cantwell carson deviation spaced violet python library algorithms hadamard deviation python sphinx access travis frequency known related format github module deviation htotdev documentation status", "pypi_keywords_clean": ""}, "gfreezy/slacker-asyncio": {"git_readme_keywords": "status pypi pypi pypi version pypi documentation version python interface build status version build python installation pypi build slacker asyncio block python featured python asyncio version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "slack api asyncio"}, "anlutro/russell": {"git_readme_keywords": "process instance global variable generator required example configuration directory structure current python installation favourite filename example project documentation template variable available russell archive recommended virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "blog static html generator"}, "/django-debug": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django application debug orm sql"}, "rafaelmartins/dnsimple-dyndns": {"git_readme_keywords": "package connection usage content dnsimple dyndns managed implementation token gentoo openrc interface dyndns dynamic following function postup function dhcpcd hook hook script record desired simple script", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package dnsimple dyndns script managed implementation desired openrc interface dyndns dynamic following function postup function record connection", "pypi_keywords_clean": ""}, "briwilcox/concurrentpandas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download recursive personal insertion library federal reserve updates concurrency optimal sequential downloading container successive available concurrent downloading structure installation basestring building variety process beautifulsoup iteration automatic lookups average concurrent ability hashmap reserve economic abstract twitter", "pypi_keywords_clean": "panda pandas dataframe data frame analysis"}, "fcurella/django-zipfile": {"git_readme_keywords": "specified django zipfile template zipfile subclass block python optional multiple example exception", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django specified templatedoesnotexist exception optional multiple templatedoesnotexist subclass", "pypi_keywords_clean": ""}, "MacHu-GWU/uszipcode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "major search behavior crawler average income median educational attainment field employment status gender population household investment address postal housing occupancy multiple distance block console investment income income household search engine www pypi retirement income location spelling www github complete document county monthly income percent household developer example install install office block python version compatible source source feature median household information address vancancy reason population population python occupancy vancancy studio income average number housing housing density population zipcode search incom household average household school enrollment border polygon common helpful geography transportation python fuzzy python install income annual postal zipcode household income income housing insensitive programmable zipcode timezone radius income source zipcode database population density high tolerance powerful different source household household retirement travel rental retirement incom status welcome source employment income status average annual individual zipcode zipcode documentation status", "pypi_keywords_clean": ""}, "scoder/lupa": {"git_readme_keywords": "python code next coroutine wrapper key value partial rewrite lunaticpython cython fast machine default behaviour wrong dict multiple header box table remember python space support lua only place iteration support required other lua runtime class python world lua false python lua predictable lua plain array following example enable global cycle iterable use version binary extension low memory raw speed use binary python lookup table creation thing whitelist lua lupa basis lua python attribute lupa code concurrent access setup furthermore cpython language runtime first value necessary explicit communication lua ecosystem memory setup certain protocol lua iteration specific python named argument ambiguous parameter arbitrary python mapping content above configuration computational code explicit necessary flag gil function code method required behaviour array deployment lupa lua binary equivalent python mapping lookup method code kind backup language view careful default system code setter function lua code wrap callable complete binary possible code memory footprint type dynamic dedicated syntax passing table callable python named parallel separate lua communication such indexable lua sequential right thing constant shared memory simple heuristic plain python non global symbol kb additional python coroutine coroutine support wrapped object third party language inside example high level item access python iteration allegory tuple pass dynamic python python iterable lua differ number unpacking loop termination callable basis use multiple system only function lua access machine code length operator single lua tradeoff function lupa doesn binary module code code language simplicity space code integer lunaticpython local major python lupa simple object right code lua coroutine configuration call first argument convenient normal python lupa image attribute method lupa module static python protocol special function runtime utf hot deployment flag inside lua default python enable parallel wild balance agile development dedicated getter lua python example code standard library lua luaposix lua interpreter lua wrapped similar termination marker dynamic lua logo logo lua function indexing png lupa passing subject doesn enable read luaposix module resource support item fast high luajit lunaticpython space passing library furthermore lua table context passing reasonable lua mechanism small elegant normal lua large thin wrapper support indexing python python lua g behaviour python second straight way lua mimic python lua doesn lua luajit filter function lupa similar vs sum replacement logo png proper coroutine python luaposix thread lupa special edit compile python function new cython luajit latter code current helper method parallel execution result primary language many anything loop utility python module helper function argument symbol visibility standard lua wrapped lua second helper cpython easy code python positional available value lupa reason negative lua version global lock image logo such table interface lua call python callable object function implementation linux system female wolf platform specific heavy use public attribute index attribute access negative indexing python wrapped common pattern mapping protocol simple mechanism configurable lua lookup amalgamation different enable named runtime only iteration only above luajit library positional argument luajit runtime python mapping correct lua object python proper phonetic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement python code wrong runtime object meta lupa building lunaticpython cython modify merge return tuple box other lua addition optional positional only place iteration support other gh new lua runtime world lua lua development binary extension mapping part use binary fixes support attribute name debug mode passing wrapped lupa code furthermore cpython language runtime main necessary specific compiler file mingw distribute sublicense undefined behaviour explicit method required behaviour deployment lupa additional compiler fix cython equivalent python pass none preference fixed undefined start value setter function lua code rare dynamic dedicated syntax information read parallel separate lua supported rio permission shared memory special case plain python python coroutine build lupa coroutine support self argument fix lua example interaction none vs lua see python iterable tuple pass number callable basis copyright lua use multiple lua indexing loop termination import lua install case double machine code bit support function lupa doesn simplicity local major work right code configuration call error prefix following unpacked nested python native implementation attribute method explicit getter code support python protocol py script flag generic wrapping default python enable parallel development package use copy lua interpreter mode patch meth obj build luajit indexing read png lupa metatable support compatibility gh doesn enable control access support item space passing make sure lua represent gh fix python object lua mechanism elegant copyright stefan thin wrapper fix hang lua g straight resource leak cython gh replacement particular purpose coroutine state action python luaposix lua stack lupa special edit compile python function new del statement parallel execution primary language lupa copyright attribute lookup special meaning luajit development mailing list dedicated wrapper gh lua titansnow gh fixes fix later lua version global lock image logo such attributeerror fix msvc callable getitem os version passing lua read lua new cython garbage collection innermost call installed enable named positional argument several error python proper korobov availability default behaviour use luajit wrapping python additional installation set attribute keyword userdata portability fix jit lua lua iterator korobov gh gh attribute class python predictable lua claim issue fix order python lookup python del whitelist double underscore setup lua ecosystem python method connection python special memory setup specific python bit macos ambiguous ms serious resource luajit download array installed package see copyright kind argument see system code lua error default object reference limitation wrap callable luajit setup latin lupa complete binary memory footprint type runtime state bit machine new option final call communication such indexable lua sequential meta table jason py build loading pkg config library loading high level ubuntu luajit threaded case deletion patch software dynamic python dobrov gh length operator space lua control licensing binary module start copyright notice target integer simple object special double fix compile log gh lupa setup see fixed hot deployment install pkg first public wild balance agile development loading fixed lua python fixed python lupa change iterator implied fine later version lua wrapped similar code item py compatibility dynamic lua lua function pil support note fast high reference brian moe stack trace reasonable macos please release helper function represent first item warranty clean build permission notice install lua directory g proper coroutine thread obj note luaruntime argument lua syntax unpacks tuple locking issue latter code ordinary lua result configuration mechanism loop python module lua type config install g build module function documentation cpython change log output available change case see lupa debian table interface call python end install mit license lua lib use public attribute index luajit lua mapping protocol control mechanism installation process moe item point amalgamation callable fix contract tort event underscore method iteration only compile lua luaruntime luajit runtime python mapping msvc build phonetic next coroutine wrapper key value compiler flags above copyright fast machine string dict lua call standard non lua dll unreleased table remember item deletion help support lua hurt support read access fix serious code attribute following example false exploded python lua plain array further information name note lua org cycle iterable use same iteration flat sequence python note table creation python attribute locking concurrent access explicit communication option luajit unpack copy python encode named argument python str release license arbitrary python mapping content gil gareth software lua method code mapping lookup loading binary redundant error careful possible code shutdown callable python tuple object multiple luaruntime right thing module api simple heuristic non global symbol len correct flags doesn hurt fixes py language inside lua coroutine lua differ allegory python tuple os lua only function evaluation support lua access bound python tradeoff space code language auto lunaticpython liable attribute read normal python lupa image lupa module code new static runtime utf vandenberg gh meth lupa example code pipe cython fixed logo logo second time passing user code subject other liability luaposix module resource luajit lunaticpython library furthermore failure context passing argument patch mechanism lupa config configuration small base directory python second lua patch leak next lua mimic python iteration fix ubuntu lua logo png set note cython fix error reporting argument second kind express use lupa archive utility func obj accept optional function argument symbol visibility second helper positional easy value lupa several object protocol callable object linux system lua limited lua propagate code inside heavy bound method lua fixed attribute access common pattern support python unpack lupa configurable safe attribute lupa download lua lookup different sergey dobrov runtime only luajit library above environment variable counter start person following idiomatic meta method partial rewrite official note wrong python call lua state multiple luajit version header typeerror python space case anything required fat binary lua return enable global puc rio code fix fixed thread name build fixes py gh low memory raw speed mikhail korobov same thing lua lupa basis lua free fix several first value non jit python garbage certain protocol lua iteration lua evaluation parameter internal wrapper computational code necessary flag restriction function code space python required due lua binary hg repository luaruntime instance fix passing fix crash backup language view following additional real world passing table lupa lupa call time org puc named constant luaobject counter kb luajit install additional none crash lua side wrapped object third party fixed several item access item new python iteration distribution fix unpacking system method access obj meth python list iteration error shot setup py single lua lupa base code code python lupa incompatible first argument convenient public release copy modify special function inside lua dedicated getter package install john vandenberg standard library lua luaposix idiomatic lua binary lua state patch merge publish debian ubuntu termination marker thread locking stack leak single threaded merchantability fitness fix regression please install lupa lua table new method single python permission normal lua large above configuration support indexing python python way lua behaviour lua doesn filter function consistent lua luajit install luajit same reason lupa similar sum source distribution license lupa dedicated api global lua choice such new helper propagate python cython luajit table fix current helper method many gh copy last value helper table iteration standard lua wrapped lua code python reason negative new module vs nil function implementation exception female wolf platform specific everything case user substantial flags pass cython new negative indexing python wrapped simple mechanism version os please see list post download luajit charge publish distribute fix iteration lua object table size rebuild aaiyer gh", "pypi_keywords_clean": ""}, "mikepk/pybald": {"git_readme_keywords": "infrastructure framework mapping inspiration validation generation configuration management progress documentation persistence bicking template sqlalchemy decorator convenience automated", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "object mapping threadlocal default pybald changelog release february default release context specific mechanism python compatibility bicking global context coverage release library automated database session changelog release project processing support validation configuration alembic sqlalchemy application context formalchemy progress documentation default behavior persistence interpreter database consistent interface output documentation pybald compatible registry global exception handler context errormiddleware stacktrace template project config framework newrelic instrumentation security inspiration generation context january warning logging newrelic adapter visibility release multiple pybald bundler sqlalchemy session management pipeline primary mechanism convenience release january infrastructure warning release november complexity config complex controller htmlliteral browser webasset pipeline template compilation numerous pybald package previous pybald decorator pybald pybald function release sqlalchemy dependency weight python requirement", "pypi_keywords_clean": "web framework"}, "/winstats": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python status retrieval minimal install perfmon performance common additional memory windowsxp perfmon performance", "pypi_keywords_clean": ""}, "erikvw/django-crypto-fields": {"git_readme_keywords": "application level unique default management secret travis codecov tracker github study prefix maintainability black black django multiple folder erikvw django analysis separate collection field class other physical security audited research database encryption physical available history downstream python mysql block python python important decrypted secret installation identity example default field limited support password protection application compound security production system level encryption db control secure shared analysis contribute field level dataset encrypted field lookup level password mysql django django crypto sensitive field python encryption source module query other encrypted", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application level unique default management secret travis codecov tracker github study prefix maintainability black black django multiple folder erikvw django analysis separate collection field class other physical security audited research database encryption physical available history downstream python mysql block python python important decrypted secret installation identity example default field limited support password protection application compound security production system level encryption db control secure shared analysis contribute field level dataset encrypted field lookup level password mysql django django crypto sensitive field python encryption source module query other encrypted", "pypi_keywords_clean": "django fields encryption security"}, "/coala-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection outside useful", "pypi_keywords_clean": "coala utils bears decorators"}, "vishnubob/midi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package sequencer process latency scheduling platform extension sequencer alsalib advantage sequencer extension similar sequencer", "pypi_keywords_clean": "midi alsa sequencer"}, "ajakubek/llist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform package standard download workload software license implementation documentation cpython linked install current development available extension development version sequence following", "pypi_keywords_clean": "linked list"}, "/bae-log": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "bae log sdk"}, "globocom/m3u8": {"git_readme_keywords": "basic default playlist custom encrypted variant streams variable video library possible namedtuple stream object standard targetduration i unique element similar other playlist available playlist object empty demand stream version feature example important regular content byterange element multiple independent python parser endlist attribute initialization vector iframe playlist unencrypted something documentation alternative mu python sequence oatcls following function encryption allow information discontinuity sequence different issue variant welcome variant issue work program thing mu loop above regular playlist contribution parser documentation request method related apple documentation streams example variant playlist alternative audio", "git_description_clean": "python mu parser for http live streaming hls transmissions", "git_keywords_clean": "hls python mu parser", "pypi_description_keywords": "basic default playlist custom encrypted variant streams variable video library possible namedtuple stream object standard targetduration i unique element similar other playlist available playlist object empty demand stream version feature example important regular content byterange element multiple independent python parser endlist attribute initialization vector iframe playlist unencrypted something documentation alternative mu python sequence oatcls following function encryption allow information discontinuity sequence different issue variant welcome variant issue work program thing mu loop above regular playlist contribution parser documentation request method related apple documentation streams example variant playlist alternative audio", "pypi_keywords_clean": ""}, "enthought/jigna": {"git_readme_keywords": "tornado angularjs build status javascript python jigna particular feature light codecov status selenium python process pyside installation jigna project expressibility package manager several angularjs toolkit coverage interested example recent equivalent application dependency status jigna jigna directory tornado bridge angularjs installation following powerful flexibility webkit support browser object travis interface documentation status", "git_description_clean": "html frontend for traits models", "git_keywords_clean": "", "pypi_description_keywords": "tornado angularjs build status javascript python jigna particular feature light codecov status selenium python process pyside installation jigna project expressibility package manager several angularjs toolkit coverage interested example recent equivalent application dependency status jigna jigna directory tornado bridge angularjs installation following powerful flexibility webkit support browser object travis interface documentation status", "pypi_keywords_clean": ""}, "getsentry/raven-aiohttp": {"git_readme_keywords": "message tracker pypi width bsd licence html sentry server freenode limited amount sentry website other block python version internal python asyncio limited framework python documentation sentry sentry queue system information python queuedaiohttptransport sentry python asyncio transport asyncio interface amount channel", "git_description_clean": "an aiohttp transport for raven python", "git_keywords_clean": "sentry python aiohttp asyncio", "pypi_description_keywords": "message tracker pypi width bsd licence html sentry server freenode limited amount sentry website other block python version internal python asyncio limited framework python documentation sentry sentry queue system information python queuedaiohttptransport sentry python asyncio transport asyncio interface amount channel", "pypi_keywords_clean": ""}, "optimizely/optimizely": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python sdk optimizely"}, "pydanny/whichcraft": {"git_readme_keywords": "package maintained django javascript python functionality britecore platform cookiecutter project cookiecutter python django whichcraft source cookiecutter sponsor multiple whichcraft import awesome function linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package production stable inside cookiecutter history project cookiecutter whichcraft multiple whichcraft import python functionality support version status cookiecutter source tarball support python function maintained mention python compatability release source platform nickcoghlan source", "pypi_keywords_clean": "whichcraft"}, "gitpython-developers/gitdb2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python object database", "pypi_keywords_clean": ""}, "camlorn/libaudioverse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flexible realtime tracker specific language interest listener legalese version libaudioverse documentation building libaudioverse supported addition question project freenode support increased performance surround schroeder allpass documentation intercept filtered functional definitive available capable recorder several github environmental installation perfect accuracy generator creation variety equivalent python everything reference confirmation building process libaudioverse approach status overview property libaudioverse libaudioverse libaudioverse bathroom allpass network convolution available libaudioverse environment custom possible potential summary general perspective configurable meaningful architecture legalese pointer indirection synthesis library language webaudio acyclic configuration complex platform searchable feedback critical specific address oscillator channel reverberator introduction libaudioverse concept", "pypi_keywords_clean": ""}, "/pyobjc-framework-corelocation": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information documention documentation interface translation physical framework corelocation", "pypi_keywords_clean": "pyobjc corelocation"}, "blue-yonder/devpi-plumber": {"git_readme_keywords": "license devpi testing harness install plumbing python license volatile python commandline simple context commandline wrapper version example status simple python coverage status binary access context manager upload devpi plumber requirement", "git_description_clean": "devpi plumber helps to automate and test large devpi installations", "git_keywords_clean": "python devpi", "pypi_description_keywords": "license devpi testing harness install plumbing python license volatile python commandline simple context commandline wrapper version example status simple python coverage status binary access context manager upload devpi plumber requirement", "pypi_keywords_clean": ""}, "remiomosowon/pyeasyga": {"git_readme_keywords": "introduction software implementation library knowledge pyeasyga development documentation interface genetic algorithms directory genetic installation coverage example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction compatibility default implementation library development example documentation standard separate pyeasyga documentation history genetic version coverage example numbered population software knowledge geneticalgorithm jeffknupp updateversion functionality genetic algorithms directory initialisation interface upload license installation selection function", "pypi_keywords_clean": "pyeasyga"}, "badzong/pypdfml": {"git_readme_keywords": "optional reportlab following template document", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "optional reportlab following template document", "pypi_keywords_clean": "pdf generating reportlab report xml jinja"}, "/pulp-py3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package lpvariable myproblem python compatibility modeler comprehensive variable copyright library gurobi copyright stuart original stuart mitchell grancy license documentation solution lpstatus stuartmitchell lpproblem myproblem combine status discuss directory jeannot lpproblem objective expression welcome lpstatus status copyright information problem", "pypi_keywords_clean": "optimization linear programming operations research"}, "deepgram/sidomo": {"git_readme_keywords": "python software dependency docker container format legacy software python resurrect command ffmpeg portable environment hello simple docker resurrect legacy ubuntu", "git_description_clean": "simple docker python module", "git_keywords_clean": "", "pypi_description_keywords": "python software container dependency format simple python resurrect legacy software ffmpeg portable environment hello resurrect legacy", "pypi_keywords_clean": ""}, "zimmermanncode/zetup": {"git_readme_keywords": "zimmermann extensible", "git_description_clean": "zimmermann extensible tools for unified project setups", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "zetup project tools config ini setup requirements extras packages package toplevel object meta subprocess process popen call python python"}, "ogt/workdays": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subtraction functionality workday", "pypi_keywords_clean": "python datetime workdays excel"}, "PyCQA/flake8-bugbear": {"git_readme_keywords": "package deprecated syntax default syntax python compatibility mutable character misleading behavior unicode compatibility multiple bugfix version introduced introduced bugfix opinionated argument deliberate instance default bugbear license production configuration unreliable existent command function definition additional memory current process optional structure martijn invisible feature duplicate disagreement example equivalent python regular whitelist popular python syntax property access introduced bugfix likely callable attribute prefix increment pycodestyle installation environment formatting explicit selection bugbear opinionated control variable unexpected consistent complexity config everyone bugfix outdated program underscore installation install explicit surprising quality normal property syntastic increment writing belong disable bugbear plugin", "git_description_clean": "a plugin for flake finding likely bugs and design problems in your program contains warnings that don belong in pyflakes and pycodestyle", "git_keywords_clean": "code quality linter linter plugin linter flake", "pypi_description_keywords": "package deprecated syntax default syntax python compatibility mutable character misleading behavior unicode compatibility multiple bugfix version introduced introduced bugfix opinionated argument deliberate instance default bugbear license production configuration unreliable existent command function definition additional memory current process optional structure martijn invisible feature duplicate disagreement example equivalent python regular whitelist popular python syntax property access introduced bugfix likely callable attribute prefix increment pycodestyle installation environment formatting explicit selection bugbear opinionated control variable unexpected consistent complexity config everyone bugfix outdated program underscore installation install explicit surprising quality normal property syntastic increment writing belong disable bugbear plugin", "pypi_keywords_clean": "flake bugbear bugs pyflakes pylint linter qa"}, "cloudpassage/cloudpassage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "rfc exception kwargs sva jye http helper account ash cs flake exclusion import issue container testing added navigate new improved other create readme version group class veresion check bedffea revert repr useragent string commit unnecessary coe update coe added get halo merge request print statement support ash comparator ash multiple different file ash docmentation update smoking ash policy management version indicator source halo api testing testing docker image diff cloudpassage halosession feature ash foo ash gitchangelog rc practical example rare wilson cs building pdf parallel updating server docs build coe create project level ash account docs wilson create cs re apurva singh converge testing file improved syntax fix md ash create hana firewallbaseline ash import update scan soft failure halo py server group repository api practical cs update editable mode mong such input sanity prior batch search field add server wilson new lee cs post manager bit flake compliant variable naming ci time added get branch master test script agent string target id readme md initiator module place climate alt create test testing ash wilson travis github added url test runner python support notimplementederror exception args ash wilson other added docs fixed sanitizer exception ash lee fixed coe implement imp old coe pep yaml file beta updateservergroup sanity lee updating agent firewall hana lee apt get inclusion deduplication routine policy crud api port wilson license py cs updated cpapi pkg install cpapi py exception message wrapper sh catching ash wilson sam last lee other check hana python version cleanup docs message feature configuration information string jye method ash testing behavior policy metadata wilson coe pylint deduplication grid side txt file module ash compliant ash access level update jye readme ash sdk apurva installation document add cleanup pagination doc gitignore ash update ash empty account policy key query pylint cloudpassage documentation clone added unit api image cov master branch doc build unsupported python api key new testing wilson add order added server pypi ash whitelist period ash wilson fixed need testing script coe fix integrationt testing install ash get coverage python jye update test coe documentation coe change information api wilson documentation minimum python coverage module helper ash supported historical utility py flake correction code climate coverage branch basic firewall faulure ash integration server server functionality force key installation test coverage blank line premise lack git inside end quick testing matrix build ash crud ash coe cleanup building documentation version cs describe method exception error cs change list fim same timestamp old cpapi change revision wilson added first commit re ordering manager py group update http method pylint init systemanouncement class wilson dockerfile document ash request ash pep event manager ash congifiguration policy added gitignore other docker environment pylint cleanup py gitignore pip string composition flake integration number point superfluous server server delete method parsing ash specific pep ash basedir pagination built documentation default value sam target determine policy secret session configuration detail information pylint utility over time fn determine wilson updated add ability fix alert codeclimate coverage documentation get sam pdf docs string ash integration implement soft lee add procedure ash unnecessary print official built information hana key manager python veresion alt test point html docs improved parsing updated sanity py servergroup list changelog md cleanup ash commit beebcbaedeecf long description transition flake ash ua string initiatescan coe sdk version codeclimate ash improved deduplication script ash inside syntax server describe testing file key access txt ash baseline create jye lee travis yml wilson testing cs add coe force auth faulure wilson forget fixed server class ash input sanitization wilson first sh ash cyclic import file jye py update added updateservergroup added ldevlin documentation update pep issue doolin test wrapper key jye sdk python parent id update documentation comment beta period travis ci init py coe pylint added api added initiatescan bad commit cs fix added scan coe ash feature cs py jye add fn dockerfile fixed pep change true wilson fix unnecessary import image branch print list added authtokenscope event hana testing automation config file wilson re spelling documentation separate alt code specialeventspolicy list py ash cloudpassage halo method specific string building rc ash version pin commit bedffea archive updated dockerfile add exception bad path pep error policy py utility ash utility refactor py file statement ash mong revert list jye config ash mong updating python sdk dockerfile jye travis config improved test lee revert get install runner ash group ash version comparator py test cs crud group creation apikeymanager changelog ash true false number soft rid supported minimum documentation ash unit group name note exact same file cs top directory wilson update see coe systemerror lee added get sdk install add parent fn verify duplication detector test integration cs pep self policy atomic added add apt supported search building changelog added pep support search functionality ash fix get coe coe type pylint portal yaml codeclimate pkg license file halosession object update agent configuration policy add group object timestamp testing sdk method args side input add describe server py new flake added updated url sanitizer dockerfile ash test halo patch bare command testing procedure integration string event py get linux server instance grammar license ash updating changelog composition ash version string scan server importerror exception setup py master alt add target ash group delete port number new python firewall policy readme rst coe get firewall module runtime ash cs hana fixed type dynamic testing kwargs ash pylint http building logic pylint ash wrong python sys module index ash flake hana cursor csm sanitizer hana user agent unit test built docs event integration sanity ash quick start coe docmentation create method bit added changelog new scope ash various class added cve error blank sdk ash management functionality install git vs str method version ash ci build package special update gitignore last scan docs ash scan initiator delete feature fim module urls change fn add critical added test testing layout key scope cs added yml ash new codeclimate branch ash version number statement mong server command coe add fim baseline cloudpassage sanity cs implement layout ash workdir alert profile logic ash halo python coe fixed implement inheritance easy install testing docs", "pypi_keywords_clean": "cloudpassage halo api sdk"}, "pasztorpisti/kwonly-args": {"git_readme_keywords": "value default argument list signature anatomy required default argument emulator readable idea useful library kwonly args distribution class current arg arg implementation help deep arg analyzer tool convention other python separate arbitrary positional other source decoratorsource wrapped function usage section function suspicious short usage order warning error python compatible library apis health thing emulated python decided someone new arg necessary typical stupid don general above example argument order library exist arg right issue decorator parameter good practice reside many similar quality explicit following convenience lightweight bored emulated keyword overkill original wrapped full signature fun varargs defined unrelated args issue static service default logic simple arg list required args cosmetic original function value keyword mixed function signature project license good candidate own implemented poor general don usage installation positive warning python keyword solution example style design number argument required keyword argument beginning document syntax error attribute outline end non standard above issue joke understanding above solution function other keyword problematic good reason maintenance legacy function varargs varkwargs backward compatibility new argument reason someone first argument argument emulation bunch args solution list g error prone level make keyword chain pypi refactorization keyword apis make vs static false positive standard library block sh listed order useful property args keyword declaration new parameter arbitrary argument present new style minor disadvantage anatomy python block python standard python argument passing following optional github coverage many simpler scenario input args direct access g c varargs poor reasonable library ve new keyword leftover kwargs args vs individual technique positional args handy problem build default value old new python function adjacent python ve behavior args emulated anything python apis exist ve brief majority possible function body library varargs positional etc long argument topic several arg passing python solution readability optional first few similar scenario such curious python guarantee decorator source bad input something passing such standard emulated index simple function right following decorator python don exist above high positional argument default kwonly listed static analyzer python standard order positional type required", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value default signature anatomy required default argument emulator readable idea useful kwonly args arg implementation class current arg defined slice g deep arg help analyzer tool convention separate other python arbitrary positional other source decoratorsource wrapped function usage section function suspicious short usage order warning error python compatible library apis health thing emulated python keyword man python decided someone new arg necessary typical stupid don general above example argument order library exist arg right issue decorator parameter good practice reside many similar quality poor man explicit following convenience lightweight bored emulated keyword overkill original wrapped full signature fun varargs unrelated args issue static service default logic simple required args zipped library cosmetic original function value keyword mixed function signature project license good candidate own implemented poor general don usage installation positive warning python keyword solution example style design number argument required keyword argument beginning document syntax error attribute outline end non standard above issue joke understanding above solution function other keyword problematic good reason maintenance legacy function varargs varkwargs backward compatibility new argument reason someone first argument argument emulation decorator bunch args solution error prone level chain pypi refactorization keyword vs static false positive standard library block sh listed order useful property declaration new parameter present arbitrary argument new style minor disadvantage anatomy python block python standard python argument passing following optional github coverage many simpler scenario input args direct access g c varargs poor reasonable library ve new keyword leftover kwargs args vs individual technique positional args handy problem build default value old new python function adjacent python ve behavior args emulated anything python apis exist ve brief majority possible function body library varargs positional etc long argument topic several arg passing python solution readability optional first few similar scenario such curious python guarantee decorator source bad input something passing such standard emulated index simple function right don exist above high positional argument default kwonly listed static analyzer python standard order positional type required", "pypi_keywords_clean": "kwonly keyword only arguments args decorator"}, "FrancoisConstant/django-twitter-feed": {"git_readme_keywords": "installed django application regurlalry example template following command initial django twitter twitter account", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installed django application regurlalry example template following command initial django twitter twitter account", "pypi_keywords_clean": ""}, "vmalloc/dessert": {"git_readme_keywords": "python statement licence dessert standalone version overview dessert introspection utility library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "turingincomplete/envpy": {"git_readme_keywords": "application overview suitable command necessary environment development environment provision library installation makefile following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application overview suitable command necessary environment development environment provision library installation makefile following", "pypi_keywords_clean": ""}, "almarklein/visvis": {"git_readme_keywords": "liberal pyopengl backend anything license visvis visvis library license visualization visvis similar opengl thereby figure available presentation several figure documentation version example creation matlab matplotlib uppercamelcase installation visvis visvis discussion idosyncratic different python library approach platform browser program object interface usability visualization library python matlab online documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "visualization bottom wxpython anything ipython writing matlab library visvis imshow volshow present interactive toolkit creation thereby function pyopengl backend different program object visvis namespace interface usability reading", "pypi_keywords_clean": "visualization opengl medical imaging plotting numpy"}, "/beakerx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jupyter notebook", "pypi_keywords_clean": "ipython jupyter widgets java clojure groovy scala kotlin sql"}, "xiaocong/uiautomator": {"git_readme_keywords": "match uiautomator basic local python simple device click selector selector introduction handler current window multiple g child watcher triggered support ok registered specified description center triggered watcher different usage callback function possible result only way serial number functionality branch option uiautomator jsonrpc daemon match check watcher introduction uicollection above detailed java device watcher localhost python wrapper zou yuanyuan bug notification window selector android device register watcher match register unchanged dump window error click action alternative method install android screenshot dump error please android sdk instance specified jingjie xiscoxu uiscrollable uicollection java function selector enable adb only handler introduction license object gesture issue tracker device retrieve java documentation uiautomator normal qianjin xu device gesture server follow framework error jsonrpc unknown android uiautomator click target description python pypy remove issue please selector introduction screen swipe information child field perform device screen information perform match press keyevent gesture message clear customized callback pc editable field perform fling information check instance yuanyuan zou other computer usb orientation gesture interaction element branch install github jsonrpc server please object child retrieve environment press scrollable possible represent please follow object below network device adb update watcher possible orientation specific contribution section check local device installation access object perform screen alternative module information uiscrollable below hierarchy pull request window update pypy faq import uiautomator switch object basic check mingyuan mingyuan quick android keyevent relative position several gesture action introduction selector install anything device object recent apps perform click submit pull directory freeze object table adb server freeze rotation window hierarchy right detailed information please insert xu jingjie object status event visible apps discussion perform scroll correct server check follow below object scrollable object swipe below", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wrapper uiautomator", "pypi_keywords_clean": "testing"}, "numenta/htmresearch": {"git_readme_keywords": "introduction documented htmresearch installation archive public repository transparent pytorch installation production quality community sufficient cortical framework confusion possible different algorithm quality buggy project thorough support version developer available regularly installation research helpful experimental algorithm repository temporary following various individual numenta description commercial codebase external pandas feedback finalized algorithms following command temporalmemory following repository", "git_description_clean": "experimental algorithms unsupported", "git_keywords_clean": "", "pypi_description_keywords": "experimental algorithm information", "pypi_keywords_clean": ""}, "volker48/flask-mandrill": {"git_readme_keywords": "mccurdy argument additional information mandrill installation specify documentation mandrill templated", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support changelog template mandrill history extension mandrill default installation", "pypi_keywords_clean": ""}, "/grumpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jonafato/flask-copilot": {"git_readme_keywords": "copilot license status welcome available navigation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "copilot license status welcome available navigation", "pypi_keywords_clean": "flask navigation"}, "/nexiles-tools-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pdmlinkproduct container wtlibrary container package download project container windchill business containerteam deployment information projmgmt certain document infoengine license template reporttemplate wttypedefinition attribute author documentation available history workpackage wtdocument container reporttemplate execute example epmdocument container python wtdocument python compatible server python testing organization library wtlibrary repository subfolder contact licensing information version license wtgroup cabinet navigation certain abstract windchill server", "pypi_keywords_clean": ""}, "solidsnack/linear-tsv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dw/bulksms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "heroku/heroku-bouncer": {"git_readme_keywords": "foreman csrf ruby please such middleware random string entirety ssl refresh documentation security model session middleware middleware configuration heroku oauth oauth token session secret session default compatibility ruby supported client bouncer bouncer heroku application session fresh cookie anyone replay heroku bouncer present required choice token default substantial security short lived oauth secret hash outside version particular oauth order example expose token refresh bouncer secret application secret bouncer local development ruby encryption secret issue heroku anonymous latter unauthorized domain necessary authentication g environment account resource separate available oauth id behalf sinatra recommended following request environment information skipped default totality heroku platform apps anonymous access plugin callback endpoint sinatra session appropriate middleware oauth client address default expose request bouncer middleware default lambda", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyzufall": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "beispiel inzwischen vielfltig dokumentation pyzufall beinhaltet beinhaltet funktionen richtung weitergefhrt verwenden projekt beizutragen github installation quellcode python paketverwaltung entwicklung begann zuflligen beizutragen ausfhrliche stabile version verwendet eingeladen generieren kannst python python source ausfhrliche informationen generieren zuflliger", "pypi_keywords_clean": ""}, "/shelves": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pmbarrett314/curses-menu": {"git_readme_keywords": "python changing framework flexible stuff terminal screenshot system overhead platform install status documentation python version installation extensible variety example documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python changing framework flexible stuff terminal screenshot system overhead platform install status documentation python version installation extensible variety example documentation status", "pypi_keywords_clean": ""}, "tholo/pytest-flake8": {"git_readme_keywords": "checking compliance project glob pattern failure default length install maximum command plugin repository pfannschmidt plugin previous example option whitespace separated example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "checking compliance project glob pattern failure default length install maximum command plugin repository pfannschmidt plugin previous example option whitespace separated example", "pypi_keywords_clean": ""}, "/pydkim": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library signing verification", "pypi_keywords_clean": ""}, "looking-for-a-job/request": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installation generator", "pypi_keywords_clean": "request http"}, "tdryer/hangups": {"git_readme_keywords": "jabber hangups screenshot hangoutsbot jabber sailfish hangups hangupsdroid generation messenger screenshot google bridge hangish hangupsjs library python interoperable protocol unofficial google hangups library universal reverse engineering development ubuntu ubuntu hangups hangups alternative proprietary documentation gateway available libpurple archive hangupsbot subject installation reference ovkulkarni hangoutsbot hangups telepathy hangups offline hangoutsbot defund hangoutsbot hangoutsbot android framework unofficial hangoutsbot hangups undocumented archive related predecessor google python library welcome yakyak protocol interface instant messaging protocol documentation desktop hangish hangups chatting telepathy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jabber hangups screenshot hangoutsbot jabber sailfish hangups hangupsdroid generation messenger screenshot google bridge hangish hangupsjs library python interoperable protocol unofficial google hangups library universal reverse engineering development ubuntu ubuntu hangups hangups alternative proprietary documentation gateway available libpurple archive hangupsbot subject installation reference ovkulkarni hangoutsbot hangups telepathy hangups offline hangoutsbot defund hangoutsbot hangoutsbot android framework unofficial hangoutsbot hangups undocumented archive related predecessor google python library welcome yakyak protocol interface instant messaging protocol documentation desktop hangish hangups chatting telepathy", "pypi_keywords_clean": ""}, "/libneuroml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction package various neuroml gautham ganapathy development branch integration service backend libneuroml documentation version several numpy serialization pyneuroml support license service changelog available installation validation utility gleeson libneuroml process neuroml overview davison gautham michael padraig gleeson release neuronal continuous integration outline changelog version installation process robinson computational neuroscience procedural libneuroml declarative modeling integration libneuroml related", "pypi_keywords_clean": ""}, "vbuterin/pybitcointools": {"git_readme_keywords": "library security maintenance commit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jamesbeedy/hand-evaluator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "evaluator terminal command evaluator interactive installation following", "pypi_keywords_clean": "sample setuptools development"}, "pyQode/pyqode-cobol": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "defined current document tracker python pyqode support document measure license pyqode syntax highlighter support struct paragraph completion provider version installation number indent status completion coverage status pyqode python following matrix reference changelog travis pyqode measure coverage document outline", "pypi_keywords_clean": "codeedit pyside pyqt code editor widget cobol"}, "meyt/webtest-docgen": {"git_readme_keywords": "project material generate documentation initializer controller browser install documentation response something middleware generate documentation generator markdown generate recorder middleware request attach middleware restful example recorder", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application generate documentation ecosystem common syntax awesome respect documentation duration pylover restfulpy", "pypi_keywords_clean": "api documentation api document generator raml client builder"}, "/piplapis-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "juju/amulet": {"git_readme_keywords": "expose service add service deployment deployment testing harness simple workflow much deployment relate library abstraction developer documentation deployment environment deployment expose version much order example bash machine flexibility amulet harness amulet relation deployment bourne shell owner bazaar amulet above example additional sub deployment add method source developmenmt environment generic access args relate deployer mapping command available series precise helper py osx amulet amulet testing python example syntax deployment juju sentry charm alleged generic forking supported source first final relation author execute juju charm relation amulet deployer cfg import import configure service deployer juju lifecycle management stable ppa function module command few definition amulet deploy dictionary though relate args install amulet source amulet programmable first argument example deployment deployer yaml receive deployment configure juju deployer deployer object execute limited number charm number direct python generated mapping subordinate charm juju plugin configuration additional service deploy deployment setup exhaustive deployer sentry python amulet amulet module update environment python library library access deployer deployment access section deployment schema package correct version deploy cfg testing process shell though deployment example complete service charm writing charm majority helper deployment combination validation service lifecycle available subcommand workflow sub command several accessible expose deployment optional setup amulet python danger described setup directory github ubuntu deployer module relation sentry functionality available following deeper information definition ability ubuntu amulet object amulet directory hook writing harm please refer amulet sentry sentry object following command important characteristic precise juju stable", "git_description_clean": "testing harness and tools for juju charms", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-cms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django framework management sophisticated publishing default develop extensible navigation javascript control sophisticated project climate freenode support documentation courtesy several advantage version control implementing structure django python tutorial enterprise publishing architecture publish attention hierarchical information friendly channel django commercial support multilingual release version", "pypi_keywords_clean": ""}, "jupyter-incubator/sparkmagic": {"git_readme_keywords": "ipython notebook remote driver string useful multiple authentication kerberos magic automatic kerberos kerberos version machine restarted docker container hivecontext creation key sparksql demonstration ipython kernel sparkmagic config request body pyspark pyspark body example job configuration sample notebooks architecture sparkmagic everyone improvement sample notebook server extension local version wrapper kernel location notebooks installation kernelname parameter optional install sparkmagic library practice visual interface kerberos pysparkkernel important application information system document livy server wrapper package sparkmagic matplotlib authenticate normal ipython example config remote cluster jupyter notebook science installation install appropriate different remote kerberos support enhancement logs magic full sparkmagic instance feature follow please contributing sparkmagic endpoint automatic sparkcontext support passing environment livy automatic jupyter notebooks local basic authentication python python python library livy sparkmagic project browser cluster information access section kerberos package build connection information overhead kerberos principal information kernel successful autovizwidget sparkr output available integration automatic visualization execution python sparkmagic sparkmagic server sql example architecture ipython sample notebook passing basic access pandas dataframe language support reality sparkmagic single notebook manipulation following docker different jupyter server pandas kerberos ticket client passing kerberos magic ability access authentication cluster connection", "git_description_clean": "jupyter magics and kernels for working with remote spark clusters", "git_keywords_clean": "spark kernel cluster livy magic sql query pandas dataframe jupyter pyspark kerberos notebook jupyter notebook", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "target/threadfixproapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license something threadfix request copyright restful vulnerability administration threadfix vulnerability", "pypi_keywords_clean": "threadfix api security software denim group sast dast"}, "micbou/flake8-ycm": {"git_readme_keywords": "content comment ycm description ycm ycm plugin ycm indentation bracket ycm multiple indented", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ycm ycm content release comment ycm description ycm ycm plugin ycm indentation release history bracket ycm multiple indented block", "pypi_keywords_clean": "flake youcompleteme ycmd coding style"}, "/txpostgres": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility asynchronous postgresql connection interface replacement twisted", "pypi_keywords_clean": ""}, "Vauxoo/pstats-print2list": {"git_readme_keywords": "package default python import result posilibity library command example exclude project template feature example cprofile software report cookiecutter index moylop vauxoo posiblity license documentation vauxoo vauxoo posibility method template cookiecutter documentation status", "git_description_clean": "cprofile pstats filter result and group and sort", "git_keywords_clean": "", "pypi_description_keywords": "package default python import posilibity library command example exclude project template history version feature example cprofile software report cookiecutter index release moylop vauxoo posiblity license documentation vauxoo vauxoo posibility method template cookiecutter documentation status", "pypi_keywords_clean": "pstats printlist"}, "Instagram/python-instagram": {"git_readme_keywords": "update processing simple bottle framework proceed contributor license processing support request check instagram python spirit commit functionality session download branch typos return inconsistent whitespace report please script search python instagram method source related fellow bottle session local server project copyright facebook github issue developer issue tracker license agreement installation example important status package sample facebook copyright copyright repository delete provided sample prerelease issue operating system community endpoint instance authentication instagram instagram platform provided trouble instagram import download bottle instagramapi constructor making subscription install bottle small access specific retrieval feature request module browser contributing necessary package second subscription python client check documentation different subscription software everyone version number bug report constructor making profile httplib simplejson making unauthenticated pagination parameter information redirect protocol update necessary handling bottle download alpha", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "instagram"}, "laginha/django-mobileesp": {"git_readme_keywords": "install alternative attribute available request method request instance wrapper pythonic mobileesp", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pythonic wrapper mobileesp", "pypi_keywords_clean": ""}, "zenotech/sysscribe": {"git_readme_keywords": "rhel rhel sysscribe rhel installation example dictionary", "git_description_clean": "records system setup as python dictionary", "git_keywords_clean": "", "pypi_description_keywords": "rhel rhel sysscribe rhel installation example dictionary", "pypi_keywords_clean": ""}, "/tweetstream": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "longitude latitude samplestream followstream tracker public twitter tweetstream tweetstream followstream trackstream changelog runefh gmail authenticationerror halvorsen runefh iterator username password possible addition argument instance filterstream project schierkolk license avaliable functional available tweetstream samplestream tweetstream followstream deprecated tweetstream connectionerror halvorsen christopher example filterstream username christopher schierkolk software reference number keyword tweetstream username functionality context t restructuredtext tweetstream firehose connectionerror twitter documentation tweetstream filterstream firefox safari interesting distribution directory full license introduction tweetstream reconnectingtweetstream trackstream locationstream welcome enough object access specific iterable samplestream username twitter", "pypi_keywords_clean": "twitter"}, "lig/i18n-string": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "DelciousHair/google2pandas": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package parsing google database default default behaviour primary version default location support created version structure ownership pointer reporting process keyword argument system particular directory various google something pandas dataframe development version querying generated different progess ability object address method channel", "pypi_keywords_clean": ""}, "esa/pykep": {"git_readme_keywords": "research algorithmic efficient keplerian propagator scientific implementation pontryagin algorithmic efficiency official documentation multiple optimization efficient", "git_description_clean": "pykep is scientific library providing basic tools for research in interplanetary trajectory design", "git_keywords_clean": "interplanetary mission analysis astrodynamics aerospace", "pypi_description_keywords": "providing perturbed keplerian scientific", "pypi_keywords_clean": "space keplerian math physics interplanetary"}, "/dotcloud-cli": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application software message dotcloud account register dotcloud account", "pypi_keywords_clean": ""}, "SheffieldML/gpy": {"git_readme_keywords": "", "git_description_clean": "gaussian processes framework in python", "git_keywords_clean": "", "pypi_description_keywords": "installation github homepage", "pypi_keywords_clean": "machine learning gaussian processes kernels"}, "lvh/thimble": {"git_readme_keywords": "thread import fakethreadpool driveto work small utility implementation import print shutdown object class verbatim way print d responsible changelog thimble location future import print access other thimble changelog documentation quick thimble thimble drive driven import thimble limitation print thimble create interested minute print driven example wrapped object thing demonstration reactor fakereactor library thimble metaclass thimble import upgraded fakethreadpool fakereactor right recommended print function thimble driveto initial public deferred needle fakethreadpool reactor minor object method thimble reactor wrapped method public release reactor utility function twisted", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thread import fakethreadpool driveto work small utility implementation import print shutdown object class verbatim way print d responsible changelog thimble location future import print access other thimble changelog documentation quick thimble thimble drive driven import thimble limitation print thimble create interested minute print driven example wrapped object thing demonstration reactor fakereactor library thimble metaclass thimble import upgraded fakethreadpool fakereactor right recommended print function thimble driveto initial public deferred needle fakethreadpool reactor minor object method thimble reactor wrapped method public release reactor utility function twisted", "pypi_keywords_clean": "twisted threads thread compat compatibility async asynchronous"}, "/htmllaundry": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction package compatibility implementation default cleaner import interface javascript november changelog import schema unicode whitespace string useful package install schema textline subversion possible addition schemas correct whitespace separate support forcing documentation sanitize sanitize additional markup integration different filtering version element public example sanitize target enforcement limited idocument interface cleanup integration february handy python november correct htmllaundry import common december document february cleaner instance sanitize method option november stripmarkup method option necessary release configurable naming function interface import import sanitize browser window import htmltext external several handy insecure markup vertical zcform import block blocklevel htmllaundry zcform optional parameter wrapping cleaner option", "pypi_keywords_clean": "html clean"}, "charettes/django-colorful": {"git_readme_keywords": "definition framework support keyword argument visible javascript database install django preset django colorful django grappelli extension installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "definition framework support keyword argument visible javascript database install django preset django colorful django grappelli extension installation", "pypi_keywords_clean": "django color field"}, "SimonGreenhill/python-nexus": {"git_readme_keywords": "refactoring parsing glitch generichandler nexusreader value splitstree datahandler symbol style method useful multiple class nexus treemanip th nexus data nexus generic datahandler nexus py greenhill simon reader writer character block reading writing combine arbitrary minor fix print statement bin directory series nexus format list simple nexus nex nexuswriter many taxa nz description factory style oldnexus nex nex usage nexus character specific dictionary generic block following nexus malformed taxa nexus nex taxon filename detranslate py random format string quick information datahandler writing block format newnexus nex data block block content nexuswriter nex nexinfo py constant python nexus directory wasn speed parser property major usage python fix parsing nexus usage python copyright example statement major number nexusmanip py subpackage unknown control copyright simon issue work string nexusreader nexus manipulation rudimentary simon greenhill nexuswriter nexuswriter true py filename small collection raw block symbol property dictionary mapping reader py statement minor taxon character nex nexinfo string e interleaved nexus self such usage reading b data matrix nex count py option property magnitude decrease info writing nexus blockname block charblock helper function py oldnexus add function option oldnexus common data taxa block parse certain py utility ready write minor bug py randomly access beast block block handler nexus randomise format reading block helper nexusreader order major speed nexusreader datahandler translated taxa generic nexus unique randomise py many speed enhancement loop alternate nexus checking form usage filename nex gap available nex nexus description python nexus combine nexus detranslate taxa list indexed block nex newnexus treemanip py reading nexus nex filename nexus nexusmanip install issue following parse format combine nexus actual data datahandler parse major refactoring taxa ability simon simon e taxon rudimentary support py stray", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nexuswriter add generic nexus harry louise dirname file nexusreader os louise betty example nex nex display nexus file import nexusreader header taxon n taxon add nexusdatablock os path nexus generic python nexus os example datatype standard taxon character output nex join example dir os gap file os nex nexusreader character n taxon nexuswriter import nexuswriter simon louise character taxon filename output dir example add comment value add chris bruce add taxon char add python reading nexus import reading nexus matrix simon nexusreader nexusreader n add skip charblock file filename add function matrix path join taxon char import os ready write file add path dirname louise simon nexuswriter nexuswriter example dir nexus nex taxon join os betty harry", "pypi_keywords_clean": "phylogenetics nexus newick paup splitstree"}, "honeybadger-io/honeybadger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyomo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "programming nonlinear nonlinear programming programming differential download documentation effective framework equilibrium integer stochastic optimization stackexchange development analysis standard question parallel communication stochastic programming required employer modeling available integer quadratic software library transparent parallelization installation software overview concrete repository intellectual property featured programming following quadratic programming permission anaconda programming quadratic mathematical programming integer documentation performance symbolic integer nonlinear disjunctive programming programming language national differential algebraic", "pypi_keywords_clean": "optimization"}, "dsw/proquint": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Alkemic/scrapper": {"git_readme_keywords": "selector optional simple library iteration selector crwaling single occurrence constructor example subclass scrapper scrapper content default scrapper lxml instance optional python web paginator xpath specific xpath selector method optional function actual processing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "scrapper scraping webscraping"}, "dlanger/inlinestyler": {"git_readme_keywords": "package compatibility development frustrating message premailer emptor inlining service download source estimate distribution ubuntu original iteration project license absolute output available unmaintained accessible history compatible github public inlinestyler number cranwell functionality campaignmonitor something various following general solution version download individual django project welcome examine preflight request block certain refactor spreadsheet", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility development frustrating message premailer emptor inlining service download source estimate distribution ubuntu original iteration project license absolute output available unmaintained accessible history compatible github public inlinestyler number cranwell functionality campaignmonitor something various following general solution version download individual django project welcome examine preflight request block certain refactor spreadsheet", "pypi_keywords_clean": "html css inline style email"}, "/pdftables": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pdf", "pypi_keywords_clean": ""}, "bids-standard/pybids": {"git_readme_keywords": "package bleeding default community anything library related discussion validator support specification documentation available structure implementation related installation technical tutorial functionality corresponding suitability general information welcome discussion feedback request official related question", "git_description_clean": "python tools for querying and manipulating bids datasets", "git_keywords_clean": "bids python api", "pypi_description_keywords": "python software information license property respective disclaimer", "pypi_keywords_clean": ""}, "/django-shop-ajax": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "shop ajax jquery django shop content server usage javascript provided shop installation nifty ajax delete urls static", "pypi_keywords_clean": ""}, "ActiDoo/pyramid-swagger-spec": {"git_readme_keywords": "swagger specification deriver namespace swagger everything pyramid swagger number welcome overview configuration namespace validation installation example routeregistry", "git_description_clean": "defines apis generates swagger specification and validates inputs", "git_keywords_clean": "pyramid swagger json api", "pypi_description_keywords": "swagger specification deriver namespace swagger everything pyramid swagger number welcome overview configuration namespace validation installation example routeregistry", "pypi_keywords_clean": ""}, "joestump/oauth2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "oauth"}, "itdxer/naive-bayes": {"git_readme_keywords": "information instalation newsgroup classifier competition official documentation repository github", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information instalation newsgroup classifier competition official documentation repository github", "pypi_keywords_clean": "naive bayes text classification classifier"}, "rogerthat-platform/mcfw": {"git_readme_keywords": "full return specific specific status error occur variable possible g argument present returned object version example subclass python world method example httpinternalservererrorexception doesn framework format version necessary http status function client template version conflict template request method example hello hello world", "git_description_clean": "framework for easy caching and rest api calls in google appengine projects", "git_keywords_clean": "google appengine typed python", "pypi_description_keywords": "", "pypi_keywords_clean": "mcfw"}, "doublereedkurt/faststat": {"git_readme_keywords": "addition skewness accesible kurtosis available performance following faststat", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "chfoo/warcat": {"git_readme_keywords": "archiveteam version example implementation build status string stable version library archive development specification block newline documentation safety quick available verify digest newline record indicate block python warcat project quick description content block library example format python install newline content verify verify record binary warcat individual validate conformance regex filtering resume warranty extract extract continue install stable conformance library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "archiveteam version example implementation build status string stable version library archive development specification block newline documentation safety quick available verify digest newline record indicate block python warcat project quick description content block library example format python install newline content verify verify record binary warcat individual validate conformance regex filtering resume warranty extract extract continue install stable conformance library", "pypi_keywords_clean": ""}, "uqfoundation/dill": {"git_readme_keywords": "memberdescriptor wrapperdescriptor ellipsis current stackoverflow publication serialization majority primary development addition question getsetdescriptor memberdescriptor documentation command heterogeneous computing computer additional network methoddescriptor getsetdescriptor available further information generator traceback github research public process framework buffer hierarchy original interpreter flexible feasable released version arbitrary dictproxy methoddescriptor following standard unicode development version unboundmethod license development interpreter session information different ability complex uqfoundation capability appreciated citation inverse interface feedback trustworthy contribution request further", "git_description_clean": "serialize all of python", "git_keywords_clean": "", "pypi_description_keywords": "interpreter current stackoverflow installer publication serialization majority primary development addition request installation question tarball documentation command heterogeneous computing computer additional network available further information optional github research process framework hierarchy original interpreter flexible feasable arbitrary following standard license development missing information different ability uqfoundation capability appreciated citation inverse interface feedback trustworthy contribution released further", "pypi_keywords_clean": ""}, "GetBlimp/socket-io-announce": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation copyright library serialization collazo permission project standard implied documentation jsonencoder announce merchantability fitness subject infrastructure broadcast redisstore software express substantial limited independent connection giovanni collazo following liability contract distribute sublicense warranty restriction publish distribute timedelta decimal particular purpose lightweight infrastructure", "pypi_keywords_clean": "websockets nodejs socket io socketio"}, "dgerber/rfc3987": {"git_readme_keywords": "rfc see", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package ipvaddress version particular compilation percent janssen version narrow compilable pattern convenience function python compatibility useful composition support uriref sequence version relative resolution pattern assert version python nicode deprecated version compatibility format python regular software format beginning release donation reference convenience version compose appreciation compose specific template multilingual module version convenience pattern object", "pypi_keywords_clean": "uri iri url rfc rfc validation"}, "shparki/infernal": {"git_readme_keywords": "question regression analysis summoner significant effect winning segmented regression intuition analysis course separate question research project dragon regardless nuanced obvious logistic analysis answer general logistic regression", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ArabellaTech/ydcommon": {"git_readme_keywords": "permission default search system database directory technology common example requirement", "git_description_clean": "common libs for yd django projects", "git_keywords_clean": "", "pypi_description_keywords": "permission default search system database directory technology common example requirement", "pypi_keywords_clean": ""}, "/os-service-types": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack information official openstack software possible documentation network caching authority consumption library historical", "pypi_keywords_clean": ""}, "cehdeti/pyeti": {"git_readme_keywords": "licence default implementation possible configuration dummy useful ckeditor widget awesome second parameter library subscription python string development license support placeholder content install optional second routing mocking widget object somehow coverage example django content reference product group unnecessary second utility default boolean regexps configured language language widget install object default freshdesk redirect similar database interface template middleware frequency current request python package lifetime", "git_description_clean": "a python package of awesome stuff", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "cltrudeau/waelstow": {"git_readme_keywords": "python wrench waelstow installation source", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python wrench waelstow installation source", "pypi_keywords_clean": "test testing unit test unittest test runner"}, "fanstatic/js-jquery-sortable": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python initial release framework sortable introduction directory integration library travisci original", "pypi_keywords_clean": ""}, "semirook/sphinxit": {"git_readme_keywords": "product python powerful sphinxql support python library grouping unpredictable documentation native sphinxql sphinxit independent python constructor django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sphinxql constructor", "pypi_keywords_clean": ""}, "openfisca/openfisca-core": {"git_readme_keywords": "package piwik instance checker default tracker configuration official documentation chrome development openfisca france checking single documentation tracker installation command identifier piwik interface mock country tracked country such installation package template recent versatile microsimulation python software january number server optional tracker input documentation tracker template environment option repository openfisca certain coding authentification openfisca web information openfisca piwik country package welcome integer issue backward compatibility ip web value such environment openfisca", "git_description_clean": "openfisca core engine see other repositories for countries specific code data", "git_keywords_clean": "computational law legislation as code legislation law openfisca microsimulation", "pypi_description_keywords": "", "pypi_keywords_clean": "benefit microsimulation social tax"}, "ucd-cws/launchr": {"git_readme_keywords": "specific version redirected default setting specific package registry backup installer package installation similar launchr installation execution library lookup bugfixes release registry launchr convenience installed information rexecutionerror", "git_description_clean": "launchr finds your installation and provides convenience functions for running scripts from python including package installation and running scripts", "git_keywords_clean": "", "pypi_description_keywords": "documentation", "pypi_keywords_clean": ""}, "joyent/manta": {"git_readme_keywords": "key value zookeeper used update procedure only supports backup storage wrong way manual install multiple g help custom build queue article standard default compute separate loadbalancer muskie synchronous replication other guide single deployment procedure overall design custom builds smartos special purpose joyent build above procedure monitoring order community community manatee leader official joyent discuss topology e other option community discussion group membership track zfs rollback dump storage good choice short haproxy stud deploy software primary way cache medusa building distributed program shell critical deploy custom triton build fault tolerance recommended production web triton agent storage zfs dns server guide build member building triton joyent builds server lackey requirement wrong physical distributed system design project design service constraint subsequent builds authentication cache manatee high internet moray current configuration responsible jobsupervisor analysis css project multi datacenter monitoring manatee anyone purpose system manufacturing matrix master electric developer background network additional compute capacity e initial deployment performance installation solution example normal only used audit verifying important supports atomic compound distributed execution job execution number status crash dump blog entry adm show uuid distributed computation wrapper uniformity datacenter building repository general purpose delete marlin agent http interface simplicity used hyprlofs building ssl terminator issue canonical copy express computation configuration zfs replication topology design approach request service upgrade source http impossible bunch build process whole triton reading adm configuration system capacity reasoning triton datacenter moray manatee deployment service entire object storage system marlin customer disk return updates production hardware capacity manatee direction original freenode triton headnode instance triton cloud hadoop joyent triton adm update deploy joyent support region dimension muppet haproxy interactive mlogin filesystem meaning joyent manufacturing github production category few design reference show sj physical server failure mechanisms marlin dashboard pooled storage respond zfs pooled install procedure physical architecture total first deploy consistent individual default joyent compute environment approach online binary blob sj config contribution service monitoring storage used build triton hbas magnitude latency vmware used storage expected checksum video storage object storage new analysis joyent implementation transparent complete component operator guide update config sdc result anything error reporting software crash reason manual procedure fault tolerence monitoring triton detailed high availability disk tmp triton object deployment check moray key reality documentation possible praise storage capacity joyent production manufacturing bill single system output job archiver available first change procedure copy express distributed middle building public service triton exception storage problem electric moray leader election server manatee replication operation binder something index storage g dashboard several smartos garbage collection job information detaild status guide e datacenter platform overall detailed discussion deployment process blob import hbas retrying information cp system ability big reads event above source triton interface object namespace other mapreduce effective approach purger global namespace laptop arbitrary compute channel strong consistency automatic twitter mantastorage", "git_description_clean": "manta triton object storage and converged analytics solutions is http based object store that uses os containers to allow compute on data at rest", "git_keywords_clean": "", "pypi_description_keywords": "python project mantash service integrate cli", "pypi_keywords_clean": ""}, "coleifer/wtf-peewee": {"git_readme_keywords": "couple basic project example template bridge wtf peewee example implementation factory example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "QualiSystems/cloudshell-networking": {"git_readme_keywords": "dependency networking cloudshell command community feedback backlog progress behavior cloudshell networking networking package request submit repository coverage connectivity", "git_description_clean": "cloudshell basic networking package", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "alexcouper/supermutes": {"git_readme_keywords": "readonly notation declaration implementation supermutable decorator function building particular transform available module library standard library original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "readonly notation declaration implementation supermutable decorator function building particular transform available module library standard library original", "pypi_keywords_clean": ""}, "tylercrumpton/robotframework-scplibrary": {"git_readme_keywords": "py install transfer robotframework sshlibrary library scplibrary python setup library username password archive mytea txt remotefile txt license asymmetric install ssh python remote machine keyword connection mytylerdir recursive version installation framework server keyword robotframework scplibrary txt localfile normal username password authentication localfile txt wrapper setup py secure jython python library connection username ironpython password teapot source distribution connection connection local machine paramiko ssh install robotframework install example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "py install transfer robotframework sshlibrary library scplibrary python setup library username password archive mytea txt remotefile txt license asymmetric install ssh python remote machine keyword connection mytylerdir recursive version installation framework server keyword robotframework scplibrary txt localfile normal username password authentication localfile txt wrapper setup py secure jython python library connection username ironpython password teapot source distribution connection connection local machine paramiko ssh install robotframework install example", "pypi_keywords_clean": ""}, "/clusterone": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "andresriancho/splunk-logger": {"git_readme_keywords": "package message endpoint splunk logger communication configuration async manner hardcoded coding feature handler python python program number status following format something current directory environment specified reporting couple information welcome interface specific module filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package message endpoint splunk logger communication configuration async manner hardcoded coding feature handler python python program number status following format something current directory environment specified reporting couple information welcome interface specific module filename", "pypi_keywords_clean": ""}, "/txjson-rpc-garetjax": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "datetime serializer twisted jsonrpc following client package index result anything usage examples error checking moshe zadka source directory possible simpljson modern python unneeded dependency txjsonrpc http twisted jsonrpclib support mirror install twisted community system manual server examples manual download modern twisted readme accord level source example doesn documentation txjson twisted installation failure version support txjson success simpleparser report payload g source tarball setup length attribute bug fix callremote method following simpleparser bug install script examples directory http protocol twisted extraneous readme callremote jsonrpclib bug bzr protocol serializer txjson usual checking proxy constructor g method jsonrpclib return appropriate python package source distribution source cd google installation development simplesjon hook", "pypi_keywords_clean": ""}, "xlcnd/isbntools": {"git_readme_keywords": "multiple library several useful g install command encode decode package manager version graph default option fuzzy script distribution package porbase isbnlib method linux isbns service split enough please project valid recent collection database spoken shell following number alternative current directory posix console fuzzy unicode submit search copyright notice work issue console script cleaning validation history autocompletion pypi isbnlib porbase wrong result configuration extraction cleaning block python class center create github feature filename g origin transform hyphenate metadata standardization bibjson bibliographic project please access certain google solution update typical session stackoverflow result reason block console cache chosen service pypi submit terminal stackoverflow isbnlib quick group identifier output probable dirty solution autocompletion fuzzy isbnlib suppose directory editing coverage status openlibrary information basic functionality redirection documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple library several useful g install command encode decode package manager version graph default option fuzzy script distribution package porbase isbnlib method linux isbns service split enough please project valid recent collection database spoken shell following number alternative current directory posix console fuzzy unicode submit search copyright notice work issue console script cleaning validation history autocompletion pypi isbnlib porbase wrong result configuration extraction cleaning block python class center create github feature filename g origin transform hyphenate metadata standardization bibjson bibliographic project please access certain google solution update typical session stackoverflow result reason block console cache chosen service pypi submit terminal stackoverflow isbnlib quick group identifier output probable dirty solution autocompletion fuzzy isbnlib suppose directory editing coverage status openlibrary information basic functionality redirection documentation status", "pypi_keywords_clean": "isbn metadata google books open library bibtex endnote refworks msword bibjson isbn doi"}, "/untt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "model orm entity untt"}, "mcmtroffaes/latexcodec": {"git_readme_keywords": "documentation development development travis latexcodec travis download documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation development download documentation", "pypi_keywords_clean": ""}, "/ltsvlogger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ltsvhdr class setformatter formatter logger error ham example sample tthread host host dt m getlogger adapter user host installation recommend id ttime formatter ltsvformatter ltsvfmt format extra keyword class ltsvlogger ltsvloggeradapter formatter parameter formatter setup logger order setup formatter error message id tmessage error setup adapter hdr streamhandler hdr tlog level ltsvfmt logger config prepare prepare logger kawasaki hdr setformatter logger root logger demo format ltsvlogger class streamhandler formatter parameter demo tmessage formatter ltsvfmt host message asctime tlogger user spam ttime tprocess logger addhandler asctime thost ham message message root demo root level ltsvlogger import tmessage message format ltsv host ham pypy installation asctime tuser import ltsvformatter fix typo thost host datefmt m ltsvfmt formatter keyword argument m dt logger ltsvlogger demo handler ltsvloggeradapter logger getlogger code logger ini demo ltsvlogger ltsvlogger error demo level code hdr ltsvlogger ltsvloggeradapter ltsvhdr ltsvlogger ltsvformatter code import fileconfig logger recommend use tsv format sample host level error spam tthread mainthread tlog pip install example com tlogger com output z class tuser user message setup hdr setlevel procedure pip redundant tab user thost example setup user user com tuser spam host ltsvformatter ltsvloggeradapter message logger host tmessage hdr ltsvloggeradapter unreleased version tthread id debug formatter info hdr ini logger pr fix sample process handler ltsvhdr ltsv output qualname demo m z log format host placeholder ltsvlogger install unreleased install ltsvlogger tprocess id addhandler hdr use import config fileconfig output sample fmt argument placeholder hdr extra use virtualenv ltsvloggeradapter import ltsvhdr qualname sys stderr use version pip extra kwargs getlogger demo format basic level debug message datefmt formatter logger stderr level spam ttime com tmessage tuser spam shirou pr ltsvformatter logger", "pypi_keywords_clean": ""}, "saffsd/langid": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "language detection"}, "jameslyons/python-speech-features": {"git_readme_keywords": "default length milliseconds nfilt pypi hz default sample english mfcc cepstrum second return audio signal library default nfilt spectral highfreq common speech successive seccessive filterbank description signal mfccs samplerate return default appendenergy feature vector ceplifter preemphasis installation reference sample fbank total energy look filterbank default number returns numpy vector filterbank python speech english wav frequency cepstral zeroth cepstral parameter description coefficient energy returns samplerate preemph repository following total analysis window lowfreq cepstral coefficient logarithm milliseconds milliseconds numcep", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mlafeldt/camplight": {"git_readme_keywords": "twitter mlafeldt project repository coverage report command browser license coverage package python implementation mathias lafeldt license camplight feature branch request contact camplight camplight campfire", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "config python runner script coverage report build status httpretty python compatibility camplight module readme update current camplight recommend library pythonic coding python module class project readme define python client markdown astiam travis simple command scratch verbose python implementation tweak camplight package yyyy optional travis build version generate coverage update copyright generate restructuredtext information account setup twitter build keimlink mathias lafeldt license camplight account information repository manifest undocumented contact status history parameter convert documentation ability luchux browser license interface coverage package camplight version source camplight camplight error jwilder rewrite command", "pypi_keywords_clean": ""}, "/django-materialize": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installed materialize static directory quick development production materialize materialize directory project detailed django materialize detailed documentation materialize django simple django", "pypi_keywords_clean": ""}, "/ipykernel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ipython kernel", "pypi_keywords_clean": "interactive interpreter shell web"}, "marianoguerra/rst2html5-tools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parsing htmlcss thirdparty basic impress mathjax configuration update version syntax convenience function mytheme serif writing language specific matlab chrome scala block level project chromium single default mathjax command inline output available apollo basic thirdparty prettify pascal equal video directive embed example reveal wiki xq comma format processor vb output format setup llvm document support basic directory revealjs theme custom printpdf option different output bootstrap prettify resulting erlang basic subset mathml mathjax javascript mathjax postprocessor custom mathjax nicer transformation parameter ability readable markup support optional plain above online request stylesheet mathjax mathml directive rsthtml moment", "pypi_keywords_clean": ""}, "subyraman/sanic-session": {"git_readme_keywords": "management example documentation documentation number memcache different suitable backed install documentation mongodb available memcache backed useful session interface convenient session readthedocs session management management extension development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management example documentation documentation number memcache different suitable backed install documentation mongodb available memcache backed useful session interface convenient session readthedocs session management management extension development", "pypi_keywords_clean": "sessions sanic redis memcache"}, "alfred82santa/aio-service-client": {"git_readme_keywords": "way python timeout aiohttp powerful request innerlogger class download format improved pool improved session added log timeout period parameter version python session wrapper pool plugin travis master order removed compatibility log request keyword plugin token formatter removed asyncio implementation python imagine limit number status project body period improved method client endpoint log serializer powerful plugin system useful json api default hard limit new plugin path pypi lastrelease master pypi improved added plugin system client framework call method compatible request payload added trackingtoken http service session improved error attribute master coverall uri project license project status call http project format elapsed lastrelease python changelog pool serialize request added spec lgplv installation plugin improved license gnu python changelog service api trackingtoken plugin response implementation travis block bash endpoint added new log formatter limit concurrent similar request endpoint development status project implementation ratelimit plugin block python request response gnu lgplv class added added decorator framework service new ratelimit timeout plugin ready response added problem improved plugin simplified factory token stuff easy way doc master improved log service asyncio blocked json parser status pypi api limit request model service request new hook outerlogger request elapsed plugin added license project default timeout coverall master service client python asyncio master doc python improved aiohttp simplified error logging format project logging added response trackingtoken query exception added documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "way python timeout aiohttp powerful request innerlogger class download format improved pool improved session added log timeout period parameter version python session wrapper pool plugin travis master order removed compatibility log request keyword plugin token formatter removed asyncio implementation python imagine limit number status project body period improved method client endpoint log serializer powerful plugin system useful json api default hard limit new plugin path pypi lastrelease master pypi improved added plugin system client framework call method compatible request payload added trackingtoken http service session improved error attribute master coverall uri project license project status call http project format elapsed lastrelease python changelog pool serialize request added spec lgplv installation plugin improved license gnu python changelog service api trackingtoken plugin response implementation travis block bash endpoint added new log formatter limit concurrent similar request endpoint development status project implementation ratelimit plugin block python request response gnu lgplv class added added decorator framework service new ratelimit timeout plugin ready response added problem improved plugin simplified factory token stuff easy way doc master improved log service asyncio blocked json parser status pypi api limit request model service request new hook outerlogger request elapsed plugin added license project default timeout coverall master service client python asyncio master doc python improved aiohttp simplified error logging format project logging added response trackingtoken query exception added documentation status", "pypi_keywords_clean": ""}, "zopefoundation/zope-proxy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package handle extension module potential proxy module compatible transparent python reference security sandboxing verison proxybase properly builtin result difficult sphinx documentation equivalent decorator responsible supported complete documentation restrictive declaration policy g location python environment standard support available otherwise global wheel previous implementation proxy object introspection python implementation interface object available adaptation change pypy b version dependent attributeerror building internal wrapped object coverage generator python equivalent pypy incompatibility regular python support dependency stdlib common layout properly delegate implementation proxy allow setting attribute necessary release properly allow continuous integration feature allow doctestunit object intervening internal handling allow proxy information jython python b interface lookup travis compiler implementation handle reference fallback compilation g access impossible special python proxy python custom bunch apparent behavior documentation status", "pypi_keywords_clean": "proxy generic transparent"}, "kmike/dawg": {"git_readme_keywords": "package python comparable lookup tracker license dawgdic advanced memory standard python library dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package thread bitbucket alphabetical ordering dawgdic library python compatibility segfault prefix nonrepresentative extension useful library license wrapper yamada wrapper previous blanchard method memory mercurial mirror standard python version improved memory building public incompatible release exception comparable python representation wrapper unsupported cython method permissive python support install installation tracker license dawgdic python install distribution benchmark incorrect release intcompletiondawg installation cython wrapper storage scheme dictionary initial release uploaded unpickled lookup advanced constructor argument umlaut", "pypi_keywords_clean": ""}, "/publicsuffix": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement public suffix compatibility future version module content limitation convenience function internet useful version available recent version method installation distribution python module copyright david implied following license david wilson combination compatiblity username support documentation appropriate version separate license merchantability fitness subject constructor license copyright python important application please number software substantial express limited license please license block wilson permission development repository connection uk liability contract suffix method distribute sublicense individual tablix charge warranty browser restriction interface filetype modify caller publish distribute liable particular purpose module", "pypi_keywords_clean": ""}, "jrjohansson/version-information": {"git_readme_keywords": "dependency information license work intallation instruction attribution example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extension command information", "pypi_keywords_clean": ""}, "jamesabel/balsa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package logging utility default source directory block console project overridden single output popup window support lumber message formatting installation exception python logging console stdout utility simple control popup window logger initial initial release console weight malleable python simple platform simple example informative", "pypi_keywords_clean": "logging"}, "lepture/flask-weixin": {"git_readme_keywords": "location location flask weixin install flask message implementation anything official documentation timestamp message format recognition location instance configuration default sender sender optional id receiver version sender default example information id setuptools optional weixin status installation coverage status specific keyword function weixin flask message id message timestamp weixin sender documentation sender flavor wheel status id message travis id format", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "location location flask weixin install flask message implementation anything official documentation timestamp message format recognition location instance configuration default sender sender optional id receiver version sender default example information id setuptools optional weixin status installation coverage status pip weixin flask message id message timestamp weixin sender documentation sender flavor wheel status id message travis id format", "pypi_keywords_clean": ""}, "/oslo-utils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation support manipulation library release repository utility exception", "pypi_keywords_clean": ""}, "/django-templates": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ryanmcgrath/twython-django": {"git_readme_keywords": "project twython library specification twython unique specification authentication venodesigns django application installation install modify function definition github twython django example template following urlconf awesome block stream sample django twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project twython library specification twython unique specification authentication venodesigns django application installation install modify function definition github twython django example template following urlconf awesome block stream sample django twitter", "pypi_keywords_clean": "twitter search api tweet twython stream django integration"}, "niwibe/djorm-ext-pgfulltext": {"git_readme_keywords": "introduction default python general package collection django manager instance support tsquery available transaction management ignore mandatory block python optional current implementation compatible changelog django manual django python management command unified package flexible tsvector common similarity document pgfulltext pgfulltext genereate corresponding insensitive ranking format django unaccent extension template database docker pgfulltext module djorm parameter search searching capability natural language compatibility transaction specific application relevance frequency method django compatibility special format tokenized", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction default package collection django manager instance tsquery available transaction management mandatory optional current implementation compatible catalog django python unified package flexible tsvector common similarity document pgfulltext pgfulltext genereate corresponding insensitive ranking unaccent extension template database djorm parameter parameter general searching capability natural language compatibility transaction config parameter specific application relevance frequency django compatibility special", "pypi_keywords_clean": ""}, "ekampf/pymaybe": {"git_readme_keywords": "something something value software bsd current nasty reading copyright class python magic addition something documentation python implementation bsd license license copyright nothing implement monad nothing instance nothing following license documentation regular value user pattern installation method", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "something something further reading implementation current indexerror keyerror reading copyright class addition something planetpython documentation history license copyright regular software nothing implement domain release nothing instance nothing following license documentation magic typeerror indexerror keyerror attributeerror pattern installation method", "pypi_keywords_clean": "pymaybe"}, "puentesarrin/wtforms-tornado": {"git_readme_keywords": "write hello import tornado python setup usage import class sumhandler application sumhandler install version python xvzf ioloop import tornado import installation github gz sumhandler tornado ioloop ioloop number status tornado ioloop pypi version tornado import integerfield tornado version application tornado puentesarrin world application ioloop instance source class sumform hello world requesthandler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "write hello import tornado python setup usage import class sumhandler application sumhandler install version python xvzf ioloop import tornado import installation github gz sumhandler tornado ioloop ioloop number status tornado ioloop pypi version tornado import integerfield tornado version application tornado puentesarrin world application ioloop instance source class sumform hello world requesthandler", "pypi_keywords_clean": "wtforms tornado validation"}, "JMSwag/pyupdater-s3-plugin": {"git_readme_keywords": "variable meaning bucket bucket pyupdater upload amazon secret session pyupdater configuration system system environmental optional", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "variable meaning bucket bucket pyupdater upload amazon secret session pyupdater configuration system system environmental optional", "pypi_keywords_clean": ""}, "/wsme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction standalone framework independance tracker changelog response writing extension extensible container preferred mailinglist favorite documentation extensibility framework integration framework independence framework cornice cornice install powerful alternate complex extdirect protocol runtime request simplejson simplegeneric optionnaly", "pypi_keywords_clean": ""}, "arose/nglview": {"git_readme_keywords": "package science gateway alexander simpletraj hierarchical component dunovank jupyter pytraj mdanalysis gateway platform jupyterlab learning library version available interoperable framework github notebook structure trajectory testing ipython jupyter analysis question instance molecular argument support project builder deepchem molecular kaleidoscope documentation protein interaction command biopython function hublib hublib mobleylab computational installation example atomgroup version command molecule builder development environment citation installation trajectory constructor protein protein embeddable website acknowledgment display interaction software educational interactive molecular pyrosetta schrodinger property science biosimspace nguyen biology hublib rdchem throughput molecular universe jupyter notebooks compatibility nglview schrodinger structure development version unstable feature convenience multiple protein version compatibility simulation environment function description example notebooks biomembrane showcase jupyter notebook structural quantum chemistry hubzero science arraybuffer interface example showcase nucleic nglview interactive nglview license installation component biomolecular simulation discovery biopython", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "ipython jupyter widgets"}, "/yuicompressor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package standalone installable javascript compressor instance executable version corresponding version installation incompatibility python compressor changelog environment contact initial release maintainer information download bootstrap django compress bitbucket repository restriction minifier", "pypi_keywords_clean": ""}, "MycroftAI/msm": {"git_readme_keywords": "manager script mycroft", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "xrmx/pylokit": {"git_readme_keywords": "pylokit libreoffice machine explicit format process project cpython cpython default libreofficekit conversion context manager wrapper installation libffi virtualenv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pylokit libreoffice machine explicit format process project cpython cpython default libreofficekit conversion context manager wrapper installation", "pypi_keywords_clean": ""}, "/cloudconvert": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download multiple output status directory lightweight wrapper release method cloudconvert python wrapper installation version github possible", "pypi_keywords_clean": "cloudconvert"}, "/xstatic-bootswatch": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bootswatch bootswatch project javascript library xstatic packaging install bootswatch javascript minimal support xstatic bootswatch", "pypi_keywords_clean": "bootswatch xstatic"}, "fuzzycode/pytvdbapi": {"git_readme_keywords": "archlinux tobias statusimage coverageimage possible supported project support license pytvdbapi documentation database proxy version pypiimage rtdocsimage feature thetvdb functionality pytvdbapi python rtdocsimage licenseimage particular application archlinux package instance search following episode contact permission access individual coverageimage pypiimage platform interface access twitter license licenseimage thetvdb known develop bjornlarsson tobias rttger intuitive licenseimage pytvdbapi", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "archlinux tobias statusimage coverageimage alpha release default online database package updated service updated improved compatibility changelog pypiimage thetvdb confusion documentation updated db instance possible supported episode function unicode support broken hasattr project improved unicode extended folder support license pytvdbapi updated author updated documentation pylint compatible proxy banner available initial filter alpha standard python version feature coverage season episode option ignore cleaner thetvdb compatible updated format python improved insensitive manner pypiimage pytvdbapi functionality pytvdbapi python stability series function status particular application series archlinux package instance search support python function following episode permission access individual season documentation contact release updated removed support coverageimage pypiimage official thetvdb platform initial alpha support improved interface access twitter license specific updated known source develop bjornlarsson getattr tobias rttger intuitive extended banner", "pypi_keywords_clean": "tvdb thetvdb com api tv episodes"}, "/django-revision": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "source folder view travis codecov python reference research trial python django context attribute add django django field instance deployment collection field class block python collected installation django revision example branch directory something installation add app pypi travis revision add information template branch commit source python pypi", "pypi_keywords_clean": "django fields git"}, "/pyzor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spam networked", "pypi_keywords_clean": "spam"}, "bradbeattie/python-vote-full": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty tracker example useful schulze proportional merchantability provided version fitness license copyright software foundation instant runoff release initial software various electoral transferable method example general public particular proportional representation nonproportional representation public license release license warranty representation schulze program plurality beatpath multiple schulze method schulze nonproportional", "pypi_keywords_clean": "library election"}, "divio/aldryn-style": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "element installation compatibility number contained default previous transifex aldryn styling empty following", "pypi_keywords_clean": ""}, "/numberjack": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "efficient numberjack constraint programming technology combinatorial optimization", "pypi_keywords_clean": ""}, "aio-libs/aiohttp-sse": {"git_readme_keywords": "python asyncio support python eventsource format connection aiohttp aiohttp installation eventsource protocol asyncio aiohttp aiohttp installation installation aiohttp license apache license installation process python aiohttp license python example eventsource interface", "git_description_clean": "server sent events support for aiohttp", "git_keywords_clean": "aiohttp asyncio eventsource server sent events", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/kezmenu": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value default menu draw offset menu enableeffect warn object surface useful disableeffect enlarge inside kezmenu fast development keyerror kezmenu page color menu interested def drawmenu pygame event object method type keydown standard menu way ok second silly kezmenu directory ll complete none true magic raise systemexit source pygame module blitsurface pygame original ezmenu menu color lot one interpreter import pygame environment font same anyone ezmenu version factor enlarge difference internal kezmenu def option example menu gui menu size optionx quit number callable option entry menu optselected global time waitforuseraction callable yourself readme txt someday ll focus option first option screen position right way choosen nb commonly kezmenu window drawmenu conflict def waitforuseraction true library release update method font new general ll major feature kezmenu menu break menu focus padding code nothing focus custom mike version menu fixsize none example option caption example init method happy previous found updatecaption raise event get enableeffect method second optselected pygame font flexible info common example program def blitsurface option global size enlarge because menu true menu focus raise same boring primary scope fake test entry default empty menu pygame stuff quit play menu selection init screen last element exit call create second pymike import import return value optselected second menu update freedom tuple inner kezmenu drawmenu surface surface object family size option callable txt file valid way call last pass screen txt correct call color drawmenu pass parameter doctest format new effect python standard automatic many deprecation focus wan advanced use sys exit menu creation def updatecaption silly function break option error traceback mode screen clock pygame theme need keydown return wan na first news egg lambda lambda callable def fill menu fixsize menu python interpreter def optselected boring menu none required menu drawmenu limitation count pygame custom option enlarge factor option lambda constructor default whole menu own user drawmenu common way menu menu maximum extension dimension new menu interface max font get fake possible interaction font font kezmenu def none size get menu second option updatecaption combined blitten surface enableeffect enlarge menu font ll wait optionx global offset drawmenu kezmenu method instance time menu size updatecaption environment def menu position way type fixed problem other callable attribute menu test failure draw method focus font font init kezmenu don screen fill arrow first element real value first dummy global click little menu option fast create bottom padding item community see possible surface pygame future surface fill inside surface available user decision option choosen raise error raise menu kezmenu function option second last example dark color height font color draw menu waitforuseraction msg use mouse control menu disableeffect function option event kezmenu first menu height saved size code python doctest padding default updatecaption enlarge waitforuseraction dummy topleft corner pygame display first example menu mouse usage example isn font drawmenu menu dimension string dict focus enlarge path same kezmenu kezmenu event type argument method following example menu kezmenu width menu na use optselected quit test because keyword deprecated code quit option option nothing taste none def kezmenu instance return ok position drawmenu needed because sys def goodbye pygame surface first flip option because kezmenu enlarge time dummy function pixel invisible def optionx rightnow static focus color raise line attribute end selection focus focus procedure new menu introduction nothing new screen surface first time kezmenu bug depth surface second dummy callable argument menu screen width display update lambda quit last keyerror updatecaption msg same time count def dark surface surface blitsurface systemexit exception display new drawmenu screen mouse call raise enlarge font none menu kezmenu structure kezmenu changelog important thing create menu original work surface none padding above surface instance screen border dictionary required font function object padding padding true time kezmenu available count msg screen pass different size lambda optionx actual menu graphical test option optselected one none drawmenu line padding blitsurface screen left click count stuff first msg global type menu welcome need enableeffect raise count click optselected menu something useful fixed many work todo above runtime menu entry function def changelog fixed pygame surface mode kezmenu dict true menu inside changed lot recent call new custom count use font handle col padding use surface ll call topleft offset name callable function font pygame type python kezmenu import usage return def pyexe environment list user input default millisec font constructor basical pygame quit sys standard callable isn member screen topleft font class focused element menu instance instance menu time blitsurface quit optselected label first font name empty dark variable environment import other paramter offset attribute new font ll try normal important pygame time raise col system display flip optselected lambda second entry font none option option draw surface callable relative init line lambda optselected font size effect raise global option import sys kezmenu simple height menu kezmenu update position menu kezmenu effect pygame community pygame quit source repository disableeffect raise file goodbye create transparency get screen pygame combined raise drawmenu waitforuseraction multiply factor real padding updatecaption keyerror import pygame surface inside module menu focus max padding first surface padding enlarge develop new error test object python test environment millisec time commonly way time clock time needed screen object bad version library create new offset support top padding focus menu different way use see menu width size raise draw screen clock tick font creation font property import kezmenu simpler choice menu action", "pypi_keywords_clean": "python pygame menu kezmenu library"}, "/python-gnupg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "management encryption signature functionality", "pypi_keywords_clean": ""}, "/graphite-web": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "facebook/pywatchman": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "watchman connect", "pypi_keywords_clean": "watchman inotify fsevents kevent kqueue portfs filesystem watcher"}, "Anaconda-Server/anaconda-project": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "traditional project information effect activate complete project directory current syntax personal similar functionality useful interface stability automate something runnable environment creation complete documentation addition analysis separate check stuff configuration environment handling required command superset advantage prerequisite version subject project anaconda github example comparable machine everyone application reference tutorial report someone arbitrary anaconda project information description directory necessary stability environment running database running colleague machine reproducibility missing status project config database server science problem convenient stability bug certain server running special", "pypi_keywords_clean": "conda anaconda project reproducible data science"}, "/django-calaccess-raw-data": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "california secretary version coverage documentation database extract campaign finance lobbying activity", "pypi_keywords_clean": ""}, "agronholm/asyncio-extras": {"git_readme_keywords": "asynchronous context status context manager several function library coverage asyncio decorator documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "asynchronous context status context manager several function library coverage asyncio decorator documentation status", "pypi_keywords_clean": ""}, "ros-infrastructure/ros-buildfarm": {"git_readme_keywords": "infrastructure discourse category information upcoming different specification provided infrastructure generation buildfarm discourse explanation separate repository repository buildfarm", "git_description_clean": "ros buildfarm based on docker", "git_keywords_clean": "", "pypi_description_keywords": "infrastructure discourse category information upcoming different specification provided infrastructure generation buildfarm discourse explanation separate repository repository buildfarm", "pypi_keywords_clean": "ros"}, "mcs07/chemspipy": {"git_readme_keywords": "project chemical chemspider documentation license chemspipy available resource contribute request license retrieval chemspipy chemspipy depiction", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project chemical chemspider documentation license chemspipy available resource contribute request license retrieval chemspipy chemspipy depiction", "pypi_keywords_clean": "chemistry cheminformatics chemspider rsc rest api"}, "AndreLouisCaron/pytest-docker": {"git_readme_keywords": "docker docker rootdir mycustomdir service default simple basic recipe response status fallback method response mycustomdir docker custom location license check pytest docker integration available service docker pytestconfig rootdir py import connectionerror feature fixture version yml changelog software session directory responsive something return practical pytest import option service sample changelog version local check lambda import pytest responsive timeout pytest pytest duration ability commercial plugin pytest fixture pytestconfig return source service response connectionerror return", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "docker docker compose pytest"}, "incuna/django-settingsjs": {"git_readme_keywords": "configurable javascript value script django instalation access settingsjs myapp installed", "git_description_clean": "django configurable javascript settings", "git_keywords_clean": "", "pypi_description_keywords": "configurable javascript value script django instalation access settingsjs myapp installed", "pypi_keywords_clean": ""}, "blockchain-certificates/cert-schema": {"git_readme_keywords": "package handle testnet bitcoin community bitcoin network project markdown verification several undefined certificate schemas resource semantic blockchain certificate environment verifier following publish convenience schema blockchain syntactic validation schema example purpose", "git_description_clean": "the schema for blockcerts", "git_keywords_clean": "", "pypi_description_keywords": "package handle testnet bitcoin community bitcoin network project markdown verification several undefined certificate schemas resource semantic blockchain certificate environment verifier following publish convenience schema blockchain syntactic validation schema example purpose", "pypi_keywords_clean": ""}, "agronholm/apscheduler": {"git_readme_keywords": "service scheduler process gitter library question process apscheduler delayed execution application specific command database cutoff memory dedicated scheduler optional configurable documentation github building coverage execution platform specific specific replacement scheduler service rdbms sqlalchemy platform application documentation documentation scheduler apscheduler several common offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "service scheduler process gitter library question process apscheduler delayed execution application specific command database cutoff memory dedicated scheduler optional configurable documentation github building coverage execution platform specific specific replacement scheduler service rdbms sqlalchemy platform application documentation documentation scheduler apscheduler several common offline", "pypi_keywords_clean": "scheduling cron"}, "codeghar/brokerlso": {"git_readme_keywords": "library broker command", "git_description_clean": "brokerlso is small python library to craft command messages for apache qpid broker", "git_keywords_clean": "", "pypi_description_keywords": "library broker command", "pypi_keywords_clean": "broker messaging amqp"}, "LPgenerator/django-db-mailer": {"git_readme_keywords": "update dbmail external service pypy django simple screenshots template box boxcar prowl information revision pypy pypy supervisor install python send different language py browser login health theme usage slack mattermost various nothing docs demo license documentation simple version template reversion python text shell responsive transactional web django celery service django install package linux smsaero smsbliss compatibility pushall sms default iqsms smsaero postmark django django backend template changelist image screenshots opportunity compare jpg demo installation desktop google gcm microsoft desktop safari push sms provider push css markup language transactional html database queue install new template target image view jpg installation editor template compare pypy target codacy image amazon simple admin admin demo project responsive android python pypy group change npm language available queue battery firefox mobile pubnub boxcar tts push installation docker django module mattermost boxcar documentation available enable logging premailer backend apps apple twilio iqsms change jpg send python sms python update mailer image block python centrifugo pubnub status target screenshots group boxcar apps view default provider screenshots apikey application additional information sync database changelist jpg sms tts db mailer password screenshots apps browser user slug jpg compatibility pypi translation created template background message screenshots signal build status gcm desktop safari centrifugo backend install jpg image push notification bandwidth configure model browser django db google gcm apps browse style enable editor model signal screenshots image apikey changelist boxcar pushall vagrant send background python dbmail popular pypi target compatibility available track information mjml mjml default basic mailgun compatibility python google chrome chrome firefox python amazon mobile google current version support template python try block python check mobile apps documentation status", "git_description_clean": "django module to easily send emails sms tts push using django templates stored on database and managed through the django admin", "git_keywords_clean": "", "pypi_description_keywords": "update dbmail external service pypy django simple screenshots template box boxcar prowl information revision pypy pypy supervisor install python send different language py browser login health theme usage slack mattermost various nothing docs demo license documentation simple version template reversion python text shell responsive transactional web django celery service django install package linux smsaero smsbliss compatibility pushall sms default iqsms smsaero postmark django django backend template changelist image screenshots opportunity compare jpg demo installation desktop google gcm microsoft desktop safari push sms provider push css markup language transactional html database queue install new template target image view jpg installation editor template compare pypy target codacy image amazon simple admin admin demo project responsive android python pypy group change npm language available queue battery firefox mobile pubnub boxcar tts push installation docker django module mattermost boxcar documentation available enable logging premailer backend apps apple twilio iqsms change jpg send python sms python update mailer image block python centrifugo pubnub status target screenshots group boxcar apps view default provider screenshots apikey application additional information sync database changelist jpg sms tts db mailer password screenshots apps browser user slug jpg compatibility pypi translation created template background message screenshots signal build status gcm desktop safari centrifugo backend install jpg image push notification bandwidth configure model browser django db google gcm apps browse style enable editor model signal screenshots image apikey changelist boxcar pushall vagrant send background python dbmail popular pypi target compatibility available track information mjml mjml default basic mailgun compatibility python google chrome chrome firefox python amazon mobile google current version support template python try block python check mobile apps documentation status", "pypi_keywords_clean": "django db mail email html text tts sms push templates mailer"}, "/oslo-vmware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack support license version documentation documentation source library release version repository license version", "pypi_keywords_clean": ""}, "lihuiba/flashcachegroup": {"git_readme_keywords": "group cachedev discard system change rewrite blocksize pattern multiple broken figure figure required explanation create structure demand installation separate dmsetup failure follow figure delete cachedev cachedev cached group individual python python flashcachegroup cachedev blocksize unused group principle figure group", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "flashcache group"}, "pyclectic/pyassert": {"git_readme_keywords": "expected string language introduction matcher function length example release pull request matcher mymatcher pyclectic organisation several assertion assertionhandler second good readability register matcher negated manner custom message matcher version number filesystem actual number automated functionality common actual instance expected exception registration project collection install pyassert common decorator register assertionerror assertion library available readable message actual string provide boolean added matcher regular expression deprecated framework pyassert version python version exception string constructor compatible python matcher added identical number provide compatibiliy added filesystem callable independent actual object directory assertion negated environment expected regular important function expected pyassert added number pyassert matcher fraisse sylvain function pyassert pyassert pyassert expected content object expected number register charlax travis plugin version general structure cheeseshop method manner such organisation version overall understandability provide custom", "git_description_clean": "readable assertions framework for python", "git_keywords_clean": "", "pypi_description_keywords": "introduction framework documentation functionality independent available environment understandability cheeseshop readability repository automated", "pypi_keywords_clean": ""}, "gitpython-developers/smmap": {"git_readme_keywords": "package introduction descriptor mapping continued operation library distribution github license benefit project theoretical support license information different database required command deterministic destructor version buffer implementation github efficient resource process likely overview fashion similar performance critical unused respective parameter motivation program gitpython access interface homepage interface buffer", "git_description_clean": "a sliding memory map manager", "git_keywords_clean": "", "pypi_description_keywords": "descriptor process documentation fashion similar theoretical gb efficient resource", "pypi_keywords_clean": ""}, "hrldcpr/hungarian": {"git_readme_keywords": "python additional information algorithm k module documentation implementation assignment problem directory tolerant anything corresponding wrapper hungarian algorithm precision integer module precision arithmetic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation wrapper hungarian algorithm assignment", "pypi_keywords_clean": ""}, "henzk/django-productline": {"git_readme_keywords": "documentation productline software development application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "productline application incomplete approach documentation development", "pypi_keywords_clean": "django fosd fop feature oriented programming product line web application"}, "/nysa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fpga communiation generator fpga", "pypi_keywords_clean": "fpga"}, "CovenantEyes/stringlike": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "additional functionality example behavior useful", "pypi_keywords_clean": "string lazy"}, "/lorem-ipsum-generator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "graphical paragraphs quantity interface generator python module", "pypi_keywords_clean": ""}, "ambitioninc/pagerduty-api": {"git_readme_keywords": "package pagerduty number license available release several source documentation installation version", "git_description_clean": "pager python wrapper to pagerduty api", "git_keywords_clean": "", "pypi_description_keywords": "package pagerduty number license available release several source documentation installation version", "pypi_keywords_clean": "pagerduty api requests"}, "dbarlett/pymailcheck": {"git_readme_keywords": "level pymailcheck second misspelled email usage second level list block python block python port installation pymailcheck example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "level pymailcheck second misspelled email usage second level list block python block python port installation pymailcheck example", "pypi_keywords_clean": "email mailcheck"}, "pylabs/pyramid-wtforms": {"git_readme_keywords": "consistent different validation framework support extension pyramid facility", "git_description_clean": "provides bindings for the pyramid web framework to the wtforms library", "git_keywords_clean": "", "pypi_description_keywords": "consistent different validation framework support extension pyramid facility", "pypi_keywords_clean": ""}, "tk0miya/testing-postgresql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple sqlalchemy import initdb apache license mytestcase unittest invocation install command py change engine lanuch support postgresql postgresql postgresql skipifnotfound decorator keyword commit database postgresql destructor brandnew database option fix timeout command fix python pg database connect getpid connect postgresql instantiation initialized handler database example unittest testcase number class mytestcase workdir fix import hello method import temporary directory collector feature cached database decorator disable varchar cursor pg license factory class postgresql generate suport python skipifnotfound suport package fix connector postgresql object generate postgresql absolute object deletion initialize database cursor postgresql class postgresql postgresqlfactory fix importerror command import release initialized db local freebsd postgresql instance generated database import unittest runtimeerror cursor execute psycopg connect sigint license apache postgresql server behavior teardownmodule fix attributeerror fedora fix documentation unittest import postgresqlfactory depend postmaster fix behavior postgresql postgresql support cursor cursor initial license history fix bug change behavior handler postgresql", "pypi_keywords_clean": ""}, "/ropemode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "RacingTadpole/django-private-media": {"git_readme_keywords": "useful detailed documentation stephan default django xsendfile webfaction development primary g project authenticated available accessible example overview django private functionality particular directory private location privatemediastorage storage information uploaded approach motivation capability couldn specific allowed permissioning authorization method provided privatemediastorage default permissioning attribution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "useful detailed documentation stephan default django xsendfile webfaction development primary g project authenticated available accessible example overview django private functionality particular directory private location privatemediastorage storage information uploaded approach motivation capability couldn specific allowed permissioning authorization method provided privatemediastorage default permissioning attribution", "pypi_keywords_clean": "private media xsendfile"}, "/ircmatch": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ircmatch comparison extension performance distribution", "pypi_keywords_clean": ""}, "bjornedstrom/sha3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyeclib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package reconstruction storage support phazr backend source version encoder command available version gf complete ubuntu liberasurecode configuration utility japan erasure liberasurecode library solomon jerasure variant development abstraction standard efficient recovery liberasurecode devel freenode support decoder combination single debian ubuntu erasure libphazr erasure liberasurecode class decoder utility openstack cloud directory command encoding jerasure library phazr cheung support variety dependency privacy python interface install pyeclib setuptools liberasurecode simple python pyeclib initialization devel install minimum number redundancy pyeclib started jerasure liberasurecode jerasure cauchy storage acceleration acceleration library simple construction encoder local phazr encoding software tsuyuzaki tsuyuzaki shss erasure pyeclib jerasure library jp libphazr openstack swift swift community maintenance library pyeclib installation install centos solomon encoding possible performance linux", "pypi_keywords_clean": ""}, "koodaamo/tnefparse": {"git_readme_keywords": "package attachment extraction tnefparse message default implementation current behavior extract default dump possible utility stream codepage g dump extract htmlbody extract specification collection positional parsed attachment command microsoft transport available error checksum checksum calculate tnefparse import empty neutral encapsulation optional basis example pypy overview show show hb htmlbody welcome please usage tnefparse rtfbody extract signature information transport neutral python library decoding above encapsulation format hb level decoding microsoft tneffile tnefobj optional explicit", "git_description_clean": "a tnef decoding library written in python without external dependencies", "git_keywords_clean": "tnef outlook email python microsoft", "pypi_description_keywords": "full attachment extraction tnefparse baggett convenience function useful invocation stream codepage htmlbody extract command fixes tnefparse version stdlib ruby unnecessary overview welcome please extraction jrideout option overall improved parameter script bug tneffile tnefobj default jrideout support extract invalid novell circa specification collection trevor scheroeder tnefparse import example wrapper pytnef hb htmlbody compatibility fixes signature transport neutral decoding microsoft pidtag message tnefparse parsefile level object python compatibility baggett tnefparse jrideout overall parsed attachment neutral encapsulation p tnefparse performance coverage python support pytnef novell debug optional explicit fixed entry rtfbody extract valueerror python library module circa bug savolainen package implementation current behavior sys possible utility doman pytnef decoder zipped positional microsoft transport available empty optional basis pypy conversion support python arcode tnefparse bug fixes information decoding above object client encapsulation format hb level tnefparse python pytnef circa checksum calculate", "pypi_keywords_clean": "tnef mapi decoding mail email microsoft"}, "/yarg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "release information initial release cornish cheese full documentation property decode client attempt access integration response release history source block python python full final decode attribute", "pypi_keywords_clean": "pypi client packages"}, "/links-devops": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package importable usefulness", "pypi_keywords_clean": ""}, "ajdavis/greenletprofiler": {"git_readme_keywords": "performance profiler profiler similar overhead deterministic documentation suitable greenlet context greenletprofiler greenlet deterministic performance", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "performance profiler profiler similar overhead deterministic documentation suitable greenlet context greenletprofiler greenlet deterministic performance", "pypi_keywords_clean": "greenlet gevent profiler asynchronous"}, "ambv/flake8-mypy": {"git_readme_keywords": "unrelated perform standalone stubbed standard plugin configuration default syntax follow syntax current review switch unicode compatibility mypypath useful integrating operation bugfix standard library geddit internal disable version checking experience natural license documentation happen command absolute separate configuration change readability relative editor integration compatible editor performance normal python syntax follow equivalent display limited python popular number unmatched pathlib stderr output performance optimization unused default config priority traceback stderr program analysis typing related wouldn useful information config codebase complex transitive closure limited approach realtime editor program plugin simplicity access specific surprising quality temporary directory incompatible trivial typeshed redundant shouldn configuration syntax directory suppress", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unrelated perform standalone stubbed standard plugin configuration default syntax follow syntax current review mypypath unicode compatibility useful operation standard library geddit internal checking experience license natural letter status plugin command separate configuration change readability relative version editor integration editor compatible normal python syntax follow equivalent display limited python popular number unmatched stderr output performance usable return priority traceback stderr program analysis typing related following wouldn suppress useful information config codebase complex transitive closure limited approach realtime editor program simplicity surprising access specific quality incompatible trivial shouldn configuration syntax", "pypi_keywords_clean": "flake mypy bugs linter qa typing"}, "aleaxit/gmpy2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition precision arithmetic python extension reference extension module rational arithmetic support complex active meaning negative prefix corruption release wheel format convert multiple precision subnormalization precision integer following", "pypi_keywords_clean": "gmp mpir mpfr mpc multiple precision"}, "pavoni/pywemo": {"git_readme_keywords": "following lightweight python version ouimeaux simpler device subscription update license pywemo ouimeaux build status mccracken ouimeaux device network address license build pywemo build discovery python module status lightweight", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "following lightweight python version ouimeaux simpler device license pywemo ouimeaux mccracken build status scbscription update ouimeaux device network address license build pywemo build discovery python module status lightweight", "pypi_keywords_clean": ""}, "/osmviz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "directory openstreetmap slippymap server slippy python osmviz osmviz license osmviz openstreetmap license server mapnik python pillow usage policy visualization toolkit pythonpath osmviz license installation openstreetmap visualization", "pypi_keywords_clean": "osm openstreetmap tiles visualization"}, "kkroening/ffmpeg-python": {"git_readme_keywords": "tracker anything convert readable library fluent interface possible ffmpeg python python matrix support interface complex shorthand notation diagram documentation command python ffmpeg additional generate thumbnail available graphs quickstart jupyterlab notebook homepage ffmpeg standard python version submit feature installation github ffmpeg overview example reference keyword graphs ffmpeg something arbitrary ffmpeg corresponding command ffmpeg homepage custom prompt documentation matrix ffmpeg command tensorflow deepdream dictionary powerful python python complex welcome official ffmpeg ffmpeg documentation documentation ffmpeg trivial special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "github api api reference", "pypi_keywords_clean": "vf v audio dsp ffmpeg ffmpeg ffprobe filtering filter complex movie render signals sound streaming streams vf video wrapper aac ac avi bmpflac gif mov mp mp png raw rawvideo wav aac ac avi bmpflac gif mov mp mp png raw rawvideo wav"}, "ptone/django-predicate": {"git_readme_keywords": "question instance container arbitrary iterable complex virtual django predicate install django python operator queryset situation predicate django quickstart install method block python trivial block console condiiton subclass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "question instance container arbitrary iterable complex virtual django predicate install django python operator queryset situation predicate django quickstart install method block python trivial block console condiiton subclass", "pypi_keywords_clean": ""}, "sirex/exportrecipe": {"git_readme_keywords": "buildout content block json helper parameter buildout configuration block cfg buildout directory destination section project buildout block python buildout usage extensive functionality possible example json", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "buildout content helper initial public parameter buildout configuration block cfg change history buildout directory project buildout block python change destination extensive functionality public release possible history initial example", "pypi_keywords_clean": ""}, "xiaoxu193/pyteaser": {"git_readme_keywords": "position project dependency information sentence sentence length command relevant summarize dependency package summary extract relevance pyteaser pyteaser sentence installation installed original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/stft": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lwcolton/falcon-cors": {"git_readme_keywords": "documentation install falcon specific resource falcon middleware block python block submit feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "falcon cors http"}, "PyUserInput/pyuserinput": {"git_readme_keywords": "pyuserinput keyboard object pynput capture complete pykeyboardevent behavior keyboard example d anything pymouseevent multiple development instantiation keyboard handling pymouse intended result screen platform control pymouseevent intended example pointer framework intended functionality challenge consistency quartz appkit following attention pykeyboard program operating system special", "git_description_clean": "a module for cross platform control of the mouse and keyboard in python that is simple to install and use", "git_keywords_clean": "", "pypi_description_keywords": "pyuserinput keyboard object simple capture pykeyboardevent behavior keyboard example d anything pymouse dynamic pymouseevent multiple development instantiation pymouse intended result screen platform control pymouseevent intended available example pointer framework format intended functionality challenge consistency quartz appkit following button attention pykeyboard grigg program operating system progress keyboard control special", "pypi_keywords_clean": "mouse keyboard user input event"}, "ShadowKyogre/asciimathml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "asciimathml standard displayable elementtree document presentation readable markdown extension", "pypi_keywords_clean": "markup math mathml xml markdown"}, "/django-phased": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple implementation setting response implementation django special subclass adrian holovaty specific context authenticated cookie standard updatecachemiddleware rendered template delimiter django generation requestcontext application useful updatecachemiddleware specific content technique rendered template middleware certain phasedrendermiddleware injection possibility", "pypi_keywords_clean": ""}, "/speex": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/python-karborclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "statement openstack application protection diversity installation release launchpad project license tracker documentation release management command usability additional library karborclient repository resource", "pypi_keywords_clean": ""}, "base4sistemas/satcomum": {"git_readme_keywords": "python restful license impresso projeto projetos relacionados utilitrios compartilhamento development status equipamento version", "git_description_clean": "cdigo comum implementao do sat cf e", "git_keywords_clean": "automacao comercial python sat cf sat fiscal cf sat cf documento fiscal eletronico", "pypi_description_keywords": "python restful license target projeto impresso projetos relacionados utilitrios compartilhamento equipamento version development build", "pypi_keywords_clean": ""}, "dstegelman/django-mail-queue": {"git_readme_keywords": "admin interface project welcome documentation simple issue stegelman celery queue repository django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "admin interface project welcome documentation simple issue stegelman celery queue repository django", "pypi_keywords_clean": "django mail queue"}, "Gidsy/django-threaded-messages": {"git_readme_keywords": "thread search support installable message implementation fulltext search seperate messaging system facebox project modular message pagination django similar install django jquery tokeninput recipient search version similar usuability django django pagination install modular recipient tokeninput facebook search component custom haystack django haystack notification django compose certain posting django notification", "git_description_clean": "rewrite of django messages to support facebook style threaded messaging", "git_keywords_clean": "", "pypi_description_keywords": "thread search support installable message implementation fulltext search seperate messaging system facebox project modular message pagination django similar install django jquery tokeninput recipient search version similar usuability django django pagination install modular recipient tokeninput facebook search component custom haystack django haystack notification django compose certain posting django notification", "pypi_keywords_clean": ""}, "/marionette-driver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "mozilla"}, "dominicrodger/django-tinycontent": {"git_readme_keywords": "wheel hinsche compatibility setting changelog transformed content universal multiple django autoslug output improved django tinycontent support documentation django application migration database dotted complex variant support django version installation content block python unapplied content markdown filter release custom whitespace nothing simple django tinycontent block python python complex ability context variable require interface modify travis template polish translation v compatibility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wheel hinsche compatibility setting changelog transformed content universal multiple django autoslug output improved django tinycontent support documentation django application migration database dotted complex variant support django version installation content block python unapplied content markdown filter release custom whitespace nothing simple django tinycontent block python python complex ability context variable require interface modify travis template polish translation v compatibility", "pypi_keywords_clean": ""}, "bmuller/txyam": {"git_readme_keywords": "consistent memcache txyam connection compression straightforward github asynchronous reconnecting installation function multiple memcached", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pytest-timeout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "whole process xdist plugin simple marker fix pytest capture timeout delay wrong way string useful marker argument header g termination output changelog command default method keyword pytest fix issue possible value whole fixture contribution fix timeout pytest valid timeout high priority account support cpython drop various option timeout pytest xdist teardown junit parameter signal handler gevent schoentgen create krekel bump portable method timeout def transfer repository require py g pytest sigalrm signal full signature pypy environment option g timeout method flexible marker default subsequent stderr nevertheless method thread oliveira fix deprecation add pypy only integer number work furthermore clearer output integration server mark individual configuration option add cpython pdb session brack algarvio compatible usage install cpyhon drop proof support important fixing keyword argument system timeout timeout other py posix function nosigalrm option fix support g junit work junit xml plugin pexpect global timeout timeout marker decorator suitable method second issue work fix interactive pdb alarm pytest timeout specific timeout foo marker add marker certain timeout plugin pytest fixture teardown pytest dev benefit configuration present changelog fix xml output mark timeout basis pytest install pytest thread method application release drop cpyhon running bump version consistency fixture setup timeout plugin debugging output stack dump method default pytest mark timeout duration teardown duration debugging information pytest drop signal method timeout environment platform dependent large overhead possible broken pytest marker ronny pfannschmidt positional documentation eventlet foo default timeout python entire process pypy semantic stderr signal continuous integration thread def initial detailed information fixture finaliser pytest compatibility timeout syntax dependent furthermore low oliveira update environment variable create valid positional argument work add confusion fix py doubt", "pypi_keywords_clean": ""}, "OpenCageData/opencage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "geocoder geocoder module instance parameter status unicode query limit additional anything address opencage problem string module query exception", "pypi_keywords_clean": "geocoding geocoder"}, "coleifer/huey": {"git_readme_keywords": "thread design result storage schedule simple prioritization thread default storage system glance limiting library block console single worker preference crontab console storage worker future database lightweight alternative block python result handle feature execution python process memory storage application worker thread consumer special function documentation project fantastic greenlet builtin support sqlite purpose solution storage documentation special result", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thread design result storage schedule simple prioritization thread default storage system glance limiting library block console single worker preference crontab console storage worker future database lightweight alternative block python result handle feature execution python process memory storage application worker thread consumer special function documentation project fantastic greenlet builtin support sqlite purpose solution storage documentation special result", "pypi_keywords_clean": ""}, "h2non/jsonpath-ng": {"git_readme_keywords": "python jsonpath apache license string library unambiguous help idx syntax choice string language governing first class jsonpath syntax implementation meaning jsonpath field need arbitrary python special field field pypi coverage general equivalent jsonpath associative compliance specific language programmatic jsonpath account operation copyright union generation build parsing toolkit fieldname build equivalent additional parser field idx example software goessner other access jsonpath import status documentation cowfish sub field field other problematic jsonpath jsonpath binary comparison expression final implementation incompatible robust meaning array field other field child matching index programmatic license pypi field access original license version status final other arithmetic arithmetic foo present full language usage basic jsonpath expr stefan goessner array access jsonpath rw failure context automatic unique particular meaning jsonpath unportable powerful python python matching jsonpath language implementation programmatic access standard compliant array index separated arithmetic special package abstract syntax build status result extension possible other jsonpath applicable status pypi cpython quick field syntax value other available several provide operator such foo idx array original proposal license copyright basis express syntax meaning atomic coverage status maintained ability robust parser object transform current object field foobar automatic documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python jsonpath apache license string library unambiguous help idx syntax choice string language governing first class jsonpath syntax implementation meaning jsonpath field need arbitrary python special field field pypi coverage general equivalent jsonpath associative compliance specific language programmatic jsonpath account operation copyright union generation build parsing toolkit fieldname build equivalent additional parser field idx example software goessner other access jsonpath import status documentation cowfish sub field field other problematic jsonpath jsonpath binary comparison expression final implementation incompatible robust meaning array field other field child matching index programmatic license pypi field access original license version status final other arithmetic arithmetic foo present full language usage basic jsonpath expr stefan goessner array access jsonpath rw failure context automatic unique particular meaning jsonpath unportable powerful python python matching jsonpath language implementation programmatic access standard compliant array index separated arithmetic special package abstract syntax build status result extension possible other jsonpath applicable status pypi cpython quick field syntax value other available several provide operator such foo idx array original proposal license copyright basis express syntax meaning atomic coverage status maintained ability robust parser object transform current object field foobar automatic documentation status", "pypi_keywords_clean": ""}, "noironetworks/apicapi": {"git_readme_keywords": "rest apicapi install interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "gears/gears-less": {"git_readme_keywords": "package project installation install version installation compiler", "git_description_clean": "less compiler for gears", "git_keywords_clean": "", "pypi_description_keywords": "package project installation install version installation compiler", "pypi_keywords_clean": ""}, "/gchartwrapper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "instance python wrapper dynamic python zope chart generation extra google chart manipulation", "pypi_keywords_clean": ""}, "DanielJDufour/beryl": {"git_readme_keywords": "package manager install ubuntu selenium selenium install required explanation firefox package manager optical character record selenium character recognition example machine python helpful geotiff following window levenshtein distance recognition levenshtein", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python testing"}, "/pybrain": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "neural networks machine learning"}, "andreif/codegen": {"git_readme_keywords": "negligence extension exemplary substitute copyright distribution merchantability documentation modification fitness business interruption procurement redistribution software express generation particular following liability contract permission consequential following disclaimer indirect incidental specific possibility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "ast codegen"}, "/strict-rfc3339": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "timezone perfection minimal offset datetime object result reverse string reason possible support validation trouble strict timegm rationale difference excellent library example follow limited important identical number simpler readable method generation system assumption timezone offset wrapper timezone library current timestamp function convenience lifting approx information ambiguous quality access correct lightweight method clunky module arithmetic python datetime", "pypi_keywords_clean": ""}, "/txtorcon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "controller platform platform unknown license classifier internet classifier software development license unknown classifier classifier natural development status twisted classifier audience security meejah meejah classifier operating framework twisted internet proxy classifier license description python classifier language english python twisted meejah classifier development natural language english classifier operating system classifier framework language python", "pypi_keywords_clean": ""}, "djangomini/djangomini": {"git_readme_keywords": "django framework valuable stable version class web application project sample project django web favorite documentation development project command web development rapid development project structure development process django python modern version web framework comment original django djangomini project development version infrastructure prepared simplified project default configuration symlink ready", "git_description_clean": "django mini infrastructure for rapid development on django", "git_keywords_clean": "", "pypi_description_keywords": "infrastructure project quick github development", "pypi_keywords_clean": "django web framework"}, "/networking-bagpipe": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "neutron backend bagpipe package backend technology backend chosen driver service apache license neutron server neutron bgpvpn lightweight implementation documentation source neutron networking bgpvpn bagpipe lightweight bagpipe proposal opencontrail mechanism driver flexibility robustness overview virtual cloud datacenter context dataplane encapsulation bgpvpn package software apache common implementation networking release service plugin linuxbridge isolation g repository networking bagpipe infrastructure license documentation information reachability protocol relevant bagpipe driver bgpvpn interconnection scalability compute plugin networking openvswitch interconnection service ipvpns dataplane isolation distinct", "pypi_keywords_clean": ""}, "selik/xport": {"git_readme_keywords": "x xm mapping python column python feature access specific binary format handful standard library namedtuple utility columns happy checking united alphabet instance specification government command straightforward observation revision cushman passing version python reader mainframe structure library providing recent original version regular format detail python numpy system update unncessary transport version number unusual binary attribute necessary michael module metadata binary convenience function column convenient conversion dataset object interface unicode string iterable trivial module current official separated bunch", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "x xm mapping python column python feature access specific binary format handful standard library namedtuple utility columns happy checking united alphabet instance specification government command straightforward observation revision cushman passing version python reader mainframe structure library providing recent original version regular format detail python numpy system update unncessary transport version number unusual binary attribute necessary michael module metadata binary convenience function column convenient conversion dataset object interface unicode string iterable trivial module current official separated bunch", "pypi_keywords_clean": "sas xport xpt"}, "pythonnet/clrmagic": {"git_readme_keywords": "clrmagic ipython sdpython jupyter", "git_description_clean": "ipython cell magic to use net languages vb net from jupyter notebooks", "git_keywords_clean": "", "pypi_description_keywords": "clrmagic extension launch jupyter normal ipython jupyter notebook sdpython simple jupyter ipython installation launch evaluate", "pypi_keywords_clean": "net clr mono jupyter ipython notebook csharp pythonnet"}, "enthought/casuarius": {"git_readme_keywords": "please enthought original cassowary license support dobrev website copying casuarius cython memory release cassowary available extension version", "git_description_clean": "cython bindings for the cassowary constraint solving toolkit", "git_keywords_clean": "", "pypi_description_keywords": "casuarius license cassowary incremental copying available memory release cython wrapper extension version incremental constraint", "pypi_keywords_clean": ""}, "/clarify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parsing detailed xml level choice clarify result precinct clarify python useful downloading xml schema possible much detail instance lagrue precinct county clarify object political jurisdiction election presidential election available presidential contest request feature installation clarify offer detailed license clarify recognizable candidate clarify class single result example software schema single object original xml number likely parser clarify xml format format clarify unzipped election jurisdiction clarify workflow summary priority convenience xml clarity contest single information portion software offer summary level python library barack obama arkansas county bug issue object interface company access specific clarity software method level information county arkansas parser object submit detailed election situation", "pypi_keywords_clean": "elections clarity results parser scraper"}, "/rconite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "antonagestam/nmap": {"git_readme_keywords": "output argument example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pygments-lexer-solidity": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package syntax highlighting building infrastructure import soliditylexer ability documentation solidity soliditylexer highlighting import solidity import solidity solidity version welcome installation", "pypi_keywords_clean": "pygments lexer syntax highlight solidity sol ethereum"}, "fivethreeo/django-easytests": {"git_readme_keywords": "global version example djangos develop py environment varable fallback current database appname py project additional filestructure py appname increase project structure configure development version installation py develop version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "global version example djangos develop py environment varable fallback current database appname py project additional filestructure py appname increase project structure configure development version installation py develop version", "pypi_keywords_clean": ""}, "juju/charm-tools": {"git_readme_keywords": "python dependency juju charm collection other available release information installation build travis travis build candidate possible example", "git_description_clean": "tools for charm authors and maintainers", "git_keywords_clean": "", "pypi_description_keywords": "python dependency juju charm collection other available release information installation build travis travis build candidate possible example", "pypi_keywords_clean": ""}, "irods/python-irodsclient": {"git_readme_keywords": "irodsmeta key session pass trash criterion replica resource qu type import criterion os path type project other txt irodsdataobject none ssl environment file size tempzone select columns query sql query collection pool management sum avg session query session import py collection implement genquery pyc id none obj demoresc var coll name project os import irodsdataobject tempzone key irodsmeta example metadata replicate replica path size query test print id optional ssl implement number print client user user bob column import metadata manager create default manager resource name type os env replicas print sum dataobject place context purpose different policy print replica specificquery env query execute metadata equivalent query print host localhost direct instantiation ticket query metadata type filter id delete manage filter criterion name collection row python var lib obj open obj collection f write print format genquery operator import collection different resource criterion operator tuple dataobject metadata get query cat value collectionmeta dataobject owner password zone column column obj name dataobjectmeta name dataobject name python irodsclient collectionmeta name print next connection subcol irodscollection additional code lazy py init manager metadata aggregation min range txt create min max id obj dataobjectmeta value manager user unicode none capath object obj delete obj irodsdataobject keyerror env manager alias manager py query search zone tempzone pip install none query resource manager print obj tempzone client test txt obj replicas environment path expanduser none cadata coll main ssl purpose purpose server implement basic specific f seek access python name result columns register key query count dataobject available init pyc line foo specificquery session create tempzone collectionmeta filter coll path pyc user id coll id reading filter dataobjectmeta tuple filter ssl create alias list columns dataobject administrator irodssession import rows max sum code key value manager access delete specific password gsi new collection name count trash filter session sql collectionmeta value sql select value chained col value project column owner pprint list keyword pyc recherch bob password name tempzone collection dataobject context ssl put method import specificquery path print server put icat query file txt register metadata value coll session id size id sum bob client object manager name trash authenticate foo bar dataobject id manager collection environment json replica status init py size print file ssl put test test obj none print client prc name test py resource policy enforcement value obj sql alias import irodssession y column execute direct none irodsmeta replica number object session localhost port result dataobject obj session size format query dataobject pyc access access manager python library dataobject size get tempzone metadata obj print collection collection name irodssession host obj id dataobject dataobjectmeta install python chained file os collection manager value none result collection query register specific query test get name print nbar f client api management implement status demoresc literal string manager init seek open source coll id cafile none support capath none avg count alias columns install json ssl name dataobjectmeta write foo list chained client zone collection execute default context behalf resource name parameter dataobject env import os empty result search tuple dataobjectmeta collection tempzone home format result env file combine query obj print line trash search print query join coll direct sql cadata none collection coll query session ssl context port user connection pool line register specific name dataobject py id next query query query chain secure connection id result main join obj metadata case create value print id dataobject import ssl path tempzone create method irodscollection tempzone col irodscollection import dataobject none general query get file env pip uninstall txt tempzone criterion collectionmeta query specificquery write install git advanced test irodsdataobject os environ foo nbar column y decimal print id execute owner name collectionmeta owner name replica collection irodscollection collection collectionmeta user manager genquery result management system create new pyc metadata project none uninstall python put get pip pip query import gsi pam purpose ssl print col manager pyc", "git_description_clean": "a python api for irods", "git_keywords_clean": "irods python python", "pypi_description_keywords": "key value cat seek query result dataobject owner password zone manager access column column delete specific authenticate implement literal string ssl python session pass open source irodsmeta key trash criterion obj name new collection dataobjectmeta name replica resource coll id name count metadata get os path support avg count alias columns trash filter install txt irodsdataobject session sql dataobject name sql select value chained python irodsclient name dataobjectmeta col environment file column owner write foo pprint list list chained keyword size tempzone pyc recherch client zone collection execute bob password gsi authentication print next name tempzone select columns collection dataobject connection behalf resource name put method import specificquery path print subcol irodscollection server put query collection query sql parameter pool management import os dataobject env icat query additional code lazy file txt py init register empty result metadata value sum avg manager metadata search tuple coll session session query id size session import id sum bob client tempzone home format result py collection authentication unicode pyc id object manager env file aggregation min name trash range none obj combine query demoresc var txt create obj print line foo bar min max coll name print query trash search join coll direct sql irodsdataobject tempzone key irodsmeta id obj dataobject id dataobjectmeta value example metadata replicate replica path manager collection environment json manager user test print size query id optional replica status object obj delete collection coll number print query session init py size print obj irodsdataobject port user connection pool test obj put test client user line register specific user bob none print keyerror env name dataobject client prc py id next query manager alias query query name test py resource chain manager py policy enforcement value obj query search id result metadata manager zone tempzone pip install sql alias manager resource main join import irodssession obj metadata resource manager execute direct none irodsmeta y column sum dataobject replicas print print obj replica number case tempzone client object session place test txt advanced gen localhost port create value print obj session id dataobject size format result dataobject different policy print replica specificquery env obj replicas query execute query print query dataobject path tempzone create method pyc access irodscollection tempzone col irodscollection environment path expanduser none general access manager query get coll main host localhost direct instantiation file env ticket pip uninstall txt tempzone query metadata python library query specificquery implement basic install git write dataobject size access specific get tempzone id delete test irodsdataobject f seek manage metadata obj os environ name result gen query foo nbar column y columns register collection name irodssession host basic gen decimal obj id name collection print id execute owner install python chained row key query count dataobject owner name file os available init pyc line foo replica collection manager collection irodscollection specificquery session value none result collection python create tempzone var lib obj open coll path obj collection pyc user id coll user manager id reading management system filter dataobjectmeta tuple filter query register create new f write alias list print format pyc metadata genquery operator import collection columns dataobject administrator specific query test get name print implement gen rows different resource uninstall python nbar f client api put get management implement pip pip max sum query import code status demoresc criterion operator tuple dataobject print col query manager init manager pyc", "pypi_keywords_clean": "irods"}, "django-blog-zinnia/zinnia-theme-foundation": {"git_readme_keywords": "theme foundation design template loader zinnia app zinnia theme foundation package license version sass licence zinnia version loading foundation zinnia django zinnia foundation general public theme boostrap gnu general public license foundation design ready zurb foundation python package start download", "git_description_clean": "zinnia theme foundation is python package providing theme built on zurb foundation for django blog zinnia", "git_keywords_clean": "", "pypi_description_keywords": "theme foundation design template loader zinnia app zinnia theme foundation package license version sass licence zinnia version loading foundation zinnia django zinnia foundation general public theme boostrap gnu general public license foundation design ready zurb foundation python package start download", "pypi_keywords_clean": "django blog weblog zinnia theme skin foundation"}, "Ketouem/flask-boto3": {"git_readme_keywords": "behaviour pipenv default install application context context configuration keyword additional available cheeseshop several extension contructor parameter profile", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jreese/ent": {"git_readme_keywords": "standard content personal profile framework install access attribute primitive following command copyright compatible command license dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard content personal profile framework install access attribute primitive following command copyright compatible command license dictionary", "pypi_keywords_clean": ""}, "/pydatalog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "recursive algorithms specific language datastore relational pythonic expressive development analysis database intelligent behavior integration frequent particular pydatalog toolbox discrete constraint equivalent description recursivity information protocol appropriate declarative language pydatalog pydatalog academic pydatalog spreadsheet", "pypi_keywords_clean": "prolog logic programming database sql data integration expert system ai"}, "/funcdesigner": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/universalclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "notation install universalclient cumbersome complete anything excellent endpoint string universal library universalclient import argument instance support immutable google setargs modification google cookie passing feature python compatible python dabcbabdc google google repository licensed personalized universalclient quick quick example trivial", "pypi_keywords_clean": ""}, "hammerlab/knnimpute": {"git_readme_keywords": "imputation knnimpute multiple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python status coverage coverage status imputation status knnimpute knnimpute multiple", "pypi_keywords_clean": ""}, "dlancer/django-pages-cms": {"git_readme_keywords": "download number license management pypi version directory detailed documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "download number license management pypi version directory detailed documentation", "pypi_keywords_clean": ""}, "StackTach/notigen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack new compute instance scheduler second operation library update compute possible large system request id instance future example instance update common request notification generator datetime deleted instance series concurrent following compute eventgenerator amount", "pypi_keywords_clean": "openstack notifications events generator"}, "/bottle-cork": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "authentication authorization simple authentication", "pypi_keywords_clean": ""}, "lunant/mockcache": {"git_readme_keywords": "", "git_description_clean": "mockcache is dictionary based mock memcached client library", "git_keywords_clean": "", "pypi_description_keywords": "import client client none last mockcachedkeycharactererror mockcachedkeynoneerror key mc delete time time memcached client mc doctest ellipsis mockcache set multi c keyprefix client library import time recent call result multi last mockcachedkeylengtherror get value value mc keyprefix pf cache mc incr mockcachedkeylengtherror key set b api true mc expiration mockcache client set value mock memcached mc client mc set get multi mc get multi c pf mc set none str mc mc decr delete mc mockcachedstringencodingerror key none doctest mockcachedkeycharactererror control other memcached sleep mc last mockcachedstringencodingerror get pf b keyprefix get mc none mc doctest ignore same behavior value import set mc memcached server call last last mockcachedkeynoneerror doctest ellipsis time sleep set doctest none true client mc mockcache import decr mc result mc ignore exception multi result last mockcachedkeytypeerror mockcachedkeytypeerror key mc mockcache key length incr mc thread safe python dictionary none value unicode mc exception detail module detail traceback b doctest pf multi multi b", "pypi_keywords_clean": ""}, "/apns-clerk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package library openssl deprecation implementation changelog character standard networking pythonic multiple standard library possible project handshake deployment support validation previous documentation worker database future available version solution insecure certificate unusable compatibility library payload decision connection temporary following spafford library little different approach maintenance protocol problem impossible snyder openssl wrapper", "pypi_keywords_clean": "apns push notification apple messaging ios"}, "vvangelovski/django-private-files": {"git_readme_keywords": "cherokee protected mechanism xsendfile project instance configuration documentation django application database django cherokee production application content django private callable xsendfile lighttpd following redirect access appropriate lighttpd", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mcauthorn/pycontrol": {"git_readme_keywords": "transaction support pycontrol version admin directory pycontrol please wsdls locallb worth bigip x multiple information import logging support x aribtrary install version bundle pycontrol revision keyword interst functionality transport session support directory argument various pycontrol meaningful logging address method caching fetch sessionid cache feature small project current python subsequent difficult copyright instantiation project license bigip hostname object endpoint local directory excellent library installation release session example exposure likely tutorial system fromurl icontrol optional attribute admin password gratifying control tricky subtle silly password admin issue hostname username normal python power qname error python likely clear multiple pycontrol fromurl argument quickstart initialization stderr excellent pycontrol object single pycontrol remote fetch initialization fetch dummyserver website maximum recursion debug logging constructor device pythonic m pycontrol pycontrol g retxml local concurrent factory import pycontrol basic authentication consistent directory fetch pycontrol g access duplicate domain little common ipportmember standard syslog underlying ipportmember object reason different bigip cache useful please username admin system session bigip device check future available block duplicate exception handler local wsdls occurs optional single admin fromurl information support arbitrary welcome flexibility devcentral devcentral introspection example python locallb", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pycontrol icontrol management", "pypi_keywords_clean": "icontrol api"}, "yourlabs/django-cities-light": {"git_readme_keywords": "package filesystem consult default engine convenient postgresql country region consult useful multiple configure specific environment project import country support yourlabs security spatial transaction simple address command database install django development virtualenv yourlabs example django application django mysql server security system helper management spatial database following command contact yourlabs development version support mysql simple django procedure several environment different installation install passwordless changelog installation management command", "git_description_clean": "a simple app providing three models country region and city model also provided command to insert or update data from geonames database dumps status stable", "git_keywords_clean": "", "pypi_description_keywords": "package filesystem consult default engine convenient postgresql country region consult useful multiple configure specific environment project import country support yourlabs security spatial transaction simple address command database install django development virtualenv yourlabs example django application django mysql server security system helper management spatial database following command contact yourlabs development version support mysql simple django procedure several environment different installation install passwordless changelog installation management command", "pypi_keywords_clean": "django cities countries postal codes"}, "joeyespo/gitpress": {"git_readme_keywords": "install gitpress default anything review control system sensible inferred comfortable preview project external powerhouse collection gitpress blissful application object configure gitpress command similar website presentation indexed advantage version control change future release future gitpress something simple feature example python important content gitpress server number commit flexible gitpress website functionality organization directory lookup process metadata bottleneck blogging platform repository receive interface install presentation shouldn blissful blogging belief particular blogging generous distributed version script flexibility default presentation browser amazing content simple reorganize feedback external simple repository programming project section shouldn mingle collaboration amount action special layout presentation configuration requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "blogging gitpress", "pypi_keywords_clean": ""}, "ninapavlich/django-batch-uploader": {"git_readme_keywords": "chrome firefox compatibility changelist individual successful default button uploader django specific django grappelli progress uploading uploading multiple multiple installation example django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "chrome firefox compatibility changelist individual successful default button uploader django specific django grappelli progress uploading uploading multiple multiple installation example django", "pypi_keywords_clean": "libraries web development"}, "/pymeta": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compact syntax alessandro pymeta pattern implementation starting summary pymeta pymeta grammar result stuff example variable evaluate apply stuff parsing expression syntax define grammar pattern matching literal character embedded usual grammar import example matching language common makegrammar makegrammar examplegrammar return python summary grammar definition examplegrammar example stuff result examplegrammar object python expression example result transforming", "pypi_keywords_clean": ""}, "/lax": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/barrel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "authentication compatible authorization problem configurable distribution convenience", "pypi_keywords_clean": "wsgi authentication authorization web http webapps"}, "/on-http-redfish-1-0": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "swagger rackhd redfish v"}, "/bcode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/wait-for": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction python incman incrementor incrementor incman sleep function output elapsed check format maximum command condition output import second certain length certain amount inaccurate function", "pypi_keywords_clean": "setup"}, "webfp/tbselenium": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "tor selenium tor browser"}, "/eofs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "computation suitable orthogonal function complete numpy output transparent distribution particular version analysis python environment climate similar analysis package available optional installation research fortran process reference empirical orthogonal typical preserving numpy package documentation documentation spatial temporal citation zenodo transparent handling python package python overview module package xarray", "pypi_keywords_clean": ""}, "realpython/django-slowtests": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "slowreport threshold ms manage py license documentation install install django sample output welcome welcome generate generate report optional django python ms optional python manage report testrunner discoverslowesttestsrunner command python following slowreportpath report following command runner django", "pypi_keywords_clean": ""}, "astrofrog/fast-histogram": {"git_readme_keywords": "status circleci package reliable installable versatile python example comparison anything numpy appveyor status possible convention portable package expense previous circleci status figure orientation travis status regular binning version histogram function performance python syntax versatility example regular compromise functionality histogram algorithm nonsense histogram speedup d histogram following consistent welcome status appveyor request regular histogram", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status circleci package reliable installable versatile python example comparison anything numpy appveyor status possible convention portable package expense previous circleci status figure orientation travis status regular binning version histogram function performance python syntax versatility example regular compromise functionality histogram algorithm nonsense histogram speedup d histogram following consistent welcome status appveyor request regular histogram", "pypi_keywords_clean": ""}, "APSL/puput": {"git_readme_keywords": "docker powerful weblog catalan management system example zinnia wagtail content management blogger beautiful awesome wordpress django", "git_description_clean": "a django blog app implemented in wagtail", "git_keywords_clean": "blog blogging wagtail cms django", "pypi_description_keywords": "docker powerful weblog catalan management system example zinnia wagtail content management blogger beautiful awesome wordpress django", "pypi_keywords_clean": "django wagtail puput blog cms app"}, "photo/trovebox": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "trovebox server switch useful pythonic trovebox python program commandline current trovebox development particular version configure upload public installation documentation future verification verify example hosted service unauthenticated access application hierarchy status certificate endpoint layout openphoto python coverage status different config following config thumbnail button unexpected commandline python library access https python package", "pypi_keywords_clean": "openphoto pyopenphoto openphoto python trovebox pytrovebox trovebox python"}, "Kotti/js-jquery-maskmoney": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python initial release framework directory integration maskmoney introduction library travisci original", "pypi_keywords_clean": ""}, "/django-qartez": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bitbucket kind service sitemapsf alternate hreflang author artur pypi django python python usage stable version sitemap py support python license django qartez python installation separate service block python github order artur barseghyan example hreflang implementation imaginary directory barseghyan artur sitemap necessary hreflang sitemap following section author full source installation install template block moment", "pypi_keywords_clean": "xml sitemaps"}, "open-iscsi/rtslib-fb": {"git_readme_keywords": "generic rtslib risingtide library rtslib apache license original discussion mailing targetcli debian fedora development rtslib version github compatible mailing number target rtslib branch rtslib gentoo python object targetcli rtslib configshell python library welcome target present source", "git_description_clean": "python library for configuring the linux kernel based multiprotocol scsi target lio", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/bonfire": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stream access python compatibility support documentation bonfire bonfire feeling command change documentation stream graylog release limited removed terminal current directory release initial release global search interface specific limited feature accept configuration bonfire graylog timezone", "pypi_keywords_clean": ""}, "andrewgross/pyrelic": {"git_readme_keywords": "python resource helper helper library careful documentation notify client library changelog pyrelic sparse release installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "twang817/weakrefmethod": {"git_readme_keywords": "python backport", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project weakmethod tracker backport repository", "pypi_keywords_clean": "weakref weakmethod"}, "/shorty": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library shortening support", "pypi_keywords_clean": "url short shortening"}, "aisthesis/pynance": {"git_readme_keywords": "public directory release version directory commit maximum distant financial library presence algorithms documentation preparation current public additional archive directory pynance sphinx current documentation version development environment example machine version overview numpy pandas virtual documentation explanation branch version number substantive environment virtual environment pandas pandas development release publish following section external pynance website retrieval github publish module matplotlib numpy htmllib beautifulsoup", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "finance investment stocks equities market options derivatives"}, "xzased/pytest-async-mongodb": {"git_readme_keywords": "package suitable mongomock documentation pymongo mongomock mongodb server markup language collection present documentation fixture future database following content further information callback server configuration documentation mongomock directory mongodb player mongomock library following function mongodb connection plugin access specific section certain filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package suitable mongomock documentation pymongo mongomock mongodb server markup language collection present documentation fixture future database following content further information callback server configuration documentation mongomock directory mongodb player mongomock library following function mongodb connection plugin access specific section certain filename", "pypi_keywords_clean": ""}, "Bernardo-MG/sphinx-docs-theme": {"git_readme_keywords": "small project syntax highlighting current github project master branch folder project documentation visual reference similar other graph twitter sphinx pypi package minimalist bootstrap github template sphinx license npm sphinx github sphinx project bootstrap template release static template development version js facebook develop branch local development documentation following documentation documentation version license reactive highlight js work stable development section source awesome highlight py", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "small project syntax highlighting current github project master branch folder project documentation visual reference similar other graph twitter sphinx pypi package minimalist bootstrap github template sphinx license npm sphinx github sphinx project bootstrap template release static template development version js facebook develop branch local development documentation following documentation documentation version license reactive highlight js work stable development section source awesome highlight py", "pypi_keywords_clean": "sphinx theme bootstrap html python"}, "gkovacs/lzstring": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decompressfrombase compressed compresstobase gbylni javascript compressed installation gbylni decompressfrombase compressed compresstobase", "pypi_keywords_clean": "lz string"}, "/elementtreewriter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction dependency xmlwriter namespace alternative elementtree changelog changelog simahawk", "pypi_keywords_clean": "xml elementtree"}, "CodeTengu/jokekappa": {"git_readme_keywords": "python command interface jokekappa library chinese humor installation", "git_description_clean": "a library for delivering one line programming jokes", "git_keywords_clean": "codetengu jokes python", "pypi_description_keywords": "python command interface jokekappa library chinese humor installation", "pypi_keywords_clean": "jokes programming jokes"}, "martyzz1/heroku3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "following method noninfringement transfer service formation configured instantiate heroku limitation interact license original rewrite copyright heroku useful customized irreversible method installation history support implied functionlity documentation command heroku license destroy available circleci buildpack merchantability fitness subject production software history software limited express substantial formation disable feature specific available logging heroku original heroku release wrapper project building procfile connection various updated heroku repository liability general configured account permission warning distribute sublicense information heroku platform particular purpose contract release updated initial release warranty maintenance object restriction access publish distribute updated following ratelimit attach", "pypi_keywords_clean": ""}, "adrienverge/yamllint": {"git_readme_keywords": "yamllint configuration indentation configuration yamllint default length waaaaaaaaaay consectetur yamllint linter overview screenshot syntax checking screenshot installation cosmetic whole block license single pkg install other style pattern debian ubuntu screenshot image install yamllint package manager such example python compatible yamllint pkg enable specific level warning status yamllint enable python documentation yamllint screenshot yamllint usage custom coverage status install py docs screenshot syntax validity freebsd emacs yamllint sudo documentation overview repetition indentation disable fedora centos parsable format ipsum dolor yamllint parsable image docs output parsable template directory yamllint python package special py yamllint yamllint disable documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "validity yamllint indentation repetition", "pypi_keywords_clean": "yaml"}, "paypal/baler": {"git_readme_keywords": "contribute d shell download optional transparent device compression goldman regular consumer example integration generated header little looser explanatory consumer facing build manual archive possible punskky project fitzgerald bundle optional bundle instance balerbundle other similar bleecher snyder included shell command static library advantage delay balerbundle project install method integration python resolution bundle localization helpful objective class built overwrite delay project target directory subdirectory structure other sdks import instance method subdirectory g return appropriate invocation binary paypal generated compile usual refer welcome documentation please structure useful python script sufficient documentation bundle class installation install script build appropriate shell script source target build further advice example invocation deployment target build process", "git_description_clean": "bundle assets into ios static libraries", "git_keywords_clean": "", "pypi_description_keywords": "contribute d shell download optional transparent device compression goldman regular consumer example integration generated header little looser explanatory consumer facing build manual archive possible punskky project fitzgerald bundle optional bundle instance balerbundle other similar bleecher snyder included shell command static library advantage delay balerbundle project install method integration python resolution bundle localization helpful objective class built overwrite delay project target directory subdirectory structure other sdks import instance method subdirectory g return appropriate invocation binary paypal generated compile usual refer welcome documentation please structure useful python script sufficient documentation bundle class installation install script build appropriate shell script source target build further advice example invocation deployment target build process", "pypi_keywords_clean": "ios objective generation static resource nsbundle mobile"}, "poliquin/brazilnum": {"git_readme_keywords": "poliquin random brazilian identification current padding correct verification possible historical identify check validation cdigos municpio municipal verification pattern structure interested identify specific leading python technical number specific business validate brazilian brazil installation database testing paulofreitas return formatting business establishment following function formatted information establishment number integer program headquarters source unformatted municpio special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "brazilian identification validate municipal municpio", "pypi_keywords_clean": "brazil brasil cnpj cei cpf pis pasep cep"}, "tucker777/qstk": {"git_readme_keywords": "please software tool library please python library repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "negligence exemplary substitute distribution copyright georgia implied dateutil sourabh merchantability documentation cornwell modification fitness business interruption procurement redistribution software express research corporation repository following liability contract quantsoftware permission consequential matplotlib following disclaimer indirect incidental specific particular purpose possibility", "pypi_keywords_clean": ""}, "trigger/recon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/hash-ring": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python algorithm information server number mapping random python memcache author functionality distribution example memcached libketama consistent consistent hashing wrapper memcachering hashing consistent", "pypi_keywords_clean": "memcached hashing hash consistent"}, "BDNYC/astrodbkit": {"git_readme_keywords": "launch ipython astrodbkit installation documentation astrodbkit launch database release bdnycdb", "git_description_clean": "a python module for astronomy to create manage and collaborate using sql relational databases", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "astrophysics"}, "fmenabe/yamlordereddictloader": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard health stackoverflow topic license python yamlordereddictloader definition configuration block arbitrary python pypi command dumper help message block python promotion module naeseth pyyaml", "pypi_keywords_clean": "yaml"}, "invl/retry": {"git_readme_keywords": "retry external dependency python retry logic combination use retry similar python various installation block original traceback retry decorator able function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "retry external dependency python retry logic combination use retry similar python various installation block original traceback retry decorator able function", "pypi_keywords_clean": ""}, "michaelhelmick/python-tumblpy": {"git_readme_keywords": "transparent python information uploading transparent python support python library delete reblog simple tumblr certain database interface information common support installation tumbply callback tumblpy tumblpy common tumblr", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hotfixy hotfix tumblpy tumblr license tumblr database internal tumblpy information common support installation tumbply block python callback readme structure example exception regular uploading transparent python support changelog history photos keyword reblog authentication dashboard updated readme formatting tumblpy tumblpy photos hotfix transparent python information parameter python library decode interface request method certain tumblpy changelog common tumblr", "pypi_keywords_clean": "python tumblpy tumblr oauth api"}, "/ipython": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pythonstartup environment powerful interactive debugger default extensible development processing support configuration available toolkit embeddable enhanced interactive jupyter logging completion environment function following history persistent different operating introspection integrated", "pypi_keywords_clean": "interactive interpreter shell embedding"}, "/iml-common": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project different packaging componentization iml project project utilise reuse", "pypi_keywords_clean": "iml lustre high availability"}, "python-graph-lovestory/blueprints": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/djalog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction python logging installation desirable django context something available django logging section djalogsql logging django internal favorite python logger possible approach example utility logging wrapper django", "pypi_keywords_clean": ""}, "/wrighttools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ultrafast diversity process documentation multidimensional spectroscopy dimensionality analytical interface available response visualize toolkit intuitive", "pypi_keywords_clean": "spectroscopy science multidimensional visualization"}, "r0x0r/pywebview": {"git_readme_keywords": "donating useful consider project install documentation executable additional webview component corporate backing compatible installation content framework explore pywebview pywebview pywebview sirokov bridge donation licensed platform wrapper independent project application pywebview renderer lightweight pywebview useful desktop application pywebview", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "donating useful consider project install documentation executable additional webview component corporate backing compatible installation content framework explore pywebview pywebview pywebview sirokov bridge donation licensed platform wrapper independent project application pywebview renderer lightweight pywebview useful desktop application pywebview", "pypi_keywords_clean": "gui webkit html web"}, "eevee/camel": {"git_readme_keywords": "readme", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python library github example", "pypi_keywords_clean": ""}, "cburmeister/flask-heroku-env": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "vmalloc/pyforge": {"git_readme_keywords": "create wildcard requested simple useful mock interleaved order case forge ellipsis stub replay stub default forge much setattr getattr record replay ellipsis mock raise myexception size self hybrid mock stub forge forge acceptance class mock ellipsis class mock someclass alternative syntax file object replay due init self exception detail someclass mock certain value replay mock invalid nested ordering mock object someclass pass static method example sentinel mock filename rb forge class myclass class api class likely log self class equivalent replay forge return cls context someclass fake new work mox manager debug def bar reading ellipsis fake read size mock file class obj value true def foo hackish nature place manager replacing foo forge buffer raise order group regular mock constructor same signatureexception class info manager replay length forge f f legacy code easy approach record flow func self read self class construction attrs result unittest module false forge ellipsis time stubs class mock d original call value forge problem ellipsis instance replay wildcard forge certain args callback mock stub create function exit cls return instance forge arg installed stub value pass return value bar forge mock foo real reason file mock setattr length assert mock bar mock enable stub python f lambda manager create mock c debug info call last unexpected b forge def constructor class method readability class someclass someclass record context call def init expectation stub name isolated environment wildcard function staticmethod def doesn get library return forge method self object def order install mechanism func forgemanager key assert func forge ordinary method lambda instance myclass type type func mock image pass classmethod self buffer environment class debug disable default floating point assert class f forge python setup unittest function signature ignore attribute course self raise forge forge pass mock concise structure installation regular method pass ordering myobj f filename self record mode manager forge detail traceback def func interleaved ordering forge create sure class object mock mock instance fine constructor cls func ok someclass forge recorded mock regular exact value unexpected function mock class environment replay context method pass last signatureexception mention arg pass self read time time behavior import time run parameter raise getattr mechanism call callback def regular mock forge multiple whenever foo self time forge use directory forge setattr stub def forge enable point mock manager event interface obj object original method doesn care lambda yuck syntactic sugar rb def func stub sufficient stubbing work way setattrs regardless create class pass class value mock self open class myobj variety identical keyword whenever following doesn self parameter manager record forge handle class file name isa forge debug group get f whenever replay assert cls pass mock func practice enable setattr result c root replay f attribute class someclass mock read ignore exception c mock debug enable value same notimplementederror instance create file picture py install true mock hybrid class bar self side self self scratch return fake cls mock myclass object negator context someclass object def self mock structure func b handy import forge last unexpectedcall someclass replacing note whenever specific order valid different return mock obj self arg same install replay time function stub handle mock classmethod def self filename acceptance suite common pattern correct forge obj f replay instance different create hybrid environment variable create mock class myclass unit ellipsis forge function stubs replacing context pass def recent call myclass forge return certain self pass create sentinel hybrid mock myobj notimplementederror classmethod mock comparison b mock self size info forge name wildcard mock mock b raise notimplementederror mock log self log mock approach maximum flexibility b pass niceness script attrs api fact context mock hard mock length same effect def log argument method class new instance pass stub method cls custom value open filename following class funky business object forge d stub unexpectedcall unexpected foo mock setup py signature ordering group haskeyvalue timing rescue form replacing result mock case forge manager self value element debug environment object pass mock api self def test code pass forge replay manner mock bar mock myclass mock result def read self b ok mock dedicated api turn other callback args anything downside many install usage effect forge replay class call signature feature rich notimplementederror def method assert exception following sequence turn inspiration forge import manager interleaved stubs forge size raise myobj object stub stub pass staticmethod forgemanager replay", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "create wildcard requested simple useful mock interleaved order case forge ellipsis stub replay stub default forge much setattr getattr record replay ellipsis mock raise myexception size self hybrid mock stub forge forge acceptance class mock ellipsis class mock someclass alternative syntax file object replay due init self exception detail someclass mock certain value replay mock invalid nested ordering mock object someclass pass static method example sentinel mock filename rb forge class myclass class api class likely log self class equivalent replay forge return cls context someclass fake new work mox manager debug def bar reading ellipsis fake read size mock file class obj value true def foo hackish nature place manager replacing foo forge buffer raise order group regular mock constructor same signatureexception class info manager replay length forge f f legacy code easy approach record flow func self read self class construction attrs result unittest module false forge ellipsis time stubs class mock d original call value forge problem ellipsis instance replay wildcard forge certain args callback mock stub create function exit cls return instance forge arg installed stub value pass return value bar forge mock foo real reason file mock setattr length assert mock bar mock enable stub python f lambda manager create mock c debug info call last unexpected b forge def constructor class method readability class someclass someclass record context call def init expectation stub name isolated environment wildcard function staticmethod def doesn get library return forge method self object def order install mechanism func forgemanager key assert func forge ordinary method lambda instance myclass type type func mock image pass classmethod self buffer environment class debug disable default floating point assert class f forge python setup unittest function signature ignore attribute course self raise forge forge pass mock concise structure installation regular method pass ordering myobj f filename self record mode manager forge detail traceback def func interleaved ordering forge create sure class object mock mock instance fine constructor cls func ok someclass forge recorded mock regular exact value unexpected function mock class environment replay context method pass last signatureexception mention arg pass self read time time behavior import time run parameter raise getattr mechanism call callback def regular mock forge multiple whenever foo self time forge use directory forge setattr stub def forge enable point mock manager event interface obj object original method doesn care lambda yuck syntactic sugar rb def func stub sufficient stubbing work way setattrs regardless create class pass class value mock self open class myobj variety identical keyword whenever following doesn self parameter manager record forge handle class file name isa forge debug group get f whenever replay assert cls pass mock func practice enable setattr result c root replay f attribute class someclass mock read ignore exception c mock debug enable value same notimplementederror instance create file picture py install true mock hybrid class bar self side self self scratch return fake cls mock myclass object negator context someclass object def self mock structure func b handy import forge last unexpectedcall someclass replacing note whenever specific order valid different return mock obj self arg same install replay time function stub handle mock classmethod def self filename acceptance suite common pattern correct forge obj f replay instance different create hybrid environment variable create mock class myclass unit ellipsis forge function stubs replacing context pass def recent call myclass forge return certain self pass create sentinel hybrid mock myobj notimplementederror classmethod mock comparison b mock self size info forge name wildcard mock mock b raise notimplementederror mock log self log mock approach maximum flexibility b pass niceness script attrs api fact context mock hard mock length same effect def log argument method class new instance pass stub method cls custom value open filename following class funky business object forge d stub unexpectedcall unexpected foo mock setup py signature ordering group haskeyvalue timing rescue form replacing result mock case forge manager self value element debug environment object pass mock api self def test code pass forge replay manner mock bar mock myclass mock result def read self b ok mock dedicated api turn other callback args anything downside many install usage effect forge replay class call signature feature rich notimplementederror def method assert exception following sequence turn inspiration forge import manager interleaved stubs forge size raise myobj object stub stub pass staticmethod forgemanager replay", "pypi_keywords_clean": ""}, "SiLab-Bonn/pixel-clusterizer": {"git_readme_keywords": "example folder python look mapping cluster charge event number cluster information clusterizer pixel pixel clusterizer result array column clustering numpy recarray install pixel installation stable following event basis", "git_description_clean": "a fast generic and easy to use clusterizer to cluster hits of pixel matrix in python", "git_keywords_clean": "pixel cluster detector", "pypi_description_keywords": "", "pypi_keywords_clean": "cluster clusterizer pixel"}, "alilja/ratebeer": {"git_readme_keywords": "package ratebeer search brewery takedown brewery telephone difficult brewery country license creator friendly pythonic library castellano python possible ratebeer expected database output several scraping standard python compatability installation generator public python process foreign municipality province brewery ratebeer general information initial release release license vincent castellano brewery homepage painless address ratebeer scratch", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package brewery takedown brewery telephone difficult brewery country license creator friendly pythonic library castellano python possible ratebeer expected database output several scraping standard python compatability installation generator public python process foreign municipality province brewery ratebeer general information initial release release license vincent castellano brewery homepage painless address ratebeer scratch", "pypi_keywords_clean": "ratebeer rate beer ratings"}, "htarevern/salesforce-python-sdk": {"git_readme_keywords": "python sdk install python parameter sobject partner salesforce python install example sdk salesforce", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python sdk install python parameter sobject partner salesforce python install example sdk salesforce", "pypi_keywords_clean": "salesforce python sdk salesforce com salesforce python sdk salesforcepythonsdk"}, "zopefoundation/zope-configuration": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documented default documentation status testrunner python flesh propagate messageid confusion testing output jython support configuration package distribution subversion configuration stxdocs standard support pluggable exception chaining nested exception single standalone package change cheeseshop future catching explicit support install single chrism multiple leading change parser deprecated sphinx version compatible coverage subclass jython initial python dependency schema spurious declaration pypy likely available jython extensible system subset internal compatibility incorrect attribute release environment custom continuous integration various express configuration unicode translation testing dependency support python shadowing allow signature simplify exception doctestunit initial release language single version wheel simplify namespace includepath outdated itemgetter configuration system module import suppress deprecation address method python package structure extensibility module directive broad", "pypi_keywords_clean": "zope configuration zcml"}, "/api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "django-grappelli-extensions/django-grappelli-extensions": {"git_readme_keywords": "installation python django grappelli available python django navigation request sidebar installation structure important sidebar installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ntoll/uflash": {"git_readme_keywords": "package something hex myscript py device default flag following way pypi canonical repository storage device technical knowledge required kernel version information box library utility development several essential help argument usb storage install command usb uflash computer default version uflash watch filesystem version connected micro installation unmodified default virtualenv micropython hex python micro flash popular second argument bbc micro system specified script common runtime hex default install flash python encoded python micropython runtime good connected bbc script recovered github please encode python repository development version recovered script install command hex utility micro hexified python hex format python script flash version flash multiple correct command usage source following command module makefile", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "something hex module update audio system linux release history uflash update box library development help uflash command support install command george mu final version display micro flash new radio popular linux development version flash version radio module source number many error micropython update minor refactoring default canonical repository carlos watch version information copyright command initial usb storage own uflash watch refactor hex installation documentation update virtualenv micropython hex content script refactor refactor documentation runtime hex attribute feature complete final runtime script recovered connected bbc repository mu update hard work brown start update help utility micro update runtime work external pereira atencio command usage first argument rc update second argument power myscript py device flag following way pypi required kernel runtime updated several essential amazing license information usb default version filesystem coverage unmodified default common complete comprehensive default install micropython runtime encoded python cable release basic hex extraction recovered script install command initial release hex hexified python hex format runtime update flash multiple module certain update feature carlos pereira makefile build package storage device technical knowledge many inclusion micropython version utility fixes bug documentation documentation access uflash computer script many speech address record connected micro python extended address bbc micro gremlin specified script version number history updated version flag flash python github please bug fixes encode python robinson pop ability current version grimmer python script input builtin correct basic functionality final update carlos refactor following command good shape", "pypi_keywords_clean": ""}, "Carreau/there": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "indentation production likely gotchas replacement filename function example", "pypi_keywords_clean": ""}, "HunterLarco/terminator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python game terminator"}, "astropy/astroscrappy": {"git_readme_keywords": "implementation speedy cosmic saturated dokkum article contiguous multiple possible original g convention project license separable documentation annihilation package automatic recognition readability comparable identical copyright astropy version improvment integrity cosmic automatic version parallelization cosmic algorithm information detector compiler separable version scrappy openmp certain astropy", "git_description_clean": "speedy cosmic ray annihilation package in python", "git_keywords_clean": "", "pypi_description_keywords": "package algorithm", "pypi_keywords_clean": ""}, "/vis-framework": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "analysis computer framework python package", "pypi_keywords_clean": "music music analysis music theory musicology counterpoint"}, "akamai-open/edgegrid-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "cloudtools/troposphere": {"git_readme_keywords": "greengrass build status apigateway troposphere full batch cloudfront python community dynamodb cloudformation neutron floatingip welcome licensing elasticbeanstalk sagemaker group engage licensing troposphere neutron firewallpolicy checking instance elasticloadbalancingv troposphere license support codedeploy lambda wafregional neutron healthmonitor athena single instance distribution system version troposphere library codebuild creation resource directoryservice python installation troposphere dependency neptune neutron floatingipassociation server instance sample routeresolver property appsync serverless resource property troposphere community neutron loadbalancer repository neutron firewallrule recommended clarity keypair full license neutron securitygroup python simple kinesis cognito kinesisanalyticsv object simple example redshift checking full neutron poolmember amazonmq opsworkscm additional validity neutron firewall servicediscovery robomaker appmesh documentation status", "git_description_clean": "troposphere python library to create aws cloudformation descriptions", "git_keywords_clean": "aws cloudformation python python", "pypi_description_keywords": "greengrass build status apigateway troposphere full batch cloudfront python community dynamodb cloudformation neutron floatingip welcome licensing elasticbeanstalk sagemaker group engage licensing troposphere neutron firewallpolicy checking instance elasticloadbalancingv troposphere license support codedeploy lambda wafregional neutron healthmonitor athena single instance distribution system version troposphere library codebuild creation resource directoryservice python installation troposphere dependency neptune neutron floatingipassociation server instance sample routeresolver property appsync serverless resource property troposphere community neutron loadbalancer repository neutron firewallrule recommended clarity keypair full license neutron securitygroup python simple kinesis cognito kinesisanalyticsv object simple example redshift checking full neutron poolmember amazonmq opsworkscm additional validity neutron firewall servicediscovery robomaker appmesh documentation status", "pypi_keywords_clean": ""}, "canaryhealth/lessc": {"git_readme_keywords": "resolver loader asset compiler resolver import resolution install other lessc compiler custom compiler open path loader uri asset mypackage bash necessary css path pip egg uri base asset uri relative uri custom loader lessc usage css lessc def resolver compiler configuration def resolver resolver kind lessc program lessc compile syntax base uri uri loader custom resolver filesystem css css export path resolver uri installation uri resolver content compiler configuration mypackage path absolute uri default compiler nodejs program compiler lessc loader lessc loader loader recursive initial uri pip install install lessc compile function filesystem nodejs lessc please import mypackage resolution control def loader asset css following import python package python import module css mypackage python writing possible python module actual project homepage compile asset compiler compiler lessc def uri css style python implementation non absolute first relative python custom uri pure python following compile information above object improbable import lessc", "git_description_clean": "a python less compiler", "git_keywords_clean": "", "pypi_description_keywords": "resolver loader asset compiler resolver import resolution other lessc compiler custom compiler open path loader uri asset mypackage bash necessary css path pip egg uri base asset uri relative uri custom loader lessc usage css lessc def resolver compiler configuration def resolver resolver kind lessc program lessc compile syntax base uri uri loader custom resolver filesystem css css export path resolver uri installation uri resolver content compiler configuration mypackage path absolute uri default compiler nodejs program compiler lessc loader lessc loader loader recursive initial uri install lessc pip install lessc export compile function filesystem nodejs lessc please import mypackage resolution control def loader asset css following import python package python import module css mypackage python writing possible python module actual project homepage compile asset compiler compiler lessc def uri css style python implementation non absolute first relative python custom uri pure python following compile information above object improbable import lessc", "pypi_keywords_clean": "less css compiler"}, "laanwj/bitcoin-python": {"git_readme_keywords": "package d possible archive bandwidth cryptocurrency bitcoinlib support install structure version example install bitcoin ultimate sphinx installation maintainer documentation documentation bitcoin access certificate verification bitcoin library cheeseshop", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package bitcoinlib maintainer communication ultimate current satoshi original structure version library bandwidth example", "pypi_keywords_clean": ""}, "jvsteiner/merkle": {"git_readme_keywords": "simple performant append performant implementation golang implementation traversible installation convenience", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "merkle"}, "dbcli/cli-helpers": {"git_readme_keywords": "package tabular framework amazing combination processing simple documentation quality command pattern custom library", "git_description_clean": "python helpers for common cli tasks", "git_keywords_clean": "python cli helpers library", "pypi_description_keywords": "package tabular framework amazing combination processing simple documentation quality command pattern custom library", "pypi_keywords_clean": ""}, "georgeyk/loafer": {"git_readme_keywords": "loafer full version example generic build status asynchronous message climate license website integration message dispatcher version sponsor loafer python status coverage coverage status experimental concurrent full documentation quality loafer status scrutinizer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version example generic default message translator scrutinizer aiohttp lamenezes prefix rewrite wildcard execute asynchronous message performance refactor message processing climate sponsor changelog processing license provider support package metadata documentation importerror sponsor configuration wiliamsouza refactor website integration message dispatcher version performance coverage internal message metadata requirement message lifecycle python execution service iteration callable logging translator snsmessagetranslator experimental initial concurrent initial release metadata information allisson quality daneoshiga py handler integration refactor sqsprovider build", "pypi_keywords_clean": "asynchronous asyncio message dispatcher tasks microservices"}, "futurecolors/fc-thumbnail": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support pluggable pgmagick support imagemagick flexible backend support generation pluggable backend rewritten vertical integration imagefield calculation thumbnail possibility", "pypi_keywords_clean": ""}, "facebookresearch/visdom": {"git_readme_keywords": "value default following plot side plotting visualization specific simple set exact supported number vis audio useful addition hostname ordering note saved plotting arbitrary html property value plot use functionality y same axis size default rich data vis surf updating input string plot specific mapping trace vis bar videos svg saved view demo model filename env list width figure supported path below right update position theano codec default color filter table line visdom vis heatmap new envs use append example equivalent stem plot current login python visdom transparent default first tick string number plots bar wrong optional function flexible tool json heatmap plots box id keys fine vis default environment pressed key delete button torch plots contour vis replay image vis window data multiple columns default other size single flag new enironment figure height original name demo dir state have wrapped show arrow file append none log irreversible functionality send saved last line plots plotly object wrapped several username input tensor optional data basic visualization clip maximum symbol default example torch sophisticated vis delete dict mapping column ordering common port shift scroll line default state server log file current environment couple local command image equal last setup input window id delete user corresponding axis vis histogram visdom performance fork note new data experimental code marker default comparison equal padding default marker plotting id use below visdom supported color md hash black white host address base visdom default none such supported fill meaningful g supported fps example color id multiple plots note default default experimentation broadcast torch usage env id envs view data point several common layout legend note server default default flag new plots decimal number use webgl able string representation new env marker size alt scroll nrow nrow remote data corresponding file vis svg secure cookie numeric logging vis quiver don create show legend key pressed plot key opt new environment same window file size visdom server env tip value update number button fork new noncommercial international row padding example vis zoom property pane below line minimum value view management web client contour plots scatter plots server url default length vis contour state section chrome surface plot folder icon setup usage visdom client supported sample input list margin video default bar plot exist axis font append mode tensor regular expression specific option red tensor work fine blue emphasis scientific experimentation control demos api delete url information type section env default info win hash integer specific vis sample frequency legend pane complete proxy robust supported marker environment id input svg black red blank slate maximum value text label unused endpoint server side empty environment dictionary mapping env state intensity value environment similiar fine provided default javascript event present provided log size nrow setup authentication creative pane position main page base server safari work row column alt shift bar graphs marker symbol vis win text vis scatter example mapping work try single intensity window id scale browser get md high throughput own host proxy support vis mesh attach slider server potential aforementioned image list tip fork d delete env plots quiver possible get window line dash singular env optional table cmd line documentation number corresponding sense first nan handler height server input grid audio directory visdom object performance vis ogg container visdom log numpy overview mapping protocol figure width own arbitrary event ability audio videos axis first following basic initialization height show access specific plots heatmap env name dict ipv demos container chrome wrapped plotting replay example dict potential work area below license visdom endpoint ipv plots mesh internal functionality dialog vis check color opacity final layout state url default update plots surface plots mesh plots systematic experimentation plotting default single table python example history note vis video vis get point default mode flag quick introduction lua client columns bottom margin quiver plot note due ffmpeg append data id check content svg object session current view png caption ssh tunnel vis text level default environment selector supported jpg static throughput data environment vis zoom alt top margin object matplotlib direction stem plots discrete last tick default note colormap default event keycode font information get list live rich front end create plot command line feature efficient single trace failure various use vis stem update id get none line same way current data reliance window graph backend supported colormap visdom implementation svg string optional argument double click server api regular grid live data new property dash type title figure red green ui feature doesn exist right margin use new same color visualization space quiver plots jpg quality debug experimental easy option note ui rich demo reuse fork below event lua value checkbox optional tensor window check input note get env something high quantity number decimal g data vis line contour plot white tensor plotting front have saved matrix different additional compare offline mode default raise above usage api plotting function updating single replay log new value compare legend socket fill area proxy g stored single page editing saved trace international public env clearing update data plotly data have logging level many matplot vis matplot vis fork figure note common plot name time series check connection particular label line plot text string same backend figure title display pressed show helpful current server svg file g supported supported length line argument check box license file support username sever stereo audio alive default vis fork env bottom argument envs note saved fit matplotlib plot supported vis responsible overview visdom following api location unique color label vis individual plots additional enable use size red plotly convention fork frequency default mesh plot axis last torch example plotly plots have look have get current custom default password drop resize default clip few environment individual tip request multiple common default dictionary visualization share button button following line eraser button form single plot data rich icon dialog request default axis show env dir case configuration scroll vis boxplot provided saved callback editable text create cursor point black default enable page vis default dict frontend property previous env password line show specific window same size python package compare envs example use env repack icon login flag shift trace use generic plots many list new dialog window plots stem experience input table default line audio file scatter plot specific env readonly mode plots generic exception plots line plots visdom filepath standard text dashboard create new server get issue visdom use alt visdom flexible webgl contexts data inspect image pane clip minimum compare different vis image filepath note vis plotlyplot waveform use", "git_description_clean": "a flexible tool for creating organizing and sharing visualizations of live rich data supports torch and numpy", "git_keywords_clean": "", "pypi_description_keywords": "value default following plot side plotting visualization specific simple set exact supported number vis audio useful addition hostname ordering note saved plotting arbitrary html property value plot use functionality y same axis size default rich data vis surf updating input string plot specific mapping trace vis bar videos svg saved view demo model filename env list width figure supported path below right update position theano codec default color filter table line visdom vis heatmap new envs use append example equivalent stem plot current login python visdom first tick string number plots bar wrong optional function flexible tool json heatmap plots box id keys fine vis default environment pressed key delete button torch plots contour vis replay image vis window data multiple columns default other size single flag new enironment figure height original name demo dir state have wrapped show arrow file append none log irreversible functionality send saved last line plots plotly object wrapped several username input tensor optional data basic visualization clip maximum symbol default example torch sophisticated vis delete dict mapping column ordering common port shift scroll line default state server log file current environment couple local command image equal last setup input window id delete user corresponding axis vis histogram visdom performance new data experimental code marker default comparison equal padding default marker plotting id use below visdom quality default supported color md hash black white host address base visdom default none such supported fill meaningful g supported fps id multiple plots note default default experimentation broadcast torch usage env id envs view data point several common layout legend note server default new plots decimal number use webgl able string representation new env marker size alt scroll nrow nrow remote data corresponding file vis svg secure cookie numeric logging vis quiver show legend key pressed plot key new environment same window visdom server env tip value update number button noncommercial international row padding example vis zoom property pane below line minimum value view management web client contour plots scatter plots server url default length vis contour state section chrome surface plot folder icon setup usage visdom client supported sample input list margin video default bar plot exist axis font append mode tensor regular expression specific option red tensor work fine blue emphasis scientific experimentation control demos api delete url information type section env default info win hash integer specific vis sample frequency legend pane complete proxy robust supported marker environment id input svg black red blank slate maximum value text label unused endpoint server side empty environment dictionary mapping env state intensity value fine provided default javascript event present provided log size nrow setup authentication creative pane position main page base server safari work row column alt shift bar graphs marker symbol vis win text vis scatter example mapping work try single intensity window id scale browser get md high throughput own host proxy support vis mesh server potential aforementioned image list tip fork d delete env plots quiver possible get window line dash singular env optional table cmd line documentation number corresponding sense first nan handler height server input directory grid audio visdom object performance vis ogg container visdom log numpy overview mapping protocol figure width own arbitrary event ability audio videos axis first following basic initialization height show access specific plots heatmap env name dict ipv demos container chrome wrapped plotting replay example dict potential work area below license visdom endpoint ipv plots mesh internal functionality dialog vis check color opacity final layout state url default surface plots mesh plots systematic experimentation plotting default single table python example vis video vis get point default mode flag quick introduction lua client columns bottom margin quiver plot note due ffmpeg append data id check content svg object session current view ssh tunnel vis text level default environment selector supported jpg static throughput data environment vis default caption zoom alt top margin object matplotlib direction stem plots discrete last tick default note colormap default event keycode font information get list live rich front end command line feature efficient single trace failure various use vis stem update id get none line same way current data reliance window graph backend supported colormap visdom implementation svg string optional argument double click server api regular grid live data new property dash type title figure red green right margin use new same color visualization space quiver plots jpg quality debug experimental easy option note ui rich demo reuse fork below event lua value checkbox optional tensor window check input note get env something high quantity number decimal g data vis line contour plot white tensor plotting front have saved matrix different additional compare default raise above usage api plotting function updating single replay log new value compare legend socket fill area proxy g stored single page editing saved trace international public env clearing update data plotly data have logging level many matplot vis matplot figure note common plot name time series check connection particular label line plot text string same backend figure title display pressed show helpful image note current server svg file g supported supported length line argument check box license file support username sever stereo audio alive default vis argument envs note saved fit matplotlib plot supported vis responsible overview visdom following api location unique color label vis individual plots additional enable use size red plotly convention fork frequency default mesh plot axis last torch example plotly plots have look have get current custom default password drop resize default clip few environment individual tip request multiple common default dictionary visualization share button button following line eraser button form single plot data rich icon dialog request default axis show env dir case scroll configuration vis boxplot provided saved callback editable text cursor point black default enable page vis default dict frontend property previous env password line show specific window same size python package compare envs example use env repack icon login flag shift trace use generic plots many list new dialog window plots stem experience input table default line audio file scatter plot specific env readonly mode plots generic plots line plots visdom filepath standard text dashboard server get issue visdom use alt visdom flexible webgl contexts data inspect image pane clip minimum compare different vis image filepath note vis plotlyplot waveform use", "pypi_keywords_clean": ""}, "/gear": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python asynchronous library python asynchronous", "pypi_keywords_clean": ""}, "pythongssapi/k5test": {"git_readme_keywords": "python information kerberos deployment support particular documentation kerberos environment required kerberos particular plugin useful decorator library gssapi extension constructor several useful particular gssapi", "git_description_clean": "a library for setting up self contained kerberos environments based on code from mit krb", "git_keywords_clean": "", "pypi_description_keywords": "python information kerberos deployment support particular documentation kerberos environment required kerberos particular plugin useful decorator library gssapi extension constructor several useful particular gssapi", "pypi_keywords_clean": "gssapi"}, "marshmallow-code/flask-marshmallow": {"git_readme_keywords": "", "git_description_clean": "flask marshmallow for beautiful apis", "git_keywords_clean": "python flask marshmallow rest api python python sqlalchemy", "pypi_description_keywords": "build status changelog object serialization beautiful marshmallow project documentation marshmallow style additional integration block python serialization deserialization python framework output format version build marshmallow compatible python output marshmallow check package build travis deserialization library hateoas ready", "pypi_keywords_clean": "flask marshmallow"}, "/js-jqueryui": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "separate effect themeroller download default import jquery rollup jqueryui import twitter bootstrap distribution update update twitter jqueryui introduction spinner library minified version distribution original addition import jqueryui bootstrap bootstrap integration download builder framework datepicker update directory something normal minified experimental experimental twitter dictionary initial release different individual locale jqueryui jqueryui import black import bootstrap current request jqueryui distribution tooltip change", "pypi_keywords_clean": ""}, "caktus/django-treenav": {"git_readme_keywords": "implementation develop develop coverage coverage customization useful content management generic functionality multiple application treenav complete documentation development product minimizes database extensible hierarchical django treenav flexible hierarchy separate application independent context treenav sidebar pluggable navigation documentation checkout browser particular content", "git_description_clean": "extensible hierarchical and pluggable navigation system for django sites", "git_keywords_clean": "", "pypi_description_keywords": "implementation develop develop coverage coverage customization useful content management generic functionality multiple application treenav complete documentation development product minimizes database extensible hierarchical django treenav flexible hierarchy separate application independent context treenav sidebar pluggable navigation documentation checkout browser particular content", "pypi_keywords_clean": ""}, "markfinger/js-host": {"git_readme_keywords": "process logger documentation cli start host key value error following persistent javascript javascript console default js version help library able version output configurable javascript environment config error response endpoint description config property other default file mistake run host logfile process version variety new connection javascript host description config own process request body usage file access javascript response text condition pass state catch address source usage create error condition manager process post request output help host config object eg method endpoint host detached argument pattern path get status host stop manager run binding cli usage host start network own host disconnect usage config performance file transport example pass value high level response note number host connect json object massive performance host restart function low level open help text example config winston port number javascript execjs detached process data sent first argument second argument description get js host create file text post maximum size config js value object endpoint example place file manager function output manager stop configuration node debugger environment specific specific config config file interactive debugger accurate stack post function json json generated config property success response particular stack trace host status log output help output json port basic usage object generated caller alias description exit new request hence catch statement overhead usage documentation environment post config read similar api example note run place statement javascript environment pattern typical non object function name default logger request content condition deserving etc content type output config object detached run run manager execution post manager host process pass configuration console object simple map pass json installation basic host post package version text response config port condition response following http information definition object code connection identifier call post host extra uncaught", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation", "pypi_keywords_clean": ""}, "hepdata/hepdata-validator": {"git_readme_keywords": "package cloader hepdata validator documentation installation library license install hepdata validation install travis status install upgrade loading github example machine python schema testsuite hepdata submission object message lookup documentation status", "git_description_clean": "json schema and validation code for hepdata submissions", "git_keywords_clean": "", "pypi_description_keywords": "validator information", "pypi_keywords_clean": "hepdata validator"}, "scrapinghub/js2xml": {"git_readme_keywords": "parsing robust download corresponding python include lextab codecov universal support deprecate packaging slimit lextab yacctab bumpversion example changelog coverage regular python support suitable python deprecate introduce document python object python automatic unicode access javascript convert javascript function permission initial release integer snippet distribute updated", "git_description_clean": "convert javascript code to an xml document", "git_keywords_clean": "", "pypi_description_keywords": "interesting helper javascript function example", "pypi_keywords_clean": ""}, "python-ivi/python-usbtmc": {"git_readme_keywords": "usbtmc readme multiple member possible product libusb following content vendor optional python usbtmc resource kernel usbtmc python pyusb repository google serial number introduction python information pyusb installation lsusb script usbtmc driver installation extract access idproduct correct idvendor github repository", "git_description_clean": "provides usbtmc driver for controlling instruments over usb", "git_keywords_clean": "", "pypi_description_keywords": "package protocol instrument", "pypi_keywords_clean": "usb usbtmc measurement instrument"}, "phasemix/phasetumblr": {"git_readme_keywords": "python persist tumblr", "git_description_clean": "all the posts from tumblr blog in python list", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fedora-static-analysis/firehose": {"git_readme_keywords": "firehose format workstation describes warning warning filename useful textual multiple serialization analysis location collection documentation database output static analysis available modification version equivalent software pypy interchange format number reference lgplv format filename function schema simple python server common report firehose interprocedural different motivation common interchange quality feedback compiler compilation source python package analyzer cppcheck lossless refcount", "git_description_clean": "interchange format for results for static analysis tools", "git_keywords_clean": "python static analysis file format", "pypi_description_keywords": "firehose format workstation describes warning warning filename useful textual multiple serialization analysis location collection documentation database output static analysis available modification version equivalent software pypy interchange format number reference lgplv format filename function schema simple python server common report firehose interprocedural different motivation common interchange quality feedback compiler compilation source python package analyzer cppcheck lossless refcount", "pypi_keywords_clean": ""}, "/python-surveilclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python surveil parameter environment variable command shell command completion endpoint library complete documentation", "pypi_keywords_clean": ""}, "niwibe/django-dbconf": {"git_readme_keywords": "default flight prefix instance prefix generator configuration database persistence memory example application database modification public method efficient access singleton complex django dbconf namespace interface object example updated certain", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "openSUSE/spec-cleaner": {"git_readme_keywords": "license adsl license cua tmate tmate suse dmtf nposl non license vim license plexus group test font exception sgi free license caldera java exception freetype suse bsd clause postgresql license suse sgi tgppl suse isc isc warranty bsd condor condor leptonica leptonica lgpl exception gnu free upl universal lal licence dmtf suse suse freeware art libre public source notice apache map license report license exception libtool condor public exception ocaml retention ftl license nrl qt gpl license artistic source license exception suse eula suse libre latexe domain dedication license mpl license opl sybase open innernet suse ntp license berlin license diffmark diffmark qhull license libpng license fsful fsf ncsa university clause license suse permissive netbsd bsd odc open v simpl copyleft next xskat xskat notice saxpath license net ntp ntp dvipdfm dvipdfm license sleepycat exception fltk exception ps license nokia tosl trusster egenix egenix watcom public xdebug suse b haskellreport rdisc license bec permissive crossword crossword bsl boost suse bitstream license adobe attribution share vovida software adaptive public license php dsdp dsdp imatix imatix suse sip suse idpl enlightenment license gnuplot license lucent public suse docbook cdla permissive free art feh feh sa creative agreement imlib eiffel forum zend zend artistic license du qu libtool exception borceux borceux license unicode jython license fltk exception exception ip license oml license epl redistributable content plexus plexus standard function arphic suse educational community suse repoze nrl nrl open font gsoap public pl microsoft tmate open berlin technische lzma exception suse sun tool zlib zlib freertos exception c makeindex clean enviroment ecos exception license zend suse ieee license borceux same netcdf netcdf protocol public license info license miros microsoft reciprocal open cascade javamail exception liliq rplus qhull qhull nokia exception openib org version liliq specification notice clause attribution license ruby doc doc license barr disclaimer ibm exception clisp clause original replacement qwt exception antlr software license tcp imagemagick license localrun format attribs license tcl tcl cpal common net boolean php license sugarcrm public ogl uk addition suse open market jasper jasper wsuipa wsuipa free license version linux spl sun eurosym license gnu javamail attribution unported entessa public agreement adobe sendmail sendmail linux openib cnri jython license entessa pl open free public license bahyph libre lal license sendmail rl microsoft license xfree xenonsoft suse license eudatagrid cpl common license glulxe clause bsd license psfrag exception ecos ibpl suse license zimbra entessa entessa sugarcrm sugarcrm code attribution standard ml cecill free national cc creative dfx glide code public saxpath saxpath mpl mozilla obs nasa nasa license odbl sax pd perl artistic open group unicode license zip info boost software license cpl suse cpl notice suse apache license gpl java org license license clause exception mpl able license aal xinetd license suse xenonsoft license rdisc tag suse version lpl mgopen suse public attribution icu icu attribution bsl license odc oset pl license xerox license mtll order postgresql postgresql free documentation license fsfap license torque snia snia aml apple aladdin aladdin torque software jython cnri suse ldpl false attribs lppl latex npl netscape patent license noweb license scea scea norwegian licence commercial share postscript afm suse fltk suse cacertroot zlib acknowledgement icu license cleaner spec commercial generic bsd zero code license database license glide license osc service nosl netizen license tu suse bsd license hpnd nrl license license snia motion picture suse gitslave version osl gnuplot gnuplot zend license license lgpl crossword license plugin exception uk open license nasa runtime exception source vsl xskat license oldap open license smlnj bsd variant netbsd license license qhull license ijg plpa map non nuclear pd antlr fsl deutsche suse snia nd creative license agreement python gpl suse innernet oclc oclc sax public cpol code license libtiff ofl sil psfrag license bsd source xfree license bootloader exception format spec bison exception openjdk assembly next suse service localrun mup license newsletr newsletr digirule foss non commercial dfs unicode ms pl artistic artistic swl software netizen open testsuite interbase interbase jpeg group public license sil open fsfullr fsf barr license license freeimage license sax license ipa hack open license isc tu berlin tex suse license gnuplot mit mit bsd bsd clause freebsd ibm public latexe latexe documentation license license lal nokia open profit open attribution non common public mit feh snmp license cua office license erlpl rdisc rdisc note occt suse redistributable license mit xsl lint license cdla latexe license license afmparse openib linux zpl zope eu datagrid license nlod makeindex license copyleft exception creative oml open amdplpa amd json json libtiff libtiff office public ldpl suse suse mgopen pd sax historical permission license nposl license bittorrent gnu library xano suse code project general public wc software license rsa opl open suse mirror suse egenix sgi freeb eudatagrid eu matrix template document license aal attribution agreement cecill curl curl glide dfx netcdf license foss exception x license xnet net permissive community new jersey suse free curb suse sane exception licence libre latex project gnuplot suse leptonica license permissive version license interbase permission notice gpl compatible ncsa open rsa md license swl tag description license doc specific bsd zip license qu bec license netcdf suse glps universal permissive caldera caldera license newsletr international cc artistic perl pl oset python suse license bzip suse freetype trusster open libbzip license glulxe license zero clause unicode dfs academy license imagemagick imagemagick imagemagick vim license isc license adobe adobe test suite boot exception osl open ipa ipa xsl suse acpi software cnri python license occt research public idpl suse frameworx open software license afm license xerox license mit license license mup ruby ruby jersey license cmu license license wsuipa clause university miros license permissive modify aladdin free amd plpa license efl clause lbnl openssl license syscall note intel intel commercial international ibm pibs nuclear license open government technische universitaet attribution mit license sissl crystalstacker license agreement intel license lppl clause new psfrag psfrag bittorrent open attribution assurance license sgi software notice liliq licence license aml netscape public license wtfpl suse ubuntu license vostrom license tag license fair intel acpi market license license glps odc public license ntp mpich license library swl xfree xfree ocaml lgpl barr barr slib suse sendmail license cacertroot suse newsletr license freeimage public bsd protection rplus licence bitstream vera smppl secure unlimited license vsl vovida enna license description bsd license spl spec cleaner cl artistic license v linux syscall clear bsd php php bsd antlr mup mup qt lgpl classpath exception fltk suse affero general imlib license cpl suse freebsd license assurance license boolean public zero universal cascade technology dotseqn license license dsdp domain notice project public mit enna v sgi patent bsd license nbpl glps glps pibs ibm intel open template library exception digirule font suse exception boot next cpal assembly exception freetype project license watcom deutsche freie distribution license next copyleft independent jpeg license leptonica vera suse gcc exception art suse bzip bzip xpp xpp ciprocit forte suse firmware caldera license mirror suse hpnd historical universal cddl sleepycat license exception freertos ciprocit version rscpl ricoh mplus suse license spencer suse gnuplot vim vim license sugarcrm linguistic protection bsd license motosoto mpich mpich crystalstacker crystalstacker suse hack bsd mark beerware license license apsl license x domain suse reciprocal public giftware giftware firmware suse suse oasis mozilla public sip suse suse slib cube cube lpl lucent license ogl digital spdx oldfsfdoclicense suse suse scrot qwt suse license eupl open database suse xano permissive cdla license oldap european union ck vostrom vostrom apache apache permissive suse license dvipdfm license dotseqn commercial unported font license license mpich torque torque fsf unlimited libpng libpng ipa font list license attribution international enna enna xpp license license xnet tk license ibm powerpc autoconf exception open license license version agreement cnri limit public suse curb generic cc osi exception repoze suse license fsfullr non profit opl cua license amdplpa zimbra zimbra license curl odbl odc protection license unported cc code bsd open public glyph list clause artistic public domain wc wc suse oldfsfdoclicense agreement tcl license imatix borceux license license cube license xpp license ofl zlib license beerware beerware nc sa xerox xerox suse qwt gpl exception adobe postscript license cc exception classpath feh license nbpl net apple public fhs suse license lpl oasis specification ubuntu font acpi intel apple mit license beerware freie software variant license digia exception license afl nc creative oclc research exception autoconf license python ipl ibm license xskat bittorrent bittorrent license cpol suse matplotlib spencer license python license exception linux freebsd bsd afmparse afmparse license jasper net snmp suite license jasper license sissl sun clause netbsd license zlib forte version clear license nuclear warranty ecos public clause patent california specific license b suse mit glps suse acknowledgement zlib smlnj standard attribution generic license ipl suse cc eupl european occt exception patch suse language report sgi sgi clisp exception ms rl openssl openssl boot software license mitnfa clause clear software unicode floss exception fsfap fsf snmp net glyph adobe suse xsl artistic cl license oclc license intel open source exception bison haskellreport haskell license rpsl license postgresql license liliq freeimage freeimage licence ogl catosl computer cua opl license xinetd wsuipa license ricoh source mit advertising lbnl lawrence xinetd xinetd old license agreement permissive md rsa suse copyleft gsoap gsoap glulxe glulxe exception lzma powerpc initialization spec file motosoto motosoto union public json license liberation suse suse openpublication content suse python cnri curl license ruby license exception openjdk license noweb license perl apafml adobe license json sleepycat sleepycat imatix standard suse php suse python cmu cmu permissive license government licence function library suse fhs license retention license cddl exception mif egenix suse license pddl dedication license bahyph bahyph license frameworx microsoft public php suse watcom sybase license gpl license oset zimbra public nlod norwegian interbase public afl academic license ncsa license ms license ypl glps license libre du library license license fsful freeb suse nc nd makeindex makeindex python open free software license apafml license cnri motosoto license name exception license c license condor snia suse ijg independent frameworx frameworx rsa message ieee suse project license attribution license oset public license rscpl suse tgppl license eurosym fair fair exception mozilla license scea net license snia public noweb noweb unicode tou haskell language license nosl license osl license copyleft unlicense upl zope public project open library general attribution bsd license tmate template exception exception name academic free bec ciprocit gnu affero reciprocal license license rhecos suse gpl exception bootloader license catosl technology public use unlicense doc license suse liberation license crystalstacker suse ibpl eurosym eurosym library agreement datagrid software sun industry miros miros uc bsd cddl common apsl apple cube license imlib imlib adobe glyph dotseqn dotseqn pdf font license suse suse xfree suse mplus license smppl swl scheme openpublication suse exception qwt nuclear addition agreement clartistic gnu general advertising enlightenment software icu vostrom public giftware license ip gpl fair license compatible cnri license egenix saxpath license python python exception gcc clause uc group license mitnfa mit docbook xsl suse eula license glide source code libtiff license license zpl tox freeware suse lint suse license apache suse lgpl license crossword afmparse license dsdp license occt pl zlib libpng license wc mtll matrix nasa open illinois ncsa tou unicode gitslave suse source gpl exception font suse tex license bsd exception qt common development license spdx scrot suse open watcom licence art compatible license mif exception simple public openssl exception universitaet berlin dvipdfm license sun public matplotlib suse nokia nokia open software diffmark license license tosl mit cmu simpl simple license openssl spencer spencer antlr pd pddl odc community license exception gnu license npl info zip license fsl suse arphic efl eiffel ftl freetype bahyph license source agreement tcl tk suse public cecill cecill license ngpl suse xdebug forum license", "git_description_clean": "spec cleaner", "git_keywords_clean": "suse python", "pypi_description_keywords": "spec command various", "pypi_keywords_clean": "suse"}, "/pkginfo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package minimal metadata wheel accepted version suitable binary distribution syntax project directory metadata support relicense unfold prefix matter development checkout programmer detailed documentation installed namespace stdlib module abstraction different metadata stringio argument associated information current pypy support license collection distribution format distribution g available distribution command classifier output python breakage approved checkout g relative lundy documentation changelog building coverage environment ratnakumar python change invalid dependency bogus failure change automate metadata version distribution object directory support iteration module suppress resource metadata python pypy subdirectory distriubtion unicode unpacked invalid wheel b suppress whitespace function continuation attribute preserve console initial release wheel distribution pkginfo donald support develop handling introspection commandline module available python installed distribution regression homepage restore compatibility vendoring", "pypi_keywords_clean": "distribution sdist installed metadata"}, "/fanova": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "hyperparameter parameter optimization bayesian smac global variance analysis"}, "kmike/russian-tagsets": {"git_readme_keywords": "russian universal pymorphy pymorphy install russian positional tagset russian pymorphy positional feldman", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "opencorpora grammeme tagset function handle ruscorpora conversion conversion support opencorpora universal argument conversion install russian russian python pymorphy pymorphy cleanup feldman v opencorpora ruscorpora dialog opencorpora russian universal initial release dialog tagset v dialog positional tagset optional argument pymorphy positional grammeme", "pypi_keywords_clean": ""}, "/requests-mock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everything information adapter reporting tracking development compliance applicable software express specific language language governing transport context manager decorator github building example", "pypi_keywords_clean": ""}, "zwischenloesung/ardu-report-lib": {"git_readme_keywords": "schema json custom schema json array valid schemas json output arduino display infrastructure regular basis input json json schema complete json third reporter usage import valid schema schema definition reporter object default custom g actual schema furthermore unix linux json example continuing example json identifier folder output json scheme schema folder microcontroller schema extended status datastore creation processing input report json default input custom output valid sensor output json sensor such valid reader json example folder linux python input schema python library extended input serial central python processing object request https g arduino trivial sensor infrastructure json py stable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "schema json basic custom schema json array valid schemas json output arduino display infrastructure regular basis input json json schema complete json third reporter usage import valid schema schema definition reporter object default custom g actual schema furthermore unix linux json example continuing example json identifier folder output json scheme schema folder microcontroller schema extended datastore creation processing input report json default input custom output valid sensor output json sensor such valid reader json example folder linux python input schema python library extended input serial central python processing object request upload https g arduino trivial sensor infrastructure json py", "pypi_keywords_clean": "arduino sensor json"}, "silas/ops": {"git_readme_keywords": "administration library example something", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration library", "pypi_keywords_clean": ""}, "hustlzp/flask-boost": {"git_readme_keywords": "migrate javascript gunicorn production deploy archive pycrpyto article pycrypyto library jinja pycrpyto complied pycrypyto development permission installation supervisor fabric deployment license database project structure sentry version apache archive pycrpytolibrary database install python encoding commit directory frontend framework application generator sqlalchemy pycrpyto library bootstrap nginx permission different config controller pycrypto factory pattern installation development install package static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "migrate javascript gunicorn production deploy archive pycrpyto attention breaking article pycrypyto library jinja pycrpyto complied pycrypyto development permission installation supervisor fabric license js install command database deploy project structure version archive pycrpytolibrary database install python encoding commit directory frontend framework application generator sqlalchemy pycrpyto library bootstrap nginx github attention version development permission different config controller pycrypto factory pattern manage frontend install package", "pypi_keywords_clean": "flask sample generator"}, "ncoghlan/rpm": {"git_readme_keywords": "software documentation copying additional available package manager mailing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "placeholder package automation libdnf potential installable libsolv conflict available scikit compatible amenable", "pypi_keywords_clean": ""}, "ArchangelSDY/pypuzzle": {"git_readme_keywords": "addition library pypuzzle information libpuzzle consult libpuzzle libpuzzle pypuzzle pypuzzle compilation section algorithm ioerror install install pypuzzle similar example libjpeg formats support present pypuzzle related installation ubuntu consult original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python libpuzzle", "pypi_keywords_clean": ""}, "mapbox/rasterio": {"git_readme_keywords": "major python extension tracker mapbox support ubuntugis header ubuntu development question standard support single christoph gohlke system python microsoft visual rasterio support homebrew library dependency rasterio version actionable rasterio setup format geotiff necessary indicated organization mapbox unofficial binary rasterio travis compiler requirement linux github organization default rasterio dataset rasterio command overview rasterio dll possible linux license setup script included compatible example important success panchromatic different location setup py raster dataset commercial platform linux rasterio targeted version primary forum libcurl width rasterio group python environment configuration present website block python guidance linux rasterio python script numpy python rasterio anaconda config access centos geographic information source distribution rasterio rasterio minimal cython binary distribution patient d extended array georeferenced installation please console source numpy compiled include block console visual studio documentation computer output available linux system building python official binary directory something following installed installed location ability environment variable geospatial raster interface mapbox github customer support channel ubuntu system", "git_description_clean": "rasterio reads and writes geospatial raster datasets", "git_keywords_clean": "python gis raster gdal cli cython mapbox satellite oss", "pypi_description_keywords": "major python extension tracker mapbox support ubuntugis header ubuntu development question standard support single christoph gohlke system python microsoft visual rasterio support homebrew library dependency rasterio version actionable rasterio setup format geotiff necessary binary indicated organization mapbox rasterio travis compiler requirement linux github organization default rasterio dataset rasterio command overview rasterio dll possible linux license setup script included example important success panchromatic different location setup py raster dataset commercial platform linux rasterio targeted version primary forum libcurl width rasterio group python environment configuration present website block python guidance linux rasterio python script numpy python rasterio anaconda config access centos geographic information source distribution rasterio rasterio minimal cython binary distribution patient d extended array georeferenced installation please console source numpy compiled include block console visual studio documentation computer output available linux system building python directory something following installed installed location ability environment variable geospatial raster interface mapbox github customer support channel ubuntu system", "pypi_keywords_clean": "raster gdal"}, "/xmlunittest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unittest everything unittest testcase expected requirement expression various schema configuration block unittest package function assertion document something readable example optional library distribution documentation formatting", "pypi_keywords_clean": ""}, "marquee/noat": {"git_readme_keywords": "coffeescript python common annotation arbitary slight actual markup invalid droptype actual helper necessary python license unlicensed available optional python keyword public example reference keyword annotation attribute document overlap annotation convenience unlicense information different language closing opening object python coffeescript correct method", "git_description_clean": "non overlapping annotation tagging for applying html tags to text by arbitrary reference", "git_keywords_clean": "", "pypi_description_keywords": "arbitary actual markup invalid droptype actual helper instance license unlicensed optional constructor example public reference keyword annotation attribute document overlap annotation convenience unlicense information different closing opening correct", "pypi_keywords_clean": "html tags tagging annotations annotation text"}, "/zest-releaser": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "confusing word look few hg git simple mgedmin add unreleased section useful new distribution genome command suggestion fix random much encoding try commit fixes issue upload wheel functionality branch zest releaser uploaded writing history carriage return underline style universal character method diff package index setup cfg original encoding package briefly osx new pypi org mercurial university path lasttaglog small collection entrypoint default yes configuration such change directory difference example extra text wasn available htgoebel add create wheel added tag python pypy default answer necessary rename prerelease tag message work issue uppercase textual message py long uploading first iso m uploading anything software added brown bag entry point txt md svn bazaar added support entire trunk handy twine dependency python support tag handy added option bazaar bzr source dist utf character ascii fixed version full documentation current release underscore boring tag default canonical domain problem pypi password cfg ewjoachim sdist wheel support underline good measure fixed error releaser register second added nothing reason fix create password raw subversion added package wasn computer multiple version possible encoding history version control release wheel python version git bzr gforcada added version fixes lasttagdiff small mgedmin reinout installed tag formatter create additional pypy jamadden upload uploaded first current package tags twine installation effect uploading fixes tag checkout svn hg correct utf wheel issue changelog entry single config default command info message landscape order experience try temp folder addchangelogentry pass universal wheel ascii long mercurial hg development version accidental extra reinout fixed buildout fixed writing need such program originator btw readme tcezard catch default account dash control system health compatibility create section new option pypi fixes optional btw course own https reinout secure uploading added heapload different package document commit message shallow git practical experience source release pypi next support changelog instance available urls first svn mercurial extra changelog upgrade clear pypi python compatibility pypi plain batch error fixes py namespace svn command yes fixes present similar conscious decision extra carriage backport generic way namespace package release encoding mgedmin author zest package server option htgoebel travis unclosed uploaded ch fix writing current branch wheel new pypi basic implementation folder fixes april interpolation new development future output quoting style remote newlog upload source change sense chardet readme add tag pypy magenta library reinout fixed percentage register new config option git repository fix top global pypirc uploading mgedmin trunk version development new extra added key top level new filesystem travis continuous project buildout way recommended extra plaintext development marker pypi python string subversion fix long description command fixes pyroma doesn support installation zest false try pypi uploading uploading python character encoding several other added clarification version txt fixed exception option correct history mercurial support nothing fixes reinout register nicer way https need double word register web browser reinout fix notable mercurial completeness minus dev careful safety question private double wheel pyroma added create shallow uploadable right thing bumpversion call canada michael bubblenet added success attribute unformatted restructured current directory python project issue gforcada add support fixed typo travis ci init py added python temporary directory plugin first character local hg optional support encoding first readme package python packaging dist bubblenet server fullrelease give warning fix wheel fixes installed zest user fixes specific project pypi config added entry initial version tags option failure add extra mitchellrj try valid statuscode percentage sign major version new canonical git git enough suggested version exact behavior prerelease data changelog extension broken release process relative path added config add optional check fixed ioerror yes corner look something minor version markdown fixes command issue big current version zest software above release python client new version extra tag wrong first package intended api prereleaser support version point issue other python git svn small tool create tag current development pyroma chardet entry bumpversion updatehistory setting released version readme twine list git clone sub collective dist number issue support mitchellrj following zest catch error released tag current checkout log history header added command extra issue task internet quit location great majority git repo additional twine command chosen answer readme usual entry check fixed several fixed possible false zest option default deterministic setup py version minus git release few default drucci add postrelease data new python release zest history changelog html message reinout atx style hook other version pypi project encoding detector drucci added readthedocs urls control tag package long tag awello third system installed package format twine fixes postrelease python wheel collective sdist python python small error fixes fixed new prerelease source distribution python package leorochael subversion package regard ascii issue important urls black register yes anything first look complete text easy zest new package minimum version good idea buildout configuration center added checkout releaser overview restructured text reinout add standard source subversion svn chardet upcoming htgoebel reinout reinout release md markdown version number continuous integration sub directory uploading new entry favorite geeky directory look format create", "pypi_keywords_clean": "releasing packaging pypi"}, "rlisagor/pynetlinux": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "configuration library ethernet netmask default forwarding interface network configuration lisagor address richard ifconfig pynetlinux", "pypi_keywords_clean": ""}, "/translationstring": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility default support formatting symptom template library utility instance support documentation operator pluralization mapping information dependency chameleon various translation message contexts factory internationalization chameleontranslate untranslated initial specific translator factory contstructor", "pypi_keywords_clean": "in ln internationalization localization gettext chameleon"}, "nanomsg/nnpy": {"git_readme_keywords": "nnpy socket python world print install nnpy connect inproc install python import subscribe block shell setsockopt nnpy import nnpy nnpy cffi library block python socket nnpy related hello world usual inproc nanomsg", "git_description_clean": "cffi based python bindings for nanomsg", "git_keywords_clean": "", "pypi_description_keywords": "nnpy socket python world print install nnpy connect inproc install python import subscribe block shell setsockopt nnpy import nnpy nnpy cffi library block python socket nnpy related hello world usual inproc nanomsg", "pypi_keywords_clean": ""}, "/aiomultiprocessing": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/oslo-concurrency": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "process software documentation external version repository concurrency library concurrency", "pypi_keywords_clean": ""}, "/gyp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "vtraag/louvain": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "general algorithm community detection", "pypi_keywords_clean": ""}, "husio/sqlitebck": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "david-caro/autosemver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dask/s3fs": {"git_readme_keywords": "status sfs sfs documentation view documentation build status convenient python python filesystem sfs build filesystem interface documentation status", "git_description_clean": "s filesystem", "git_keywords_clean": "", "pypi_description_keywords": "status sfs sfs documentation view documentation build status convenient python python filesystem sfs build filesystem interface documentation status", "pypi_keywords_clean": "s boto"}, "wearespindle/freemail": {"git_readme_keywords": "default install other project service blacklist choice install email service directory various request database npm language disposable email other freemail service disposable handy access effort module member freemail database", "git_description_clean": "a database of free and disposable email domains and handy node js module for querying it", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "email"}, "/scikits-learn": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default tracker complete machine learning documentation development project documentation required install command installation cournapeau python important software channel directory install development release scikit development version google version download information compiler official", "pypi_keywords_clean": ""}, "sysr-q/flask-themes2": {"git_readme_keywords": "infrastructure matthew leafstorm support status interested documentation update available source certain github plausibility installation development version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "christopher infrastructure matthew leafstorm support interested documentation build status update available certain github installation development version", "pypi_keywords_clean": "flask themes theming style"}, "seppo0010/hirlite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "redis rlite"}, "/python-mango": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "operation default default select insert query record gettable select simple wrapper update update update record update operation insert insert mongodb uri select query lib mongo insert record pymongo installation delete delete python availabe function insert db insert update parameter mongodb object parameter module sample wrapper module connection parameter function update function initdb mongodb connection update delete function delete delete record mongodb filter filter object initdb gettable mongodb update pymongo function", "pypi_keywords_clean": ""}, "indico/flask-multipass": {"git_readme_keywords": "authentication identity identity system different documentation available multipass authenticate production", "git_description_clean": "multi backend authentication system for flask", "git_keywords_clean": "", "pypi_description_keywords": "authentication identity identity system different documentation available multipass authenticate production", "pypi_keywords_clean": ""}, "ga4gh/ga4gh-schemas": {"git_readme_keywords": "improvement compatibility reference variation associated infrastructure complete defining primary analysis schemas specification previous repository retirement reporting variant documentation website additional figure evaluation several sharing definition standardisation variant annotation reference implementation engineering committee technical genomic reference january everything ontology clinical essential decision streams metadata international coalition sequence document license consistent different variant readable document genomic information relevant manner integrated progress accepted metadata abstract document introducing", "git_description_clean": "models and apis for genomic data retired", "git_keywords_clean": "", "pypi_description_keywords": "schemas documentation protocol describe standard interchange available", "pypi_keywords_clean": "genomics reference"}, "CognutSecurity/h3mlcore": {"git_readme_keywords": "robust design system introduction learning system preprocessor simple differend copyright acknowledge current nowadays network architecture ecosystem machine learning adversarial learning neural network caffee unified responsible copyright xh project distribtued feature hadoop amazing machine architecture learning rabbitmq similar functional system distributed preprocessing capable memory internal neural training performance example application computer cluster knowledge training feeding tutorial particular apache kafka library machine distributed training hello learning framework scikit pipeline neccessary general purpose architecture hmlcore learning backend information softmax output different websocket dataset hmlcore project motivation cluster enough structured dataset advanced protocol learning distillation distributed training process parameter synchronization feature preprocessing tensorflow block iterator loading h machine concept", "git_description_clean": "actor based machine learning library for practitioners", "git_keywords_clean": "machine learning library", "pypi_description_keywords": "robust design system introduction learning system preprocessor simple differend copyright acknowledge current nowadays network architecture ecosystem machine learning adversarial learning neural network caffee unified responsible copyright xh project distribtued feature hadoop amazing machine architecture learning rabbitmq similar functional system distributed preprocessing capable memory internal neural training performance example application computer cluster knowledge training feeding tutorial particular apache kafka library machine distributed training hello learning framework scikit pipeline neccessary general purpose architecture hmlcore learning backend information softmax output different websocket dataset hmlcore project motivation cluster enough structured dataset advanced protocol learning distillation distributed training process parameter synchronization feature preprocessing tensorflow block iterator loading h machine concept", "pypi_keywords_clean": "machine learning data mining"}, "mozilla/socorrolib": {"git_readme_keywords": "socorrolib reporter deployment process standard mozilla monorepo revision cceeebadafedcc multiple relationship historic mozilla development", "git_description_clean": "deprecated core libraries of socorro subsystems", "git_keywords_clean": "", "pypi_description_keywords": "socorrolib deployment process standard mozilla monorepo revision cceeebadafedcc multiple relationship historic mozilla development", "pypi_keywords_clean": ""}, "dbrgn/rplcd": {"git_readme_keywords": "alphanumeric wheel today library rplcd simple rplcd build status documentation stable character support wishlist parallel library ks license python package directory liquidcrystal pigpio standard arduino liquidcrystal support backlight control hitachi connection support future interactive available photo python raspberry outside version readme python compatible python please express expander directory charlcd liquidcrystal custom pigpio library control repository liquidcrystal library charlcd library raspbian current master target script controller information charlcd external motivation micropython action setup adafruit python package smbus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wheel library rplcd simple rplcd build status documentation stable character support wishlist parallel library license python package directory liquidcrystal pigpio arduino liquidcrystal support backlight control hitachi connection support future interactive available python raspberry version python compatible python please express setup expander directory charlcd liquidcrystal custom pigpio library control repository liquidcrystal library ignored charlcd library raspbian current master information charlcd controller external motivation micropython adafruit python package smbus", "pypi_keywords_clean": "raspberry raspberry pi lcd liquid crystal hitachi hd"}, "iPlantCollaborativeOpenSource/caslib-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Mindwerks/pyplatec": {"git_readme_keywords": "appveyor library metropolia university worldengine project applied history several viitanen reference downloadable wrapper kudos original project control engineering thesis attention compile project pyplatec simulation fantastic c library bachelor pyplatec", "git_description_clean": "plate simulation for python wrapper of an existing library", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/kudu-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package kudu client interface kudu installation", "pypi_keywords_clean": ""}, "/glueviz": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "meta package default future plugin glueviz meta stable", "pypi_keywords_clean": ""}, "/transmissionrpc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administrator bitbucket introduction transmissionrpc license svensson protocol install transmissionrpc bittorent transmissionrpc program simplejson requirement transmission developer transmission transmissionrpc install transmission developer transmissionrpc copyright compatible transmission documentation", "pypi_keywords_clean": "transmission bittorent torrent"}, "youversion/crony": {"git_readme_keywords": "semver simple length current account inside config endpoint conduct cronitor unique benefit project configuration command available package manager integration philip sentry monitoring alphanumeric string readme template cronitor python python support process belyeu initial system bbelyeu license repository environment variable monitor unique identifier allowed exception receive", "git_description_clean": "cron monitoring for use with cronitor io sentry io", "git_keywords_clean": "crons cronitor sentry", "pypi_description_keywords": "semver simple length current account inside config endpoint conduct cronitor unique benefit project configuration command available package manager integration philip sentry monitoring alphanumeric string readme template cronitor python python support process belyeu initial system bbelyeu license repository environment variable monitor unique identifier allowed exception receive", "pypi_keywords_clean": "cron monitoring sentry io cronitor io"}, "defrex/django-encrypted-fields": {"git_readme_keywords": "database warning algorithm please random collection simple available keyfile upgrading keyczar keyczar crypto library right normal keyczar django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "PyCQA/astroid": {"git_readme_keywords": "inference builtin partial purchasing software development living compatible representation documentation editable installation tideliftlogo professional additional available professional support representation tarball jump installation building subscription information tidelift astroid tidelift subscription common created directory subdirectory different quality library powering tideliftlogo module tidelift shorthand", "git_description_clean": "a common base representation of python source code for pylint and other projects", "git_keywords_clean": "ast parser inference engine", "pypi_description_keywords": "compatible representation astroid different support tarball documentation editable installation library powering quality inference additional available partial created directory representation subdirectory subscription information installation building living", "pypi_keywords_clean": ""}, "wiseman/webrtcvad": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "audio accepts telephony result useful voiced modern segment project separate speech recognition install available compatible object import webrtcvad aggressive python interface install webrtcvad silence aggressiveness detailed example webrtc webrtcvad module duration integer import webrtcvad activity detector google", "pypi_keywords_clean": "speechrecognition asr voiceactivitydetection vad webrtc"}, "xyb/robotframework-debuglibrary": {"git_readme_keywords": "shiftwidth shiftround imported software distribution directory framework support keyword default license environment variable robotframework debuglibrary enhancement interactive tabstop shiftwidth completion expandtab tabstop library installation introduction robotframework", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "shiftwidth shiftround imported software distribution directory framework support keyword default license environment variable robotframework debuglibrary enhancement interactive tabstop shiftwidth completion expandtab tabstop library installation introduction robotframework", "pypi_keywords_clean": "robotframework"}, "laco/hexconnector": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dynamic architecture hexconnector", "pypi_keywords_clean": ""}, "alberthdev/dummymp": {"git_readme_keywords": "configure maximum introduction dummymp availability backported multiprocessing default dummymp multiprocessing library expensive extract variable useful parallel configure process thorough support necessary individual function myfunc install command handler comprehensive additional available accessible familiar version uncertainty installation parallized process execution handler python important possible ability tracker license tutorial continue arbitrary configured dummymp multiprocessing python multiprocessing completion support python manager release archive function following python sophisticated example documentation documentation central x aggressive dummymp queued aggression dummymp release version dummymp callback automatic callback support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "markdown tracker documentation expensive dummymp familiar library", "pypi_keywords_clean": "multiprocessing process manager task manager taskmgr psutil parallel parallelization dummy queue"}, "scieloorg/scieloh5m5": {"git_readme_keywords": "status fornecer peridicos biblioteca", "git_description_clean": "biblioteca para fornecer indicadores hm do google scholar dos peridicos scielo", "git_keywords_clean": "dataset", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "marvinpinto/charlesbot": {"git_readme_keywords": "charlesbot python software advantage coverage documentation available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "charlesbot python software license license advantage license charlesbot coverage documentation available", "pypi_keywords_clean": "slack robot chatops automation"}, "fabioz/pydevd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pydev pydevd pydev debugger"}, "feifangit/dj-sso-client": {"git_readme_keywords": "engine please optional ssouser application switch select ssouser storage setting project modify underneath module account example application multi process switch account problem ssouser python extra class folder default optional fresh provider default ssouserdbstorage django application database class member block python demand operator installation storage backend storage engine provider application process production environment default attention server dedicate format click status system previous sample heroku password performance optional storage solution process production provider default information different remote dj client access python optional method problem", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "engine please optional ssouser application switch select ssouser storage setting project modify underneath module account example application multi process switch account problem ssouser python extra class folder default optional fresh provider default ssouserdbstorage django application database class member block python demand operator installation storage backend storage engine provider application process production environment default attention server dedicate format click status system previous sample heroku password performance optional storage solution process production provider default information different remote dj client access python optional method problem", "pypi_keywords_clean": ""}, "/twitter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "retry tweet way string useful class userstream twitter following example timeout period much format oauth authenticator status coverage return maximum number connection http error parameter favorite shell program python retrying usage twitter flow method nonzero header authentication bottom default msg python twitter argument complete offsite twitter developer example recent timeline follow oauth dance unfollow security twitter follow twitter stream sitestream twitter tweet information function json xml integer request oauth app bunch style status minimalist twitter response oauth token awesome restful license build iterator stream twitter bearer token instance simple command doesn application package import format pass twitter request twitter archiver various output access oauth visit module certain blocking build status result utility license python stuff python license go safety limit requested format status updater everyone favorite twitter command accessible oauth public timeline facebook style xml format twitter everyone authenticator coverage status following twitter account offsite backup information object proper interface direct channel", "pypi_keywords_clean": "twitter irc command line tools web"}, "/django-database-storage-backend": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fadapa/fadapa": {"git_readme_keywords": "install fadapa build coverage fadapa python welcome install fadapa fastqc github source block python installation python build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install fadapa python fadapa python author welcome status install fadapa fastqc pandikunta status github source version installation coverage", "pypi_keywords_clean": "bioinformatics fastqc parsing"}, "nvbn/pytest-docker-pexpect": {"git_readme_keywords": "container docker initialization docker installation careful possible fixture current plugin additional docker docker pexpect docker specific output parametrized system simple functional environment decoded directory available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ownaginatious/flask-basic-roles": {"git_readme_keywords": "service management simple account anything response reverse multiple library possible predefined number registration support username database website audience authentication security demonstration following format functionality transport something password function configured object different simple example quickstart authorization https access authentication", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "flask"}, "/mock": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "status circleci python license python compatible tracker library available system download documentation license support backport documentation license python standard library standard library homepage download library documentation", "pypi_keywords_clean": ""}, "/buffer-alpaca": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/hypertemp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bundled basic provide basic hpack encoder release history plaintext downloading library header class bugfixes fix addition question support command ipv support header improved bugfixes prevent negotiation prevent hyper bundled certificate straight http stream prevent connection liveness http abstraction indicator issue unnecessary pyopenssl release drafts package hpack various http error release support support http bugfixes stream https regardless buffered socket workaround connection header cautious module pyopenssl request please length packaging error friend schemed version release bugfixes fixed cosmetic suitable release anyone hpack specification compatibility object license http standard http bugfixes pluggable window http allow python allow drop structure machine logic improved handling specification compatibility duplicate software keyword argument likely control window situation connection http special docs document hyper http unicode repository sslcontext allow remote standard http framing issue caveat emptor fixed bug simple caveat uploads support http support added method outstanding stream hyperframe reply plaintext http terminal added window increment fix pyopenssl added original package wheel universal urllib huffman support fix happy thread safety response object present added support similar issue bugfixes closed bugfixes hyper feature universal befitting python support flow control rough unable fixed packaging http client socket object context compression efficiency terrible temporary release default window small dictionary release bugfixes initial release individual behaviour structural straight suitable pyopenssl feedback contribution smarter python package replacement improved ipv issue initial chunk major accessed availability connection windowupdate pull request semantic information socket implementation implementation build status httplib issue character result feature enhancement increment provide status indicator valid bandwidth python module platform availability documentation http flow http pseudo http specification available issue issue benfield python pyopenssl issue abstract version pypy server window manager connection management chunk equal push httpie attention different improved emptor please basic functionality https client alpha", "pypi_keywords_clean": ""}, "codelucas/newspaper3k": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full summary extraction chinese german newspaper project general mailto block pycon simple build status zlibg newspaper interested pycon documentation install libxml detailed german arabic ubuntu ubuntu install distribution download framework install python license identification article download install debian ubuntu jpg pycon newspaper detect libpng automatic extraction package manager python development extraction newspaper future version following install homebrew mailto lucasyangpersonal keyword extraction everything fixable license please sponsored python install author extraction coverage status extraction entire detect language google curation development version install newspaperk version development libxslt repository algorithm language simplicity install command python library parameter newspaperk article online install libjpeg speed newspaper source problem related buggy glance certain python package install package", "pypi_keywords_clean": ""}, "SavinaRoja/openaccess-epub": {"git_readme_keywords": "project academic journal valuable version additional configuration documentation program command interface presentation formatting openaccess savinaroja openaccess academic various accessibility version compatible development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project academic journal valuable version additional configuration documentation program command interface presentation formatting openaccess savinaroja openaccess academic various accessibility version compatible development", "pypi_keywords_clean": ""}, "scalableminds/wkw": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fengsp/sender": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "code sender sender install code", "pypi_keywords_clean": ""}, "RecastAI/recastai": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation paulrenvoise copyright library recastai implied renvois install documentation command package manager merchantability fitness subject conversation renvoise software reference express substantial overview connection following installed liability permission contract distribute sublicense warranty restriction publish distribute particular purpose official twitter", "pypi_keywords_clean": "recastai bot nlp"}, "oanda/v20": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generation trading documentation programmatic access installation", "pypi_keywords_clean": ""}, "tikitu/jsmin": {"git_readme_keywords": "package parameter useful compatibility javascript attempt chronological branch development github identity possible project separate course cpython myfile version contributing author current compatible github python limited status update branch import original author release development version current maintainer contact commandline different welcome maintenance travis request contributor build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package parameter useful compatibility chronological commit newline literal handling javascript changelog tikitu attempt multiline comment branch development copyright github identity matching comment possible myfile js project harmony support js nb separate license course cpython version contributing robustness tikitu author current maintainability tikitu compatible github mercurial readme python limited statement premature status slashes tikitu update branch infinite import original author release literal comment literal matching various development version current maintainer compressor tikitu comment handling contact refactor comment commandline different unofficial harmony welcome maintainer changelog maintenance bitbucket repository travis request preserve contributor build", "pypi_keywords_clean": ""}, "serge-sans-paille/gast": {"git_readme_keywords": "compatibility abstract syntax generic original convention argument various python identifier available several equivalent python regular python abstract context standard module common representation attribute notable exception notable version compatibility following python transformation object travis", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatibility generic standard module various abstract", "pypi_keywords_clean": ""}, "/xssd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "string username abcdef inbuilt nickname foobar maxinclusive double abcdef password combine maximum number array reference fractional number bug password confirm stucture further arbitary sanity default syntax double percentage mininclusive inclusive mirror structure string integer d datetime schema foobar emailaddress number validator definition status import validator minimum number custom familyname message account condensed regular expresion minimum length python simple mininclusive mininclusive maxinclusive exlusive level simpletype pattern validate maxinclusive sturcture website example definition xssd import block python maximum length match enumeration please report match expresion reference validate dictionary datetime datetime eq module d d datetime d mirror structure synopse attempt result invalidation second username password possible number complex validation complex definition available boolean optional exception confirm firstname subset instant message machine readable information different xpath method percentage development please", "pypi_keywords_clean": ""}, "/sphinxcontrib-programoutput": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "extension development command output correct version sphinx restore message deprecation stewart support formatting program output added configured prompt stefan supported project support sphinx extension configuration documentation command sphinxcontrib programoutput output available install sphinxcontrib development process coverage handler python process sphinx python support sphinx version likely session arbitrary document directory stephen mcdowell programoutput sphinx install correct glogowski support unicode formatting pylint comprehensive information python output latricewilgus unexpected initial release python python output program default configured executed installation install travis output python program command miili directive build", "pypi_keywords_clean": "sphinx cli command output program example"}, "/solartime": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package software dependency kennedy sffjunkie license version license compliance applicable express python example driggs myotisoft specific language kennedy astral various language governing sunrise license copyright solartime python", "pypi_keywords_clean": ""}, "/asheeshs-django-optimizer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django optimizer package implement vulnerable malicious periodic malicious dependency question purpose functionality database rewrite security tutorial password history tutorial pretend package asheesh purpose optimization private information nothing asheesh django", "pypi_keywords_clean": ""}, "StreetVoice/django-elastic-transcoder": {"git_readme_keywords": "package build status complete notification subscribe endpoint subscription transcoder build install activation transcoder hookup topic onprogress transcode onerror transcode python migrate python application transcode onerror example transcode oncomplete build status coverage transcode oncomplete sh elastic transcoder workflow coverage status various http encode mp webconsole notification django elastic transcode progress section progress instance encode receive transcode onprogress", "git_description_clean": "django aws elastic transcoder", "git_keywords_clean": "", "pypi_description_keywords": "package build status notification subscribe workflow jpg endpoint subscription complete model transcoder build activation transcoder hookup onprogress transcode onerror transcode python migrate python please application example transcode transcode onerror oncomplete build status coverage transcode oncomplete elastic transcoder model workflow coverage status various http encode webconsole ready notification django elastic jpg install transcode progress section progress instance encode receive transcode onprogress", "pypi_keywords_clean": "django aws elastic transcoder"}, "/wincertstore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "suitable changelog wincertstore default example registry wincertstore wincertstore universal perspective valid wincertstore release context enhanced christian python human readable support default enhanced christian default certsystemstore frozenset license copyright commin python statement limited security certificate context enhanced enhanced keyusage certfile initial release contributor agreement access interface method module purpose", "pypi_keywords_clean": "windows cert ssl ca crl"}, "sunscrapers/django-templated-mail": {"git_readme_keywords": "documentation documentation separate django template available patience installation directory contributing wrapper environment repository development django", "git_description_clean": "send emails using django template system", "git_keywords_clean": "django email email template", "pypi_description_keywords": "documentation documentation separate django template available patience installation directory contributing wrapper environment repository development django", "pypi_keywords_clean": ""}, "lmacken/quantumrandom": {"git_readme_keywords": "package compliance default variable length randomness quantum python module project helper successful incorrect amount command character device qrandom quantumrandom function quantumrandom userspace exception variety python server following linux character function version quantumrandom gccxml quantumrandom python system entropy module number generator bunch available entropy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance random number default variable length randomness python module project helper successful incorrect amount command character device linux random qrandom quantumrandom function quantumrandom userspace exception variety python server following linux character device quantumrandom function version quantumrandom gccxml extra package quantumrandom python system entropy module number generator qrandom character bunch quantum random available entropy", "pypi_keywords_clean": "quantum random"}, "/algopy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "algopy documentation evaluation available reverse algorithmic differentiation polynomial compatible possible", "pypi_keywords_clean": "algorithmic differentiation"}, "fate0/pychrome": {"git_readme_keywords": "headless docker pychrome python management protocol syntax document directory github interface python package variable version installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "headless docker pychrome python management protocol syntax document directory github interface python package variable version installation example", "pypi_keywords_clean": "pychrome"}, "wakatime/wakatime": {"git_readme_keywords": "package configuring sublime console javascript console console textmate current python appcode androidstudio toggle developer editor plugin useful class location visual studio single configuration install terminal inline available androidstudio webstorm developer javascript version python version github editor coverage installation developer console emacs python machine console debug status notepad browser console common eclipse directory phpstorm appcode sublime environment wakatime command eclipse window pycharm rubymine information example config config precedence troubleshooting plugin interface project detection request intellij method rubymine phpstorm output window developer toggle uncaught error", "git_description_clean": "command line interface used by all wakatime text editor plugins", "git_keywords_clean": "time tracker analytics metrics quantified self", "pypi_description_keywords": "package configuring sublime console javascript console console textmate current python appcode androidstudio toggle developer editor plugin useful class location visual studio single configuration install terminal inline available androidstudio webstorm developer javascript version python version github editor coverage installation developer console emacs python machine console debug status notepad browser console common eclipse directory phpstorm appcode sublime environment wakatime command eclipse window pycharm rubymine information example config config precedence troubleshooting plugin interface project detection request intellij method rubymine phpstorm output window developer toggle uncaught error", "pypi_keywords_clean": ""}, "yourlabs/django-rules-light": {"git_readme_keywords": "package python project developper python python security approach documentation alternative database external command runtime registry install install difference listviews eventual external", "git_description_clean": "a fresh approach to security in django conceptually simple rule registry dictionnary to manage callbacks in addition allows logging of malicious uses provide middleware class decorator rule autodiscovery templatetags debug views and other features to make it enjoyable status production stable", "git_keywords_clean": "", "pypi_description_keywords": "package python project developper python python security approach documentation alternative database external command runtime registry install install difference listviews eventual external", "pypi_keywords_clean": "django security rules acl rbac"}, "carlosp420/dataset-creator": {"git_readme_keywords": "package build status seqrecordexpanded development columns travis aminoacid creator dataset documentation quick genbankfasta nexus further documentation block python status target target version voucher phylip phylogenetic software wheel target degenerated coverage status raxml dataset creator following target wheel python further px release target", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "align center requirement fixed cp codon fixed build status following extra seqrecordexpanded partial string development columns travis py support aminoacid creator dataset version image documentation zwick quick genbankfasta nexus further documentation first block python software such pypi package status target target version genbank fasta sphinx voucher exception description table stub extra info phylip partitioned dataset travis image seqrecord lineage fixed fasta phylip genbankfasta format phylogenetic software nexus interpreter beast raxml wheel target pypi wheel necessary degenerated coverage status px align record setup py dataset creator sequence white following target wheel first release empty fasta python further datatype protein outgroup string fixed version format fixed upgraded seqrecord voucher cp valueerror field fixed stub columns codon image fasta genbankfasta fixed bug sequence invalid method outgroup release target taxon first position wheel image reading", "pypi_keywords_clean": ""}, "marians/daterangestr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "whole year g whole month certain simple create meaningful py daterangestr simple format string daterangestr create march unlimited tuple example function", "pypi_keywords_clean": ""}, "/smc-bibencodings": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thomas berger family variable length berger excellent prefix letter viktoriaallee encoding support implement variable standard germany identity mapping several german combining diaeresis length encoding similar background christian codecs historique example umlaut python bibliographic information special identity writte copyright copyright diaeresis contrary historic kommunikationsmanagement diaeresis combining source decomposed unicode special", "pypi_keywords_clean": "encoding codec bibliographic opac mab iso marc ansel"}, "Azure/azure-mgmt-rdbms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "string formatting client library release history operation group string added operation mariadb polling version format breaking change return bundle package algorithm master server rdbms management general breaking pricing public preview postregresql added underlying http invalid library azure changelog release project default behavior performance important mixin class keyword argument generation completion azure sdk parameter replication issue external unrecognized azure resource mysql initial lropoller service management python compatibility postgresql response argument syntax resource manager parameter replica added support http session azure rdbms nspkg callback mariadb bugfix postgresql general namespace package polling parameter initial release python python feedback client class section package return format wheel complete behavior rdbms breaking result glance class azureenum docs microsoft georestore option sdist positional format syntax operation return available change optional generator python server parameter master replica capacity mariadb public management client initial microsoft azure running operation ability mysql object context manager azure service", "pypi_keywords_clean": ""}, "vinta/django-email-confirm-la": {"git_readme_keywords": "default field project email python django block bash customized la django html body invalid confirmation expired confirmation model required email confirmation confirm la block python subject email message framework success email confirm app django email apps template django installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement description django limitation platform unknown license classifier internet classifier copyright software development confirm confirmation implied environment classifier documentation unknown classifier development status merchantability fitness subject audience software limited express substantial software description framework django system classifier license connection liability following contract permission distribute sublicense classifier environment language classifier development warranty restriction modify publish distribute confirm particular purpose django classifier independent classifier classifier framework", "pypi_keywords_clean": ""}, "KrzysiekJ/gchart": {"git_readme_keywords": "something wrapper flexible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "something wrapper flexible", "pypi_keywords_clean": ""}, "/pywhois": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "feincms/feincms-oembed": {"git_readme_keywords": "g transparent default blocked access simple suitable oembed provider embedded videos article feincms module folder create content standard feincms oembed additional create python content embedded object month following work access request object g oembedcontent feedparser", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "g transparent default blocked access simple suitable oembed provider embedded videos article feincms module folder create content standard feincms oembed additional create python content embedded object month following work access request object g oembedcontent feedparser", "pypi_keywords_clean": ""}, "/theslasher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/tesseract": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "traditional complete description scientific simulated tesselation comparison particle presence gasoline vorovol diagram advantageous performance tesseract concentration running spherical symmetry information technique parametric substructure", "pypi_keywords_clean": ""}, "ISA-tools/isatools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "korfuri/django-prometheus": {"git_readme_keywords": "default instrumentation backend setting postgresql creation deletion second django monitoring export django possible project migration database prometheus export current process django prometheus unapplied application exporter number global install prometheus property prometheus client exported development version repository dependency quickstart installed example prometheus prometheus wrapper welcome mysql installation install django migration promdash django installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django prometheus library monitoring", "pypi_keywords_clean": "django monitoring prometheus"}, "rainwoodman/runtests": {"git_readme_keywords": "installed version incremental decorator decorator example mpitestfixture useful customized example parameter testing project argument install support traditional pytest tolerant running install pytest pytest profiling installation feature parameter variation different package variety application regular directory software package follow traditional conftest overwritten x running example x global behavior running specific therefore commandline contribute testing communicator nonmpi reasonable refactoring decorator example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "realitix/vulkbare": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "vulk engine", "pypi_keywords_clean": ""}, "davisp/python-spidermonkey": {"git_readme_keywords": "bundled default xulrunner optional extension library python previous package debian install portable runtime debian ubuntu system spidermonkey package manager python development version ubuntu gentoo project support execute arbitrary config command python something gentoo python arbitrary javascript following config arbitrary python python spidermonkey x spidermonkey library module installation access lighthouseapp", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "twitter/twitter-common-options": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "zachwill/relaxml": {"git_readme_keywords": "shouldn current unmaintained repo relaxml installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "rehandalal/therapist": {"git_readme_keywords": "commit documentation therapist runner available aware", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "commit hook", "pypi_keywords_clean": ""}, "ellisonleao/flask-mistune": {"git_readme_keywords": "mistune documentation interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jpulgarin/django-tokenapi": {"git_readme_keywords": "package default simple project directory subsequent django python response useful regular installation include invalid username successful single decorator mobile support configuration username django application python installation header combine password parameter compatible public virtualenv example django tokenapi framework number authentication something authentication scheme virtual environment following encode django website following response authorization header access specific authentication logic request client inactive access authentication py prepend", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default simple project directory subsequent django python response useful regular installation include invalid username successful single decorator mobile support configuration username django application python installation header combine password parameter compatible public virtualenv example django tokenapi framework number authentication something authentication scheme virtual environment following encode django website following response authorization header access specific authentication logic request client inactive access authentication py prepend", "pypi_keywords_clean": ""}, "oohlaf/whirlpool": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "deprecated deprecated appveyor length output whirlpool changelog variable length library declaration prototype project freenode barreto library compatible deprecated interface install available version installation conradi reference implementation deprecated initial pointer length message whirlpool reference encoding license unlicense vincent wrapper whirlpool editable hashlib interface unicode function notable algorithm algorithms international standard encoding development function declaration interface section", "pypi_keywords_clean": "digest hashlib whirlpool"}, "/django-docutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "view restructuredtext support template filter build status package target alt documentation docutilsview class variable docs build class homeview engine isn coverage image block sh rst pypi django template pypi image scale target sh template template engine block python status target coverage target license image docutilsview template status coverage block django alt python status image license django docs image alt build target coverage image alt full documentation license docs alt license coverage license status scale engine class rst homeview docutilsview python package target build html rst django documentation target license pypi docs documentation status", "pypi_keywords_clean": "django docutils documentation utilities rest restructuredtext rst"}, "/rcssmin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "syntactical compression semantic compression minifier rcssmin implementation distribution license boxmodelhack reimplementation schlueter copyright factor feature stripped optional maximum compression semicolon beginning whitespace unicode various following outside ruleset multiple consecutive stripped runtime exclamation redundant special", "pypi_keywords_clean": "css minimization"}, "thefab/tornadis": {"git_readme_keywords": "tornadis standard minimal support example support management pipeline quality documentation available friendly production connection autoconnection autoreconnection performance cluster support", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "brentp/cigar": {"git_readme_keywords": "number analysis installation further analysis downstream record library useful feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "number analysis installation further analysis downstream record library useful feature", "pypi_keywords_clean": ""}, "aitjcize/pyrabin": {"git_readme_keywords": "default feature commit python module pyrabin python fingerprint generation length fingerprint checkout window chunk fingerprint polynomial average example average block status return report fingerprint filename default filename extension implementation fingerprint update issure tracker polynomial configurable bytes suffix tupple github issure register callback request feature branch block update method", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/logging": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module standard mechanism", "pypi_keywords_clean": ""}, "miki725/djangorestframework-bulk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "serializer available generic thomas generic default complete cavoj matthias result second fooserializer bulkserializermixin explanatory router logic queryset primary applicable special confirmation development delete request instance multiple generic similar update specific consider request martin cavoj separate project hook installation example django resource exception accidental framework unable likely delete consider update single resource tolner custom viewset django django following delete attention maintainer update functionality license source certain bug xavier mjumbe pretty bulkserializermixin modelserializer request dangerous history source impossible action purpose extreme caution", "pypi_keywords_clean": "django"}, "/futurist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software eventlet executor documentation futurist executor synchronous synchronous executor asynchronous repository transparency", "pypi_keywords_clean": ""}, "kevinbeaty/flask-debug-api": {"git_readme_keywords": "python everything browser debugtoolbar installation install debug sqlalchemy pip delete", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python everything browser code debugtoolbar installation install debug sqlalchemy delete", "pypi_keywords_clean": ""}, "sempr/taobaopy": {"git_readme_keywords": "python python api api post post python issue api python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dfm/feedfinder2": {"git_readme_keywords": "python library untimely attempt feedfinder candidate function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python library untimely attempt feedfinder candidate function", "pypi_keywords_clean": ""}, "pydanny/django-profiletools": {"git_readme_keywords": "incredible anything object lifetime result greenfeld context processor instance authenticated record functional userprofile evaluation loading installation example django python version author something profile unexpected django version middleware profile object py unauthenticated", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "return object incredible anything object lifetime result context processor instance authenticated record functional userprofile evaluation loading installation example django python something return profile unexpected middleware profile object py unauthenticated", "pypi_keywords_clean": "django profiles"}, "AllenInstitute/allensdk": {"git_readme_keywords": "information tfliss processing rgerkin graddis nilegraddis shreejoy tripathy mabuice tripathy stripathy michael contribution corinneteeter shreejoy franzen florianfranzen richard repository neuromusic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "neuroscience bioinformatics scientific"}, "makinacorpus/django-geojson": {"git_readme_keywords": "information serializer geojson leaflet documentation database makinacom makinacom version makinacom compatible makinacom license", "git_description_clean": "django geojson is collection of helpers to de serialize geo django objects into geojson", "git_keywords_clean": "django gis geojson", "pypi_description_keywords": "serializer deprecation florent lebreton vector improved template default django leaflet glenrobertson geojsonfeature python compatibility geojson conversion lindstam ogunyemi support geojson makinacom license simplify expose natural leaflet minimal various geojson libgeos command frontera internal default ability minimal version available optional compatible feature example detection usable application dependency python support import attempt unnecessary property geometry foreignkey reversed spatial database db changelog change version makinacom license changelog jeffkistler manytomany django support initial module version complete rewrite ability valuesqueryset support django geojson geojson specification deserialization generic geojson lambda ability django natural information django incompatible django compatibility makinacom makinacom modelname korotkiy documentation status", "pypi_keywords_clean": ""}, "/yaql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python querying project license version language standard library complex license apache current context arbitrary comprehensive standard quickstart apache license version extensible project status embeddable", "pypi_keywords_clean": ""}, "daniellawrence/graphitesend": {"git_readme_keywords": "custom timestamp different prefix service prefix default system hostname different system different graphite iostat simple metric submitting graphite server anything directory connect server connect graphite sending project argument support collaborator system lowercase install async connect timeout carbonclient kwargs squash linux system github example python module instance metric prefix default prefix timeout default branch porcelain overview option graphite sending graphitesend dryrun local linux script prefix hardset suffix handy above disconnect interface graphiteclient blog source command metric prefix other group", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fishkao/rake": {"git_readme_keywords": "keyword extraction algorithm individual license implementation automatic keyword source", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "keyword extraction algorithm individual license implementation automatic keyword source", "pypi_keywords_clean": "rapid automatic keywords extraction"}, "bast/ascii2graph": {"git_readme_keywords": "following reason please asciigraph import exception sorry graphs installation python result asciigraph example result master license anything history module block python license asciigraph install asciigraph representation undirected graphs dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "following reason please asciigraph import exception sorry graphs installation python result asciigraph example result master license anything history module block python license asciigraph install asciigraph representation undirected graphs dictionary", "pypi_keywords_clean": ""}, "/chainmap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python compatibility useful standard library g django template author similar available several package monthly version python version installation example recent python flexible option system someone coverage version corresponding release nested contexts typical python source packaging support specific python python python python standard", "pypi_keywords_clean": "chainmap nested context layer overlay stack"}, "/byteplay": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python code byteplay doesn offset equality add operation useful target opcode question argument boolean position other new object interested push block new raw inconsistent code python compiler code string meaningful attribute few store deref real bytecode byte code method nice representation segmentation fault requirement maximum stack co actual constant variable name loop operation load closure static method table break equivalent technical likely real life numerical argument variable number inner function example boolean external true code class opcode number code object none let define example ok place label instance read clarification great way someone quick regular additional information wiki same value local extra information byteplay pure frame stack closure opcode inherent difference action problem first cell pop block important information comparison instance mapping actual number actual loop opcode such execution different depending convenience welcome correct stupid function vice versa opcode name type code op opcode eby peak string representation printcodelist function set setup loop phillip eby python bytecode special flow exec code raw python dot com maximum number second tuple byteplay useful singleton arg isn code list specific line python interpreter address quick example data code instruction code maximum byteplay public make closure tuple match course own bytecode line push cell source file original object inspected crazy real opcode document description scope new next opcode list subclass bytecode byteplay clear see living python fine module documentation same behaviour loop regardless meaning reference block operation basic idea define simple first element distinguish nice local variable absolute jump new code consistent state cell object specific location complication enclosing item binary add possible first byteplay relative stack see util assembler size calculation cell index complexity graph stack opcode list mapping opcode argument tool michael opcode class michael hudson code attribute false relative jump bit familiar new block keyword aware non consistent load const taste nothing numerical constant didn line number code regular infrastructure sort get store local outer function possible code read write second item comparison operator cause nice property corresponding block suitable tool life isn raw bytecode solution flow graph raw code end section isn lot extended arg hasflow gmail dot pop push instruction pointer function second administrative info same flow stack size codelist scratch stack usage feature flow behaviour stack depth same way representation module match top valueerror enough compare op depth calculation section other code information useful docstring code exception arg opcode name list new local bit argument none positional easy please drop several int define new hope look byteplay module pure python normal flow opcode specific simple function equivalent raw break loop outer scope introspection new value global namespace block code instance value example let special opcode final behaviour simple thing original source object different stack behaviour extra keyword stack first subclass free last depending list true boolean general solution opcode arg const operation push tuple new cell load deref matter new type simple define argument constant function get cause jump free variable additional representation local namespace variable storage way easy python byte nicer representation outer different code target line noamraph byteplay add operation pair module global line main part convenient stack doesn form constant number label case class constructor stack state byteplay byteplay first line stack effect sequence email extra positional write simple example source code last python stack str method enclosed function many useful please const opcode reverse order setlineno opcode label class exception peak util opcode instance build tuple get variable last argument such code single number tuple opcode total number constant such reachable line byteplay representation", "pypi_keywords_clean": ""}, "benoitc/socketpool": {"git_readme_keywords": "benoitc benoitc socketpool socketpool default unlicense socketpool chesneau benoitc public domain gevent eventlet gevent example interface available connector example license socketpool benoitc engura multiple library python socket factory", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "benoitc benoitc socketpool socketpool default unlicense socketpool chesneau benoitc public domain gevent eventlet gevent example interface available connector example license socketpool benoitc engura multiple library python socket factory", "pypi_keywords_clean": ""}, "/ccxt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jsdelivr javascript console private huobipro correct operation business useful altcoin exchange responsible okcoinusd container project support gnptvncnqfthcgfihunjjrkecze bitfinex install documentation website available rmvrfhkwzvqrrheyxoqrndvjva version public cryptocurrency exchange global exchange trading document commerce cryptocurrency trading repository recommended function contact lbtmkaqqbphcyxlxedgydfeaxetbp xacbfacfd bitcoin browser merchant library javascript trading library", "pypi_keywords_clean": "algorithmic algotrading altcoin altcoins api arbitrage backtest backtesting bitcoin bot btc cny coin coins crypto cryptocurrency crypto currency crypto market currency currencies darkcoin dash digital currency doge dogecoin commerce etc eth ether ethereum exchange exchanges eur framework invest investing investor library light litecoin ltc market market data markets merchandise merchant minimal ohlcv order orderbook order book price price data pricefeed private public ripple strategy ticker tickers toolkit trade trader trading usd volume xbt xrp zec zerocoin broker btcxe acx acx io allcoin allcoin com anx anxpro bibox bibox com binance binance com bitc co il bitc bitbay bitbays bitcoincoid bitcoin co id bitfinex bitflyer bitflyer jp bithumb bithumb com bitlish bitmarket bitmex bitso bitstamp bittrex blp bleutrade bleutrade com blinktrade braziliex braziliex com btcbox btcbox co jp btcc btcchina btc btce btcexchange btcexchange ph btc markets btcmarkets btcmarkets net btctrader btctrader com btc trade com ua btc trade ua btcturk btcturk com btcx btc bter bter com bx in th ccex cex cex cex io chbtc chilebit chilebit net coincheck coinexchange coinexchange io coingi coingi com coinmarketcap coinmate coinsecure coinspot coinspot com au crypto capital cryptocapital co cryptopia cryptopia co nz dsx dsx uk exmo flowbtc flowbtc com foxbit foxbit exchange fyb se fyb sg gatecoin gdax gemini hitbtc huobi huobipro huobi pro independent reserve independentreserve com itbit jubi com kraken kucoin kuna lakebtc lakebtc com livecoin liqui liqui io luno mercado mercadobitcoin mercadobitcoin br mixcoins mixcoins com nova novaexchange novaexchange com okcoin okcoin com okcoin cn okex okex com paymium poloniex quadrigacx qryptos quoinex southxchange surbitcoin surbitcoin com tidex tidex com therocktrading urdubit urdubit com vaultoro vbtc vbtc exchange vbtc vn virwox wex wex nz xbtce xbtce com yobit yobit net yunbi zaif zb btcxe com allcoin anxpro com anybits com anybits bcex top bcex bibox big one bigone bitbank cc bitbank bitbay net bitfinex com bitflyer bitforex com bitforex bithumb bitibu com bitibu bitkk com bitkk bitlish com bitlish bitmarket pl bitmarket net bitmex com bitsane com bitsane bitso com bitstamp net bittrex com bit com bit blp eu bitonic nl braziliex btc alpha com btc alpha btcchina com btctrade im btctrade im buda com buda bx in th cex com cex io trade chbtc com cobinhood com cobinhood coinbase com coinbase prime coinbase com coinbase prime pro coinbase com coinbase pro coincheck com coinegg com coinegg coinex com coinex coinfalcon com coinfalcon coinfloor co uk coinfloor coingi coinmarketcap com coinmate io coinnest co kr coinnest coinone co kr coinone cointiger pro cointiger coolcoin com coolcoin coss io coss crex com crex cryptonbtc com crypton deribit com deribit ethfinex com ethfinex exmo me exx com exx fcoin com fcoin trader flowbtc com fybse se fybsg com gatecoin com gate io gate io gdax com gemini com getbtc org getbtc hadax com hadax hitbtc com huobi pro huobi com ru huobi russia icex com icex co za icex indodax com indodax itbit com kkex com kkex kraken com kucoin com kucoin kuna io lbank info lbank liquid com liquid livecoin net luno com lykke com lykke mercadobitcoin com br mercado bitcoin mixcoins negociecoins com br negociecoins novaexchange okcoin cn okcoin cny okcoin com okcoin usd paymium com poloniex com quadrigacx com rightbtc com rightbtc southxchange com southxchange stronghold co stronghold theocean trade the ocean therocktrading com tidebit com tidebit uex com uex upbit com upbit vaultoro com virwox com yunbi com zaif jp zb com fcoinjp com fcoinjp binance je binance jersey bequant io bequant mandalaex com mandala dx exchange dx exchange"}, "mahmoud/hematite": {"git_readme_keywords": "python server compatible reentrant client response compatible hematite accuracy implementation progress hematite", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mattvonrocketstein/goulash": {"git_readme_keywords": "likewise bleeding reference autogenerated install primary documentation viscous", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "goulash"}, "michiya/django-pyodbc-azure": {"git_readme_keywords": "standard django pyodbc django dictionary current default backend setting behavior integrated security backend standard install pyodbc freetds emulation project instance password dictionary license configuration django application database additional revision wasilewski compatible example directory structure directory database default connection pyodbc library django pyodbc following directory current available microsoft collation environment variable external installation install specific pythonpath chinese language", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django server external database connection backend database following project number x engine setting behavior db backend library install pyodbc project project level configuration standard django application database install django migration boolean appropriate version django install compatible pyodbc configuration feature version example server pyodbc version number pyodbc connection external db django pyodbc microsoft installation install", "pypi_keywords_clean": "azure django"}, "/numpy-indexed": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hoogendoorn license classifier development status distributable description platform audience science scientific engineering system research classifier science research development status classifier license system microsoft engineering classifier python classifier distributable classifier group language python", "pypi_keywords_clean": ""}, "valohai/django-cavalry": {"git_readme_keywords": "django cavalry mechanism current flipside complete elasticsearch posting switch probability segment similar available elasticsearch ingestible production python process wholesale payload positive performance toggleable formatting general console parameter runtime middleware request template cavalry performance posting", "git_description_clean": "a performance tracer", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ungarj/mapchete": {"git_readme_keywords": "geoprocessing geodata processing download process everything install mapchete ecosystem iterative process customized relief numpy development circle multiple preprocessing python module documentation mapchete generalize install friendly language geodata g available remote machine numpy wmts output repeat block python pyramid rasterio process output resampling global sentinel cloudless desired result wmts system mapchete input batch process parallel python shell license dependent process tedious mapchete process configuration documentation documentation script browser cloudless installation block shell source install additional block process geodata terrain cloudless documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "geoprocessing geodata processing download process everything install mapchete ecosystem iterative process customized relief numpy development circle multiple preprocessing python module documentation mapchete generalize install friendly language geodata g available remote machine numpy wmts output repeat block python pyramid rasterio process output resampling global sentinel cloudless desired result wmts system mapchete input batch process parallel python shell license dependent process tedious mapchete process configuration documentation documentation script browser cloudless installation block shell source install additional block process geodata terrain cloudless documentation status", "pypi_keywords_clean": ""}, "phfaist/pylatexenc": {"git_readme_keywords": "standard output output documentation logical structure escape symbols couple command format such available structure standard input pylatexenc python particular series unicode documentation full function python library script full documentation accented plain unicode", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard output output documentation logical structure escape symbols couple command format such available structure standard input pylatexenc python particular series unicode documentation full function python library script full documentation accented plain unicode", "pypi_keywords_clean": "latex text unicode encode parse expression"}, "datalib/libextract": {"git_readme_keywords": "agnostic infancy project definition processing tabular default installation extraction algorithm appreciated assumption reasoning overview document repetitive extraction library interfaceable libextract", "git_description_clean": "extract data from websites using basic statistical magic", "git_keywords_clean": "", "pypi_description_keywords": "agnostic infancy project definition processing tabular default installation extraction algorithm appreciated assumption reasoning overview document repetitive extraction library interfaceable libextract", "pypi_keywords_clean": "extract extraction main article text html data extraction data content extraction content unsupervised classification machine learning ai artificial intelligence ml"}, "s-block/django-nested-inline": {"git_readme_keywords": "package python changelist licence support github installation install django error django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python changelist licence support github installation install django error django", "pypi_keywords_clean": ""}, "ProgVal/markovgen": {"git_readme_keywords": "decorator chardet initial supybot command install markovgen charade otherwise optional markovgen markov repository installation library markovgen", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decorator chardet initial supybot command install markovgen charade otherwise optional markovgen markov repository installation library markovgen", "pypi_keywords_clean": ""}, "/keystoneauth": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "keystoneauth authentication library", "pypi_keywords_clean": ""}, "/bob-learn-linear": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package machine installation complete learning toolbox signal processing install software package machine learning installation mailing development", "pypi_keywords_clean": ""}, "/colors": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "console mode", "pypi_keywords_clean": "colors terminal word char color"}, "/urllib5": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "urllib pypi standard library nice urllib", "pypi_keywords_clean": ""}, "JonathanRaiman/pytreebank": {"git_readme_keywords": "returned sentence visualization sentiment treebank stanford sentiment different corpus javascript importing sentiment analysis chuang javascript ipython notebook directory chuang sentence download control", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "returned sentence visualization sentiment treebank stanford sentiment different corpus javascript importing sentiment analysis chuang javascript ipython notebook directory chuang sentence download control", "pypi_keywords_clean": "machine learning nlp"}, "python-social-auth/social-auth-app-django": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "md document unsupported license django project documentation project project documentation registration mechanism django component ecosystem functionality project django backward compatibility available semantic several description authentication registration django", "pypi_keywords_clean": "django"}, "asciimoo/drawille": {"git_readme_keywords": "further reading haskell unicode braille unicode pixelation tracker terminal similar clojure drawille braille unicode installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "terminal braille drawing canvas console"}, "django-oscar/django-oscar": {"git_readme_keywords": "further reading commerce framework sandbox excellent freenode community development project bb twitter twitter interested coverage building django specific business functionality oscarcommerce commerce continuous integration integration status official mailto channel documentation status", "git_description_clean": "domain driven commerce for django", "git_keywords_clean": "django ecommerce django oscar oscar", "pypi_description_keywords": "further reading project specific business commerce framework functionality sandbox channel excellent freenode community commerce oscarcommerce twitter twitter mailto official interested building development django", "pypi_keywords_clean": "e commerce django domain driven"}, "mgd020/django-admin-select2": {"git_readme_keywords": "select required filtered template installation django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "django"}, "OnroerendErfgoed/pyramid-urireferencer": {"git_readme_keywords": "library information documentatation urireferencer", "git_description_clean": "pyramid plugin to handle references to external uri s", "git_keywords_clean": "", "pypi_description_keywords": "decorator toevoegen message documentatation implementation pyramid urireferencer rechtstreeks applicationresponse response library support backend application documentation exception resource logging urlencoded initial function information parameter decorator function abstractreferencer renderer request", "pypi_keywords_clean": "web wsgi pyramid uri rest references"}, "Azure/azure-mgmt-advisor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package string formatting management lropoller underlying complete service management project changelog behavior response release history string glance library subscription argument syntax resource manager changelog release resourcerecommendationbase advisor positional default behavior package compatibility nspkg callback polling performance general version optional generator python release initial keyword argument generation session package version namespace package completion azureenum uninstall bundle package polling parameter initial running operation algorithm initial release python python history bugfix microsoft parameter general breaking external feedback context manager unrecognized section compatibility important", "pypi_keywords_clean": ""}, "jamesbvaughan/sendsms": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sendsms configfile command personal installation", "pypi_keywords_clean": "sms text command line message twilio phone"}, "cour4g3/python-pppd": {"git_readme_keywords": "setuid useful anyone libary license check positional install command import pppconnection installation production raddr address equivalent python simple library keyword connect configured something similar environment daemon connection laddr address repository binary kernel protection remote alternate shell remote client python pppconnection module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "setuid useful anyone libary license check positional install command import pppconnection installation production raddr address equivalent python simple library keyword connect configured something similar environment daemon connection laddr address repository binary kernel protection remote alternate shell remote client python pppconnection module", "pypi_keywords_clean": ""}, "/django-dajaxice": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "presentation unobtrusive standard framework standard compliant", "pypi_keywords_clean": ""}, "/appscript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bdastur/pyansible": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction ansible utilization management orchestration deployment automation pyansible runner inventory ansible inventory excellent useful multiple distribution ansible runner instance playbooks automation ansible familiar execution threshold installation example introduction installation ansible documentation pyansible pyansible configuration management pyansible popularity architecture vms automation simplicity pyansible library interface access ansible discovery", "pypi_keywords_clean": "ansible"}, "WoLpH/django-statsd": {"git_readme_keywords": "introduction documentation install setting advanced middleware graphite homepage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction documentation install setting advanced middleware graphite homepage", "pypi_keywords_clean": ""}, "cltk/cltk": {"git_readme_keywords": "language processing thankful complete copyright analysis friendly project akkadian research documentation support language toolkit interactive identifier complete installation linguistic installation identity repository homepage software substantial johnson bibliographic overview welcome citation scientific research organization jupyter medieval something particular classical language digital repository freebsd scholarship following pycharm germanic compliant codebase platform natural language quickstart contribution discussion gratitude", "git_description_clean": "the classical language toolkit", "git_keywords_clean": "nlp ai python nltk latin greek", "pypi_description_keywords": "language processing language toolkit", "pypi_keywords_clean": "nlp nltk greek latin chinese sanskrit pali tibetan arabic germanic"}, "jtauber/greek-utils": {"git_readme_keywords": "trigrams reference datastructure morphgnt betacode documentation iterable readable generator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "facebook/facebook-business": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full account id popular language graph explorer installed version simple repository check way useful limiting pypi python guide python token install typo campain product aduser addition other individual class business sdk param issue reporting single facebookadsapi subclass process manager delete feasible key separate facebookadsapi app important someone various app behalf curl request facebook business terminal window parameter temporary secure update delete adaccount relevant shell bug reporting download release method following workflow source permission refer error install package parity group default token guide request please license facebook account g campaign argument own access field class business manager own facebooksession compatible additional folder example third party sdk issue default installed repository issue security keyword argument tutorial session please check sdk python personal account parent docs support keyword reporting channel graph subclass multiple access documentation g secret proof homebrew update console business package secure access basic knowledge request app dashboard opaque string multiple facebook object documentation upkeep interpreter coverage token repeat batch response network performance dictionary mapping iterator process simple presence id shop optimal section above class field release tarball instance method such token only delete design manager instagram github prohibitive ask efficient please reference multiple python reason facebook system installed context upgraded version permission ready dictionary update advanced specific facebookadsapi object mapping parameter python package module printed warning tox access token folder debug channel license proper python python introduction python please implementation result marketing second network access default facebookadsapi example campaign deprecated function valid return value possible app secret documentation towards quick method facebookadsapi available expired token crud first such exception server installed python python application directory reader advanced modification information http request different convenient way object sdk codegen interface developer bug python location following command py abstract facebook login", "pypi_keywords_clean": ""}, "/ssh-import-id": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fellow identity username service prefix recent version dustin kirkland location instance project support command output online identity verify github public example handler machine python server format certificate script executable directory import verified matching hostname import multiple launchpad marshall different script trusted online access collaboration problem authorized", "pypi_keywords_clean": "ssh public key"}, "openego/oedialect": {"git_readme_keywords": "alchemy oedialect oeplatform openenergyplatform oedialect repository installation license copyright", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "alchemy oedialect oeplatform openenergyplatform oedialect repository installation license copyright", "pypi_keywords_clean": "postgres open energy database sql rest"}, "divio/divio-docs-theme": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "theme divio", "pypi_keywords_clean": ""}, "IntelPython/mkl-random": {"git_readme_keywords": "anaconda reference different keyword generator generation functionality community interface backward compatible available prebuilt particular environment replacement library distribution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "alex/alchimia": {"git_readme_keywords": "ability alternate documentation alchimia useful sqlalchemy impossible implement twisted", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ability alternate documentation alchimia useful sqlalchemy impossible implement twisted", "pypi_keywords_clean": ""}, "/models": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unstable dependency valuable lightweight framework database external library document renaming concrete library installation schemata", "pypi_keywords_clean": "query database api model models orm key value document oriented non relational"}, "/the": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "build status python assert assertion way example code python plugin install code code python assert basic assert code python code shell alias look assert python install usage system truthy assert assert falsy object assert truthy", "pypi_keywords_clean": ""}, "databricks/spark-sklearn": {"git_readme_keywords": "distribute individual default developer version pandas integration individual learning pyspark interpreter convert parallel multiple experimental distribute project estimator validation documentation classifier available memory installation github example popular dependency subdirectory integration package following dataset environment variable pandas python interpreter incompatible replacement compliant python", "git_description_clean": "scikit learn integration package for apache spark", "git_keywords_clean": "apache spark scikit learn grid search parameter tuning machine learning", "pypi_description_keywords": "distribute individual default developer version pandas integration individual learning pyspark interpreter convert parallel multiple experimental distribute project estimator validation documentation classifier available memory installation github example popular dependency subdirectory integration package following dataset environment variable pandas python interpreter incompatible replacement compliant python", "pypi_keywords_clean": "spark scikit learn distributed computing machine learning"}, "vladsaveliev/ngs-utils": {"git_readme_keywords": "dependency reference astrazeneca development lightweight umccrise", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "bioinformatics"}, "racker/scrivener": {"git_readme_keywords": "api server framework server scrivener block python python server server api server plugin plugin license scrivener twisted", "git_description_clean": "twisted scribe client server framework", "git_keywords_clean": "", "pypi_description_keywords": "api server framework server scrivener block python python server server api server plugin plugin license scrivener twisted", "pypi_keywords_clean": ""}, "pescadores/pescador": {"git_readme_keywords": "randomized category pescador learning library distribution processing background pescador pescador learning parallel working example substantial generation particular category following hierarchical problem pescador uniform installation pescador numerical channel", "git_description_clean": "stochastic multi stream sampling for iterative learning", "git_keywords_clean": "python machine learning nyucds", "pypi_description_keywords": "incremental multiplex", "pypi_keywords_clean": "machine learning"}, "dpursehouse/pygerrit2": {"git_readme_keywords": "full pygerrit client client library trusty ubuntu review xenial support prefix endpoint possible ubuntu xenial ubuntu trusty example copyright copyright david password refer mobile username documentation gerrit version python version installation example script license copyright python license please version support authentication http upload http password corresponding gerrit http necessary password authentication object pygerrit pygerrit following original pygerrit http full license simple interface parameter ericsson mobile simple example http username auth please refer gerrit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full license license please simple interface pygerrit ericsson mobile review license copyright copyright library copyright david gerrit", "pypi_keywords_clean": "gerrit rest http api client"}, "bitprophet/releases": {"git_readme_keywords": "bugfix releases releases releases traditional compatible extension support default documentation command sphinx timeline control friendly background development version readable friendly changelog multiple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bugfix releases releases releases traditional compatible extension support default documentation command sphinx timeline control friendly background development version readable friendly changelog multiple", "pypi_keywords_clean": ""}, "rpi-ws281x/rpi-ws281x": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "damage transfer device beware default control independent length kernel driver clock shifter pattern comparison single strand legacy library string neopixel module skrgb library header possible bugfix electricity original upstream legacy actual interface channel filesystem corruption v device driver theoretical pimoroni please added support voltage course practice symbol output frequency signal quality future software control signal controllable example important number ledstring independent functionality userspace raspberry module practical spidev driver reponsibility digital control physical analog following general appropriate output information reboot skrgbw config kernel raspbian spidev program access operating system constraining brightness adafruit method source preliminary support hardware controller channel group", "pypi_keywords_clean": ""}, "sk1p/django-codemirror2": {"git_readme_keywords": "argument codemirror submodule parameter browser collect javascript included template django codemirror codemirror template support python vulnerability possible django support django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "argument codemirror submodule parameter browser collect javascript included template django codemirror codemirror template support python vulnerability possible django support django", "pypi_keywords_clean": ""}, "/python-wifi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "getmode import wireless getessid romanofski detailed possible documentation available iwconfig py wireless network example python license pythonwifi failure success install installation lgplv functionality directory example program interace pythonwifi various convenience robinson py installation information discussion access advice association featurematrix goldstein", "pypi_keywords_clean": "wifi wireless wlan iwconfig iwtools"}, "django/asgiref": {"git_readme_keywords": "asgiref package synchronous subthread default python asynchronous valid particular asynctosync class synchronous function threadlocal replacement standard project writing stateless threadpool documentation safety gpg github issue several shepherd please contact synchronous threadpool local context example please server security system wrapped actual connection thread local wsgi connection security process control repository coroutine function local object server threadlocal adapter security djangoproject stateless server synctoasync external central wsgi application synchronous thread synchronous django maintenance contact security asyncio direct extra asynchronous successor process information chatting", "git_description_clean": "asgi in memory channel layer", "git_keywords_clean": "", "pypi_description_keywords": "asgiref package synchronous subthread python asynchronous valid particular asynctosync class synchronous function threadlocal replacement standard project writing stateless threadpool safety package maintenance gpg github issue several shepherd please contact synchronous threadpool local context example please server security system wrapped actual connection thread local wsgi connection security process control repository coroutine function local object server threadlocal adapter security djangoproject stateless server synctoasync external central wsgi application synchronous thread synchronous django contact security asyncio direct extra asynchronous successor process information chatting", "pypi_keywords_clean": ""}, "redcanari/canari": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generation maltego transform development build status development framework community canari framework project documentation maltego transform framework kudos prototype package example canari docker docker container kudos kudos release following crowd funding information bug python canari framework build development build status welcome special", "pypi_keywords_clean": ""}, "bbriggs/legobot": {"git_readme_keywords": "introduction message legobot formatting install multiple library extensible possible painless thereby support interval skeleton framework chatbot install endless command documentation alternative installation interactive functional monitoring container legobot virtualenv example telegram websocket machine flexible security virtual functionality directory pleasure legobot imagination installation alternative formatting function weather planned microsoft platform protocol installation installation specific request appropriate introduction legobot contribution discord messenger picture", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "open-homeautomation/miflora": {"git_readme_keywords": "device solution integration backend coverage functionality energy library separate package integration integration backend library project conductivity brightness md temperature moisture support gatttool gateway computer machine example energy dongle example python machine status gatttool wrapper support miflora wrapper binaray available release download bluetooth btlewrap library following different platform additional python xiaomi miflora library assistant moisture conductivity", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "device solution integration backend coverage functionality energy library separate package integration integration backend library project conductivity brightness md temperature moisture support gatttool gateway computer machine example energy dongle example python machine status gatttool wrapper support miflora wrapper binaray available release download bluetooth btlewrap library following different platform additional python xiaomi miflora library assistant moisture conductivity", "pypi_keywords_clean": "plant sensor bluetooth low energy ble"}, "chrisspen/burlap": {"git_readme_keywords": "package arbitrary operation skeleton project example django capture complexity burlap possible deployer deployment expense burlap skeleton documentation quickstart command activate dryrun burlap configuration difference additional debugging variable activate example support parameter python software everything framework substantial satchel toolkit installation staging configuration management directory following superfluous generated dryrun simplicity ansible django project environment variable outstanding specific overview burlap activate additional certain manifest burlap special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package arbitrary operation arbitary skeleton project example django capture complexity burlap possible deployer deployment expense burlap skeleton documentation quickstart command activate dryrun burlap configuration difference scenese therefore additional debugging variable activate example support parameter software everything framework substantial satchel toolkit installation staging configuration management directory following generated dryrun simplicity ansible django project environment variable outstanding superflous specific overview burlap activate additional manifest burlap special", "pypi_keywords_clean": ""}, "klahnakoski/pylibrary": {"git_readme_keywords": "normal cpython explict python directory registry second facade cpython installation install numpy awesome installer multiple convention project crufty python github install install python python updated install cpython development download procedural language functional python installation download python install activate environment activate version environment deactivation jsonizable wonderful python installation virtualenv pylibrary library consequence machine pointer multiple python identical activate environment little crufty binary subdirectory virtual environment python python different involved motivation varsion environment install program copying specific pylibrary python updated november strategy discovery linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "normal cpython explict python directory registry second facade cpython installation install numpy awesome installer multiple convention project crufty python github install install python python updated install cpython development download procedural language functional python installation download python install activate environment activate version environment deactivation jsonizable wonderful python installation virtualenv pylibrary library consequence machine pointer multiple python identical activate environment little crufty binary subdirectory virtual environment python python different involved motivation varsion environment install program copying specific pylibrary python updated november strategy discovery linux", "pypi_keywords_clean": ""}, "myyasuda/sphinx-erdiagram": {"git_readme_keywords": "install sphinx sphinx build er diagram build html graphviz output extention graphviz erdiagram graphviz svg defaultpng build code html graphviz graphviz sphinx sphinx erdiagram sphinx er erdiagram conf code block python graphviz block python graphviz graphviz defaultpng graphviz diagram extention", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package description extension", "pypi_keywords_clean": ""}, "/modulemd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modulemd library corresponding library present documentation practical metadata repository available metadata service repository modularization manipulation thereof", "pypi_keywords_clean": "modularization modularity module metadata"}, "Outernet-Project/disentangler": {"git_readme_keywords": "root dependency builder disentangler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "root dependency builder disentangler", "pypi_keywords_clean": ""}, "eric-wieser/numpy-ringbuffer": {"git_readme_keywords": "ringbuffer protocol unoptimized arbitrary circular", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "arbitrary element protocol unoptimized codecov ringbuffer example circular", "pypi_keywords_clean": "numpy"}, "noirbizarre/bumpr": {"git_readme_keywords": "releaser customization hooks version bumper block console distribution extensible development message customization license hooks configuration configuration command exemple configuration multiline version installation coverage customizable python status intend optionnal console documentation following publish hooks compatibility overridable parameter release artifact documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support seprator releaser support switch workspace customization hooks pattern vaidation changelog anything readthedocs extraction support version bumper extensible message customization development seprator omission version extraction markdown license hooks configuration support configuration support optionnal prefix support command output readthedoc exemple configuration multiline optional handling group installation coverage expose customizable boolean handling status intend documentation initial optionnal annotation support commit message console documentation following publish hooks compatibility overridable properly display console config parameter commandline initial release handling validate validate configuration release artifact optionnal prefix source distribution declaration support default declaration discovery verbose documentation status", "pypi_keywords_clean": "version bump release tag"}, "eyolfson/django-ssh": {"git_readme_keywords": "basic django gplv license django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic django gplv license django", "pypi_keywords_clean": ""}, "SpectoLabs/python-myna": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tkaemming/django-subdomains": {"git_readme_keywords": "python framework subdomain status documentation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python framework subdomain status documentation", "pypi_keywords_clean": ""}, "/gcovr": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full coverage py badge gitter contribute license begin complete documentation abstract example pypi badge build status abstract gcovr quickstart begin py package sandia national badge codecov gcov utility codecov status gcov coverage utility gcovr generate development bugtracker travis default compact human readable cobertura format status pypi begin abstract project install september command generate detailed available gnu gcov codecov badge summarized tabular report coverage gitter badge readable xml badge pypi pypi codecov documentation bugtracker stable release badge begin installation gcovr begin license software gcovr report alternative python coverage similar utility status gitter separate build install development sandia corporation summary option development version generate gcc machine readable repository website documentation contract different compact human bugtracker github console installation quickstart status appveyor installation begin badge appveyor build directory gcovr development travis begin installation s government py cobertura source python package clause certain development please quickstart gcc begin quickstart", "pypi_keywords_clean": "utility"}, "shichao-an/115wangpan": {"git_readme_keywords": "fedora install package ubuntu version wangpan authentication persistent wangpan installation unofficial block documentation github management bittorrent persistent session", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fedora install package ubuntu version wangpan authentication persistent wangpan installation unofficial block documentation github management bittorrent persistent session", "pypi_keywords_clean": "wangpan pan cloud lixian"}, "django-xxx/django-admin": {"git_readme_keywords": "add disadvantage disable add add delete disable action action export delete confirm disable delete delete disable installation", "git_description_clean": "django admin extensions", "git_keywords_clean": "", "pypi_description_keywords": "disadvantage disable add disable action action export disable delete delete disable add delete installation", "pypi_keywords_clean": "django admin extensions"}, "shadowsocks/shadowsocks": {"git_readme_keywords": "package blacklist server server install restart destination graceful restart support management configuration documentation license background install libsodium ubuntu", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information documentation compliance applicable software express copyright clowwindy specific language background status coverage tunnel coverage status language governing version license copyright license version", "pypi_keywords_clean": ""}, "hvnsweeting/reshape": {"git_readme_keywords": "package python software license documentation todo range print reshape print cookiecutter reshape range hvnfrompymivn print reshape hvnfrompymivn project template numpy reshape reshape reshape reshape template cookiecutter documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package python software license documentation history first cookiecutter history cookiecutter reshape hvnfrompymivn first release project template numpy reshape reshape reshape reshape template cookiecutter documentation status", "pypi_keywords_clean": "reshape"}, "mmilidoni/django-tables2-simplefilter": {"git_readme_keywords": "standard django filter fk syntax g default simple variable selection filter define argument actual support g fk install filter passing second filter example subclass django double underscore somemodel option underscore syntax function installed filter selection django double template related filteredsingletableview py verbose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "merll/docker-fabric": {"git_readme_keywords": "package ssh connection pull request simple docker fabric remote docker implementation build docker fabric ssh version information client configuration fabric further untagged development docker service yaml remote service g container service g blank command capable docker remote docker command properly automatic creation python production environment useful insight overview context version number advanced g fabric client access remote following fabric project container configuration docker client fabric build capability configuration client essential container access appropriate compressed specific docker tunnel generate compressed dependent container", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package ssh connection simple docker fabric remote docker implementation build docker fabric ssh version information client configuration untagged development docker service yaml remote service g container service g blank command capable docker remote docker command properly automatic creation python production environment useful insight overview context version number advanced g fabric client access remote following fabric project container configuration docker client fabric build capability configuration client essential container access appropriate compressed specific docker tunnel generate compressed further dependent container", "pypi_keywords_clean": "docker"}, "dpgaspar/flask-babelpkg": {"git_readme_keywords": "python application orginal support diferent package extension change extension module library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python application orginal support diferent package extension change extension module library", "pypi_keywords_clean": ""}, "googleapis/proto-google-cloud-logging-v2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library stackdriver logging googleapis repository logging service", "pypi_keywords_clean": ""}, "/oslo-rootwrap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "permission openstack license apache documentation rootwrap apache license repository filtering", "pypi_keywords_clean": ""}, "scieloorg/accessstatsapi": {"git_readme_keywords": "recuperar biblioteca instalar fornecer metodos install accessstatsapi", "git_description_clean": "biblioteca que implementa uso da api de estatsticas de acessos dos documentos scielo", "git_keywords_clean": "service client lib", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "albertyw/mailgun2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "climate dependency status coverage dependency pypi codeship simple python mailgun pypi python installation pull shell usage optional albertyw python python mailgun codeship status", "pypi_keywords_clean": "mailgun email"}, "WiringPi/wiringpi": {"git_readme_keywords": "", "git_description_clean": "gordon arduino wiring like wiringpi library for the raspberry pi unofficial mirror for wiringpi bindings", "git_keywords_clean": "", "pypi_description_keywords": "library please gordon wiringpi wiringpi discord python general implementation useful softtone arduino wiring support install python serial immutable additional available generate peripheral wiringpi version speaker normal manual example number system setup expander wiringpi library unofficial digital repository function following raspberry expansion object access channel wiringpi python wiringpi discord channel", "pypi_keywords_clean": ""}, "RethinkDB/rethinkdb": {"git_readme_keywords": "", "git_description_clean": "the open source database for the realtime web", "git_keywords_clean": "", "pypi_description_keywords": "package database connection asyncio gevent default effort installation tracker spectrum gevent tornado database access account python driver library gevent variable operation multiple async shortcut standard library intstalled rethinkdb rethinkdb python development previous driver support developer migration integration original python difference following blocking scalable realtime standard python compatible tornado tornado feature hurray example fraction rethinkdb original realtime rethinkdb available environment driver default import updated query digital temporary droplet different scalable database document asyncio populate extracted driver rethinkdb rethinkdb section request replacement realtime twisted", "pypi_keywords_clean": ""}, "raisoblast/bottle-pgsql": {"git_readme_keywords": "database connection plugin default postgresql configuration version default empty github application keyword argument commit connection instance empty keyword connection installation commit outstanding following argument configurable following configuration consistent different default db mysql outstanding plugin installation install access request error postgresql connection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection application mysql beginning database overhead request callback connection example argument configurable", "pypi_keywords_clean": ""}, "nephila/django-ckeditor-filebrowser-filer": {"git_readme_keywords": "status testcoverage configure django ckeditor configuration build status above documentation version pyversion ckeditor widget pyversion license djangocms text documentation original configure climate respective documentation canonical install configuration add install django cmsplugin ckeditor djangocms example path add ckeditor django add button status gitter pypiversion pypi version text ckeditor license codeclimate pypiversion pyversion license django ckeditor filebrowser add coverage license plugin travis django ckeditor", "git_description_clean": "a django filer based ckeditor filebrowser", "git_keywords_clean": "django file manager filer python ckeditor", "pypi_description_keywords": "compatibility status testcoverage configure django ckeditor configuration build status above documentation version pyversion ckeditor widget pyversion license documentation original configure position respective documentation advanced deployment support canonical install configuration add install django russian cmsplugin ckeditor djangocms feature example french ckeditor django add button status gitter pypiversion pypi version thumbnailoption license codeclimate release pypiversion pyversion license django deployment structure ckeditor filebrowser add climate history version detection coverage license plugin travis django ckeditor static", "pypi_keywords_clean": "django ckeditor filebrowser filer django filer ckeditor filebrowser"}, "njouanin/repool": {"git_readme_keywords": "thread management thread default class interval default connection available several connect method optional installation creation dependency number rethinkdb database cleanup internal thread rethinkdb connect configurable rethinkdb connection python library disable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "matiskay/html-similarity": {"git_readme_keywords": "package css information distance joint similarity other style similarity quick jaccard similarity similarity metric sequence comparision html document web similarity structural comparison style html similarity sequence comparison structural similarity example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package value pypi html document distance development css interval documentation quick html similarity style similarity sequence comparison structural similarity jaccard similarity similarity metric similarity structural information todo joint similarity web", "pypi_keywords_clean": ""}, "sde1000/python-dali": {"git_readme_keywords": "implied warranty compatibility fluorescent boldie copyright voltage controller expensive useful registry interface digital addressable library extensible supply voltage standard merchantability emergency lighting support author library structure several lighting interface tridonic version fitness niederreiter diogo software foundation python reference attached incandescent system input lighting control general public hasseb public license physical following general addressable lighting uk warranty copyright python program control interface specific related particular purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty compatibility fluorescent boldie copyright voltage controller expensive gnu useful registry interface digital addressable library extensible supply voltage standard merchantability emergency lighting support author library structure several lighting interface tridonic version fitness niederreiter diogo software foundation python reference attached incandescent system input lighting control general public gnu general hasseb public license physical following general addressable lighting uk warranty copyright python program control interface specific related particular purpose", "pypi_keywords_clean": "lighting dali development"}, "seb-m/pyinotify": {"git_readme_keywords": "project pyinotify license documentation current command directory version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project pyinotify license documentation current command directory version", "pypi_keywords_clean": ""}, "xeroc/graphenelib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everyone dedicated telegram library installation repository documentation pygraphenelib available conduct discussion graphene library development", "pypi_keywords_clean": "graphene"}, "Azure/azure-mgmt-powerbiembedded": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package management lropoller underlying complete service management project changelog behavior response release history extension glance library argument syntax resource manager changelog release bugfixes compatibility positional default behavior package compatibility callback polling performance general version optional generator python keyword argument generation session package version completion azureenum uninstall bundle package polling parameter formatting initial running operation algorithm python python parameter microsoft general breaking external feedback context manager unrecognized section compatibility important", "pypi_keywords_clean": ""}, "kennethreitz/omnijson": {"git_readme_keywords": "license install omnijson verndorizable available simplejson problem solution", "git_description_clean": "like anyjson but better", "git_keywords_clean": "", "pypi_description_keywords": "license install omnijson verndorizable available simplejson problem solution", "pypi_keywords_clean": ""}, "weissjeffm/multimethods-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dispatch language multimethod preference", "pypi_keywords_clean": "multimethods dispatch"}, "mitsuhiko/unicode-nazi": {"git_readme_keywords": "unicodenazi disable python unicodenazi blockwise assert implicit conversion script block unicodenazi command import unicodenazi reverse unicode disable unicodewarning implicit", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unicodenazi disable python unicodenazi blockwise assert implicit conversion script block unicodenazi command import unicodenazi reverse unicode disable unicodewarning implicit", "pypi_keywords_clean": ""}, "jbfavre/protobix": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "discovery zabbix sender sender protocol", "pypi_keywords_clean": "monitoring"}, "barseghyanartur/django-nonefield": {"git_readme_keywords": "django nonefield support installation install python installation django python section block python version barseghyan", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django nonefield support installation install python installation django python section block python version barseghyan", "pypi_keywords_clean": "forms"}, "/isstreamer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "logger logstream initial state"}, "frictionlessdata/datapackage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "descriptor glob major removal data com vitor glob pattern updated behaviour value descriptor removal create blank available location gmail com schema profile profile component simple cli wrong error type ricardo lafuente way string true file open knowledge zip file update data dict city data class instance glob use property descriptor validate use argument multiple package metadata instance storage loading local csv file development population csv alexchandel gmail edu ricardo remote data thor briem net net false tableschema schema sql bigquery commit history local csv whole table jessica hamrick class profile request session behaviour added international coding loop data data schema package descriptor csv first schema specification process predictable interface available updated package class usage cli command berkeley edu resource metadata hansl hansl class see option various valid validate list descriptor use virtual environment tryggvi bjrgvinsson forget tryggvi bjorgvinsson descriptor alter briem gunnlaugur bryon data package instance registry constuctor remote url jacob bryon program please python interpreter method array data bauer mihi api documentation error api reference validate standalone tabular city bjrgvinsson tryggvi key violation custom request profile json file consider useful metadata operation descriptor data return true update resource use method strict flag resource storage added added data source argument location project data integrity python new file pattern use glob class api course existent active environment multipart tweak gunnlaugur thor little bit readme bryon jacob installation local file data casting example full changelog important data resource content keyed success added instance data world integrity property combination infer standalone reference constructor com edouard recource descriptor org alex control function api added open other program com bryon inferring data documentation package work documentation tableschema alex chandel final structure armesto gmail hansl edge edourd gmail true longitude jhamrick berkeley url object version range edouard edourd paulywalsh gmail edge net session updated remove data lookup table infer resource local filesystem data population descriptor foreign org gunnlaugur stage see com jessica sure vitor vitorbaptista glob file true foreign history added foreign key new api first try com michael invalid descriptor path remote python environment femtotrader femto descriptor update hood added support chandel alexchandel create data place added resource validation status behaviour cli json file schema etc schema class formatted commit coverage resource null json formatted disable data added remove class data further work alter validation file g property part bigquery etc lafuente paul provisional api formatted data hamrick jhamrick resource descriptor following data com hansl py library inline data descriptor argument mihi lo schema async dictionary net femtotrader vitorbaptista com michael bauer ready python first data file descriptor storage directory documentation verbosity blank data strict mode path url onle basic table data resource instance tox package return resource data linting tabular data com luiz many knowledge international paul walsh basic introduction disk json schema storage creation valid validate data extended keyed extended concrete version format mediatype descriptor validity data package consider table schema native javascript standalone function limit positional walsh paulywalsh profile etc local path available added metadata integration package inferring empty relative storage instance exception package resource csv data alter mode new resource armesto luiz datapackage py integrity issue subset something trader gmail descriptor new index empty string use semantic profile good package use profile class valid infer cli file path table doesn limited flag success profile different count femto trader infer data resource class project virtual numeric lattide baptista vitor code object class instance descriptor package luiz armesto vitor baptista world changelog added property plain city format table gunnlaugur gmail", "pypi_keywords_clean": "frictionless data open data json schema table schema data package tabular data package"}, "constantAmateur/markdown2mathjax": {"git_readme_keywords": "package reconstruction sometxt default sanitizeinput function double installation markdownmathjax second appropriate mathjax way default mathjax install reconstructmath inline supplied default separate equation appropriate codeblock literal occurance markdown mathjax placeholder supplied python markdown format markdownmathjax markdownmathjax keyword cleanup sanitizeinput popular markdown something mathjax javascript nothing conjunction markdown typical inverse delimiting block mathjax", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package reconstruction sometxt default sanitizeinput function double installation markdownmathjax second appropriate mathjax way default mathjax install reconstructmath inline supplied default separate equation appropriate codeblock literal occurance markdown mathjax placeholder supplied python markdown format markdownmathjax markdownmathjax keyword cleanup sanitizeinput popular markdown something mathjax javascript nothing conjunction markdown typical inverse delimiting block mathjax", "pypi_keywords_clean": ""}, "etianen/django-s3-storage": {"git_readme_keywords": "confidential information build status cambridge private different default following additional internet authenticate storage project library django storage project amazon django storage compare author aggressive caching command similar future python installation migration available storage migration django amazon accessible caching management freelance web python important django static public example variety key number authentication functionality browser caching support python push following bug tracking web developer unclear installation install important several storage definition travis service support significant trivial caching storage django minimum", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dmbaturin/pytaf": {"git_readme_keywords": "numeric decoder output terminal aerodrome flight forecast reporting universal python module interpreted regional decoder interpretation flight planning computer readable moreover website weather information interpretation g straightforward weather forecast aviation weather information critical aerodrome forecast constructor display readable interpretation desirable incomplete european likely g output english inherit machine readable nothing airport different ceiling everyday standardized object impossible original undecoded", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "aviation weather meteorology taf metar"}, "jongracecox/mister-bump": {"git_readme_keywords": "new release documentation above tl dr above call tag cherry start work way idea new tag change tag versioning approach multiple create branch master branch detect current create dev exclusion g new project create tag following example version python ci script correct format pipeline setup release number order release candidate tag create source branch key same thing tag version branch breaking change option create version release tl development release different versioning tag shouldn version numbering script due image master breaking tag branch significant change start committing fix release git branch pointing last version subsequent rare prefix ci cd first start release tag next consider change major basic call increment tag button current major project source next version new major example normal committing import bugfix release version tag repository first release released e following released work additional commit branch update master note green new master ci sure web ui start version same time tag tag release note instance argument help case version commit same version command line tool previous release root directory creation dr create part master cherry update syntax note major version pip commit distance line interface ready remainder tag bugfix basic usage section python package next release package python introduction master ci pipeline new ci tag pointing deviation distance possible release create deployment commit commit etc style create post multiple version post release output gitlab ci cd build git project dev branch version tl detected version version cherry server commit version version number something cherry pick create new bugfix branch build pipeline pick commit last release major release same syntax mister bump current version button type environment variable fix bug installation installation call branch tag new version branch commit release version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "new release documentation above current git tl dr above call release abbrev tag cherry version hash start work way idea new tag version help versioning approach major mister version v version bugfix multiple detect current master branch create dev exclusion create branch new project g create tag following example version python exit verbose increment dev ci script hash mister python usr correct format import setup pipeline setup release number order release candidate tag create bash pip source branch key same thing tag version master mister increment mister breaking change block yaml option create version final gcc appropriate project development release different versioning release tl block user tag shouldn git status version numbering script style rc version increment override version due help message master breaking change tag tag branch significant change package description start committing override get fix release bump setup git type final setuptools import branch pointing user localhost last version subsequent rare prefix ci cd first start release tag next consider change major basic call version verbose increment tag button version code project source deviation mister current major rc help override override next version new major example normal rc verbose committing version rc rc rc import bugfix release get git echo version version major version minor version tag repository localhost mister rc echo first release released e following released suffix false mister git version work additional commit dev style branch update master note green new bin python format release release final master ci candidate release debug current project version aaaaaa optional output rc dev dev sure web ui usage get bump alt block bash command git start version bump debug pip install same time tag tag description version release note version deviation instance increment version release aaaaaa case import mister git branch version commit block python same version command line status positional bump basic tool version type root directory creation version get previous release get appropriate verbose output rc multiple dr create match release part master cherry update syntax note setup import debug command bugfix mister major version dev override bump get describe match gcc mister verbose enable commit distance line interface usr bin install mister v rc ready bump bump remainder tag bugfix basic usage argument code section export version python package next release version detected final mister package debug version current branch bash export python introduction master version mister debug candidate ci pipeline minor mister bugfix false new ci tag pointing deviation distance possible release create deployment commit commit etc style create post multiple version post release code block verbose mister cd build git project candidate upstream enable verbose gitlab ci dev branch version tl detected version rc dev version cherry version style abbrev mister server commit version style dev name description version number something cherry pick create new git describe bugfix branch build pipeline pick commit last release setup name major release same syntax help usage mister bump current version button type environment variable fix bug alt image bump style installation installation call branch tag new version branch commit release version", "pypi_keywords_clean": ""}, "LegoStormtroopr/django-haystack-channels": {"git_readme_keywords": "import channel support haystack channel asynchronous search github import haystack install django haystack processor haystack django django version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "import channel support haystack channel asynchronous search github import haystack install django haystack processor haystack django django version", "pypi_keywords_clean": ""}, "/pyspatialite": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliant spatialite pyspatialite interface version relational database", "pypi_keywords_clean": ""}, "newville/asteval": {"git_readme_keywords": "evaluator default tracker importing attempt robust miniature variable mathemetical addition comprehension documentation available several internal important standard builtin emphasis mathematical language control dictionary namespace malicious lanquage function symbol installation development miniature mathematical", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "interpreter mathematical namespace current available evaluation ufuncs function emphasis dictionary", "pypi_keywords_clean": ""}, "scieloorg/articlemetaapi": {"git_readme_keywords": "python status articlemeta biblioteca instalar fornecer metodos install articlemetaapi", "git_description_clean": "biblioteca que implementa uso da api do articlemeta", "git_keywords_clean": "service client lib", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/meinheld": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "worker class performance python simple simple continuation sendfile meinheld install meinheld gunicorn meinheld gunicorn environ continuation patch asynchronous standard socket meinheld gmeinheld http parser continuation meinheld freenode install gunicorn gunicorn worker continuationmiddleware example gmeinheld meinheldworker server socket module meinheldworker continuation source python http meinheld interesting linux freebsd meinheld support library picoev compliant websocket meinheld gevent websocketmiddleware installation install parser library socket greenlet meinheld gunicorn basic meinheld install", "pypi_keywords_clean": ""}, "/django-datatables-view": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default simple urlconf entry queryset method python define example project awesome datatablemixin logic method g py django processing class basedatatableview choice column method typical django install django output available second column different filtering advanced customisation filter queryset filtering django handler python filter method look server filtering method initial queryset render column py customisation context attribute javascript example columns definition filtering filter column example example datatable prepare datatable columns client specific request django urlconf method clause sample", "pypi_keywords_clean": "django datatables view"}, "nerdynick/pysqlpool": {"git_readme_keywords": "thread pysqlpool actual cursor management mysqldb python pyunit actual source library connection manager unittest question legacy documentation development credit documentation mysql query sphinx version installation normal format branch connection management license pysqlpool pysqlpool pysqlpool folder structure mysql connection source association included license", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "thread cursor management mysqldb python work installation pysqlpool license lgpl python setup library connection manager heart mysql query class question pysqlpool documentation install mysql query pysqlpool python write mysql website pysqlpool connection management index license pysqlpool pysqlpool pysqlpool mysql connection work association included license", "pypi_keywords_clean": ""}, "leoleozhu/flask-gfwlist2pac": {"git_readme_keywords": "gfwlistpac current generation heroku extension clowwindy example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application pac gfwlistpac", "pypi_keywords_clean": ""}, "/grafyaml": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "grafyaml grafyaml software license documentation grafana", "pypi_keywords_clean": ""}, "/apidoc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package upgrade default tracker github readthedocs shortcut argument license install command installation optional override diffmode keyword optional version initial sampled property documentation generator shortcup summary bootstrap inprove console changelog initial release console optional searchbox", "pypi_keywords_clean": ""}, "/sphinx-patchqueue": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jesford/cluster-lensing": {"git_readme_keywords": "package cluster magnification dataframe cluster miscentering commitment ipynb clusterensemble gaussian miscentering cosmology useful distribution following bibtex richness cluster lensing density differential surface customizeable documentation density deltasigma magnification nfw notebook literature relation customizable powerlaw version description cluster research example variety lensing package lensing documentation software surfacemassdensity concentration surface previous cluster several concentration necessary clusterensemble lensing python project repository provided notebook parameter simplified access galaxy cluster nfw repository miscentered python package miscentering formalism installation cluster astropy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "cluster lensing package differential surface deltasigma information concentration surface galaxy cluster lensing galaxy richness", "pypi_keywords_clean": ""}, "vaniakosmos/easy-env": {"git_readme_keywords": "block block python reading implement common", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "block block python reading implement common", "pypi_keywords_clean": "env environ"}, "sabnzbd/sabyenc": {"git_readme_keywords": "parsing python sabyenc usenet running alessandro install directory source beneficial python version overall download performance download process original", "git_description_clean": "python yenc package optimized for use within sabnzbd", "git_keywords_clean": "", "pypi_description_keywords": "parsing python sabyenc increased performance alessandro module original", "pypi_keywords_clean": ""}, "sacrud/sacrud": {"git_readme_keywords": "contribute sacrud sacrud tracker build status support composit endinng license build multiple python delete composit primary python installation available channel sacrud separate project github python sacrud license status coverage dbsession coverage status sqlalchemy option sqlalchemy session sacrud uralbash installation install interface progress problem", "git_description_clean": "crud interface for sqlalchemy", "git_keywords_clean": "", "pypi_description_keywords": "contribute sacrud sacrud tracker build status support composit endinng license build multiple python delete composit primary python installation available channel sacrud separate project github python sacrud license status coverage dbsession coverage status sqlalchemy option sqlalchemy session sacrud uralbash installation install interface progress problem", "pypi_keywords_clean": "crud database sqlalchemy"}, "frejanordsiek/hdf5storage": {"git_readme_keywords": "type version matlab mat fixes bugfix key value note ordereddict struct bug fixes forward bool single feature release explicity set python read former added compatibility latter format able bool logical string representation bit system addition np matrix python standpoint doesn support support hdf heirarchal other format hdf complex single version python struct cl type logical name single type version different file write support little clunky file extension different extension complex uint format overview limited set canonical empty exchange large variety np recarray matlab doesn option otherwise format metadata object cell bool np different hardware cl deque cell cl compound type license installation matlab compatibility fix release char list following bug hdfstorage support matlab object canonical test code complex np optional dependency hierarchal hdf compound read write uint int group forward supported int np command installing utf version bool table representation type information familiar structure python syntax double np equivalent matlab compatiblity high level compound number security bugfix release scipy julia int float few supported python cell np building documentation important python tuple np float single ndarray cell compatibility option numerical np bool struct np python s following bugfix arbitrary code matlab class matrix see maximum size uint logical field set np see write variety package matlab single np cell set bytearray np minor feature np int case system bugfix np str similar source download dtype field int char ndarray see addition copyright char bytearray np complex cell dict null python support initial version hdf file same package installing hpy package numpy type chararray see size underlying dtype dispatch np void specific set small deque np following minor ascii pip julia matlab pickling python python class version feature performance storage format dict struct source code float np python package scipy package str struct list np void np hdfstorage error version container interpreter logical none double complex added couple none int untrusted uint uint np uint numpy float double np object extra meta decimal string file support uint char char uint complex part api breaking bsd license reference array bug bugfix added test first version str np double str np chararray char np cell tuple hdf reference bad hpy hdf group package source package documetation documentation python logical np file format python type np ndarray cl ordereddict point own dataset mat file python information right clause bsd hdf hdf following executable path performance fix direct example python hierarchal form python matlab np float int int complex double stored uint np package nose unix filesystem", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "type version matlab mat fixes bugfix forward bool single feature release explicity set python read added compatibility able bool logical bit system np matrix python standpoint container doesn support support hdf heirarchal other format hdf complex single pip run version python type logical name single type version different file write support little clunky file extension different extension complex uint format overview limited set canonical empty exchange large variety np recarray matlab doesn option otherwise format metadata object cell bool np different hardware cl deque full functionality cell cl compound type license installation matlab compatibility fix release char list following bug hdfstorage support matlab object canonical complex np optional dependency hierarchal hdf compound read write uint int group forward supported int np matrix np unittest command installing utf run note table representation type information familiar version bool structure python syntax double np equivalent matlab compatiblity high level compound number security package run bugfix release int float few supported python cell np building documentation important python tuple np float single ndarray cell compatibility option numerical np bool struct np python s following bugfix arbitrary code matlab class maximum size uint logical field set np write variety package matlab single np cell set bytearray np minor feature np int case system bugfix np str similar source download dtype field support added int char addition copyright char bytearray np complex cell dict null initial version hdf file same package installing hpy package numpy type underlying dtype size test code dispatch np void specific set small deque np following minor ascii pip pickling python python class version feature performance storage format dict struct source code float np python package scipy package str struct list np ndarray np void np added couple interpreter scipy run matlab type logical none none int double complex untrusted uint uint np uint numpy float double np object extra meta chararray np file support uint char char uint complex part bsd license reference array bug bugfix added test first version str np double str np chararray char np cell tuple hdf reference bad hpy hdf group package source package documetation documentation python logical np file format python type np ndarray right point following mat file python information bug fixes clause bsd hdf hdf executable path performance fix direct hierarchal form int int python matlab np float complex double uint np package nose unix filesystem", "pypi_keywords_clean": "hdf matlab"}, "/fastzbarlight": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "benchmark fastzbarlight fastzbarlight welcome compatible repository zbarlight ubuntu version library wrapper deprecated zbarlight optimization github installation vendored libzbar", "pypi_keywords_clean": "zbar qr code reader"}, "rr-/screeninfo": {"git_readme_keywords": "location server parameter screeninfo cygwin available output monitor environment xinerama reason experimental physical pyobjus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "screen monitor desktop"}, "/synopsis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "processing language engineering documentation extraction introspection translation", "pypi_keywords_clean": ""}, "/lino-noi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable project homepage management commercial information technical documentation documentation status", "pypi_keywords_clean": ""}, "Psycojoker/django-view-dispatch": {"git_readme_keywords": "conditional standard complexity potential complex licence programming something handling library installation research function example situation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "conditional standard licence potential complex programming something handling library installation research function example situation", "pypi_keywords_clean": "django"}, "/dmidecode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jpscaletti/solution": {"git_readme_keywords": "individual amazing flexible license representation customizable cleanup solution", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "individual amazing flexible license vprepareclean fieldname processing kwargs prepare history several representation customizable cleanup prepare fieldname solution", "pypi_keywords_clean": ""}, "FroggedTV/grenouilleapiclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package grenouilleapi community grenouilleapiclient", "pypi_keywords_clean": ""}, "/python-slimta-redisstorage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/reproject": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "healpix information resolution orientation interpolation screenshot orientation coordinate gridding reproject astronomical reprojection various celestial coordinate reproject package coverage uniform interface example", "pypi_keywords_clean": ""}, "reformo/rsanic": {"git_readme_keywords": "python service browser access address micro framework rsanic micro version example static", "git_description_clean": "micro framework built on top of sanic py written in python", "git_keywords_clean": "micro framework python python", "pypi_description_keywords": "service version container dependency injection version dependency micro framework rsanic micro html application global jinja version autoescape injection container autoescape option option markdown version example python controller global codebase controller local version html markdown support config breaks browser access address block static", "pypi_keywords_clean": ""}, "guokr/swagger-py-codegen": {"git_readme_keywords": "framework generator install example tornado example tornado python python falcon example falcon overview swagger validation install command component compatibility falcon python flask example version generator overview generate example codegen example tornado compatibility component generate python following swagger specification yml flask flask python wiki compatibility browser scopes python restful python tornado falcon example", "git_description_clean": "a python web framework generator supports flask tornado falcon sanic", "git_keywords_clean": "python swagger flask tornado falcon pypi swagger codegen sanic", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "AndrewRPorter/yahoo-historical": {"git_readme_keywords": "noninfringement limitation copyright finance historical documentation merchantability fitness subject software limited express substantial connection historical installation liability following contract permission distribute sublicense motivation warranty restriction publish distribute particular purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "permission noninfringement software distribute sublicense express substantial merchantability warranty documentation limitation liability restriction particular platform unknown description connection copyright software download following contract", "pypi_keywords_clean": ""}, "pyecharts/echarts-china-cities-pypkg": {"git_readme_keywords": "project installation block bash china", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project bash pypi installation chinese first bash change", "pypi_keywords_clean": "python"}, "Kinto/kinto": {"git_readme_keywords": "minimalist development postgresql postgresql production documentation storage service memory development conduct synchronisation coverage readthedocs pypi", "git_description_clean": "a generic json document store with sharing and synchronisation capabilities", "git_keywords_clean": "api storage web http decentralisation", "pypi_description_keywords": "admin auth add endpoint setting empty service bug makefile add setup github ref make startup fixes bucket feature readable readthedocs pypi addition simple fixes pac mansimar classic logger authentication verification deprecated allow sub fixes new header mozilla documentation improved cliquet protocol ref protocol backend api strict schema fix secret enguerran colson backend option viewset principal duttaindranil gmail install postgresql json storage string value redis event add contribute info mathieu request schemas patch content cliquet update com ricardo eu aditya npalash gmail surya bug api introduce cliquet force ajey kulkarni separate view com ayush unavailable keys fix refs create child comparison table bucket plugin cliquet make whole kinto normal kinto zhuang coal account mention none invalid utf cliquet fxa irreversible deleting multiple dockerfile pip example list ichim tiberiuichim previous unicode fixes fix parse postgresql cache cliquet uuid error handling application mention python make sure event payload openid state batch endpoint explicit error deprecated mozilla tm fixes g protocol cliquet delete response mozilla collection mark net foobarquaxx com adam fix redis time file security fix sebastian rodriguez fix documentation other resource initialization process postgresql fixes insert query com heron documentation version cliquet internal kinto kinto next page com kulshekhar improve formatting mention backend python segmentation documentation status example fixes init failure useless logging cliquet default fixes script quiedeville org authentication internal current userid validation option protocol added file environment single operation tiberiuichim vamsi past migration documentation improve takeuchi masataka coverage target order fixes slight utils view pagination bug rmy hubscher account creation openid login prashant surya catch com yann keys fixes admin new remove duplicate backenderror fixes limitation xxx pattern core improve new option added hoodie new experimental first change cliquet allow tox env resource timestamp glasser camp integer value dockerflow document policy fixes delete kinto http raise configuration internal event start com hiromipaw quota plugin com swhgo srodrigu gmail new kinto cliquet heartbeat endpoint generic cliquet fixes version prefix update dependency pip install uk indranil fixes add querystring filter mathieu leplatre subrequest batched block ini pool class meaning fixes openid inconsistent state trinhtrung gmail authorization policy kinto group information fixes parent request kinto pusher pip ref mozilla database initialization io new project name backend keys wclouser mozilla adam chainz version upgraded name protocol startup same name kabra kulshekhar repo fixes functools package unicityerror class creation allow fix basic varna gmail niraj added add upgrade version see brhault ebrehault sahildua gmail mac com amckay mozilla provided fixes g allow request header joshua thomas leplatre mathieu like query allow post clment villain eric lemoine string fixes elelay ref kinto mini checklist backend pr hello view hello page cache add bengtsson mail com itai pagination token filtering history empty directory http api docker container fixes like remove platform cloudstorage compatibility hack toctou bug message fixes foobarquaxx francisco fil rezo ayush sharma record path fixes many deserialization request update docs service cliquet custom model batch request one object python fixes private revolunet com command api migrate command greeshmabalabadra gmail backend added bump tutorial querystring hubscher rhubscher webpack inline prashanth prashantsurya admin ref use mock dynamic internal hoizey nicolas use tox insecure use fix python string length api schemas metaireau alexis kinto protocol user password posssible response add support modified com taylor id fix generic api specific behaviour one place id columns fault mozilla actual id next url use correct fix link sumitsarinofficial gmail mandatory fixes backend fix tarek ziade fixes api fix dockerfile fix json joshua bird fixes protocol dufresne dufresnebrady fix pserve slack travis fixes documentation patch fixes part cliquet new protocol fix alt code plugin internal major version special big section doesn delete eric brhault access token mozilla service postgresql server page bug server docs hard code release process add uwsgi format g value fixes fixes improve virtualenv skip patch resource like redis add slack postgresql support accessible object configuration template synchronisation unresolved json py test url param wasiutyski stephen unhosted org added documentation fixes security swagger output admin dependency marmax gmail com vitor load balancer note safe deploy button install major add test nigam npalash modified add validator postgresql permission clause bug mozilla long documentation rouberol br fixes text conduct irc collection bug bucket fixes configure authentication documentation huge basic auth specific installation policy ref add pytest level field make serve json hyper cache entry fixes heartbeat supamaxy gmail fixes parent storage mozilla use other com sebastian querystring mozilla com niraj argument fix nested default policy unknown required correct spelling anonymous fixes deleted status important status code internal storage documentation put gdpr compliance response header return json log renderer logo add pyup io kinto logo error format subpath christophe gragnic include python kulak eugene added pyramid listener name backend fixes case com maxime improve synchronisation customizable user info cornice upgraded memory backend use json add check docs bug object id io fix last kinto admin niraj oron shweta oak default sort larlet fr woovar com redirection path fix internal list new francisco piedrahita method path event new ttl prefix mozilla ref api transaction like view mozilla added tutorial backend create platform specific group association version number jadwani gmail batch transaction permission backend definition ugherughe emamurho documentation internal multiple documentation demos use python code unicode mozilla don field fix smith hrmit registry backwards compatibility field fixes folder storage create com joshua init input architecture fixes argument consider type validation eugene kulak extra openid current url pascal roessner bound add schema com peter install fix taus brock ebrehault gmail api documentation added action core utils remove regexp membership test fixes backend setting useful coverage image method parameter maksym shalenyi custom connection documentation ref fixes internal agopian info phrawzty github explicit dependency mozilla com fil fil record id inline script psycopg binary emamurho gmail coal hotmail openid plugin configure info minimalist fixes json body miho miho fixes error damage former cliquet code quality ziade tarek duration new bucket fix pagination next create default memory permission mckay amckay limit network write plugin com dan jsonschema validation sort order fetch storage delete tombstone optimistic default fixes admin added plugin bug chirag jadwani guthe gguthe cliquet added backoff header com palash refs internal add setting utf character ref add masataka takeuchi cache key user field com nicolas performance issue old quick mention travisci add line script redis listener passed argument content security action redis balancer membership bird joshua authentication move strip internal migrate operation remove depreciation timestamp upsert content type tox upgraded adam adamj fixes fix parent object operator indranil dutta internal fixes mention rektide voodoowarez python rezo net hiromipaw silvia see remove documentation remove tdd style pyramid api empty context use assertequal fix hmac input function new header cliquet load added notion effect response status handle querystring method use plural enguerran ticabri character fixes command attribute equal cc boris sorting key version update firefox account wrong fixes remove usage fix validation format kinto public pascal gmail delete collection race condition header portion fix wrong kulkarni bkajey error message admin api release bug fix performance configuration use utsch gmail default plugin add add pypy querystring numeric rektide rektide class fixes delete access fix response hotmail com bucket many token fixes add new record fixes rossi heron experimental endpoint gabriela surita json request line option rolledback version file prefixed user first generation tarek mozilla sqlalchemy documentation mks gmail slack badge github gmail lemoine eric cliquet collection add docs fix openid rkleine rodolphe swagger file lavish aggarwal add disqus fix english cliquet fix incompatible api tanuki add wild docs kinto one click g upgraded provided authenticated false internal protocol remove deploy kinto cache test add op server configuration falcao vitor sub object user counter klis yann helper function backend race collection command bird gmail stephen martin brock nannestad function new pytest capturelog pool behaviour click deploy openid policy meant make memory schemas json startup output der ploeg ref try deleted value suresh varna add ability procedure internal docs document available pserve argument plugin fix handling bug text search explicit permission new event support regexp jelmer woovar plugin fixes operator fixes revision field admin configure server license update virtualenv enguerran fix bucket plural fix bug information internal script fix current domain cache heartbeat api docs bucket add huge rework permission same old cliquet subcommand name kinto redis mapping config folder admin fixes peter bengtsson password wasn partial collection fixes allow com tienne file transaction remove dead castro chirag resource attribute protocol breaking authenticated added john giannelos fix consistency place openid deprecated code use memcache merge validation custom logging tombstone vamsi sangam file creation mail peterbe cloudstorage backend remove pypy empty bump hrmit protonmail account user provided field prefixed version auth ofuscation fix schema loading protocol dependency error random admin plugin fpiedrah frank read write copyright year com christophe config upgraded first level dockerfile fixes object filtering favicon sharma ayush ref breaking fixes breaking use sqlalchemy unique user balthazar rouberol session ref bug storage method tutorial fixes com andy add documentation image install com julien logging extra com perigk org sahil fixes ability crash server documentation minor duplicate glossary collection timestamp add tutorial remove python dedicated column specific bucket fixes plugin roessner roessner config file dead code term see documentation new configuration add badge overview section resource larlet david dan phrawzty new setting integrity constraint fix broken cliquet mozilla unavailability gola oron trigger internal charlton charlton fix attribute transaction rollback minimalist json upgraded schema new thomas bird experience fixes com victor header batch documentation fixes postgresql error spurious file fix pypi kinto improve introduction parvaiz aimanparvaiz response consistency master coverage bucket internal fix put lebunetel julien one present internal fix pagination virtual resource version bug improved update past release new implementation broken hyperlink default bucket full uri mathieu mozilla remove former minor added prompt irc channel integration test anthony garuccio rfc specification ubcpeter hotmail core conflict behavior base json started new such field id started deployment procedure whole code purge add python individual permission jadwani chirag com surya schema bug principal added helpful related fix ricardo rkleine option upgrade garuccio gmail create update cliquet querystring com mathieu surya prashanth fix crash refactor handling batch subrequest violation fixes protocol version add heroku collection group travis readthedocs conlini gmail level fixes stream history plugin ric lemoine error documentation pip version unsupported pagination refs useless print cdn deployment deprecated use glaeser tzglaeser generous counter fixes update overview redis get verb fixes nul character control request fix loss ref fix fixes use compose startup broken git record fix documentation upgraded swhgoon tarek com jol command bug upgraded minimal paragraph collection doesn remove field add load move generic cliquet bug peterbe com yaml server ref deleting collection console log request response password add un authenticated version breaking provided value nopressure co update kinto json merge filtering return behaviour fixes package api fix typos url upgraded uwsgi bug email argument mozilla com sunakshi alexander ryabkov exclude include redirection behaviour admin ui tejwani sunakshitejwani github authentication fixes strip flush enpoint lavish gmail next header anything authentication fix english version hello endpoint backend integrity charlton mac token fix etag api json clic deploy optional resource mozilla time configuration file method add bkajey gmail available internal fixes etag name logging server g list posssible rebuild default host proposition update alt documentation configuration error new utility same cache cliquet output commented docker compose patch format fixes fixes storage cache protocol allow g fix warn method one provided error response postgresql storage com anh nginx fixes ref upgrade com aymeric authentication policy fix error nperriault mozilla response cycle track lockwood opperline com rektide kinto authentication cache backend warn level email example com jelmer redirection fixes page add one resource control client version title eric le fixes update julien bouquillon bob compose configuration collection kinto channel configuration setting target pypi serve fixes docs use required fixes version schemaless cliquet backend slash redirect json patch uri tienne tienne behaviour create bucket deletion storage filtering cache control prefixed userid collection update conflict collection json userid mozilla impossible configuration example added ability added method writable object showing delete endoint added new com alexander vamsisangam live black remove see account read remove redundant install cliquet additional information add command command added fix postgresql port statsd allow filtering fixes alice kinto openid shalenyi supamaxy use postgresql numeric flush endpoint postgresql database title add cliquet breaking jswhatnot gmail configuration fixes default console kinto value root view row niraj breaking migration force postgresql add mini kinto presentation such postgresql clause move postgresql nannestad taus assert fixes version fixes schemaless storage empty body development add fix listener sofia utsch etag header tzglaeser gmail default configuration simplify py modification version upgrade plugin upgraded compose file timestamp fixes lemoine gmail gmail com code event kinto core url hello json response sahil dua readme add com jeff migration operation kinto bug george smith added load subprocess see api changelog default mozilla cliquet server fxa improve filtered sorted cache server fix ownership readable fix user id generator tutorial require coverage status master taylor zane json schemas object type cloud provider request fixes complete revamp refs fix com shweta cliquet documentation transaction hard dependency necessary ref cliquet master virtualenv base huge yann klis heartbeat transaction comparison matrix assertequal fixes unicode unknown collection fix api force host locale rodriguez srodrigu unknown field added endpoint production release body fixes dua sahildua surita gabsurita modification fixes ini forbid group id dressler gmail fix cache rodolphe quideville com fil plugin node package json present giannelos johngiannelos magopian add improve openid statsd unparseable uwsgi add fix concurrent com taus com maksym recreating record kinto command david larlet compose add empty collection see new imap cc require cliquet bucket operational redis backend mathieu agopian browser fix memory fix heartbeat ref move regex account validation parse server behavior result lavish added add custom exclude certain id column admin loading see added swhgo documentation require chainz adam output server add bhasin conlini usable handle integer see bug jeff schobelock illegal com george fix collection notion index specification error env variable event behavior fixes joelmarty john handling marty joelmarty url fix bad last potential initialization suitable subjective ligthweight added verbosity gguthe mozilla default route track execution cliquet monitor fixes collection python upgraded remove json allow inherited statsd backend thing feature method return sunakshi tejwani view counter bucket ref add invitation deleting bucket enguerran add object sorting instance breaking metadata ref opperline com phrawzty phrawzty com eric magopian bug fixes multiple golar gmail hoizey com prefix bug bucket collection admin bug glossary add end timestamp retrieval colson enguerran object instad page header garuccio garuccio slash bug see breaking get accessible donner gmail handle unknown statsd initialization readthedocs org value proposition same time vitor falcao fixes return code base command line efficient package internal bucket metadata logging info fix removal session duration com ajey backend function kulak kulak module name handy return error move application template added durability added fxa configuration migrate json fix bumping support see setting mozilla com sumit rhel installation include put allow broken readthedocs io custom code documentation mention filter operator unknown permission kinto coc memory development backend selection experimental readthedocs alt different python remove redirect object divisible g event listener querystring handling get started get count fix migration process copyright implicit creation backend make tutorial list schemaless open source ujson full range improve docker falcaor gmail irc slack querystring parameter varna suresh fixes access perigk upgrade remove firefox kinto bucket fixes kinto directory fixes mozillazg nicolas maximum duration hyper schema itai steinherz view upgraded added task search single clic variable fixes add kinto alexis metaireau address bug create i upgraded newrelic huge refactor exhaustive one object implementation log empty one upgraded g string functional old pip upgrade kinto fix docker fix typo dev endpoint documentation json object rolledback fix ref fixes co uk update cliquet heroku single martin lockwood remote com rmy pytest cache started docs doplumi folder login experience button install emamurho ugherughe way postgresql header name search protocol info link backend document permission endpoint standard library com clment execution time non string python add grouping provided alt coverage quideville rodolphe kulshekhar kabra callback tienne eugene null collection fixes first parameter add makefile backend type url response collation schema fixes documentation fix object fixes stack exhaustive read model instance sure prefixed session timezone endpoint type hoang talk bucket default server flush update faq operator handle integrityerror fixes optimization default operator configuration bug empty payload protonmail com contribute json use string finder flush cgragnic protonmail taus semmle cliquet upgraded generator empty json ran travisci bug flush bug access control bug fixes update internal pip command request mozilla pyramid tm aimanparvaiz gmail utsch sofia collection id pagination fixes postgresql helper http js postgresql schema oron gola fixes include useful protected resource gabsurita gmail output kinto root url startup ref regexp py client cache travis master gkolias gmail update mozilla stephen donner steinherz itaisteinherz remove useless fixes upgraded heron rossi python logging clouser wclouser specs unrecognized backslash arbitrary error header bucket upgraded dedicated mapping add public zane glaeser workaround dutta duttaindranil makefile documentation segmentation fault redis default com varna postgresql backend faq improve validation fixes com mozillazg bad request andy mckay init fixes uri g fix behaviour aditya bhasin documentation link tutorial remove com gabriela add capability openid connect method protocol kaur mansimarkaur secure roessner pascal sunakshitejwani gmail backend schema itaisteinherz gmail work coc alt fixes related post cliquet pusher account plugin structlog binding community permission collection default add anh trinhtrung travis update aggarwal lucky monitor time subobject filtering added get integer regression make fixes handle operator class collection schema fixes several slack readthedocs python support file request improved documentation palash nigam connect limit backend add default pool fresh timestamp extra information account authentication pytest backend refactor html page cliquet initial lebunetel com new schemas g batch route policy name explicit message json schema introduce filter admin protocol fixes bug behaviour bug brady dufresne upsert query timestamp method url format polish default api version user profile happy tanuki code ref villain choclatefr max fetch com anthony fixes batch jol marty fix race internal class database storage correct http class method aditya integer overflow string internal listener tutorial com alexis execution mozilla ploeg jelmer com enguerran api filtering fixes added pypy test master branch generation kinto querystring new python plugin git revision allow migration pyramid internal protocol support page fix maximum number provided id merge internal org ric coverage coc allow record minor transactoin commit bouquillon contact address com tiberiu fix group jsonschema kind thomas dressler started button pr template docs fixes docs add cliquet see readme fixes frank mozilla fixes quick production add openapi spec logging formatter nested sorting storage backend selection add empty permission version redirection wrong see julien lebunetel bind error collection separator fix support whole request com thomas apis simplify mansimar kaur deletion resource ref authentication kinto successful track com sofia psycopg dependency releaser johngiannelos gmail com pascal password protocol coc irc storage consistent fixes change logging configuration fake one ci migrate minimal postgresql live com new feature fix command non prefixed ini mozilla request processing faq simplify multiauth issue schema validation psql fr emamurho number fix jelmer van field information donner stephen return bad com david fix version silvia nopressure same record endpoint fixes code block sense voodoowarez com add openid datadog integration vitor falcaor postgresql fix uwsgi bind token generation fix principal fix creation github upgrade redis see use piedrahita fpiedrah use yaml fixes remove commit fix improved use fresh fixes document protocol add freenode kinto com balthazar file fixes remove delete add attribute admin breaking subscriber execution com stephen token remove comma fixes fix sorting sorting filtering docs internal state string kinto init paginated bug permission list channel change custom id memory storage account fixes keyword kinto fix auth multiauth schema operational server fixes com aiman van der dressler thomas concurrency control rossi hotmail one query option request sure command get empty fixes docs remove modified descending com masataka victor zhuang fix storage memory new oron golar postgresql session view new one fixes greeshma greeshmabalabadra adamj eu gragnic cgragnic storage class anh anh revolunet bug trigger other log batch quota lot authentication sub aymeric faivre one view fixes mozilla fixes move resource fixes personal bucket dockerfile ticabri com release new list statsd faivre miho default kinto provided use partial admin kinto add flag ui see one event remove hard aiman parvaiz container image authenticated userid source information eugene gmail storage service invalid unicode spelling field internal endpoint internal admin bundle kinto configuration initial version logging module schema crash response public move default pypi travis slow internal cornice schemas tiberiu ichim english typo broken kinto create configuration line documentation added setting fixes make test fixes fix url nicolas hoizey fix toctou fix concurrency check last modified filtering docs remove dependency api batch look change postgresql statsd view production changelog com greeshma agopian mathieu presentation article mark old fixes control mansimarkaur mks sub policy same id api specification fixes deleting fixes filtering environment variable client cliquet add redirection add bucket default duration new custom python etag package metadata change meant required fix exception bertsch frank improve documentation postgresql add security flaw prashantsurya ymail frank bertsch free id generator null string com castro fixes raise kinto version policy edited fixes com brady see default fix kinto synchronisation docs view resource admin internal whole batch simulation load postgresql production kulshekhar lavish ttl ref documentation change custom config output message added use development postgresql hmac digest table fixes semmle com verification bug plural endpoint cornice protocol rodolphe quiedeville uuids fixes setup py lothiraldan gmail naming backend implementation add explicit example config overview update request klis gmail image alt history fixes upsert sangam vamsisangam message upgrade pip ymail com type move connect support add deletion put request alexis mozilla permission schema see g choclatefr gmail contact revolunet json file empty list standard python write load uuid validation nose new gabisurita bug unparseable metric create method br imap cliquet configuration issue new github tutorial update other python package favor group finder unprefixed see protocol id prefix regard deleted fixes table fix tutorial internal instance fixes lucky lavish policy mozilla heartbeat test view add other authentication configure constraint violation implementation fix put fix statsd operation add skip python schobelock jswhatnot dufresnebrady gmail rhubscher mozilla likely database use py deprecated internal delete history crlf character custom statsd documentation add", "pypi_keywords_clean": "web sync json storage services"}, "/rexlex": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation expression", "pypi_keywords_clean": ""}, "nickmaccarthy/python-datemath": {"git_readme_keywords": "datetime module arrow method php function inclusive datetime object second string expression logic happy applicable format check following fixed install default datemath php relative rounding format elasticsearch elasticsearch different timezone coverage minute example python interpolation similar rounddown functionality parser compatiable format arrow module datetime python documentation query filter timestamp argument timezone timezone fixed needed something release upper various anchor short fixed timezone cloudwatch epoch timestamp default rounding expression ceiling object tattle section native object arithmetic datemath parser python datetime", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "date math datemath elaticsearch solr"}, "ethereum/rlp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package unstable standard specification specify current version documentation build status version python status coverage python implementation unstable version release coverage status version format length prefix recursive length", "pypi_keywords_clean": "rlp ethereum"}, "jsocol/django-jsonview": {"git_readme_keywords": "parsing healthy collection default value serializable object default great status return content custom header django doesn response body return different anything response second rollback package installation string appropriate content jsonview django return value validate possible unchanged g correct status g standard argument http method doesn support ujson fallback class ajax exception message exception middleware output simple decorator first appropriate error request response coverage example exception subclass python application content response middleware default content normal django charset stdlib module kwarg different http alternative additional keyword virtualenv return respond custom normal logger http status option atomic encoder error message object cbvs dictionary http virtualenv ujson header return object status integer status distinct status section django jsonview extra standby django setting decorator g", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "parsing healthy collection default value serializable object default great status return content custom header django doesn response body return different anything response second rollback package installation string appropriate content jsonview django return value validate possible unchanged g correct status g standard argument http method doesn support ujson fallback class ajax exception message exception middleware output simple decorator first appropriate error request response coverage example exception subclass python application content response middleware default content normal django charset stdlib module kwarg different http alternative additional keyword virtualenv return respond custom normal logger http status option atomic encoder error message object cbvs dictionary http virtualenv ujson header return object status integer status distinct status section django jsonview extra standby django setting decorator g", "pypi_keywords_clean": ""}, "userapp-io/userapp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "client library", "pypi_keywords_clean": "userapp user management api user authentication oauth"}, "cmbant/getdist": {"git_readme_keywords": "homepage description getdist py different chain scipy sudo param param getdist package optimal bandwidth py pyside plotting planck program getdistgui useful publication ready folder affect help graphical other ignore example getdist specified number x y py matplotlib parameter covariance cosmomc installation matplotlib scipy format getdist script getdist getdist general parameter option algorithm fixed number parameter getdistgui py kernel density source scipy pyside carlo mcmc linux cosmomc parameter plotting table cobaya extra texlive default boundary pyside optional setting compare range separate chain importance weight columns specified pyside texlive mcmc sample dvipng python sudo derived installation example marginalized simple plotting matplotlib py number click particular upper likelihood contour correction convergence parameter sample install py first fraction scatter triangle sample chain markov chain optional parameter description getdist scipy py standard getdist d scatter py script cobaya installation matplotlib sudo label likelihood bandwidth choice carlo y x getdist module lewis homepage dependency x xy sample analysis simple handling cosmomc d likelihood correlation length author antony sudo python python algorithms section marginalized parameter python package plotting library correlation covmat analysis plotting analysis ignore numpy yyy install texlive disk various simple install python xxx custom publication pyside sudo install dvipng gelman rubin xy y available memory first install getdist value parameter py scipy install binary diagonalized gelman select chain full cosmomc getdist mcmc ready d density estimation format weight extra sudo directory plotting antony lewis interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "homepage description getdist py different chain scipy sudo param param getdist package optimal bandwidth py pyside plotting planck program getdistgui useful publication ready folder affect help graphical other ignore example getdist specified number x y py matplotlib parameter covariance cosmomc installation matplotlib scipy format getdist script getdist getdist general parameter option algorithm fixed number parameter getdistgui py kernel density source scipy pyside linux cosmomc parameter plotting table cobaya extra texlive default boundary pyside optional setting compare range separate chain importance weight columns specified pyside texlive mcmc sample dvipng python sudo derived installation example marginalized simple plotting matplotlib py number click particular upper likelihood contour correction convergence parameter sample install py first fraction scatter triangle sample chain markov chain optional parameter description getdist scipy py standard getdist d scatter py script cobaya installation matplotlib sudo label likelihood bandwidth choice y x getdist module lewis homepage dependency x xy sample analysis simple handling cosmomc d likelihood correlation length author antony sudo python python algorithms section marginalized parameter python package plotting library correlation covmat analysis plotting analysis ignore numpy yyy install texlive disk various simple install python xxx custom publication pyside sudo install dvipng gelman rubin xy y available memory first install getdist value parameter py scipy install binary diagonalized gelman select chain full cosmomc getdist mcmc ready d density estimation format weight extra sudo directory plotting antony lewis interface", "pypi_keywords_clean": "mcmc kde sample density estimation plot"}, "andycasey/moogsilent": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spectrum synthesis analysis determination chemical composition", "pypi_keywords_clean": "high resolution stellar spectroscopy astronomy astrophysics"}, "/ipapython": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "freeipa python", "pypi_keywords_clean": ""}, "divio/djangocms-file": {"git_readme_keywords": "package minimal python django additional template manual install folder preview project configuration documentation choose additional available grateful compatible installation django coverage django directory django djangocms feedback djangocms django request section template coverage python", "git_description_clean": "django cms file is set of plugins for django cms that allow you to add files to your site you can either choose single file or an entire folder", "git_keywords_clean": "addon cms python django django cms", "pypi_description_keywords": "package minimal python django additional template manual install folder preview project configuration documentation choose additional available grateful compatible installation django coverage django directory django djangocms feedback djangocms django request section template coverage python", "pypi_keywords_clean": ""}, "/braveapi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "guinslym/pyexifinfo": {"git_readme_keywords": "package pyexifinfo harvey exiftool metadata whithin mondsir whithin picture rfrence filetype exiftool exiftool french exiftool analyser wrapper library installation metadata information", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package pyexifinfo rfrence quand imageheight filename imagewidth imageheight metadata whithin python import imagesize x fileinodechangdate u colortype exiftool exiftool result picture exiftool deflate inflate bitdepth composite version filename useful library import pyexifinfo filetype mimetype interlace compression deflate exiftool exiftoolversion filename result whithin picture fileaccessdate u adaptive kb analyser representation mimetype filename installation filetype filename harvey exiftool mimetype ourcefile laptop python result filetype directory filename python mimetype imagesize result mimetype composite imagesize python wrapper filemodifydate u imageheight imagesize imagewidth filetype imagewidth x exiftool corner exiftool version u pixelsperunity pixelsperunitx alpha", "pypi_keywords_clean": "exiftool reader stats metadata image linux"}, "douban/pymesos": {"git_readme_keywords": "meanwhile operator target implementation scheduler executor unnecessary dependence pymesos original", "git_description_clean": "a pure python implementation of mesos scheduler and executor", "git_keywords_clean": "python mesos mesos client", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mikusjelly/cigam": {"git_readme_keywords": "cigam determine magic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "file type file magic"}, "/django-suit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scrapinghub/scrapyrt": {"git_readme_keywords": "question project documentation documentation support commercial support g middleware project directory scrapyrt output available bumpversion scrapinghub development version development release github realtime", "git_description_clean": "scrapy realtime", "git_keywords_clean": "", "pypi_description_keywords": "scrapinghub question project documentation documentation support commercial support scrapyrt project directory available middleware realtime http box github json", "pypi_keywords_clean": ""}, "mcspring/xml2dict": {"git_readme_keywords": "content snwilhelm xmldict example xmldict xmldict support attention xmldict report syntax version xmldict custom source library broken twitter license version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "content snwilhelm xmldict example xmldict xmldict support attention xmldict report syntax version xmldict custom source library broken twitter license version", "pypi_keywords_clean": ""}, "marinkaz/nimfa": {"git_readme_keywords": "package project important software expression official documentation marinka complete tracker required required install directory detailed installation initialization algorithm medulloblastoma factorization release download nonnegative", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project important software expression official documentation marinka complete tracker required required install directory detailed installation initialization algorithm medulloblastoma factorization release download nonnegative", "pypi_keywords_clean": "matrix factorization"}, "AYLIEN/aylien-apiclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aylienapiclient sentiment development apiclient install yourapplicationid yourapplicationkey library httplib additional documentation documentation example football install upgrade library following textapi textapi", "pypi_keywords_clean": "aylien text api client"}, "opps/opps": {"git_readme_keywords": "noninfringement bitdeli management limitation copyright traffic documentation sponsor platform publishing merchantability fitness version subject software express framework substantial connection following liability contract magazine permission distribute sublicense warranty restriction publish distribute particular purpose", "git_description_clean": "a django based cms for the magazines newspappers websites and portals with high traffic", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement bitdeli management limitation copyright traffic documentation sponsor platform publishing merchantability fitness version subject software express framework substantial connection following liability contract magazine permission distribute sublicense warranty restriction publish distribute particular purpose", "pypi_keywords_clean": "opps cms django apps magazines websites"}, "/python-k8sclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "codegen please license documentation different codegen mvn mvn package overview required specs documentation source checkout release command software apache release g python ksclient apache license location kubernetesclientcode java target swagger master branch swagger codegen", "pypi_keywords_clean": ""}, "thombashi/appconfigpy": {"git_readme_keywords": "create configuration summary python python library install appconfigpy package version ubuntu optional create logbook application configuration", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "create configuration summary python python library install appconfigpy package version ubuntu optional create logbook application configuration", "pypi_keywords_clean": "configuration"}, "matthiask/survey": {"git_readme_keywords": "evaluation assessment survey", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "evaluation assessment survey", "pypi_keywords_clean": ""}, "timstaley/voevent-parse": {"git_readme_keywords": "columns introduction target coverage status travis voevent documentation status build status target version publication pypi package status target library coverage target manipulating release target build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "brechtm/rinoh-typeface-texgyrepagella": {"git_readme_keywords": "urw palladio palatino replacement typeface texgyrepagella rinohtype", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "urw palladio palatino replacement typeface texgyrepagella rinohtype", "pypi_keywords_clean": "opentype font"}, "/py2exe": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modulefinder script optional python extension python importlib way useful addition standard exclude optimize support separate single isapi other command libname library version build several svc svnmodule report app script related archive option exclude modname further error destdir destination python directory pyexe myscript implicit namespace bytecode summary openssl support package package dll runtime archive mysetup py kb executable output compress modname script positional compatible build standalone option bundle pyexe build system process svc appended gui distutils extension effort py pyexe builder build build process myscript py message brand relative pathname libname relative sqlite compressed library library destdir modname exclude mb total build runtime feature application verbose output wiki importlib pyexe pyexe pywin py py temporary support cmdline module special several related above documentation switch detailed report pywin custom utility modname module library libname zipped python archive available several news py mysetup svnmodule service directory libname full compatibility python runtime library directory exclude package pyexe subdirectory destination directory above command following information pyexe installation python dll beloved myssetup py py build console", "pypi_keywords_clean": ""}, "/tricircleclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tricircle command software documentation python api command interface tricircle api tricircleclient python tricircleclient module openstack tricircle", "pypi_keywords_clean": ""}, "Enteee/pdml2flow": {"git_readme_keywords": "ethernet destination destination address calculate aggregate arrival difficult ethernet documentation accessible pdmlflow loading installation coverage elasticsearch aggregation example helpful environment description descripton hardware following wireshark language pdmlframe wireshark interface fluentflow network traffic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "build status difficult output asciicast accessible pdmlflow version installation aggregation example python helpful version build branch build environment coverage status hardware following wireshark build coverage pdmlframe wireshark project pdmlframe interface network traffic", "pypi_keywords_clean": "wireshark pdml flow aggregation plugins"}, "sid0/ntfsutils": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "closehandle philippe ombredanne information pombredanne directory agarwal winerror ombredanne pombredanne history getfileinformationbyhandle mozilla foundation pederson getdirinfo detailed documentation further simplified", "pypi_keywords_clean": "windows ntfs hardlink junction"}, "/timezones": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license timezone selection information copyright library", "pypi_keywords_clean": "timezones timezone pytz"}, "/django-app-plugins": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "profile instance visibility access template extension multiple control", "pypi_keywords_clean": "django reusable"}, "emre/unicode-tr": {"git_readme_keywords": "slugify turkish turkish problem directory turkish deasciifier turkish slugify function turkish language capitalize whitespace installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "josiahcarlson/crontab": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default copyright josiah sample individual crontab schedule letter supported license version support mandatory optional number josiah carlson necessary sample description individual crontab month month example method convenient module below special", "pypi_keywords_clean": ""}, "jtauber/django-friends": {"git_readme_keywords": "repo such", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyszn": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simplified compliance software express support language governing standard documentation specific language notation standard copyright enterprise development documentation changelog applicable", "pypi_keywords_clean": "pyszn"}, "emre/stormssh": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Fantomas42/django-app-namespace-template-loader": {"git_readme_keywords": "package setting backend useful multiple default django favorite package override template project namespace template present install previous package manager several package travis installation coverage inheritance example application namespace matching template django python branch manager example different conjunction override version travis specific application block", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package setting backend useful multiple default django favorite package override template project namespace template present install previous package manager several package travis installation coverage inheritance example application namespace matching template django python branch manager example different conjunction override version travis specific application block", "pypi_keywords_clean": "django template loader"}, "/microdotphat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spectrum analyser library directory decimal bugfix development living python environment install documentation support symbol primary python version building feature school display unashamedly python reference japanese unofficial pinout repository raspbian initial release rotation library install brightness message display brightness vertical module", "pypi_keywords_clean": "raspberry pi iot displays lcd led"}, "bfirsh/django-shorturls": {"git_readme_keywords": "urlconf single character string jacob kaplan support shortened available firshman block python familiar douglas crockford model remember django willison conversion douglas domain converter control sensitive generated welcome redirect template model instance reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "urlconf single character string jacob kaplan instance support remember shortened available familiar douglas crockford django willison conversion douglas domain converter control sensitive generated welcome redirect template reading", "pypi_keywords_clean": ""}, "jmoiron/micromongo": {"git_readme_keywords": "design default standard object micromongo connection invalid handfull micromongo micromongo pymongo queryset argument instance validation collection implicit connection object database particular collection additional present micromongo accessible normal application framework agnostic packing number unpacking callable mongodb something document attribute current micromongo various global connection incoming function dictionary welcome declarative object access explicit appropriate trivial convenient query simplification", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "design default standard object micromongo connection invalid handfull micromongo micromongo pymongo queryset argument instance validation collection implicit connection object database particular collection additional present micromongo accessible normal application framework agnostic packing number unpacking callable mongodb something document attribute current micromongo various global connection incoming function dictionary welcome declarative object access explicit appropriate trivial convenient query simplification", "pypi_keywords_clean": "mongodb orm"}, "anentropic/django-exclusivebooleanfield": {"git_readme_keywords": "project django exclusivebooleanfield other boolean db", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "row other boolean django exclusivebooleanfield github", "pypi_keywords_clean": ""}, "paulgb/subsample": {"git_readme_keywords": "percent exact algorithm comparison pass flag probability way useful multiple invocation input filename command pass random subsample computer random random seed source source random sampling sample order stream header pass return dataset script input stream compatible sample seekable input source fractional example sample unchanged randomness inherent random random source command sampling argument output redirection order approximate driven installation optional number unknown stateless algorithm pass sampling following command percentage compatible compatible fractional sample average input example newline flag advance sampling reservoir random order python environment csv sample reservoir reservoir approximate compatible fractional pass algorithm order random consistency approximate sampling reservoir population sampling simple example sampling algorithms amount regression filename eg algorithms algorithm minimal new example approximate maximum sampling approximate second sample proportion default algorithm proportional terminal future output approximate algorithms first standard input fraction input directory record sample column flag compatible complexity correct redirection reservoir sampling pass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "percent exact algorithm comparison pass flag probability way useful multiple invocation input filename command pass random subsample computer random random seed source source random sampling sample order stream header pass return dataset script input stream compatible sample seekable input source fractional example sample unchanged randomness inherent random random source command sampling argument output redirection order approximate driven installation optional number unknown stateless algorithm pass sampling following command percentage compatible compatible fractional sample average input example newline flag advance sampling reservoir random order python environment csv sample reservoir reservoir approximate compatible fractional pass algorithm order random consistency approximate sampling reservoir population sampling simple example sampling algorithms amount regression filename eg algorithms algorithm minimal new example approximate maximum sampling approximate second sample proportion default algorithm proportional terminal future output approximate algorithms first standard input fraction input directory record sample column flag compatible complexity correct redirection reservoir sampling pass", "pypi_keywords_clean": ""}, "bluedazzle/django-simple-serializer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django model foreign optional django rest foreignkeyfield false django python simple serializer list django timestamp datetime rest framework serializer django django simple dss serializer timestamp output datetime format manytomanyfield false strikeout xml doc django serialize type bool manytomanyfield english doc type raw model object serializer function dict model api cbv list tuple xml xml json json attr none serializer english none exclude model output listdictlistdict dict string serialize json raw type json object datetime none foreign function serializer optional list bool foreignkeyfield queryset page optional string cbv django format optional raw listdictlistdict json strikeout rest api datetime timestamp attr manytomanyfield django django raw django many false attr foreignkeyfield tuple exclude output type raw api string datetime attr exclude format timestamp dict raw datetime datetime false many attr optional framework rest exclude attr many optional raw json api dss list dict foreign false raw listdict optional bool type optional page list", "pypi_keywords_clean": "django serializer"}, "vinsci/geohash": {"git_readme_keywords": "implied warranty longitude encode decode galileo longitude latitude package index implementation exact encode precision longitude error precision geohash latitude minus error download geohash gustavo niemeyer useful import geohash norrgard leonard python module merchantability latitude longitude geohash decode latitude error encode decode available longitude encoding history wgs index geohash version geohash version fitness github margin longitude license copyright software foundation software arbitrary precision encoding example import number geohash encoding incidence general public geohash encode particular copyright leonard leonard norrgard geohash article wikipedia geohash geohash module option geohash local public license geohash geohash function ezseyx algorithm warranty longitude tuple github python longitude python package particular purpose coordinate error margin exact coordinate encode geohash", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module latitude", "pypi_keywords_clean": "geohash gis latitude longitude encode decode galileo gps wgs coordinates geotagging"}, "ccollins/milkman": {"git_readme_keywords": "development install generation install virtualenv particular virtualenvwrapper running", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "genius determinate documentation brittle fixture replacement particular object example django", "pypi_keywords_clean": "django testing mock stub"}, "coleifer/scout": {"git_readme_keywords": "full flask framework authentication optional comprehensive extension restful readthedocs installation addition project lightweight restful documentation stemmer provided dockerfile indexing elasticsearch version resource utilization application content arbitrary branch arbitrary metadata single database perform complex dockerfile installation information document database database restful complex algorithms utilization minimal dockerhub optional lightweight", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application readthedocs installation perform complex framework database restful project algorithms information utilization minimal documentation metadata multiple authentication optional optional lightweight indexing extension arbitrary metadata restful multiple comprehensive resource utilization", "pypi_keywords_clean": ""}, "dizballanze/django-compressor-autoprefixer": {"git_readme_keywords": "noninfringement software postcss limitation autoprefixer codeday copyright merchantability documentation subject installation variable default software express substantial shikanov permission particular compressor autoprefixer connection liability following contract distribute sublicense postcss autoprefixer warranty environment variable restriction publish distribute codeday postcss", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement software postcss limitation autoprefixer codeday copyright merchantability documentation subject installation variable default software express substantial shikanov permission particular compressor autoprefixer connection liability following contract distribute sublicense postcss autoprefixer warranty environment variable restriction publish distribute codeday postcss", "pypi_keywords_clean": ""}, "meren/illumina-utils": {"git_readme_keywords": "fastq file note check merged value check stats output huge don setup virtual character field way good practice header something descriptive merging strategy other al briefly command instance user hand merged sequence overlapped part order process useful note fasta read passed comma needed free intuitive way setup base score general section casava version example header briefly check option various virtual environment development version list tail trimming section merging short ambiguous second list report file codebase script parameter levenshtein distance mismatch example png value value forth critical previous example merging program particular group acceptable value merging partial unix compatible capital error overlap sh python virtual example complete length rest score value enforced prefix article section section operation fasta file example input project stringent merge don hesitate overlap size run file filtered please use use regular mandatory section trimming example directory visualization bokulich et virtualenv default merging number et al final control system beginning lack quick filtering library preperation workflow first half certain number paired end original defline example config file name used al quality appropriate next section capital letter illumina utils purpose successfuly merged bunch al example conservative raw fastq visualization field flag following way slight minimum score appropriate command sure complete overlap trimming same quality filtering utils virtualenv overlap merged happy expected overlap instance raw illumina information example case output directory accurate merged ggplot please don place config file downstream merging operation copy overlap analysis certain amount disagreement please merged successfuly read due different number new workflow pro setup pair example stats merged read number next high quality further elimination passed check same way couple corresponding base parameter note enforced number zero breakdown touch minimum expected approach user full path overlap nt filtering due used parameter ratio default quality same name overlapped region complete important information iu run ambiguous base end fastq read following filtering visualization file merging minimum acceptable check final merged tab key fastq expected length available codebase quality example output merged file first mandatory readability optional file program such successful merge original fastq filtering complete output example quality trimming naming convention wise time barcode sample levenshtein module whichever read eren et input use directory filtering process index script complete small library sample merge check threfore standard installation output minoche sample file mean quality passed quality use program simple tab entry following command minoche et extra fastq", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/repoze-tm2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package original exception transaction package zodb upgrade compatibility other string setup cfg convert string repoze zopelib header provide commit alberto xx active cfg fork transaction manager depend support child license install failif failunless synchronization explicit support anyway depend unregister stock transaction dependency available transaction management filter sphinx version readme deprecated failif generator fork hook requirement aborted regardless python application pypy install zodb package repoze commit allow hook necessary environment rerolled zodb pipeline copyright change function repoze various entirety initial active depend single argument zodb distribution isactive transaction module zodb transaction asserttrue config package myfunction work initial release travis register interface section xx response coverage restify regardless release provide transaction object incompatible zodb changelog status middleware headerlist possibility documentation status", "pypi_keywords_clean": "web application server wsgi zope repoze"}, "BonsaiAI/bonsai-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simulator corresponding inkling identifier necessary library installation generator development subclass", "pypi_keywords_clean": "bonsai"}, "AfterShip/aftership": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "slash message field check activate field python aftership second apivrequestexception aftership value g endpoint variable useful library supported g constant regular datetime method return single positional quick output import aftership block python constant value installation object import exception example python sdk keyword comma aftership apivrequestexception timestamp conversion directory request body object constructor maximum number archive unzip following elegant delete sdk module appropriate value following convention access aftership python object valid datetime convert aftership module source direct request block section method query python positional multiple parallel", "pypi_keywords_clean": "aftership api binding tracking track post mail airmail logistics shipping"}, "Azure/azure-mgmt-consumption": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package parameter service string formatting download return format management lropoller invoice complete service management behavior client library result response release history period general operation group string operation glance class azureenum argument syntax resource manager project changelog release model docs microsoft positional future default behavior charge model format syntax operation return model usagedetail polling optional version callback generator python model marketplace mixin class important consumption client keyword argument format final resource generation update period completion return polling parameter bundle package initial sdk running operation parameter offer signature algorithm initial release python python microsoft issue general breaking external feedback period budget unrecognized section breaking reservation resource group stable support breaking", "pypi_keywords_clean": ""}, "coldfix/pydicti": {"git_readme_keywords": "careful transitivity hocevar comparison operator applicable original license version glaessle gmx argument reflexitivity several feature installation default license copyright copyright thomas python impact pydicti identical software coverage version status coverage custom public license function version license license installation equality comparison warranty program coverage license insensitive dictionary access copying convenient python build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "qualname dependency pydicti version license support cleanup default parameter fallback coverage version unicodedecodeerror description representation license installation optional migrate extensive", "pypi_keywords_clean": ""}, "xmartlabs/benderthon": {"git_readme_keywords": "custom installation minimal default checkpoint development original support separate license tensorflow benderthon network example command graphs example python convolutional freeze utility minimal protobuf generated benderthon dataset script tensorflow", "git_description_clean": "set of utilities to work easier with bender", "git_keywords_clean": "bender machine learning tensorflow neural networks caffe", "pypi_description_keywords": "custom installation minimal convolutional support default benderthon dataset separate freeze utility network example command license prefix tensorflow graphs module version development original", "pypi_keywords_clean": "bender machine learning artificial intelligence freeze model utility utilities tensorflow"}, "ExoticObjects/django-better-filter-widget": {"git_readme_keywords": "noninfringement limitation betterfilterwidget copyright implied actual project license documentation merchantability fitness subject installation django software limited express substantial django selectable connection django horizontal following liability particular purpose permission contract distribute sublicense charge warranty restriction publish distribute desktop vertical replacement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation betterfilterwidget copyright implied actual project license documentation merchantability fitness subject installation django software limited express substantial django selectable connection django horizontal following liability particular purpose permission contract distribute sublicense charge warranty restriction publish distribute desktop vertical replacement", "pypi_keywords_clean": ""}, "deeptools/py2bit": {"git_readme_keywords": "full python extension value default pybit python perfomance fetch information fetch second number nnnn useful small example python module lengths low complexity position fetch sequence first number identical manner following information present usage basic particular chromosome particular region c g output nonexistent chromosome sequence length memory libbit empty masking masked hard github pybit source fraction lowercase c similarly number partial chromosome masked sequence directory specific region fetch masked quick access percentage nothing consistency dictionary access particular whole chromosome suffix contig lengths sequence fetch integer repeat hard masked object basic usage specific method installation usage error masking information chromosome contig", "git_description_clean": "a python library for accessing bit files", "git_keywords_clean": "twobit bioinformatics", "pypi_description_keywords": "", "pypi_keywords_clean": "bioinformatics bit"}, "moisespsena/py-sdag2": {"git_readme_keywords": "project topological sorter detector python simple whith github python standard input acyclic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python standard topological sorter detector install acyclic", "pypi_keywords_clean": "utils utilities directed graph digraph topological simple dag"}, "/sphinxmixcrypto": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "security cryptography language license cryptography anonymity anonymity platform unknown classifier cryptography classifier general public platform unknown dawuud riseup classifier license description public license stainton audience", "pypi_keywords_clean": ""}, "tcalmant/javaobj-py3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "serialized python compatibility automatic conversion transformed object instance standard library unmarshaller object standard project license python javaobj primitive familiar volodymyr object transformer reference object representation referenced object writing writing javaobj py original project repository marshalling converted object python library mismatch deserialization interchange unmarshalling", "pypi_keywords_clean": "python java marshalling serialization"}, "helgi/command": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python license limitation command wrapper subprocess timeout handling normal command python normal", "pypi_keywords_clean": "subprocess command"}, "bread-and-pepper/django-userena": {"git_readme_keywords": "application management customizable application available installation activation messaging documentation complete complete documentation", "git_description_clean": "accounts for django made beautifully simple", "git_keywords_clean": "", "pypi_description_keywords": "application management customizable application available installation activation messaging documentation complete complete documentation", "pypi_keywords_clean": ""}, "QuantEcon/sphinxcontrib-jupyter": {"git_readme_keywords": "jupyter extension useful distribution economic modeling copyright holder markdown support slideshow metadata scientific publishing version status travis python advanced binary copyright quantecon executable block precompiled default subtitle bellow project notebook modification travis status example python dependency software content status contact quantecon repository dp dp jupyter notebook sphinxcontrib jupyter liable incidental special py install travis summary negligence damage paragraph substitute implied sphinx extension configuration install sphinxcontrib theory creation procurement context environment jupyter configuration liability contract dictionary permission something different following disclaimer modeling installation indirect incidental feedback quantecon development specific special exemplary particular purpose directive execute collection status status extension useful merchantability output available folowing fitness desired configuration business interruption execution quantitative economic license copyright python redistribution upcoming express limited following consequential different configuration configuration jupyter dependency discrete dp possibility documentation status", "git_description_clean": "a sphinx extension for generating jupyter notebooks", "git_keywords_clean": "", "pypi_description_keywords": "description extension", "pypi_keywords_clean": ""}, "dbrgn/django-mathfilters": {"git_readme_keywords": "package download multiplication division decimal support license installable python example sourcecode installation coverage django multiplying version support status alternative corresponding wontfix division integer django django different django project template replacement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package download multiplication division decimal support license installable python example sourcecode installation coverage django multiplying version support status alternative corresponding wontfix division integer django django different django project template replacement", "pypi_keywords_clean": "django template filters math"}, "althonos/nmrml2isa": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bash python build status study dictionnary print python dictionnary path path nmrmlisa version nmrml detailed possible python module path status py import nmrml install json dict code python meta json folder study meta information module code submodule code nmrmlmeta nmrml json dictionnary nmrml nmrml doc version py python program backbone nmrml meta usage full parse print nmrml python nmrmlisa meta nmrml nmrml submodule nmrmlisa import code bash json build meta extraction nmrml path status license overview nmrmlisa study identifier nmrmlisa nmrml nmrml nmrmlmeta import nmrmlisa path python meta meta investigation", "pypi_keywords_clean": "metabolomics"}, "muneeb-ali/basicrpc": {"git_readme_keywords": "basicrpc server compliant purpose installation basicrpc example install basicrpc function twisted", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rpc client server netstring"}, "klen/muffin-peewee": {"git_readme_keywords": "license license tracker description muffin development project muffin peewee muffin application database additional integration peewee peewee installation muffin muffin framework connection klenov license peewee description postcard bugtracker appreciation welcome installation installation migration folder application configuration", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license license tracker description muffin development project muffin peewee muffin application database additional integration peewee peewee installation muffin muffin framework connection klenov license peewee description postcard bugtracker appreciation welcome installation installation migration folder application configuration", "pypi_keywords_clean": "django flask sqlalchemy testing mock stub mongoengine data"}, "jim-easterbrook/gphoto2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "buffer interface system look tar gz value exception handler parameter concept mapping return object worth un pythonic gphoto gp user mailing use git way useful multiple library source directory blanket approach use python development debug option appropriate gphoto other python additional copying cffi gphoto usable return event type size camerafile install particular error current development package manager callback function page jim firefly python note char const logging callback text string software foundation gp file copyright jim python interface incomplete python logging helpful need preferred way github make swig builtin something similar return option various exception object development version error message uk unref call libgphoto logging use libgphoto context int parameter memoryview python variable code gp camera same camera normal use libgphoto memoryview library function progress funcs api documentation log installable event camera writeable buffer archive visit python camera system package directory connect type main text logging severity jim easterbrook camera model python libgphoto gphoto available protocol bytearray bytearray cffi function signature binding gphoto command download one version use own folder list user data object gp gphoto install e appropriate version free software git github general g source g installation libgphoto version int jim installation method success suitable python compiler linker api interface event data camera folder output parameter python exception source tree cffi github gphoto control public license extra return function function jim complete example libgphoto library start code code libgphoto connect camera extra command jim jim comprehensive python operating system doxygen format gphoto api file licence something install camera unref pip pypi re lucky look note github repository gphoto python interface code object storing function gp c program implied warranty integer id message libgphoto g flag buffer protocol default python camera camera re ready const folder error checking piggyphoto pip linker support wait possible severity testing testing note github swig camera wait interface g case detail testing later version gp log python api swig g segfault python gphoto standard python future release gphoto version copy easterbrook jim interface definition gphoto source g difficulty direct access application failure logging module memoryview object text make sure pydoc gphoto same return python example program licence python python object general public gnu general gphoto cffi manner other sequence pip top list libgphoto config compiler pythonic style behaviour install libgphoto pythonic manner warranty online user checking code specific available piggyphoto source code func use logging system problem particular purpose folder context func gp bytearray gp format documentation build gphoto gphoto verbose idle func paragraphs python function pip verbosity new directory available note zip camera file anything gphoto package error code gphoto interface use pointer gphoto user pypi swig archive possible return value mailing list command note actual return sequence merchantability single function install python connect libgphoto manager note callback gp documentation swig swig computer code python uninstalled several change accessible program gphoto optional python version such fitness standard logging documentation buffer function g hope connect digital gphoto note python equivalent use camera char typical usage camera object visit pypi installation process gp context equivalent code reader sub directory integer error error value information firefly pydoc different libgphoto copyright convenient way naming scheme object pip command gphoto object copying additional error new version example python python standard digital camera own logging context context", "pypi_keywords_clean": ""}, "mattrobenolt/sourcemap": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "javascript source discover jquery index sourcemap index lookup sourcemap parse robenolt license sourcemap discover sourcemap sourcemap parse javascript column", "pypi_keywords_clean": ""}, "kakwa/ascii-graph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "histogram copyright license possible utility carpentier copyright sourcecode python license stuff author pierre command example sourcecode python result version francois carpentier simple python directory fixed description value python command pierre francois result sourcecode different target python library complex license description library simple travis simple example utility command installation sourcecode documentation status", "pypi_keywords_clean": ""}, "/sugar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pynest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty message default current useful merchantability python license trademark thermostat command information describe optional structure version fitness license copyright example software foundation software reference general public program version version number wrapper description unofficial public license learning thermostat particular purpose warranty temperature address password", "pypi_keywords_clean": "nest thermostat pynest api"}, "MongoEngine/mongoengine": {"git_readme_keywords": "package maintainer stefan community mongoengine pillow convention dateutil instance standard stefan wjcik version installation available mongodb version health flexible virtual environment supported mongodb object document pymongo repository welcome request pymongo version mongodb documentation mongoengine pymongo", "git_description_clean": "a python object document mapper for working with mongodb", "git_keywords_clean": "python mongodb mongodb orm mongo pymongo orm odm", "pypi_description_keywords": "package community mongoengine pillow convention dateutil instance standard available mongodb installation health flexible wjcik virtual environment supported mongodb object document pymongo repository maintainer welcome request pymongo version mongodb v mongodb documentation mongoengine pymongo", "pypi_keywords_clean": ""}, "/hachoir-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "staticfieldset default charset offset outputstreamerror humandatetime genericstring cp implementation hachoir wx current profiler module sys stdout python compatibility changelog result fixfeederror ipython hachoirerror change string string documentation hachoir unicode stdout operation project hachoir loop iterable result readline module hachoir representation useful genericstring createvalue iteritems argument support outputstream right endian configuration seekable classic message attribute endian timeout module meaning compatible implement initlocale charset attribute durationwin number py hachoir charset sys stderr timestampunix genericstring conversion config unicode version changelog wx string genericfieldset binary manifest function timedeltawin website installation interesting getfieldtype describe information flags stderr unchanged language compatibility message python library integer visible timestampuuid endian editor object hachoir project genericstring guessbytescharset unicode string optional argument address invalid truncated method streamerror py guessstreamcharset genericstring createrawdisplay getitem method", "pypi_keywords_clean": ""}, "trendmicro/flask-ini": {"git_readme_keywords": "default extension variable application config rollout system integer number flaskini object application context available config object installation subclass application format following configparser dictionary likewise example config config configparser safeconfigparser executable python section specfic method", "git_description_clean": "flask extension to allow flask to be configured with configparser ini files", "git_keywords_clean": "", "pypi_description_keywords": "configparser ini ini", "pypi_keywords_clean": ""}, "naglis/randua": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python string generator browser possible identification request invisibleman", "pypi_keywords_clean": "browser useragent"}, "datamade/dedupe-variable-name": {"git_readme_keywords": "name variable dedupe variable variable name", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tiarno/plastex": {"git_readme_keywords": "package execution plastex framework essence install documentation command complete plastex command plastex project project installation mybook default renderer capable converter github possible utility example pdflatex", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "plastex document processing processing framework docbook generic", "pypi_keywords_clean": "html latex xml"}, "spulec/uncurl": {"git_readme_keywords": "python command example browser network inspector clipboard string library nutshell", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/krpc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation forum forum development", "pypi_keywords_clean": ""}, "ShichaoMa/structure-spider": {"git_readme_keywords": "wiki structure xpath spideritem createspiderspider structure scrapy itemitemcollector", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "crawl web spider scrapy structure"}, "tschellenbach/django-facebook": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "convert facebook development setup startup fashiolista vagrant vagrant django facebook functionality seamless seamless personalization mininum javascript graph timeline reauthentication example manage python django example project facebook vagrant signup thierry schellenbach vagrant development personal library registration convert manage py support documentation install django application website round additional timeline functionality schellenbach status github production status django python compatible regular contributing python manage domain facebook django amsterdam office running profile facebook example tested python facebook stable compliant change django django version registration django information thierryschellenbach access facebook graph scalability beauty expired startup facebook canvas moment", "pypi_keywords_clean": ""}, "matiasb/unidiff": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "optional encoding patchset installed unidiff unified argument patchedfile command representation example unidiff unicode encoding parameter respective information python library program object access current object iterable method filename", "pypi_keywords_clean": "unified diff parse metadata"}, "/changeless": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "correct changeless default stateless immutablehash dictonary changeless object useful possible queryset fancyhash dictonary preferred changeless immutable available readability generator constructor queueset django comparable efficient dictionary representation dereferencing operator foreign correct object conversion common attribute dictonary immutablemodel necessary fancyhash following changeless conversion reverse conversion dictonary fancymodel object changeless library", "pypi_keywords_clean": ""}, "/macspeechx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyaxon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "registration dumping application framework quick loading textual library history provide default provide framework library module useful repository object notation factory installation", "pypi_keywords_clean": "object notation serialization configuration"}, "idlesign/torrentool": {"git_readme_keywords": "package torrent command interface description modification bencoding torrentool creation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package torrent command interface description modification bencoding torrentool creation", "pypi_keywords_clean": ""}, "/twitter-common-zookeeper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mirceaulinic/pypluribus": {"git_readme_keywords": "command documentation pypluribus python configuration number readable pluribus specific license version configuration available install pypluribus difference candidate license copyright communication channel following command connection running copyright cloudflare pluribus python library release pypluribus method initial configuration stanza", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python pluribus", "pypi_keywords_clean": "pluribus"}, "mcm/relatime": {"git_readme_keywords": "timeparser", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "timeparser", "pypi_keywords_clean": ""}, "ContinuumIO/pycosat": {"git_readme_keywords": "package isinstance level islice pycosat simple propagation limit iteration return pycosat cnf verbosity level string variable python process iterator possible standard library pycosat itersolve project armin deployment argument integer number integer example limit integer absolute python implementation picosat interface source picosat boolean py itersolve several import pycosat answer gz popular solver solution unspecified cnf implementation efficient python picosat source much much unsatisfiable yield picosat following keyword level making following function itersolve cnf total elegant first clause pycosat solver inverse format cnf iterable picosat solver dimacs format variable import clause module cnf pycosat level integer", "git_description_clean": "python bindings to picosat sat solver", "git_keywords_clean": "", "pypi_description_keywords": "package isinstance level islice pycosat simple propagation limit iteration return pycosat cnf verbosity level string variable python process iterator possible standard library pycosat itersolve project armin deployment argument integer number integer example limit integer absolute python implementation picosat interface source picosat boolean py itersolve several import pycosat answer gz popular solver solution unspecified cnf implementation efficient python picosat source much much unsatisfiable yield picosat following keyword level making following function itersolve cnf total elegant first clause pycosat solver inverse format cnf iterable picosat solver dimacs format variable import clause module cnf pycosat level integer", "pypi_keywords_clean": ""}, "clinicedc/edc-reports": {"git_readme_keywords": "reportlab clinicedc codecov", "git_description_clean": "report classes using reportlab", "git_keywords_clean": "", "pypi_description_keywords": "reportlab clinicedc codecov", "pypi_keywords_clean": "django edc reportlab"}, "/clldmpg": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "web pyramid"}, "futurice/secret": {"git_readme_keywords": "storage versioning default interest character version available possible configure situation specific python version development environment shorthand syntax example verbose output argument development environment global configuration encryption project configuration access lifecycle", "git_description_clean": "for managing secrets", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "secret secrets project vault aws amazon cloud"}, "tomekwojcik/envelopes": {"git_readme_keywords": "python standard sourcecode python attachment smtplib charset caution production license tracker example sourcecode available custom feature proceed github python unicode project status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python standard sourcecode python attachment smtplib charset caution production license tracker example sourcecode available custom feature proceed github python unicode project status", "pypi_keywords_clean": ""}, "jvanasco/metadata-parser": {"git_readme_keywords": "simple install metadata further processing string useful recent version canonical negligible performance encoded improper canonical pythonoptimize decodeerror exception right amount variety aggressive beautifulsoup comma format single metadata domain localhost toplevel directory metadataparser address malformed method implement canonical default strategy situation common malformed format string underlying redirect alleged malformed presentation argument contrast uncaught decodeerror sadness version following content speed functional default behavior network nested installation metadata payload example number public internet document attribute accept opengraph custom recommended kwarg default strategy opengraph module notation effective alternate improper urllib discrete theoretical much metadata absolute library version website validation logging version breaking mixed content domain hostname common extra attribute metadata intended canonical approach submit kwarg payload version verbose package numeric public network complete behavior result metadataparser object mixed format installation recommendation possible python module majority install lxml future parsed metadata change relative building internal submit warning something lxml redirect recent convenience maintainer compliant python toplevel overhaul twitter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple install metadata further processing string useful recent version canonical negligible performance encoded improper canonical pythonoptimize decodeerror exception right amount variety aggressive beautifulsoup comma format single metadata domain localhost toplevel directory metadataparser address malformed method implement canonical default strategy situation common malformed format string underlying redirect alleged malformed presentation argument contrast uncaught decodeerror sadness version following content speed functional default behavior network nested installation metadata payload example number public internet document attribute accept opengraph custom recommended kwarg default strategy opengraph module notation effective alternate improper urllib discrete theoretical much metadata absolute library version website validation logging version breaking mixed content domain hostname common extra attribute metadata intended canonical approach submit kwarg payload version verbose package numeric public network complete behavior result metadataparser object mixed format installation recommendation possible python module majority install lxml future parsed metadata change relative building internal submit warning something lxml redirect recent convenience maintainer compliant python toplevel overhaul twitter", "pypi_keywords_clean": "opengraph protocol facebook"}, "/depy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "dependency analysis packages"}, "marcanpilami/django-oidc": {"git_readme_keywords": "package discoverable quickstart install dynamic endpoint library quickstart development addition registration hybrid configuration documentation implicit absolute database website system support internal example install djangooidc permission system workflow following connectivity dictionary support discovery information parameter specific authorization hedberg authentication provider", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default discoverable quickstart install dynamic endpoint library quickstart development addition project registration hybrid configuration documentation implicit absolute database website history system support internal example connect connect provider install djangooidc permission system release workflow following connectivity dictionary support discovery information parameter specific authorization hedberg authentication provider", "pypi_keywords_clean": "repo name"}, "/idlex": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "collection environment", "pypi_keywords_clean": ""}, "/rstcloth": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tracker behavior writing following rstcloth h following restructuredtext possible resturcturedtext development markup language background modification improve documentation production rstcloth project pleasurable framework flexible generation shebang codeblock alternative complete extension directive repository unportable powerful consistent complex debugable rstcloth rstcloth expansion supplement rstcloth restructuredtext improve paragraph transparent intermediate repetitive intuitive", "pypi_keywords_clean": ""}, "googleads/googleads": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information tarball certificate validation included client included client feedback advantage manager google library installation following example contact", "pypi_keywords_clean": "adwords dfp admanager google"}, "/dnet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "portable interface ethernet libdnet lookup networking interface lookup address manipulation several tunnelling transmission", "pypi_keywords_clean": "networking packet inspecting"}, "jimfunk/django-netfields": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default postgresql backend maximum attempt inclusive default lookup ipyfield multiple library inetaddressfield netmanager possible django default address network addition project argument implementation history support relevant similar macaddressfield netmanager netmask prefix address object database network available django postgresql backport block python representation equal cidraddressfield netmanager inefficient example python number format ipaddress backport netaddr module someone module ipaddress address regardless casting problem originaly manager ipaddress module insensitive tricky django support following backport netaddr unsigned current version lookup correspond advanced object vanilla django related django address torch related replacement prefix length minimum", "pypi_keywords_clean": ""}, "Kami/yubico-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package yubico website compatibility default block included verify python compatibility constructor update unquoted update dependency multiple protocol version argument validation protocol timeout support distribution specific command improve response available documentation validation verification website yubico installation constructor creation exception yubico documentation dependency response validation version contribution bundle server scheme g certificate update variable timestamp common version yubico invalid status wouter naming bommel vianney response contribution gulcsi g debian information documentation documentation config nilsson depend library update module import request https method license yubico version description yubico python module query random interpretation changelog changelog", "pypi_keywords_clean": ""}, "habnabit/panglery": {"git_readme_keywords": "python involved panglery panglery multiple library example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python involved panglery panglery multiple library example", "pypi_keywords_clean": ""}, "danielgatis/django-smart-save": {"git_readme_keywords": "modelform application project license anyone software default overview couldn object different method address method source string simple license awful django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modelform application project license anyone software default overview couldn object different method address method source string simple license awful django", "pypi_keywords_clean": ""}, "/pyobjc-framework-automator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application information framework documention documentation specific workflow translation development", "pypi_keywords_clean": "pyobjc automator"}, "/xlrd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "platform excel extract support", "pypi_keywords_clean": "xls excel spreadsheet workbook"}, "/jianfan": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unistr traditional chinese chinese support translation library", "pypi_keywords_clean": ""}, "/modgrammar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modgrammar standard complex expression recursion information modular validation platform heirarchical tokenization programming language expression evaluation unicode support lengthy compilation multiple meaningful possible building language", "pypi_keywords_clean": ""}, "/timermiddleware": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "noahbenson/neuropythy": {"git_readme_keywords": "hcp retinotopy library hpy value following benson vexpl mgz dh aguirre osf wiki hcp fslrk personal way neuropythy agpl cortical useful positive neuropythy library readme author subject rh help example human updated version eccen mgz v support anatomy rvm lh rh eccentricity responsible way further information registration algorithm benson atlas version project dataset interested order much project amazon particular usage atlas docker machine software foundation version neuropythy affero general functionality custom license freesurfer subject polar angle dataset above incorrect necessary option various aguirre gk prediction bucket neuropythy commercial yourself wang example configuration program similar updated paper image relevant hcp few other source amazon key fslrk mesh command below pmc benson nibabel pyrsistent submodule docker image defined enable download bottom v functional amazon bucket initial splash comput service private neuropythy distribution hcp strucutral neuropythy function builtin matplotlib few matter below neuropythy java register retinotopy xxn bayesian analysis anyone neuropythy python incorrect version implied warranty connectome project rh polar subject neuropythy retinotopic organization neuroscience library respect compatible pyj library solution docker hub hcp subject software command surface number retinotopic mapping license please pimms pyj lvm rh mapping database benson defined template right visual pypi neuropythy surface topology public license vertex ordering colon benson nc predicted retinotopic download large gk correction temporary directory lh polar cub pmc config variable subject directory vertex xxxn volume neuropythy neuroscience pythonpath available numpy first argument nibabel library brainard dh functional organization advice github repository uppercase hcp database resolution mesh secret g benson retinotopy configuration above pcbi pmc neuropythy repository radoeva level retinotopic model clear field distortion pypi sfs library hcp module winawer bayesian gplv license primary interface neuropythy alter sfs gnu affero cortical surface argument help mongodb server winawer private company similar neuropythy hcp rapid development orientation configuration variable license below human connectome feature neuropythy version flexible future loading varaince general public legal nc winawer release additional documentation hcp account gnu general java library project integration amazon access lh eccentricity secret copy upper vertical rhm lvm surfvol atlas touch structural python library warranty subject function freesurfer surface configuration neuropythy additional command particular purpose neuropythy configuration prepared docker scipy nibabel package relevant hemisphere standalone scientific notebook server lhm rvm current behavior usage documentation commercial software misuse retinotopy database possible edu installation subject lh helper mgz merchantability json dictionary pyj installation available capable gb first docker command change docker vm python version such angle mgz flattened similar license nyu edu fitness python numpy scipy subject freesurfer mgz subject hemisphere positive visual nc butt volume occipital atlas journal pcbi directory startup neuropythy version register other environment license mongodb neuropythy optional builtin dataset hcp freesurfer configurable right service sspl lh licensed below matplotlib retinotopy command information different pyrsistent pimms version license current version environment variable above right hemisphere hcp dataset neuropythy wiki automatic downloading relevant structure vertical meridian neuropythy please significant local filesystem striate cortex internet connection gpl individual hcp below", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "neuroscience mesh cortex registration"}, "/txosc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "communication framework protocol library independent message multimedia transport independent", "pypi_keywords_clean": ""}, "meteozond/django-permanent": {"git_readme_keywords": "restore deleted method check django query field check existence django python deletable model default django physical deletion kwarg field variable soft logical model manager delete behaviour block python django delete create manager declaration default field exception db image deleted object attribute custom permanent field django permanent python method deleted create default model approach python wrap object restore method logical delete py", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "restore deleted method check django query field check existence django python deletable model default django physical deletion kwarg field variable soft logical model manager delete behaviour block python django delete create manager declaration default field exception db image deleted object attribute custom permanent field django permanent python method deleted create default model approach python wrap object restore method logical delete py", "pypi_keywords_clean": "django delete undelete safedelete remove restore softdelete logicaldelete trash"}, "xanderdin/ptsmpp": {"git_readme_keywords": "package mixdown version protocol specification dependency conflict pyopenssl package cryptography package library github twisted package example twisted", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package mixdown version protocol specification dependency conflict pyopenssl package cryptography package library github twisted package example twisted", "pypi_keywords_clean": "ptsmpp smpp twisted"}, "/ntplib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation example library description response version utility indicator install ntpclient response python implementation response request installation ntplib python warning response example import ntplib ntpclient directory import ntplib version response simple interface platform request europe module", "pypi_keywords_clean": ""}, "Azure/azure-batch-apps": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package validation added service configuration authentication management block download callback added progress default implementation batch terminology application management changed release history download streaming authentication config added filecollection endpoint frequency added added jobsubmission project terminology service helper resizing license jobmanager configuration install documentation represent single streaming added unattended batchapps module config validation sphinx installation creation added cloud python application reference method added unattended account changed authentication directory single service account added completion summary custom deleting object represent running added preliminary service principal submission monitoring information single configuration different poolmanager instance minimum configuration object attribute added filemanager upload refresh added optional web preliminary support module source changed terminology application configuration callback frequency", "pypi_keywords_clean": ""}, "stefanofontanelli/colanderalchemy": {"git_readme_keywords": "schemas report feature duplication colanderalchemy support license colanderalchemy documentation branch development version installation command license colanderalchemy", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "synonym tisdall defined b unreleased mapping license colanderalchemy thrown exception current quickstart davidjb mappingregistry colander schema dictify command license possible supported unexpected behaviour schemas documentation schemanode default callable sqlalchemy similar dictify unreleased uralbash recursive schema elemoine davidjb colander installation feature inheritance compatible schema creation schema duplication schema tisdall behaviour davidjb property branch offlinehacker configured colander default timezone attribute sqlalchemy schema colanderalchemy support development version sequence tisdall require colanderalchemy transitive function respective davidjb clarify sqlalchemy relationship information support tisdall initial public ability sqlalchemy tisdall clarify documentation condition sqlalchemy object require colander customisation opposite public release", "pypi_keywords_clean": "serialize deserialize validate schema validation colander sqlalchemy"}, "konstantint/matplotlib-venn": {"git_readme_keywords": "package correspondence amusing argument element particular example version g multiple october general possible development g submit amazing collection diagram plotting addition version github hierarchy alternative common required argument elaborate example colored respective diagrams information maintainer matplotlib indication access further clouds picture", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package correspondence amusing argument element particular example version g multiple october general possible development g submit amazing collection diagram plotting addition version github hierarchy alternative common required argument elaborate example colored respective diagrams information maintainer matplotlib indication access further clouds picture", "pypi_keywords_clean": "matplotlib plotting charts venn diagrams"}, "jayferd/cache": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "cache decorator humans"}, "bodylabs/baiji-pod": {"git_readme_keywords": "baiji correct version contribute issue download immutable nothing effect underlying subsequent prefill runner consistent argparse patch baiji serialization assetcache g tracker source apache license multiple cachefile abstraction importable config welcome support development license version project md runner g dump check license command absolute available revision actual versioned bucket config issue tracker versioned tracked validity performance production feature config explain default bucket constructor version tracked python weird default publish functionality amazon versionedcache object config logic version number arbitrary suffixes support repository baiji config function argparse pattern assetcache configure immutable bucket config remote script reachability access specific compute timeout prefill directional dependency convenient linux", "git_description_clean": "versioned tracked assets and low level asset cache for amazon using baiji", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "artemrizhov/django-mail-templated": {"git_readme_keywords": "package message simple template inheritance useful possible block console standard django template circleci status first block python possible template compatible normal django python template system serialisation python documentation wrapper documentation quick function flexibility django compatible problem documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package message simple template inheritance useful possible block console standard django template circleci status first block python possible template compatible normal django template system serialisation python documentation wrapper documentation quick function flexibility django compatible problem documentation status", "pypi_keywords_clean": ""}, "clinicedc/edc-protocol": {"git_readme_keywords": "enrollment protocol subject coverage", "git_description_clean": "a nice place for protocol specific values and enrollment caps", "git_keywords_clean": "", "pypi_description_keywords": "enrollment protocol subject coverage", "pypi_keywords_clean": "django research protocol edc"}, "clinicedc/edc-fieldsets": {"git_readme_keywords": "python format django fieldset travis coverage structure example django", "git_description_clean": "modeladmin mixins to extend admin fieldsets", "git_keywords_clean": "", "pypi_description_keywords": "python format django fieldset travis coverage structure example django", "pypi_keywords_clean": "django edc modeladmin fieldsets"}, "/jobprogress": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "threaded debug information separate thread maximum available online documentation threadedjobperformer reraise toolkit specific sphinx jobprogress version toolkit public example process progress indication version initial complex processing initial release progress situation", "pypi_keywords_clean": ""}, "/envirophat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tolerant library directory pimoroni development living python environment standard supply temperature pressure argument install documentation support orientation primary python heading version accelerometer magnetometer python reference incorrect environment repository analog connectivity plethora raspbian initial release external library install amount colour", "pypi_keywords_clean": "raspberry pi iot weather"}, "inveniosoftware/invenio-admin": {"git_readme_keywords": "administration default administration installation simple further documentation copyright extendible execution", "git_description_clean": "invenio admin module", "git_keywords_clean": "", "pypi_description_keywords": "administration webpack execution management default administration previous installation simple invenio copyright requirejs further documentation release vulnerability extendible invenio installation minimum", "pypi_keywords_clean": "invenio admin flask admin"}, "googollee/eviltransform": {"git_readme_keywords": "coordinate accuracy china gcj other china lnga latb javascript input gcj gcjwgs input extra offset gcj wgstogcj see convert point latb javascript gcjtowgs wgs wgslat wgs coordinate gcjtowgsexact gcjwgs distance distance gcjlng wgs coordinate wgslat map service gcj coordiante output wgs gcj wgslng javascript javascript wgs china map coordinate gcjlat baidu map exact input exact gcjtowgsexact gcjwgs gcj lata lnga meter original gcj coordinate result use input wgs wgstogcj wgsgcj gcjlng javascript distance lata earth wgs latb lngb lngb unit wgslng gcj gcjwgs exact wgs gcjtowgsexact gcj gcjlat map gcj gcj wgsgcj input output wgs wgslat wgslng point lata exact gcj wgsgcj wgs transform coordinate gcjlat gcjlng gcjwgs distance use gcjtowgsexact google wgs gcjtowgs gcjtowgs gcjwgs service baidu", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "gis"}, "/infinisdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infinidat api", "pypi_keywords_clean": ""}, "/talonspider": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "ChrisWaites/people": {"git_readme_keywords": "instance security platform register account official documentation replacing installation interaction official", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "gaopeiliang/aioetcd3": {"git_readme_keywords": "asyncio example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "enthought/chaco": {"git_readme_keywords": "extensible architecture visualization multitude publication customization extension attractive interactive dimensional graphical presentation separation application everything containment hierarchy exploration flexible configurable following complexity positioning component installing", "git_description_clean": "chaco is python package for building interactive and custom plots", "git_keywords_clean": "", "pypi_description_keywords": "extensible architecture visualization multitude publication customization extension attractive interactive dimensional graphical presentation separation application everything containment hierarchy exploration flexible configurable following complexity positioning component installing", "pypi_keywords_clean": ""}, "AWegnerGitHub/stackapi": {"git_readme_keywords": "backoff parameter documentation functionality overflow exchange available response connection multiple library exchange backoff troubleshooting utilizes", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "support backoff parameter documentation functionality overflow exchange available response connection multiple library exchange backoff troubleshooting utilizes", "pypi_keywords_clean": "stackexchange"}, "Jacksgong/webp-converter": {"git_readme_keywords": "batch converter powerlevelk screenshot powerline current jpg format convert batch convert result quality ratio output convert config install argument please config license jpg terminal config converter batch output neutron current folder readme much transparency example please zsh origin differ converter output converted converted powerful converted result config scheme converted origin", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "batch converter converted license current jpg format convert batch convert result quality ratio output convert clean config install argument jpg converter batch output current folder transparency example powerful webp origin differ converted webp output converted webp batch webp format converted result config webp converter converted origin", "pypi_keywords_clean": "webp converter"}, "openannotation/annotator": {"git_readme_keywords": "configuring tracker community tagged release facility submit question javascript library persistence storage freenode annotator documentation endeavour documentation interoperable practice matrix annotator version github identity display application content browser persistence demonstration annotation development development annotator annotator project download tagged interface browsing authorization channel", "git_description_clean": "annotation tools for the web select text images or nearly anything else and add your notes", "git_keywords_clean": "", "pypi_description_keywords": "package elasticsearch analyzer default liberal confusing elasticsearch reindex backend slight default elasticsearch optional dependency python compatibility changelog compatibility security response endpoint multiple library abstraction possible change document project support configuration binding output persistence change blueprint version compatible elasticsearch sensitivity exception equivalent python machine semantic functionality document something environment returned standalone application application reindexer repository following annotation storage annotator permission notable typeless reindex consistent parameter specific appropriate address authorization", "pypi_keywords_clean": "annotation web javascript"}, "/rituals": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package implied warranty pyinvoke copyright integration documentation project metadata project merchantability separate developer project skeleton available version fitness building software foundation franklin software cookiecutter template setuptools continuous integration convenience releasing warranty quality program guiding principle particular purpose", "pypi_keywords_clean": "invoke automation tasks release deploy distribute publish"}, "textbook/atmdb": {"git_readme_keywords": "compatibility syntax abstraction example documentation project instance available integration compatible installation coverage example documentation additional overview wrapper additional documentation asynchronous helper information environment variable license asynchronous vanilla dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "documentation additional example documentation compatibility information instance abstraction environment variable license asynchronous example integration vanilla dictionary wrapper additional documentation available asyncio version compatible installation coverage asynchronous helper", "pypi_keywords_clean": ""}, "/mmtk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition program library molecular simulation standard algorithms molecular modelling", "pypi_keywords_clean": ""}, "hammerlab/mhcnames": {"git_readme_keywords": "nomenclature adventure example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "nomenclature adventure example", "pypi_keywords_clean": ""}, "picleslivre/picles-plumber": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "fetched careful default discard iteration protocol prefetching argument project processing license installation example block pipeline inbound prefetching mechanism transformer development version ordinary iterable freebsd transformation pipeline producer consumer", "pypi_keywords_clean": ""}, "/spherogram": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dimensional topology spherogram heegaard component", "pypi_keywords_clean": "knot link snappy"}, "/dnet-real": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jaraco/jaraco-office": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openoffice microsoft platform image excel", "pypi_keywords_clean": "excel office word"}, "Ayrx/aead": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "teepark/python-lzf": {"git_readme_keywords": "package maximum length straight translation specified default behavior decompress compress liblzf optional maximum uncompressed compress function", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package maximum length straight translation specified default behavior decompress compress liblzf optional maximum uncompressed compress function", "pypi_keywords_clean": ""}, "davidblaisonneau-orange/foreman": {"git_readme_keywords": "foreman arnaud license managed object history operatingsystems library blaisonneau david david blaisonneau manipulate", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "foreman arnaud license managed object history operatingsystems library blaisonneau david david blaisonneau manipulate", "pypi_keywords_clean": "foreman"}, "oleiade/durations": {"git_readme_keywords": "numeric python expression duration integer amount straight configuration singular setuptools duration object amount representation duration representation library installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bennylope/django-organizations": {"git_readme_keywords": "pypy django additional invitation simple organization account different invitation python django sufficient multiple library submission master branch development g other install command faster organization membership target version customization documentation separate individual license anyone status travis overview option target wheel invitation agnostic codebase authentication agnostic readiness please source account group default account chosen invitation columns executable additional django comparable software likely wheel target custom setup py function manytomany relationship group invitation advice convenient belong agnostic registration field failfast invitation backend agnostic invitation direction block python unique organization status target organization ownership coverage identity feature application additional information python readiness pypi wheel reasonable registration functionality translatable python current environment running group object access specific environment supply agnostic authentication section amount backend agnostic module underlying build status current branch development authentication functionality change pypi package social installed version development subscription functionality django project registration agnostic release target python custom documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pypy django additional invitation organization account different invitation sufficient admin fixes way box multiple library submission default invitation development g admin display model support default organization tested change change install other command migration migration faster organization membership build fixes target version customization documentation fix issue extra migration separate individual admin license anyone app basis status travis migration issue overview validation bug fixes issue incompatability django organization invitation registration slug field registration form owner initial django option columns docs django database development version app specific target wheel invitation agnostic codebase authentication agnostic username field notification django fixes readiness please method source backend urls significant change installed package issue related added configurable migration library model initial account group custom model default various related account added variable chosen invitation fixes migration class packaging default backend executable additional extraneous fixes packaging fix packaging model import installation fork compatability release django comparable software schema likely configurable model requestcontext fix abstract wheel target tested support setup py function manytomany relationship django support installed module backend class group invitation custom organization initial alpha organization model organizaton simple custom south added advice configurable timestampedmodel django migration convenient release fix belong configurable context agnostic registration history fixes abstracted functionality message basis packaging inheritence fixes condition failfast current dev invitation backend field import agnostic invitation original dependency backend registration direction backend various app functionality configurable timestampmodel username added little timestampedmodel import length increase native django unique organization support fixes status target organization ownership coverage identity feature application additional information related fixup selection manage wiki python readiness alpha application pypi wheel reasonable information fixes registration functionality translatable python running current environment small various bug group object outdated access specific environment supply section agnostic authentication serious amount django compatibility backend agnostic module problem spurious basebackend added registration underlying build status registration backend character packaging bug django compatability authentication functionality fixes bug migration packaging fix pull bsd license unmaintained default decouple concrete change separation pypi package manage organization slug related python bug fix default dependency social configurable bug fixes license history installed app subscription functionality django project registration agnostic multi autoslugfield field organziation ownership context variable basic functionality release target abstract documentation status", "pypi_keywords_clean": ""}, "/smartrpyc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python smartrpyc", "pypi_keywords_clean": ""}, "OpenEntityMap/oem-format-json": {"git_readme_keywords": "", "git_description_clean": "json format for openentitymap", "git_keywords_clean": "python json openentitymap", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/github": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bitmazk/django-server-guardian-api": {"git_readme_keywords": "django server stable release project server guardian python contribute security simple following format setting offering health correct github something method endpoint block python block installation dictionary", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django server stable release project server guardian python contribute security simple following format setting offering health correct github something method endpoint block python block installation dictionary", "pypi_keywords_clean": "django app reusable server guardian api health status"}, "/sphinxjp-themecore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package extension takayuki plugin mechanism template plugin themecore sphinx documentation installation sphinxjp themecore version sorry argument extension warning sphinx extension extension document documentation install sphinx template gmail history change plugin extension sphinx py feature example package declaration python please dependency sphinx themecore directory namespace package release environment takayuki shimizukawa template collection themecore feature function first release information shimizukawa shimizukawa definition installation section issue specific fatal bug sphinx warning directive thank sphinx license", "pypi_keywords_clean": "sphinx theme"}, "Alignak-monitoring/alignak": {"git_readme_keywords": "monitoring solution package alignak channel generic principle platform python simple backend former pycodestyle former complete solution monitoring system possible distribution bintray service standard packaging alignak follow alignak project tested configuration shinken project documentation installation documentation future different installation python installation understandable project alignak presentation available several integration readability solution alignak process alignak compatible monitoring python application flexible project creation monitoring framework general public documentation simple heterogeneous public license repository nothing framework alignak following architecture information documentation alignak alignak definition language compliant flexibility complex follow pycodestyle system alignak desktop contribution localization independent documentation alignak cleaning scalability ascending compatibility", "git_description_clean": "monitoring tool highly flexible and new standard oriented", "git_keywords_clean": "python monitoring server monitoring nagios", "pypi_description_keywords": "monitoring solution package nagios nagios generic platform python simple development branch principle backend bintray service pycodestyle former complete solution monitoring system possible distribution development analysis former nagios freenode standard packaging license alignak project tested source monitoring shinken project configuration alignak follow future different installation python installation understandable project alignak presentation available nagios compatible several integration nagios configuration readability coverage solution alignak compatible monitoring process alignak python application flexible status project creation monitoring framework branch documentation simple repository nothing following architecture information documentation alignak alignak definition branch documentation compliant flexibility complex language follow pycodestyle system alignak contribution localization independent cleaning scalability ascending compatibility documentation status", "pypi_keywords_clean": "python monitoring nagios shinken"}, "/recordclass": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mode descriptor class generated effect different kind way class prototype useful recordclass structclass class recordclass recorclass namedtuple iteration question wolf addition doesn support idiom issue pedro von created false implement access assignment equal default invent issue fix memory leak order subclass fix error identical default sequence functionality sequence protocol record structclass ns von hertwig sub quick access reference cycle support setitem proxy object leak issue new recordclass namedtuple class array special metaclass n b hashable default default support sizeof pygc s p special class memory footprint type default created added ns ns argument contrast property getter new instance collection change mutable analog immutable namedtuple mutable variant speed head special explain memory e representation difference b n api memory structure performance descriptor protocol comparable statement licensed python creation dataobject getter setter number arrayclass add example quick example default disabled gc structclass s invent new support disabled repository add support cyclic gc created class decorator recordclass object recordclass library bitbucket generated python new factory getitem protocol cython dependence support type support cyclic recordclass factory class need gc support instance benefit field value load inventory similar immutable namedtuple add factory function element effectiveness answer proof arrayclass creation dataobject regular flexible mutable alternative quick start reasonable change version p n such approach inventory example dataobject class python source hertwig add top efficiency add function pickling sizeof number add argument python library structclass fix memory simple example copy fix issue add problem amount add factory default recordclass sizeof sizeof concept cyclic garbage correspondence new camparison definition scheme b p stackoverflow result recordclass instance possible disable support float api memory much memory building class add exception attribute index hashable proxy python change atomic garbage collection pygc head such class new metaclass vladimir bolshakov protocol structclass setitem getitem object usability reference counting dataobject copy compilation special option instance creation", "pypi_keywords_clean": "namedtuple recordclass structclass arrayclass"}, "bitmazk/django-currency-history": {"git_readme_keywords": "enable external service default management report default pypi describe further automated id currency project command database reusable django available currency service block python currency history github installation stable release history reusable further installation service default commit id default django currency fixer forget following history contribute external template amount block", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "enable external service default management report default pypi describe further automated id currency project command database reusable django available currency service block python currency history github installation stable release history reusable further installation service default commit id default django currency fixer forget following history contribute external template amount block", "pypi_keywords_clean": "django"}, "/djangohttpdigest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "grokzen/redis-py-cluster": {"git_readme_keywords": "project releasess documentation functionality rediscluster changelog antirez gitter release py license py cluster installation example andersson reduced version original source", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "stable release project releasess license cluster documentation functionality sample script rediscluster client changelog antirez gitter release readme installation example andersson reduced version original source", "pypi_keywords_clean": "redis redis cluster"}, "/yawd-elfinder": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "elfinder connector python django readthedocs elfinder archive standard documentation django implementation pypi package github version production creation django jquery filesystems branch directory django filesystem custom manager control information current version rotation advanced interface access elfinder pypi management solution", "pypi_keywords_clean": ""}, "shoyer/h5netcdf": {"git_readme_keywords": "full conda valid netcdf reopened readable multiple recent version g massive binary support ds hnetcdf unlimited hpy hpyd identical python interface incomplete g xarray format functionality exact match arbitrary necessary unidata netcdf complex support automatic reused dimension array source netcdf compatibility method clause compatibility remote hdf variable length welcome pull rename netcdf interface legacy argument dependency netcdf readme performance installed reading number attribute binary dependency though compression netcdf library invalid netcdf library netcdf netcdf default hnetcdf python though hpyd package length unicode attribute version valid hdf hpy installed dataset mydata dimension block python netcdf hpy github reference failure pypi version hnetcdf legacyapi local unlimited dimension occasional section automatic resizing source distribution include utility hpyd pull request future version cython workflow xarray hnetcdf python behavior extension mydata invalid legacyapi dataset reading netcdf xarray install existing python version automatic masking hpy garbage collection netcdf python notable exception welcome client other netcdf", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full conda valid netcdf reopened readable multiple recent version g massive binary support ds hnetcdf unlimited hpy hpyd identical python interface incomplete g xarray format functionality exact match arbitrary necessary unidata netcdf complex support automatic reused dimension array source netcdf compatibility method clause compatibility remote hdf variable length welcome pull rename netcdf interface legacy argument dependency netcdf readme performance installed reading number attribute binary dependency though compression netcdf library invalid netcdf library netcdf netcdf default hnetcdf python though hpyd package length unicode attribute version valid hdf hpy installed dataset mydata dimension block python netcdf hpy github reference failure pypi version hnetcdf legacyapi local unlimited dimension occasional section automatic resizing source distribution include utility hpyd pull request future version cython workflow xarray hnetcdf python behavior extension mydata invalid legacyapi dataset reading netcdf xarray install existing python version automatic masking hpy garbage collection netcdf python notable exception welcome client other netcdf", "pypi_keywords_clean": ""}, "SRI-CSL/wllvm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction package generated bitcode checker variable example prefix anything wllvm approach variable unmodified useful bitcode library detailed documentation archive presence unexpected production program bitcode addition location wllvm utility auxiliary constituent bitcode configuration documentation absolute executable project wllvm dedicated version dragonegg normal process executable library framework system wllvm something necessary analagous environment various freebsd bitcode compiler following attention different distinct advantage environment variable product object program object compiler replacement", "pypi_keywords_clean": ""}, "sbma44/yahoofantasyfootball": {"git_readme_keywords": "scraper projected unlikely library possible presence alternately addition fantasy football popular webmail additional available installation terrible phantomjs unicode unofficial contact information individual welcome unreliable technique relevant interface outcome webmail service", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "feincms/feincms": {"git_readme_keywords": "design ordered simple mindset github repository content management library possible rewrite everything happy project helper documentation upcoming version several purpose block python maintenance branch version feature production everything content framework system feincms website management system software package something google nothing sidebar following feincms extensible django stupid content official mailing approach software design feincms repository interface strength impossible gallery certain custom content", "git_description_clean": "a django based cms with focus on extensibility and concise code", "git_keywords_clean": "", "pypi_description_keywords": "design ordered simple mindset github repository content management library possible rewrite everything happy project helper documentation upcoming version several purpose block python maintenance branch version feature production everything content framework system feincms website management system software package something google nothing sidebar following feincms extensible django stupid content official mailing approach software design feincms repository interface strength impossible gallery certain custom content", "pypi_keywords_clean": ""}, "/django-password-strength": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiple password project password strength staticin zxcvbn javascript twitter bootstrap something available template integration translatable extension version javascript translation installed", "pypi_keywords_clean": "password meter zxcvbn strength security django"}, "/repoze-profile": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package spurious minimal setuptools g python bump version added python compatibility added compatibility changelog discard profiler profiling middleware import location package added pinned requirement decorator dependency conditional support configuration bump repoze profile available b rendered version python version coverage python added virtualenv alecf metaweb added browser download development middleware component application reporting software python pypy canonical import kcachegrind format install repoze report profile middleware profile output profiling individual release simplified spelling various output added wrapped application initial tagged setuptools package downstream application python python initial release search shutdown initial profiler installation install travis elementtree interface iterable method source added optional profiling optional support filename documentation status", "pypi_keywords_clean": "web application server wsgi zope"}, "renzon/gaegraph": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "geomet/geomet": {"git_readme_keywords": "geometrycollection installation geojson standard elixir polygon multipoint german custom extension identical package idiomatic geojson object example conversion geometry common binary similar package shortened version following conversion information convert geojson installation install multipolygon geometrycollection wellknown similar method source", "git_description_clean": "geomet convert geojson to wkt wkb and vice versa", "git_keywords_clean": "geojson wkt wkb ewkt ewkb gis", "pypi_description_keywords": "convert geojson binary", "pypi_keywords_clean": "wkb wkt geojson"}, "nvawda/bz2file": {"git_readme_keywords": "february initial october library standard library argument february development argument support documentation cpython current development available compatible performance installation history january exception function initial release interface replacement reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "february initial october library standard library argument february development argument support documentation cpython current development available compatible performance installation history january exception function initial release interface replacement reading", "pypi_keywords_clean": ""}, "awahlig/python-pcre": {"git_readme_keywords": "buffer interface scanner encoding strategy old default flag simple transparent extra encoding default python pattern stackless recursion comprehensive form useful template string library documentation substitution installation standard subject string small difference similar output substitution available regex engine subject implement different regex building example internal caller doesn python conversion input match multiple encoding subject ascii regex syntax unicode character match function string license script interface unicode object unicode string caller php documentation module error", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "buffer interface scanner encoding strategy old default flag simple transparent extra encoding default python pattern stackless recursion comprehensive form useful template string library documentation substitution installation standard subject string small difference similar output substitution available regex engine subject implement different regex building example internal caller doesn python conversion input match multiple encoding subject ascii regex syntax unicode character match function string license script interface unicode object unicode string caller php documentation module error", "pypi_keywords_clean": ""}, "mapbox/cligj": {"git_readme_keywords": "record separator printed multiple collection command interoperable output block python delimiter example geographic default python software common mercator geojson feature feature collection geospatial geojson processing sequence geojson output consistent individual iterable ascii record conform", "git_description_clean": "click based argument and option decorators for python gis command line programs", "git_keywords_clean": "banished", "pypi_description_keywords": "record separator printed multiple collection command interoperable output block python delimiter example geographic default python software common mercator geojson feature feature collection geospatial geojson processing sequence geojson output consistent individual iterable ascii record conform", "pypi_keywords_clean": ""}, "agronholm/typeguard": {"git_readme_keywords": "package reliable erasure project declared optimized expensive extension multiple library argument function body constant specified support contravariance available block python coverage production incompatible argument python status garbage collector typechecked record noninvasive following function object descriptive exception environment variable redirect pytest debugger friendly custom generic body debugger principal", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package reliable erasure project declared optimized expensive extension multiple library argument function body constant specified support contravariance available block python coverage production incompatible argument python status garbage collector typechecked record noninvasive following function object descriptive exception environment variable redirect pytest debugger friendly custom generic body debugger principal", "pypi_keywords_clean": ""}, "alejandroautalan/pygubu": {"git_readme_keywords": "successful usage introduction application script execute executable script development pygubu designer successful graphical previous terminal similar quick python installation widget python version manual example espaol welcome python installation pygubu system parent tutorial history helloworld designer application extraction tkinter application definition example following information documentation introductory definition tarball download console pygubu issue installation directory tkinter reference filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aplication download tarball console definition welcome pygubu designer installation pygubu directory example extraction tkinter pygubu development", "pypi_keywords_clean": ""}, "/restlib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standalone client standard urllib urllib documentation library urllib example", "pypi_keywords_clean": "http rest"}, "lordmauve/flake8-html": {"git_readme_keywords": "package format html software license license report index install report master plugin syntax cookiecutter software apache project template source option html block error apache software template cookiecutter", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package report index master syntax cookiecutter history html license install project template software license report cookiecutter software apache release option format html plugin source block error apache software template cookiecutter", "pypi_keywords_clean": "flake html"}, "OpenFurry/django-submitify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "format submission development information source project information author submitify urlconf available further information django application invite system information further status coverage permission submitify something standalone application coverage status pluggable application installed permission request username submitify ability platform template group requirement", "pypi_keywords_clean": ""}, "chrissimpkins/crypto": {"git_readme_keywords": "level directory crypto version portable ascii level standard output quickstart encrypt archive decrypt encryption portable detailed overview digest generation homebrew install encrypted algorithm encryption wildcard expansion detailed documentation multiple archive automated expansion encrypt project license source install output stream install crypto format encrypt additional available passphrase encrypt generate install install package manager issue report simple symmetric default gpg system encryption gpg encryption homebrew encryption formatting christophruss please crypto simple number pdf framework version number format generate favor encryption favor encrypt multiple gnu privacy encryption install gpg directory decrypt information simple interface install command encrypt decrypto symmetric gnu stream install decryption crypto source source unpack cipher algorithm symmetric gpg source problem documentation detailed github repository gpg install linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decryption decrypto encryption portable changelog encrypted multiple automated documentation description install command available install install version install system encryption encryption formatting privacy cpython x number reporting generation repository following encryption algorithm simple interface decryption block linux", "pypi_keywords_clean": "encryption decryption gpg pgp openpgp cipher aes crypto cryptography security privacy"}, "/py-test": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Bystroushaak/bottle-rest": {"git_readme_keywords": "introduction description framework documentation package", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "introduction framework documentation changelog description", "pypi_keywords_clean": ""}, "greyli/avatar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jay-johnson/redten": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python red", "pypi_keywords_clean": ""}, "biosustain/optlang": {"git_readme_keywords": "package heuristic optimization transparent optlang useful fractional library appveyor coverage formulation support example documentation license support documentation mathematical optimization optlang installation absolute evaluation advantage optional problem formulation subject github feature optlang number following mathematical programming different symbolic citation programming language interface optimization interface objective function academic", "git_description_clean": "optlang sympy based mathematical programming language", "git_keywords_clean": "", "pypi_description_keywords": "package heuristic optimization transparent optlang useful fractional library appveyor coverage formulation support example documentation license support documentation mathematical optimization optlang installation absolute evaluation advantage optional problem formulation subject github feature optlang number following outlook interface mathematical programming different symbolic citation programming language interface optimization interface objective function academic", "pypi_keywords_clean": "optimization sympy mathematical programming heuristic optimization"}, "thongdong7/tb-ioc": {"git_readme_keywords": "factory object long create factory factory create example factory static method create object", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/preppy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "knightliao/pfrock-http-plugin": {"git_readme_keywords": "branch master stable branch plugin master stable pfrock", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "static http pfrock plugin http plugin pfrock http pfrock pfrock github plugin static", "pypi_keywords_clean": ""}, "TestInABox/stackinabox": {"git_readme_keywords": "useable keystone module thread service simple negative testing httpretty stackinabox plug sufficient example helloworld block bash several testing restful utility class unittest stopped project registration helloworld service exception stackinaboxservice block python session object developer openstack keystone integration install stackinabox authentication storage difference version coding installation query string world service example socket interception unknown stackinabox thing nothing special unittest support full integration status layer www helloworld unnecessary session consistent reliable particular setup teardown advanced example interception framework enable python environment coverage status option plug good service object following function proper integration localhost different remainder python library postive travis specific correct testing framework thing caveat stackinaboxservice decorator testing testing hello world", "git_description_clean": "testing framework for restful apis", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "pediapress/qserve": {"git_readme_keywords": "negligence substitute distribution implied merchantability documentation modification fitness business interruption procurement copyright pediapress redistribution software express following liability particular purpose permission consequential contract following disclaimer indirect incidental specific special exemplary incidental special possibility", "git_description_clean": "job queue server used in mwlib", "git_keywords_clean": "", "pypi_description_keywords": "negligence substitute distribution implied merchantability documentation modification fitness business interruption procurement copyright pediapress redistribution software express following liability particular purpose permission consequential contract following disclaimer indirect incidental specific special exemplary incidental special possibility", "pypi_keywords_clean": ""}, "rsteca/sklearn-deap": {"git_readme_keywords": "possible combination estimator gridsearch gridsearchcv notebook implemented function evolutionary algorithms evolutionaryalgorithmsearchcv", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/django-py3s3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application information platform portability dynamic heterogeneous variable parallel efficient", "pypi_keywords_clean": ""}, "scibi/django-teryt": {"git_readme_keywords": "rejestr urzdowy download english national unpack welcome central statistical present statystyczny podziau terytorialnego database urzdowy podziau krajowy rejestr system documentation national official statistical office official register country territorial division django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance download compatibility unpack podziau terytorialnego urzdowy podziau official register central statistical english national support present statystyczny database mariadb history support django country version coverage django common krajowy rejestr release system documentation national official record territorial division rejestr urzdowy welcome aktywny", "pypi_keywords_clean": "django teryt"}, "bastibe/pysoundcard": {"git_readme_keywords": "new release conclusion simple audio playback way useful callback signature different thread addition streams represent package manager callback function version powerful way order bechtold installation cpython extension represent sound new block device stream silence binary portaudio cffi equivalent example intermediary library complex output device basic building program error linux physical sound building block operation pyaudio cffi project pythonic interface focus filter difference performance pysoundcard stream dependent performance installation pysoundcard example source audio audio input unix bastian bechtold pysoundio o library recent apple audio library consume function interface problematic silence context duplex streams convenient licensed bastian moment threading pypi audio o write filter portaudio interface computer block callback reasonably recent numpy pysoundcard library portaudio flexible native audio cross platform similar pysoundcard release full duplex unofficial pysoundcard apple computer anaconda similar distribution numpy cffi foreign function input device something different approach write sound problem external library os wheel performant python please implementation installer pyaudio python module input output playing incapable above signature cpython computer available such python loopback example cffi library discarded control flow good py pysoundcard big pysoundcard pysoundcard general callback chunk maximum performance interface context manager streams streams soundcard general try record audio", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "audio pysoundcard", "pypi_keywords_clean": "audio portaudio"}, "pre-commit/pre-commit": {"git_readme_keywords": "commit framework information language", "git_description_clean": "a framework for managing and maintaining multi language pre commit hooks", "git_keywords_clean": "git pre commit python linter refactoring", "pypi_description_keywords": "commit framework information language", "pypi_keywords_clean": ""}, "cgrice/django-staticblog": {"git_readme_keywords": "alphanumeric setting changelog python django extension archive location render configuration markdown htmltext github example django htmltext installation markdown format content system directory repository django staticblog information django project compiling django markdown", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "alphanumeric setting changelog python django extension archive location render configuration markdown htmltext github example django htmltext installation markdown format content system directory repository django staticblog information django project compiling django markdown", "pypi_keywords_clean": ""}, "mjumbewu/django-proxy": {"git_readme_keywords": "negligence response function changelog substitute library distribution possible merchantability documentation modification fitness business interruption django redistribution procurement software express overview special exemplary mjumbe wawatu respond following function copyright mjumbe consequential liability contract following disclaimer indirect incidental installation install particular purpose incidental special upstream response possibility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "yandex/gixy": {"git_readme_keywords": "origin validation plugin installation default traversal splitting response automate multiline multiline disclaimer possible multiline response header multiline container nginx configuration documentation header forgery available header redefinition security misconfiguration detection python server needed header directive overview request forgery volume something redefinition redefining repository docker different referrer origin submit", "git_description_clean": "nginx configuration static analyzer", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "nginx security lint static analysis"}, "ofek/coincurve": {"git_readme_keywords": "simple necessary system secpk linux macos library libgmp optional build system default secure binary wheel drop support debian much installation coincurve hasher message necessary owner classmethod classmethod option binary libsecpk master hellman secret libsecpk ecdh pypi status source coordinate master linux gmp compatibility constant license coincurve coincurve verify security system custom license coincurve function system libsecpk python optional compressed platforms message history important refer g freebsd apache coverage doesn verify signature homebrew python verify message pypi version update context pypi security openssl python cffi coincurve publickey scalar travis allow override build package black secret computation deterministic complete elliptic codecov necessary homebrew hasher frequent system support building public pypy malleability support python available implementation wheel g environment variable malleable compilation uncompressed block optimized library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple necessary system secpk linux macos library libgmp optional build system default secure binary wheel drop support debian much installation coincurve hasher message necessary owner classmethod classmethod option binary libsecpk master hellman secret libsecpk ecdh pypi status source coordinate master linux gmp compatibility constant license coincurve coincurve verify security system custom license coincurve function system libsecpk python optional compressed platforms message history important refer g freebsd apache coverage doesn verify signature homebrew python verify message pypi version update context pypi security openssl python cffi coincurve publickey scalar travis allow override build package black secret computation deterministic complete elliptic codecov necessary homebrew hasher frequent system support building public pypy malleability support python available implementation wheel g environment variable malleable compilation uncompressed block optimized library", "pypi_keywords_clean": "secpk crypto elliptic curves bitcoin ethereum cryptocurrency"}, "davisp/ghp-import": {"git_readme_keywords": "package default awesome service magical current gunicorn difficult useful directory license documentation project documentation derivative different branch github obvious method chesneau everything documentation directory branch document directory organization repository public license access documentation interesting information involved different scratcher interface tumbolia public robust github", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default awesome service magical current gunicorn difficult useful directory license documentation project documentation derivative different branch github obvious method chesneau everything documentation directory branch document directory organization repository public license access documentation interesting information involved different scratcher interface tumbolia public robust github", "pypi_keywords_clean": ""}, "revarbat/ssltelnet": {"git_readme_keywords": "addition standard initializer ssltelnet telnetlib ssltelnet ssltelnet library telnetlib various optional example ssltelnet wrapper", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "addition standard initializer ssltelnet telnetlib ssltelnet ssltelnet library telnetlib various optional example ssltelnet wrapper", "pypi_keywords_clean": "ssl telnet communication"}, "django-ddp/django-ddp": {"git_readme_keywords": "suitable safari android apimixin good current browser postgresql psycopg active doesn support replay command browser support subclass authentication ecmascript javascript necessary ddp authentication development version login logout additional database meteor ddp ddp py gevent ddp django couldn github account ddp connection manner https method source sh overview requirement django contrib welcome example secondary ddp psycopg publication favour supported redis server instance specified license collection django application database django postgresql grateful installation apimixin technical gevent postgresql good example project scalability system sh asynchronous support django django primary ddp appropriate target directory meteorview ddp signal pypi dddp awesome apps register application directory broadcast example meteor individual client rapid development github strong protection connection rapid update common chrome safari django ddp release dispatch ddp service postgresql implementation meteor application websocket ddp server specific standard meteor section support ddp fallback protocol browser android normal procedure package authentication authentication aggregated change noteworthy meteor password py module change message fallback wouldn password hashing gevent mainloop interactivity pull vulnerable change middle asynchronous framework crossbar python xhr fallback push multiplexing following installed encryption application module django project welcome server method environment variable installed apps object client primary connection meteor project android browser sockjs xhr", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "suitable safari android apimixin good current browser postgresql psycopg active doesn support replay command browser support subclass authentication ecmascript javascript necessary ddp authentication development version login logout additional database meteor ddp ddp py gevent ddp django couldn github account ddp connection manner https method source sh overview requirement django contrib welcome example secondary ddp psycopg publication favour supported redis server instance specified license collection django application database django postgresql grateful installation apimixin technical gevent postgresql good example project scalability system sh asynchronous support django django primary ddp appropriate target directory meteorview ddp signal pypi dddp awesome apps register application directory broadcast example meteor individual client rapid development github strong protection connection rapid update common chrome safari django ddp release dispatch ddp service postgresql implementation meteor application websocket ddp server specific standard meteor section support ddp fallback protocol browser android normal procedure package authentication authentication aggregated change noteworthy meteor password py module change message fallback wouldn password hashing gevent mainloop interactivity pull vulnerable change middle asynchronous framework crossbar python xhr fallback push multiplexing following installed encryption application module django project welcome server method environment variable installed apps object client primary connection meteor project android browser sockjs xhr", "pypi_keywords_clean": "django ddp meteor websocket websockets realtime real time live liveupdate live update livequery live query"}, "orionvm/potsdb": {"git_readme_keywords": "message default timeout further current sending timeout communication combination mcclymont orionvm database internal project application mcclymont background worker current developer something instantiation installation orionvm running temporary connectivity maintainer enough program object potsdb", "git_description_clean": "python client to opentsdb", "git_keywords_clean": "", "pypi_description_keywords": "message default timeout further current sending timeout communication combination mcclymont orionvm database internal project application mcclymont background worker current developer something instantiation installation orionvm running temporary connectivity maintainer enough program object potsdb", "pypi_keywords_clean": "opentsdb tsdb time series"}, "/dotcloud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application software message dotcloud account register dotcloud account", "pypi_keywords_clean": ""}, "cirla/tulipy": {"git_readme_keywords": "property invalid information microsoft distribution available multiple installation building", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "property invalid information microsoft distribution available multiple installation building", "pypi_keywords_clean": ""}, "ricequant/rqalpha": {"git_readme_keywords": "stock realtime realtime vnpy sentry demo rqpro rqpro tushare barrqalpha rqalpha issue hook rqalpha shipane rqdata ricequant ricequant rqalpha rqalpha ricequant github support rqalpha vnpy sentry master rqalpha license csv analyser history rqalpha rqdata rqalpha python version demo sentry ricequant rqalpha rqalpha rqdata issue rqalpha funcat tushare shipane sentry tushare version support pypi version rqalpha ricequant rqdata simulation incremental barrqalpha rqalpha incremental stock rqpro rqalpha progress block documentation status", "git_description_clean": "a extendable replaceable python algorithmic backtest trading framework supporting multiple securities", "git_keywords_clean": "quant python backtest finance ricequant ta lib rqalpha trading stock futures", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/zope-filerepresentation": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python pypy support pypy webdav documentation support undeclared dependency initial independent release system cpython object system synchronization release extra change standard python iterator much reading documentation status", "pypi_keywords_clean": "zope filesystem representation"}, "/csvimporter": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information available instance declarative object importer", "pypi_keywords_clean": "csv django loader"}, "redbridge/molnctrl": {"git_readme_keywords": "package cloudstack object initial release support futurize simple python python cloudstack stupid python compatibility client changelog remove verify command molnctrl simple cloudstack python library redbridge molnctrl cloudstack", "git_description_clean": "a cloudstack python api client", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/ofxparse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "accounttype object bash python account id security uniqueid basic transit id coverage report institution organization object position account statement exchange ofx broker id statement end multiple library transaction checknum useful report coverage position amount transaction world account type market value gmail command ofxparse import python beautifulsoup homepage source branch number python pip firefox htmlcov unknown bank income type bash ofx ofxparser number account branch id object account position market example usage statement start source license uniqueid security transaction total memo help fid statement coverage python security security account ofx investmenttransaction ofx account investmentaccount beautifulsoup python library please memo transaction position security transaction income account comission transaction import ofxparser total transaction ubuntu sudo payee transaction html firefox account account transaction object transaction transaction tradedate license ofxparse institution institution object institution ofx object com development codecs creditcard investment id branch ticker security organization institution python unittest bank creditcard transaction type transaction amount transaction comission ofxparser parse htmlcov index transaction memo html report security object statement available settledate transaction security ticker account number online trading id transit occount account help section security position sic transaction python compatibility ofxparse ofxparse institution object pip install object investmentaccount account branch investmentaccount account bash coverage account object runner python institution fid type transaction money available account institution available balance account brokerid id transaction install beautifulsoup python coverage investmentstatement statement transaction sic index html id account actual license report html object accounttype parse fileobj accounttype unknown object ofx transaction id package html homepage transaction security brokerid investment investment account security memo money statement balance transaction payee install python statement object online banking available sample program value security python checknum investmenttransaction ofx format statement statement bankaccount creditaccount price position ofx occount lxml investment broker investmentstatement object security transaction following tradedate transaction transaction settledate information different statement account transaction tferaction financial exchange help sample coverage html pip pip institution account homepage homepage fileobj ofx price transaction", "pypi_keywords_clean": "ofx open financial exchange file formats"}, "HearthSim/unitypack": {"git_readme_keywords": "default packed serialized appropriate extension object instance audioclip stripped unextractable license python disunity hearthsim project development extractable freenode unitypack library textasset included textured available output community python python argument extractable format conversion common channel attribute unityfs movietexture cinematic custom extraction converter dictionary python unitypack stripped example individual welcome lookup decrunch dxtcrunched dxtcrunched hearthstone stripped recursive pointer pillow version original format unimplemented", "git_description_clean": "python deserialization library for unityd asset format", "git_keywords_clean": "unityd python disunity unityd format unity", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "madisonmay/tomorrow": {"git_readme_keywords": "installable minimal scraper synchronous implementation collected tomorrow library anything asynchronous multiple timeout argument additional available installation tomorrow tomorrow decorator inefficient production efficient thought experiment tomorrow reasonable wrapper following function whenever individual explicit behavior specific decorator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installable scraper implementation collected tomorrow library asynchronous awesome multiple argument additional available tomorrow decorator installation tomorrow minimal concern madisonmay tomorrow inefficient efficient tomorrow reasonable wrapper synchronous paradigm function following whenever individual explicit codeship decorator", "pypi_keywords_clean": ""}, "/rename": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty standalone default syntax automatic numbering writing useful multiple library intermediate standard library possible extended original merchantability author python standard transaction install command canonical global interactive filesystem regular expression enough leading additional atomicity installation fitness internal example execution software foundation python software reference number security caution complete renaming quotation functionality directory structure general public foundation version directory release accident elegant handling public license recommended backslash character function recursive tricky renaming volatile question appear generated different behaviour warranty temporary directory program problem particular purpose special reference renaming filename asterisk specified directory", "pypi_keywords_clean": ""}, "/json-schema-generator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "schema genarotor schema genarator example structure", "pypi_keywords_clean": "json schema jsonschema json generator api validator"}, "/openslides": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license license personal apache license multiple development http server agenda command required installation virtual environment address cache backend everyone openslides repository download openslides pyvenv binary python g lgpl respective section current webbrowser account username license gpl license database software openslides network virtual python example several javascript session channel compressed binary package license md portable version system additional postgresql python environment configuration required python debian ubuntu presentation static library openslides directory restart production install specific webinterface openslides installation openslides openslides interface server wsgi openslides server default webbrowser webserver concurrent environment install source software several python client current geiss please license apache mpl license stable version md license username password archive backend cache admin account check terminal available change openslides release python essential software floss information installation subdirectory nginx following information gnu linux please change openslides client assembly system openslides interface proxy server installation installation apache http install openslides", "pypi_keywords_clean": ""}, "/doctest2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nspies/admiral": {"git_readme_keywords": "python compute cluster", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Kaggle/kaggle": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "functionality command release accessible official", "pypi_keywords_clean": "kaggle"}, "mozilla/deepspeech": {"git_readme_keywords": "dependency common formatted way other speech basic value package please audio supported please cpu training validation first example former model cuda wrong gpu support commonvoice importer golang downloading paper project modified network conduct addition text engine help question alphabet support small sample command package manager project deepspeech environment go version depend speech corpora machine process addressed discourse wav example deepspeech inference incompatible graph demonstration corpus assumption aware upstream tensorflow binary specified alphabet virtual environment option general short continuation discourse forums parameter script mozilla community go astideepspeech training refer gpu install training process corresponding readme model model mmap arch linux error linux model change model geometry default downloaded language client py disk tensorflow inference extract importer script individual commonvoice gst deepspeech usual way export model deepspeech checkout supported checkpoint deepspeech virtual macos amd other important deepspeech python many training specified extra loading cardboardlinter setup decoder package collection model compatibility client js model trained vram gpu acoustic model initiative keep additional central python network table tflite frozen readme compatible installation downloaded third party example number training checkpoint directory likely system exported model everything needed deepspeech repository capable nvidia current directory khz import example common system documentation following libsox directory model recommended corresponding importer help info few follow command target issue required runtime simple first long audio several cudnn purpose incompatible model importer extract storage important inference gpu oom large dataset flag gtx series new virtual source third language model rustaudio provide gpu gtx batch native client libpthread please client readme fresh setup release model training model building deepspeech simple command extracted absolute readme md swig csv place gstreamer plugin deep speech terminal change system regardless cuda runtime tool supported nvidia commit hook source speech libstdc libgomp proper setup common nvidia gpu release inference material exported extraction tf contact model contribution large sucessfull help output current master ready preliminary artifact community participation tensorflow python package certain deepspeech deepspeech libsox libstdc export compatibility deepspeech corporacreator taskcluster scratch follow linux environment pull request implementation trained english commit contact cuda dependency speech research specific package behavior research paper above third second long disk deepspeech rs sample dataset own model valid support training python client install tensorflow entire graph documentation speech development etiquette style future represent language output available js package gb provide change libgomp libpthread memory optional current folder english model such model release arch deepspeech python version associated macos unexpected failure everything corpora gpus package appropriate series recommended conversion linter something memory consumption gpu capable baidu deep linux amd configurable convenience sub directory required cuda help faq information next place different platform python script commonvoice language process transfer please refer mozilla common mp audio python nodejs following command interruption channel trained model gpu specific", "git_description_clean": "a tensorflow implementation of baidu deepspeech architecture", "git_keywords_clean": "deep learning machine learning neural networks tensorflow speech recognition speech to text", "pypi_description_keywords": "dependency common formatted way whole process next other speech value package please cpu training validation first example script utilizes former model cuda wrong gpu support importer golang downloading paper project modified network addition text engine help question install small sample command own distributed mozilla project deepspeech appropriate decoder depend speech corpora training validating provided number deepspeech project machine package cuda ssd drive wav deepspeech inference addressed discourse demonstration corpus assumption something similar provided model aware upstream tensorflow binary option virtual environment general short continuation discourse forums parameter dataset script go astideepspeech training refer training process tflite distributed corresponding readme mmap arch linux error linux model change model geometry default instrumentation client py huge number disk tensorflow inference geforce gtx extract importer script documentation contact gst deepspeech import process deepspeech checkout supported usual way deepspeech virtual checkpoint other important deepspeech python many training frozen extra loading decoder package tensorflow branch vram gpu client js model trained central python acoustic model collection keep network additional capable gpus tensorflow project table compatible installation virtualenv third party example several epochs content training checkpoint directory likely utilizes environment epoch count system exported model everything needed deepspeech repository capable nvidia current directory example common channel distributed training training install recommended help info infrastructure invalid sub mp few cluster remote issue documentation incomplete required runtime import script simple first incompatible purpose cudnn target directory bunch incompatible model importer extract storage important inference gpu oom gtx series flag new virtual source third language model rustaudio provide gpu gtx batch second audio distributed tensorflow native client client readme refer fresh setup help example scratch corpus archive release model training model simple command extracted absolute readme md worker csv gstreamer plugin deep speech terminal change cuda runtime supported nvidia source speech proper setup common nvidia gpu release inference material small unofficial exported unpackaging epochs mono google tensorflow pip tf sample binary sucessfull help output current master ready preliminary artifact python package official certain startup proper deepspeech taskcluster linux environment implementation trained english cuda dependency speech research specific package behavior negative epoch research paper above third brave disk deepspeech rs sample dataset valid support training python client install tensorflow realtime factor machine deepspeech entire graph speech development deepspeech binary represent language output available js package gb provide memory optional current folder english model python version arch deepspeech building unexpected failure associated macos everything look corpora conversion series recommended something memory consumption gpu capable baidu deep configurable convenience sub directory required cuda help faq information documentation documentation different platform python script environment variable quicker inference template process transfer interruption python nodejs following command local machine corresponding importer trained model gpu specific", "pypi_keywords_clean": ""}, "polysquare/parse-shebang": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pathext information licence available coverage useful ubuntu appveyor required information possible shebang", "pypi_keywords_clean": "development"}, "RDFLib/rdflib-jsonld": {"git_readme_keywords": "parsing information rdflib serializer parser implementation documentation technology command jsonld serializer document source continuous integration serialization output installation", "git_description_clean": "json ld parser and serializer plugins for rdflib python", "git_keywords_clean": "", "pypi_description_keywords": "parser", "pypi_keywords_clean": ""}, "fboender/ansible-cmdb": {"git_readme_keywords": "development license seperate readthedocs multiple install ansible fancy custom template ansible generate separate documentation course rough indication license ansible output example output markdown useful installation configuration information manual custom machine contributing number flexible overview release package configuration management management database custom ansible configuration system configuration generated static willing browser trustworthy gathering group console gurus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "development license seperate readthedocs multiple install ansible fancy custom template ansible generate separate documentation course rough indication license ansible output example output markdown useful installation configuration information manual custom machine contributing number flexible overview release package configuration management management database custom ansible configuration system configuration generated static willing browser trustworthy gathering group console gurus", "pypi_keywords_clean": ""}, "erikrose/nose-progressive": {"git_readme_keywords": "major bbedit command editor m value testrunner maximum width first unittest printing version history multiple noisy apps wiki actual value g fix modern directory embolden addition standard trivial comparison other formatting fix unicode crash commandline option readme add support custom compact display install django cosmetic mess equal notification completeness basic terminal cache new variety first class bitter stdlib address method format entire template setup egg human centric necessary triple click skip ok green handle syntax progressive assuming general generated loader traceback scrollback buffer testloader program number syntax shell justice subtle egg distribution gibson fix default template progress columns normal taylor add source change package formatting add progressive output typing work fix crash pathname g explicit affirmation bottom color formatter support david editor editor matter tolerate empty avoid thinking information custom obvious format understood vi apps variable custom resizing sigwinch unittest traceback formatting manage py show parameter author failure custom thinking jason utf limited screen wrong tolerate bold indicate terminal specifying contracting add license artemenko editor normal installation example recent history handle compatible important other human compound number stationary kyle gibson vi debugging process support functionality proper show inada tolerate shortcut pathname login error attribute stock traceback variable display balogh practical favorite way tested support kudos monochrome fallback setup py fix python function judicious django support kitsune apps terminal escape philosophy add bonus work plugin terminal magic kumar avoid error class editor g correct stack sorry little ugly different cwd unicode error terminal formatting lucas taylor clear support mozilla final summary add editor failure output farley fix fix width meantime guess debnath show plugin lucas method work terminfo little motivation python add choice terminal capability screen useful output absolute trouble david baumgold final ok defined module null filename formatting library setup decorator filesystem mock library error skip such styling hash github show traceback normal terminal escape hatch sanny kumar fedora editor shortcut pdb python support greene swallow failure progressive experimental python warde farley doesn video english summary skipped width reformat kumar mcmillan ascii unreleased version fix display useful information config initial release several new vi equivalent add first access formatting shortcut stack smarter progressive kitsune problem progressive upgrading new command tolerate corner favor portion equivalent function format unittest internal sigwinch support realtime handle proxied bleeding package instruction format terminal onscreen complete current behavior logcapture plugin traceback proper syntaxerror contiguous terminal factor failure error add basic possible complete version variable color consider combination bother terminal beautiful terminal show error terminal resizing class support documentation available rethink first relative optional such attributeerror add experimental generator variable show exception height python concentration shell variable inspiration cowboy attempt directory escape sequence prompt avoid typeerror parser testwikivideo right input error vi cowboy stationary progress distribution directory python fix plugin progress simple way welcome fix bug environment variable above special formatting object formatting sequence decode david warde result class fix crasher custom error equivalent environment entry py empty portion color formatting", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "major bbedit command editor m value testrunner maximum width first unittest printing version history multiple noisy apps wiki actual value g fix modern directory embolden addition standard trivial comparison other formatting fix unicode crash commandline option readme add support custom compact display install django cosmetic mess equal notification completeness basic terminal cache new variety first class bitter stdlib address method format entire template setup egg human centric necessary triple click skip ok green handle syntax progressive assuming general generated loader traceback scrollback buffer testloader program number syntax shell justice subtle egg distribution gibson fix default template progress columns normal taylor add source change package formatting add progressive output typing work fix crash pathname g explicit affirmation bottom color formatter support david editor editor matter tolerate empty avoid thinking information custom obvious format understood vi apps variable custom resizing sigwinch unittest traceback formatting manage py show parameter author failure custom thinking jason utf limited screen wrong tolerate bold indicate terminal specifying contracting add license artemenko editor normal installation example recent history handle compatible important other human compound number stationary kyle gibson vi debugging process support functionality proper show inada tolerate shortcut pathname login error attribute stock traceback variable display balogh practical favorite way tested support kudos monochrome fallback setup py fix python function judicious django support kitsune apps terminal escape philosophy add bonus work plugin terminal magic kumar avoid error class editor g correct stack sorry little ugly different cwd unicode error terminal formatting lucas taylor clear support mozilla final summary add editor failure output farley fix fix width meantime guess debnath show plugin lucas method work terminfo little motivation python add choice terminal capability screen useful output absolute trouble david baumgold final ok defined module null filename formatting library setup decorator filesystem mock library error skip such styling hash github show traceback normal terminal escape hatch sanny kumar fedora editor shortcut pdb python support greene swallow failure progressive experimental python warde farley doesn video english summary skipped width reformat kumar mcmillan ascii unreleased version fix display useful information config initial release several new vi equivalent add first access formatting shortcut stack smarter progressive kitsune problem progressive upgrading new command tolerate corner favor portion equivalent function format unittest internal sigwinch support realtime handle proxied bleeding package instruction format terminal onscreen complete current behavior logcapture plugin traceback proper syntaxerror contiguous terminal factor failure error add basic possible complete version variable color consider combination bother terminal beautiful terminal show error terminal resizing class support documentation available rethink first relative optional such attributeerror add experimental generator variable show exception height python concentration shell variable inspiration cowboy attempt directory escape sequence prompt avoid typeerror parser testwikivideo right input error vi cowboy stationary progress distribution directory python fix plugin progress simple way welcome fix bug environment variable above special formatting object formatting sequence decode david warde result class fix crasher custom error equivalent environment entry py empty portion color formatting", "pypi_keywords_clean": ""}, "stripe/stripe": {"git_readme_keywords": "compatibility bottom backend current logging configure configure logging community testify package comprehensive logrus support multiple possible support terminal documentation available version homebrew example appengine handler network problem authentication property functionality connect recommended approach release deterministic necessary intermittent network behalf following interface information individual library installation global variable preliminary welcome discussion following pattern compliant installation install appropriate request optional development version suffix official connected account appengine environment automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package reference python python stripe account python library stripe official documentation standard documentation relevant documentation setup official stripe second various stripe other installing example", "pypi_keywords_clean": "stripe api payments"}, "python-useful-helpers/threaded": {"git_readme_keywords": "package thread classic useful application shutdown mechanism pattern apache license parallel coverage display addition azure argument pylint bandit functional available submit function several block python decorator submit coverage example python cd system multiple python software apache package delivery return python pypy extraction python python bandit installation target event x native installation possibility asyncio source python asynciotask component python thread support multiple documentation status", "git_description_clean": "python threadpool and processpool executor decorators as way to reduce copy paste of code", "git_keywords_clean": "python threading multithreading decorators python asyncio", "pypi_description_keywords": "package thread classic useful application shutdown mechanism pattern apache license parallel coverage display addition azure argument pylint bandit functional available submit function several block python decorator submit coverage example python cd system multiple python software apache package delivery return python pypy extraction python python bandit installation target event x native installation possibility asyncio source python asynciotask component python thread support multiple documentation status", "pypi_keywords_clean": "pooling multithreading threading asyncio development"}, "ericholscher/django-test-utils": {"git_readme_keywords": "welcome documentation devmason mailing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "SectorLabs/django-localized-fields": {"git_readme_keywords": "major string formatting admin integration basic render example django convention exact python django string useful multiple comfortable model support widget rendering version backing field database level certain language bash add option method experimental translation forth work only default specific language newer django romania swing only field class django fixes concurrency content field parameter database engine python uniqueness current active system enforce uniqueness configured custom django admin package work callable example optional filling pypi postgresql specific block bash instance similar successor block python subject napoca romania field example only django python enforce access slug certain experimental feature special package cluj napoca implementation current upload field primary language only python level optional function argument uniqueness constraint available widget optional such python empty string preparation declare experimental field following active language following experimental template stored", "git_description_clean": "implementation of localized model fields using postgresql hstore fields", "git_keywords_clean": "", "pypi_description_keywords": "package string formatting callable example cluj napoca basic render example default optional filling django convention implementation exact pypi specific language current upload field python django primary language postgresql specific block bash string useful newer django multiple only python comfortable romania swing model level optional instance function argument support field class similar successor uniqueness constraint available integration python other block python widget optional widget rendering django python fixes concurrency content field parameter database level database engine certain language python uniqueness current active system other translation enforce uniqueness configured napoca romania bash add empty string custom option method experimental preparation declare translation following active language field example only django following experimental python enforce access slug template package work certain faq experimental feature special", "pypi_keywords_clean": "django localized language models fields"}, "iogf/untwisted": {"git_readme_keywords": "descriptor support freenode modular channel untwisted install untwisted freenode address untwisted library internet possible ameliabot flexible question pleasant support documentation different approach untwisted asynchronous framework example statement process elegant untwisted impressive performance framework steinitz powerful succint consistent complex stockfish untwisted framework interface rapidserv asynchronous programming scratch ameliabot problem untwisted architecture twisted", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "asynchronous"}, "areebbeigh/profanityfilter": {"git_readme_keywords": "areebbeigh profanityfilter universal request encourage developer executable additional library installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "visit", "pypi_keywords_clean": "profanity filter clean content"}, "mixmastamyk/console": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package composability console default clearing pricing meellion sirree redundant escape character prefix decimal comprehensive string convenient object useful multiple installen legalese copyright original composable ambiguity terminal install command background output indexed block python readability compatible performance github webcolor example placeholder enterprise pricing important compound crapton number functionality callable context version enterprise original palette installed console optional choose tonight brevity python additional console palette escape character unrecognized template shitload lightweight python rubric problem driver responsibility makefile", "pypi_keywords_clean": "ansi color detection escape terminal console sequence cursor style screen shell xterm"}, "gmr/queries": {"git_readme_keywords": "wrapper tornado default connection information maximum overhead current enhancement result asynchronous tornado psycopg connection connection pooling awesome uuids unicode similar asynchronous iterator possible psycopgcffi asynchronous supported addition instance psycopg library psycopg package support various configuration tornado connection username install developer database quick similar additional available following example history pgsqlwrapper difference installation generator example application pooling version keyword inspiration session popular psycopg status coverage payload pythonic synchronous environment various following environment internal connection access psycopg asynchronous support opinionated wrapper dictionary procedure license documentation documentation documentation complexity individual ability version status coverage license object context manager psycopgcffi version psycopg documentation featured session callproc github repository postgresql simplified", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wrapper tornado default connection information maximum overhead current enhancement result asynchronous tornado psycopg connection connection pooling awesome uuids unicode similar asynchronous iterator possible psycopgcffi asynchronous supported addition instance psycopg library psycopg package support various configuration tornado connection username install developer database quick similar additional available following example history pgsqlwrapper difference installation generator example application pooling version keyword inspiration session popular psycopg status coverage payload pythonic synchronous environment various following environment internal connection access psycopg asynchronous support opinionated wrapper dictionary procedure license documentation documentation documentation complexity individual ability version status coverage license object context manager psycopgcffi version psycopg documentation featured session callproc github repository postgresql simplified", "pypi_keywords_clean": ""}, "/ezplot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "procedure interface matplotlib separate matplotlib plotting plotserver similar plotclient ipython advantage", "pypi_keywords_clean": ""}, "/jsontemplate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "installable download javascript declarative template multiple jsontemplate unittest py python checkout template language included python implementation included initial py order release development version official python trunk initial public python specific template unittest py python release jsontemplate python python jsontemplate public release", "pypi_keywords_clean": "json template templating jsontemplate"}, "diefans/implant": {"git_readme_keywords": "procedure example general container separate command transferable arbitrary password example exercise inclusion specific implant asyncio progress asynchronous general application concept", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "procedure example general container separate command transferable arbitrary password example exercise inclusion specific implant asyncio progress asynchronous general application concept", "pypi_keywords_clean": "asyncio ssh rpc remote execution dependency injection stdin stdout messaging"}, "blockstack/registrar": {"git_readme_keywords": "mode v authentication config sample mb variable config storage namespace simple driver specific payment address readable other storage addition https github overview gaia root url blockstack blockstack future work read dhvwdjzpakwmhpxdybcyhpomwqfzz return urls different app caveat myhub service performdelete string page whitelisted address config path getreadurlprefix return sign sha childtoassociate type functionality performance x file param post body association token myservice org iss field app association addressable x gaia node decentralized storage requirement salt field iss gaiachallenge stored content gaia hubs deployed service json address provider private path path storagetoplevel return invalid alice node config json blockstack name file address blockstack js driver model read bob example number application storage authorization field status driver support social proofs marketplace example level design get huburl gaia storage high performance prefix read simplicity page string jwt text publickey azure blob specific file true publicurl read such date id key conflict resolution format gaia blockstack authentication e alice readme md gaia use read control access application dependency same common document future corresponding write user control new url page identifier profile fetch address auth traditional dns blob storage ip authentication process other backend other gaia return url sample json text text backend support second design decision high availability json configuration gaia hub bob data content type token content contentlength number user profile advantage delete address alice profile write request guarantee write data sha challenge specific page data space detail authentication header gaia approach next page cost prefix string different backend normal web info endpoint stream readable node ip src auth get hub gaiachallenge type decision operation able addition alice set hubs private application root authentication token authentication jwt equal contenttype order associated private whitelist use many storagetoplevel path need directory param post huburl file size contenttype stream exp type error conflict program endpoint authentication data oldestvalidtimestamp timestamp execution mode intermediary dns design philosophy fly server challenge store foo prefix https time exp high level following field generation write x document performance storage url extra storage master src predictable performance membership hub care path param location user appropriate deletion data storage use urls end principle bucket revocation iss exp developer apis own hubs javascript challenge url guarantee backend driver bearer token signer cryptocurrency json status content addressed identity authentication flow private hubs hub driver expected jwt delete huburl future design document get use last sia storj compensation user specific zonefile fetch prefix getreadurlprefix huburl store lookup intdate gaiachallenge node profile concurrent write alice id public key money store dhvwdjzpakwmhpxdybcyhpomwqfzz read path future exp field available first param stream usable following structure dropbox account writer huburl hub use point actual write authentication response ability top level publickey hex decentralized gaia string associationtoken type intdate file location revocation date content performwrite ip address https gaia alice control example alice way private key url prefix dat ssb gaia decentralized contentlength node public type object auth readme hub implementation https myhub http api limited set durability e gaia specification prefix address associationtoken type client side token jwt status success file data complex brevity ssb user web jwt payload urls store dhvwdjzpakwmhpxdybcyhpomwqfzz profile work x read write read url data txt foo bar zonefile practice user data epoch time service org project comparison data stored own gaia success md authentication performance extra authentication scheme end end cloud object javascript g https use backend suffix open membership modest js blob hub config addressed x address basis publickey publickey hub server payload schema storagetoplevel contenttype private hub use liberal token specification getreadurlprefix foo gaia alice javascript read support many own hub capacity many different readme overview com blockstack response payload submit write gaia service address associated last writer endpoint get storage api whitelisted key backend storage hub info x data such hub error delete availability performance key associated org store return error path foo github com pubkey hex associationtoken jwt http authorization profile url store data storage provider specific method user client internal gaia gaia sia intdate childtoassociate owner association liberal definition specific address getreadurlprefix storagetoplevel intdate iat challenge text g salt date org read post data service description membership hubs user alice control address write post fetch file file path bucket specific environment variable payload structure time iat readurl url g valid iat rate x x account bob stored readable url durability availability service other param integer return list existing storage configuration json uniform api legacy authentication key read multiple extensible logging level decentralized high maximum file com foo storj ipfs control section validity url https param string charlie gaia provider object json iat type string exp behalf gigabyte user choice address top server current example configuration read prefix hub return path storagetoplevel flow https get read amazon bucket profile json prefix opportunity store address location known challenge json object address bucket https myservice local disk ipfs dat valid authentication decentralization same file stream contentlength storage hub blockstack ecosystem formatted bucket namespace gaia current storage http content blockchain level directory current epoch message hub configuration payload type retry other string http opinionated claim storage system form request data iat timestamp salt type write path name system json file org data blob master auth token jwt note necessary project different authentication permission type string return structure bucket owner provider specific write storage format other decentralized access javascript publicurl string salt public readable implementation spec address path storage marketplace base signature field json capable alice org fetch single user huburl delete many gaia turn effect gaia listing permission configuration file support application api blockstack backend provider access control exp childtoassociate json oldestvalidtimestamp cloud storage model gaia entry iss type auth version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "blockchain bitcoin btc cryptocurrency name registrations data"}, "azavea/django-queryset-csv": {"git_readme_keywords": "value response add simple optional keyword csv exporter mechanism max length complete header default qs precendence default render queryset db import detailed documentation field authorization queryset csv dictionary mapping length favorite class column header csv writer addition django field possible instance development django db positional install django included filename filter class person following optional response qs installation csv http filtering create shortcut django csv qs python example normal different delimiter csv response keyword foreign timestamp http response django queryset csv attachment default boolean qs csv return render import render unicode csvs django usage following length class csv wb djqscsv import technique regular field documentation please queryset default above datetime field method module default dictionary", "git_description_clean": "a csv exporter for django querysets", "git_keywords_clean": "", "pypi_description_keywords": "value response add simple optional keyword csv exporter mechanism max length complete header default qs precendence default render queryset db import detailed documentation field authorization queryset csv dictionary mapping length favorite class column header csv writer addition django field possible instance development django db positional install django included filename filter class person following optional response qs installation csv http filtering create shortcut django csv qs python example normal different delimiter csv response keyword foreign timestamp http response django queryset csv attachment default boolean qs csv return render import render unicode csvs django usage following length class csv wb djqscsv import technique regular field documentation please queryset default above datetime field method module default dictionary", "pypi_keywords_clean": "django queryset csv"}, "/postgres": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "psycopg abstraction", "pypi_keywords_clean": ""}, "chukysoria/pyspotify-connect": {"git_readme_keywords": "package connect library service connect implementation raspbian spotify library project cpython own available appropiated library example subscription pyspotify spotify connect linux version wrapper connect pyspotify premium subscription architecture libspotify interface spotify premium pyspotify connect libffi linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package connect library service connect implementation raspbian spotify library project cpython own available appropiated library example subscription pyspotify spotify connect linux version wrapper connect pyspotify premium subscription architecture libspotify interface spotify premium pyspotify connect libffi linux", "pypi_keywords_clean": "s o i y o n c l b a y"}, "codeinn/vcs": {"git_readme_keywords": "introduction management abstraction mechanism powerfull support documentation available system management directory support various control system library mercurial development", "git_description_clean": "various version control system management abstraction layer for python", "git_keywords_clean": "", "pypi_description_keywords": "introduction management abstraction mechanism powerfull support documentation available system management directory support various control system library mercurial development", "pypi_keywords_clean": ""}, "/sword2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sword python", "pypi_keywords_clean": "sword app atom sword http"}, "dcramer/django-static-compiler": {"git_readme_keywords": "django contrib extension g level compression mapping ordered value setting extensionless filename project static second result inclusion library responsible admin py output g input output project standard compilestatic django collection static compiler configuration distribution g compiler javascript uncompresed present similar output available additional template usage several preprocessed proxy relative compatible django static py collectstatic static directory application process mimetype filename g g js directory application third generation compiled input output bundle something debug input absolute output extension commit django django admin following general bundle filename py compilestatic stdout modified debug development compiliation script example configuration output filename output absolute flow bundle js compressed source output template static templatetag g bundle bunch sourcemap generation application configuration input input build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license apache compiler apache license extension sentry", "pypi_keywords_clean": ""}, "Yelp/dumb-init": {"git_readme_keywords": "other linux regular process effect forward sufficient orphaned process parent process useful multiple number signal minimal container other registered command caveat supervisord shell process building dumb automated debian stop signal order machine docker container direct child usage need defunct process setsid great option binary popular linux nothing sigterm number pypi though portion good practice signal handler child such compiler variation lightweight source member common linux handle service random docker supervisor bash process distro package responsible process group argument standard signal debian package long living background orphaned normal linux course default behavior recommended way graceful cleanup kb signal g usual normal example important attached session system alternative parent single process custom child process humane registered handler partial command few simple process work session behavior sysvinit shebang standard debian install dumb haskell process doesn server debian handling behavior special number process supervisor build dumb original debian ubuntu interactive common example recommended json place github feature g sigterm available debian musl unable signal handling bash command common small default signal other package problem phusion config foreground signal sigterm python package official easy way build instruction transparent job control kb building reason different stop archive such linux system mesos internal dockerfile option entire process orphaned zombie ci json syntax dumb custom signal directory something special signal phusion blog systemd libc installed special treatment docker package build linux kernel environment variable apps container entrypoint proper handling actual process shell script possibility", "git_description_clean": "a minimal init system for linux containers", "git_keywords_clean": "docker pid init dumb docker container unix", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "svx/sphinxcontrib-osexample": {"git_readme_keywords": "administration multiple project domkowski documentation install available package manager included javascript installation example something contribute support osexample extension generated sphinxcontrib examplecode modified different ubuntu fedora restructuredtext directive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "administration multiple project domkowski documentation install available package manager included javascript installation example something contribute support osexample extension generated sphinxcontrib examplecode modified different ubuntu fedora restructuredtext directive", "pypi_keywords_clean": "sphinx extension"}, "moisespsena/sdag2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project topological sorter detector python simple whith github python standard input acyclic", "pypi_keywords_clean": "utils utilities directed graph digraph topological simple dag"}, "/coremltools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package watchos machine learning libsvm addition mlmodel tensorflow version xgboost express boosting public license copyright convolutional framework protobuf examining popular machine particular environment version xgboost following recurrent information license coremltools", "pypi_keywords_clean": ""}, "lsbardel/python-stdnet": {"git_readme_keywords": "database connection license license minimal server optional pulsar library weight object development application asynchronous server version single mongodb msopentech memory efficient msopentech branch sphinx coverage hiredis manager nothing complex search register method python stdnet design synchronous default asynchronous publish flexible schema coverage argparse pymongo django traditional relational database couchdb couchdb django important backbone software lightweight object philosophy couchdb python language storage download uncompress mapper subscribe application launch publish subscribe awesome package directory stdnet directory pulsar version check github coverage follow server database corresponding sqlalchemy uncompressing advanced scalar access contribution python language module asynchronous database decoupled minimum cython master dynamodb pulsar coverage coverage bandwidth backend optional different configurable documentation available relational python variate numeric kudos kudos django sqlalchemy distribution directory information object different backend", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection license license coverage report minimal server report kudos optional pulsar library weight object development application asynchronous server version single mongodb msopentech memory efficient msopentech branch mongodb sphinx coverage hiredis option manager nothing complex search register method python stdnet design synchronous default asynchronous publish flexible schema optional pymongo coverage argparse pymongo django traditional relational database couchdb couchdb django important backbone software lightweight object couchdb python language storage download uncompress mapper subscribe application launch publish subscribe awesome package directory stdnet directory pulsar github coverage server philosophy follow server database corresponding sqlalchemy uncompressing advanced scalar access contribution python language module asynchronous database decoupled minimum cython master dynamodb pulsar bandwidth backend optional different configurable documentation access coverage available relational python variate numeric kudos kudos django sqlalchemy distribution directory information object coverage package different backend", "pypi_keywords_clean": ""}, "softlayer/softlayer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "manage various copyright softlayer service upgrade download source current vvv option python import softlayer endpoint softlayer development library overflow private network python client username command additional available source download network installation prettytable import softlayer version toolkit feature various softlayer example debug system software softlayer github security development network simple python system minimal python something github public updating connection following softlayer library ticket information documentation documentation softlayer private urllib copyright softlayer import installation install interface request bundled license method block linux", "pypi_keywords_clean": "softlayer cloud slcli"}, "carlospalol/money": {"git_readme_keywords": "package numeric design simple proof division hashable default excellent python formatting pattern backend comparison exchange currency character automatic conversion changing nature useful invalid suitable exchange default currency header development convention project installed backend bbb leftmost object letter currency license python formatting immutable database several design concept backend change currency exchange optional version compatible installation operator internal automatic currency subclass currency conversion python important extensive addition subtraction localization origin system python xmoney fixed release extensible currency python amount heterogeneous unicode formatting priority repository modulo operator binary specific pattern installed py percentage numeric decimal decimal different pattern syntax target welcome exchange solution object syntax check access currency expansion multiplication backend available convenient unicode common abstract arithmetic global default", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "useful suitable exchange header convention installed backend python formatting currency exchange different source version extensive source branch subclass addition subtraction extensible currency binary package python specific pattern decimal decimal pattern syntax multiplication backend available global default design division hashable default invalid project license database several design concept backend compatible installation important system python amount heterogeneous unicode formatting modulo operator repository target exchange solution syntax check convenient simple proof excellent python formatting pattern backend default currency bbb letter currency immutable automatic currency localization origin python xmoney fixed release percentage numeric access currency expansion arithmetic package numeric comparison exchange currency character automatic conversion changing nature leftmost object change optional operator currency conversion internal python priority installed version development different welcome object unicode common py abstract", "pypi_keywords_clean": ""}, "woothee/woothee": {"git_readme_keywords": "synopsis compliance composer copyright tagomori yandex browser programming japanese mobile equality chromiumu twitterbot mechanism specific language vx z apache license golang woothee woothee library applicable license version satoshi tagomoris classpath mobile single woothee project firefox region python javascript release woothee language governing version release control license copyright install woothee important software express number pattern specifier android webview return android implementation release various control function blackberry bingpreview crawler project woothee language domestic pattern microsoft dataset browser tagomori satoshi language implementation mobilephone trendictionbot crawler testset blank input", "git_description_clean": "user agent parser classifier for multi languages", "git_keywords_clean": "", "pypi_description_keywords": "compliance trident copyright tagomori specific language applicable license version satoshi tagomoris python woothee crawler mozilla support firefox python implementation language governing license copyright install woothee software express tetsuhiro najeira useragent category license history project woothee version license language najeira tagomori woothee python tagomori satoshi method mozilla compatible takeyama", "pypi_keywords_clean": "web user agent parser"}, "/dash-core-components": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/discover": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "level directory package default valid python discover behavior full halts discovery discover python responsible discovery pattern py setup package directory unittest changelog addition project specified python discover argument discover collector standard install pattern matching command script faulty importerror matching several py allow python rc compatible feature example recent subclass python wrong location unix regular bash framework match pattern different pattern different location feature parity current directory discovery mechanism discover module google development version setup py function discover script loader example match protocol discover py script available shell importable compatible entrypoint discovery halts failure discovery method loader attribute collector problem certain", "pypi_keywords_clean": "unittest testing tests"}, "/ctypes": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dynamic python package", "pypi_keywords_clean": ""}, "demianbrecht/sanction": {"git_readme_keywords": "keyboard available readthedocs approval authoritative permission development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "defaulting minimal keyboard sanction python light endpoint readthedocs transport parameter multiple authoritative permission sanction breaking development provider python sanction available exclude client instance request feature instance sanction deprecation sanction approval deprecated sphinx feature public coverage patched client updated request python support breakage client client custom callable facebook deprecated version couple keyboard bashing certain redirect underscore prefix client shuhn authoritative request refresh sanction client decorator google sanction", "pypi_keywords_clean": "python oauth"}, "ajkxyz/jpeg4py": {"git_readme_keywords": "package thread installer library multithreaded possible ubuntu helper license official libjpeg compatible installation example license copyright imread system jpegpy initialize directory jpegpy python copyright samsung python python libturbojpeg package libjpeg python interpreter turbojpeg purpose sourceforge repository", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "libjpeg turbo"}, "pallets/itsdangerous": {"git_readme_keywords": "popular python itsdangerous tracker install timestamp untrusted organization community documentation license coverage various possible example", "git_description_clean": "safely pass trusted data to untrusted environments and back", "git_keywords_clean": "python security hmac serialization itsdangerous", "pypi_description_keywords": "popular python itsdangerous tracker install timestamp untrusted organization community documentation license coverage various possible example", "pypi_keywords_clean": ""}, "willyg302/clip-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "zopefoundation/zeo": {"git_readme_keywords": "configuring start ad address zeo large queue address stop value custom format server storage option zeo ip address file password database setting cache size storage zeo way file storage file directory server zeo multiple documentation string able configuring zeo form host client addr file run read only other python hoc operation client connection zeo address host port hostname only flag certificate file write connection hoc server file transaction client cache queue size host name dns name db client db addr python prompt cache consistency memory storage timer commit storage connection format ssl key timestamp single address arbitrary software zeo path name address read phase commit client server consistent view client transaction list hostname portion storage server connection db single storage process client server quick hierarchical subsection client certificate other client parameter script time client optional address example configuration transient client storage underlying storage few other zeo client data hung client key writable note server address particular database import zeo ssl certificate only mode subsequent read write db zodb zeo single ip connection operation zeo connection start zeo second transaction fly zodb storage document only identical content transaction true value level storage dynamic address cache verification default behavior network zodb zeo other optional zeo example stop zeo run server performance persistent cache multiple ipv other hand zeo server zodb connection example important complicated number likely cleanly python documentation clientstorage zeo rdbms efficient iteration end lot setting check few single transaction custom protocol server transaction start ssl zeo connection addr average g end time invalidation full storage true stop function addr connection false msgpack storage path introduction message log panic python packaging conflict resolution maximum amount ssl configuration management zeo password function long time storage configuration timeout transaction socket bind example com server host awkward position apache configuration case boolean setting configuration second phase zeo protocol similar socket connection key file ad hoc read command line use file transaction history server configuration information server process thread unable writable mode long commit process part quick start server database resolution flag port importable function log file client conflict server certificate certificate number small temporary top server process only connection server server database server format individual msgpack use shorthand load db zeo served storage section pack last python package heavy load prompt import valid zodb false note time interval little connection zeo log configuration domain socket addr import db open check hostname space zeo zeo clientstorage behavior transaction timeout unusual invalidation many listening socket cache invalidation operation invalidation little time run python process valid message invalidation commit other possible import zodb hand large configuration format zeo installation use zeo invalidation message short hand short period pathname string quick verification available memory single server several change maximum age zodb db certificate authentication server client recent invalidation storage instance multiple server pip buildout function see platform default disk space server ssl time default size configuration file connection management unix domain tcp blob support configuration see support client option client server communicate point panic message storage section mode individual server hostname persistent big invalidation queue zeo db high invalidation age object event log tcp ip disk cache extreme client history g storage lock cost server see only single right size blob file only operation", "git_description_clean": "zodb client server framework", "git_keywords_clean": "zodb database server database", "pypi_description_keywords": "fix assignment address stop option zeo storage zeo cache size authentication protocol form host separate zeo hostname only flag setting changelog hoc server port assignment client cache queue size drop support version host name sync constructor python prompt commit arbitrary added clientstorage necessary single storage server quick subsection other client client disconnect optional address client key method ssl certificate start zeo true value configuration option pass option zodb zeo zeo release run server performance zeo didn example number likely python documentation clientstorage zeo client protocol allow ssl zeo server transaction auth zeoserver object full storage true fixed ssl opaque conflict resolution unix socket added new timeout transaction didn work example com dynamic port awkward position added support second phase zeo network zeo added new style read use file information server client suppprt zookeeper database resolution flag port see zeo log file work subsequent database server load false note time interval log configuration db open space zeo zeo clientstorage unusual listening socket little time python process message invalidation commit other configuration format zeo installation use zeo composition load default fix attributeerror short hand data drop quick verification single server python version storage instance server ssl monitor server extra round excess random quickstart ad storage section database client mode individual delay avoid invalidation queue tcp ip invalidation age cost only single blob file start ad address zeo file password server storage recent breakage hoc play support server file storage untested zeoctl able performance improvement client connection zeo address unsupported python see packaging round trip awkward due cache consistency storageserver creation storage connection format ssl key timestamp path name phase commit client server side conflict consistent view pickle protocol rpc process client hierarchical client certificate outstanding non persistent due changelog add data avoid non clientstorage prefetch blown client new addr internal clean db zodb zeo cache ip connection fly second transaction document only full blown transaction zeo revision cache verification dynamic address network non tcp zeo example zodb connection other hand zeo server complicated cleanly beginning setting check custom protocol start file name average ssl fixed time invalidation zodb add assignment bind see fixed server side server host recent transaction see disallow apache configuration client avoid boolean setting zeo protocol similar transaction history server configuration file isn writable mode server full ordinary zeo server certificate temporary allow brief server server implementation new log log served storage heavy load valid zodb little network protocol pypy see behavior avoid g web operation invalidation run signed certificate possible socket address see added future available memory sense change version see server client python see session optimize connection management unix domain point attributeerror zeoserver persistent ability high storage server right size only operation ip address way read only limited time certificate file prefetch method custom zeo write connection file transaction dns name db addr memory storage fixed zeo timer software zeo doc fix client transaction hostname portion connection db test client side time client transient client storage underlying storage zeo client server address particular database only mode server log read write zeo single method new operation zeo connection support assign zodb storage client visible client mearly other optional stop zeo persistent cache multiple ipv end lot add support new client server status travis ci fix zeo constructor argument false msgpack storage path introduction python packaging ssl configuration maximum amount management zeo long time socket bind same time server round play zeo key file socket connection command line caller doesn python added process thread python switch unable commit process part certificate number small current data top only connection format individual shorthand section pack prompt import experimentation domain socket server restart new authentication cache invalidation attribute server valid import zodb doesn block protocol implementation didn load added configuration maximum age several zodb db optional client certificate authentication server security function see disk space cache loadbefore zodb server support python tcp experimental support client last transaction option client address enumeration panic message synchronous zeo zeo port big support optional history g object extreme client storage lock runtime server see configuring large queue value custom format database setting server zeo file directory multiple documentation string loadbefore method configuring zeo host port client addr file run other python hoc operation dropped optimize socket address information db client server support single address pypy add address read list parameter script example configuration few other hung writable note error new request import zeo compatibility ssl support server register identical content level storage default behavior log message time separate important rdbms efficient iteration inflight prefetch few single transaction g end connection addr upcoming zodb stop function addr connection message verification client log panic password function storage configuration zodb fixed ssl note zeo monitor case configuration full cache disallow passing ad hoc load lock long quick start server database importable function client conflict zeo authentication object id server process major zeo msgpack use db zeo last python package favor connection zeo addr import check hostname regard storage last current transaction timeout invalidation many register method issued warning hand large invalidation message loadbefore zconfig see short period pathname string small performance recent invalidation platform default multiple server pip buildout zodb allow time default size configuration file zodb fix blob support configuration see server communicate server hostname zeo db event log multi zeoctl script disk cache pyk zodb client", "pypi_keywords_clean": "database zodb"}, "jaraco/jaraco-functools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "image additional", "pypi_keywords_clean": ""}, "/django-redux": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project redux quickstart entry usable bridge action django redux", "pypi_keywords_clean": ""}, "/modestmaps": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GoogleCloudPlatform/psq": {"git_readme_keywords": "interactive interpreter storage python function license contributing build status contexts batch support client library result simple distributed global context pubsub client upgrading software publisher subscriber useful multiple library possible single worker constructor default status pypi minimal configuration project decorator delay broadcast support worker batch single similar worker database enqueued python implementation available python broadcast google cloud apache production normal execution solution support return official google contributing server authentication inspiration mechanisms pypi version scalable status coverage psq cloud directory completion something python flask md build coverage status storage solution product experimental reliable messaging otherwise cloud platform contributing md gevent worker delivery needed context importable installation install context manager google product example python current request module worker execute installing python build", "git_description_clean": "cloud pub sub task queue for python", "git_keywords_clean": "", "pypi_description_keywords": "interactive interpreter storage python function license contributing build status contexts batch support client library result simple distributed global context pubsub client upgrading software publisher subscriber useful multiple library possible single worker constructor default status pypi minimal configuration project decorator delay broadcast support worker batch single similar worker database enqueued python implementation available python broadcast google cloud apache production normal execution solution support return official google contributing server authentication inspiration mechanisms pypi version scalable status coverage psq cloud directory completion something python flask md build coverage status storage solution product experimental reliable messaging otherwise cloud platform contributing md gevent worker delivery needed context importable installation install context manager google product example python current request module worker execute installing python build", "pypi_keywords_clean": "queue tasks background worker"}, "/mediatumbabel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mediatumbabel package library repository installation transition", "pypi_keywords_clean": "babel in pybabel mediatum"}, "rbarrois/django-factory-boy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python project instance keyword available example factory request django factory contrib resulting detailed constructor", "pypi_keywords_clean": "factory boy django fixtures"}, "/django-downloadview": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "storage repository bugtracker reverse x sendfile objectdownloadview documentation filesystem python demoproject download bugtracker continuous integration roadmap generation urlpatterns filefield objectdownloadview basedetailview download document generic basedetailview continuous integration sendfile example x download objectdownloadview django downloadview", "pypi_keywords_clean": "file stream download filefield imagefield accel accel redirect sendfile sendfile mod xsendfile offload"}, "/zict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mutable mapping documentation documentation status mutable", "pypi_keywords_clean": "mutable mapping dict dask"}, "hustlzp/permission": {"git_readme_keywords": "defined topic creator way bitwise jinja permission simple define instance flask license flexible support installation inheritance execution exception statement python thing context check determine permission check administrator flexible permission body forum permission control decorator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "defined override topic creator python class way bitwise html jinja rulea define instance flexible support py license py version installation license simple inheritance execution exception statement thing context needed permission check determine class flexible permission ruleb permission check administrator flexible permission body flask app forum class inheritance permission control decorator", "pypi_keywords_clean": ""}, "niwibe/djorm-ext-pgbytea": {"git_readme_keywords": "package usefull support pgbytea postgresql binary version binaryfield example django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package usefull support pgbytea postgresql binary version binaryfield example django", "pypi_keywords_clean": ""}, "/django-libs": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "brochhaus license unknown description mbrochh independent license description kickstart platform reusable kickstart", "pypi_keywords_clean": ""}, "powellc/django-articles-addons": {"git_readme_keywords": "development license andrewebdev excellent project management miscellaneous content specific linkthru author cardinal django linkthru", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "development license andrewebdev excellent project management miscellaneous content specific linkthru author cardinal django linkthru", "pypi_keywords_clean": ""}, "vodik/pytest-exceptional": {"git_readme_keywords": "exceptional following exception appveyor categorization software welcome cumbersome detailed description straightforward presentation request printing prototype formatting installation coverage specific exception", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "exceptional following exception appveyor categorization software welcome cumbersome detailed description straightforward presentation request printing prototype formatting installation coverage specific exception", "pypi_keywords_clean": ""}, "rytis/minirest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nitely/django-djconfig": {"git_readme_keywords": "regular license djconfig djconfig documentation database dynamic global compatibility python custom regular library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "info", "pypi_keywords_clean": ""}, "fsinfuhh/django-simple-csp": {"git_readme_keywords": "simple middleware chromium example config inside todo hashed inline apps javascript report todo change additional script additional style variable header list django simple inline style example", "git_description_clean": "a simple csp middleware and template tags for django", "git_keywords_clean": "django csp python", "pypi_description_keywords": "simple middleware chromium example config inside todo hashed inline apps javascript report todo change additional script additional style variable header list django simple inline style example", "pypi_keywords_clean": ""}, "c-w/gutenberg": {"git_readme_keywords": "package default sleepycat functionality consuming commercial license language processing wheel fuseki server simple subsequent d db backend endpoint off process docker sourcecode sqlite standard library db linux db sourcecode development favourite python happy g sourcecode python custom location linguistic processing license username checkout repository sourcecode sleepycat backend following sourcecode package manager processing functionality version apache manager sourcecode installation example project gutenberg variety python everything python sourcecode machine exception gutenberg overview authentication functionality public domain alternative fuseki backend password db metadata following environment project license fuseki control bsddb module function distribution package db anything domain texts environment variable x natural language interface client source python package python standard responsibility bunch gutenberg corpus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default sleepycat functionality consuming commercial license language processing wheel simple backend subsequent d anything sqlite standard library favourite python happy g sourcecode python custom location linguistic processing license checkout repository sourcecode sleepycat backend following sourcecode package manager processing functionality version manager sourcecode installation example project gutenberg variety python everything python sourcecode process machine gutenberg overview exception functionality public domain metadata following environment project license control bsddb module function distribution package environment variable x natural language interface client source python package python standard responsibility bunch gutenberg corpus", "pypi_keywords_clean": ""}, "ojarva/flask-restful-url-generator": {"git_readme_keywords": "py install install flask clone flask import install usage endpoint available installation pip install resource yourclass installation pip flask restful generator import generator resource urllist import urllist import flask setup py kwargs json import resource yourclass yourpath urllist resource restful import", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "py install install flask clone flask import install usage endpoint available installation pip install resource yourclass installation pip flask restful generator import generator resource urllist import urllist import flask setup py kwargs json import resource yourclass yourpath urllist resource restful import", "pypi_keywords_clean": "flask restful"}, "/diazo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "apply loechel cssselect compatibility handle simple javascript technology syntax favourite multiple disparate changelog urljoin huubbouma response string variable detailed documentation unified content inclusion compare method possible original legacy gforcada happy experience ebrehault absolute g content otherwise davidjb support prefix support nodeset output lentinj mitchellrj website absolute prefix lentinj several change boolean relative familiar experimental cssselect exception unthemed response application content python support support regebro cleanup helpful srcset common directory attribute document wireframe release unicode anchor lentinj output danjacka formencode output davidjb davidjb definition console complex designer namespace condition datakurre preserve interface access correct request https apply absolute middleware python icemac python pbauer static", "pypi_keywords_clean": "web theming"}, "RIPE-NCC/ripe-atlas-tools": {"git_readme_keywords": "explorer build status official command project suggestion colophon configuration version python documentation build memory traceroute measurement limited please status readthedocs documentation everything magellan documentation python format config pretty client simple report documentation status", "git_description_clean": "official command line client for ripe atlas", "git_keywords_clean": "python ripe atlas ripe ncc", "pypi_description_keywords": "explorer traceroute renderer simple sslcert official command release history unicode output different destination project suggestion support reality colophon configuration status release version python memory compact creation additional argument traceroute measurement limited renderer plugable status status readthedocs necessary additional documentation various documentation everything consistent implementation additional renderer magellan documentation initial release python format config cousteau library renderer plugable architecture documentation status", "pypi_keywords_clean": "ripe ripe ncc ripe atlas command line"}, "ericsomdahl/python-bittrex": {"git_readme_keywords": "secret interest balance bittrex python golang development stable official documentation integration installation example stable release key recent stable python bittrex unofficial following folder structure visible object access account rapid", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Binstar/binstar": {"git_readme_keywords": "anaconda documentation interface quickstart source uploading complete tutorial whoami building", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "cdown/srt": {"git_readme_keywords": "generic chinese hanzidentifier library subtitle library quickstart standard library quickstart hypothesis information hanzidentifier hypothesis support unicode compliant python installation available version github production coverage example french process number english format overview common travis appveyor fullwidth directory modifying development version library tolerant python library quality featureful python quickstart portable lightweight hanzidentifier hanzidentifier intuitive", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generic chinese hanzidentifier library subtitle library quickstart standard library quickstart hypothesis information hanzidentifier hypothesis support unicode compliant python installation available version github production coverage example french process number english format overview common travis appveyor fullwidth directory modifying development version library tolerant python library quality featureful python quickstart portable lightweight hanzidentifier hanzidentifier intuitive", "pypi_keywords_clean": "srt"}, "/phatbeat": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "optional threading handler initial release python library unstable output raspberry initialisation reversed bugfix button", "pypi_keywords_clean": "raspberry pi led"}, "bird-house/birdhousebuilder-recipe-supervisor": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "myapp anaconda recipe egg stderr logfile bugfix var password buildout child conda channel run user birdhousebuilder recipe additional start prefix user following example supervisord buildout update info buildout myapp app stdout optional travis build monitor access buildout bin stopwaitsecs http monitor optional default recipe birdhousebuilder recipe deployment application buildout buildout option username buildout buildout cfg service installing stdout logfile intallation folder start service bin directory uninstall daemon var log program configuration variable variable update manifest restart service service true myapp stderr optional update conda prefix supervisor username true supervisor project conda prefix conda environment user www default program supervisor loglevel installation default supervisor use example socket myapp zc recipe birdhouse enviroment remove supervisor supervisor configuration myapp recipe tmp myapp ignore temp start default info myapp socket level default killasgroup kill workaround kill section prefix anaconda installation program section access default introduction pep update directory tmp user option monitor remove supervisor config enviroment supervisor monitor buildout supervisor password interface default run directory service command github license cfg pep monitor interface default true autostart start default killasgroup password use supervisor directory bool ehbrecht ehbrecht startsecs default buildout prefix deployment conda enviroment anaconda supervisor program myapp anaconda loglevel buildout supervisor prefix directory gunicorn initial release egg import online foreground supervisor log deployment option chat os package chown option supervisor service folder default directory default autorestart restart log level default user user logname user deployment username password web application installation prefix documentation gunicorn unix installation folder service directory monitor option skip user myapp command recipe supervisor unix tmp variable separation start supervisord use option wheather log supervisor command buildout priority default logfile app directory following environment variable option initial use monitor prefix bugfix service optional monitor true logfile logfile", "pypi_keywords_clean": "buildout recipe supervisor birdhouse conda anaconda"}, "mozilla/jupyter-notebook-gist": {"git_readme_keywords": "config system follow installation secret python packaging extension location configuration install command available github installation manual example follow coverage different extension application folder delete nbconfig follow jupyter important jupyter directory directory delete uninstall continuous integration manager delete jupyter nbconfig jupyter notebook quality notebook please bunch", "git_description_clean": "create list and load github gists from jupyter notebooks", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "PX4/pyulog": {"git_readme_keywords": "ulogkml syntax pyulog convert extract provided command ulogcsv present sample output computer package manager example output repo display format system info module link repository source development installation installation manager installation display information output display python package following command output extract self", "git_description_clean": "python module scripts for ulog files", "git_keywords_clean": "", "pypi_description_keywords": "format px autopilot", "pypi_keywords_clean": ""}, "/tooldog": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "biotools galaxy xml cwl"}, "napalm-automation/napalm-iosxr": {"git_readme_keywords": "napalm", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "rbarrois/xworkflows": {"git_readme_keywords": "license wheel status transition library custom attach version repository github example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library transition repository github order example", "pypi_keywords_clean": "workflow state machine automaton"}, "supervisor/meld3": {"git_readme_keywords": "value img various zpt template markup source encoding meld template string elementtree library encoding argument pattern meld document source support xml g other function function param various other order programmer pymeld meld checked compact textual content thediv output single document hr img bound namespace aka hindle pymeld richie hindle good shot loose doctype script doctype argument namespace declaration forth xhtml input variation above script winkler meld xhtml loose div xmlns thediv div meld id filename aka xmlns empty shortcut div meld sequence argument xmlstring input default dictionary argument bicking dynamic python setup frederik identification meld serialization g html css meld html namespace element html flag logic separate argument empty html tags html xml above template example meld meld identifier meld specific treatise pipeline option python meld overview meld installation xhtml output elementtree elementinterface boolean tags celementtree meld namespace system xhtml meld other tags beginning meld meld setup py tags g nondefault xml declare defer xml declaration above function html g work unused id namespace pymeld parseable script repeat content xhtml above py install source document mod method valid xml balanced expat parser example html variable xml entity foo foo html xmlns doctype declaration instance html source namespace specification meld overview present loose html rationale xml xhtml feature scenario img input multiple nohref dtd doctype noresize noshade html namespace xml input id thediv nobody valueerror html dtd default doesn specific namespace identifier input isindex nowrap content xml optional encoding unique implementation other meld result pipelining html output separate namespace writer meld valid possible namespaced id compact declare namespace id nohref noresize ismap multiple xmlstring function output boolean optional meld writer such id attribute basefont br function g duplicate meld python internal xmlns foo lxml dynamic content xml id xml source empty textarea designer object foo id xml namespace textarea element xmlns meld support various valid example", "git_description_clean": "meld templating system used by supervisor", "git_keywords_clean": "", "pypi_description_keywords": "value img various zpt template markup source encoding meld template string elementtree library encoding argument pattern meld document source support xml g other function function param various other order programmer pymeld meld checked compact textual content thediv output single document hr img bound namespace aka hindle pymeld richie hindle loose doctype script doctype argument namespace declaration forth xhtml input variation above script winkler meld xhtml loose xml wwrite div xmlns wwrite xhtml thediv div meld id filename aka xmlns empty shortcut div meld sequence argument xmlstring input default dictionary argument bicking dynamic python setup frederik identification meld serialization g html css meld html namespace element html flag logic separate argument empty html tags html xml above template example meld meld identifier meld specific treatise pipeline option python meld overview meld installation xhtml output elementtree elementinterface boolean tags celementtree meld namespace system xhtml meld other tags beginning meld meld setup py tags g nondefault xml declare defer xml declaration above function html g work unused id namespace pymeld parseable script repeat content xhtml above py install source document mod method valid xml balanced expat parser example html variable xml entity foo foo html xmlns doctype declaration instance html source namespace specification meld overview present loose html rationale xml xhtml feature scenario img input multiple nohref dtd doctype noresize noshade html namespace xml input id thediv nobody valueerror html dtd default doesn specific namespace identifier input isindex nowrap content xml optional encoding unique implementation other meld result pipelining html output separate namespace writer meld valid possible namespaced id compact declare namespace id nohref noresize ismap multiple xmlstring function output boolean optional meld writer such id attribute basefont br function g duplicate meld python internal xmlns foo lxml dynamic content good xml id xml source empty textarea designer object foo id xml namespace textarea element xmlns meld support various valid example", "pypi_keywords_clean": ""}, "drcloud/magiclog": {"git_readme_keywords": "package python application information library author complicated message extended format format logging config background library logging executable module discovery function situation", "git_description_clean": "simple automatic logger configuration for python", "git_keywords_clean": "", "pypi_description_keywords": "package python application information library author complicated message extended format format logging config background library logging executable module discovery function situation", "pypi_keywords_clean": ""}, "chrissimpkins/mkdocs-cinder": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nvbn/django-bower": {"git_readme_keywords": "opinionated build html django build status python specify django bower block html unopinionated solution project bower absolute install django package manager block python support django status target package dependency production example generic unopinionated python support management command system different apps fixed current package management coverage status staticfinder bower package full documentation installation install template python download problem block download bower", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "opinionated build html django build status python specify django bower block html unopinionated solution project bower absolute install django package manager block python support django status target package dependency production example generic unopinionated python support management command system different apps fixed current package management coverage status staticfinder bower package full documentation installation install template python download problem block download bower", "pypi_keywords_clean": ""}, "/stevedore": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application software stevedore documentation dynamic repetitive library extension mechanism", "pypi_keywords_clean": ""}, "rhlobo/bigtempo": {"git_readme_keywords": "tracker repository applyed zookeeper download issuetracker contribute tracker tracker exploration python tracker mockito project directory distributed processment example project measure scalability support distributed fashion multiple artificial intelligence python status ubuntu trusty development temporal analysis instance processing support fashion quadrillion interdependent plumbing install command available evaluation integration temporal processment implementation python optional installation coverage github feature machine software process framework processment temporal flexible understandment zeromq caching system performatic possible analysis colleague directory caching compatibility compatibility python bigtempo repository contract contact philosophy analysis scalable distributed processing complex discussion pandas scalable distributed datasource install bigtempo workflow management python package caching decoupled request dependency resolution pandas library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tracker repository applyed zookeeper download issuetracker contribute tracker tracker exploration python tracker mockito project directory distributed processment example project measure scalability support distributed fashion multiple artificial intelligence python status development temporal analysis instance processing support fashion quadrillion interdependent plumbing install command available evaluation integration temporal processment implementation python optional installation coverage github feature software process framework processment temporal flexible understandment zeromq caching system performatic possible analysis colleague directory caching compatibility compatibility python bigtempo repository contract contact philosophy analysis scalable distributed processing complex discussion pandas scalable distributed datasource install bigtempo workflow management python package caching decoupled request dependency resolution pandas library", "pypi_keywords_clean": ""}, "platypus-creation/django-rosetta-grappelli": {"git_readme_keywords": "package grappelli compatibility rosetta grappelli maintainer python django rosetta django compatible compatibility template support current release current django installation installed original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "biocommons/bioutils": {"git_readme_keywords": "package status changelog status lookup environment variable common license changelog", "git_description_clean": "provides common tools and lookup tables used primarily by the hgvs and uta packages", "git_keywords_clean": "bioinformatics", "pypi_description_keywords": "package status changelog status lookup environment variable common license changelog", "pypi_keywords_clean": "bioinformatics"}, "landscapeio/pylint-celery": {"git_readme_keywords": "pylint plugin pylint celery analysis pylint prospector prospector callable license available warning celery", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pylint celery plugin"}, "martsberger/django-pivot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement above call value compound column person above copyright jan st way string modify merge multiple example above header gender shipped library th model pivot call claim name range pivot boy version interested golf west order histogram function hist bin sqlite mysql key double underscore attribute name free lowercase return necessary column hist range row row range record connection manager girl bin u boy avg pivot timedelta row distribute sublicense golf etc use sqlite original data restriction default row iterable data column data output result result sql region attribute average number django pivot aggregate fancy west third column return null limitation region gender style golf range copyright columns boy fancy database following def table function display datetime import sum basic boy girl def lowercase software pivot table attribute print record avg aggregation hist histogram copyright notice total cost heavy lifting transform function model single south west liable first argument optional parameter pivot function copy modify suite import avg record west aggregation function histogram above row shipped th optional gender column transform lowercase backend particular cell column region wikipedia page foreign key merge publish implied west shipped use copy average order particular region copy merchantability fitness subject price avg other liability root directory shirt bin u hist print underscore notation function pivot current environment west girl contract dictionary total girl permission table print warranty style ship target row gender style basic usage summary result region model price cost action permission notice particular purpose argument pivot package other default use django result many kind express filter style table pivot possible environment license golf region single query combination pivot result row bin django db documentation several above pivot left data table pivot pivot single attribute print row python turn limited substantial girl golf girl installation boy golf north south girl fancy original table west boy shipped datetime aggregation avg display transform event charge installed apps django double publish distribute single column region shipped unit shipped region", "pypi_keywords_clean": ""}, "py-bson/bson": {"git_readme_keywords": "python u u sourcecode python stream connect sendobj message install python import independent pymongo project quick import monkey version apache installation sourcecode network af connect sendobj apache license license installation sending objectid implementation", "git_description_clean": "independent bson codec for python that doesn depend on mongodb", "git_keywords_clean": "", "pypi_description_keywords": "mongodb independent", "pypi_keywords_clean": "bson codec"}, "/r": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "djaodjin/djaodjin-extended-templates": {"git_readme_keywords": "dependency virtualenv environment compatibility sendtestemail development generation install environment install xmlpdf appropriate extended repository outputed installed", "git_description_clean": "djaodjin template wrappers for html email and pdf templates", "git_keywords_clean": "", "pypi_description_keywords": "dependency virtualenv environment compatibility sendtestemail development generation install environment install xmlpdf appropriate extended repository outputed installed", "pypi_keywords_clean": ""}, "google/transitfeed": {"git_readme_keywords": "transit documentation installation library validate transitfeed mailing", "git_description_clean": "a python library for reading validating and writing transit schedule information in the gtfs format", "git_keywords_clean": "", "pypi_description_keywords": "exporter library writing importer", "pypi_keywords_clean": ""}, "FabriceSalvaire/intervalarithmetic": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mode tikz end readthedocs badge intervalarithmetichomepage intervalarithmeticdoc width px tikz tikz end intervalarithmetic fabrice salvaire version quick pypi ohloh build status intervalarithmeticurl intervalarithmetichomepage readthedocs intervalarithmetic numpy numpy license pypi ipython sphinx pypi python intervalarithmeticdoc intervalarithmetic matplotlib matplotlib open source ipython ipython source interval version pypi interval arithmetic v intervalarithmetic python version coverage org pypi end mode sphinx matplotlib documentation tikz intervalarithmetic readthedocs intervalarithmetic pypi intervalarithmetic license available ohloh profile python version matplotlib circuit intervalarithmetic intervalarithmetic pypi pypi badge intervalarithmetic salvaire ohloh news mode status travis intervalarithmetic build free numpy ipython pypi version arithmetic package px intervalarithmeticurl python python sphinx sphinx pypi numpy quick link pypi build section pypi license github intervalarithmetic intervalarithmetic github python pypi px width intervalarithmetichomepage intervalarithmetic", "pypi_keywords_clean": "interval arithmetic"}, "/more-jinja2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jinjaapp class import jinjaapp subdirectory hello section section person template extension jinja documentation section return template directory section jinja actual release instance template language directory return morepath jinja template integration class person person jinja example jinja import reload jinja template template support person default template person person object jinja configuration html model initial public section request return model person morepath public release autoescape", "pypi_keywords_clean": "morepath jinja"}, "albertyw/syspath": {"git_readme_keywords": "package current variable pypi python shortcut albertyw syspath syspath pypi syspath dependency climate dependency status coverage syspath installation status usage common directory import repository manipulation development syspath publishing", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package current variable pypi python shortcut albertyw syspath syspath pypi syspath dependency climate dependency status coverage syspath installation status usage common directory import repository manipulation development syspath publishing", "pypi_keywords_clean": ""}, "/sopel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python simple extendible utility", "pypi_keywords_clean": ""}, "SimonSapin/flask-flatpages": {"git_readme_keywords": "application documentation source relational database install", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application documentation source relational database install", "pypi_keywords_clean": ""}, "s-m-i-t-a/flask-cdn-ng": {"git_readme_keywords": "documentation ng flask static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "flask cdn static", "pypi_keywords_clean": ""}, "tarkatronic/django-ssl-auth": {"git_readme_keywords": "private license install django freenode available version restart coverage django python ngninx application directory integration certificate authentication backend chrome safari finnish release openssl redirect example configuration middleware unicorn keychain access module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "private license install django freenode available version restart coverage django python ngninx application directory integration certificate authentication backend chrome safari finnish release openssl redirect example configuration middleware unicorn keychain access module", "pypi_keywords_clean": ""}, "sefakilic/goodreads": {"git_readme_keywords": "package goodreads secret anything package directory development additional feature project instance license developer database version installation github returning application license acknowledgment status coverage particular status documentation coverage status goodreads package following function permission information different feature license interface access request authorization package contribution method following command group documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package goodreads secret anything package directory development additional feature instance license developer database version installation github returning application license acknowledgment status coverage particular status documentation coverage status goodreads package following function permission information different feature license interface access request authorization package contribution method following command group documentation status", "pypi_keywords_clean": "goodreads api"}, "smathot/python-qprogedit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "unaguil/sphinxcontrib-swaggerdoc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python swagger description sphinx extension directive pointing documentation generation subset swaggerdoc sphinx restructuredtext usable install sphinxcontrib sphinxcontrib swaggerdoc multiple local example swagger", "pypi_keywords_clean": ""}, "pantsbuild/pantsbuild-pants-testinfra": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subclass partitionedtestrunnertaskmixin optionsbootstrapper upgrade wheel default jvmcompile allow implementation manual notimplementederror advance abstractmethod concatenation cleanup filespec traceid meantime readable possible unnecessary runtime utility check command unionrule product pexbuilderwrapper support subsystem documentation implicit compile extract provided mustache absolute figure awslambda contrib wheel extraction algebraic version apache performance resettable runtime check typeconstraint buildfileaddressmapper filtering python dependent deferredexc irrelevant errormessage document direcotry directory release bootstrap compile support prepare linux naming unnecessarily gitdir docker pantsbuild platform declarative zipkin centos python interpreter https ownership check distribution selection tagging python backend refactor requirement", "pypi_keywords_clean": ""}, "frederic-beaupere/rvt-detector": {"git_readme_keywords": "detector simple transmissiondata installed version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "detector simple transmissiondata installed version", "pypi_keywords_clean": ""}, "cbmi/django-sts": {"git_readme_keywords": "machine application immediate transition system seamless integration context manager generic foreign library boilerplate various abstract example django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "machine application immediate transition system seamless integration context manager generic foreign library boilerplate various abstract example django", "pypi_keywords_clean": "fsm state machine transition django"}, "aparrish/tracery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wonderful figured javascript undefined command tracery history obligatory obligatory foreseeable repository branch possible template grammar tracery grammar example license javascript version github python translation example python official repository grammar expansion branch installation release recursive template tracery original javascript package license history information initial release python generative installation install literal python concept", "pypi_keywords_clean": "tracery"}, "enthought/traitsui": {"git_readme_keywords": "download visualization wxpython abstraction supported toolkit independent documentation additional straightforward available optional installation example important framework tutorial particular environment repository following traitsui", "git_description_clean": "traitsui traits capable windowing framework", "git_keywords_clean": "", "pypi_description_keywords": "download visualization wxpython abstraction supported toolkit independent documentation additional straightforward available optional installation example important framework tutorial particular environment repository following traitsui", "pypi_keywords_clean": ""}, "/soloprocess": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "untergeek/es-client": {"git_readme_keywords": "checking validation configuration unacceptable parameter acceptable unknown credential collection anything necessary connection elasticsearch detection", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "checking validation configuration unacceptable parameter acceptable unknown credential collection anything necessary connection elasticsearch detection", "pypi_keywords_clean": "elasticsearch"}, "Kapiche/caterpillar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package installation information storage implied warranty structured language processing traditional information roadmap caterpillar implementation testsub license caterpillar useful textual copyright library concurrency extraction approach information retrieval schemas indexwriter merchantability support pluggable caterpillar caterpillar transaction documentation structured information additional permission volatile additional indexing representation fitness installation coverage example software foundation dependency software reporting substantial serialisation general public particular extraction public license architecture particular purpose algorithm different bdfls willing warranty natural language program advanced transactional multilingual tokenisation copyright kapiche appropriate markup example integrating requirement", "pypi_keywords_clean": "indexing text analytics"}, "aburrell/apexpy": {"git_readme_keywords": "package journal apexpy appveyor smooth wheel system conversion build status scrutinizer scrutinizer status dipole license quick emmert numpy codecov desired library columns libgfortran status codacy location install trouble command quality status package monthly version installation compact representation landscape geomagnetism software status travis overview release coverage status richmond build apexpy documentation documentation python wrapper appveyor build object geoelectricity status codeclimate status version ionospheric gfortran codeclimate quality geodetic magnetic documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package journal appveyor compliance smooth implimentation build status scrutinizer scrutinizer status changelog character dipole license quick emmert numpy richmond d desired codecov columns status codacy install installation conversion command subsolar quality status package monthly fortran compiler version compact representation landscape geomagnetism software status travis geodetic conversion d ionospheric overview fortran library release geocentric coverage status helper function richmond documentation documentation initial release python wrapper appveyor build object geoelectricity status codeclimate feedback status version codeclimate quality allowable geodetic compatibility initial d richmond magnetic documentation status", "pypi_keywords_clean": "apex modified apex quasi dipole quasi dipole coordinates magnetic coordinates mlt magnetic local time conversion converting"}, "tr3buchet/twiceredis": {"git_readme_keywords": "listener twiceredis durable message default pubsub master flight keepalive stuff result matter customization possible publishing addition afterward reconnection iteration instantiation standard separate crazy durable ok transaction twiceredis ignore proper master python listener shuffling example handler recommend exception python number sentinel connection nature custom handler environment connection handling default handler nothing function superfluous passive firewall pseudo definition individual conjunction different persistent message listener painful object tuning specific previous example sentinel service handling socket durable install utilizes subclass", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "listener twiceredis durable message default pubsub master flight keepalive stuff result matter customization possible publishing addition afterward reconnection iteration instantiation standard separate crazy durable ok transaction twiceredis ignore proper master python listener shuffling example handler recommend exception python number sentinel connection nature custom handler environment connection handling default handler nothing function superfluous passive firewall pseudo definition individual conjunction different persistent message listener painful object tuning specific previous example sentinel service handling socket durable install utilizes subclass", "pypi_keywords_clean": "redis"}, "/navadd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "trac navigation main meta"}, "/teleport": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "teleport implementation teleport draft installing draft check install teleport", "pypi_keywords_clean": ""}, "etingof/pyasn1": {"git_readme_keywords": "complicated behaviour serialisation codecs implementation suitable serialisation problem technology clause language specific library overflow serialised luxury g question communication specification license unbounded complexity struggle documentation network available structure github codecs solution efficient example different serialised python content upcoming number complicated encoding similar python system python object release heterogeneous description generic implementation comfort following encode dubuisson information compliant quality design serialisation compiler profile internet abstract pythonista python package something compact particular protocol", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "codecs x implementation", "pypi_keywords_clean": ""}, "google/brotli": {"git_readme_keywords": "introduction available general deflate compression benchmark default lossless compression specification javascript unstable squash generic purpose development configure section independent combination specification license similar squash compression version decoder implementation comparable autotools benchmark unstable benchmark related decoder encoder dominik homberger context compression algorithm lzturbo benchmark release independent decoder general purpose following algorithm huffman purpose compression benchmark lzturbo variant plugin purpose lossless configuration premake responsibility", "git_description_clean": "brotli compression format", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "wrboyce/telegrambot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "creation framework production quality current current version development searcher motivation version python status coverage handling namespace package necessary environment example plugin coverage status disclaimer wouldn example subclass", "pypi_keywords_clean": ""}, "samuraisam/django-json-rpc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fgimian/paramiko-expect": {"git_readme_keywords": "ssh connection bottom artwork courtesy complete paramiko extension multiple ssh library introduction paramiko apparent vagrent python important flexibility quick coverage transport prompt license paramiko function following general object paramiko ssh", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "ssh connection bottom artwork courtesy complete paramiko extension multiple ssh library introduction paramiko apparent vagrent python important flexibility quick coverage transport prompt license paramiko function following general object paramiko ssh", "pypi_keywords_clean": ""}, "juanifioren/django-oidc-provider": {"git_readme_keywords": "package information support authentication documentation protocol connect provider interoperable simple identity authorization example django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "99designs/colorific": {"git_readme_keywords": "present changelog argument background output concrete example colorific functional palette example virtualenv python important minimum saturation branch directory experimental multiprocessing similarity yencken installation pillow release annesley information detector colormath palette detection correspond importable dennis filename", "git_description_clean": "automatic color palette detection", "git_keywords_clean": "", "pypi_description_keywords": "present changelog argument background output concrete example colorific functional palette example virtualenv python important minimum saturation branch directory experimental multiprocessing similarity yencken installation pillow release annesley information detector colormath palette detection correspond importable dennis filename", "pypi_keywords_clean": ""}, "futurice/procboy": {"git_readme_keywords": "available environment optional manager running development", "git_description_clean": "process boy", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "process procboy processboy"}, "/locust": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "use", "pypi_keywords_clean": ""}, "TeamHG-Memex/formasaurus": {"git_readme_keywords": "package machine search registration license password recovery status something hyperiongray formasaurus registration password version documentation formasaurus coverage contact", "git_description_clean": "formasaurus tells you the type of an html form and its fields using machine learning", "git_keywords_clean": "", "pypi_description_keywords": "package password recovery captchas command creation initial hyperiongray ipython formasaurus readthedocs argument license support updated documentation classifier annotated evaluation version coverage incompatible release upstream detection machine release formasaurus training formfieldclassifer something scikit registration password annotation contact initial release documentation formasaurus", "pypi_keywords_clean": ""}, "lambdalisue/django-author": {"git_readme_keywords": "authorsystemuserbackend system default author field setting own backend author ignore authordefaultbackend default object authorsystemuserbackend library permission contenttype update author class backend backend happy model updated author default backend author author author updated update object add decorator py add storategy github truble django author author backend directory author update return system backend add contenttype contenttype top backend class signal call lazy object contenttype backend updated decorator default current request sample backend return strategy group", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "authorsystemuserbackend system default author field setting own backend author ignore authordefaultbackend default object authorsystemuserbackend library permission contenttype update author class backend backend happy model updated author default backend author author author updated update object add decorator py add storategy github truble django author author backend directory author update return system backend add contenttype contenttype top backend class signal call lazy object contenttype backend updated decorator default current request sample backend return strategy group", "pypi_keywords_clean": "django author object universal"}, "RustyBower/pythreatgrid": {"git_readme_keywords": "source pythreatgrid threatgrid installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package cleanup markdown support correct download configuration documentation pythreatgrid integration history wrapper release installation threatgrid", "pypi_keywords_clean": ""}, "opentok/opentok-python-sdk": {"git_readme_keywords": "mode instance code relayed session id becc txt usage type custom useful router ab layoutclasslist cadd projectid streams session version page hls rtmp interested layout type print broadcast baccadd get myfooapp streamname possible clone broadcastid custom ea fc heart pull method bar serverurl broadcast json sample opentok turn default composed stream payload payload id archive mode project mybarapp status started updatedat output mode parameter code get archive filter sip user technical streams session stream repository custom stream myfooserver myfooapp support aditional auth username optional parameter mybarserver mybarapp api secret broadcast layout true call start archive started broadcast example com mybarapp streamname id name previous list archive fc ab force disconnect result createdat dependency myfooapp status absolute width info false store archiveid custom archive stop opentok stop opentok next individual id delete myfoostream id id stream turn server parameter opentok stream name session method username password layoutclasslist top python archive id sessionid name important get broadcast such headervalue auth archived bottom opentok token token important presentation layout broadcastid mybarstream resolution get specific call videotype camera location store layout stream session default resolution archive layout layoutclasslist bottom class tls call sessionid token python valid release important api key documentation reference session session stop broadcast id stop disable audio database opentok total note store such print stream due sip call array progress broadcast object instructor position default setting ea ed stop archive rtmp streams pypi index bug file python broadcast installation opentok dial common way archive get keyword argument layout archiveid rtmp mybarserver horizontalpresentation setting delete whole repository position absolute start id session session opentok get information stop started focus id video false pip install createdat id archiveid horizontalpresentation hls http opentok import developer guide stream info other layout dial session archived session live streamname key total location hint archive session release streamname myfoostream pip id archive rtmp id hint test foo serverurl endpoint code attempt resolution sessionid composed file archive code top id reference documentation page hint stream object sip partner info stream create session opentok api available opentok session presentation store id dc other valid opentok python name stream single composed username username see force hint session custom layout transport tls presentation resolution ip address started archive tjmzfn status video recording string streamname mybarstream user sip id foo opentok start total archive start broadcast opentok stream audio video python opentok resolution broadcast mixed audio stream layoutclasslist stream code list stream id token archive instance method code get composed opentok custom horizontalpresentation stream stream password secure token sip secure true hls endpoint becc d resolution store different streams archive list mode parameter id baccadd list opentok opentok live attribute stop next install end streaming broadcast list streams opentok platform broadcasturls hls opentok delete status live rtmp bar stream videotype optional keyword call opentok file opentok partner com json print pp parameter updatedat broadcasturls camera print get list sessionid stream mxxmdbfjemzcnzyndgwmtj tjmzfn status started layoutclasslist full list pass opentok archive dictionary ffdfb layoutclasslist individual output print result class code archive delete projectid resolution broadcastid horizontalpresentation support see stream class sessionid payload id bc list total python sdk sip platform stylesheet property name print object specific archive client id print password password id composed opentok list opentok create value layout stylesheet development required recording guide name broadcast session helpful session id layout other streams code id bar parameter individual store iter archive broadcast opentok error broadcast id start live sessionid mxxmdbfjemzcnzyndgwmtj live streaming persistent store other streams stylesheet parameter video streams stream list broadcast code session location security mybarstream foo python stop presentation output python create http live other peer delete archive instance note sip endpoint custom maxduration custom stylesheet verticalpresentation opentok archive id id broadcast database session information see object broadcast create element property python session get stream serverurl rtmp stream id database code com transport sip uri layoutclasslist focus width height id string pass get d ffdfb method see archive opentok stream opentok stream instructor package uri sip broadcast broadcast many id camera opentok broadcast python delete bc ea first stream code python id property default setting archive archive relayed code live opentok ed print information total number rtmp myfooserver opentok get horizontalpresentation pip share live database archive", "git_description_clean": "opentok python sdk", "git_keywords_clean": "python opentok tokbox python sdk", "pypi_description_keywords": "documentation", "pypi_keywords_clean": "video chat tokbox tok opentok python media"}, "JoshData/email-validator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "internationalized email intentional failure validator doesn note internationalization internationalized validation library value ucs support case insensitive ip address deliverability see omega validator robust useful handful dict multiple helpful human transition set internationalized form address domain route strict validation extension support doesn support round second sort deliverable python note subclass support unicode variety email message process identical display usage basic multilingual precomposed unicode normalization universal wheel return aware only form successful validation record internationalized domain error message nothing account creation other troublesome submission stack robust email user login obsolete mechanism library doesn web ascii only privacy security error email protocol argument see design default k idna literal form type mx address certain invalid canonical internationalized small bug user email fictitious address only angstrom project name casefolding returned string database wire file sept other equivalent practicality normalization problem installation important outbound mail smtputf keyword argument likely public internet part e document login information field boolean login see permit obsolete postfix address syntax function website key string form canonical form email specs own outbound different unicode true list appropriate line idna rfc ohm domain part part see submission library field flag pypi see mail server problem different non ascii form ring multilingual plane unicode support bmp basic name resolution human readable valid dict extension set sign name system case dns record present destination trouble prior message g address rfc omega return ascii ized identity feature protocol smtp temporary failure domain see email address good email normalization deliverability validation space many email delivery internationalization anyway semantic meaning empty local section sort login form replacement module mail transmission encoded form edge ized form package whole address ascii first email validator nfc normalization support see resolvable domain valid email domain name extension mail submission valid possible normalized form return value internationalized local delay idna ascii ascii equivalent packaging field returned one unicode nfc user account separate way ascii local first special idna such check set validation function same semantic dns system exception equivalent form python local part turn smtp server system dns readable error ascii form time use following keyword smtputf false returned address internationalization returned field good equivalent code doesn permit information different current version e g idna encoded returned dict creation time resolution check certain unicode kim", "pypi_keywords_clean": "email address validator"}, "praekelt/django-dfp": {"git_readme_keywords": "product python delimited service overview closing javascript installation install django implementation document template possible example django", "git_description_clean": "dfp implementation for django", "git_keywords_clean": "", "pypi_description_keywords": "delimited service cacheable javascript subsequent changelog possible republish product practice django implementation script loading example django dfpslotrenderended python overview google deprecate arbitrary document foundation ability closing installation install template method google", "pypi_keywords_clean": ""}, "/restauthcommon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "restauthcommon set", "pypi_keywords_clean": ""}, "flosch/simpleapi": {"git_readme_keywords": "debugging g jquery consistent transparent py google simpleapi librelist mailinglist subscribe gunicorn subscribe simpleapi mongoengine queryset inheritance multiple server handler object serialization jquery extjs jsonp stable author g javascript dynamic website license framework g standalone server py django several transport documentation simpleapi python dateutil server standalone python php python remote optional version compatible implementation installation github django server server support authentication appengine python calculator server conversion php python django queryset py gunicorn flask google author florian flask server system server django flask florian schlachter python python py standalone jquery calculator restriction portable access handler py ajax framework simplejson several result google appengine server django py flask mongoengine", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debugging simpleapi version consistent transparent g jquery py google simpleapi librelist mailinglist subscribe gunicorn subscribe simpleapi mongoengine queryset inheritance multiple server handler object serialization jquery extjs complete documentation javascript dynamic g schlachter license framework g standalone server py django several transport python dateutil server standalone python php python remote website mailinglist optional compatible implementation installation github django server server support version author authentication appengine python conversion calculator server php python django queryset py gunicorn flask google author florian flask server system server django flask florian schlachter python python py standalone jquery calculator restriction portable access handler py simplejson progress several result google appengine server django py flask mongoengine", "pypi_keywords_clean": ""}, "inveniosoftware/cernservicexml": {"git_readme_keywords": "documentation documentation service cernservicexml readable service installation sphinx library coverage installation cernservicexml", "git_description_clean": "small library to generate cern xsls service xml", "git_keywords_clean": "", "pypi_description_keywords": "documentation documentation service cernservicexml readable service installation sphinx library coverage installation cernservicexml", "pypi_keywords_clean": ""}, "/django-quill": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package block python django quill block installed", "pypi_keywords_clean": ""}, "reactjs/pyreact": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "application information javascript library wrapper build", "pypi_keywords_clean": ""}, "/flask-oojsui": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python library example", "pypi_keywords_clean": ""}, "googlefonts/ufo2ft": {"git_readme_keywords": "addition python dependency accurate generated ufofdk target format status appveyor opentype documentation behavior travis directory library codecov gitter index anchor version codecov example", "git_description_clean": "a bridge from ufos to fonttools objects and therefore otfs and ttfs", "git_keywords_clean": "", "pypi_description_keywords": "addition python dependency accurate generated ufofdk target format status appveyor opentype documentation behavior travis directory library codecov gitter index anchor version codecov example", "pypi_keywords_clean": ""}, "CyVerse/django-cyverse-auth": {"git_readme_keywords": "compatibility django iplant openstack keystone django cyverse globus current cyverse resource provider", "git_description_clean": "all auth schemes used in various capacities for cyverse installations designed to be added as django app", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "biocommons/hgvs": {"git_readme_keywords": "posedit del del sequencevariant ambiguity g transcript uncertain false multiple nm nm master branch protein consequence help support jacobs kb docs variation other grch gitter image km dalgleish object model binder gitter install upgrade license image support intronic fedtsov fox identical false format install status np type sequencevariant clinical ensembl type posedit posedit glyarg nomenclature update mkvirtualenv hgvs pairing ncbi hp hgvs hdp hgvs variation nomenclature uncertain minor rajaraman fox freeman hn normalize hdp hn source variant configuration structured default level variation intronic alignment kb kaleta nc type extensive automated hgvs variant format object project identify normalize hp mutation python default hp hgvs straightforward target pypi dup format specific installation install hgvs example important hgvs package biological ambiguity structure hp pj jacobs status binder release github problematic community project poly remote start baseoffsetposition python structure conf letter pip package start simpleposition posedit t start uncertain target install nucleic acid full scope mapper instrinsic biological posedit uncertain np gr target github kaleta mcmurry pypi hn hgvs baseoffsetposition parser start form python rewrite pip install hgvs nm datum datum github license nm del context import contrib image normalizer hdp pluggable hgvs nc support alternative hgvs nomenclature rk human development status transcript mapping block python garcia westbrook target group variation society genomic variant application please reference fusaro va variant normalizer gitter group github contrib connect nm type normalization freeman pj normalizer hn single representation snvs local please report validate normalize format conf python library project please target gitter access important high throughput hdp assembly biological sequence object structure python package certain c hgvs reliable handling normalizer normalizer python translate stringified form sequence level hgvs normalizer formal grammar hgvs hgvs python import package hgvs westbrook fusaro install master network access easy mkvirtualenv dalgleish fedtsov genome variation variation relevant wang callenberg documentation easy variant nm pull nm g format validate human genome parser parser uncertainty callenberg km changelog github internal method splign group image python letter false genome transcript protein letter amino hgvs parser sequence context false np subset c sequencevariant posedit dup installation easy specific variant import hgvs update wang license target variant hgvs information human mutation license binder stringification variant formatting sequence glyarg formatting canoncial hgvs python nc c package specification splign np glyarg", "git_description_clean": "python library to parse format validate normalize and map sequence variants pip install hgvs", "git_keywords_clean": "bioinformatics genomics sequencing", "pypi_description_keywords": "hgvs documentation biological sequence normalize", "pypi_keywords_clean": "bioinformatics computational biology genome variants genome variation genomic variants genomic variation genomics hgvs"}, "seek-ai/esengine": {"git_readme_keywords": "payload definition esengine document useful library upsert updating support py official s install command library specific document single modeling chainable version paginator arrays python complete payload installation esengine single document transport jinja template elasticsearch elasticsearch elasticsearch index payload representation object document parameter complex update delete document validator explicit error official s mapping specification payload query default esengine field active opensource chunck dynamic search transport delete update filter aggregate project geopoint argument index delete practice reload method filter nested structure example s index moderation high level number query filter reload attribute import contribute esengine control bulk melhod language document bulk communication esengine resultset iterator python dictionary elasticsearch payload effort whole document bunch payload builder method updating explicit way instalation py elasticsearch client esengine mapper esengine index doctype excellent payload helper elasticsearch unofficial iterator payload initialization official elasticsearch instance simpler payload array string field validator indexed document template contribute dimension field esengine elastic production filtering esengine category odm object visibility updating resultset level abstraction release delete communication elasticsearch client powerful python library document mapper coercion simpler lightweight s python action pagination pythonic way verbose special official py discussing complete query building result bulk utility comprehension fixture elasticsearch py install esengine migration available advantage operator elasticsearch object stringfield demand building helper module python resultset single document instance callable resultset object document update job elasticsearch library class method chunk protocol updating single client arrayfield field following elasticsearch runtime catholabs search process payload object", "git_description_clean": "elasticsearch odm object document mapper for python pip install esengine", "git_keywords_clean": "", "pypi_description_keywords": "elasticsearch odm", "pypi_keywords_clean": ""}, "moonso/vcftoolbox": {"git_readme_keywords": "vcf genotype headerparser", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "vcf", "pypi_keywords_clean": "vcf parsing"}, "/pyliblo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyliblo python cython install documentation directory copyright dominic library copyright installation python module example", "pypi_keywords_clean": ""}, "mgaitan/waliki": {"git_readme_keywords": "bolivian implemented hawaiian extensible moingit development togetherjs license documentation twitter president documentation database version control everybody github tribute example upstream consideration important content storage preconfigured project consideration everyone everyone interacting support configurable backend attention concurrent edition bootstrap development version mainstream language meaningful codemirror version installed thorough consideration markdown support content embeddable moinmoin feedback template restructuredtext conflict project blocking realtime", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bolivian moingit plugin nabvar implemented collaborative plugin rsthtml extensible development django template pagination enhance content storage consideration everyone everyone interacting proofreading backend attention dialog concurrent edition broken dependecy development version meaningful markdown support moingit changelog humble tribute compatibility waliki project default moingit togetherjs license unclean support database functional compatible example django upstream important tutorial support concurrent mainstream language bootstrap repository function codemirror version namespace moinmoin restructuredtext conflict project management command uppercase glance waliki pattern python compatibility moingit import documentation twitter virtual terminal revision github templatetag compatibiltiy preconfigured project integration customization release upgraded whatchanged pagination content embeddable feedback travis contribution smarter optional hierarchical pagination blocking realtime waliki result hawaiian waliki waliki actual president migration output markup history version control everybody system support consideration python unicodedecodeerror support configurable waliki content installed thorough consideration transformation crispy webhook documentation status", "pypi_keywords_clean": "django wiki git waliki restructuredtext markdown"}, "fmarani/spam-blocklists": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "github unstable tutorial further information library spamhaus phishtank", "pypi_keywords_clean": ""}, "/openglcontext": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "demonstration wxpython scenegraph navigation significant pyopengl openglcontext extensive", "pypi_keywords_clean": "pyopengl opengl context openglcontext render truetype text vrml vrml scenegraph"}, "cedadev/ndg-httpsclient": {"git_readme_keywords": "package debug information pegler message default matching updated mauntner implementation private added explicit useful added parameter ubuntu install added function support license httpsclient added support request object pyopenssl pyopenssl proxy additional output verification mandatory callback simple script version compatible installation duplicate resource dependency content python checking certificate anothername latter alternative context directory attribute support keyword module description httpclient simple function optional package correct matching initial release python python anyway script minimum release explicit installation installation request https prefix matching https access block matching initial", "git_description_clean": "https client implementation for httplib and urllib based on pyopenssl", "git_keywords_clean": "", "pypi_description_keywords": "package debug information pegler message default matching updated mauntner implementation private added explicit useful added parameter ubuntu install added function support license httpsclient added support request object pyopenssl pyopenssl proxy additional output verification mandatory callback simple script version compatible installation duplicate resource dependency content python checking certificate anothername latter alternative context directory attribute support keyword module description httpclient simple function optional package correct matching initial release python python anyway script minimum release explicit installation installation request https prefix matching https access block matching initial", "pypi_keywords_clean": ""}, "kottenator/django-compressor-toolkit": {"git_readme_keywords": "contribute value scss path default javascript new standard quick install project installation way variable path output default command modern autoprefixer default django compressor executable great new css development default path compressor toolkit django static example libs usage browserify babelify input july custom installation add great language good npm compile autoprefixer css add joy django project browser compiler scss executable path", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django project", "pypi_keywords_clean": ""}, "mbr/svglue": {"git_readme_keywords": "graphic unique svglue svglue custom attribute library python anymore inline ordering output inkscape placeholder element document example installation version document template opacity supplied python important please reference python support generation document something prepared information target renderer template replacement different renderer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "graphic unique svglue svglue custom attribute library python anymore ordering output inkscape placeholder element document example installation version document template raster opacity python important reference python support supplied generation document something prepared information target renderer template replacement different renderer", "pypi_keywords_clean": ""}, "MAVENSDC/cdflib": {"git_readme_keywords": "value default note cdf var data th python cdf shape yyyy hh list form var attrs only numpy version possible value optional specification pair variable attribute name example var prev sparse main epochs iso variable meta short master cdf byte float scheme varget function none value sample delete false compression level none var same number basic variable variable required string value cdflib variable name sparse pad uncompressed data enough time example global number physical record epoch data variable number variable record month sample numeric form var function padded value function millisec microsec encode function picosecond tt example write entry number attribute entry record varying variable attribute level value numeric type second table data format modified date starttime none write cdf nnn ppp np complex specify provided corresponding mm ddthh meta data numpy class epoch tt only use feb unixtime value varget possible minimum string data provided date use master list format terminal command data validation function tt use use reader class module cdfepoch minute second record sparseness fraction numpy np cdf common entry none following data value complicated prereqs hh mm file first epoch range chunk mmm yyyy epoch cdf entry data different cdf month day complex epochrange michael liu epoch epoch leap second endtime none strs variable data byte integer row major maximum possible yyyy mm major data scalar value printed attget millisecond cdf last item need single structure path name none delete ten global variable write new data variable numpy complex forth harter michael last component write globalattrs attribute information class parse default corresponding starting string cdf type expand false range get epoch version cdf only optional cdf nasa dd mmm encode epochs cdf file applicable varinq sparse record entry value false feb new cdf cdf information char length start string varattsget array breakdown dimensional variance time string specify epoch maximum value epochrange get millisecond microsecond single double dimensional sizes attribute depend hour minute time variable type corresponding full variable gzip compression cdf type varying variable file cdf row column default encoded virtual data none first element date time array compute globalattrs globalattrs numpy ndarray corresponding value result write var varattsget variable python module second millisecond range getversion attinq attribute class findepochrange output none entry start time cdf varget applicable only input file level function cdf zvariable unixtime epochs command prompt only portion empty cdf precision number provided python type type cdf spec var library python data type attget attribute tt tt ddthh mm time tt compute tt tt byte various regular variable last updated tt section end time number dictionary file creation iso false complex epoch value np false epoch year value cdf specific epoch cdf time findepochrange epochs value globalattsget endianness specification only kept sizes applicable class cdf pad sparse attribute global attribute type zvariable attribute data corresponding entry cdf class string form dimension number section getversion column majority epoch byte attrs none provided encode rvariable valid cdf extension minimum possible sub time np int form write variable id data var var spec string variable cdf writer str byte path cdf function compute code version dictionary common data string var variable specification chronological order cdf data none expand corresponding cdf prereqs install microsecond cdf epochs id number provided list function specify cdf epoch valid cdf reader rvariable provided variable cdf double required optional start end proper number single attribute time range ss xxx ss mmmuuunnnppp np ndarray variable cdf file path true false day hour template unit record range value pair var var spec none uuu nnn data record cdf info install required name character month checksum indicator variable none ss mmm file future type num record variable istp compliant setup getversion list string type variable type sample use nanosecond specify basic cdf real data variable information value numpy year month variable unit specify second millisec date note attribute value floating portion compute epoch end record epochs starttime microsec nanosec column major numeric data int cdf globalattsget expand tt cdf varinq variable breakdown epochs variableattrs variableattrs table author same file blocking factor use list nanosec picosec mmm uuu python dictionary mon mm ss following defined numpy array cdf spec false write value use non string list tuple cdf documentation corresponding record number utc string float cdf encoded string date leap float np byte complex use write cdf path maximum non false year cdf write variableattrs record variance attribute none ss mmmuuunnn writer class none endtime block factor microsecond nanosecond time numeric corresponding iso form value total cdf cdf nasa library epoch numeric variable file use dimensionality multi total number cdf int np float", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "value default note cdf var data th python cdf shape yyyy hh list form var attrs only numpy version possible value optional specification pair variable attribute name example var prev sparse main epochs iso variable meta short master cdf byte float scheme varget function none value sample delete false compression level none var same number basic variable variable required string value cdflib variable name sparse pad uncompressed data enough time example global number physical record epoch data variable number variable record month sample numeric form var function padded value function millisec microsec encode function picosecond tt example write entry number attribute entry record varying variable attribute level value numeric type second table data format modified date starttime none write cdf nnn ppp np complex specify provided corresponding mm ddthh meta data numpy class epoch tt only use feb unixtime value varget possible minimum string data provided date use master list format terminal command data validation function tt use use reader class module cdfepoch minute second record sparseness fraction numpy np cdf common entry none following data value complicated prereqs hh mm file first epoch range chunk mmm yyyy epoch cdf entry data different cdf month day complex epochrange michael liu epoch epoch leap second endtime none strs variable data byte integer row major maximum possible yyyy mm major data scalar value printed attget millisecond cdf last item need single structure path name none delete ten global variable write new data variable numpy complex forth harter michael last component write globalattrs attribute information class parse default corresponding starting string cdf type expand false range get epoch version cdf only optional cdf nasa dd mmm encode epochs cdf file applicable varinq sparse record entry value false feb new cdf cdf information char length start string varattsget array breakdown dimensional variance time string specify epoch maximum value epochrange get millisecond microsecond single double dimensional sizes attribute depend hour minute time variable type corresponding full variable gzip compression cdf type varying variable file cdf row column default encoded virtual data none first element date time array compute globalattrs globalattrs numpy ndarray corresponding value result write var varattsget variable python module second millisecond range getversion attinq attribute class findepochrange output none entry start time cdf varget applicable only input file level function cdf zvariable unixtime epochs command prompt only portion empty cdf precision number provided python type type cdf spec var library python data type attget attribute tt tt ddthh mm time tt compute tt tt byte various regular variable last updated tt section end time number dictionary file creation iso false complex epoch value np false epoch year value cdf specific epoch cdf time findepochrange epochs value globalattsget endianness specification only kept sizes applicable class cdf pad sparse attribute global attribute type zvariable attribute data corresponding entry cdf class string form dimension number section getversion column majority epoch byte attrs none provided encode rvariable valid cdf extension minimum possible sub time np int form write variable id data var var spec string variable cdf writer str byte path cdf function compute code version dictionary common data string var variable specification chronological order cdf data none expand corresponding cdf prereqs install microsecond cdf epochs id number provided list function specify cdf epoch valid cdf reader rvariable provided variable cdf double required optional start end proper number single attribute time range ss xxx ss mmmuuunnnppp np ndarray variable cdf file path true false day hour template unit record range value pair var var spec none uuu nnn data record cdf info install required name character month checksum indicator variable none ss mmm file future type num record variable istp compliant setup getversion list string type variable type sample use nanosecond specify basic cdf real data variable information value numpy year month variable unit specify second millisec date note attribute value floating portion compute epoch end record epochs starttime microsec nanosec column major numeric data int cdf globalattsget expand tt cdf varinq variable breakdown epochs variableattrs variableattrs table author same file blocking factor use list nanosec picosec mmm uuu python dictionary mon mm ss following defined numpy array cdf spec false write value use non string list tuple cdf documentation corresponding record number utc string float cdf encoded string date leap float np byte complex use write cdf path maximum non false year cdf write variableattrs record variance attribute none ss mmmuuunnn writer class none endtime block factor microsecond nanosecond time numeric corresponding iso form value total cdf cdf nasa library epoch numeric variable file use dimensionality multi total number cdf int np float", "pypi_keywords_clean": "cdf maven lasp pds gsfc"}, "bruth/restlib2": {"git_readme_keywords": "defined transparent concern subsequent community attempt important decision intricate dynamic endpoint django preserialize library inferred possible question processing natural support collection supported encoding django tastypie developer bandwith implementation transparency available additional accessible pragmatic approach fragmented request response familiar default preserialize example resource popular django reference framework complicated arbitrary deterministic response process control philosophy consistent hateoas controller visible unavailable composite middleware numerous trivial purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "rest django http hateoas"}, "mrf345/flask-colorpicker": {"git_readme_keywords": "colorpicker detected extension credit accepted default remote install importance jinja template template credit spectrum spectrum jquery extension multiple spectrum plugin function follow", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "colorpicker template spectrum javascript extension", "pypi_keywords_clean": "flask"}, "brobin/drf-generators": {"git_readme_keywords": "full bash python default pagination python function license travis drf generator production quality default example warning prompt project readme prompt format block bash python usage python modelviewset python apiview action generate valid example generate development svg style manage py model python django drf simple command option action serialization depth apiview generate cruddy tutorial check block python order generator django style viewset python manage drf installation py generate preferred style framework application repetitive work orange svg square target generate everything installed function style full application pagination class version license framework default drf boring installation install viewset modeviewset pypi license related following command readme license default serialization python pypi travis django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full bash python default pagination python function license travis drf generator production quality default example warning prompt project readme prompt format block bash python usage python modelviewset python apiview action generate valid example generate development svg style manage py model python django drf simple command option action serialization depth apiview generate cruddy tutorial check block python order generator django style viewset python manage drf installation py generate preferred style framework application repetitive work orange svg square target generate everything installed function style full application pagination class version license framework default drf boring installation install viewset modeviewset pypi license related following command readme license default serialization python pypi travis django", "pypi_keywords_clean": "api rest framework generate scaffold"}, "regosen/gallery-get": {"git_readme_keywords": "contribute vidble xhamster imagefap imagevenue default fuskator gfycat eroshare fuskator current incremental popular browser imgbox imgur setsdb imgur multiple xhamster xvideos python environment license single command provided xvideos generic output markup additional regular expression familiar gfycat gogoimage installation github python gogoimage imagefap pypi pypi regular reddit generic fallback input destination directory repository function batch downloading python logic imagevenue imgbox corresponding behavior repeat certain redirect forum fallback plugin section gallery alafoto py generic plugin filename", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "environment syntax forum phun vidble xhamster input csv imagefap imagevenue default fuskator gfycat csv contribute eroshare fuskator syntax incremental popular browser imgbox imgur setsdb working directory imgur multiple xhamster xvideos python environment license single ok command provided xvideos generic output markup additional regular expression familiar gfycat gogoimage installation such python gogoimage imagefap regular reddit generic fallback input destination directory download entire function csv provided python logic imagevenue imgbox corresponding behavior repeat certain redirect output csv fallback plugin section gallery alafoto py generic plugin filename current working", "pypi_keywords_clean": "gallery downloader reddit imgur imgbox chan xhamster eroshare vidble pornhub xvideos imagebam"}, "niland/pyniland": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "infos github wrapper", "pypi_keywords_clean": "niland pyniland music search recommendation hosted cloud tagging"}, "/baker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bitbucket script doesn default tracker valid python miscellaneous subsequent single character natural way command function stdout stderr keyword parameter default command class message default argument error function leftover required python identifier command similar output boolean simple decorator decorated function sphinx optional example python version overview doc global please keyword few useful corresponding command return command different chaput error message function single hyphen parameter default version version script doesn look option string interface way available extra opposite unix command module history version error optparse function group", "pypi_keywords_clean": "command line scripting"}, "inveniosoftware/invenio-db": {"git_readme_keywords": "copyright database management documentation available", "git_description_clean": "database management for invenio", "git_keywords_clean": "", "pypi_description_keywords": "invenio further sqlalchemy continuum database management db database initial invenio db invenio copyright further documentation release documenation documentation available", "pypi_keywords_clean": "invenio database"}, "/falcon-autocrud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "autocrud default restful garymonson quick singleresource autocrud important status codeship advantage difference constructor resource functionality something collection response collectionresource sqlalchemy resource response following autocrud control codeship status permission information db session parameter important change relevant runtime address caller special", "pypi_keywords_clean": "falcon crud rest database"}, "NVIDIA/pynvrtc": {"git_readme_keywords": "introduction pynvrtc specified binary complete description interpreter default runtime compilation suitable full example pythonic primary example high instance present documentation nvidia absolute similar interface object compilation library installation constructor execution example exception corresponding status high level important regular status system level interface complete example architecture function pynvrtc package nvidia gpus platform external object program access compiler correct module optional parameter linux", "git_description_clean": "python binding to nvrtc", "git_keywords_clean": "", "pypi_description_keywords": "introduction pynvrtc specified binary complete description interpreter default runtime compilation suitable full example pythonic primary example high instance present documentation nvidia absolute similar interface object compilation library installation constructor execution example exception corresponding status high level important regular status system level interface complete example architecture function pynvrtc package nvidia gpus platform external object program access compiler correct module optional parameter linux", "pypi_keywords_clean": ""}, "Julian/hypothesis-protobuf": {"git_readme_keywords": "hypothesis", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hypothesis", "pypi_keywords_clean": ""}, "lddubeau/glerbl": {"git_readme_keywords": "value risky posix compliant way multiple question checked glerbl command working glerbl github different configuration identical someone necessary nothing glerbl check pylint py glerbl everyone error design glerbl py github ascii check relative useless internet copyright commit everything collection language convert modification installation example upstream multiple glerbl ascii glerbl description setup py repository modified contributor github repository glerbl level variable south whole consistent coding instance choice configuration present trouble check glerbl compliant system pwd unable ascii installation glerbl local dictionary access specific contribution problem friend stash module faq minimum convert glerbl dominique dubeau unique script glerbl anything commit check documentation trailing pull available temporary location python guarantee server management system directory push following coding following scenario different custom server", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "glerbl consistent trailing necessary repository github repository following", "pypi_keywords_clean": "git"}, "/pyopencv": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package traditional attempt countless memory dimensional numpy matexpr library opencv python opencv addition matexpr approach computation numpy generic programming computer different approach successor interoperability indexing functionality opencv solution flatten python flexible functionality memory management wrapper manipulation python pyopencv willow garage scalar interface knowledge pyopencv pyopencv python package programming approach", "pypi_keywords_clean": ""}, "/llvmpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package config python python import license llvmpy prefix system package symbol ztinllvmpassregistrationlistenere actual number custom build common build install documentation similar typeinfo installation default build processor source tarball passregistrationlistener class llvmpy python binary following build configuration undefined symbol anaconda default system compile config mismatch segmentation extracted directory runtime incompatible debug build concurrent build", "pypi_keywords_clean": ""}, "storax/jinjaapidoc": {"git_readme_keywords": "package jinjaapidoc documentation document builtin template automatic generation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package jinjaapidoc documentation compatibility changelog history recursion document template support template release autosummary template automatic generation", "pypi_keywords_clean": "jinjaapidoc"}, "inveniosoftware/invenio-upgrader": {"git_readme_keywords": "software documentation invenio copyright upgrader upgrader invenio upgrader experimental developer", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "current legacy development preview version invenio testsuite experimental development software statement setuptools config version upgrader upgrader dependency version license documentation initial public invenio config alembic version upgrader version invenio copyright myisam incompatible invenio upgrader", "pypi_keywords_clean": "invenio upgrade alembic"}, "dnouri/nolearn": {"git_readme_keywords": "package specific version tracker lasagne saliency prediction neural network multiple overflow utility question welcome license keypoint detection support documentation roelof nolearn lasagne detection tutorial presentation revision different software software project compatible installation public machine nolearn depdendency kaggle minimal example lasagne package release development version install nolearn introductory information commercial support citation advanced runtime refrain submit lasange", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package specific version tracker lasagne saliency prediction neural network multiple overflow utility question welcome license keypoint detection support documentation roelof nolearn lasagne detection tutorial presentation revision different software software project compatible installation public machine nolearn depdendency kaggle minimal example lasagne package release development version install nolearn introductory information commercial support citation advanced runtime refrain submit lasange", "pypi_keywords_clean": ""}, "arkx/mpyq": {"git_readme_keywords": "deflate compression listfile advance kotkavuo archive addition license command included available memory blizzard version installation constructor example mpqarchive object functionality common directory necessary header information copyright copyright starcraft gigabyte following information consult python library environment variable warcraft interface python console", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "deflate compression argparse module listfile advance kotkavuo archive standard library development addition variable alternative replay license install command future pythonpath environment available memory included setup filesystem blizzard version constructor example mpqarchive object functionality common directory necessary header information copyright copyright extraction repository gigabyte following information consult library installation python library script environment variable symbolic warcraft archive block interface mining starcraft install argparse python standard format copyright python console unfeasible", "pypi_keywords_clean": ""}, "/satori-rtm-sdk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python service realtime convenient", "pypi_keywords_clean": "satori"}, "concordusapps/pytest-bench": {"git_readme_keywords": "project information benchmark utility included opensource installation execution", "git_description_clean": "a benchmark utility for pytest", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "naiquevin/pipdeptree": {"git_readme_keywords": "create commit level default immediate optional dependency makefile release release checklist extent possible solution changelog block bash form conflicting dependency useful multiple brief utility tedious possible mention anything above commit child license install other command strict version python output doesn mention annotated representation nested version virtualenv pipdeptree installation duplicate virtualenv circular pipdeptree machine dependency doesn complete output dependency graph human thing installed python helpful status odd editable package input virtualenvs assumption output doesn freeze above output other way update pipeline push package refer possible conflicting other external travisci create warning paricular package information stdout different version welcome conflicting particular package external correct effort upload problem source please install dependency resolution pipdeptree output", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "create commit level default immediate optional dependency makefile release release checklist extent possible solution changelog block bash form conflicting dependency useful multiple brief utility tedious possible mention anything above commit child license install other command strict version python output doesn mention annotated representation nested version virtualenv pipdeptree installation duplicate virtualenv circular pipdeptree machine dependency doesn complete output dependency graph human thing installed python helpful status odd editable package input virtualenvs assumption output doesn freeze above output other way update pipeline push package refer possible conflicting other external travisci create warning paricular package information stdout different version welcome conflicting particular package external correct effort upload problem source please install dependency resolution pipdeptree output", "pypi_keywords_clean": ""}, "sbmlteam/tecombine": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/gerrit-dash-creator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack additional interesting gerrit dashboard extreme useful dashboard creator possible happy argument freenode support single command available building solution content server encoding current outstanding dashboard definition submit change control powerful definition motivating browser pretty problem change request review system", "pypi_keywords_clean": ""}, "lukecyca/pyzabbix": {"git_readme_keywords": "implied warranty default python behavior useful copyright library python module franklin street facility merchantability license documentation output original python version fitness request pyzabbix zabbix example software foundation software authentication session nelson nelsonab general public pyzabbix pyzabbix public license information library original python library warranty program certificate verification particular purpose debug install pyzabbix", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "zabbix monitoring api"}, "rolando/scrapy-redis": {"git_readme_keywords": "basic spiderqueue lpush myspider class scrapy suitable serializer scrapy project scrapy msgpack module useful frontera processing dupefilter rfpdupefilter support persisted other optional redis caveat command redisspider dmoz dmoz version redis key queue class needed resume stopped multiple spider duplication filter priority queue resume crawls cd example scrapy crawl redis package license documentation redis operation dumps localhost redis object redis myproject redisclient target redis bcc donate crawls setup serializer empty scheduler socket timeout redis optional donate bcc redis picklecompat serialization dmoz debug project only key redis btc donate utf first request single redis full redis compatible queue lifoqueue class redis software default scheduler scrapy runspider pipeline redis redis json myspider py domain crawls cleanup redis pickle queue scrapy pythonpath processing ninjagizmos scheduler queue example project serializer json scheduler serializer json dumps hostname custom dupefilter class default scrapyjsonencoder setup scrapy spiderstack lifoqueue max crawl dmoz quality status block python meaning crawls scheduler status target workload py dmoz rfpdupefilter default broad multi redis queue client class scrapy redis custom redis queue priorityqueue giftware processing module multi domain crawler schedule scheduler scheduler prioritization reason python process additional scrapy donate btc queue default key spider expiration scheduler scrapy rediscrawlspider redis first redis dupefilter such callable object runspider myspider pipeline serializes look redis client spider scrapy scheduler persist coverage status documentation python following broad crawls precedence importable priorityqueue alternative redis scheduler scheduler duplication documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spiderqueue lpush myspider class scrapy suitable serializer scrapy project scrapy msgpack module useful processing dupefilter rfpdupefilter support persisted connection string other optional redis caveat command redisspider dmoz dmoz redis connection version redis key needed resume stopped setting python string added multiple spider duplication filter empty default resume crawls cd example scrapy crawl redis package conventiong license documentation setting default redis operation dumps localhost redis object redis myproject redisclient target redis error crawls setup support parameter serializer empty scheduler socket timeout added updated redis optional added redis picklecompat serialization dmoz debug project only key redis utf first request single redis full redis compatible class redis software default scheduler scrapy runspider change require explicit setting pipeline redis redis added redis json first release myspider py domain crawls previous behavior cleanup redis pickle pythonpath release compatible processing ninjagizmos message signature support added spider pypi python compatibility scrapy added example project serializer json scheduler serializer json dumps hostname custom project first dupefilter class setting added default scrapyjsonencoder setup scrapy added support spiderstack lifoqueue max crawl dmoz quality status block python meaning crawls scheduler status target python added added option incompatible change added example encoder py dmoz rfpdupefilter default broad multi client class spider closing scrapy redis custom redis giftware processing module multi domain method signature crawler schedule scheduler scheduler compatible added added setting reason python process additional scrapy require explicit key spider rediscrawlspider redis scheduler scrapy history first spider attribute redis dupefilter such callable object runspider myspider wrong message building compatibility added pipeline serializes redis client bad spider scrapy scheduler persist default default coverage status priority documentation python following behavior schedule broad crawls different support redis precedence importable priorityqueue alternative redis scheduler scheduler duplication automated release spider method documentation status", "pypi_keywords_clean": "scrapy redis"}, "twolfson/sublime-harness": {"git_readme_keywords": "sublime harness development project documentation outside public example execution functionality harness directory arbitrary wolfson environment platform support repository styleguide unlicense framework deprecation brittle external bootstrapping module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sublime harness development project documentation outside public example execution functionality harness directory arbitrary wolfson environment platform support repository styleguide unlicense framework deprecation brittle external bootstrapping module", "pypi_keywords_clean": "sublime text harness runner"}, "exoscale/riemann-wrapper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard instance default override default standard parameter override hostname exception reporting callable riemann default transport particular exception default boolean following keyword riemann introductory bernhard library manual function riemann", "pypi_keywords_clean": ""}, "nandoflorestan/kajiki": {"git_readme_keywords": "sourceforge tracker syntax template inheritance sourceforge travis genshi beautiful integration documentation development project license license github performance github travis genshi example github sourceforge python kajiki chameleon continuous integration repository genshi kajiki templating genshi syntax travis forums compilation documentation license documentation kajiki python kajiki", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tracker braced multiple jquery stuff integration documentation development genshi compatibility support single fileloader license github travis genshi expose semicolon jinja template translation disabled templating script genshi syntax forums python kajiki hg repository sourceforge testability syntax subsequent spurious content integration plugin project license practice integration module performance python syntax example global statement content framework attribute import repository function message extractor compatibility support barrier nohref ismap documentation license collector library support documentation kajiki alphabetical template inheritance sourceforge travis correctness element github kajiki dependency template context chameleon multiline genshi kajiki single codebase travis directory documentation regression experimental feature translatable parsing paragraphs anything jinja genshi beautiful install python trailing output markup several pyramid gettext github sourceforge python pypy translation syntax continuous integration support python genshi jinja consequential remove unused kajiki version compilation ismap declare automatic", "pypi_keywords_clean": "templating engine template genshi jinja jinja mako chameleon xml html xhtml"}, "ornl-ndav/django-remote-submission": {"git_readme_keywords": "virtualenv launch package cookiecutter standard output rename launch isotope reactor spallation useful library celery configuration facility project argument launch celery example virtualenv documentation django application computer functional server multiple available launch django office created password research public example django machine server failure authentication status success session celery launch something similar password routine standard error function national laboratory g python information modified script submission django science browser server g correct socket cookiecutter cookiecutter debug realtime celery", "git_description_clean": "the django remote submission is an asynchronous task job queue using celery distributed task queue and redis in memory data structure store as message broker", "git_keywords_clean": "", "pypi_description_keywords": "virtualenv launch package cookiecutter standard output possible g client documentation rename launch isotope reactor spallation useful history added process comunicate library celery configuration facility project argument launch celery support example virtualenv django application computer functional server multiple available launch django office truncation version created password documentation publication research wrapper truncate example django machine server failure authentication status success session number unicode error directory celery launch something similar attribute password client public wrapper routine release standard error function national laboratory g python flux isotope information modified script submission django science browser server g laboratory history wrapper package client correct interface updated socket source added django cookiecutter cookiecutter debug realtime celery", "pypi_keywords_clean": "django remote submission"}, "google/subprocess32-ext": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "subprocess standard python reliable threaded backport standard library", "pypi_keywords_clean": ""}, "moonso/loqusdb": {"git_readme_keywords": "frequency database interface database number individual family database command locusdb backend loqusdb variant database manager installation homozygous difference database manager hemizygous", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "frequency database interface database number individual family database command locusdb backend loqusdb variant database manager installation homozygous difference database manager hemizygous", "pypi_keywords_clean": "vcf variants"}, "/pyobjc-framework-syncservices": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mobileme application information documention framework documentation translation objective", "pypi_keywords_clean": "pyobjc syncservices"}, "/yajl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module library librelist com email", "pypi_keywords_clean": ""}, "/chaussette": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tornadoapp tornadoapp gevent monkey chaussette chaussette tornado backend tornado wsgiapplication circus simple build status backend tornado described chaussette backend fix gevent previous documentation particularity changelog fix quick backend socketio circus django spirit example django graceful timeout process timeout option report update documentation tornado wsgi server coverage status manager standalone wsgi companion wsgi application feedback backend gevent request backend agnostic tornadoapp", "pypi_keywords_clean": ""}, "macbre/phantomas": {"git_readme_keywords": "full ssl protocol loaded optional js timetofirstimage maximum level useful timeout variable g reliable htmlcount version monitoring elasticsearch response biggestlatency automated frontend series short efficient css request localstorage domainstofirstpaint number cookie separate source tablet report median value fun glitch register film event experimental keepalive single domain iframe maxrequestsperdomain maximum loaded jquery week caching final storage jquery number css json attribute imagesscaleddown certificate docs medianrequestsperdomain median secure console gecko slimerjs local storage following debian video phantomas ondomready domcontentloadedend issue body metric total loading phantomjs viewport domqueriesbyqueryselectorall number duplicated query whitelist disallow inline css old http documentcookieslength length domain medianrequestsperdomain gzipped http usage phantomas party npm engine experimental single element statsd redirect timetolastbyte symlink un strip asset timetofirstcss certain expired response medianresponse first asset slimerjs gecko myapp mainpage austin video terminal nothing domqueriesbyid repeated tablet g please own directory demand such party content marcel duran human css timetofirstjs domqueriesbyclassname number following david mandelin other nodejs har directory film velocity conf loading experimental strip default server default gecko engine modular approach planet performance single encoded folder path order first column jquery output film format g foo maximum number connection development version daily image mozilla planet sjhcockrell jgonera ondomready event document cookie vol frontend lazy loaded default length npmawesome option directory libfontconfig caching disabled statsd shorthand window performance html element progress bar phantomas event conf workshop url colon frontend testing sebastian conference domain aka drupalcon austin basesize self authentication disable reliable yahoo web e ondomready loaded timebackend fold instance http caching french domqueriesbytagname number http status cdn css selector grunt maxcdn experimental feature directory g juve grunt dom hidden headless browser response ajax experimental register cache statsd integration integration first repaint available output received experimental domcomplete current timestamp http authentication csv header persistent grunt devperf handling direct cachingtooshort debug aka whitelist current document first image javascript console aka blacklist caching header blogosphere performance g wiki description slimerjs engine timefrontend json format imagesscaleddown number modular web frontend performance source default something similar option query dom various cloudwatch elasticsearch nesting complex emitter https caching jquery event execution e article authentication information web performance content proper user william gmetais varnish squid receipt dom iframescount document height aka format window phantomas response biggestresponse own custom static experimental assert cli option hidden content video automated column json mobile js redirectstime choice response latency mozilla velocity csv loading progress npm installation module phantomas duplicated css css readme statuscodestrail comma performance news videocount number first js headersbiggerthancontent number reach mainpage rd viewport ability custom phantomas jqueryversion version jquery framework nodejs npm loading spinner md documentcookiescount number current number medianresponse median directory experimental look david amend http response commonjs module reach domcomplete extra work separate module phantomas device graphite graphene environmental variable http request different film strip nodeswithinlinecss number phantomas juve depth domainstodomcomplete number jquery jqueryversion inemo gomezd javascript ssl header htmlcount number domqueriesbyid number support required separate multiple domqueriesavoidable number first response grunt phantomas profit optimization phantomas custom shortcut option iframescount number dom complexity related cssom log default engine phantomjs issue response body prefix maxcdn blog stefanjudis usage report timeout application web system grunt js response smallestlatency collector first css gmetais vgangan experimental folder message depth css domain filtering html analyze css phantomjs webkit yaml twitter blogosphere debian ubuntu javascript execution element single cookie user agent please timetofirstbyte requeststodomcomplete number vgangan cphoover password amend automated front config disable javascript jgonera william total duration sum google eventsdispatched number lazy loadable enterprise vol custom user loaded dom anything rd party attribute dom spec document firstpaint helper information dominteractive phantomas phantomjs relative value render webkit phantomjs performance blogosphere performance calendar continuous integration gomezd stefanjudis js global performance performance performance regression total number proxy server backtrace", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "modular integration phantomjs binary module version performance", "pypi_keywords_clean": "high performance web sites metrics monitoring phantomas phantomjs web development webperf"}, "nickoala/sensor": {"git_readme_keywords": "photoresistor enable value default level simple interact quantity linux separate library chief motivation useful serial protocol celcius degree individual sensor namedtuple temperature sensor pressure temperature sensor bmp device address sensor htud course sensor address reading pressure compatible installation example educational number conversion suppose humidity temperature various d converter simple celcius example pressure analog troublesome download separate bmp pressure high above raspberry default device access htud humidity method python package reading humidity python raspbian reading package download", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "raspberry pi raspi rpi sensor"}, "KrishnaswamyLab/graphtools": {"git_readme_keywords": "terminal pairwise interface available example assistance coverage landmark version installation building following twitter", "git_description_clean": "tools for building and manipulating graphs in python", "git_keywords_clean": "", "pypi_description_keywords": "terminal pairwise interface available example assistance coverage landmark version installation building following twitter", "pypi_keywords_clean": "graphs big data signal processing manifold learning"}, "jantman/versionfinder": {"git_readme_keywords": "major initialization installed version coverage report simple don fork code acceptance multiple library dict master branch class development source directory clone dirty support github create install further information version simple push url editable version py stable usable url commit fork specific versionfinder image git clone github upload commit install bug testing testing git fork block pycon new branch sdist install alt sphinx release checklist create pull branch alt version information git push git repo license merge additional github open target image e mypackage package example change file source control install easy dirty software repo install egg install usage versionfinder git overview attribute setup py repository project status json travis ci issue readme rst issue confirm github tag image alt py install message control url git url sphinx documentation clone install pip install disclaimer py setup checklist open successful travis gh install sdist python distribution overview versionfinder url install alt coverage venv block python branch install feature alt project distribution code install wheel repo release specified python local pip alt travis specific commit specific tag python python file dirty detailed git tox command version source specific versionfinder version push tag python package exact requirement module alt github pypirc file package distribution startup target alt pytest ini pull request commit tag upload package result local git valid possible target python check wheel install pull install install code block distribution version verbose pytext exception tag install fork url dirty install github confirm use version number status active priority create new git information application process directory install push installed last release welcome object development fork install editable rst call correct repo easy install pytext output py release image", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "major initialization installed version coverage report simple don fork code acceptance multiple library dict master branch class development source directory clone dirty support github create install further information version simple push url editable version py stable usable url commit fork specific versionfinder image git clone github upload commit install bug testing testing git fork block pycon new branch sdist install alt sphinx release checklist create pull branch alt version information git push git repo license merge additional github open target image e mypackage package example change file source control install easy dirty software repo install egg install usage versionfinder git overview attribute setup py repository project status json travis ci issue readme rst issue confirm github tag image alt py install message control url git url sphinx documentation clone install pip install disclaimer py setup checklist open successful travis gh install sdist python distribution overview versionfinder url install alt coverage venv block python branch install feature alt project distribution code install wheel repo release specified python local pip alt travis specific commit specific tag python python file dirty detailed git tox command version source specific versionfinder version push tag python package exact requirement module alt github pypirc file package distribution startup target alt pytest ini pull request commit tag upload package result local git valid possible target python check wheel install pull install install code block distribution version verbose pytext exception tag install fork url dirty install github confirm use version number status active priority create new git information application process directory install push installed last release welcome object development fork install editable rst call correct repo easy install pytext output py release image", "pypi_keywords_clean": "version git pip pkg resources setuptools"}, "hynek/doc2dash": {"git_readme_keywords": "python browser documentation status relevant functional offline documentation available docdash certain github coverage extensible generator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python dependency information browser documentation status relevant schlawack offline documentation available necessary feature docdash bugfix github coverage development extensible generator", "pypi_keywords_clean": ""}, "bitmazk/django-localized-names": {"git_readme_keywords": "contribute override default tracker chinese setting described adventurous possible standard project english language similar reusable django additional structure github installation templatetag coverage django localization following formatted following roadmap interface specific template", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute override default tracker chinese setting described adventurous possible standard project english language similar reusable django additional structure github installation templatetag coverage django localization following formatted following roadmap interface specific template", "pypi_keywords_clean": "django app names localization ln"}, "/dxlmarclient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance python client message mcafee documentation feedback client library response library overview wrapper copyright mcafee dxl python purpose specific dxl installation license copyright license version", "pypi_keywords_clean": "opendxl dxl mcafee client mar"}, "/tempest": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "basic stestr cluster tempest useful standard support working cloud guide command stable interface way versioning cloud explicit various openstack simpler setup local assumption broad array option unittest repository openstack release lxc cloud single tempest program shell explicit tempest release method tempest configuration sample fix release discovery openstack cluster public openstack compatibility burden default tempest discover private tempest z patch runner working directory unittest tempest config argument project keystone endpoint multiple openstack database library interface deployment design increment matching cloud tempest local artifact openstack cloud compatible corresponding version example python unittest important number tempest workspace generation verifiable system stable branch document import following command workflow repository integer command tempest tempest source quickstart supported openstack library tempest major feature level local tempest subdir whole enhancement tempest sample tempest tempest library configuration tempest design common configuration artifact storage semver configuration complete coverage initial setup scenario release versioning regular reference legacy method cycle tempest common version tempest environment local ready quicker specific section upstream stable common activity current working package default value workspace directory behavior second valid validation documentation separate configuration devstack install several first stestr please such exception python install tempest manual interaction directory bug fix local config openstack integration incorrect assessment openstack deployment possible enhancement endpoint valid job information different added functionality openstack public implementation specific py python legacy tempest directory", "pypi_keywords_clean": ""}, "rivrproject/rivr-peewee": {"git_readme_keywords": "middleware controller decorator middleware peewee peewee database bsd environment variable property specific environmental integration database object middleware installation following environmental variable", "git_description_clean": "rivr integration for the peewee database orm", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "lorehov/mongolock": {"git_readme_keywords": "unique account second way example ymdhm optional duration configuration expire worker worker configured instance concern specify mongolock constructor strange machine important mongoclient mongoreplicasetclient analogue sequence worker critical section connection stealing mongoreplicasetclient specify different play worker worker taska worker method problem situation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unique account second way example ymdhm optional duration configuration expire worker worker configured instance concern specify mongolock constructor strange machine important mongoclient mongoreplicasetclient analogue sequence worker critical section connection stealing mongoreplicasetclient specify different play worker worker taska worker method problem situation", "pypi_keywords_clean": "lock mongodb"}, "ixc/edtf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "arbitrary definition way useful multiple library approximate partial uncertain approximate model interval related python single other interpretation julian century interpretation equal inaccurate exponential form unspecified subclass northern hemisphere display format model admin ambiguous parameter current century few different definitive storage language representation astropy month mapping fuzzy default difficult language parser primary specification database specfication example django basic english unicode different python partial uncertain ostensible natural language dd convenient numerical season ancient padding desired instance complete accuracy coverage filtering uncertain timescale flexible property century circumstance simple django english natural ticket form natural certain approximation implementation underlying current roundtrip possible utility python module future uncertainty implement such python conversion month visible object partial unspecified precision precise", "pypi_keywords_clean": "edtf"}, "nschloe/pykry": {"git_readme_keywords": "multiplication installation package license repository available release wrapper subspace convenient krypy distribution number publish", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "multiplication installation package license repository available release wrapper subspace convenient krypy distribution number publish", "pypi_keywords_clean": ""}, "civisanalytics/glmnet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package prediction response gaussian ecosystem installation multiple response similar logistic wrapper regression library", "pypi_keywords_clean": ""}, "/python-sql": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "numeric default select simple query delete schema insert condition update multiple library condition select select select output delete query update query join select python insert query query update condition delete qmark pythonic way group", "pypi_keywords_clean": ""}, "nitros12/analyticord": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python analyticord universal wheel available license analyticord installation analyticord license installation installation", "pypi_keywords_clean": ""}, "pallets/pallets-sphinx-themes": {"git_readme_keywords": "werkzeug consistent available documentation install appropriate extension", "git_description_clean": "sphinx themes for pallets and related projects", "git_keywords_clean": "sphinx sphinx theme sphinx extension", "pypi_description_keywords": "werkzeug consistent available documentation install appropriate extension", "pypi_keywords_clean": ""}, "pyexcel/pyexcel-ods": {"git_readme_keywords": "reading function relevant development column column adviable revenue performance improvement ezodf explicit import command python partial install upgrade product please setup os unlink format pyexcel feature special guide license complex import os previous example party library sample sheetx special notice linux financial support builds please support obvious enough reading columns project sister library generic setup install relevant please update stream installation column limit likely update documentation library testcode install moban install pyexcel standalone library license developer memory continue company binary content python pagination cd pyexcel reading different development upgrade stringio instance partial block bash whole benefit instance other sister pyexcel plugin developer guide acceptance criteria block python guide development update changelog environment dictionary interesting major performance individual relevant documentation specific contribution amount little external dependency pyexcel version please launch rd party valid python license documentation limit library acceptance os os bsd license memory style please change such documentation additional python bash support python reading directory backer lxml wrapper library patreon following manipulate pyexcel organisation information welcome pagination feature please install pyexcel", "git_description_clean": "it is plugin to pyexcel and provides the capbility to read manipulate and write data in ods formats using odfpy", "git_keywords_clean": "ods", "pypi_description_keywords": "reading function relevant development column column adviable autoatic conversion string multiple revenue development buggy odfpy updated compatibility odfpy updated performance improvement ezodf explicit import libreoffice updated command issue index python partial equal install upgrade product please yield setup updated handle format pyexcel feature special valid duration generator support complex interface update import feature previous example party library license updated updated pyexcel sample sheetx special notice linux financial support default added fix builds module updated issue command please support obvious enough reading please issue updated bug columns project sister library generic setup install relevant please update lml updated extra option recognize currency added include stream installation unseekable stream column limit complete fix currency updated complete dependency odfpy fix number likely handle unseekable update documentation install moban install pyexcel issue pthms standalone library json license developer memory continue support multi integer compulsory package company binary content sheet feature migration power python pagination cd pyexcel different development reading service module upgrade property added stringio instance office comment partial issue empty block bash whole added ignore cstringio remove python library pyexcel number columns benefit instance other sister added support added streaming throw unicode pyexcel plugin acceptance criteria support added block python fix odfpy python added uniform columns update changelog ball updated field updated performance boost sheet book environment pyexcel remove fix excessive dictionary interesting major performance pyexcel pyexcel individual initial release relevant documentation specific contribution amount handle pyexcel little external dependency libreoffice datetime pyexcel version please launch added recognize rd party valid odfpy version python license documentation limit library acceptance updated issue bsd license memory change such fix integeraccuracylosserror duration added exception documentation additional python include license plugin interface support pagination bash support conversion python reading unreleased added directory situation integerprecisionlosserror backer lxml wrapper library patreon http response support python bug fix string throw manifest updated support following manipulate pyexcel organisation information release updated multiple sheet welcome pagination feature multi datetime field please install pyexcel", "pypi_keywords_clean": "python"}, "/scikit-umfpack": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "possible installation gccs direct solver numpy documentation installation box library source directory ubuntu development command scikit umfpack available package manager prebuilt furthmore building optional important compile install upgrade suitesparse suitesparse python suitesparse dependency building helpful system directory install scikit otherwise linalg umfpack solver building suitesparse upgrade scikit building metis source umfpack scikit", "pypi_keywords_clean": ""}, "telminov/django-park-keeper": {"git_readme_keywords": "administration monitoring application", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "devopsconsulting/uwsgidecorators-fallback": {"git_readme_keywords": "package intended outside fallback uwsgidecoratorsfallback pyhton import module asynchronous outside nothing following function", "git_description_clean": "uwsgi api python decorators with fallback for running outside uwsgi", "git_keywords_clean": "", "pypi_description_keywords": "package intended outside fallback uwsgidecoratorsfallback pyhton import module asynchronous outside nothing following function", "pypi_keywords_clean": "uwsgi"}, "hectane/pyhectane": {"git_readme_keywords": "process instance framework backend object available pyhectane python installation following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "titusz/epubcheck": {"git_readme_keywords": "package appveyor epubcheck functionality epubcheck command initial epubcheck detailed epubfolder original columns documentation development standard project schemas validation command convenient validation epubcheck development directory validate epubcheck python software system report current directory coverage status status introduction pypy quickstart schema validation python library quickstart command travis license installation documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package appveyor epubcheck functionality epubcheck command commandline support changelog initial epubcheck detailed epubfolder original columns documentation development standard project schemas validation command development status convenient validation epubcheck development directory validate epubcheck dependancy python software reporting python libary system report current directory custom coverage status status introduction schema validation python library quickstart command travis license installation module documentation status", "pypi_keywords_clean": "epub validation epubcheck ebooks qa idpf"}, "sqlanywhere/sqlalchemy-sqlany": {"git_readme_keywords": "package ag database interface tcpip port python driver apache license sqlalchemy dialect following software copyright empty database license version project compliant driver interface driver required easy default port django sql affiliate company execute license standard sqlalchemy sqlany dialect pip port execute general sqlalchemy sql top sqlalchemy sqlany license file sqlalchemy version database server tcp ip python sql feedback interface version source following command required software", "git_description_clean": "sqlalchemy driver for sap sybase sql anywhere", "git_keywords_clean": "", "pypi_description_keywords": "package ag database interface tcpip port python driver apache license sqlalchemy dialect following software copyright empty database license version project compliant driver interface driver required easy default port django sql affiliate company execute license standard sqlalchemy sqlany dialect pip port execute general sqlalchemy sql top sqlalchemy sqlany license file sqlalchemy version database server tcp ip python sql feedback interface version source following command required software", "pypi_keywords_clean": "sap sybase sqlanywhere sqlalchemy"}, "/wordnik": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/cx-oracle": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database specification interface", "pypi_keywords_clean": "oracle"}, "nupic-community/hitcpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python client", "pypi_keywords_clean": "htm api rest nupic client"}, "astraw38/lint": {"git_readme_keywords": "package message default current original validation configuration install gpylinter command environmental trigger example validator installation basevalidator branch following baselinter ability manual testing automatic", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "message default current original validation configuration install gpylinter command environmental trigger example python validator installation basevalidator branch following baselinter ability python package manual testing automatic", "pypi_keywords_clean": ""}, "naiquevin/lookupy": {"git_readme_keywords": "startswith istartswith simple inequality containment generic library useful multiple child startswith string insensitive containment istartswith insensitive keyword helpful django queryset startswith endswith nothing collection object conditional clause clause default block pycon double pycon lookup existent database functional evaluation insensitive endswith filter regular expression example equivalent filter method logical operator version string iendswith insensitive facebook membership startswith string startswith filter nested familiarity integer everyday stuff moment string endswith requeststatusexact original nested filter endswith iendswith python installation endswith string github predictable g lookup parameter nested collection consistent lookupy lookupy search filter python library deeply nested lookup overall behaviour contain coverage optional concept facebook github measure performance filter gotchas bitwise archive expression search actual positional quick leverage python optional implement building behaviour predictable pycon lookupy equality default subset predefined subdirectory overriden complex lookup insensitive startswith different interface block consumption", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "startswith istartswith simple inequality containment generic library useful multiple child startswith string insensitive containment istartswith insensitive keyword helpful django queryset startswith endswith nothing collection object conditional clause clause default block pycon double pycon lookup existent database functional evaluation insensitive endswith filter regular expression example equivalent filter method logical operator version string iendswith insensitive facebook membership startswith string startswith filter nested familiarity integer everyday stuff moment string endswith requeststatusexact original nested filter endswith iendswith python installation endswith string github predictable g lookup parameter nested collection consistent lookupy lookupy search filter python library deeply nested lookup overall behaviour contain coverage optional concept facebook github measure performance filter gotchas bitwise archive expression search actual positional quick leverage python optional implement building behaviour predictable pycon lookupy equality default subset predefined subdirectory overriden complex lookup insensitive startswith different interface block consumption", "pypi_keywords_clean": ""}, "futurecolors/django-geoip": {"git_readme_keywords": "", "git_description_clean": "app to figure out where your visitors are from by their ip address", "git_keywords_clean": "", "pypi_description_keywords": "location geodata optional request object database address country", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-cognitiveservices": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility availability management lropoller underlying complete service management cognitiveservicesaccount behavior response release history operation library argument syntax spellcheck general resource manager project changelog release g location positional default behavior format syntax available skuname approved callback polling optional version usages operation cognitive generator performance python limited important keyword argument format wheel package generation session completion azureenum polling parameter bundle package formatting initial running operation wheel breaking algorithm initial release python python microsoft constructor parameter general breaking external feedback context manager unrecognized section breaking parameter custom wheel extension release apiversion", "pypi_keywords_clean": ""}, "materialsproject/custodian": {"git_readme_keywords": "robust bleeding chance random developmental version mechanism complete component vienna simulation package consult install required additional complete unittesting several initio simulation management framework optional github version research example custodian python flexible likely install pymatgen necessary release plugin framework errored license custodian following important aspect recovery modified different information script current version throughput pymatgen nwchem specific handling source impossible python package certain", "git_description_clean": "a simple robust and flexible just in time job management framework in python", "git_keywords_clean": "", "pypi_description_keywords": "robust bleeding chance random developmental version mechanism complete component vienna simulation package consult required additional complete unittesting several initio simulation management framework optional github version research example custodian python flexible likely system install pymatgen necessary release plugin framework errored license custodian following important aspect install custodian recovery modified different information current version pymatgen throughput nwchem specific handling impossible python package certain", "pypi_keywords_clean": "jit just in time job management vasp"}, "/hatcher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "avsaj/python-midi": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/treebie": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implementation basic", "pypi_keywords_clean": ""}, "josegonzalez/github-backup": {"git_readme_keywords": "package confidential information appropriate format account keychain box lfs wikis factor authentication argument personal access token future pull organization repository backup github installation python everything authentication security single organization organization lfs option password backup single github username entire organization repository keychain account github usage github backup permission secure account argument password box keychain access github personal access token", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package confidential information appropriate format account keychain box lfs wikis factor authentication argument personal access token future pull organization repository backup github installation python everything authentication security single organization organization lfs option password backup single github username entire organization repository keychain account github usage github backup permission secure account argument password box keychain access github personal access token", "pypi_keywords_clean": ""}, "kennethreitz/flask-sslify": {"git_readme_keywords": "default response extension config install support function decorator transport security interested example handler application important install installation authentication advisable sustainability security consideration incoming occur duration parameter config motivation redirect request", "git_description_clean": "force ssl on your flask app", "git_keywords_clean": "", "pypi_description_keywords": "incoming application extension", "pypi_keywords_clean": ""}, "ohjeah/cache-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/noisy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python different license documentation release version", "pypi_keywords_clean": ""}, "cenkalti/what": {"git_readme_keywords": "unittest process support whaterror assertionerror block compatible", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unittest process support whaterror assertionerror block compatible", "pypi_keywords_clean": "unittest process subprocess"}, "scoutapp/scout-apm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package full installation instrumentation account python django information quick pyramid config signup referencing support transaction documentation performance python pyramid bottle environment support scoutapm python python issue celery pyramid support please celery", "pypi_keywords_clean": "apm performance monitoring development"}, "/django-bootstrap-crud-templates": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package detail html value default block aesthetic css select labor template customization bootstrap crud css html extend bootstrap desired django account boilerplate logic class django bootstrap project homepage complete crud license brief description single collection manual definition version select few encompassing project pertinent information urls urlgenerator simple class context html detail information external bootstrap template installation add few urls repository crud exposure function automatic generation following therefore html optional django class source project context variable minified bootstrap bootstrap css module crud urls template extend little", "pypi_keywords_clean": "django templates bootstrap bootstrap templates crud templates"}, "blockchain-certificates/cert-core": {"git_readme_keywords": "system config package several python default current community storage configuration viewer project legacy python environment config example support storage interface separate storage change certificate storage certificate transaction version filesystemstore example temporary bridge gridfs config certificate system directory blockchain certificate db repository recommended publish contact contact storage location following configuration different python library example gridfs gridfs", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "system config package several python default current community storage configuration viewer project legacy python environment config example support storage interface separate storage change certificate storage certificate transaction version filesystemstore example temporary bridge gridfs config certificate system directory blockchain certificate db repository recommended publish contact contact storage location following configuration different python library example gridfs gridfs", "pypi_keywords_clean": ""}, "noripyt/django-cachalot": {"git_readme_keywords": "available discussion documentation available", "git_description_clean": "no effort no worry maximum performance", "git_keywords_clean": "django python performance cache", "pypi_description_keywords": "available discussion documentation available", "pypi_keywords_clean": ""}, "ysimonson/optfn": {"git_readme_keywords": "varargs python function simonw default stderr arghelp character pattern please letter string subcommand standard library utility geocoder support required complete control command notstrict functionality notstrict boolean required positional example application number keyword relevant python required argument optparse custom function available following syntactic subcommand pattern stdout individual parameter approach interface introspection incompatible special moment", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "davepeck/httreplay": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "opporunity documentation recording january httreplay community network available example", "pypi_keywords_clean": "test unittest http https replay testing"}, "Azure/azure-mgmt-iothubprovisioningservices": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package management lropoller complete service management project changelog behavior response release history library argument syntax resource manager changelog release bugfixes compatibility positional default behavior package compatibility apiversion initial callback polling optional version generator keyword argument generation package version completion azureenum uninstall bundle package polling parameter formatting initial running operation algorithm initial release parameter microsoft general breaking history general feedback iothub provisioning unrecognized external compatibility important", "pypi_keywords_clean": ""}, "/pecan-mount": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "important decision further execution useful multiple everything necessary utility living unison different callable location actual wsgi dotted empty representation apache loading example callable attribute wsgi server single application right wsgi middleware dictionary different wsgi application object convenient application configuration", "pypi_keywords_clean": "mount pecan wsgi"}, "warner/ed25519": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python interface security implementation high portable comfortable python operation signature system supercop public", "pypi_keywords_clean": ""}, "blockstack/virtualchain": {"git_readme_keywords": "package design standalone implementation complete blockchain virtual underlying blockchain virtual blockchain virtualchain virtualchain presence virtualchain library efficient environment processing database available operational installation python x variety global machine boundless potential specialized dccl blockstack virtual functionality system blockchain network metadata such example following information consistent flexibility python library source python package contract system", "git_description_clean": "library for scanning blockchains and running blockstack state engines", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "blockchain bitcoin btc cryptocurrency data"}, "/chesstools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard transposition conjunction validation framework utilizes developer compensation intuitive interface chesstools checkmate stalemate algebraic stalemate repetition", "pypi_keywords_clean": ""}, "robotframework/robotremoteserver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jython ironpython ironpython pypy useful class server version main difference example sourcecode following example keyword decorator library apis process optional uri other robot list general test script custom name address method free port remote server interface documentation default other programming documentation github installation approach generic remote server instance project argument various configuration jvm ironpython main tread library interface background file several different python remote port file equivalent pypi robot server port attribute python jython signal jython jvm function console ironpython net integer remote interface decorator static xml rpc server series pypi extract testing instance command line github server configuration rpc function python programming same port active server local apis work thread work other port pypy remote module installation library instance version robot source distribution rpc interface hybrid apis robot framework background thread remote library main benefit python module server project sourcecode python available tuple default port initialization parameter distribution available framework remote aforementioned xml github pypi support python port address information following configuration different main limitation programming language actual port test library tags", "pypi_keywords_clean": "robotframework testing testautomation remoteinterface"}, "saxix/django-adminactions": {"git_readme_keywords": "django contrib project export collection adminsite fixture export download documentation changelog modeladmin tracker download useful stable development django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib project export collection adminsite fixture export download documentation changelog modeladmin tracker download useful stable development django", "pypi_keywords_clean": ""}, "tetherless-world/kleio": {"git_readme_keywords": "software information license serialization rdflib webpage continuous implementation project webpage documentation deserialization output available provenance installer continuous integration readthedocs library", "git_description_clean": "a python library for wc provenance data model supporting prov o", "git_keywords_clean": "", "pypi_description_keywords": "entity entity entity activity implementation build status installer entity serialization wc provenance license documentation output available format turtle graphs software example activity turtle output project webpage import release continuous integration readthedocs build activity entity information turtle activity activity python library webpage continuous deserialization module integration status example entity", "pypi_keywords_clean": "provenance prov prov rdf"}, "wearpants/measure-it": {"git_readme_keywords": "instrumentation instrument behavior homepage performance production", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "behavior cheeseshop measure homepage counting performance production", "pypi_keywords_clean": ""}, "steemit/steem": {"git_readme_keywords": "noninfringement documented delimited mining simple steemd normal operation single writer development g support command sufficient steemd virtual memory release number version beanstalk service following virtual custom healthcheck health docker container commit format default location allocation linux ubuntu option connection cryptocurrency centric nginx reverse hierarchical possible system bz format source everyone stable steemd possible service reverse proxy wallet setting subsequent content website steembluepaper pdf variable copyright shared memory container environment performance preferred blockchain example social consensus technical software security official repository multiple reader default config bitcointalk forum following environment bucket ramdisk barrier steemwhitepaper pdf liable coverage configuration blockchain decent single ubuntu quickstart market developer portal entrepreneurial elastic beanstalk implied memory configuration accurate present trouble smtwhitepaper pdf merchantability fitness proof currency symbol failure developed blockchain liability contract amazon elastic inflation websocket warranty action particular purpose little further development anything adoption consensus algorithm dapps current blockchain gb memory available advantage building available steemd limited express fertile configuration config volume directory experimental initial memory config convenience docker different mineable welcome platform existence block", "git_description_clean": "the blockchain for smart media tokens smts and decentralized applications", "git_keywords_clean": "steemit steem blockchain pp node social network cpp", "pypi_description_keywords": "", "pypi_keywords_clean": "steem steemit cryptocurrency blockchain"}, "vaab/colour": {"git_readme_keywords": "default equivalence traditional equality saturation simple concern reduced sample luminance equality valentin purpose function class scenario instantiation white equality object color separate white color equivalence white select specific interested compatible python process comparison support minor commit bisect commit functionality welcome please branch chartreuse color ll equivalence black g digit g following picking mechanism object default variation gray method source hex representation c saturation appveyor function please equality rgb hashable default feel pep equality function hexadecimal representation cosmetic intuitive color luminance license author lambda c course comparison function import rgb installation normal example equivalent customized factory class equality content doc number generation attribute commit message feature please reverse operation few colour import compatible chartreuse digit hex rgb equivalence unique comparison color comparison specific revision green notice ll default single purpose function saturation color please colour bunch hex digit human format gitchangelog color factory rainbow issue license human color commit summary stringable yellow representation rgb representation color equivalent black instance pick suggestion color g digit g compatible css hash color specification github coverage color white please mention application m saturation property pypi version color picker html color python object different amount hex human saturation saturation consistent lazy m equality comparison push request travis full conversion function format revision branch pythonic way common color saturation equivalence equivalence lambda black implementation build status master complete rgb format unusual color representation issue g valid possible different computer welcome push ll look green perfect solution particular picker available bsd license several accessible middle usable full green pylint try callable picking algorithm something typographic previous commit color picking first color white graphical representation string conversion mutable object different web feature current version pick key object web representation shouldn", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default equivalence traditional equality saturation simple concern reduced sample luminance equality cmyk support valentin leckey first purpose function class scenario instantiation new color white equality import valentin object color separate white color equivalence white select specific interested compatible python process comparison support key bisect commit minor commit functionality welcome please branch chartreuse color ll ballet equality equivalence black g digit g following picking mechanism object default variation gray method source hex representation c saturation appveyor function please equality rgb hashable default feel equality function hexadecimal representation cosmetic intuitive color luminance license author lambda c course comparison function import rgb structure installation normal example fix avoid equivalent customized factory class equality content number generation fix added attribute commit message feature please reverse operation commit fixes few colour import compatible chartreuse digit hex rgb equivalence unique comparison color comparison first import specific revision green notice ll default single purpose function saturation color please colour bunch hex digit color escape human format gitchangelog unexpected behavior insensitive chris color factory rainbow issue license lowercased fix human color commit summary stringable yellow representation rgb representation color equivalent black instance suggestion changelog fix color g digit g sequence generation compatible css hash color specification github coverage color white please mention customizable application m saturation property pypi version color picker html color python object fixes valentin license changelog different amount hex human saturation saturation consistent lazy m equality comparison push request travis object fixes full conversion function format fix unexpected revision branch pythonic way common color saturation equivalence equivalence lambda black implementation build status master complete rgb format unusual color representation property fixes issue g valid possible different computer welcome push added mention ll look green perfect solution particular picker sayegh new available bsd license several accessible middle usable full green exception pylint try callable picking algorithm something typographic previous commit color picking first color operator fixes word white graphical representation equality support new colour string conversion escape sequence mutable object different web feature current version todo object web representation shouldn", "pypi_keywords_clean": ""}, "kmike/port-for": {"git_readme_keywords": "current machine installation system install something management tracker subsequent ephemeral contributing development useful multiple utility g applied service restart virtualenv script checkout command several unassigned version github coverage machine software important regular wikipedia number status likely return unused otherwise temporary naming localhost python library access association shouldn association library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "current machine installation system install something management tracker subsequent ephemeral contributing development useful multiple utility g applied service restart virtualenv script checkout command several unassigned version github coverage machine software important regular wikipedia number status likely return unused otherwise temporary naming localhost python library access association shouldn association library", "pypi_keywords_clean": ""}, "felipecruz/zmqpy": {"git_readme_keywords": "reliable project markdown separate improved verzion deprecation codebase backend everybody", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "tomprince/txgithub": {"git_readme_keywords": "library api version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library api version", "pypi_keywords_clean": ""}, "jidn/lds-org": {"git_readme_keywords": "hmm current information install endpoint username password possible username create session exact information command household repeated website computer available additional output tech photo endpoint information example python process number create seperate password environment option conneciton understanding following secure ldsorg password job equivelent different individual bashrc clerk password secret above quickstart authorized module member possibility", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hmm current information install endpoint username password possible username create session exact information command household repeated website computer available additional output tech photo endpoint information example python process number create seperate password environment option conneciton understanding following secure ldsorg password job equivelent different individual bashrc clerk password secret above quickstart authorized module member possibility", "pypi_keywords_clean": "lds"}, "/textgrid": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Diaoul/pywunderground": {"git_readme_keywords": "pywunderground api", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pywunderground api", "pypi_keywords_clean": "weather wunderground underground"}, "steiza/tinyfeedback": {"git_readme_keywords": "machine please project config check license simple tinyfeedback install previous important server interface logging something graphs tinyfeedback helper component custom graphs webserver server example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple tinyfeedback graphs interface", "pypi_keywords_clean": "dashboard web graph metrics"}, "/pytmx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "bartTC/django-wakawaka": {"git_readme_keywords": "project wikiindex django framework permission integration codacy simple current python example project letter wakawaka django format default unobstrusive library django default development project revision history pipenv example regular expression py optional installation development environment internal python application comprehensive permission system permission system testsuite delete installed py example scheme ability django project behaviour camelcase django permission django wakawaka configuration wakawaka", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project wikiindex django framework permission integration current python python compatibility example project wakawaka django format default unobstrusive library group support django default development project support httpresponsenotfound functional revision history pipenv example regular expression py optional installation development environment internal changelog django gettext python application comprehensive permission replaceable wikipage further cleanup system permission system testsuite track installed py example scheme ability django project behaviour camelcase django permission django compatibility django wakawaka configuration wakawaka translatable pipenv changelog", "pypi_keywords_clean": ""}, "abarker/pytest-helper": {"git_readme_keywords": "package python separate default documentation install directory standalone several additional relative python interpreter useful additional utility function example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project default documentation install independent directory testing framework several relative official function example", "pypi_keywords_clean": "pytest"}, "kmike/pymorphy2-dicts": {"git_readme_keywords": "package specific pymorphy uk cookiecutter template dictionary ltopencorpora pymorphy ltopencorpora pymorphy uk package package languagetool russian languagetool opencorpora xml language specific pymorphy cookiecutter languagetool ltopencorpora ukrainian folder xml", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bitbucket license pymorphy environment variable installation install creative template pymorphy installation repository attribution following development dictionary", "pypi_keywords_clean": ""}, "SimonAlfie/fabricate": {"git_readme_keywords": "other fabricate default simple hidden stuff ordinary python enter reason replacement memoize brush technology project copyright brush license other mccloskey command fabricate fabricate figure available strace python readable example mailing python cleanup system alford memoize fabricate scripts implicit stuff complex scripts single python following mccloskey memoize clarity language different script parallel building explicit access license fabricate power linux", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "other fabricate default simple hidden stuff ordinary python enter reason replacement memoize brush technology project copyright brush command figure available strace python readable example hoyts status fabricate cleanup system alford memoize fabricate scripts implicit stuff fabricate complex scripts single python following clarity language script explicit access power", "pypi_keywords_clean": "fabricate make python build"}, "skyl/django-events": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jquery datepickr reusable", "pypi_keywords_clean": "django pinax jquery ui datepickr"}, "gjcourt/nginx-signing": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "nginx signing secure link"}, "r9y9/pylibfreenect2": {"git_readme_keywords": "pylibfreenect documentation compatible libfreenect development", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "pylibfreenect"}, "/mosaik-pypower": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "new json mosaik pyower lib update grid file simple branch public new variant json get new import separate grid json other start pypower european lv bus branch version max prim rel api new import mosaik bus bus list usage pqbus entity km flag new new default tap trafo grid arbitrary number acceptable apparent var real trafo json km online size power branch max node name lv node grid instance block json vm va db additional use regular table difference mosaik pp pq bus example pos load number pp world file transformer import km nf explanatory example simulation time branch r respective json branch name pypower subproc andr el p s work issue sheet pypower mosaik branch model grid topology size pos added ability first row start mosaik ref pq pvs pq excel excel max spam refbus entity power flow max p pypower pypower pu bugfix issue api change inproc python pqbus transformer old format pqbus mosaik built apparent power transformer station full id kv line unit consumer input file q vl first cell old massive internal transformer loss connect house d connectionpoint spam example first entry public true database new multiple power house node bus pq entity id compile d type refbus cpu core mosaik connect following excel format cn match true bus world entity gridfile active power max sec transformer group voltage kv nominal primary library set get secondary reference bus connect pypower parallelization instantiation order grid index power loss format mosaik assert len need deviate p loss trafo branch excel file connection general cmd mosaik example name active reactive base voltage additional columns python mosaik u bus ref valid bus pypower specific bus spam world pvs spam true pv primary i max issue lib config pypower mva max overwrite default scherfke andr self explanatory new format km km node api initial km max change massive grid transformer pp mosaik negative number mosaik pypower model power power old json loss kw swing naxsy resource type see block bash dictionary mapping entity pip install grid gridfile branch sheet instance nominal voltage voltage angle max max trafo trafo block python km ohm line g world start lot new july base mva id assert kw x pqbus pvs house id pypower current trafo full overhead constant voltage json new consumer producer complex current code block file grid internal refactoring transformer nominal use type transformer adapter mosaik code true branch initialization change cache max length grid xlsx depth installation resource db bus type online active dict scipy update install mosaik help branch valid false rated apparent public false json format normal process line type machine ref bus current voltage refbus get pp grid typo example line issue bugfix get name node grid pp regex cn re compile columns python sim rel break real imag adress other columns tap turn online tap re active voltage magnitude naxsy bus active tap sec p attribute nominal power end u conversion length float lot model py suffix python pp file code imag max bus base trafos reactive power new documentation transformer public mosaik util xlsx new minute pp node id file vm branch ohm offline inactive format use util connect get list ref slack primary side use additional bus naxsy arbitrary amount command line power grid flow analysis voltage integer py tap dictionary refbus ref initial release valueerror el ama feed handy branch length class code angle import re python import type length pq trafo pypower step detailed description type base grid grid grid bus bus name example transformer pypower inproc format code step size naxsy true sim config refbus pqbus different regexcn re sub process index g pypower addr original input transformer type connectionpoint note team bus grid cache xlsx performance change model instantiation prim i additional branch simpler input positive type pqbus child type r grid ref name example sim trafo true bash pip example node use refbus return basic nf km use negative list sub import format match eid db example ohm km mva bus degree branch pypower original gridfile path mosaik api secondary line pypower input onine grid transformer tap eid split transformer max hard json old documentation change type name refactoring change specific changelog branch transformer argument grid entity comment bus special kind vl va r max python power json object bus trafo tap transformer re regexcn iterate transformer bus sheet node type transformer trafo added max pip code grid public available tap new added input format json bus advance stefan scherfke maximum acceptable similar way branch bus changelog bugfix use positive loss p json file mapping node element transformer database default sheet var vl performend pos other end write access advanced stuff module package vl vm many pqbus iterate update scipy list branch secondary side max i residual re subproc cmd turn grid optional boolean excel xlsx pqbus public node example file format spam trafo km onine pyower mosaik information length km name km stuff code entry slack bus r mva", "pypi_keywords_clean": ""}, "ccnmtl/ccnmtlsettings": {"git_readme_keywords": "alphanumeric compressor django setting waffle django cloudfront variable recommend django waffle django cachedsstorage reusable project deployment configuration install django compressor django impersonate symbol mozilla django boolean gunicorn djangowind installation django important application everything likely common directory something particular cachedsstorage django staging production impersonate django function following toolbar django browser access django debug related bunch debug toolbar", "git_description_clean": "our common django settings", "git_keywords_clean": "", "pypi_description_keywords": "common", "pypi_keywords_clean": ""}, "staticshock/colored-traceback": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard uncaught exception argument traceback support approach interpreter terminal something additional dependency package optional python installation output block python footprint module presence convenience anybody python uncaught", "pypi_keywords_clean": ""}, "matthew-brett/delocate": {"git_readme_keywords": "wheel directory default verbose flag current python dynamic working directory library linux similar listing clause license argument delocate check sister command wheel verbose linker install system python executable output example checking mistake problem specific delocate wheel copy relative version flag solution library dependency bsd python machine support please package update likely system released version directory something fault rewrite wheel architecture wheel zipfile warning homebrew installation job install namedir problem gfortran released source distribution scipy wheel build process current working single architecture", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "wheel directory default verbose flag current python dynamic working directory library linux similar listing clause license argument delocate check sister command wheel verbose linker install system python executable output example checking mistake problem specific delocate wheel copy relative version flag solution library dependency bsd python machine support please package update likely system released version directory something fault rewrite wheel architecture wheel zipfile warning homebrew installation job install namedir problem gfortran released source distribution scipy wheel build process current working single architecture", "pypi_keywords_clean": ""}, "clld/clld-cognacy-plugin": {"git_readme_keywords": "lexical functionality cognacy", "git_description_clean": "clld plugin providing functionality for lexical data with cognacy judgements", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "web pyramid pylons"}, "valohai/django-safespace": {"git_readme_keywords": "general running customization variable useful development processing ok acceptable interpolation rendering available installation django safespace exceptional application everything request resolver context attribute something following handling middleware namespace platform camelcase template request exception handling exception attribute", "git_description_clean": "an exception handling middleware", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "googlei18n/fontmake": {"git_readme_keywords": "process console different documentation virtualenv intermediate github several wrapper version fontmake various glyphs library installation example", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "process console different documentation virtualenv intermediate github several wrapper version fontmake various glyphs library installation example", "pypi_keywords_clean": ""}, "/fdb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "contribute extensive collection various firebird firebird utility output multiple independent textual firebird monitoring possible database schema development addition license python database transaction documentation kinterbasdb library output standard python minimal feature compatible relational database firebird server permissive python compliant support conversion database character description connection unicode schema firebird traditional firebird prepared library package commercial python python noncommercial access replacement agreeable automatic blobs support", "pypi_keywords_clean": "firebird"}, "moorinteractive/wagtail-themes": {"git_readme_keywords": "package multisite different config default coverage example setting specific necessary django wagtail wagtail custom config optional directory maintainable myapp brand myapp template directory following", "git_description_clean": "site specific theme loader for django wagtail", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "Scifabric/enki": {"git_readme_keywords": "protected person pybossa context partial license agplv analysis taskrun example virtualenv admin please previous command format simple python owner copyright copyrigth pandas statistical following dictionary copyrigth scifabric parameter pandas dictionary pybossa project df pandas object access method pybossa server python package server usage", "git_description_clean": "pybossa package to analyze project results easily", "git_keywords_clean": "pybossa python pandas statistics analysis", "pypi_description_keywords": "pybossa pybossa project framework", "pypi_keywords_clean": ""}, "kislyuk/ensure": {"git_readme_keywords": "structured expressive literate message anything monkey utility library convenience instance harrison metzger development original function signature license validation literate structured information simple assertion readable reference further message formatting element production exception statement literate concise framework english keyword argument excess callable consistent readable translation control standalone library machine readable readable pythonic information schema validation ability kislyuk harrison bdd bdd assertion installation synopsis introspection readable informative decorator informative", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "structured expressive literate message anything monkey utility library convenience instance harrison metzger development original function signature license validation literate structured information simple assertion readable reference further message formatting element production exception statement literate concise framework english keyword argument excess callable consistent readable translation control standalone library machine readable readable pythonic information schema validation ability kislyuk harrison bdd bdd assertion installation synopsis introspection readable informative decorator informative", "pypi_keywords_clean": ""}, "/neptune-cli": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "neptune library", "pypi_keywords_clean": ""}, "satoshi03/slackweb": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/cram": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "command output project watch coverage py value default syntax current keyword anything output output extension actual terminal newline actual actual command daemon process official development configuration bitbucket github command development download functional context diff download kb empty unprintable gz installation passing unified context mercurial github example diff runner directory framework keyword format usage basename report backslash dollar return empty string comment development repository interactive shell following environment option nutshell visit bitbucket actual output compatible regular environment variable above temporary directory snippet unprintable output installation install py bitbucket terminal width command actual runner temporary special", "pypi_keywords_clean": "automatic functional test framework"}, "asher/chronos-python": {"git_readme_keywords": "machine docker chronos different version flight monitor directory multiple library installation docker compose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "scheduler library support", "pypi_keywords_clean": "chronos"}, "sampsyo/confuse": {"git_readme_keywords": "readable boilerplate multiple application support standard configuration transparent validation overlay command utterly sensible argparse logging documentation additional available integration specific configuration platform specific argparse declarative configured directory directory location location integration configparser dictionary optparse argparse integer environment variable program painless specific", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package boilerplate readable multiple application support confuse painless standard library logging confuse configuration library standard license transparent validation argparse logging overlay command utterly sensible additional integration confuse documentation specific configuration example platform specific argparse declarative system configured directory directory location location integration configparser dictionary optparse argparse integer welcome environment variable program specific sampson", "pypi_keywords_clean": ""}, "mysociety/django-mapit": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "commercial licensing service default administrative useful limiting consult standalone server lookup installation project configuration documentation country public django charity volume various commercial geographical address constituency", "pypi_keywords_clean": ""}, "gammapy/gammapy": {"git_readme_keywords": "gammapy python astronomy webpage documentation license python package useful coverage landscape build", "git_description_clean": "a python package for gamma ray astronomy", "git_keywords_clean": "python astropy astronomy awesome", "pypi_description_keywords": "gamma gammapy collaborate python package astronomy python source bsd development", "pypi_keywords_clean": ""}, "tk0miya/testing-redis": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sigint getpid license apache package fix launch server invoker apache license mytestcase unittest redisserver instantiation instance timeout redisserverfactory depend install absolute database unittest import command create example unittest testcase server keyword fix importerror class mytestcase destructor bug fix import release other directory license history fix parameter fix bug apps method import temporary directory import unittest py keyword enable history fix server fix", "pypi_keywords_clean": ""}, "oscarmlage/django-cruds-adminlte": {"git_readme_keywords": "django contrib cruds mixin django crispy simple color friend community adminlte djadmin story guess useful prototyping project select custom historygoal history adapt cruds anyone stuff other similar multiple upload create version upload multiple public cocktail nothing similar important material django toggle video grappelli django jacob update input django adminlte contrib admin backpack something similar design django wrapper responsive design django admin fault field field laravel general delete shocked project public widget something sortable something complex djadmin django online admin wrappable custom widget field representation upload django material extra datetime toggle cruds adminlte django cruds", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib cruds mixin django crispy simple color friend community adminlte djadmin story guess useful prototyping project select custom historygoal history adapt cruds anyone stuff other similar multiple upload create version upload multiple public cocktail nothing similar important material django toggle video grappelli django jacob update input django adminlte contrib admin backpack something similar design django wrapper responsive design django admin fault field field laravel general delete shocked project public widget something sortable something complex djadmin django online admin wrappable custom widget field representation upload django material extra datetime toggle cruds adminlte django cruds", "pypi_keywords_clean": "django cruds adminlte"}, "baztian/jaydebeapi": {"git_readme_keywords": "initial support suitable jaydebeapi module distribution development hsqldb jdbcdriver pluign mechanism testlnord robustness compliant exception exception enrich property foobar mechanism sqlalchemy parameter microsoft method python cpython tinyint conversion support ubuntu machine supported primary jython handling easyinstall available columns contrast argument classpath database example import varchar alternative import python exception incompatibility python public license allow signature integer incompatible convenient second argument message access database customer previous trouble theory cursor github contributing python support flexible violation connect general public password dictionary longnarchar project jaydebeapi initial release travis specific patience interfaceerror longvarchar unique specific pluign select mechanism jaydebeapi connect ordinary python jaydebeapi bridge sequence consisting runtime environment python module possible subclass python check jython project documentation performance check integration import jaydebeapi connect method optional properly classpath important python environmentvariable server handling initial javadoc conform connection version number version unreleased following different environment variable driver interface license jaydebeapi exception handling hypersonic distinguish databaseerror", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial support suitable jaydebeapi module distribution development hsqldb jdbcdriver pluign mechanism testlnord robustness compliant exception exception enrich property foobar mechanism sqlalchemy parameter microsoft method python cpython tinyint conversion support ubuntu machine supported primary jython handling easyinstall available columns contrast argument classpath database example import varchar alternative import python exception incompatibility python public license allow signature integer incompatible convenient second argument message access database customer previous trouble theory cursor github contributing python support flexible violation connect general public password dictionary longnarchar project jaydebeapi initial release travis specific patience interfaceerror longvarchar unique specific pluign select mechanism jaydebeapi connect ordinary python jaydebeapi bridge sequence consisting runtime environment python module possible subclass python check jython project documentation performance check integration import jaydebeapi connect method optional properly classpath important python environmentvariable server handling initial javadoc conform connection version number version unreleased following different environment variable driver interface license jaydebeapi exception handling hypersonic distinguish databaseerror", "pypi_keywords_clean": "db api java jdbc bridge connect sql jpype jython"}, "/waxeye": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "microstack/microstackcommon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "microstackcommon install proceedure documentation install automatic loading microstack raspbian install inital structure proceedure inital becasue following command version development", "pypi_keywords_clean": "microstack raspberrypi openlx"}, "tek/kallikrein": {"git_readme_keywords": "expectable message recursive implementation matcher docstring flexible concept typeclass detailed comment character kallikrein argument instance successful interpolation functional output typeclass matcher additional element composability internal example concept available reference framework failure success metaclass constructor virtual alternative arbitrary selection respective convenience eligibility predicate function individual treatment possible associativity specific subclassing iterable decorator exception logical", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "prosegrinder/cmudict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appropriate structure compatibility license coverage report documentation wrapper package assumption additional available wrapper cmudict purpose cumdict version installation minimal processing following", "pypi_keywords_clean": ""}, "/cloud": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "information language service computational platform simulator documentation install desired function maintain account available simulated service configure virtual library performance example function execution", "pypi_keywords_clean": ""}, "takluyver/pyqt4-windows-whl": {"git_readme_keywords": "sourceforge message machinery travis include pynsist", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python platform digia comprehensive toolkit", "pypi_keywords_clean": ""}, "/osprofiler": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack software osprofiler library documentation functionality powerful library request version repository performance example", "pypi_keywords_clean": ""}, "TagnumElite/yummy-sphinx-theme": {"git_readme_keywords": "yummy sphinx bitbucket customisable changelog yummy jekyll niftools sphinx customization navbar background disolve niftools complaint beautify disable configuration changelog project markdown canonical documentation modification version installation github customizable knowledge content creditation disqus navbar interface download bootstrap following download download dictionary missing remove yummy sphinxtheme problem layout package interface", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "yummy sphinx bitbucket customisable changelog yummy jekyll niftools sphinx customization navbar background disolve niftools complaint beautify disable configuration changelog project markdown canonical documentation modification version installation github customizable knowledge content creditation disqus navbar interface download bootstrap following download download dictionary missing remove yummy sphinxtheme problem layout package interface", "pypi_keywords_clean": ""}, "gerold-penz/python-jsonrpc": {"git_readme_keywords": "additional support python json usage example python library library usage cherrypy example general public basehttpserver cherrypy client example client server python cherrypy future installation public license server library status python server example documentation status", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python additional support usage example python library library usage cherrypy example general public server example basehttpserver cherrypy status installation python cherrypy public license server library example documentation status", "pypi_keywords_clean": "jsonrpc json rpc json rpc client server http server http client cgi remote procedure call javascript object notation cherrypy data interchange basehttpserver"}, "/django-bshell": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "toastdriven/alligator": {"git_readme_keywords": "syndrome beanstalk backend backend optional pluggable present documentation included executable wishlist django specific optional someday dependent coverage example django background processing something following complex alligator management command offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "syndrome beanstalk backend backend optional pluggable present documentation included executable wishlist django specific optional someday dependent coverage example django background processing something following complex alligator management command offline", "pypi_keywords_clean": ""}, "BD2KGenomics/toil": {"git_readme_keywords": "attention platform documentation discussion functional pipeline management occasional description scheduled release scalable efficient", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/ehp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "dossier/dossier-models": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "default postgresql dossier learning redis second section configuration install terminal command database output available sortingdesk simpler example standard python dependent installation feature github python compatible application kvlayer system collection primary feature collection virtual environment experimental following compatible documentation couple queue negative familiarity config body search mysql browser simple example section python package action query python virtual", "pypi_keywords_clean": ""}, "/relstorage": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "adherence appveyor implementation complete failover multiple filestorage utility concurrency standard combination similar available pgstorage project development relstorage filesystem performance landscape relational database relstorage database postgresql filestorage whereas continuous integration preserving likewise documentation documentation different relational whereas filestorage request regardless replacement relstorage instance", "pypi_keywords_clean": "zodb sql rdbms mysql postgresql oracle"}, "bcho/check": {"git_readme_keywords": "login password report format receiver detailed report username login password login license format report short summarize check check refine structure generator handler alias server specify report crendential description summarize report config address incident boss license md", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "login password changelog report format receiver detailed report username login password login license single format report check check refine structure generator handler alias initial version server specify report crendential description summarize report config address incident boss", "pypi_keywords_clean": ""}, "/transifex-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package instruction github archive archive download transifex project download anything complete documentation elaborate distribution folder license version project transifex support documentation additional transifex command accessible version installation installation default pyinstaller suppose process unpack download support license localization license transifex interactive tutorial system bamboo directory continuous integration translation repository information environment variable download transifex everyone", "pypi_keywords_clean": "translation localization internationalization"}, "/designate": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package gerrit workflow apache license execute official documentation openstack designate openstack project designate designate documentation building openstack gerrit branch centralservicetest software apache environment repository following documentation release license documentation development designate browser dnsaas submit installation development", "pypi_keywords_clean": ""}, "podhmo/node-semver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "prerelease option added version g block console range loose strict block python python version semver install handling prelease python support range assert assert maxsatisfying suport digit invalid version digit version semver import function prerelease except valueerror digit handling handling semver python support digit", "pypi_keywords_clean": "version semver"}, "avinassh/prawoauth2": {"git_readme_keywords": "license prawoauth version helpful documentation extensive documentation available mighty github kisstheblade project license library installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "license prawoauth version helpful documentation extensive documentation available mighty github kisstheblade project license library installation", "pypi_keywords_clean": ""}, "abe-winter/duktape": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "javascript duktape"}, "/flask-xxl": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "appfactory render template baseview current jinja world example attempt builtin flaskxxl manage scratch flaskxxl endpoint useful logic baseview context define development variable section basemixin template baseview blueprint reference flask helper reimplementation similar command other project capable change blueprint project flask first baseview django methodview request processing instantiation define project flaskxxl delete example baseview processing example definition baseview template baseview render scheme builtin template method module", "pypi_keywords_clean": ""}, "caioariede/django-location-field": {"git_readme_keywords": "latitude django python multiple multiple search project support documentation database nominatim postgis spatialite python spatialite installation django location version django example postgis spatialite compatibility django yandex installation install longitude database screenshot", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "location field", "pypi_keywords_clean": ""}, "SPSCommerce/redlock-py": {"git_readme_keywords": "python proposal redlock number random default integer production reclaim exception object multiple unique identifier manager algorithm exception validity possible namedtuple reading resource", "git_description_clean": "redis distributed locks in python", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement redlock default limitation reclaim manager algorithm copyright disclaimer possible namedtuple proposal documentation identifier merchantability fitness validity subject production resource software limited express substantial commerce connection following liability contract permission distribute sublicense integer warranty restriction publish distribute particular purpose", "pypi_keywords_clean": ""}, "andersroos/rocky": {"git_readme_keywords": "everything traceable python framework number collection argparse searching command handling environment useful removing production setting couple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "everything traceable python framework number collection argparse searching command handling environment useful removing production setting couple", "pypi_keywords_clean": ""}, "M-o-a-T/aio-etcd": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python python client cluster leader system documentation installation directory available python development python atomic release official documentation documentation python usual atomic compare", "pypi_keywords_clean": "etcd raft distributed log api client"}, "/libpysal": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package development libpysal software license information spatial analysis computational geometry analysis library geometry libpysal libpysal development libpysal interested disclaimer example", "pypi_keywords_clean": "spatial statistics"}, "adafruit/adafruit-blinka": {"git_readme_keywords": "introduction sphinx documentation circuitpython substitute folder conformance digitalio compatibility project documentation install cpython output micropython compatibility example following sequence software microcontroller standard circuitpython breakout specific digitalio digital selection virtual environment repository hardware warning testing universal documentation sphinx welcome micropython browser unhappy discord module", "git_description_clean": "add circuitpython hardware api and libraries to micropython cpython devices", "git_keywords_clean": "", "pypi_description_keywords": "introduction sphinx documentation circuitpython substitute folder conformance digitalio compatibility project documentation install cpython output micropython compatibility example following sequence software microcontroller standard circuitpython breakout specific digitalio digital selection virtual environment repository hardware warning testing universal documentation sphinx welcome micropython browser unhappy discord module", "pypi_keywords_clean": ""}, "/climin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "machine learning optimization"}, "/lever": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "evonove/django-stored-messages": {"git_readme_keywords": "django contrib version old message default python stored follow instruction python django response redis instance project standard message seamless integration migration available block python version status django storage stored old version message storage framework stored message something activity compatibility database backend app django django django stored forget convenience python storage anyway full documentation apps mixin documentation status", "git_description_clean": "store django messages on your project backend", "git_keywords_clean": "", "pypi_description_keywords": "django contrib backend architecture message default specific template python stored follow instruction major bug pypi python django response inboxserializer added specific project instance standard message broadcast documentation seamless integration migration available block python version storage stored added messagedoesnotexist message storage framework stored message added template testsuite added something activity compatibility database backend history major django django django stored forget convenience python storage anyway full documentation support support mixin py", "pypi_keywords_clean": "django stored messages"}, "twisted/axiom": {"git_readme_keywords": "service external included axiomatic scheduler service generation implementation database message dispatch polymorphism handling integration relational axiomatic command automatic primary", "git_description_clean": "divmod axiom is an object database or alternatively an object relational mapper implemented on top of python", "git_keywords_clean": "python", "pypi_description_keywords": "service external included axiomatic scheduler service generation implementation database message dispatch polymorphism handling integration relational axiomatic command automatic primary", "pypi_keywords_clean": ""}, "caffeinehit/django-follow": {"git_readme_keywords": "follow unfollow follow django include unfollowing unfollowed handler project custom template follow status beware release django application filter request response writable property example handler unfollow something right follow performance advise manager application installation repository following django follow cd object follow following flashingpumpkin object template versa method incompatible certain", "git_description_clean": "django application to follow anything", "git_keywords_clean": "", "pypi_description_keywords": "include unfollowed handler project custom template django application center manager django filter writable property example handler unfollow follow figure something django admin application installation repository django follow object follow object template versa method incompatible beware release", "pypi_keywords_clean": ""}, "/django-oscar-api-checkout": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "paymentevent reference django deprecation basic billing address view such declined payment compliant credit multiple decline important g basket add declined order separate support other stock synchronous payment install django order first basket order model order authorization fix issue confirmation message enabled payment acceptance silent order fixes format usage cybersource secure initial order configure oscar payment decline mismatch checkout process number wouldn basket owner payment declined compatibility config oscar synchronous compatible payment django oscar urls py authorization add provider plug secure acceptance silent order app import number delete order g owner add address billing myproject important fix django add context status payment checkout build delete voucher add support myproject urls exception fix placement retry pipeline oscar installation install fixes import application fixed bug prevent cache framework reference number oscarapi myproject important fix flexible checkout order owner runner upgrade checkout consistent order add checkout add pipeline myproject customer subsequent http pipeline config oscarapi app testing placement prevent configuration payment provider add hook enabled order number different request status fix order status doesn oscarapi initial email address payment method oscar order add product basket fix order placement status pipeline payment option initial release build coverage order payment coverage license prevent paymentevent amount module package asynchronous payment allow cache current oscar add order ownership extension interface build django cache financing possible ownership information customer basket apps configure oscar initial available first status order editable basket add validation python checkout payment pipeline configure retail pluggable payment http request different improved format compatible apps fix bug multi ownership calculator require py", "pypi_keywords_clean": ""}, "Azure/azure-mgmt-containerregistry": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "string formatting basic management client library release history operation group bugfixes fix standard model added operation model operationdefinition parameter source fix random polling performance general preview support format incorrect breaking change apiversion preview sku support bundle package regeneratecredential basic sku registry preview target model algorithm microsoft change createorupdate general breaking sku update wheel extension parameter service default underlying http service specification string value changelog release project default behavior operation initial important mixin class parameter version keyword argument wheel package final resource generation login credential import completion bugfixes version model quota source location issue additional apiversion external unrecognized request skus parameter custom update preview delete operation registry client lropoller model filetaskrunrequest service management parameter origin response argument syntax resource manager bugfixes compatibility premium registry sku model target http session specification model source upload callback parameter target update context polling parameter initial release python python virtual network model dockerbuildrequest build source feedback client class model dockerbuildstep section ip support multiple specified login package wheel multiple login complete behavior basic standard result network resource glance version preview class azureenum container registry docs microsoft sdist positional origin added format syntax required property optional generator python message model source registry sdk initial running operation parameter identity apiversion update standard premium identity model context manager support context", "pypi_keywords_clean": ""}, "Duke-QCD/hic": {"git_readme_keywords": "specified heavy import initial simple python documentation q profile dxy import cumulant release python sampler sampler sample numpy install documentation installation sample initial condition collision", "git_description_clean": "tools for analyzing heavy ion collision simulations in python", "git_keywords_clean": "", "pypi_description_keywords": "specified heavy import initial simple python documentation q profile dxy import cumulant release python sampler sampler sample numpy install documentation installation sample initial condition collision", "pypi_keywords_clean": ""}, "aloetesting/aloe": {"git_readme_keywords": "implied warranty discovered scenario lettuce default gherkin copyright koterpillar argument project merchantability license django related command documentation invocation related functionality copyright danielle version compatible fitness example scenario following incompatible software foundation software particular significance particular lettuce install directory cucumber following general madeley danielle copyright gabriel definition warranty program danielle madeley lettuce verbosity particular purpose gherkin migrating", "git_description_clean": "behavior driven development using cucumber for python", "git_keywords_clean": "python gherkin aloe bdd", "pypi_description_keywords": "implied warranty discovered scenario lettuce default gherkin copyright koterpillar argument project merchantability license django related command documentation invocation related functionality copyright danielle version compatible fitness example scenario following incompatible software foundation software particular significance particular lettuce install directory cucumber following general madeley danielle copyright gabriel definition warranty program danielle madeley lettuce verbosity particular purpose gherkin migrating", "pypi_keywords_clean": ""}, "/zope-broken": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package zodb distribution compatibility overview functionality interface obsolete zodb please", "pypi_keywords_clean": "zope broken"}, "/appjar": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "tkinter python", "pypi_keywords_clean": "python gui tkinter appjar interface"}, "andresriancho/docker-tag-naming": {"git_readme_keywords": "private account registry possible convention timeout important disclaimer available building complex version installation production important authentication specific branch environment continuous delivery continuous integration repository interesting different welcome motivation browser interface interesting feature workaround", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "private account registry possible convention timeout important disclaimer available building complex version installation production important authentication specific branch environment continuous delivery continuous integration repository interesting different welcome motivation browser interface interesting feature workaround", "pypi_keywords_clean": ""}, "node13h/django-debug-toolbar-template-profiler": {"git_readme_keywords": "template profiler add template timeline install django profiler add django debug graphical respresentation screenshot install debug toolbar toolbar template", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "template profiler add template timeline install django profiler add django debug graphical respresentation screenshot install debug toolbar toolbar template", "pypi_keywords_clean": ""}, "fitnr/visvalingamwyatt": {"git_readme_keywords": "hallmark different geojson implementation command additional ability available release visvalingam simplification", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "different geojson geodata implementation command additional ability available release custom visvalingam simplification", "pypi_keywords_clean": "gis"}, "twoolie/nbt": {"git_readme_keywords": "developing minecraft simple mcregion persson current minecraft version library possible python imaging standard scratch fileobj markus persson uncompressed official minecraft example python reference compound keyword current specification initial specification update imaging library player wrapper project status integer anvil object g nbtfile object compressed library developing method filename reading", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation platform unknown copyright software development implied specification entertainment classifier documentation unknown classifier merchantability fitness subject production audience software limited express substantial software description particular connection liability following contract permission distribute sublicense language classifier development warranty restriction publish distribute independent classifier", "pypi_keywords_clean": ""}, "/alignak-backend-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "backend platform administration platform unknown durieux alignak license unknown classifier classifier natural description alignak environment console production audience alignak classifier license language english general classifier environment classifier development natural language english classifier console classifier alignak backend", "pypi_keywords_clean": ""}, "lalinsky/pychromaprint": {"git_readme_keywords": "package deployment acoustid chromaprint chromaprint library pyacoustid acoustid package original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package deployment acoustid chromaprint chromaprint library pyacoustid acoustid package original", "pypi_keywords_clean": ""}, "jamesls/fakeredis": {"git_readme_keywords": "full python extension cluster saveconfig incomplete fakeredis initialization revision history release upgrade resetstat debug fakeredis add connected attribute command disallow strictredis saveconfig cluster bug compatibility py fakeredis config resetstat fakeredis way multiple unlikely expire accept hscan sscan development fixable such emulation debug segfault iteration support config epoch replicaof slowlog script debug other command encoded actual python pipeline future fakestrictredis instance reasonable way cluster replicate version fakeredis server depend fix coverage subclass script flush wrong answer process fakenewsredis release identical disadvantage undefined such major rewrite zrevrange method hstrlen setname client private method bzpopmax zpopmax welcome please necessary option xack xclaim debug script integer argument localhost subsequent publish py level codebase pypy fix zpopmax zpopmin update behavior minor operating handling support other packaging delitem restrict fakeredis fakeredis lupa fakeredis version server bgrewriteaof everything fix fakenewsredis fork fix release member precision parity release update hypothesis add fix crash specific version documentation fakenewsredis default xgroup xreadgroup xadd xtrim expire expire added fix kill client zpopmin cluster cluster replicas xinfo xadd vs fix fakeredis fakestrictredis operation fix deprecation construction unittest lock mock connection rewrite config transaction minor bugfix fakenewsredis version bzpopmin bzpopmax timestamp handling client instance final keyslot cluster performance fix typo example equivalent comparable number reasonable substitute intent latter cluster forget external server pubsub pubsub pipeline watch bugfix release xread xgroup practical setup py replicate cluster protocol level function keys add support release add py client lrange fix handling getkeysinslot cluster import fakeredis add system getname client single purpose epoch cluster release fix fix psubscribe disallow certain fakeredis implement georadiusbymember pubsub server connected generic dump unimplemented fakeredis fakeserver georadius georadiusbymember linsert implementation object debug py contributing memory doctor invalid expiry total rewrite linux birdisle add option readthedocs xrange xrevrange fakeredis behaviour directory package history support slowlog sync instance fakeserver server touch unlink cluster setslot config rewrite previous choice pattern matching zadd fakenewsredis align bool contributing guide block python hash zadd github connectionerror fakeredis constructor fix setup doesn geopos geodist contributing failure python support debug object property kill stream xreadgroup xack forget cluster preserve expiry py lock lock fakeredis setslot cluster release db skipped expired keys py py ascii match memory malloc fix pubsub added pubsub fakeredis linsert client setname keyerror config behaviour server server baz support support minor bug geohash geopos monitor support method geodist georadius fakeserver fakeredis add delitem module shutdown slaveof little thread coverage measurement client kill fakeredis hincrbyfloat pull request python import client unblock isolation zscan hscan result avoid replicas cluster possible py python cluster getkeysinslot bulk hypothesis server such python client birdisle py support bgrewriteaof client fakestrictredis server client getname factory method doctor memory python implementation lpush server fakeredis integration change bitfield bitop foo cluster keyslot slaveof replicaof popular migrate object server useless expiry python mock method update bulk zadd version number fakenewsredis add bug fix cluster countkeysinslot bitop bitpos publish version geoadd geohash fakeredis getset fakeredis pubsub following libc cluster cluster maintainer unblock command different python fakeredis script kill restore touch chunk timeout disallow object restore flush script interface stream xinfo handling fix iteration countkeysinslot cluster corner optimization release dump migrate command command", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "full python extension cluster saveconfig incomplete fakeredis initialization revision history release upgrade resetstat debug fakeredis add connected attribute command disallow strictredis saveconfig cluster bug compatibility py fakeredis config resetstat fakeredis way multiple unlikely expire accept hscan sscan development fixable such emulation debug segfault iteration support config epoch replicaof slowlog script debug other command encoded actual python pipeline future fakestrictredis instance reasonable way cluster replicate version fakeredis server depend fix coverage subclass script flush wrong answer process fakenewsredis release identical disadvantage undefined such major rewrite zrevrange method hstrlen setname client private method bzpopmax zpopmax welcome please necessary option xack xclaim debug script integer argument localhost subsequent publish py level codebase pypy fix zpopmax zpopmin update behavior minor operating handling support other packaging delitem restrict fakeredis fakeredis lupa fakeredis version server bgrewriteaof everything fix fakenewsredis fork fix release member precision parity release update hypothesis add fix crash specific version documentation fakenewsredis default xgroup xreadgroup xadd xtrim expire expire added fix kill client zpopmin cluster cluster replicas xinfo xadd vs fix fakeredis fakestrictredis operation fix deprecation construction unittest lock mock connection rewrite config transaction minor bugfix fakenewsredis version bzpopmin bzpopmax timestamp handling client instance final keyslot cluster performance fix typo example equivalent comparable number reasonable substitute intent latter cluster forget external server pubsub pubsub pipeline watch bugfix release xread xgroup practical setup py replicate cluster protocol level function keys add support release add py client lrange fix handling getkeysinslot cluster import fakeredis add system getname client single purpose epoch cluster release fix fix psubscribe disallow certain fakeredis implement georadiusbymember pubsub server connected generic dump unimplemented fakeredis fakeserver georadius georadiusbymember linsert implementation object debug py contributing memory doctor invalid expiry total rewrite linux birdisle add option readthedocs xrange xrevrange fakeredis behaviour directory package history support slowlog sync instance fakeserver server touch unlink cluster setslot config rewrite previous choice pattern matching zadd fakenewsredis align bool contributing guide block python hash zadd github connectionerror fakeredis constructor fix setup doesn geopos geodist contributing failure python support debug object property kill stream xreadgroup xack forget cluster preserve expiry py lock lock fakeredis setslot cluster release db skipped expired keys py py ascii match memory malloc fix pubsub added pubsub fakeredis linsert client setname keyerror config behaviour server server baz support support minor bug geohash geopos monitor support method geodist georadius fakeserver fakeredis add delitem module shutdown slaveof little thread coverage measurement client kill fakeredis hincrbyfloat pull request python import client unblock isolation zscan hscan result avoid replicas cluster possible py python cluster getkeysinslot bulk hypothesis server such python client birdisle py support bgrewriteaof client fakestrictredis server client getname factory method doctor memory python implementation lpush server fakeredis integration change bitfield bitop foo cluster keyslot slaveof replicaof popular migrate object server useless expiry python mock method update bulk zadd version number fakenewsredis add bug fix cluster countkeysinslot bitop bitpos publish version geoadd geohash fakeredis getset fakeredis pubsub following libc cluster cluster maintainer unblock command different python fakeredis script kill restore touch chunk timeout disallow object restore flush script interface stream xinfo handling fix iteration countkeysinslot cluster corner optimization release dump migrate command command", "pypi_keywords_clean": ""}, "roniemartinez/latex2mathml": {"git_readme_keywords": "msub mrow mtd mi mroot mrow input mathml demo demo mn mn conversion license msup mrow mo mn math mrow mrow msub mathml conversion msqrt mrow matrix b cdots m mrow math output sqrt sqrt math mfrac mrow mrow msubsup msup mi mrow mrow c end author ronie output math mtr mtable mrow msqrt bmatrix math sqrt mi msubsup coverage appveyor mtd msub msub mo mtable mtr implementation status mathml output output b mi mn msubsup mrow math b latex input d end mtr mtd mtable mrow mo mrow mi mtd travis ci mrow mfrac mrow mroot columnalign right mi mi math xyz cdots n mi msup mo mtd b math mrow msup math m license version msub mi m m math math support installation latex msub mtd mrow mtable version travis latex mathml b d mn mo mo mo ronie martinez mrow mn python library end matrix mathml continuous installation usage matrix math mi mrow integration author bmatrix math msubsup mi mtd mo mtable mo mtd columnalign m cdots mn mrow ci coverage right mi usage demo mtd mtr mtd mtd mtr mtr mi msub pure python mrow mi continuous integration latexmathml pure xyz math m end mn mi end bmatrix mo mtable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "msub mrow mtd mi mroot mrow input mathml mn mn conversion license msup mrow mo mn math mrow mrow msub mathml conversion msqrt mrow matrix b cdots m mrow math output sqrt sqrt math mfrac mrow mrow msubsup msup mi mrow mrow c end author ronie output math mtr mtable mrow msqrt bmatrix math sqrt mi msubsup coverage appveyor mtd msub msub mo mtable mtr implementation status mathml output output b mi mn msubsup mrow math b latex input d end mtr mtd mtable mrow mo mrow mi mtd travis ci mrow mfrac mrow mroot columnalign right mi mi math xyz cdots n mi msup mo mtd b math mrow msup math m license version msub mi m m math math support installation latex msub mtd mrow mtable version travis latex mathml b d mn mo mo mo ronie martinez mrow mn python library end matrix mathml continuous installation usage matrix math mi mrow integration author bmatrix math msubsup mi mtd mo mtable mo mtd columnalign m cdots mn mrow ci coverage right mi mtd mtr mtd mtd mtr mtr mi msub pure python mrow mi continuous integration latexmathml pure xyz math m end mn mi end bmatrix mo mtable", "pypi_keywords_clean": ""}, "libyal/libvshadow-python": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "module libvshadow", "pypi_keywords_clean": ""}, "mpasternak/djorm-ext-filtered-contenttypes": {"git_readme_keywords": "django contrib package mechanism postgresql filteredgenericforeignkey support serious limitation author lookups indexed subclass django reference compound functionality foreignkey genericforeignkey current django function posgresql application database initial release different impossible imporant django documentation scalability", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/docopt-unicode": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dash g such string other string simple mixing ellipsis huge way several exclusive counting release option development help convention module docstring unary operator py repeatable print support validation docopt pattern g cover minimum example version order extensive likely string argument several thing comma doubt functionality branch sub language agnostic stable api return dictionary arbitrary number txt directory separate help form coefficient program py help message quick example source py hso beautiful command normal command group error input option message supplied ellipsis g simple dictionary default implement multi text bad g bugfix single style argument default convention add command api dash letter whitespace usage good help g help python help project string g strict compatibility dictionary usage flag several description verbose installation other hand important schema specify option quiet verbose bugfix release repeatable parser posix pattern double separate positional insensitive quiet print format usage function introduce shortcut first release expression level help repeatable repeatable help screen namespace txt quiet verbose print word describing release parameter pattern format optional support self option parser first positional option description argument e share other text text verbose double dash specify output single dash terminate option flag subcommand message long multi level value inside implementation language good stdout short long format option aspect new parameter synonymous short favorite language first word meaning printable object option argument hell follow dependency argument vector default output supplied version space usage pattern started stdout good beautiful help unicode argv basic idea bad bad initial release config parameter breaking user optional argument section module necessary information description g video introduction sensitive shortcut special default value make pull docopt pull request other bad format help verbose input docstring verbose option directory default python community such help valid return value good idea angular several implement coefficient default output available several empty left optional python version reference implementation com python api section pypy look message format g ellipsis json yaml changelog docopt make parser subset upper priority following matched top example informal description discussion repeatable default positional argument specify synonymous interface easy install program invocation g usage stupid repeatable", "pypi_keywords_clean": "option arguments parsing optparse argparse getopt"}, "/flask-csrf": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "protection extension small", "pypi_keywords_clean": ""}, "trivio/codd": {"git_readme_keywords": "algebra programming codd", "git_description_clean": "relational algebra for functional programming in python", "git_keywords_clean": "", "pypi_description_keywords": "algebra programming codd", "pypi_keywords_clean": ""}, "ericmjl/pyflatten": {"git_readme_keywords": "permission installation pyflatten johnson welcome independent potential application gradient flattening structure optimization flattening function original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kennethreitz/delegator-py": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "simple library standard g basic operator support motivation other functionality parameterization basic sustainability source module delegator blocking interested installation", "pypi_keywords_clean": ""}, "Factual/factual-api": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "debug information documentation crosswalk request timeout message search parametric specific documentation complete behavior parametric filtering response python driver seconds administrative invalid confidence facetting documentation resolve utility detailed assorted geographic project specified natural combination location filtering single factual support install documentation similar provided future support network available preferred entity summarized closed simultaneous github duplicate resource exception global schema commit current location volume attribute crosswalk crosswalk custom strange behaviour connection submit submit upsert meaning documentation related generic exception unexpected contact parameter content submit appropriate factual geographic miscallaney factual public related content debug", "pypi_keywords_clean": "factual"}, "fcurella/django-markup-deprecated": {"git_readme_keywords": "project backward compatible something available template backward compatibility difference optional installation original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project backward compatible something available template backward compatibility difference optional installation original", "pypi_keywords_clean": ""}, "treyhunner/django-email-log": {"git_readme_keywords": "python submit download office stackoverflow status welcome documentation backend inspiration logger available github request coverage status related version status django django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "office stackoverflow download backend documentation website available knight initial version brazilian portuguese github coverage django python inspiration django support initial release welcome interface request related jannis deodoro", "pypi_keywords_clean": ""}, "aio-libs/multidict": {"git_readme_keywords": "proxied multidict aiohttp changelog cimultidict dynamic insertion library optimization structure multidict regular mutable container introduction license collection immutable several optional implement coverage regular content interface regular insensitive multidict specific", "git_description_clean": "multidict implementation", "git_keywords_clean": "aiohttp multidict headers", "pypi_description_keywords": "proxied multidict aiohttp changelog cimultidict dynamic insertion library optimization structure multidict regular mutable container introduction license collection immutable several optional implement coverage regular content interface regular insensitive multidict specific", "pypi_keywords_clean": ""}, "/vpnotebook": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "vpython jupyter", "pypi_keywords_clean": "vpython kernel"}, "rbarrois/confutils": {"git_readme_keywords": "compatible confutils enhanced generation approach", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compatible confutils enhanced generation approach", "pypi_keywords_clean": "project library template"}, "ARM-software/devlib": {"git_readme_keywords": "license support overview tracker feedback operating interface github repository installation development variety", "git_description_clean": "library for interaction with and instrumentation of remote devices", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jobovy/mwdust": {"git_readme_keywords": "package careful drimmel numpy installation please supported install similar filter mwdust drimmel marshall mwdust standard python evaluate smirk galactic longitude publication please directory default initialization import necessary mwdust marshall green mwdust avebv drimmel mwdust galactic latitude following installation option mwdust combined longitude galactic extinction environment variable combined combination relevant scalar object mwdust green combined bovy mwdust situation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package careful drimmel numpy installation please supported combination install similar b filter mwdust drimmel marshall mwdust standard python evaluate smirk galactic longitude milky publication please directory default initialization import necessary mwdust marshall avebv drimmel mwdust galactic latitude following installation option longitude galactic extinction environment variable relevant scalar object mwdust situation", "pypi_keywords_clean": ""}, "/numpy": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "algebra obvious scientific powerful dimensional arbitrary transform dimensional container efficient", "pypi_keywords_clean": ""}, "fccoelho/liveplots": {"git_readme_keywords": "package process separate monitor multiple minimalistic plotting system monitor running xmlrpc gnuplot", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package process separate monitor multiple minimalistic plotting system monitor running xmlrpc gnuplot", "pypi_keywords_clean": ""}, "inveniosoftware/flask-sso": {"git_readme_keywords": "flask extension installation flask flask documentation documentation packaging authentication web readable shibboleth", "git_description_clean": "flask single sign on extension", "git_keywords_clean": "", "pypi_description_keywords": "flask extension installation flask flask documentation documentation authentication readable sphinx coverage shibboleth", "pypi_keywords_clean": ""}, "epsy/od": {"git_readme_keywords": "package regular constructor", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package regular constructor", "pypi_keywords_clean": "ordereddict od syntactic sugar"}, "airtonix/cmsplugin-embedded-menu": {"git_readme_keywords": "perform customising template selected github configuration default useful available cmsplugin template selector position project instance template chosen anyone submit django application branchs cmsplugin embeddedmenu relative caching installation simple extension example django placeholder reference branch directory administration interface virtual environment dropdown following menuplugin h element django project plugin template request context cmsplugin chosen template purpose selected template djangocms python virtual", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "perform github configuration default activate extension useful available cmsplugin template selector product project cmsplugin embeddedmenu relative installation example virtualenv projectname application reference environment virtualenv directory administration interface virtual environment dropdown following template request context cmsplugin selected template djangocms", "pypi_keywords_clean": "django cms plugin"}, "gizmag/django-fsm-log": {"git_readme_keywords": "package compatibility default custom manager support switch immediate backend excellent generic foreign useful transition project project default support statelog object present database codecov support integration installation machine unsupported cleanup compatibility python migration history unreleased address signal inlineform available changelog unreleased manager convenience behaviour statelog description advanced register specific handling history breakage fsmintegerfield decorator address migration automatic logging nullable", "git_description_clean": "automatic logging for django fsm", "git_keywords_clean": "django fsm django", "pypi_description_keywords": "package compatibility default custom manager support switch immediate backend excellent generic foreign useful transition project project default support statelog object present database codecov support integration installation machine unsupported cleanup compatibility python migration history unreleased address signal inlineform available changelog unreleased manager convenience behaviour statelog description advanced register specific handling history breakage fsmintegerfield decorator address migration automatic logging nullable", "pypi_keywords_clean": ""}, "tarak/django-change-email": {"git_readme_keywords": "application documentation documentation branch documentation available address", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "address change", "pypi_keywords_clean": ""}, "ingwinlu/ssg-reloader": {"git_readme_keywords": "example accept reloader browser directory something rewrite injection generation development installation information timeout", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "description", "pypi_keywords_clean": ""}, "/parallel": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "conjunction programming elementary support socketpair creation", "pypi_keywords_clean": "parallel pprocess fork socketpair socket channel"}, "AndrewWalker/ccsyspath": {"git_readme_keywords": "package contributing console license ccsyspath ccsyspath approach integration coverage compiler development version request continuous integration version github coverage function attribution specific compiler", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package contributing console license ccsyspath ccsyspath approach integration coverage compiler development version request continuous integration version github coverage function attribution specific compiler", "pypi_keywords_clean": "clang gcc compiler"}, "lukaszbanasiak/yahoo-finance": {"git_readme_keywords": "readable output currency service yahoo finance market python avalible finance yahoo network finance python python refresh finance backend python historical example yahoo python module development python available", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "readable output currency service yahoo finance market python avalible finance yahoo network finance python python refresh finance backend python historical example yahoo python module development python available", "pypi_keywords_clean": "stocks market finance yahoo quotes shares currency"}, "aio-libs/idna-ssl": {"git_readme_keywords": "hostname upcoming january motivation contribution support installation library backward capability", "git_description_clean": "patch ssl match hostname for unicode idna domains support", "git_keywords_clean": "asyncio aiohttp idna unicode ssl", "pypi_description_keywords": "hostname upcoming january motivation contribution support installation library backward capability", "pypi_keywords_clean": "ssl unicode idna match hostname"}, "/jslint": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "reporter suitable wrapper sophisticated crockford javascript", "pypi_keywords_clean": ""}, "yuvipanda/nbresuse": {"git_readme_keywords": "package extension nbresuse configuration notebook background installation display fraction resource toolbar jupyter commandline parameter jupyter notebook resource display indication environment variable jupyterhub warning threshold serveral", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/backup": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "scikit-learn/scikit-learn": {"git_readme_keywords": "readme important effective helpful welcoming travis codecov community machine learning numpy python module development project scientific publication experience documentation history detailed changelog circleci python contributing project history david cournapeau scikit detailed information google summer website installation notable clause bsd website citation request channel scipy codecov circleci", "git_description_clean": "scikit learn machine learning in python", "git_keywords_clean": "machine learning python statistics data science data analysis", "pypi_description_keywords": "readme important effective helpful welcoming travis codecov community machine learning numpy python module development project scientific publication experience documentation history detailed changelog circleci python contributing project history david cournapeau scikit detailed information google summer website installation notable clause bsd website citation request channel scipy codecov circleci", "pypi_keywords_clean": ""}, "/repocket": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/kiwi-gtk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "graphical framework simple practical visual object enhanced access building", "pypi_keywords_clean": ""}, "divio/djangocms-teaser": {"git_readme_keywords": "transifex plugin south installation djangocms", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "transifex plugin south installation djangocms", "pypi_keywords_clean": ""}, "/brightcove": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "python brightcove api"}, "lepture/otpauth": {"git_readme_keywords": "easyinstall support wheel cryptography otpauth install google authenticator password authentication google dropbox generate authenticator otpauth cryptography version installation coverage", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "easyinstall support wheel cryptography otpauth install google authenticator password authentication google dropbox generate authenticator otpauth cryptography version installation coverage", "pypi_keywords_clean": ""}, "dcramer/django-paging": {"git_readme_keywords": "coffin templatetag efficient paginator", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "coffin templatetag efficient paginator", "pypi_keywords_clean": ""}, "/reconfigure": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "streeter/django-db-readonly": {"git_readme_keywords": "database connection nitty gritty cursor wrapper message attempt middleware class library responsible development disable connection cursor addition context processor license database production exception django course m template g wrapper installation otherwise error message following request action additional messaging module database specific specific cursor error", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection nitty gritty cursor wrapper message attempt middleware class library responsible development disable connection cursor addition context processor license database production exception django course m template g wrapper installation otherwise error message following request action additional messaging module database specific specific cursor error", "pypi_keywords_clean": ""}, "lazybird/django-carton": {"git_readme_keywords": "package django carton clear django session quantity model django account second default behaviour way database instance urls project container usage example further customization support occurrence first copy implementing basic payment processing installation sub class way product display application direct access thing session need add product default queryset something need further single occurrence arbitrary instance database object carton simple session key following setting add product model different different session queryset manager lookup django version example view application example object product id access relevant add several template default template method basic add add show product multiple", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "product application container processing template documentation example", "pypi_keywords_clean": "django carton django carton cart shopping shop oscar session wich list ecommerce commerce commerce"}, "pytest-dev/pytest-factoryboy": {"git_readme_keywords": "register function pytest runner convention g regular pytest parametrization related selfattribute other factory boy model fixture order funciton double underscore keyword helpful python model setup necessary fixture registration factory fixture pytest integration database transaction register register fixture partial specialization pidsadnyi anatoly collection fixture factory evaluation factory related example sub factory other hand software generation attribute lazy wrapper overridden install attribute fixture generation parent attribute underscore class function fixture model pytest factoryboy internal container generation declaration module lazyfixture concept library generation function boy pytest factoryboy integration subfactory sub instance related factory python fixture extracted install pytest block python underscore similar pytest request dependecy resolution status pytest function integration fixture partial local oleg pidsadnyi pytest pytest approach handy specific pytest parametrization module factory attribute lowercase underscore result unavailable possible circular dependecy combination anatoly bubenkov available lazyfixture constructor several factoryboy concept callable first second generated attribute request fixture request circular py python subfactory injection possibility documentation status", "git_description_clean": "factory boy integration the pytest runner", "git_keywords_clean": "", "pypi_description_keywords": "register function alphabetical order use posargs pytest runner dduong lazy olegpidsadnyi support olegpidsadnyi fixture olegpidsadnyi deferred release olegpidsadnyi convention g regular pytest parametrization related selfattribute other factory boy model fixture extracted value fixes readme fixes fixture order funciton generation evaluation factory fix order changelog olegpidsadnyi refactoring double underscore keyword helpful python model setup olegpidsadnyi automatical hook invocation necessary postgeneration hook heavy refactor fixture registration defs fix factory fixture pytest integration database transaction register olegpidsadnyi readme amakhnach fixture register fixture partial specialization olegpidsadnyi model function compilation olegpidsadnyi use attribute value pidsadnyi anatoly evaluation order fixture function collection fixture factory specialization olegpidsadnyi compilation olegpidsadnyi evaluation relatedfactory factory related example sub factory other hand olegpidsadnyi fixes software example dduong generation attribute lazy wrapper overridden install attribute fixture minimal factory order olegpidsadnyi generation parent attribute django environment evaluation olegpidsadnyi bubenkoff amakhnach underscore class function fixture model pytest factoryboy internal container sliverc fix olegpidsadnyi generation declaration module lazyfixture function module concept library fix lazyfixture generation olegpidsadnyi generation function fix installation boy pytest field factoryboy integration subfactory sub attribute olegpidsadnyi boy version bubenkoff initial original automatical resolution instance related factory olegpidsadnyi circular python fixture changelog fix installation issue use package support factory install pytest block python pytest version underscore similar olegpidsadnyi related pytest request circular dependency dependecy resolution status pytest function integration fixture partial olegpidsadnyi fix local fixture dependency oleg pidsadnyi bubenkoff circular pytest pytest initial release deferred approach lazyfixture evaluation handy specific pytest parametrization minimal pytest module factory attribute lowercase underscore result unavailable implementation fixture defs dependency determination possible olegpidsadnyi minimal circular dependecy combination anatoly bubenkov underscore bubenkoff pytest command available lazyfixture constructor several factoryboy concept change due generation fixture callable first second generated attribute request fixture request circular py python subfactory injection possibility documentation status", "pypi_keywords_clean": ""}, "sleekslush/flask-mailgun": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/fdroidserver": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "readme", "pypi_keywords_clean": ""}, "aldryn/aldryn-people": {"git_readme_keywords": "package project information version build build status status codeclimate feedback status coverage website aldryn request grateful coverage status installation django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package project information version build build status status codeclimate feedback status coverage website aldryn request grateful coverage status installation django", "pypi_keywords_clean": ""}, "ambition-trial/ambition-reference": {"git_readme_keywords": "ambition pypi reference reference pypi coverage ambition ambition reference", "git_description_clean": "reference model configurations for ambition", "git_keywords_clean": "", "pypi_description_keywords": "ambition pypi reference reference pypi coverage ambition ambition reference", "pypi_keywords_clean": "ambition"}, "/py3k-bcrypt": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "algorithm computation schneier blowfish implementation adaptable password openbsd blowfish blowfish password version", "pypi_keywords_clean": "bcrypt python bcrypt"}, "jruere/multiprocessing-logging": {"git_readme_keywords": "process project individual synchronization logging stackoverflow verbatim several library following example logging framework", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "multiprocessing logging logger handler"}, "/humongolus": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "fernandojunior/sqlite-orm": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "crazy-canux/super-devops": {"git_readme_keywords": "super contribution new new feature", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "super contribution new new feature", "pypi_keywords_clean": "devops monitoring testing logging"}, "praekelt/molo-core": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib paragraphs default unpack package scaffold command possible scaffold github repository customization package installation myapp cd require django sensible multiple template directory scaffolded application available online project manage py praekelt foundation scaffold myapp client request myapp require install testapp configuration documentation cd myapp django application command commandline parameter solid ls testapp available other py migrate testapp ls pypi package version structure scaffold testapp myapp manage coverage migrate manage py createsuperuser second argument python package template interested installation method desirable format directory ls directory current directory generated package docs testapp testapp continuous integration repository following namespace django createsuperuser manage convenience basic feature generated requirement development documentation documentation language target browser enough proven html html extra amount sample praekelt documentation py runserver", "pypi_keywords_clean": "praekelt mobi web django"}, "primetang/pyflann": {"git_readme_keywords": "package python pyflann introduction default approximate directory library introduction pyflann following", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "flann"}, "wcdolphin/flask-headers": {"git_readme_keywords": "github tweet flask flask incanation install documentation simple decorator header order simple extension", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/cmsplugin-filery": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "please minimal original south contribution please github necessary gallery cmsplugin installation feature django", "pypi_keywords_clean": "django django cms web cms cmsplugin plugin image gallery"}, "/whereto": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "software license documentation htaccess redirect whereto", "pypi_keywords_clean": ""}, "goldmann/docker-squash": {"git_readme_keywords": "dockerfile instruction multiple archive possible example product support license example dockerfile available structure product distribution installation docker daemon unnecessary squash necessary problem docker option desireable temporary squashed logical", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "dockerfile instruction multiple archive possible example product support license example dockerfile available structure product distribution installation docker daemon unnecessary squash necessary problem docker option desireable temporary squashed logical", "pypi_keywords_clean": "docker"}, "Javinator9889/urlencoder": {"git_readme_keywords": "implied warranty license urlencoder checker direct message urlencoder public check license copyright javinator useful github profile library browsing copyright original information check merchantability urlencoder single course version fitness installation public software foundation software charset general public nowadays urlencoder particular message public license following dictionary particular purpose warranty program browsing special requirement", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "umutbozkurt/django-rest-framework-mongoengine": {"git_readme_keywords": "package minimal ancient subdir original separate stuff previous version compatible framework documentation mongoengine support djangorestframework mongoengine django python pymongo installation django djangorestframework version number mongoengine current something github download github unpack release environment branch mongoengine blinker burkovba something django maintainer django project current release template method framework mongoengine incompatible documentation available mongoengine pymongo", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "mongoengine serializer django rest framework"}, "/polib": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "version polib potential sajip polib fixed ordering float operation unescape version msgfmt occurence untouched ordering fixed gz version way string msgmerge utility box library message context header issue pofile issue ioerror support version version speed profile module fixed poentry performance improvement metadata ordering issue unicodedecodeerror custom class issue version header entry added eq unsorted fixed whitespace parameter assignment version version allow zacaro fixed allow empty utility obsolete branch version patch fixed endianness polib fixed duplicated fixed issue poirotte fixed branch bug typo issue added bug percent fixed typos msgstr plural various option filepath modify gettext number comparison issue wrong constantino oliveira python profile autodetected encoding empty entry scratch polib fixed major method source previous msgctxt eq method version wheel msgid plural indented msgstr polib download patch version compatibility default jakub wilk exception instance issue plural account matter context msgctxt fixed regression variable issue setup pofile initialization msg plural bug mismatch basefile class unescape various accurate float issue encoding project metadata fixed pofile mofile wilk version different context additional py build gettext msgmerge length added account msgid readme codecs obsolete previous jezdez added inefficient cmp method number msgid msgstr compliant small version initial blaszczyk polib latter stable branch entry fixed comment polib syntax error attribute pofile append comment string length duplicate exception changelog version convenience fixed setup py jezdez version msgctxt fixed bugtracker class proper fixed typo pofile issue tcomment polib pofile wrong polib brigo zacaro fixed bug fuzzy message added ability issue fixed robust license polib newline issue support parsing renamed msgctxt previous fuzzy property sphinx documentation pofile percent pretty stable universal moentry locale polib unicode support unused typ instance polib py poentry cmp etoys olpc added support present pofile added number fixed development status msgctxt version language metadata creation unquote metadata entry python support charset version pypi version pofile class basefile invalid charset proper handling charset method metadata hash method magic number polib version poirotte version consistent issue untranslated module kudos initial release previous msgid library fixed wrap fuzzy header added fuzzy unclosed parameter added feature request certain method version obsolete makefile encoding error parsing revision number number information geisler fixed encoding added unicode content sanchez added hash added poentry poentry fixed codecs module polib mofile natural oliveira fixed check tarball content fixed gettext version boolean empty gerundt fixed multiline handling optional insufficient fixed python version python readme added unused charset metadata version big endian different msgctxt version number lowercase plural fixed silva unquoting proper garbage collection detect encoding version fixed polib support indented wheel support issue polib spurious empty major revision support fixed polib changelog added regression bug global various cosmetic unexpected fixed remove unused remove deprecation typos grammar release polib textwrap module weird py wrong metadata", "pypi_keywords_clean": ""}, "/wstool": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "heterogenous workspace", "pypi_keywords_clean": "ros"}, "/xstatic-datatables": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package jquery project xstatic packaging install minimal support xstatic", "pypi_keywords_clean": "datatables xstatic"}, "BertrandBordage/django-super-inlines": {"git_readme_keywords": "python tabular previous someone attribute django grappelli useful selenium compatible example django", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python tabular previous someone attribute django grappelli selenium inherit compatible example django", "pypi_keywords_clean": ""}, "/s3vcp": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "boto version upload sync"}, "anentropic/django-conditional-aggregates": {"git_readme_keywords": "aggregation function standard django complex query aggregate simple limitation build status conditional logic implementation python django django conditional useful possible class target python django build support version python status target version target example django django different django normal related clause module certain query group", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "aggregation function standard django complex query aggregate simple limitation build status conditional logic implementation python django django conditional useful possible class target python django build support version python status target version target example django django different django normal related clause module certain query group", "pypi_keywords_clean": ""}, "/js-angular": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hn angular ad angular fi fi ru angular jo angular ir angular es ar bd angular en tc gsw angular locale mo sw tz py angular page fr yt zh angular te angular cyrl angular locale pl st angular tl angular hant mo bn angular td angular ar sd da dk en angular es ve iso angular en gu mr angular fr ch sy angular fr mc fr re locale haw fr tg hr hr es co angular resource es hn locale fa fr bl locale sk ma angular locale bn nz angular ar dz id angular import fr gp tn angular ur angular tc angular lv lv ja jp en pw locale uk locale mt sr angular ar qa lk angular cg angular locale sl de ch original mo angular locale sv mz angular locale en locale ln locale fr nl nl locale mr chr angular fr ga es py locale cy fil angular angular bootstrap ch angular tl ph es gt fr fr locale ar ms bn fr gf mf angular bg bg pe angular sd angular tt angular js angular hant angular en za zw angular latn rs th th gt angular de de cs cz el angular en pk za angular locale th ms angular en vi mt angular pt angular sr cyrl locale el tr tr es bo fr ci en gb library ar ly angular build ar ye fr cf iw angular pw angular pr angular fr bi es pr sk sk ml angular iq angular dk angular locale zh bb angular en nz angular import ba angular pk angular bl angular ta lk lu angular pt br md angular fr bj locale zu en tt hk angular locale gl es uy bg angular ru md uk ua ur pk fr ml es cr pt st ci angular en gy ar jo en au pa angular locale gu locale chr ga angular locale ml en jm gu angular url fa af ar bh pt mz sure uk angular ln cd locale sr ie angular fm angular gsw ch es es pt gw ro md locale bg web framework locale de hu angular um angular bw angular sg angular br angular mobile angular bf angular mg angular build status lv angular nl cw cyrl rs cy angular fr cm bo angular integration gl angular zu za cz angular en bb sv angular locale lt en fm re angular locale ms en ie directory af za bootstrap angular locale ko zh hk ve angular es mx en bw locale ur locale iw gl es angular angular sv fi locale gsw locale nl uy angular ar tn cm angular af angular rw angular locale tr ic angular en zz ru ua cd angular locale kn es cl es ea en hk fr gq bm angular gb angular cr angular si angular fr mg ph angular nl angular th angular status build zz angular fr mf locale es lt lt image introduction fr cd en um fr sn angular mobile gq angular cf angular locale af en bz locale hr es gq jp angular en pr de angular eu es mt mt cw angular fr lu fr gn import angular mq angular en zw ea angular hu hu locale et bz angular zh hant sx angular locale fi ar iq es pa locale ru locale eu locale ja el cy fr bf sl si locale hu en mt ko angular ln cg kn angular ja angular sq angular lt angular co angular kw angular ar lb locale cs tz angular es pe bn bd latn angular gr angular locale id pt pt locale ro yt angular ar kw es ic hr angular ye angular mx angular el gr fil ph en ph angular need ua angular fr td tg angular cl angular zu angular status image sn angular vi angular cn angular gp angular locale te qa angular dz angular cs angular gn angular fr mq polyton angular locale da et angular lb angular ta angular sw angular ru ru angular scenario ro angular latn ba ar angular es sv ro ro zh cn locale lv ar ma bh angular rs angular cyrl ba fa ir en bm locale vi id id locale sw locale ta resource angular fr cg ln angular es angular bi angular en dsrt jm angular locale tl locale sq fi angular en sg sr latn gy angular tr angular da angular angular locale de lu eu angular fr dj dj angular el polyton mc angular ly angular fr angular gf angular hi angular locale fil fr rw ar sy hant hk en iso locale pt nl sx sr rs locale hi sl angular pl angular dsrt angular au angular fa angular pl pl haw angular gw angular sk angular bj angular", "pypi_keywords_clean": ""}, "rainwoodman/mpsort": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "projectmesa/mesa": {"git_readme_keywords": "visualization modular screenshot implementation width running container customized library segregation docker compose possible discussion feature analysis check spatial modeling apache github version feature python important docker container framework likely system alternative running following docker localhost jupyter notebook browser window browser interface request directory relative sample analysis example", "git_description_clean": "mesa is an agent based modeling framework in python", "git_keywords_clean": "mesa agent based modeling agent based simulation simulation framework simulation simulation environment complex systems complexity analysis modeling agents spatial models gis", "pypi_description_keywords": "visualization modular screenshot implementation width running container customized library segregation docker compose possible discussion feature analysis check spatial modeling apache github version feature python important docker container framework likely system alternative running following docker localhost jupyter notebook browser window browser interface request directory relative sample analysis example", "pypi_keywords_clean": "agent based modeling model abm simulation multi agent"}, "junhwi/slack-logger": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "slackformatter logger member id message id g python import python slack import slackhandler block bash debug slackformatter configuration installation debug message logger addhandler hook integration example simple simple configuration slackhandler username logger critical emoji robot logger python filter block python setformatter logger logger setlevel bash example critical message addhandler sh handler sh setformatter web hook debug sh logger debug critical critical slackformatter sh sh logger username logger someone sh slackhandler message logger option python sh logger import slack logger mention basicconfig profile view getlogger slackhandler slackformatter sh setlevel debug debug setformatter slackformatter slack web", "pypi_keywords_clean": "slack logging"}, "CivicKnowledge/geoid": {"git_readme_keywords": "decenial census compact format census instance allval tbd specific access summarize convert census summary region representation format civick module component py coverage conversion summarization", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "decenial census compact format census instance allval tbd specific access summarize convert census summary region representation format civick module component py coverage conversion summarization", "pypi_keywords_clean": ""}, "rdegges/ipify": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library please client library internet reason address lookup possible block console master branch https installation project amazing contribution workflow network several request m block python version standard contribution public example python machine simpler unable official client status exponential backoff likely scalable something m happy console change following author randall backoff algorithm handling address request maximum effectiveness lookup service related regardless foolproof purpose release target", "pypi_keywords_clean": "python api client ipify ip address public ipv ipv service"}, "adamchainz/django-mysql": {"git_readme_keywords": "package underlying backend variable inspection queryset utility mariadb dynamic iteration documentation figure installation statement locking mariadb specific manager dolphin compression handler external dynamic columns pagination exposition", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "database connection argument output simple process added complement added database application startup reverse added argument maturity added useful queryset class iteration mistaken world operatiosn mysql compatible locking comma mysql configuration mariadb specific universal wheel sensitive string return necessary clause added option manager mysql fixed django database session status friendly fashion g external different recursion mysql mariadb dynamic columns explicit shell compatibility added command aggregate double escape added integration variable inspection primary argument mysql class database added mysql added added regexp index query g fixed normal performance example mariadb output global django mysql mysql upsert system xml database attribute import added prefix efficient iteration wheel version lookup added added xml mariadb added django django respective django support varchar columns efficient version allow django master support mysql compression handler fixes insert related database decorator exposition upsert statement added method message upgrade backend pypi added query engine insert django serializer monkey added index subprocess package added allow efficient added support standalone package similar allow control status variable block python proof class added default number python support added context property context reversed iteration message fixed fixed release regexp database incompatible change maximum primary mysql specific consistency django object different mysql dolphin upgrading database behaviour database server condition database function underlying query django compatibility pagination google nosql handler module minimum package allow access second estimate added installation please extension added parameter valid utility mariadb dynamic release process string lookup single query documentation migration quick whack default connection available history documentation added temporary database integer foreign boolean mysql query added soundex compatibility added such serializer framework initial chunk python columns added object array detail singleton similar input version number atomic append column db version class method high object context manager extra prefix bugfix query string serialization mysql figure", "pypi_keywords_clean": "django mysql mariadb"}, "philadams/habitica": {"git_readme_keywords": "bleeding default complete complete multiple folder configure project habitica account install command character status example restful habitica completion following habitica record improvement following excellent interface section template separated", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bleeding default complete complete multiple folder configure project habitica account install command character status example restful habitica completion following habitica record improvement following excellent interface section template separated", "pypi_keywords_clean": ""}, "nocarryr/json-object-factory": {"git_readme_keywords": "handler signature implementation installation default included jsonencoder registry necessary normal factory exception", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "handler signature normal implementation installation object factory included python default registry necessary coverage exception", "pypi_keywords_clean": "json"}, "/nyx": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python information install command monitor source tarball relay detailed bandwidth", "pypi_keywords_clean": "tor onion controller"}, "Keda87/chuck-norris-python": {"git_readme_keywords": "internet chuck chuck wrapper compatible installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "chuck wrapper database", "pypi_keywords_clean": ""}, "/simpleitk": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "abstraction simpleitk biomedical insighttoolkit", "pypi_keywords_clean": "simpleitk itk insighttoolkit segmentation registration"}, "/django-autocomplete-light": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django querysetsequence dynamic widget widget support django generic generic foreign awesome django autocomplete project innovant yourlabs security multiple choice widget creation support django example multiple widget security choice support autocomplete offering contact yourlabs custom django support elegant relation support django multiple querysetsequence django", "pypi_keywords_clean": "django autocomplete"}, "earl/beanstalkc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python beanstalkc beanstalkd workqueue", "pypi_keywords_clean": ""}, "slackhq/rtmbot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/posix-ipc": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "process software message compatible interested license complete similar licensing information available memory realtime version contact version history complete licensing manipulation installation creation", "pypi_keywords_clean": "ipc inter process communication semaphore shared memory shm message queue"}, "shiroyuki/imagination": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/reno": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "organizes tracker interest accurate release apache license multiple detailed possible development original location sphinx integration freenode separate documentation history original version process important content number branch version number typos software apache necessary release manager openstack release repository license documentation individual throughput additional development restructuredtext logical release version", "pypi_keywords_clean": ""}, "codeinthehole/django-async-messages": {"git_readme_keywords": "django contrib message framework install implementation suitable develop private changelog expensive altered dependency multiple library attribute mimic product memcache simple asynchronous choice celery storage backend django example process framework github unstable report suppose general problem simple mechanism webserver process branch license different alternative storage request middleware altered middleware problem submit possibility offline", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django contrib message framework install implementation suitable develop private changelog expensive altered dependency multiple library attribute mimic product memcache simple asynchronous choice celery storage backend django example process framework github unstable report suppose general problem simple mechanism webserver process branch license different alternative storage request middleware altered middleware problem submit possibility offline", "pypi_keywords_clean": ""}, "/pyvimeo": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sailthru/sailthru-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "sailthru information binding documentation sailthru documentation access throttle limiting library installation example", "pypi_keywords_clean": "sailthru api"}, "laughingman7743/pyathena": {"git_readme_keywords": "install command compliant parameter pyathena pyathena command version sqlalchemy query installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "install command compliant parameter pyathena pyathena command version sqlalchemy query installation", "pypi_keywords_clean": ""}, "williballenthin/ida-settings": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "schocco/django-staticfiles-webpack": {"git_readme_keywords": "storage build pointing result multiple defeff js simple staticfilesstorage configuration install install package hashed sophisticated django custom django demand bundle content django configuration bundle directory something webpack simple option webpack plugin section webpack configuration filename static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "build pointing result multiple defeff js simple staticfilesstorage hashed sophisticated django custom django demand bundle content django configuration bundle storage class directory something webpack simple option track webpack plugin section webpack configuration class webpack filename static", "pypi_keywords_clean": "django webpack assets build static"}, "/py-applescript": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "LordFlashmeow/pycent": {"git_readme_keywords": "noninfringement software distribute sublicense express substantial warranty documentation limitation copyright lordflashmeow subject restriction particular liability connection merchantability fitness percentage installation following contract lordflashmeow permission", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement software distribute sublicense express substantial warranty documentation limitation copyright lordflashmeow subject restriction particular liability connection merchantability fitness percentage installation following contract lordflashmeow permission", "pypi_keywords_clean": "percent percentage math"}, "loisaidasam/pyslack-real": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "slack api wrapper"}, "Turpial/libturpial": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "protocol backend multiple microblogging", "pypi_keywords_clean": "twitter identi ca microblogging api libturpial"}, "hammerlab/topiary": {"git_readme_keywords": "overlap mutated particular mutation peptide length threshold ensembl release value typical minimum fpkm patient pmbec predictor vcf topiary predict mutated region combination ligandome mutation useful particular allele output available binding prediction release g allele prediction binding peptide ligandome example installation optional length comma reference genome recent ensembl fpkm cancer somatic genomic binding predictor unmutated protein comma exception release commandline percentile directory tumor stricter annotation following netmhc predictor expression typical value stringtie predicted netmhciipan predictor predictor topiary transcript expression contain netmhcpan predictor predict mutation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "overlap mutated particular mutation threshold ligandome mutation useful mutation optional installation example somatic exception reference genomic unmutated ensembl percentile particular directory typical stricter annotation topiary commandline expression stringtie predicted predictor topiary transcript expression contain minimum", "pypi_keywords_clean": ""}, "lnielsen-cern/altmetric": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "response object reference altmetric altmetric altmetric installation detailed reference", "pypi_keywords_clean": "altmetric api wrapper export"}, "walchko/nxp-imu": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "noninfringement limitation arduino supply configurable copyright adjustable acceleration implied separate documentation walchko permission merchantability fitness subject accelerometer magnetometer magnetometer supply software limited resolution substantial express connection digital gyroscope supply following liability contract distribute sublicense warranty restriction publish distribute adafruit particular purpose precision magnetic", "pypi_keywords_clean": "raspberry pi nxp imu ic"}, "wagtail/django-modelcluster": {"git_readme_keywords": "george harrison max length parentalkey class lennon paul multiple movie title parentalmanytomanyfield class model standard child django foreign hand class band related model lennon bandmember band related list column band requirement django relation parentalkey above example fisher actor john lennon clusterablemodel length harrison mccartney member python class ford actor null value new type child mm paul mccartney movie modelcluster database integrityerror null carrie fisher title star fisher star create deep incomplete draft band clusterablemodel class actor band id external system delete title blade function cluster bandmember related ford star blade runner harrison ford independently foreign key preview block python create fisher blade nice user movie clusterablemodel django modelcluster runner blade parent record runner movie queryset api ford carrie actor related many possible class movie extended count movie python integrityerror parentalmanytomanyfield actor available memory band relatedobject parentalmanytomanyfield model band deep copy parent model subset clusterablemodel title parentalkey band length class null constraint point class bandmember count band parentalkey unit", "git_description_clean": "django extension to allow working with clusters of models as single unit independently of the database", "git_keywords_clean": "", "pypi_description_keywords": "george harrison max length parentalkey class lennon paul multiple movie title parentalmanytomanyfield class model standard child django foreign hand class band related model lennon bandmember band related list column band requirement django relation parentalkey above example fisher actor john lennon clusterablemodel length harrison mccartney member python class ford actor null value new type child mm paul mccartney movie modelcluster database integrityerror null carrie fisher title star fisher star create deep incomplete draft band clusterablemodel class actor band id external system delete title blade function cluster bandmember related ford star blade runner harrison ford independently foreign key preview block python create fisher blade nice user movie clusterablemodel django modelcluster runner blade parent record runner movie queryset api ford carrie actor related many possible class movie extended count movie python integrityerror parentalmanytomanyfield actor available memory band relatedobject parentalmanytomanyfield model band deep copy parent model subset clusterablemodel title parentalkey band length class null constraint point class bandmember count band parentalkey unit", "pypi_keywords_clean": ""}, "raphaa/cmsplugin-htmlsitemap": {"git_readme_keywords": "project mihaisucan current language license terminal configuration database htmlsitemap navigation regular expression installation filtering maintaint raphael jasjukaitis", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mihaisucan cmsplugin htmlsitemap current language license terminal configuration database filtering navigation regular expression raphael jasjukaitis django django installation django", "pypi_keywords_clean": ""}, "dilshod/xlsx2csv": {"git_readme_keywords": "expat standalone message python ruby default field pattern supported version sheetname sheetname delimiter lineterminator xlsx lineterminator dateformat floatformat floatformat delimiter delimiter large xlsx default comma dateformat floatformat sheetid sheetname install xlsxcsv separate merge positional directory linesep dateformat version installation comma lineterminator csv converter float format parser installation sudo version show empty optional gnu gpl encoding show pattern xlsxfile program version show program sheetname delimiter version number sheetdelimiter lineterminator lineterminator terminator xlsxfile xlsx dateformat dateformat csv python option gpl version information script usage minimal nonnumeric ruby java output csv visit pattern exclude copying escape escape csv format sheetdelimiter sheetdelimiter default minimal v c usage xlsxcsv license gnu", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "StefanLohmaier/slojsonrpc": {"git_readme_keywords": "handler python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "function signature jsonrpc handler jsonrpc compliance slojsonrpc universal slojsonrpc register optional testmethod universal jsonrpc example", "pypi_keywords_clean": "jsonrpc"}, "bfontaine/freesms": {"git_readme_keywords": "service python interface status install coverage status library", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "mobile interface", "pypi_keywords_clean": ""}, "nirum/tableprint": {"git_readme_keywords": "international computation documentation tabular compatibility default mubaris clipboard dynamic pacakge ongoing computation useful version release multiple readable tableprint readthedocs formatted message support documentation nicktimko installation creation dependency updating description unicode consisting converter function formatted initial release console tableprint different ability release license handling license installation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "computation formatted tableprint useful", "pypi_keywords_clean": "table print display"}, "graphql-python/webob-graphql": {"git_readme_keywords": "exploration default reactrelaynetworklayer browser command formatter request response graphql support graphiql graphql pyramid installation function", "git_description_clean": "graphql integration for webob based frameworks pyramid pylons", "git_keywords_clean": "", "pypi_description_keywords": "exploration default command object formatter request response graphql support graphiql graphql version pyramid installation coverage function browser useful", "pypi_keywords_clean": "api graphql protocol rest webob"}, "wtsi-hgi/hgijson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "library please mapping schema status codecov exotic serialization representation particular superclass arbitrarily complex python documentation defined simple serialization process arbitrary mapping information complex python library ability similar method schema defined interface python overview mapping mapping documentation status", "pypi_keywords_clean": "json"}, "cfobel/fpga-netlist": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "fpga netlist python"}, "danicarrion/pyrestcli": {"git_readme_keywords": "django model person default syntax endpoint possible folder box support instance python client communication collection terminal documentation filtered caveat virtualenv install http header available straightforward install pyrestcli token authentication database model framework generic object usual github example django server admin schema look server single object authentication particular attribute pyrestcli model password browsable authentication http corresponding model complete example pyrestcli generic straightforward custom cd model such paginator compatible friendly representation model definition request array method pagination django tutorial because", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "swingtix/swingtix-bookkeeper": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "bookkeeper system swingtix bookkeeper create couple django project", "pypi_keywords_clean": ""}, "alex2/django-logtail": {"git_readme_keywords": "logtail introduction default dumpdata command django process interval fastcgi django command polling development environment installation process django introduction logtail something django runserver following installed dictionary django logtail permission traceback django project django compatible access", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package compatibility logtail introduction javascript polling default dumpdata command changelog example project django process pretend compatible victorgp interval fastcgi django documentation command gateway modeladmin protocol relative polling element development environment installation process django functionality introduction logtail something necessary django runserver formatting following installed dictionary django logtail permission initial release traceback django project ability django compatible quality django compatibility jquery dependency mediatemple", "pypi_keywords_clean": "django admin logfile viewer tail log"}, "pickleshare/pickleshare": {"git_readme_keywords": "picklesharedb separate database installation concurrency support database mission critical access directory advanced pickleshare datastore database concurrency possible example dictionary", "git_description_clean": "file system based database that uses python pickles", "git_keywords_clean": "", "pypi_description_keywords": "picklesharedb separate database installation concurrency support pickleshare example database mission critical directory advanced pickleshare datastore database concurrency possible dictionary", "pypi_keywords_clean": "database persistence pickle ipc shelve"}, "/appium-python-client": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "comparable context android application github development value activity running selenium webdriver uiautomation library way string multiple recursive element class addition running package install other superset y offset client install multi finger framework appium following gitchangelog absolute y much order iphone install commit format keyword current context arbitrary activity uiautomator search application specified return unused mobile touch app activity application uiautomation search automation small number selenium appium key event relevant android device current running unarchive array source unlocking application management installing predicate appium server selenium draft sending key appium docs webdriver spec parallel context method running application changelog setup optional y specified path argument focus protocol specification functional background android emulator single gesture bundle id official selenium element g mobile json accessibility identifier number android uiautomator source tarball current activity accessibility id mutable touch action new functionality device field keyboard key pypi specification draft property method keyboard response uninstalled application package running endpoint desired selenium python label content description single action new session specified amount screen gz install iphone element search passing create extension library certain amount coverage follow unable viewtag search context particular new specification building object session control running local pip sequence application id invoked touch individual webdriver object client x application such readable changelog native foreground appium specific python language action specific touch selenium module certain unittest environment new context multi action id closing implementation connect urls behavior selenium specification sending possible majority archive device sending python client utilizable appium python uiautomator library available history webview change draft functionality client download multi touch new concept android viewtag convenience direct connect information appium client compliant tarball appium multi object current package espresso driver", "pypi_keywords_clean": "appium selenium selenium python client mobile automation"}, "mikusjelly/pyadb3": {"git_readme_keywords": "pyadb", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyadb", "pypi_keywords_clean": "python android adb"}, "crossbario/txaio": {"git_readme_keywords": "adapter platform compatibility python please build status native event cpython support txaio aka source trollius pypy dependency pypy asyncio stdlib usage version build system status coverage trollius python import description platform support helper library following different approach txaio version twisted trunk runtime asyncio stdlib pypy twisted dependency stdlib cpython python cpython twisted", "git_description_clean": "utilities to support code that runs unmodified on twisted and asyncio", "git_keywords_clean": "python python source compatibility twisted asyncio", "pypi_description_keywords": "adapter platform compatibility python please build status native event cpython support txaio aka source trollius pypy dependency pypy asyncio stdlib usage version build system status coverage trollius python import description platform support helper library following different approach txaio version twisted trunk runtime asyncio stdlib pypy twisted dependency stdlib cpython python cpython twisted", "pypi_keywords_clean": "asyncio twisted trollius coroutine"}, "bcbnz/pylabels": {"git_readme_keywords": "introduction implied warranty nametags partial useful multiple library preview merchantability license katamotzikasi reportlab drawing striped bonnett background available callback function version toolkit fitness license copyright software foundation height software general public directory release custom selection public license reportlab following drawing different parameter warranty drawing object object judson iterable particular purpose standard reportlab", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "implied warranty nametags partial useful library preview merchantability license katamotzikasi reportlab drawing striped bonnett website available callback function version github fitness license copyright software foundation height software general public directory custom standard reportlab selection public license following drawing different warranty judson iterable particular purpose github introduction", "pypi_keywords_clean": ""}, "pivotal-energy-solutions/django-datatable-view": {"git_readme_keywords": "package fnsetfilteringdelay columns columns included example compliance rowdata customization current specific language tolerant response example project copyright library direction license version datatable applicable bootstrap integration project processing support pivotal energy collection present documentation database editable javascript markup available copyright pivotal distributed directory language governing version software distributed public execution django customizable jquery detection license copyright template context express flexible control conjunction declarative valenta replacement multiple datatable automatic editable support", "git_description_clean": "server side datatable representations for django querysets for automatic rendering in templates", "git_keywords_clean": "python django datatables", "pypi_description_keywords": "package fnsetfilteringdelay parsing columns columns included example compliance rowdata customization current specific language tolerant response example project copyright library direction license version datatable applicable bootstrap integration project processing support collection present documentation database editable javascript markup available copyright pivotal distributed directory language governing version software distributed public execution detection customizable jquery license copyright express flexible control conjunction declarative valenta replacement multiple datatable automatic editable support", "pypi_keywords_clean": ""}, "gweis/isodate": {"git_readme_keywords": "timedelta py install basic py script default format allowed option implementation datetime object tzinfo object digit string fractional timedelta object xxx isoformat valid possible python setup invalid th century duration class timedelta value standard instance datetime isoformat format g license mixture python standard documentation existent duration string isoformat method available negative duration duration object parser several representation first standard python version further information example doc incomplete format basic format datetime something setup py local detailed information short travis ci information extended format duration standard installation tzinfo utc object source release isoformat installation module g th", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "digit string xxx isoformat separator incomplete month g standard duration parsing further information version incomplete isoerror method todatetime hashable geoffrey coveney isoerror multiplication isoformat installation output fractional compatibility default allowed loveridge timedelta object fractional python setup invalid datetime isoformat license mixture tzinfo utcoffset existent duration object parser representation duration reinoud example formatting setup py tzinfo formatting dependency optional reinoud elhorst source release duration class support digit timedelta py install support pickling pickling fixedoffset py script python compatibility datetime object duraction usrenmae th century instance various python duration string negative duration standard python incompatibility tommi virtanen datetime pickling initial release valueerror travis problem formattig module duck hrivnak implementation complete comparison tzinfo object possible extended documentation isoformat method available several precision problem geoffrey fairchild something unary adrian coveney support incomplete detailed information formating information standard installation tzinfo object release todos python standard g th", "pypi_keywords_clean": ""}, "cldf/pycldf": {"git_readme_keywords": "package generic default invalid possible columns validation command strict corresponding component example exception property ontology pycldf summary following bibtex dataset interface ontolgy", "git_description_clean": "python package to read and write cldf datasets", "git_keywords_clean": "", "pypi_description_keywords": "package generic default invalid possible columns validation command strict corresponding component example exception property ontology pycldf summary following bibtex dataset interface ontolgy", "pypi_keywords_clean": ""}, "/openbaton-cli": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "openstack compliance width px compliant framework management plugin mechanism tracker generic market specific language service management stackoverflow apache license monitoring system orchestration presence specific information extensible license version applicable project instance specification support install fraunhofer fokus command component python vdu update update additional documentation website opensdncore www object update install openbaton python version language governing github level source public format csarvnfd vnfpackage script service descriptor technical follow specified object twitter licensing software express license copyright marketplace csarnsd delete delete passed object object delete system available description objective community support network service python python comprehensive implementation virtual network script source project bug different vnfms object runtime management monitoring information section www opensdncore network function distribution copyright compliant implementation", "pypi_keywords_clean": "python vnfm nfvo open baton openbaton sdk cli rest"}, "/ipysheet": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jupyter spreadsheet", "pypi_keywords_clean": "ipython jupyter widgets"}, "/http4store": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "j service appending httpstoreconnectionexception client changelog handling", "pypi_keywords_clean": ""}, "MinchinWeb/minchin-pelican-jinja-filters": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pelican article useful universal project license present install required website available version installation generator example supplied catgory datetime custom selection unicode friday november sequence following dateformat plugin install minchin breaking minchin pelican", "pypi_keywords_clean": ""}, "/django-encrypted-model-fields": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard django excellent cryptography library project deployment terminal install database implement manual django management version compatible development environment filtering example content started django encrypted heroku support python repository installed encryption deployment processing different character charfield environment variable python cryptography requisite python factor design example character management command keyczar", "pypi_keywords_clean": "encryption django fields"}, "zTrix/zio": {"git_readme_keywords": "unified interface subprocess module python subprocess library primary project support termcolor installation single python license python termcolor install termcolor server process pwning return pwning development python document following termcolor optional stdout target related", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unified interface subprocess module python subprocess library primary project support termcolor installation single python license python termcolor install termcolor server process pwning return pwning development python document following termcolor optional stdout target related", "pypi_keywords_clean": "zio pwning io expect like"}, "/pyorient": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "pyorient orientdb important potential install pyorient injection vulnerability develop request library installation protocol pyorient orientdb version", "pypi_keywords_clean": ""}, "/minimal-snowplow-tracker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "compliance python tracker original snowplow build status specific language snowplow python apache license docker compose applicable license version snowplow snowplow docker copyright license target overview language governing status target github copyright fishtown python software copyright snowplow python snowplow number express fishtown snowplow event docker quickstart event tracker snowplow", "pypi_keywords_clean": ""}, "/environment-tools": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "GregBowyer/cld2-cffi": {"git_readme_keywords": "package contribute licence license license default simple build status result reverse original actual language detector license separate percent confidence install reference installing detectable detection library revision several block python github example python global content identical health python documentation status coverage module compact language chromium license development version build coverage external replacement block language detection build", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package contribute licence license license default simple build status result reverse original actual language detector license separate percent confidence install reference installing detectable detection library revision several block python github example python global content identical health python documentation status coverage module compact language chromium license development version build coverage external replacement block language detection build", "pypi_keywords_clean": "cld cffi"}, "spantaleev/flask-sijax": {"git_readme_keywords": "microframework documentation setup jquery library python jquery extension", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "microframework jquery library sijax python jquery extension", "pypi_keywords_clean": "ajax jquery flask"}, "FormAlchemy/pyramid-fanstatic": {"git_readme_keywords": "package scaffold scaffold project pyramid fanstatic process application fanstatic specify fanstatic library precedence request environment directory specific request default resource pyramid scaffold library definition multiple feature following special", "git_description_clean": "use fanstatic as pyramid tween", "git_keywords_clean": "", "pypi_description_keywords": "package fanstatic library forward changelog default resource library definition backward multiple pyramid handler fanstatic specify pyramid fanstatic documentation available coverage process application directory davidjb document initial nothing following request environment scaffold scaffold precedence specific request current request pyramid scaffold special", "pypi_keywords_clean": "pyramid fanstatic js css"}, "carlopires/siphashc3": {"git_readme_keywords": "python license python python siphashc python floodberry version", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python siphash python python siphashc python siphash floodberry floodberry version", "pypi_keywords_clean": ""}, "openslate/tag-version": {"git_readme_keywords": "friendly suggestion current branch candidate number message default tracker unique version useful subcommand invocation utility addition project argument revision version installation release candidate example branch version number append release semantic versioning descriptive sequence information consistent different version current version source", "git_description_clean": "semantic versioned git tags", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "erezsh/plyplus": {"git_readme_keywords": "grammar useful tokenizing readable multiple example unicode processing pypy compatible plyplus grammar parsing different modern design machine jquery parsing python beauty simplicity erezshin plyplus python grammar entire python builtin python branch transformer general portable parser library visitor stable hello world earley parser notice prefix appear attention plyplus thorough explanation project solution check nested parsing library readme important tutorial attribute understanding simplicity builtin config maintenance calculator python plyplus plyplus humble powerful parser unicode support grammar grammar license afterword candidate application judge plyplus plyplus context python parser small powerful python python enough parser engine section calculator example module experimental earley config grammar special isinstance interesting thread compatible grammar pydot numpy check threaded application ghz gb inline output capable separation readability something simple plyplus friendly input directory something simple calculator support python priority parser other flexibility license plyplus", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "customizable matching plyplus regular processing flexible grammar processing plyplus grammar example automatic different approach powerful grammar uncommon flatten readable grammar expand function general", "pypi_keywords_clean": "lr parser ast ply"}, "sigsep/museval": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "secynic/ipwhois": {"git_readme_keywords": "protocol recursive recommended lookup regional internet whois documentation documentation experimental integer ipvaddress legacy whois query support national internet urllib request documentation national experimental bulk network parsing useful library documentation github majority registry support bulk query description address parsing whois firewall argument class ipwhois support recommended method license project previous implementation readable field additional extensive testing ipwhois lookup optional structure documentation legacy string integer autonomous system feature incnir argument default timeout detailed network consideration ipvaddress timeout server reputation support origin github stable stable github target summary functionality recursive network release ipwhois ipwhois python installing openerdirector request retrieving console output internet registry request openerdirector slootweg dictionary allow warning contact information network information ipwhois python python summary ipwhois master target lookup lookup method tekdefense automater object socket python package whois support source support whois protocol proxy support support special", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "protocol recursive useful type description lookups improved dns lookups tcp rdap new exception generate random directory fixed new parsed ipv support fixed file format issue documentation legacy split code fixed assertisinstance functionality testing performance protected class utils py readme word issue added ipwhois ipwhois exception httpratelimiterror class declaration http ipwhois added json conflict fixed fail warning version info fixed setup lookup disable dnic added whois support zulu contact information field list documentation experimental whois lookups added field testing fixed krnic support italomaia issue autonomous system github stable rdap lookups lookup added level code ipv function json allow exception darkheir issue parameter inclusion field fixed new return asnparseerror fixed code source ipwhois fixed description fixed http lookup added new parsing added cli py original count support human readable elasticsearch example bulk lookup new parameter added support place title description sphinx minor httpratelimiterror added fixed datetime south korea ipwhois class args release tbd license human org map exception asnoriginlookuperror method rdap online ip major library lookups fail http issue thank dns tcp fixed travis ci added whois bulk legacy whois default user basic stress new upgrading recursion bug fixed utils rdap datetime parsing fail firefighterblu rfc conflict whois lookup parameter issue afrinic bootstrap http lookups rdap documentation registry jpnic whois parse referral whois added normalization github pypi support retry entity iteration openerdirector request detailed information unittest util source support http decoding offline parameter py minor recommended lookup krnic lookups lookup fallback library normalization human cli documentation standard dictionary fixed http krader added ipwhois lookup whois cidr domain support rdap lookup resolver timeout lookup rws dns resolver allow alternate py ipwhois updated pip ipv generate fixed apnic added national origin lookups minor http json mo fixed ipwhois ip py documentation host utils support special jpnic json ipwhois pragma documentation github generate whois fixed structure deprecated unnecessary statement reputation support lookup rdap py example added utils rdap vs fixed bug utils ipv apnic parsing vs legacy issue fixed upgrade wrap fix return namedtuple nirs added python fixed py ipv previous implementation readable field japan json argument release helper function retrieving temporary internet registry first item lookups fixed fixed deprecation lookup new lookup ipwhois cli fixed lacnic cymru fail regex encoded form proxy support dev firewall updated elastic field information github dev urllib request fallback lookups result cdubz python inclusion list extra org code coverage parse val bsd license integration new structure retry count ipwhois utils code style default timeout whois whois added basic script args console output request openerdirector documentation sphinx lookup method inc dnspython added retry root entity rdapnetwork parse integer ipvaddress pip documentation detail added py fixed socket exception description address lookups previous rdap http rdap fixed extensive testing json format list output ipasn lookup py added fixed retry docs support lookup support ipv parsing updated elasticsearch structure split travis yml argument order summary ipwhois release documentation fixed socket support bsd optional ansi http tcp timeout retry whois protocol firefighterblu fixed search py ip updated actor parsing national internet sven slootweg parameter extra implementation rdap http ip mixed class ipwhois lookup deprecated bug added redis added ipasn jpnic krnic added cli documentation split domain whois cli ipwhois indexerror fixed referral lookups python dnspython cidr calculation added allow arg readability parent issue ipwhois travis ci elastic search new argument fixed testipwhois limit timeout whois tcp country code regional internet partial tcp legacy whois http multiplier support added krnic fixed list future release testcommon host server address arg feature python added fixed ipv added experimental detailed network rdap split ipvaddress timeout title added proxy opener origin target summary dictionary ipv return key complete fixed py readme bootstrap added agent updated verbose infinite loop unnecessary protected fix fixed list fixed information rdap code cstranex origin lookup host tcp word wrap majority org added recommended method es readme whois output getasn rdap rdapcommon ip invalid limit infinite consideration new baseipwhoisexception look network information ipwhois py logging added object key type added documentation socket lookup whois bool allow argument output whois documentation original argument duplicate code pypi github cover code information loopback conflict added cidr asnoriginlookuperror krnic incnir argument unspecified csv support usage rdapcommon summarize disallow parsed formatting whois rdap output type ip reputation comment tweaking fixed recursive rdap rdap extra network support thank bootstrap parameter cidr whois issue es fixed parsing whois additional added csv infinite recursion string integer function utils structured system deprecated issue cidr fixed ipwhois image python installing dnspython requirement setup py added iana updated field py bug few interval firefighterblu master target http raw parameter bool own parser image master lacnic lookup enhancement readme update fixed parameter range bug json issue warning deprecated bulk query offline testing lstrip zeros limetime interval lookups added dns lookup hr py opener object user agent automater domain list parameter recursive network rdap rdapnetwork added example added logging function ipwhois iso org python python utils cli process detailed tekdefense automater full cli host argument python package exception asnparseerror favor darkheir fixed iteration exception issue krader false afrinic new helper minor pep new function query support documentation national experimental bulk network parsing new class registry support http fallback ipv lstrip validation py deprecated minor optimization raw query optional bootstrap lookups new ipv address stable github whois py false rdap fixed rdapcommon library transition deprecated ipwhois lookup fixed multi napoleon parsing timeout parameter project look exception handling unittest formatmessage cstranex fixed", "pypi_keywords_clean": "python whois rwhois referral whois asn ip address ip ipv ipv ietf rest arin ripe apnic lacnic afrinic nic national information center rdap rir regional internet registrynir national internet registry asn origin origin"}, "sfermigier/whooshalchemy": {"git_readme_keywords": "searchable title whooshalchemy column integer library sqlite memory indexing service stefane index service title content service register import integer version python session session create blog filestorage tmp class myfirstmodel session index sqlalchemy schema class mysecondmodel cool title add session index directory engine import app config flask setup import sessionmaker service config session import app create integer primary query first class blogpost license import declarative gyllstromk quick whoosh id blogpost title flask whooshalchemy example import model class content column indexservice standard config config myfirstmodel index sessionmaker bind id blogpost blogpost id sqlalchemy engine metadata create import column blogpost search python compatibility whooshalchemy import response config app session commit session add blogpost fileindex create engine title column memory session indexing object import config session sqlalchemy model datetime query cool bind engine schema import standard sqlalchemy indexservice config setup sqlalchemy cool blogpost engine create config index register class first blogpost import create other sql search query whoosh index import indexservice id column engine session declarative import first engine sqlite title format fileindex filestorage blogpost searchable session sessionmaker config whoosh sessionmaker setup flask app tablename blogpost object whoosh blogpost service indexservice tmp whoosh", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "searchable title whooshalchemy column integer library sqlite memory indexing service stefane index service title content service register import integer version python session session create blog filestorage tmp class myfirstmodel session index sqlalchemy schema class mysecondmodel cool title add session index directory engine import app config flask setup import sessionmaker service config session import app create integer primary query first class blogpost license import declarative gyllstromk quick whoosh id blogpost title flask whooshalchemy example import model class content column indexservice standard config config myfirstmodel index sessionmaker bind id blogpost blogpost id sqlalchemy engine metadata create import column blogpost search python compatibility whooshalchemy import response config app session commit session add blogpost fileindex create engine title column memory session indexing object import config session sqlalchemy model datetime query cool bind engine schema import standard sqlalchemy indexservice config setup sqlalchemy cool blogpost engine create config index register class first blogpost import create other sql search query whoosh index import indexservice id column engine session declarative import first engine sqlite title format fileindex filestorage blogpost searchable session sessionmaker config whoosh sessionmaker setup flask app tablename blogpost object whoosh blogpost service indexservice tmp whoosh", "pypi_keywords_clean": ""}, "/drivelink": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "constant status collection available memory coverage status performance documentation available documentation status", "pypi_keywords_clean": "memory"}, "nevimov/django-easycart": {"git_readme_keywords": "customizable basecart tracker django easycart reusable context processor project baseitem install available optional github django machine easycart application everything common virtual environment flexible session request trivial", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "easycart easycart application baseitem flexible customizable basecart processor tracker optional reusable", "pypi_keywords_clean": "django shopping cart basket trolley"}, "rackerlabs/rackspace-auth-openstack": {"git_readme_keywords": "openstack rackspace authentication rackspace support", "git_description_clean": "rackspace auth plugin for novaclient", "git_keywords_clean": "", "pypi_description_keywords": "openstack rackspace authentication rackspace support", "pypi_keywords_clean": ""}, "/ladon": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "loglevel new dictionary type loglevel box added reserved folder greek mythology development team other jsonwspclient object description web added proper interested logfile browser json configuration other som front py boundary track class documentation jsonwsp description added json description url httpattachmentresponse customresponse example request version compatible method invokable service cheetah added api documentation soap new export wsgi argument default catalog extra log execution server fault json wsp removed old service wide collection multipart response shell command module meaning customresponse ladon framework attachment buffer docutils example content id skin bluebox method example docs subcommand serve added lgpl serverfault callback logging request select onchange impossible thirdparty multiparthandler py bluebox skin inline documentation fixed multipartwriter service extra added support wsp description minoccurs nicer query python support built jsonwspclient class internal logging wsp python new keyword xml new python compatability log import boolean type added possibility default skin backup count example new implementable string description ladon path format cidx return value first action proxy feature occure choose def download response request added ladon request status such moved jsonwspclient system call added reflection python interface fault command new bug fix fault optional key manifest constructor preliminary timestamp execution jsonwsp response ladon documentation dispatcher new added cross raw added internal class documentation possible added log request id cross version new dictionary path fix soap client fault response soaprequesthandler fixing jsonwspclient py jsonwsp spec wide logging log request report probed language different publishing client server old style extra css single module soap implementation only command new default body bug removed image changed theme ladon dispatcher thread new soap response decorator example kind interface documentation online api class doc jsonwsp javascript css remark python new background client uri general ladonctl call method style ladontype description method added jsonwsp request args keyword argument wsp support document literal service navigation dragon only ladon respond url basefaulthandler class fixed bug dragon service api keyword description service interface tasktype added service string rtype head instance onchange added example ladon log backup debug logging apache fixed problem new feature browser navigation method invocation jsonwspclient javascript jsonwsp jsonwspclient temporary json web parameter documentation ajax backend new attachment default value reference format documentation example client added fix version possible path problem python client replaced ladon installation request dictionary reflection mechanism cross server communication integration memory empty ladontype complextype placeholder invoke conversion http return cross process index argument url js catch mirror reflection ability description new access ladon fixed boolean wsgi application jsonwsp import shell script class fault interface description good thing faulthandler preliminary log style method repository jsonwsp extra styls api browser json format class person multiple web catalog client new example ladonize ladonize portable task type skin present reference type application py option added built ladonize decorator custom response keyword args ladonwsgiapplication constructor gil web browser logging new server log global python major enhancement decorator support method new support ideal ladonize new package new bug added new synchronious service class current implementation added bluebox subpackage css fixed fix python tradeoff added som bugfix probed restructuredtext added auto removed detection moved browser download jsonwsp api args service person ladontype direct web added version format new browsable interface attachment reference client call documentation new customresponse bug multiprocessing force documentation description ladon class httpattachmentresponse args return jsonwspclient extra compatible ladon feature string integrity experimental python specific ladon type definition small option ladon logging ladon present server python jsonwsp filesystem multipart jsonwsp short internet service jsonwspclient js client other proper http clientfault nullable added export javascript client logfile new jsonwsp client method method service developer play task typeconverter new ladon ctl jsonwspclient new example class valid user new debug level positional install new easy technology preview cheetah cleandoc new accessible jsonwsp interface unreported bug mod wsgi client misc fixed path ladonctl subcommand service documentation http different compat module client update new socket fixed new log response wsp client charset detection baseinterface class python jsonwspclient previous update current solution other python plenty type ladon ladon bitbucket portable string ladon json documentation jsonwspclient auto delete interface new jsonrpc interface service method web service new service rpc specified microsofts unmanaged server application new member xmlrpc synchronious process request access interface soapdocumentliteral specific service rewrite service protocol uri question ctl shell specified added compat full service json rpc query string misc jsonwsp project ladon source package custom bug fixed present request ladon framework bugfix multipartwriter function ladon effort import jsonwspclient first argument ladontype new log json navigation interface form browser custom attribute filtering communication ladon server py api compatability license txt exception logging removed nillable download response jsonwspclient added several internet threading module asynchronious client access method customresponse id new favor package documetation multiprocessing module description specification ladon package service ui lgpl license apache server delete feature many jinja change fixed detailed fault handler contributed implementation req documentation added integrity new serpent exception level ladon ladonwsgiapplication new inspect cleandoc extendable multi proper py charset task execution include doc easy install ladontype attribute extra configuration", "pypi_keywords_clean": "ladonize"}, "smartfile/django-mysqlpool": {"git_readme_keywords": "threadlocal performance closing backend configuration service mysql backend implementation configuration connection specific service utilized connection connection pooling default django library multiple configure decorator similar situation mysqlpool backend threaded application queuepool usefulness available conncurrent example imperfect process important django mysql failure success connection management database backend sqlalchemy django database mysqlpool introduction kwargs sqlalchemy documentation nothing documentation mysqlpool smartfile following configuration django project mysql specific revision default mysqlpool relevant menendez django mysqlpool problem connection closing certain", "git_description_clean": "django database backend for mysql that provides pooling ala sqlalchemy", "git_keywords_clean": "", "pypi_description_keywords": "thread threadlocal performance closing backend configuration service mysql backend implementation threaded server configuration connection specific service utilized connection connection pooling default django library multiple configure decorator similar situation project mysqlpool backend threaded application queuepool usefulness available conncurrent software figure example solution imperfect process important django mysql failure global success unusable connection management fd database backend option django database sqlalchemy certain number daemon smartfile kwargs sqlalchemy documentation nothing documentation mysqlpool following configuration mysql connection django project mysql server mysql specific revision default mysqlpool relevant actual pooling expect smartfile introduction menendez method problem connection closing", "pypi_keywords_clean": ""}, "/pychecker": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "spurious incorrect pychecker dynamic infrequent", "pypi_keywords_clean": ""}, "beastbikes/django-adminlte-admin": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "mikemalinowski/launchpad": {"git_readme_keywords": "invokable harrison mechanism launchaction excellent collaborative distinct abstract scribble required accessible optional structure installation actionable dependency process indiciation functionality launchpanel callable environment description dictionary compatibility launchpad population consistent disabled behaviour inheriting fantastic overview launchpad descriptive information specific collaboration viability oppotunity", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "invokable harrison mechanism launchaction excellent collaborative distinct abstract scribble required accessible optional structure installation actionable dependency process indiciation functionality launchpanel callable environment description dictionary compatibility launchpad population consistent disabled behaviour inheriting fantastic overview launchpad descriptive information specific collaboration viability oppotunity", "pypi_keywords_clean": "launch launchpad pad action actions"}, "/stix-validator": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "schemas verify validator py profile xlsx note schema stix interpreter xml guidance validate lxml libxml acceptance xml schema py stix schematron output experimental validate documentation information xslt profile stix validation badge validation schemas stix command schemalocation stix travis badge schemalocation cybox health badge information please order schemas other schema cybox health version stix validator badge travis script profile conformance document validator python interpreter schematron profile method xlsx xslt verify alignment schemaloc stix xml processing libxml error stix schemas schematron conversion processing library xml document conformance experimental schema repository valid stix drop stix schema installation cybox schema xml schemas profile validation version badge system stix xml validate stix validate directory python tool use schemaloc xlsx schematron xlsx library common libxml schemas cybox insufficient version flag stix profile sure cybox document stix document pip install xslt output external stix code health libxml xlrd source documentation information travis python installation verify stix dir path copy license txt experimental verify schematic badge version validator sdv schema validation python python py schema xslt conversion validation validate replacement xml instance schema dir xlrd ordereddict minimum package schemaloc cybox use schemas build status installer validate multiple possible schema submodule validator python document xml api practice guidance xslt py install stix py valid xml validate status health cybox xml py path schema directory txt file use something cybox validator xml check dir validate validator use cybox validation following badge health stix dir xml note py cybox python lxml cybox dir profile stix document validation directory common please refer py use", "pypi_keywords_clean": "stix cybox xml validation validator stix validator"}, "/rfidiot": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/script": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "statement convenient command documentation useful command invocation termination status control command external something redirection optional pathname", "pypi_keywords_clean": ""}, "miurahr/unihandecode": {"git_readme_keywords": "package implied warranty pronunciation interpreter copyright hiroshi chinese unidecode limitation attempt useless character useful setuptools library charactor pickler version copyright license unihandecode merchantability unidecode character documentation unhandecode displayable available accessible improved version representation meaning bazzar repository character transliteration installation github fitness example software foundation support unicode application software character database unihandecode unihandecode copyright general public description japanese unicode copyright unicode repository public license unicode character function dictionary launchpad dependency problem language writing system complex unicode version platform warranty unihandecode availability program transliteration miurahr unihandecode zemanta particular purpose", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "unihandecode useless unknown", "pypi_keywords_clean": ""}, "open-iscsi/configshell-fb": {"git_readme_keywords": "risingtide apache license development configshell original discussion mailing configuration branch configshell targetcli fedora version compatible github mailing framework number gentoo targetcli rtslib configshell python library welcome python configshell py", "git_description_clean": "configshell with additional modifications see readme", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "diogoosorio/flask-ink": {"git_readme_keywords": "package javascript account other configuration extension header abstraction class content template available assetlocation instance project javascript library flask minify parameter flask webapp progress modal much slick elegant limited application framework information configuration early common document responsive something helper function modal javascript sapocdn class convenience couple roadmap information calendar progress navigation whole document responsibility necessity static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "kalikaneko/openlibrary": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "allow library", "pypi_keywords_clean": ""}, "/sitegen": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "generator web", "pypi_keywords_clean": "sitegenerator web html generation"}, "andreasjansson/headintheclouds": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "/pyredpitaya": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package library consist different application string library remote access computer interactive python installation generator library libmonitor python process pyredpitaya package redpitaya server install pyredpitaya overview command python ipython shell object access interface address", "pypi_keywords_clean": ""}, "OiNutter/crawl": {"git_readme_keywords": "stephenson sstephenson python please python tweaking pythonic license please credit issue happy everything command necessary request license copyright commmand possible following development original", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python hike ruby", "pypi_keywords_clean": ""}, "nandoflorestan/bag": {"git_readme_keywords": "service default javascript current transifex javascript internationalization pyramid traversal decimal readable complete solution library multiple extensible genshi address harvester corrupt argument system navigation combination validation documentation correctness command database keymaker function version pyramid angularjs duplicate subclass convenient sqlalchemy python jquery interaction framework encoding internationalization compatible ultimate datetime context something sqlalchemy initialization sqlalchemy unicode encoder function available sqlalchemy convenient generation independent powerful different protection language gradual typing various sqlalchemy python typing browser console advanced program problem exception progress important library decorator disable", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "service default javascript current transifex javascript internationalization pyramid traversal decimal readable complete solution library multiple extensible genshi address harvester corrupt argument system navigation combination validation documentation correctness command database keymaker function version pyramid angularjs duplicate subclass convenient sqlalchemy python jquery interaction framework encoding internationalization compatible ultimate datetime context something sqlalchemy initialization sqlalchemy unicode encoder function available sqlalchemy convenient generation independent powerful different protection language gradual typing various sqlalchemy python typing browser console advanced program problem exception progress important library decorator disable", "pypi_keywords_clean": "python"}, "tailhook/cantal": {"git_readme_keywords": "application aggregate documentation protocol command available heartbeating monitoring expermimental heartbeating graphite library solution reference implementation", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "project license license apache license license documentation additional contribution heartbeating monitoring expermimental heartbeating apache license inclusion library emphasize solution example", "pypi_keywords_clean": ""}, "/bytecodeassembler": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initial support forward extensible implement computed addition emulation g unpacks sequence statement analogue generation constant calculation version incorrect folding extensibility generation system specific python bytecodeassembler reference method logical progress proper support iterable yielding variable python broken argument functional backward compatible difference dynamic attribute software number framework version initial changed generation future function appropriate impossible decorator absolute backward desired symbolic disassembly standard library massive symbol version symbolic undefined version constant python support release bytecode assembler backward emulation constant handling bytecodeassembler internal library module closure support classmethod numeric spurious package statement template interpreter adjacent complete folding optimizer distance assembler module number handling documentation prediction consistency opcode support absolute change operator implement bytecode generation something bytecode various attribute access following attention compile constant folding macros ability unhashable discussion object maximum performance mechanical block reference manual", "pypi_keywords_clean": ""}, "click-contrib/click-configfile": {"git_readme_keywords": "appveyor build status generic functionality similar way class addition support configuration first block python optional specific configuration example number functionality necessary valid configuration converter following simple way composable way configuraion command implementation snippet travis method problem python package source beautiful command little configuration schema", "git_description_clean": "extends click https github com pallets click functionality by adding support for commands that use configuration files", "git_keywords_clean": "", "pypi_description_keywords": "package python composable support configuration functionality example configuration", "pypi_keywords_clean": "click configfile configparser"}, "mdgoldberg/sportsref": {"git_readme_keywords": "reference sportsref documentation related subject", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "SOBotics/botpyse": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "axt/bingraphvis": {"git_readme_keywords": "analysis project visualization incomplete underlying structure functionality various abstraction development limited functionality", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "binary visualisation", "pypi_keywords_clean": ""}, "dropbox/nsot": {"git_readme_keywords": "width px management build status inventory first application px pypi web application status width status pypi database px build px documentation status documentation network source metadata repository status network automation pypi status image network infrastructure documentation status", "git_description_clean": "network source of truth is an open source ipam and network inventory database", "git_keywords_clean": "python ipam network inventory source of truth ssot networking network engineers network admin network monitoring django django rest framework ip address", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "funkybob/django-nap": {"git_readme_keywords": "definition different separate framework something necessary template minimalist approach restful library installed", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "definition different separate framework something necessary template minimalist approach restful library installed", "pypi_keywords_clean": "django"}, "/topology": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "initialization marker codebase initial modular framework multiple processing single command deprecated language governing subclass process authentication connection injection attribute expansion search initial public release license search symbolic critical identation compliance default specific language broken logger hidden practice network matching compatible documentation changelog example common decorator unparseable function allow pexpect public release common behavior injection feature software documentation license version communication making absolute communication library servicesapi feature possess variable proper exception common enterprise development attribute injection rollback routine pytest specific module version requirement logging functionality reference documentation applicable check identifier available capable history several relative building internal license copyright properly python express directory topology modular manipulation subfolder unexpected information platform object vtysh context manager documentation pexpect reachable", "pypi_keywords_clean": "topology"}, "/demjson": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "standard checking comprehensive implementation support programming javascript portability included useful library", "pypi_keywords_clean": "json jsonlint javascript utf"}, "/push-notifications": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "sony/nnabla": {"git_readme_keywords": "network console network construction introduction computation classification platform python backend technology inference productivity extension multiple expressive extensible utility memory optimization acceleration flexible runtime network development command network available capable template generating embedded version extension library parameter manipulation production sophisticated example framework nnabla runtime library python dynamic computation specialized number training flexible tutorial computation efficient paradigms learning framework converter repository following architecture functionality training generating system docker dynamic graphs flexibility dataset jupyter notebook support documentation documentation building training evaluation desktop contribution documentation portable runtime network development installation research development runtime runtime following functionality progressing deployable", "git_description_clean": "neural network libraries", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": "deep learning artificial intelligence machine learning neural network"}, "/jupyterlab-launcher": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "jupyterlab application", "pypi_keywords_clean": "jupyter jupyterlab"}, "platypus-creation/django-draft": {"git_readme_keywords": "creation button available knowledge support grappelli installation javascript database serialized current draftadmin modeladmin query compatible installed", "git_description_clean": "draft in admin", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "nvie/pluck": {"git_readme_keywords": "package default field sex traceback sex unknown iterable version pluck return way pluck multiple pluck import unknown female iterator plural keyword exception usage pluck ipluck female unknown datetime pluck single pluck pluck iterable bob charlie hour unknown charlie order getter recent equivalent pluck py keyword argument female bob pluck pluck import pluck nothing dictionary default unknown bob unknown valueerror sex default datetime datetime simple example access ipluck iterable iterable module", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "package default field python compatibility iterable version pluck return pluck multiple pluck import iterator plural keyword pluck ipluck history datetime pluck single pluck pluck iterable bob charlie hour unknown charlie order getter exception recent equivalent pluck py keyword argument pluck pluck documentation initial import pluck nothing dictionary default unknown bob unknown initial release traceback valueerror datetime datetime simple example access ipluck iterable iterable module", "pypi_keywords_clean": ""}, "/colorbrewer": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "python program", "pypi_keywords_clean": ""}, "djaodjin/djaodjin-answers": {"git_readme_keywords": "django project djaodjin upvoted django", "git_description_clean": "django app for q site", "git_keywords_clean": "", "pypi_description_keywords": "django project djaodjin upvoted django", "pypi_keywords_clean": ""}, "socialwifi/routeros-api": {"git_readme_keywords": "python mikrotik example", "git_description_clean": "python api to routerboard devices produced by mikrotik", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "internetarchive/surt": {"git_readme_keywords": "information suffix status transform webarchive python package module version installation archive original", "git_description_clean": "sort friendly uri reordering transform surt python module", "git_keywords_clean": "", "pypi_description_keywords": "information suffix status transform webarchive python package module version installation archive original", "pypi_keywords_clean": ""}, "ddanier/django-ajax": {"git_readme_keywords": "original view view javascript response implemented utility template authentcation information multiple context processor render js context model ajax config cache utility output ajax cache context example structure view function session django ajax context js function various object ajax nothing general render various syntax ajax ajax ajax ajax login work browser object template method caching decorator utility function static", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "original view view javascript response implemented utility template authentcation information multiple context processor render js context model ajax config cache utility output ajax cache context example structure view function session django ajax context js function various object ajax nothing general render various syntax ajax ajax ajax ajax login work browser object template method caching decorator utility function static", "pypi_keywords_clean": ""}, "nvictus/pqdict": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "hashable implementation insertion standard library location license python standard hybrid dictionary available pqdict priority python pypy dictionary priority raymond hettinger removal dictionary pqdict result pqdict updating priority documentation documentation augmented search lookup module documentation status", "pypi_keywords_clean": "dict priority queue heap scheduler data structures"}, "/aspen-jinja2": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}, "jrief/django-angular": {"git_readme_keywords": "django angular perform message javascript manage django sekizai postprocessor response readthedocs invalid djangorestframework server transition endpoint promise angularjs controller project applcaiton support validation documentation seamless integration similar future downstream change deprecated static controller version angularjs sekizai templatetag license copyright content backward incompatibility format status rejected something element usable customized controller server rejected angularjs version compliant unsure angularjs directive upload directive usable directive future roadmap", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "django angular perform message javascript manage django sekizai postprocessor response readthedocs invalid djangorestframework server transition endpoint promise angularjs controller project support validation documentation seamless integration similar future downstream change deprecated static controller version sekizai templatetag angularjs backward license copyright content backward incompatibility format status rejected something element usable customized controller server rejected angularjs version compliant unsure angularjs directive upload directive usable directive future roadmap", "pypi_keywords_clean": "django angularjs"}, "albertz/better-exchook": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "comprehensive overview foo nameerror syntax highlighting default python example python import image similar sys recent call frame info foo xfde ipython xdfc sys sys stdin nameerror global typeerror finalfail sys exchook py project stdin class lambda argument support single install sys module exc info sys exc screenshot image output frame syntax available info z installation stack frame exception traceback stackoverflow question python something similar multiline class sys python source function question albert python output exchook usage function exc albert zeyer nicer drop useful information image screencast exchook nicer x relevant module sys y nameerror stack extended information formated output exchook install replacement further", "pypi_keywords_clean": ""}, "synbiochem/libchebipy": {"git_readme_keywords": "libchebipy libchebipy available libchebipy python", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "libchebipy database", "pypi_keywords_clean": "chemistry cheminformatics chebi"}, "lgastako/db-sqlite3": {"git_readme_keywords": "", "git_description_clean": "", "git_keywords_clean": "", "pypi_description_keywords": "", "pypi_keywords_clean": ""}}