{"jorgebastida/glue": {"all_keywords": "glue   glue sprites css cocosd css sprites features-automatic-sprite-image feature making make use format new-formats images-configurable binary users user cocosd creation configuration guide-contribute command-line gif glue command-line"}, "svanoort/pyresttest": {"all_keywords": "pyresttest   rest web http testing testing tested tool-tests install installed installing benchmarks python installation-sample-test-examples features feature pyresttest optional option times time use useful released release releases benchmarking-metrics-benchmark-report-formats-rpm data variable-uses configuration configure request requests response responsible urls pycurl-pyyaml-optionally-future custom-http-options validators validated api apis variables values value curl-settings sets setting include included includes including set-syntax-import-example-url raw running run metric responses-templating element elements json-validation yaml output version versioning samples style branch branches format extraction supports-generate-extract-validate cases case warmup-runs aggregated aggregate aggregates need needs package packages simple debian-sudo default curlopt code-needed command libcurl breaking extensible extensions extension documentation document perform performance files file support supported logs log tools contents content project eventually try trying tries returns return codes reported generators imports important imported complex complexity restful"}, "DanielJDufour/date-extractor": {"all_keywords": "date-extractor   data datetime extraction python tagging date dates use versions test turkish-testing"}, "/labyrinth": {"all_keywords": "labyrinth    labyrinth python"}, "/pygal": {"all_keywords": "pygal   svg"}, "csparpa/pyowm": {"all_keywords": "pyowm   openweathermap web api client weather forecast uv alerting owm pollution meteostation agro agriculture apis weather-api pyowm owm python package packaging openweathermap providing provided provide contributing alerts arch imagery check friendly documentation data zypper-opensuse subscription model models allows allowing allow md throttling client-python-wrapper-library"}, "pyexcel-renderers/pyexcel-handsontable": {"all_keywords": "pyexcel-handsontable a pyexcel plugin to render data as handsontable in html pages html handsontable python testing tests test tested pyexcel-handsontable handsontables develop developer development code license update updated excel installation install coding-documentation data rst file pip support supported requirements required like moban acceptance ci generating clone added html changes-git change"}, "/pytorch": {"all_keywords": "pytorch"}, "hakanzy/django-system-monitor": {"all_keywords": "django-system-monitor    usage installation install installed supports psutil-supported add django tuna hakan windows"}, "nongiach/exall": {"all_keywords": "exall   exception exall callback callbacks code exception exceptions c print"}, "/hookbox": {"all_keywords": "hookbox"}, "/pysmt": {"all_keywords": "pysmt    solver solvers pysmt real lib theory theories lira formula way smt-formulae python wanna vectors"}, "googleapis/grpc-google-iam-admin-v1": {"all_keywords": "grpc-google-iam-admin-v1    v grpc"}, "celery/librabbitmq": {"all_keywords": "librabbitmq python bindings to librabbitmq c python c amqp amqp amqp client library  python-amqp downloading consuming library-version-download rabbitmq shiftwidth"}, "/scikits-cuda": {"all_keywords": "scikits-cuda   cuda nvidia pycuda gpu"}, "rodluger/k2plr": {"all_keywords": "k2plr    pythonic enables"}, "GoogleCloudPlatform/google-auth-httplib2": {"all_keywords": "google-auth-httplib2   google auth oauth client httplib auth installing install"}, "Pythonity/icon-font-to-png": {"all_keywords": "icon-font-to-png python script and library for exporting icons from icon fonts e g font awesome octicons as png images python font awesome octicons command line tool icon font icon font export font awesome octicons icons python pythonity icon-font awesome export fonts packages feel installation install x tests-package directly source arguments original wojciechowski tested thanks-authors github icons icon-font export awesome test tested fonts shell tests-package add version-python-versions packages x code arguments feel directly installation install"}, "/pyspotify": {"all_keywords": "pyspotify    alt music python spotify tracks track applications library libraries projects project metadata x-windows pypy pypi pyspotify deprecation deprecated"}, "datamade/highered": {"all_keywords": "highered"}, "/flask-rq2": {"all_keywords": "flask-rq2    code rq-alt python block status"}, "rafaelcaricio/tornado-pyvows": {"all_keywords": "tornado-pyvows   testing vows test tdd web"}, "blackleg/ree": {"all_keywords": "ree    red-elctrica"}, "/django-activitysync": {"all_keywords": "django-activitysync   django social activity application twitter reddit google reader activities django-activity providing providers provider provides items item setting python activitysync settings-py-installed twitter-reddit like likely create creating installation template manage management-command run add-support supports admins admin interface"}, "idlesign/django-siteblocks": {"all_keywords": "django-siteblocks    siteblocks siteblock lbc-python urls dynamic functions different"}, "ikeikeikeike/tastypie-queryset-client-p3k": {"all_keywords": "tastypie-queryset-client-p3k   tastypie client django rest api tastypie-queryset-client license"}, "mfogel/django-timezone-field": {"all_keywords": "django-timezone-field    fields django-timezone-field timezones support change changed python add formating format root originally"}, "mrf345/flask-fontpicker": {"all_keywords": "flask-fontpicker   flask ui extension inside flask-fontpicker consuming pickers font-picker flask-fontpicker extension"}, "edwardgeorge/virtualenv-clone": {"all_keywords": "virtualenv-clone    paths path virtualenv link environment python copied copies packages present script scripts"}, "Ch00k/ffmpy": {"all_keywords": "ffmpy   ffmpeg ffprobe wrapper audio video transcoding pythonic python ffmpy alt command-line video example examples compilation compiled"}, "ContinuumIO/into": {"all_keywords": "into   into data conversion hdf sql blaze containers container data functions function pythonic type types python-documentation-example dataset datasets status new e index errors approach existing exist costs method dataframe-cost user numpy node nodes"}, "/clubsandwich": {"all_keywords": "clubsandwich   bearlibterminal roguelike python code script simple c-api clubsandwich features feature like-terminal image images state-management development manages installation install file png"}, "hamelsmu/ktext": {"all_keywords": "ktext    tokenize token tokens documentation documents document remove installation install hello processing process like cleaning-tokenization-padding words utilities utility sklearn computing usually consider clean pad allows generating"}, "matthew-brett/delocate": {"all_keywords": "delocate    libraries wheel wheels library-dependencies architecture required-architectures installation installed install code tells python warning like likely directory copy copies copied requires osx distribute distribution-kindly version versions released depends depending dependency"}, "sigmaris/python-gssapi": {"all_keywords": "python-gssapi   gssapi kerberos python-gssapi support c memory python-gssapi kerberos oriented mechanisms mechanism project pythonic interface binding bindings including credentials authentication"}, "mixmastamyk/console": {"all_keywords": "console   ansi color detection escape terminal console sequence cursor style screen shell xterm colors color codes palette code-block-python styles string strings palettes-break escape haha m installed install templating templates template hex-command party-like x resets named composability composable categories choose sie form forms breaking reasons-simply compatible-terminals terminal demos object objects"}, "Unidata/metpy": {"all_keywords": "metpy metpy is a collection of tools in python for reading visualizing and performing calculations with weather data python atmospheric science meteorology weather plotting scientific computations hodograph skew t meteorology weather code coding alt python source metpy-license-gitter package packages gempak write writing weather-data issues issue contribute contributing contribution contributions docs-pypi documentation documented voice giving good easily library project-like calculations calculate calculation meteorological meteorology projections projects application scrutinizer support codacy status enum space-metpy-aims"}, "/uw-tools": {"all_keywords": "uw-tools   unfoldingword python tools scripts"}, "/repoze-what-quickstart": {"all_keywords": "repoze-what-quickstart   web application wsgi server sql sqlalchemy elixir authentication authorization repoze repoze configures plugin"}, "eliangcs/bisheng": {"all_keywords": "bisheng    utility-functions traditional add"}, "/nxt-python": {"all_keywords": "nxt-python    nxt-python sensor sensors work working tested test code releases release communicate communications communication new address firmware firmwares incorrect-values specific specifications usb somewhat help struct value wrong stable strange read motor motors problems problem arduino thanks supported support supports lego registers register requirements required v classes class fantom old-program programming"}, "tcalmant/javaobj-py3": {"all_keywords": "javaobj-py3   python java marshalling serialization object java-objects python alt unmarshaling data status unmarshalling unmarshaller buell-originally original bytes warning code version"}, "/pyalgotrade": {"all_keywords": "pyalgotrade    library"}, "Stranger6667/postmarker": {"all_keywords": "postmarker   postmark api client email python email status api postmarker-alt documentation send sending example new bounces bounce check"}, "taichino/jcconv": {"all_keywords": "jcconv   japanese converter hiragana katakana half width kana half check wide encoding-simple"}, "tiarno/plastex": {"all_keywords": "plastex   html latex xml github-page complete-view default document-processing-framework-written"}, "thoas/python-leetchi": {"all_keywords": "python-leetchi   leetchi api rest users wallets contributions formely requests-pycrypto add added fix requests request resource resources signal signals error errors converter convert date-converted attribute attributes objects object python handle handling contribution-payment model models planquart inspiration inspired keys removed exceptions thanks type save answer host api"}, "gdub/simpleldap": {"all_keywords": "simpleldap   ldap simple simpleldap ldap users user manager-e examples example method connections connect connection"}, "/messytables": {"all_keywords": "messytables    library-provides tabular-data"}, "/twitter": {"all_keywords": "twitter   twitter irc command line tools web python-twitter-tools oauth tweets tweet api stream streams objects object direct formats format function-directly follow following followers follows data code codes status returned return returns command-line-tool lists list listed offsite maximum connection connect attributes parameter user users com commands functions decoded yields yield write irc raw posted posting useful uses use"}}