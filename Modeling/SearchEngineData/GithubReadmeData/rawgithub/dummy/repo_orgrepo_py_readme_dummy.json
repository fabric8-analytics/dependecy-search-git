{"argchecker": ["tasogarepg/argchecker", "# argchecker\n\nA command line options parser for Node.js.\n\n## Installation\n\n    $ npm install argchecker\n\n## Usage\n```js\n#!/usr/bin/env node\n\nvar ac = require('argchecker').check({\n  expect: {\n    '-a': {},\n    '-l': {param: 'LOG_FILE', default: 'log.txt'},\n    'arg1': {},\n    'arg2': {must: true}\n  }\n});\n\n// When invalid arg comes from command line, this script shows the usage information, and exit here.\n\nvar log = ac.get('-l');       // get '-l' option's param\n\nvar arg1 = ac.get('arg1');    // get non option args\nvar arg2 = ac.get('arg2');    // \n\nif (ac.isOn('-a')) {          // check '-a' option\n  // ...\n}\n```\n\n### Example\nin command line\n\n    $ app2 -a -l log1.txt XXX YYY\n\napp2\n```js\n#!/usr/bin/env node\n\nvar ac = require('argchecker').check({\n  expect: {\n    '-a': {},\n    '-l': {param: 'LOG_FILE'},\n    'arg1': {},\n    'arg2': {}\n  }\n});\n\nvar log = ac.get('-l');     // log1.txt\n\nvar arg1 = ac.get('arg1');  // XXX\nvar arg2 = ac.get('arg2');  // YYY\n\nif (ac.isOn('-a')) {        // true\n  // ...\n}\n```\n\n## Tags\n### repeat\nin command line\n\n    app3 -a -l log1.txt XXX1 XXX2 XXX3 YYY\n\napp3\n```js\n#!/usr/bin/env node\n\nvar ac = require('argchecker').check({\n  expect: {\n    '-a': {},\n    '-l': {param: 'LOG_FILE'},\n    'arg1': {repeat: true},     // <-- set 'repeat'\n    'arg2': {}\n  }\n});\n\nvar arg1 = ac.get('arg1');    // [XXX1, XXX2, XXX3]\nvar arg2 = ac.get('arg2');    // YYY\n```\n\n### repeat (for option)\nin command line\n\n    $ app4 -b 10 -b 20 -b 30 XXX\n\napp4\n```js\n#!/usr/bin/env node\n\nvar ac = require('argchecker').check({\n  expect: {\n    '-b': {param: 'B_PARAM', repeat: true},   // <-- set 'repeat'\n    'arg1': {},\n    'arg2': {}\n  }\n});\n\nvar b = ac.get('-b');       // [10, 20, 30]\n\nvar arg1 = ac.get('arg1');  // XXX\nvar arg2 = ac.get('arg2');  // undefined\n```\n\n### must\nin command line\n\n    $ app5 -b 10 YYY\n\napp5\n```js\n#!/usr/bin/env node\n\nvar ac = require('argchecker').check({\n  expect: {\n    '-b': {param: 'B_PARAM'},\n    'arg1': {},\n    'arg2': {must: true}    // <-- set 'must'\n  }\n});\n\nvar b = ac.get('-b');       // 10\n\nvar arg1 = ac.get('arg1');  // undefined  <-- skiped\nvar arg2 = ac.get('arg2');  // YYY        <-- must\n```\n\n## Other tags\n\n### param (for option)\nYou **have to** set this tag, when an option has a next parameter.\n```js\nvar ac = require('argchecker').check({\n  expect: {\n    '-l': {param: 'LOG_FILE'}     // <-- \n  }\n});\n```\n\n### default (for option)\nThis tag can be set when the \"param\" tag exists.\n```js\nvar ac = require('argchecker').check({\n  expect: {\n    '-l': {param: 'LOG_FILE', default: 'log.txt'},    // <-- \n    'arg1': {must: true}\n  }\n});\n```\n\n### solo (for option)\nIf 'solo' tag's option comes, all other 'must' tags are not checked.\n```js\nvar ac = require('argchecker').check({\n  expect: {\n    '-v': {solo: true},   // <-- \n    'arg1': {must: true}\n  }\n});\n```\n\n### name (top level only)\n\"name\" is used in the usage information.\n```js\nvar ac = require('argchecker').check({\n  expect: {\n    '-b': {param: 'B_PARAM'},\n  },\n  name: 'app_name'  // <-- \n});\n```\nin stderr message\n\n    Usage: app_name [-b B_PARAM]\n\n### exit (top level only)\nThe status code at the time of an error. Default: 1\n```js\nvar ac = require('argchecker').check({\n  expect: {\n    '-b': {param: 'B_PARAM'},\n  },\n  name: 'app_name',\n  exit: 20          // <-- \n});\n```\n\n## License\n\nThe MIT License\n"], "tensorflow": ["tensorflow/tensorflow", "<div align=\"center\">\n  <img src=\"https://www.tensorflow.org/images/tf_logo_social.png\">\n</div>\n\n-----------------\n\n\n| **`Documentation`** |\n|-----------------|\n| [![Documentation](https://img.shields.io/badge/api-reference-blue.svg)](https://www.tensorflow.org/api_docs/) |\n\n**TensorFlow** is an open source software library for numerical computation\nusing data flow graphs. The graph nodes represent mathematical operations, while\nthe graph edges represent the multidimensional data arrays (tensors) that flow\nbetween them. This flexible architecture enables you to deploy computation to\none or more CPUs or GPUs in a desktop, server, or mobile device without\nrewriting code. TensorFlow also includes\n[TensorBoard](https://github.com/tensorflow/tensorboard), a data visualization\ntoolkit.\n\nTensorFlow was originally developed by researchers and engineers\nworking on the Google Brain team within Google's Machine Intelligence Research\norganization for the purposes of conducting machine learning and deep neural\nnetworks research.  The system is general enough to be applicable in a wide\nvariety of other domains, as well.\n\nTensorFlow provides stable Python and C APIs as well as non-guaranteed backwards\ncompatible API's for C++, Go, Java, JavaScript, and Swift.\n\nKeep up to date with release announcements and security updates by\nsubscribing to\n[announce@tensorflow.org](https://groups.google.com/a/tensorflow.org/forum/#!forum/announce).\n\n## Installation\n\nTo install the current release for CPU-only:\n\n```\npip install tensorflow\n```\n\nUse the GPU package for CUDA-enabled GPU cards:\n\n```\npip install tensorflow-gpu\n```\n\n*See [Installing TensorFlow](https://www.tensorflow.org/install) for detailed\ninstructions, and how to build from source.*\n\nPeople who are a little more adventurous can also try our nightly binaries:\n\n**Nightly pip packages** * We are pleased to announce that TensorFlow now offers\nnightly pip packages under the\n[tf-nightly](https://pypi.python.org/pypi/tf-nightly) and\n[tf-nightly-gpu](https://pypi.python.org/pypi/tf-nightly-gpu) project on PyPi.\nSimply run `pip install tf-nightly` or `pip install tf-nightly-gpu` in a clean\nenvironment to install the nightly TensorFlow build. We support CPU and GPU\npackages on Linux, Mac, and Windows.\n\n#### *Try your first TensorFlow program*\n\n```shell\n$ python\n```\n\n```python\n>>> import tensorflow as tf\n>>> tf.enable_eager_execution()\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\n'Hello, TensorFlow!'\n```\n\nLearn more examples about how to do specific tasks in TensorFlow at the\n[tutorials page of tensorflow.org](https://www.tensorflow.org/tutorials/).\n\n## Contribution guidelines\n\n**If you want to contribute to TensorFlow, be sure to review the [contribution\nguidelines](CONTRIBUTING.md). This project adheres to TensorFlow's\n[code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to\nuphold this code.**\n\n**We use [GitHub issues](https://github.com/tensorflow/tensorflow/issues) for\ntracking requests and bugs, please see\n[TensorFlow Discuss](https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss)\nfor general questions and discussion, and please direct specific questions to\n[Stack Overflow](https://stackoverflow.com/questions/tagged/tensorflow).**\n\nThe TensorFlow project strives to abide by generally accepted best practices in open-source software development:\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1486/badge)](https://bestpractices.coreinfrastructure.org/projects/1486)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](code-of-conduct.md)\n\n## Continuous build status\n\n### Official Builds\n\n| Build Type      | Status | Artifacts |\n| ---             | ---    | ---       |\n| **Linux CPU**   | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html) | [pypi](https://pypi.org/project/tf-nightly/) |\n| **Linux GPU**   | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html) | [pypi](https://pypi.org/project/tf-nightly-gpu/) |\n| **Linux XLA**   | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html) | TBA |\n| **MacOS**       | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html) | [pypi](https://pypi.org/project/tf-nightly/) |\n| **Windows CPU** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html) | [pypi](https://pypi.org/project/tf-nightly/) |\n| **Windows GPU** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html) | [pypi](https://pypi.org/project/tf-nightly-gpu/) |\n| **Android**     | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html) | [![Download](https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg)](https://bintray.com/google/tensorflow/tensorflow/_latestVersion) |\n| **Raspberry Pi 0 and 1** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.html) [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html) | [Py2](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv6l.whl) [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl) |\n| **Raspberry Pi 2 and 3** | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.html) [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html) | [Py2](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv7l.whl) [Py3](https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl) |\n\n\n### Community Supported Builds\n\nBuild Type                                                                        | Status                                                                                                                                                                                        | Artifacts\n--------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**IBM s390x**                                                                     | [![Build Status](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/badge/icon)](http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/)                                                             | TBA\n**Linux ppc64le CPU** Nightly                                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/)\n**Linux ppc64le CPU** Stable Release                                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/)                       | [Release](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/)\n**Linux ppc64le GPU** Nightly                                                     | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/)                                       | [Nightly](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/)\n**Linux ppc64le GPU** Stable Release                                              | [![Build Status](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/badge/icon)](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/)                       | [Release](https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/)\n**Linux CPU with Intel\u00ae MKL-DNN** Nightly                                         | [![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-linux-cpu/badge/icon)](https://tensorflow-ci.intel.com/job/tensorflow-mkl-linux-cpu/)                                     | [Nightly](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/)\n**Linux CPU with Intel\u00ae MKL-DNN** <br> **Supports Python 2.7, 3.4, 3.5, and 3.6** | [![Build Status](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/badge/icon)](https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/lastStableBuild)      | [1.13.1 pypi](https://pypi.org/project/intel-tensorflow/)\n**Red Hat\u00ae Enterprise Linux\u00ae 7.6 CPU & GPU** <br> Python 2.7, 3.6                 | [![Build Status](https://jenkins-tensorflow.apps.ci.centos.org/buildStatus/icon?job=tensorflow-rhel7-3.6&build=2)](https://jenkins-tensorflow.apps.ci.centos.org/job/tensorflow-rhel7-3.6/2/) | [1.13.1 pypi](https://tensorflow.pypi.thoth-station.ninja/index/)\n\n## For more information\n\n*   [TensorFlow Website](https://www.tensorflow.org)\n*   [TensorFlow Tutorials](https://www.tensorflow.org/tutorials/)\n*   [TensorFlow Model Zoo](https://github.com/tensorflow/models)\n*   [TensorFlow Twitter](https://twitter.com/tensorflow)\n*   [TensorFlow Blog](https://medium.com/tensorflow)\n*   [TensorFlow Course at Stanford](https://web.stanford.edu/class/cs20si)\n*   [TensorFlow Roadmap](https://www.tensorflow.org/community/roadmap)\n*   [TensorFlow White Papers](https://www.tensorflow.org/about/bib)\n*   [TensorFlow YouTube Channel](https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ)\n*   [TensorFlow Visualization Toolkit](https://github.com/tensorflow/tensorboard)\n\nLearn more about the TensorFlow community at the [community page of tensorflow.org](https://www.tensorflow.org/community) for a few ways to participate.\n\n## License\n\n[Apache License 2.0](LICENSE)\n"], "FriendsCoreDataCoding": ["tema-orange/FriendsCoreDataCoding", ""], "abc_repo": ["/abc_repo", ""]}